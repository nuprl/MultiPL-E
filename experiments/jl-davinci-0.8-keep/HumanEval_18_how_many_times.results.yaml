name: HumanEval_18_how_many_times
language: jl
results:
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    # YOUR CODE HERE\n    global count\n    count = 0\n    for i in 1:length(string)\n\
    \        if string[i] == substring[1]\n            if string[i:i+length(substring)-1]\
    \ == substring[2:end]\n                count += 1\n            end\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmprj_hoytc.jl:28\\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\\n   Evaluated: 0 == 4\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmprj_hoytc.jl:28 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmprj_hoytc.jl:26\\ntest set: '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    return length(findall(substring,\
    \ string))\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqnkls27b.jl:22\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqnkls27b.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqnkls27b.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqnkls27b.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == \"\"\n        return 0\n    end\n    if substring == \"\"\
    \n        return 1\n    end\n    count = 0\n    for i = 1:length(string)\n   \
    \     if string[i:i+length(substring)-1] == substring\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa1vlt241.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpa1vlt241.jl:18\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpa1vlt241.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpa1vlt241.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpa1vlt241.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpa1vlt241.jl:18\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpa1vlt241.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpa1vlt241.jl:28\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa1vlt241.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0 \n    n = length(string)\n    k = length(substring)\n    for\
    \ i = 1:n-k+1\n        if string[i:i+k-1] == substring\n            count += 1\n\
    \        end\n    end\n    return count\nend \nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i = 1:length(string) - length(substring) + 1\n    \
    \    if string[i:i+length(substring)-1] == substring\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) > length(string)\n        return 0\n    end\n   \
    \ counter = 0\n    start = 1\n    while start < length(string)\n        end =\
    \ start + length(substring) - 1\n        if end <= length(string)\n          \
    \  if substring == string[start:end]\n                counter += 1\n         \
    \   end\n        end\n        start += 1\n    end\n    return counter\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdry4mf5q.jl:17\nin expression starting at /tmp/tmpdry4mf5q.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    times = 0\n    for i = 1:length(string)\n        if string[i:end] == substring\n\
    \            times += 1\n        end\n    end\n    return times\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpado2xfa2.jl:24\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpado2xfa2.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpado2xfa2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpado2xfa2.jl:25\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpado2xfa2.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpado2xfa2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpado2xfa2.jl:26\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpado2xfa2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpado2xfa2.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpado2xfa2.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    length = length(substring)\n    count = 0\n    for i in 0:length(string)-length+1\n\
    \        if string[i+1:i+length] == substring\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfoamjf5q.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  UndefVarError: length\
    \ not defined\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmpfoamjf5q.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfoamjf5q.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpfoamjf5q.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpfoamjf5q.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  UndefVarError: length not defined\\n\
    \  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmpfoamjf5q.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfoamjf5q.jl:25 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpfoamjf5q.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpfoamjf5q.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  UndefVarError: length not defined\\\
    n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmpfoamjf5q.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfoamjf5q.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpfoamjf5q.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpfoamjf5q.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  UndefVarError: length not defined\\\
    n  Stacktrace:\\n  "
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpfoamjf5q.jl:21\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    start = 1\n    how_many\
    \ = 0\n    while true\n        start = findnext(string, substring, start)\n  \
    \      if start == nothing\n            break\n        end\n        how_many +=\
    \ 1\n        start += 1\n    end\n    return how_many\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_tuhtwfh.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  MethodError: no method\
    \ matching +(::UnitRange{Int64}, ::Int64)\\n  For element-wise addition, use broadcasting\
    \ with dot syntax: array .+ scalar\\n  Closest candidates are:\\n    +(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\\\
    n    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\\\
    n    ...\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmp_tuhtwfh.jl:21\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp_tuhtwfh.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp_tuhtwfh.jl:29\\ntest set:\
    \ Test Failed at /tmp/tmp_tuhtwfh.jl:31\\n  Expression: candidate(\"xyxyxyx\"\
    , \"x\") == 4\\n   Evaluated: 0 == 4'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    cnt = 0\n    while\
    \ true\n        k = findfirst(string, substring)\n        if isnothing(k)\n  \
    \          break\n        end\n        cnt += 1\n        string = string[k+1:end]\n\
    \    end\n    return cnt\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpu79ffzkt.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  MethodError: no method\
    \ matching +(::UnitRange{Int64}, ::Int64)\\n  For element-wise addition, use broadcasting\
    \ with dot syntax: array .+ scalar\\n  Closest candidates are:\\n    +(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\\\
    n    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\\\
    n    ...\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmpu79ffzkt.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpu79ffzkt.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpu79ffzkt.jl:28\\ntest set:\
    \ Test Failed at /tmp/tmpu79ffzkt.jl:30\\n  Expression: candidate(\"xyxyxyx\"\
    , \"x\") == 4\\n   Evaluated: 0 == 4'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if isempty(substring) || substring == string\n        return 1\n    end\n\
    \    occurrence = 0\n    for i = 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            occurrence += 1\n        end\n    end\n    return\
    \ occurrence\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4hytc73j.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp4hytc73j.jl:15\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4hytc73j.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4hytc73j.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp4hytc73j.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp4hytc73j.jl:15\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4hytc73j.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4hytc73j.jl:25\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4hytc73j.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\" \n        return 0\n    end \n    times = 0\n   \
    \ for i in 1:length(string)\n        if substring == string[i:i+length(substring)-1]\n\
    \            times += 1\n        end\n    end\n    return times\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg3zxf5mf.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpg3zxf5mf.jl:15\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpg3zxf5mf.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpg3zxf5mf.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpg3zxf5mf.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpg3zxf5mf.jl:15\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpg3zxf5mf.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpg3zxf5mf.jl:25\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg3zxf5mf.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string) - length(substring) + 1\n   \
    \     if string[i:i+length(substring)-1] == substring\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    sz = length(substring)\n    cnt = 0\n    for i = 1:length(string)\n  \
    \      if string[i:i+sz-1] == substring\n            cnt += 1\n        end\n \
    \   end\n    return cnt\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcg1_bi95.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpcg1_bi95.jl:13\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpcg1_bi95.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpcg1_bi95.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpcg1_bi95.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpcg1_bi95.jl:13\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpcg1_bi95.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpcg1_bi95.jl:23\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcg1_bi95.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    \n    if length(substring) > length(string)\n        return 0\n    end\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsi4kv9ai.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsi4kv9ai.jl:1\n\
    in expression starting at /tmp/tmpsi4kv9ai.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    i = 1\n    while i <= length(string) - length(substring)\
    \ + 1\n        if string[i:i+length(substring)-1] == substring\n            count\
    \ += 1\n        end\n        i += 1\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiozy32ay.jl:19\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiozy32ay.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiozy32ay.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpiozy32ay.jl:20\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiozy32ay.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiozy32ay.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpiozy32ay.jl:21\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiozy32ay.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiozy32ay.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiozy32ay.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    i = 0\n    count = 0\n    while i < length(string)\n        if string[i]\
    \ == substring[1]\n            if string[i:i+length(substring)] == substring\n\
    \                count += 1\n            end\n        end\n        i += 1\n  \
    \  end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmphoz7ueil.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"xyxyxyx\", \"x\") == 4\\n  BoundsError:\
    \ attempt to access 7-codeunit String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\\
    n     @ ./strings/basic.jl:216 [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102\
    \ [inlined]\\n   [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n  \
    \ [4] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmphoz7ueil.jl:13\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmphoz7ueil.jl:28 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmphoz7ueil.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmphoz7ueil.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError: attempt to access 9-codeunit\
    \ String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inlined]\\n   [4] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmphoz7ueil.jl:13\\n   [5] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [6] macro expansion\\n     @ /tmp/tmphoz7ueil.jl:29 [inlined]\\\
    n   [7] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmphoz7ueil.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmphoz7ueil.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [0]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] codeunit\\n     @ ./strings/string.jl:102 [inlined]\\n  \
    \ [3] getindex\\n     @ ./strings/string.jl:223 [inline"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    j = 0\n    count = 0\n    for i in 1:length(string)\n        if string[i]\
    \ == substring[j]\n            j += 1\n            if j == length(substring)\n\
    \                count += 1\n                j = 0\n            end\n        else\n\
    \            j = 0\n        end\n    end\n    return count\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\")\
    \ == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjhbod3kn.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  BoundsError: attempt to access\
    \ 1-codeunit String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmpjhbod3kn.jl:13\n   [5] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpjhbod3kn.jl:31 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpjhbod3kn.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpjhbod3kn.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt to access 3-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmpjhbod3kn.jl:13\n   [5] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpjhbod3kn.jl:32 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpjhbod3kn.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpjhbod3kn.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 4-codeunit\
    \ String at index [0]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3]\
    \ getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] how_many_times(string::String,\
    \ substring::St"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjhbod3kn.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    \n    string_length = length(string)\n    substring_length = length(substring)\n\
    \    \n    if string_length == 0 || substring_length == 0 || substring_length\
    \ > string_length\n        return 0\n    end\n    \n    # this is the way to select\
    \ all elements in an array, otherwise you need a loop\n    # [i+1:string_length-substring_length+1]\
    \ makes a subarray of all indexes where you can find a substring\n    sub_strings\
    \ = [string[i+1:string_length-substring_length+1] for i in 1:string_length-substring_length]\n\
    \    \n    # count how many of the substrings are equal to the substring. \n \
    \   # The ! operator means that you're in a comprehension, which is short for\
    \ a for loop\n    return count(!(substring .== x) for x in sub_strings)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpzycyzhx9.jl:32\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 5 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzycyzhx9.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzycyzhx9.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpzycyzhx9.jl:33\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 5 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzycyzhx9.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzycyzhx9.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpzycyzhx9.jl:34\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 4 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzycyzhx9.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzycyzhx9.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzycyzhx9.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    \n    n = length(string)\n    m = length(substring)\n    if n == 0\n \
    \       return 0\n    end\n    count = 0\n    for i = 1:n-m+1\n        if string[i:i+m-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i = 1:length(string)\n        if occursin(substring,\
    \ string[i:end])\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmptzs1udrh.jl:24\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 7 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptzs1udrh.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptzs1udrh.jl:22\ntest set: Test\
    \ Failed at /tmp/tmptzs1udrh.jl:25\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 7 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptzs1udrh.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptzs1udrh.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptzs1udrh.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == \"\" || substring == \"\"\n        return 0\n    end\n  \
    \  if length(substring) == 1\n        return length(string)\n    end\n    times\
    \ = 0\n    while length(string) > length(substring)\n        if string[1:length(substring)]\
    \ == substring\n            times += 1\n        end\n        string = string[2:end]\n\
    \    end\n    return times\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvv0wdkom.jl:31\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 7 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvv0wdkom.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvv0wdkom.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpvv0wdkom.jl:32\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 3 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvv0wdkom.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvv0wdkom.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvv0wdkom.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    return (length(string)\
    \ - length(replace(string, substring))) / length(substring)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfoj5dzd6.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  MethodError: no method\
    \ matching replace(::String, ::String)\\n  Closest candidates are:\\n    replace(!Matched::Union{Function,\
    \ Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\\
    n    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    ...\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmpfoj5dzd6.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfoj5dzd6.jl:20 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpfoj5dzd6.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpfoj5dzd6.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  MethodError: no method matching replace(::String,\
    \ ::String)\\n  Closest candidates are:\\n    replace(!Matched::Union{Function,\
    \ Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\\
    n    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    ...\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmpfoj5dzd6.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfoj5dzd6.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n  "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    \n    if string == \"\" || substring == \"\"\n        return 0\n    end\n\
    \    \n    return how_many_times(string[2:end], substring) + (string[1] == substring[1]\
    \ ? how_many_times(string[2:end], substring[2:end]) + 1 : 0)\n    \nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpo2e8cvcq.jl:25\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 35 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2e8cvcq.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2e8cvcq.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpo2e8cvcq.jl:26\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 5 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2e8cvcq.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2e8cvcq.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo2e8cvcq.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp2as3goge.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp2as3goge.jl:12\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp2as3goge.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp2as3goge.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp2as3goge.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp2as3goge.jl:12\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp2as3goge.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp2as3goge.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2as3goge.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    substring_length = length(substring)\n    if substring_length > length(string)\
    \ || length(string) == 0 || length(substring) == 0\n        return 0\n    end\n\
    \    return count(string, substring) + how_many_times(string[2:end], substring)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpha44l7rp.jl:22\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpha44l7rp.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpha44l7rp.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpha44l7rp.jl:23\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpha44l7rp.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpha44l7rp.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpha44l7rp.jl:24\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpha44l7rp.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpha44l7rp.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpha44l7rp.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == substring\n        return 1\n    end\n    if substring ==\
    \ \"\"\n        return 0\n    end\n    if string == \"\"\n        return 0\n \
    \   end\n    a = length(string)\n    b = length(substring)\n    counter = 0\n\
    \    for i in 1:a-b+1\n        for j in 1:b\n            if string[i+j-1] != substring[j]\n\
    \                break\n            end\n            if j == b\n             \
    \   counter = counter + 1\n            end\n        end\n    end\n    return counter\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for start_index in 1:length(string)\n        end_index\
    \ = start_index + length(substring) - 1\n        if end_index > length(string)\n\
    \            continue\n        end\n        if string[start_index:end_index] ==\
    \ substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    # TODO\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_ilozwyh.jl:19\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_ilozwyh.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_ilozwyh.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp_ilozwyh.jl:20\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_ilozwyh.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_ilozwyh.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp_ilozwyh.jl:21\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_ilozwyh.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_ilozwyh.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_ilozwyh.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) == 0 \n        0\n    else \n        matches = findall(string,\
    \ substring)\n        if length(matches) == 0 \n            0\n        else \n\
    \            index = [x[1] for x in matches]\n            index = sort(index)\n\
    \            prev_index = 0\n            counter = 0\n            for i in index\
    \ \n                if i == prev_index \n                    continue\n      \
    \          prev_index = i\n                counter += 1\n            end\n   \
    \         counter\n        end\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqnxespoj.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqnxespoj.jl:1\n\
    in expression starting at /tmp/tmpqnxespoj.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    counter = 0\n   \
    \ for i in 1:length(string)\n        if string[i:i+length(substring)-1] == substring\n\
    \            counter += 1\n        end\n    end\n    return counter\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsluek8dr.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError:\
    \ attempt to access 9-codeunit String at index [8:10]\\n  Stacktrace:\\n   [1]\
    \ checkbounds\\n     @ ./strings/basic.jl:216 [inlined]\\n   [2] getindex\\n \
    \    @ ./strings/string.jl:261 [inlined]\\n   [3] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmpsluek8dr.jl:15\\n   [4] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpsluek8dr.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpsluek8dr.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpsluek8dr.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpsluek8dr.jl:15\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpsluek8dr.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpsluek8dr.jl:25\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      2      4\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.'"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    pos = 0\n    times\
    \ = 0\n    while pos < length(string)\n        pos = search(string, substring,\
    \ pos)\n        if pos == 0\n            break\n        end\n        times +=\
    \ 1\n        pos += 1\n    end\n    return times\nend\n# the following code is\
    \ necessary to run tests\nusing Base.Test\n@testset \"how_many_times_tests\" begin\n\
    \    @test how_many_times(\"\", \"a\") == 0\n    @test how_many_times(\"aaa\"\
    , \"a\") == 3\n    @test how_many_times(\"aaaa\", \"aa\") == 3\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: Test not defined\nin expression starting\
    \ at /tmp/tmpdeub5gju.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    len = length(substring)\n    pos = 1\n    count = 0\n    while true\n\
    \        try\n            pos = search(string, substring, pos)\n            if\
    \ pos == nothing\n                break\n            end\n            count +=\
    \ 1\n            pos += len\n        catch\n            break\n        end\n \
    \   end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqgigqcn3.jl:33\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqgigqcn3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqgigqcn3.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpqgigqcn3.jl:34\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqgigqcn3.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqgigqcn3.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpqgigqcn3.jl:35\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqgigqcn3.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqgigqcn3.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqgigqcn3.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    times_found = 0\n\
    \    for i in 1:length(string)\n        if string[i:i+length(substring)-1] ==\
    \ substring\n            times_found += 1\n        end\n    end\n    return times_found\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp8859lq42.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp8859lq42.jl:15\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8859lq42.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8859lq42.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp8859lq42.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp8859lq42.jl:15\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8859lq42.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8859lq42.jl:25\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8859lq42.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring in string\n        return length(split(string, substring))\
    \ - 1\n    else\n        return 0\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpy2876lj8.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  use occursin(x, y)\
    \ for string containment\\n  Stacktrace:\\n   [1] error(s::String)\\n     @ Base\
    \ ./error.jl:33\\n   [2] in(#unused#::String, #unused#::String)\\n     @ Base\
    \ ./strings/search.jl:638\\n   [3] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmpy2876lj8.jl:10\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpy2876lj8.jl:21 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpy2876lj8.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpy2876lj8.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  use occursin(x, y) for string containment\\\
    n  Stacktrace:\\n   [1] error(s::String)\\n     @ Base ./error.jl:33\\n   [2]\
    \ in(#unused#::String, #unused#::String)\\n     @ Base ./strings/search.jl:638\\\
    n   [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpy2876lj8.jl:10\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpy2876lj8.jl:22 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpy2876lj8.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpy2876lj8.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  use occursin(x, y) for string containment\\\
    n  Stacktrace:\\n   [1] error(s::String)\\n     @ Base ./error.jl:33\\n   [2]\
    \ in(#unused#::String, #unused#::String)\\n     @ Base ./strings/search.jl:638\\\
    n   [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpy2876lj8.jl:10\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:44"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n = 0\n    for i in 1:length(string)\n        if string[i:end] == substring\n\
    \            n += 1\n        end\n    end\n    return n\nend\nhow_many_times(\"\
    aa\", \"a\")\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t\
    @test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\
    \t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\"\
    , \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp958q3htz.jl:25\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp958q3htz.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp958q3htz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp958q3htz.jl:26\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp958q3htz.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp958q3htz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp958q3htz.jl:27\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp958q3htz.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp958q3htz.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp958q3htz.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    counter = 0\n    for i in eachindex(string)\n        if i + length(substring)\
    \ - 1 <= length(string)\n            if string[i:(i + length(substring) - 1)]\
    \ == substring\n                counter += 1\n            end\n        end\n \
    \   end\n    return counter\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n1 = length(string)\n    n2 = length(substring)\n    cnt = 0\n    for\
    \ i in 1:n1-n2+1\n        if string[i:i+n2-1] == substring\n            cnt +=\
    \ 1\n        end\n    end\n    return cnt\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return length(eachmatch(r\"(?=($substring))\", string).match)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpa7j5c_n4.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  type RegexMatchIterator\
    \ has no field match\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42\
    \ [inlined]\\n   [2] how_many_times(string::String, substring::String)\\n    \
    \ @ Main /tmp/tmpa7j5c_n4.jl:10\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpa7j5c_n4.jl:17 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpa7j5c_n4.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpa7j5c_n4.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  type RegexMatchIterator has no field\
    \ match\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpa7j5c_n4.jl:10\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpa7j5c_n4.jl:18 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpa7j5c_n4.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpa7j5c_n4.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  type RegexMatchIterator has no field\
    \ match\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpa7j5c_n4.jl:10\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpa7j5c_n4.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpa7j5c_n4.jl:16\\ntes"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) == 0\n        return 0\n    end\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmph9teft58.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmph9teft58.jl:1\n\
    in expression starting at /tmp/tmph9teft58.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    total = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            total += 1\n        end\n    end\n    return total\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9md7ar09.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError:\
    \ attempt to access 9-codeunit String at index [8:10]\\n  Stacktrace:\\n   [1]\
    \ checkbounds\\n     @ ./strings/basic.jl:216 [inlined]\\n   [2] getindex\\n \
    \    @ ./strings/string.jl:261 [inlined]\\n   [3] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmp9md7ar09.jl:12\\n   [4] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp9md7ar09.jl:25 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp9md7ar09.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp9md7ar09.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmp9md7ar09.jl:12\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp9md7ar09.jl:26 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp9md7ar09.jl:22\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      2      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string) - length(substring) + 1\n   \
    \     if string[i:i+length(substring)-1] == substring\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == \"\" || substring == \"\"\n        return 0\n    end\n  \
    \  count = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp7woh90ca.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp7woh90ca.jl:15\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp7woh90ca.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp7woh90ca.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp7woh90ca.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp7woh90ca.jl:15\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp7woh90ca.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp7woh90ca.jl:25\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7woh90ca.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    occurances = 0\n    index = 1\n    while index <= length(string) - length(substring)\
    \ + 1\n        if string[index:index+length(substring)-1] == substring\n     \
    \       occurances += 1\n        end\n        index += 1\n    end\n    return\
    \ occurances\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    index = next_index(string, substring)\n    if index == 0 \n        return\
    \ 0\n    else\n        return 1 + how_many_times(string[index+1:end], substring)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t\
    @test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\
    \t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\"\
    , \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp764yjtof.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  UndefVarError: next_index\
    \ not defined\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmp764yjtof.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp764yjtof.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp764yjtof.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp764yjtof.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  UndefVarError: next_index not defined\\\
    n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmp764yjtof.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp764yjtof.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp764yjtof.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp764yjtof.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  UndefVarError: next_index not defined\\\
    n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmp764yjtof.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp764yjtof.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp764yjtof.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp764yjtof.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  UndefVarError: next_index not defined\\\
    n "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    if string == \"\"\
    \n        return 0\n    end\n    j = 1\n    count = 0\n    while j<=length(string)\n\
    \        if string[j:j+length(substring)-1] == substring\n            count +=\
    \ 1\n        end\n        j += 1\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4g5cux_8.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError:\
    \ attempt to access 9-codeunit String at index [8:10]\\n  Stacktrace:\\n   [1]\
    \ checkbounds\\n     @ ./strings/basic.jl:216 [inlined]\\n   [2] getindex\\n \
    \    @ ./strings/string.jl:261 [inlined]\\n   [3] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmp4g5cux_8.jl:19\\n   [4] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp4g5cux_8.jl:33 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp4g5cux_8.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmp4g5cux_8.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmp4g5cux_8.jl:19\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp4g5cux_8.jl:34 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp4g5cux_8.jl:30\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      2      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    k = length(substring)\n    n = length(string)\n    times = 0\n    for\
    \ i = 1:n-k+1\n        if string[i:i+k-1] == substring\n            times += 1\n\
    \        end\n    end\n    return times\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == \"\" || substring == \"\"\n        return 0\n    end\n  \
    \  count = 0\n    for i = 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\n \nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzqge61gv.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError:\
    \ attempt to access 9-codeunit String at index [8:10]\\n  Stacktrace:\\n   [1]\
    \ checkbounds\\n     @ ./strings/basic.jl:216 [inlined]\\n   [2] getindex\\n \
    \    @ ./strings/string.jl:261 [inlined]\\n   [3] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmpzqge61gv.jl:15\\n   [4] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpzqge61gv.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpzqge61gv.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpzqge61gv.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpzqge61gv.jl:15\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpzqge61gv.jl:30 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpzqge61gv.jl:26\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      2      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    count = 0\n    for\
    \ i in 1:length(string)\n        if i + length(substring) <= length(string) +\
    \ 1\n            if string[i:i+length(substring)-1] == substring\n           \
    \     count += 1\n            end\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count::Int64 = 0\n    for i in 1:length(string) - length(substring) +\
    \ 1\n        if string[i:i+length(substring)-1] == substring\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    is_ok(p::Int64) = p <= string_length(string) - string_length(substring)\n\
    \    get_hash(idx::Int64) = hash(string[idx:idx+string_length(substring)])\n \
    \   get_substring(idx::Int64) = string[idx:idx+string_length(substring)]\n   \
    \ hash_substring = hash(substring)\n    hash_substrings = [get_hash(i) for i in\
    \ 0:string_length(string)-1]\n    cnt = 0\n    for i in 0:string_length(string)-1\n\
    \        hash_current = hash_substrings[i]\n        if hash_current == hash_substring\
    \ && is_ok(i) && get_substring(i) == substring\n            cnt += 1\n       \
    \ end\n    end\n    return cnt\nend\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcrpye1b2.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  UndefVarError: string_length\
    \ not defined\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmpcrpye1b2.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcrpye1b2.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcrpye1b2.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpcrpye1b2.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  UndefVarError: string_length not defined\\\
    n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmpcrpye1b2.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcrpye1b2.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcrpye1b2.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpcrpye1b2.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  UndefVarError: string_length not\
    \ defined\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmpcrpye1b2.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpcrpye1b2.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcrpye1b2.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpcrpye1b2.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  UndefVarError: string_length no"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    i = 0\n    count = 0\n    while i < length(string)\n        if string[i:i+length(substring)]\
    \ == substring\n            count += 1\n            i += length(substring)\n \
    \       else\n            i += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp440uqosu.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"xyxyxyx\", \"x\") == 4\\n  BoundsError:\
    \ attempt to access 7-codeunit String at index [0:1]\\n  Stacktrace:\\n   [1]\
    \ checkbounds\\n     @ ./strings/basic.jl:216 [inlined]\\n   [2] getindex\\n \
    \    @ ./strings/string.jl:261 [inlined]\\n   [3] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmp440uqosu.jl:13\\n   [4] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp440uqosu.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp440uqosu.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp440uqosu.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError: attempt to access 9-codeunit\
    \ String at index [0:3]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmp440uqosu.jl:13\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp440uqosu.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp440uqosu.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmp440uqosu.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [0:4]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmp440uqosu.jl:13\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/st"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return iszero(occursin(substring, string)) ? 0 : 1 + how_many_times(string[2:end],\
    \ substring)\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8uml7faw.jl:18\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 7 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8uml7faw.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8uml7faw.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8uml7faw.jl:19\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 7 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8uml7faw.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8uml7faw.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8uml7faw.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n = length(substring)\n    k = count(ch -> ch in substring, string)\n\
    \    k - n + 1\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppm4td355.jl:21\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 7 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppm4td355.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppm4td355.jl:18\ntest set: Test\
    \ Failed at /tmp/tmppm4td355.jl:22\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppm4td355.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppm4td355.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppm4td355.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    if substring == \"\"\n        return count\n    end\n \
    \   for i = 1:length(string)\n        start = i\n        for j = 1:length(substring)\n\
    \            if j + start > length(string)\n                break\n          \
    \  end\n            if string[j + start] != substring[j]\n                break\n\
    \            end\n            if j == length(substring)\n                count\
    \ += 1\n            end\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1y6_0co3.jl:36\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 3 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1y6_0co3.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1y6_0co3.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1y6_0co3.jl:37\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 3 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1y6_0co3.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1y6_0co3.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1y6_0co3.jl:38\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1y6_0co3.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1y6_0co3.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1y6_0co3.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    \"\"\"Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    Args:\n        string: String to search\
    \ in.\n        substring: String to search for.\n    Returns:\n        Int64 --\
    \ Number of times the substring appears.\n    \"\"\"\n    return string.count(substring)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpyeekpe1y.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  type String has no\
    \ field count\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpyeekpe1y.jl:17\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpyeekpe1y.jl:24 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpyeekpe1y.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpyeekpe1y.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  type String has no field count\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmpyeekpe1y.jl:17\\n   [3] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpyeekpe1y.jl:25 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpyeekpe1y.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpyeekpe1y.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  type String has no field count\\\
    n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmpyeekpe1y.jl:17\\n   [3] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpyeekpe1y.jl:26 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpyeekpe1y.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmp"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpyeekpe1y.jl:21\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) > length(string)\n        return 0\n    end\n   \
    \ return length(findall(r\"$substring\", string))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi32g_05x.jl:21\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi32g_05x.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi32g_05x.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpi32g_05x.jl:22\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi32g_05x.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi32g_05x.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpi32g_05x.jl:23\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi32g_05x.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi32g_05x.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi32g_05x.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) > length(string) return 0\n    i = 1\n    hits =\
    \ 0\n    while i <= length(string) - length(substring) + 1\n        if string[i:i+length(substring)]\
    \ == substring\n            hits += 1\n            i += length(substring)\n  \
    \      else\n            i += 1\n        end\n    end\n    return hits\nend\n\
    \ \n \n \n\"\"\" Returns a graph of the input string representation of a DNA sequence,\
    \ each node being a k-mer.\n    Output is the corresponding adjacency matrix.\n\
    \    Nodes are labelled from A0 to Z0, A1 to Z1 and so on...\n    k is the order\
    \ of the k-mer, so the length of the nodes.\n    >>> graph('ATGC')\n    4x4 Array{Int64,2}:\n\
    \     0  1  0  0\n     0  0  1  0\n     0  0  0  1\n     1  0  0  0\n    >>> graph('ATGC',\
    \ 2)\n    16x16 Array{Int64,2}:\n     0  0  0  0  0  0  0  0  0  0  0  0  0  0\
    \  0  0\n     0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n     0  0  0  0\
    \  0  0  0  0  0  0  0  0  0  0  0  0\n     0  0  0  0  0  0  0  0  0  0  0  0\
    \  0  0  0  0\n     0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n     0  0\
    \  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n     0  0  0  0  0  0  0  0  0  0\
    \  0  0  0  0  0  0\n     0  0  0  0  0  0  0  0  0  0  0  0  0  0\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprj5rks8r.jl:1\nin expression starting at /tmp/tmprj5rks8r.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    if length(substring)\
    \ > length(string)\n        return 0\n    end\n    k = length(substring)\n   \
    \ count = 0\n    for i = 1:length(string)-length(substring)+1\n        if string[i:i+k-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    # use regexp to find\
    \ number of occurences\n    match = match(string, substring)\n    return length(match.captures)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7tsde5xr.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  UndefVarError: match\
    \ not defined\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmp7tsde5xr.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7tsde5xr.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7tsde5xr.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp7tsde5xr.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  UndefVarError: match not defined\\n \
    \ Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n  \
    \   @ Main /tmp/tmp7tsde5xr.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7tsde5xr.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7tsde5xr.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp7tsde5xr.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  UndefVarError: match not defined\\\
    n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmp7tsde5xr.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp7tsde5xr.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp7tsde5xr.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp7tsde5xr.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  UndefVarError: match not defined\\\
    n  Stacktrace:\\n   [1]"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmp7tsde5xr.jl:19\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    m = length(substring)\n    n = length(string)\n    count = 0\n    for\
    \ i = 1:n-m+1\n        if string[i:i+m-1] == substring\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    string_len = length(string)\n    substr_len = length(substring)\n    counter\
    \ = 0\n    if substr_len > string_len\n        return 0\n    end\n    for i in\
    \ 1:string_len - substr_len + 1\n        if string[i:i+substr_len-1] == substring\n\
    \            counter += 1\n        end\n    end\n    return counter\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return length(findall(\".*?$substring\", string))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\")\
    \ == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbfem03_r.jl:18\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbfem03_r.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbfem03_r.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbfem03_r.jl:19\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbfem03_r.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbfem03_r.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbfem03_r.jl:20\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbfem03_r.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbfem03_r.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbfem03_r.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) > length(string)\n        return 0\n    end\n   \
    \ n = 0\n    for i = 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            n += 1\n        end\n    end\n    return n\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmph17rqhls.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError:\
    \ attempt to access 9-codeunit String at index [8:10]\\n  Stacktrace:\\n   [1]\
    \ checkbounds\\n     @ ./strings/basic.jl:216 [inlined]\\n   [2] getindex\\n \
    \    @ ./strings/string.jl:261 [inlined]\\n   [3] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmph17rqhls.jl:15\\n   [4] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmph17rqhls.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmph17rqhls.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmph17rqhls.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmph17rqhls.jl:15\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmph17rqhls.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmph17rqhls.jl:25\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      2      4\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmph17rqhls.jl:23\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    count = 0\n    index\
    \ = 1\n    while (index <= length(string) - length(substring) + 1)\n        if\
    \ string[index:index+length(substring)-1] == substring\n            count += 1\n\
    \            index += length(substring)\n        else\n            index += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuj67ojl5.jl:32\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuj67ojl5.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuj67ojl5.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuj67ojl5.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return length(\n        (m = match(string, substring)) for m in eachmatch(string,\
    \ substring)\n    )\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsegwxh_q.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  MethodError: no method\
    \ matching eachmatch(::String, ::String)\\n  Closest candidates are:\\n    eachmatch(!Matched::Regex,\
    \ ::AbstractString; overlap) at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:741\\\
    n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmpsegwxh_q.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpsegwxh_q.jl:19 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpsegwxh_q.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpsegwxh_q.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  MethodError: no method matching eachmatch(::String,\
    \ ::String)\\n  Closest candidates are:\\n    eachmatch(!Matched::Regex, ::AbstractString;\
    \ overlap) at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:741\\n  Stacktrace:\\\
    n   [1] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpsegwxh_q.jl:10\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpsegwxh_q.jl:20 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpsegwxh_q.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpsegwxh_q.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  MethodError: no method matching eachmatch(::String,\
    \ ::String)\\n  Closest candidates are:\\n    eachmatch(!Matched::Regex, ::AbstractString;\
    \ overlap) at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:741\\n  Stacktrace:\\\
    n   [1] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpsegwxh_q.jl:10\\\
    n   [2] ma"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\" return 0\n    elseif substring == string return 1\n\
    \    elseif length(string) < length(substring) return 0\n    end\n    count =\
    \ 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpdry_3fs9.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpdry_3fs9.jl:16\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpdry_3fs9.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpdry_3fs9.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpdry_3fs9.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpdry_3fs9.jl:16\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpdry_3fs9.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpdry_3fs9.jl:26\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdry_3fs9.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if isempty(substring)\n        return 0\n    end\n    if length(substring)\
    \ > length(string)\n        return 0\n    end\n    count = 0\n    for i in 1:length(string)\n\
    \        if string[i:i+length(substring)-1] == substring\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpacj7gv1l.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpacj7gv1l.jl:18\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpacj7gv1l.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpacj7gv1l.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpacj7gv1l.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpacj7gv1l.jl:18\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpacj7gv1l.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpacj7gv1l.jl:28\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpacj7gv1l.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return length(findall(string, substring))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm8ml04_5.jl:17\n  Expression: candidate(\"\
    \", \"x\") == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpm8ml04_5.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm8ml04_5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm8ml04_5.jl:18\n  Expression: candidate(\"xyxyxyx\", \"x\"\
    ) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm8ml04_5.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm8ml04_5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm8ml04_5.jl:19\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm8ml04_5.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm8ml04_5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm8ml04_5.jl:20\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm8ml04_5.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm8ml04_5.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm8ml04_5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    new_string = copy(string)\n    count = 0\n    while occursin(substring,\
    \ new_string)\n        count += 1\n        new_string = replace(new_string, substring,\
    \ \"\")\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0ny_1pu5.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  MethodError: no method\
    \ matching copy(::String)\\n  Closest candidates are:\\n    copy(!Matched::LinearAlgebra.Hessenberg{<:Any,\
    \ <:LinearAlgebra.UpperHessenberg}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/hessenberg.jl:418\\\
    n    copy(!Matched::LinearAlgebra.Hessenberg{<:Any, <:LinearAlgebra.SymTridiagonal})\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/hessenberg.jl:419\\\
    n    copy(!Matched::LinearAlgebra.CholeskyPivoted) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/cholesky.jl:492\\\
    n    ...\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmp0ny_1pu5.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0ny_1pu5.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0ny_1pu5.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp0ny_1pu5.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  MethodError: no method matching copy(::String)\\\
    n  Closest candidates are:\\n    copy(!Matched::LinearAlgebra.Hessenberg{<:Any,\
    \ <:LinearAlgebra.UpperHessenberg}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/hessenberg.jl:418\\\
    n    copy(!Matched::LinearAlgebra.Hessenberg{<:Any, <:LinearAlgebra.SymTridiagonal})\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/hessenberg.jl:419\\\
    n    copy(!Matched::LinearAlgebra.CholeskyPivoted) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/cholesky.jl:492\\\
    n    ...\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmp0ny_1pu5.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdli"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    cnt = 0\n    start_index = 1\n    i = 1\n    length_of_string = length(string)\n\
    \    length_of_substring = length(substring)\n    while i <= length_of_string\
    \ - length_of_substring + 1\n        if string[i:i+length_of_substring - 1] ==\
    \ substring\n            cnt += 1\n            i += length_of_substring - 1\n\
    \        end\n        i += 1\n    end\n    return cnt\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu8__oyce.jl:31\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu8__oyce.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu8__oyce.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu8__oyce.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    i = 1\n    while i <= length(string) - length(substring)\
    \ + 1\n        if string[i:i+length(substring)-1] == substring\n            count\
    \ += 1\n        end\n        i += 1\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) > length(string)\n        return 0\n    end\n   \
    \ len = length(substring)\n    times = 0\n    for i in 0:len-1\n        found\
    \ = string[i:end]\n        while !isempty(found)\n            if contains(found,\
    \ substring)\n                times += 1\n                found = found[len+1:end]\n\
    \            else\n                found = \"\"\n            end\n        end\n\
    \    end\n    return times\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbmn947tg.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"xyxyxyx\", \"x\") == 4\\n  BoundsError:\
    \ attempt to access 7-codeunit String at index [0:7]\\n  Stacktrace:\\n   [1]\
    \ checkbounds\\n     @ ./strings/basic.jl:216 [inlined]\\n   [2] getindex\\n \
    \    @ ./strings/string.jl:261 [inlined]\\n   [3] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmpbmn947tg.jl:16\\n   [4] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpbmn947tg.jl:34 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpbmn947tg.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpbmn947tg.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError: attempt to access 9-codeunit\
    \ String at index [0:9]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpbmn947tg.jl:16\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpbmn947tg.jl:35 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpbmn947tg.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpbmn947tg.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [0:8]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpbmn947tg.jl:16\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/st"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    num = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            num += 1\n        end\n    end\n    return num\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbrey3_77.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError:\
    \ attempt to access 9-codeunit String at index [8:10]\\n  Stacktrace:\\n   [1]\
    \ checkbounds\\n     @ ./strings/basic.jl:216 [inlined]\\n   [2] getindex\\n \
    \    @ ./strings/string.jl:261 [inlined]\\n   [3] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmpbrey3_77.jl:12\\n   [4] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpbrey3_77.jl:25 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpbrey3_77.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpbrey3_77.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpbrey3_77.jl:12\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpbrey3_77.jl:26 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpbrey3_77.jl:22\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      2      4\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpbrey3_77.jl:20\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    times = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            times += 1\n        end\n    end\n    return times\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpgbjx1erb.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpgbjx1erb.jl:12\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpgbjx1erb.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpgbjx1erb.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpgbjx1erb.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpgbjx1erb.jl:12\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpgbjx1erb.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpgbjx1erb.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgbjx1erb.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    hits = 0\n    start = 1\n    for i in 1:length(string)\n        if string[i]\
    \ == substring[start]\n            start += 1\n            if start > length(substring)\n\
    \                hits += 1\n                start = 1\n            end\n     \
    \   else\n            start = 1\n        end\n    end\n    return hits\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp46vh4sjb.jl:32\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp46vh4sjb.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp46vh4sjb.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp46vh4sjb.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    \n    size_string = size(string, 1)\n    size_substring = size(substring,\
    \ 1)\n    num_occurrences = 0\n    \n    if size_string >= size_substring\n  \
    \      for i = 1:size_string - size_substring + 1\n            if string[i:i+size_substring-1]\
    \ == substring\n                num_occurrences += 1\n            end\n      \
    \  end\n    end\n    \n    return num_occurrences\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpptdb3pxc.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  MethodError: no method\
    \ matching size(::String, ::Int64)\\n  Closest candidates are:\\n    size(!Matched::Union{LinearAlgebra.QR,\
    \ LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted}, ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:566\\\
    n    size(!Matched::Union{LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{T,\
    \ S}} where {T, S}, ::Any) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:201\\\
    n    size(!Matched::Union{LinearAlgebra.Cholesky, LinearAlgebra.CholeskyPivoted},\
    \ ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/cholesky.jl:495\\\
    n    ...\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmpptdb3pxc.jl:11\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpptdb3pxc.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpptdb3pxc.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpptdb3pxc.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  MethodError: no method matching size(::String,\
    \ ::Int64)\\n  Closest candidates are:\\n    size(!Matched::Union{LinearAlgebra.QR,\
    \ LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted}, ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:566\\\
    n    size(!Matched::Union{LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{T,\
    \ S}} where {T, S}, ::Any) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:201\\\
    n    size(!Matched::Union{LinearAlgebra.Cholesky, LinearAlgebra.CholeskyPivoted},\
    \ ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/cholesky.jl:495\\\
    n    ...\\n  Stacktr"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return length(match.(Regex(substring), string))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0_hph1fb.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  MethodError: no method\
    \ matching length(::Nothing)\\n  Closest candidates are:\\n    length(!Matched::Union{Base.KeySet,\
    \ Base.ValueIterator}) at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:58\\\
    n    length(!Matched::Union{LinearAlgebra.Adjoint{T, S}, LinearAlgebra.Transpose{T,\
    \ S}} where {T, S}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:171\\\
    n    length(!Matched::Base.InvasiveLinkedListSynchronized) at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:604\\\
    n    ...\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmp0_hph1fb.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0_hph1fb.jl:17 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0_hph1fb.jl:16\\ntest set:\
    \ Test Failed at /tmp/tmp0_hph1fb.jl:18\\n  Expression: candidate(\"xyxyxyx\"\
    , \"x\") == 4\\n   Evaluated: 0 == 4'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    #use an index to mark where we left off in the string\n    let index =\
    \ 1\n    #loop through the string\n    while index<=length(string)\n        #use\
    \ find to find the substring in the string starting at index\n        let pos\
    \ = find(string, substring, index)\n        #if we have a match\n        if pos\
    \ != nothing\n            #increment index to be one past the substring\n    \
    \        index = pos + length(substring)\n            #increment count\n     \
    \       count += 1\n        else\n            #if we get to the end without a\
    \ match, stop looping\n            return count\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t\
    @test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\
    \t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\"\
    , \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"let\" at /tmp/tmpi7bhkqnc.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpi7bhkqnc.jl:1\n\
    in expression starting at /tmp/tmpi7bhkqnc.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring)>length(string)\n        return 0\n    end\n    times\
    \ = 0\n    for i in 1:length(string)-length(substring)+1\n        if substring\
    \ == string[i:i+length(substring)-1]\n            times += 1\n        end\n  \
    \  end\n    return times\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string)\n        sub = string[i:i+length(substring)-1]\n\
    \        if sub == substring\n            count += 1\n        end\n    end\n \
    \   return count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkc8lc0xx.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError:\
    \ attempt to access 9-codeunit String at index [8:10]\\n  Stacktrace:\\n   [1]\
    \ checkbounds\\n     @ ./strings/basic.jl:216 [inlined]\\n   [2] getindex\\n \
    \    @ ./strings/string.jl:261 [inlined]\\n   [3] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmpkc8lc0xx.jl:12\\n   [4] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpkc8lc0xx.jl:26 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpkc8lc0xx.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpkc8lc0xx.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpkc8lc0xx.jl:12\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpkc8lc0xx.jl:27 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpkc8lc0xx.jl:23\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      2      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return length(findall(substring, string))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxg2770ag.jl:19\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxg2770ag.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxg2770ag.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxg2770ag.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    i = 1\n    j = 1\n    count = 0\n    while i <= length(string) - length(substring)\
    \ + 1\n        while j <= length(substring)\n            if string[i+j-1] != substring[j]\n\
    \                break\n            end\n            j += 1\n        end\n   \
    \     if j > length(substring)\n            count += 1\n        end\n        i\
    \ += 1\n        j = 1\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    amount = 0\n    curr_index = 0\n    while curr_index < length(string)\
    \ - length(substring) + 1\n        if string[curr_index:curr_index + length(substring)]\
    \ == substring\n            amount += 1\n            curr_index += length(substring)\n\
    \        else\n            curr_index += 1\n        end\n    end\n    return amount\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpl5x2pren.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"xyxyxyx\", \"x\") == 4\\n  BoundsError:\
    \ attempt to access 7-codeunit String at index [0:1]\\n  Stacktrace:\\n   [1]\
    \ checkbounds\\n     @ ./strings/basic.jl:216 [inlined]\\n   [2] getindex\\n \
    \    @ ./strings/string.jl:261 [inlined]\\n   [3] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmpl5x2pren.jl:13\\n   [4] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpl5x2pren.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpl5x2pren.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpl5x2pren.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError: attempt to access 9-codeunit\
    \ String at index [0:3]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpl5x2pren.jl:13\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpl5x2pren.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpl5x2pren.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpl5x2pren.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [0:4]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpl5x2pren.jl:13\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/st"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n = 1\n    while n <= length(string)\n        if string[n:end] == substring\n\
    \            return 1 + how_many_times(string[n+1:end], substring)\n        end\n\
    \        n += 1\n    end\n    return 0\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2b662xzp.jl:25\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2b662xzp.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2b662xzp.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp2b662xzp.jl:26\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2b662xzp.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2b662xzp.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp2b662xzp.jl:27\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2b662xzp.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2b662xzp.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2b662xzp.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == \"\" || substring == \"\"\n        return 0\n    end\n  \
    \  i = 0\n    count = 0\n    while i < length(string)\n        if string[i:i+length(substring)]\
    \ == substring\n            count += 1\n            i += length(substring)\n \
    \       else\n            i += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpb5v7t53y.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  BoundsError: attempt to access\
    \ 7-codeunit String at index [0:1]\n  Stacktrace:\n   [1] checkbounds\n     @\
    \ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpb5v7t53y.jl:16\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpb5v7t53y.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpb5v7t53y.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpb5v7t53y.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt to access 9-codeunit\
    \ String at index [0:3]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpb5v7t53y.jl:16\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpb5v7t53y.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpb5v7t53y.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpb5v7t53y.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [0:4]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpb5v7t53y.jl:16\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macr"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb5v7t53y.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    start = 1\n    count = 0\n    while start <= length(string)\n        m\
    \ = match(string, substring, start)\n        if isnothing(m)\n            break\n\
    \        else\n            count += 1\n            start = m.stop\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp412ulleb.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"xyxyxyx\", \"x\") == 4\\n  MethodError:\
    \ no method matching match(::String, ::String, ::Int64)\\n  Closest candidates\
    \ are:\\n    match(!Matched::Regex, ::Union{SubString{String}, String}, ::Integer)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:367\\n    match(!Matched::Regex,\
    \ ::Union{SubString{String}, String}, ::Integer, !Matched::UInt32) at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:367\\\
    n    match(!Matched::Regex, ::AbstractString, ::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:389\\\
    n    ...\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmp412ulleb.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp412ulleb.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp412ulleb.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmp412ulleb.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  MethodError: no method matching match(::String,\
    \ ::String, ::Int64)\\n  Closest candidates are:\\n    match(!Matched::Regex,\
    \ ::Union{SubString{String}, String}, ::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:367\\\
    n    match(!Matched::Regex, ::Union{SubString{String}, String}, ::Integer, !Matched::UInt32)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:367\\n    match(!Matched::Regex,\
    \ ::AbstractString, ::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:389\\\
    n    ...\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmp412ulleb.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp412ulleb.jl:30 [inlined]\\\
    n   [4] macro ex"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i = 1:length(string)\n        for j = 1:length(substring)\n\
    \            if string[i+j-1] != substring[j]\n                break\n       \
    \     end\n            if j == length(substring)\n                count += 1\n\
    \            end\n        end\n    end\n    return count\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\")\
    \ == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2r0ls1g6.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102\
    \ [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp2r0ls1g6.jl:13\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp2r0ls1g6.jl:30 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp2r0ls1g6.jl:27\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2r0ls1g6.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return length(findall(string, substring))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6d_e6ek0.jl:17\n  Expression: candidate(\"\
    \", \"x\") == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6d_e6ek0.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6d_e6ek0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6d_e6ek0.jl:18\n  Expression: candidate(\"xyxyxyx\", \"x\"\
    ) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6d_e6ek0.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6d_e6ek0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6d_e6ek0.jl:19\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6d_e6ek0.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6d_e6ek0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6d_e6ek0.jl:20\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6d_e6ek0.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6d_e6ek0.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6d_e6ek0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n = length(substring)\n    count = 0\n    for i in 1:length(string)-length(substring)+1\n\
    \        substr = string[i:i+n-1]\n        if substr == substring\n          \
    \  count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    counter = 0\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7uhbjfn6.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7uhbjfn6.jl:1\n\
    in expression starting at /tmp/tmp7uhbjfn6.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    \n    matches = 0\n    for i in 1:length(string)\n        substrings =\
    \ string[i:end]\n        if startswith(substrings, substring) == true\n      \
    \      matches += 1\n        end\n    end\n    return matches\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return length(findall(substring, string))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoocka0jm.jl:19\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoocka0jm.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoocka0jm.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoocka0jm.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    # base case\n    if endswith(string, substring)\n        return 1\n  \
    \  else\n        return 0\n    end\n    \n    # remove last character from string\
    \ and call how_many_times again\n    remove_last(string)\n    return how_many_times(string,\
    \ substring) + 1\nend\n    \n    \n# function remove_last(string::String)::String\n\
    #     \"\"\" Remove last character from string.\n#     >>> remove_last('abc')\n\
    #     'ab'\n#     \"\"\"\n#     return string[1:end-1]\n# end\nusing Test\n\n\
    @testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\")\
    \ == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpka3nn84i.jl:36\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpka3nn84i.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpka3nn84i.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpka3nn84i.jl:37\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpka3nn84i.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpka3nn84i.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpka3nn84i.jl:38\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpka3nn84i.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpka3nn84i.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpka3nn84i.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    count = 0\n    for\
    \ i in 1:length(string)\n        if string[i:i+length(substring)-1] == substring\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbqsrwhap.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError:\
    \ attempt to access 9-codeunit String at index [8:10]\\n  Stacktrace:\\n   [1]\
    \ checkbounds\\n     @ ./strings/basic.jl:216 [inlined]\\n   [2] getindex\\n \
    \    @ ./strings/string.jl:261 [inlined]\\n   [3] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmpbqsrwhap.jl:15\\n   [4] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpbqsrwhap.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpbqsrwhap.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpbqsrwhap.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpbqsrwhap.jl:15\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpbqsrwhap.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpbqsrwhap.jl:25\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      2      4\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpbqsrwhap.jl:23\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if isempty(substring)\n        return 0\n    end\n    offset = 1\n   \
    \ times = 0\n    for i in 1:length(string)\n        if string[i] == substring[offset]\n\
    \            offset += 1\n            if offset == length(substring) + 1\n   \
    \             times += 1\n                offset = 1\n            end\n      \
    \  else\n            offset = 1\n        end\n    end\n    return times\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpdyiykt3r.jl:35\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdyiykt3r.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdyiykt3r.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdyiykt3r.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    substr_len = length(substring)\n    count = 0\n    for i in 0:substr_len:length(string)-substr_len\n\
    \        if string[i+1:i+substr_len+1] == substring\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpge2ddj6h.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"xyxyxyx\", \"x\") == 4\\n  BoundsError:\
    \ attempt to access 7-codeunit String at index [7:8]\\n  Stacktrace:\\n   [1]\
    \ checkbounds\\n     @ ./strings/basic.jl:216 [inlined]\\n   [2] getindex\\n \
    \    @ ./strings/string.jl:261 [inlined]\\n   [3] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmpge2ddj6h.jl:13\\n   [4] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpge2ddj6h.jl:25 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpge2ddj6h.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpge2ddj6h.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError: attempt to access 9-codeunit\
    \ String at index [7:10]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpge2ddj6h.jl:13\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpge2ddj6h.jl:26 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpge2ddj6h.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpge2ddj6h.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [5:9]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpge2ddj6h.jl:13\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/s"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    count = 0\n    ix\
    \ = 0\n    while ix != -1\n        ix = findfirst(string, substring, ix+1)\n \
    \       if ix != -1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t\
    @test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\
    \t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\"\
    , \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpv5qe1kou.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  MethodError: no method\
    \ matching findfirst(::String, ::String, ::Int64)\\n  Closest candidates are:\\\
    n    findfirst(::AbstractString, ::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\\\
    n    findfirst(!Matched::Function, ::Union{AbstractString, AbstractArray}) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2002\\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\\n    ...\\\
    n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmpv5qe1kou.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpv5qe1kou.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpv5qe1kou.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpv5qe1kou.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  MethodError: no method matching findfirst(::String,\
    \ ::String, ::Int64)\\n  Closest candidates are:\\n    findfirst(::AbstractString,\
    \ ::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\\\
    n    findfirst(!Matched::Function, ::Union{AbstractString, AbstractArray}) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2002\\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\\n    ...\\\
    n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmpv5qe1kou.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpv5qe1kou.jl:29 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inli"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    str_length = length(string)\n    sub_length = length(substring)\n    count::Int64\
    \ = 0\n    for i in 1:str_length\n        if string[i:i+sub_length-1] == substring\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkowrfyju.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError:\
    \ attempt to access 9-codeunit String at index [8:10]\\n  Stacktrace:\\n   [1]\
    \ checkbounds\\n     @ ./strings/basic.jl:216 [inlined]\\n   [2] getindex\\n \
    \    @ ./strings/string.jl:261 [inlined]\\n   [3] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmpkowrfyju.jl:14\\n   [4] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpkowrfyju.jl:27 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpkowrfyju.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpkowrfyju.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpkowrfyju.jl:14\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpkowrfyju.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpkowrfyju.jl:24\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      2      4\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpkowrfyju.jl:22\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string)\n        if substring == string[i:i+length(substring)-1]\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsfb99o0c.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError:\
    \ attempt to access 9-codeunit String at index [8:10]\\n  Stacktrace:\\n   [1]\
    \ checkbounds\\n     @ ./strings/basic.jl:216 [inlined]\\n   [2] getindex\\n \
    \    @ ./strings/string.jl:261 [inlined]\\n   [3] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmpsfb99o0c.jl:12\\n   [4] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpsfb99o0c.jl:25 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpsfb99o0c.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpsfb99o0c.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpsfb99o0c.jl:12\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpsfb99o0c.jl:26 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpsfb99o0c.jl:22\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      2      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    # find the first occurrence of the substring\n    start_i\
    \ = search(string, substring)\n    while start_i != -1\n        count += 1\n \
    \       # find the next occurrence of the substring\n        start_i = search(string,\
    \ substring, start_i + 1)\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpoefog4yp.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  UndefVarError: search\
    \ not defined\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmpoefog4yp.jl:12\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpoefog4yp.jl:25 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpoefog4yp.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpoefog4yp.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  UndefVarError: search not defined\\n\
    \  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmpoefog4yp.jl:12\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpoefog4yp.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpoefog4yp.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpoefog4yp.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  UndefVarError: search not defined\\\
    n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmpoefog4yp.jl:12\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpoefog4yp.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpoefog4yp.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpoefog4yp.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  UndefVarError: search not defined\\\
    n  Stacktrace:\\n  "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    \n    found_substrings = 0\n    substring_length = length(substring)\n\
    \    string_length = length(string)\n    \n    for i in 1:string_length - substring_length\
    \ + 1\n        if string[i:i+substring_length-1] == substring\n            found_substrings\
    \ += 1\n        end\n    end\n    \n    return found_substrings\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    k = 0\n    l = length(substring)\n    for i in 1:length(string)\n    \
    \    if string[i:i+l-1] == substring\n            k += 1\n        end\n    end\n\
    \    return k\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf4zddn5r.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpf4zddn5r.jl:13\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpf4zddn5r.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpf4zddn5r.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpf4zddn5r.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpf4zddn5r.jl:13\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpf4zddn5r.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpf4zddn5r.jl:23\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf4zddn5r.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    \n    # Naive string search\n    i = 1\n    count = 0\n    while i < length(string)\n\
    \        found = true\n        for j in 1:length(substring)\n            if i\
    \ + j - 1 > length(string) || substring[j] != string[i + j - 1]\n            \
    \    found = false\n                break\n            end\n        end\n    \
    \    if found\n            count += 1\n        end\n        i += 1\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph2kf6_dd.jl:35\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 3 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph2kf6_dd.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph2kf6_dd.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph2kf6_dd.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    (\n        index = find(string, substring, 1)\n        counts = 0\n  \
    \      while index !== nothing\n            counts += 1\n            index = find(string,\
    \ substring, index + 1)\n        end\n        return counts\n    )\nend\n\"\"\"\
    Find how many times a given substring can be found in the original string. Count\
    \ overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa',\
    \ 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfp80_eq.jl:12\nin expression starting at\
    \ /tmp/tmppfp80_eq.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == \"\" || substring == \"\"\n        return 0\n    end\n  \
    \  count = 0\n    index = 0\n    while index != 0 || index == 0\n        index\
    \ = findfirst(string, substring)\n        if index == nothing\n            break\n\
    \        end\n        count += 1\n        string = string[index+length(substring):end]\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpykuhbqdz.jl:31\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpykuhbqdz.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpykuhbqdz.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpykuhbqdz.jl:32\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpykuhbqdz.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpykuhbqdz.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpykuhbqdz.jl:33\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpykuhbqdz.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpykuhbqdz.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpykuhbqdz.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == \"\"\n        return 0\n    end\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp04mq9u4n.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp04mq9u4n.jl:1\n\
    in expression starting at /tmp/tmp04mq9u4n.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    len = length(substring)\n    base = length(string) - len + 1\n    @inbounds\
    \ for i in 1:base\n        if string[i:i+len-1] == substring\n            return\
    \ i\n    end\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvg_qhg5m.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvg_qhg5m.jl:1\n\
    in expression starting at /tmp/tmpvg_qhg5m.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return length(findall(r\"$substring\", string))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvb_m7wza.jl:18\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvb_m7wza.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvb_m7wza.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpvb_m7wza.jl:19\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvb_m7wza.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvb_m7wza.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpvb_m7wza.jl:20\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvb_m7wza.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvb_m7wza.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvb_m7wza.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return length(matchall(substring, string))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1ov3xz41.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  UndefVarError: matchall\
    \ not defined\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmp1ov3xz41.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1ov3xz41.jl:17 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1ov3xz41.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmp1ov3xz41.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  UndefVarError: matchall not defined\\\
    n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmp1ov3xz41.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1ov3xz41.jl:18 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1ov3xz41.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmp1ov3xz41.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  UndefVarError: matchall not defined\\\
    n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmp1ov3xz41.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp1ov3xz41.jl:19 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1ov3xz41.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmp1ov3xz41.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  UndefVarError: matchall not defined\\\
    n  Stacktr"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    # Replace this comment with your code\n    n, m = length(string), length(substring)\n\
    \    if m > n\n        return 0\n    end\n    return sum([1 for i in 1:n-m+1 if\
    \ string[i:i+m-1] == substring])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    num_times_found = 0\n    idx = findnext(string, substring, 1)\n    while\
    \ idx !== nothing\n        num_times_found += 1\n        idx = findnext(string,\
    \ substring, idx + 1)\n    end\n    return num_times_found\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\")\
    \ == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp20nigzb1.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  MethodError: no method\
    \ matching +(::UnitRange{Int64}, ::Int64)\\n  For element-wise addition, use broadcasting\
    \ with dot syntax: array .+ scalar\\n  Closest candidates are:\\n    +(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\\\
    n    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\\\
    n    ...\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmp20nigzb1.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp20nigzb1.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp20nigzb1.jl:22\\ntest set:\
    \ Test Failed at /tmp/tmp20nigzb1.jl:24\\n  Expression: candidate(\"xyxyxyx\"\
    , \"x\") == 4\\n   Evaluated: 0 == 4'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    i = 1\n    while i <= length(string) - length(substring)\
    \ + 1\n        if string[i:i+length(substring)-1] == substring\n            count\
    \ += 1\n        end\n        i += 1\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if isempty(substring)\n        return 0\n    end\n    if string == substring\n\
    \        return 1\n    end\n    if lastindex(string, substring) == -1\n      \
    \  return 0\n    end\n    return lastindex(string, substring) - firstindex(string,\
    \ substring) + 1\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2_8x_5qz.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  MethodError: no method\
    \ matching axes(::String, ::String)\\n  Closest candidates are:\\n    axes(!Matched::AbstractArray{T,\
    \ N}, ::Any) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:72\\\
    n    axes(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:93\\\
    n  Stacktrace:\\n   [1] lastindex\\n     @ ./abstractarray.jl:373 [inlined]\\\
    n   [2] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmp2_8x_5qz.jl:16\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp2_8x_5qz.jl:26 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp2_8x_5qz.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp2_8x_5qz.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  MethodError: no method matching axes(::String,\
    \ ::String)\\n  Closest candidates are:\\n    axes(!Matched::AbstractArray{T,\
    \ N}, ::Any) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:72\\\
    n    axes(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:93\\\
    n  Stacktrace:\\n   [1] lastindex\\n     @ ./abstractarray.jl:373 [inlined]\\\
    n   [2] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmp2_8x_5qz.jl:16\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp2_8x_5qz.jl:27 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp2_8x_5qz.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp2_8x_5qz.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  MethodError: no method matching "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n::Int64 = 0\n    for i in 1:length(string)\n        if string[i:end]==substring\n\
    \            n += 1\n        end\n    end\n    return n\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp54npcon.jl:24\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp54npcon.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp54npcon.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpp54npcon.jl:25\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp54npcon.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp54npcon.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpp54npcon.jl:26\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp54npcon.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp54npcon.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp54npcon.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    \"\"\" Base Case\"\"\"\n    if length(string) < length(substring) \n \
    \       return 0\n    elseif string[1:length(substring)] == substring\n      \
    \  return 1 + how_many_times(string[2:end], substring)\n    else\n        return\
    \ how_many_times(string[2:end], substring)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    i = 1\n    count = 0\n    n = length(string)\n    m = length(substring)\n\
    \    while (i <= n-m+1)\n        if string[i:i+m-1] == substring\n           \
    \ count += 1\n            i += m\n        else\n            i += 1\n        end\n\
    \    end\n    return count\nend\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjfs7v5mz.jl:32\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjfs7v5mz.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjfs7v5mz.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjfs7v5mz.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpojv7q1ej.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError:\
    \ attempt to access 9-codeunit String at index [8:10]\\n  Stacktrace:\\n   [1]\
    \ checkbounds\\n     @ ./strings/basic.jl:216 [inlined]\\n   [2] getindex\\n \
    \    @ ./strings/string.jl:261 [inlined]\\n   [3] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmpojv7q1ej.jl:12\\n   [4] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpojv7q1ej.jl:25 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpojv7q1ej.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpojv7q1ej.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpojv7q1ej.jl:12\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpojv7q1ej.jl:26 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpojv7q1ej.jl:22\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      2      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    start = 1\n    count = 0\n    while start <= length(string) - length(substring)\
    \ + 1\n        if string[start:(start + length(substring) - 1)] == substring\n\
    \            count += 1\n        end\n        start += 1\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t\
    @test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\
    \t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\"\
    , \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    how_many_times = length(match.(r\"$substring\", split(string, \"$substring\"\
    )))\nend\n \nprintln(how_many_times('', 'a'))\nprintln(how_many_times('aaa', 'a'))\n\
    println(how_many_times('aaaa', 'aa'))\n \n \n \nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp14cfgrlt.jl:13\nin expression starting at\
    \ /tmp/tmp14cfgrlt.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string)\n        if occursin(substring,\
    \ string[i:end])\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpbddabckn.jl:24\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 7 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbddabckn.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbddabckn.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpbddabckn.jl:25\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 7 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbddabckn.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbddabckn.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbddabckn.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\" return 0 end\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpuxfsq18f.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpuxfsq18f.jl:1\n\
    in expression starting at /tmp/tmpuxfsq18f.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    num_ocurrences = 0\n    if string == \"\" || substring == \"\"\n     \
    \   return num_ocurrences\n    end\n    for i in 1:length(string)\n        if\
    \ string[i:i+length(substring)-1] == substring\n            num_ocurrences +=\
    \ 1\n        end\n    end\n    return num_ocurrences\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpidn5438p.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError:\
    \ attempt to access 9-codeunit String at index [8:10]\\n  Stacktrace:\\n   [1]\
    \ checkbounds\\n     @ ./strings/basic.jl:216 [inlined]\\n   [2] getindex\\n \
    \    @ ./strings/string.jl:261 [inlined]\\n   [3] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmpidn5438p.jl:15\\n   [4] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpidn5438p.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpidn5438p.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpidn5438p.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpidn5438p.jl:15\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpidn5438p.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpidn5438p.jl:25\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      2      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    len_substring = length(substring)\n    if len_substring == 0\n       \
    \ return 0\n    end\n    if len_substring == 1\n        return length(string)\n\
    \    end\n    n = 0\n    for i in 1:length(string)\n        if string[i:i+len_substring-1]\
    \ == substring\n            n += 1\n        end\n    end\n    return n\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Test Failed at /tmp/tmpxdjdlx91.jl:31\\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\\n   Evaluated: 7 == 4\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmpxdjdlx91.jl:31 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmpxdjdlx91.jl:29\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) > length(string)\n        return 0\n    end\n   \
    \ sub_len = length(substring)\n    i = 1\n    n = 0\n    while i <= length(string)\
    \ - sub_len + 1\n        if string[i:i+sub_len-1] == substring\n            n\
    \ += 1\n            i += sub_len\n        else\n            i += 1\n        end\n\
    \    end\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdvbvpkuv.jl:33\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdvbvpkuv.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdvbvpkuv.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdvbvpkuv.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    # code goes here\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    if substring == \"\" return 0 end\n    for i in 1:length(string)\
    \ - length(substring) + 1\n        if string[i:i+length(substring)-1] == substring\
    \ \n            count += 1\n        end\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) > length(string)\n        return 0\n    end\n   \
    \ return length(string) - length(replace(string, substring)) / length(substring)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp88xje3jh.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"xyxyxyx\", \"x\") == 4\\n  MethodError:\
    \ no method matching replace(::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\\
    n    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    ...\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmp88xje3jh.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp88xje3jh.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp88xje3jh.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmp88xje3jh.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  MethodError: no method matching replace(::String,\
    \ ::String)\\n  Closest candidates are:\\n    replace(!Matched::Union{Function,\
    \ Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\\\
    n    replace(::String, !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\\\
    n    replace(::AbstractString, !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\\\
    n    ...\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmp88xje3jh.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp88xje3jh.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [i"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if(string == \"\" || substring == \"\")\n        return 0\n    end\n \
    \   count = 0\n    for i in 1:length(string)\n        if(string[i:i+length(substring)-1]\
    \ == substring)\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6hxw9gfi.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError:\
    \ attempt to access 9-codeunit String at index [8:10]\\n  Stacktrace:\\n   [1]\
    \ checkbounds\\n     @ ./strings/basic.jl:216 [inlined]\\n   [2] getindex\\n \
    \    @ ./strings/string.jl:261 [inlined]\\n   [3] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmp6hxw9gfi.jl:15\\n   [4] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp6hxw9gfi.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp6hxw9gfi.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp6hxw9gfi.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmp6hxw9gfi.jl:15\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp6hxw9gfi.jl:29 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp6hxw9gfi.jl:25\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      2      4\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmp6hxw9gfi.jl:23\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n  if length(substring) > length(string) \n    return 0\n  end\n  return findall(r\"\
    $substring\", string)[2] - 1\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1vx1cg6f.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"xyxyxyx\", \"x\") == 4\\n  BoundsError:\
    \ attempt to access 0-element Vector{UnitRange{Int64}} at index [2]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:861 [inlined]\\n   [2] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmp1vx1cg6f.jl:13\\n   [3] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp1vx1cg6f.jl:21 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp1vx1cg6f.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmp1vx1cg6f.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError: attempt to access 0-element\
    \ Vector{UnitRange{Int64}} at index [2]\\n  Stacktrace:\\n   [1] getindex\\n \
    \    @ ./array.jl:861 [inlined]\\n   [2] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmp1vx1cg6f.jl:13\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp1vx1cg6f.jl:22 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp1vx1cg6f.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmp1vx1cg6f.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 0-element\
    \ Vector{UnitRange{Int64}} at index [2]\\n  Stacktrace:\\n   [1] getindex\\n \
    \    @ ./array.jl:861 [inlined]\\n   [2] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmp1vx1cg6f.jl:13\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp1vx1cg6f.jl:23 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) > length(string)\n        return 0\n    end\n   \
    \ count = 0\n    for i = 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp_0mfekiy.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp_0mfekiy.jl:15\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp_0mfekiy.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp_0mfekiy.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp_0mfekiy.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp_0mfekiy.jl:15\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp_0mfekiy.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp_0mfekiy.jl:25\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_0mfekiy.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    num_times = 0\n    if substring in string\n        locs = findall(string,\
    \ substring)\n        num_times = size(locs, 1)\n    end\n    return num_times\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpa8m0daqh.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  use occursin(x, y)\
    \ for string containment\\n  Stacktrace:\\n   [1] error(s::String)\\n     @ Base\
    \ ./error.jl:33\\n   [2] in(#unused#::String, #unused#::String)\\n     @ Base\
    \ ./strings/search.jl:638\\n   [3] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmpa8m0daqh.jl:11\\n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpa8m0daqh.jl:22 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpa8m0daqh.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpa8m0daqh.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  use occursin(x, y) for string containment\\\
    n  Stacktrace:\\n   [1] error(s::String)\\n     @ Base ./error.jl:33\\n   [2]\
    \ in(#unused#::String, #unused#::String)\\n     @ Base ./strings/search.jl:638\\\
    n   [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpa8m0daqh.jl:11\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpa8m0daqh.jl:23 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpa8m0daqh.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpa8m0daqh.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  use occursin(x, y) for string containment\\\
    n  Stacktrace:\\n   [1] error(s::String)\\n     @ Base ./error.jl:33\\n   [2]\
    \ in(#unused#::String, #unused#::String)\\n     @ Base ./strings/search.jl:638\\\
    n   [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpa8m0daqh.jl:11\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:44"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == \"\" || substring == \"\"\n        return 0\n    end\n  \
    \  last_index = -1\n    result = 0\n    while true\n        last_index = search(string,\
    \ substring, last_index + 1)\n        if last_index == -1\n            break\n\
    \        end\n        result += 1\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpuvwegvd2.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"xyxyxyx\", \"x\") == 4\\n  UndefVarError:\
    \ search not defined\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmpuvwegvd2.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpuvwegvd2.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpuvwegvd2.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpuvwegvd2.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  UndefVarError: search not defined\\\
    n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmpuvwegvd2.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpuvwegvd2.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpuvwegvd2.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpuvwegvd2.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  UndefVarError: search not defined\\\
    n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmpuvwegvd2.jl:16\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpuvwegvd2.jl:32 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpuvwegvd2.jl:28\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    1      3      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    how_many_times = 0\n    for i in 1:length(string)\n        for j in 1:length(substring)\n\
    \            if substring[j] == string[i]\n                how_many_times += 1\n\
    \            else\n                how_many_times = 0\n            end\n     \
    \   end\n    end\n    return how_many_times\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9rssrli6.jl:28\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9rssrli6.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9rssrli6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp9rssrli6.jl:29\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9rssrli6.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9rssrli6.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp9rssrli6.jl:30\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9rssrli6.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9rssrli6.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9rssrli6.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    ntimes = 0\n    m = length(substring)\n    for ii = 1:length(string)-m+1\n\
    \        if string[ii:ii+m-1] == substring\n            ntimes += 1\n        end\n\
    \    end\n    return ntimes\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    n = length(string)\n    k = length(substring)\n    for\
    \ i in 1:n-k+1\n        if string[i:i+k-1] == substring\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\" \n        return 0\n    end\n    # search for any\
    \ occurence of substring inside string\n    return count(string, substring) +\
    \ how_many_times(string[2:end], substring)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    len = length(substring)\n    occurences = []\n    for i in 1:length(string)\n\
    \        if string[i] == substring[1]\n            push!(occurences, i)\n    \
    \    end\n    end\n    @assert !isempty(occurences)\n    result = 0\n    for o\
    \ in occurences\n        if o + len <= length(string)\n            is_substring\
    \ = true\n            for j in 1:len\n                if string[o + j - 1] !=\
    \ substring[j]\n                    is_substring = false\n                   \
    \ break\n                end\n            end\n            if is_substring\n \
    \               result += 1\n            end\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t\
    @test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\
    \t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\"\
    , \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5k0x_m76.jl:40\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  AssertionError: !(isempty(occurences))\\\
    n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmp5k0x_m76.jl:17\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp5k0x_m76.jl:40 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5k0x_m76.jl:39\\ntest set:\
    \ Test Failed at /tmp/tmp5k0x_m76.jl:41\\n  Expression: candidate(\"xyxyxyx\"\
    , \"x\") == 4\\n   Evaluated: 3 == 4\\nStacktrace:\\n [1] macro expansion\\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n [2] macro expansion\\n   @ /tmp/tmp5k0x_m76.jl:41 [inlined]\\n\
    \ [3] macro expansion\\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n [4] top-level scope\\n   @ /tmp/tmp5k0x_m76.jl:39\\ntest set: Test\
    \ Failed at /tmp/tmp5k0x_m76.jl:42\\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\\n   Evaluated: 3 == 4'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n = length(substring)\n    iters = length(string) - n + 1\n    f = (x\
    \ -> string[x:x+n-1]==substring)\n    return sum(f.(1:iters))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == \"\" || substring == \"\"\n        return 0\n    end\n  \
    \  left = nextind(string, substring)\n    cnt = 0\n    while left != -1\n    \
    \    cnt += 1\n        left = nextind(string, substring, left + 1)\n    end\n\
    \    return cnt\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprpcck4s0.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(\"xyxyxyx\", \"x\") == 4\\n  MethodError:\
    \ no method matching nextind(::String, ::String)\\n  Closest candidates are:\\\
    n    nextind(::String, !Matched::Int64) at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:150\\\
    n    nextind(::AbstractString, !Matched::Int64) at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:553\\\
    n    nextind(::AbstractString, !Matched::Int64, !Matched::Int64) at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:555\\\
    n    ...\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmprpcck4s0.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprpcck4s0.jl:27 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprpcck4s0.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmprpcck4s0.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  MethodError: no method matching nextind(::String,\
    \ ::String)\\n  Closest candidates are:\\n    nextind(::String, !Matched::Int64)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:150\\n   \
    \ nextind(::AbstractString, !Matched::Int64) at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:553\\\
    n    nextind(::AbstractString, !Matched::Int64, !Matched::Int64) at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:555\\\
    n    ...\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmprpcck4s0.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmprpcck4s0.jl:28 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    s = 0\n    for i = 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            s += 1\n        end\n    end\n    return s\nend\n\
    \ \nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmphe74qnvh.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmphe74qnvh.jl:12\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmphe74qnvh.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmphe74qnvh.jl:23\ntest set:\
    \ Error During Test at /tmp/tmphe74qnvh.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmphe74qnvh.jl:12\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmphe74qnvh.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmphe74qnvh.jl:23\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphe74qnvh.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string)\n        count += tryparse(Int64,\
    \ string[i:i+length(substring)-1] == substring)\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfv7k3ebp.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"xyxyxyx\", \"x\") == 4\\n  MethodError:\
    \ no method matching tryparse(::Type{Int64}, ::Bool)\\n  Closest candidates are:\\\
    n    tryparse(::Type{T}, !Matched::AbstractString; base) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:235\\\
    n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmpfv7k3ebp.jl:12\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfv7k3ebp.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpfv7k3ebp.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpfv7k3ebp.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  MethodError: no method matching tryparse(::Type{Int64},\
    \ ::Bool)\\n  Closest candidates are:\\n    tryparse(::Type{T}, !Matched::AbstractString;\
    \ base) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/parse.jl:235\\\
    n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmpfv7k3ebp.jl:12\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfv7k3ebp.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpfv7k3ebp.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == \"\" \n        return 0\n    end\n    if substring == \"\"\
    \n        return length(string) + 1\n    end\n    count = 0\n    max_index = length(string)\
    \ - length(substring) + 1\n    for i in 1:max_index\n        if string[i:i+length(substring)-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    # count the number of times substring appears in string\n    count = 0\n\
    \    for i in 1:length(string)\n        m = match(string[i:end], substring)\n\
    \        if m != nothing\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t\
    @test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\
    \t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\"\
    , \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplxbfww7_.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(\"xyxyxyx\", \"x\") == 4\\n  MethodError:\
    \ no method matching match(::String, ::String)\\n  Closest candidates are:\\n\
    \    match(!Matched::Regex, ::Union{SubString{String}, String}, !Matched::Integer)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:367\\n    match(!Matched::Regex,\
    \ ::Union{SubString{String}, String}, !Matched::Integer, !Matched::UInt32) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:367\\n    match(!Matched::Regex,\
    \ ::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:388\\\
    n    ...\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmplxbfww7_.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplxbfww7_.jl:26 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplxbfww7_.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmplxbfww7_.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  MethodError: no method matching match(::String,\
    \ ::String)\\n  Closest candidates are:\\n    match(!Matched::Regex, ::Union{SubString{String},\
    \ String}, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:367\\\
    n    match(!Matched::Regex, ::Union{SubString{String}, String}, !Matched::Integer,\
    \ !Matched::UInt32) at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:367\\\
    n    match(!Matched::Regex, ::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:388\\\
    n    ...\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmplxbfww7_.jl:13\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmplxbfww7_.jl:27 [inlined]\\\
    n   [4] macro expansion\\"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    match string in\n        \"\" => 0\n        else => \n            count\
    \ = 0\n            string = string[string.index(substring) : length(string)]\n\
    \            while contains(string, substring)\n                count += 1\n \
    \               string = string[string.index(substring) + 1 : length(string)]\n\
    \            end\n            count\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmp087ekfok.jl:9 expected\
    \ \"end\", got \"string\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp087ekfok.jl:10\n\
    in expression starting at /tmp/tmp087ekfok.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    substr_len = length(substring)\n    str_len = length(string)\n    if substr_len\
    \ == 0 || str_len == 0\n        return 0\n    end\n    count = 0\n    for i in\
    \ 1:str_len-substr_len+1\n        substr = string[i:i+substr_len-1]\n        if\
    \ substr == substring\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t\
    @test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\
    \t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\"\
    , \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return length(matchall(substring, string))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpt39m46_n.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  UndefVarError: matchall\
    \ not defined\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmpt39m46_n.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpt39m46_n.jl:17 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpt39m46_n.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpt39m46_n.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  UndefVarError: matchall not defined\\\
    n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmpt39m46_n.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpt39m46_n.jl:18 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpt39m46_n.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpt39m46_n.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  UndefVarError: matchall not defined\\\
    n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmpt39m46_n.jl:10\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpt39m46_n.jl:19 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpt39m46_n.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpt39m46_n.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  UndefVarError: matchall not defined\\\
    n  Stacktr"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n = 0\n    for i in 1:length(string) - length(substring) + 1\n       \
    \ n += (string[i:i+length(substring)] == substring)\n    end\n    return n\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpj052xpqt.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"xyxyxyx\", \"x\") == 4\\n  BoundsError:\
    \ attempt to access 7-codeunit String at index [7:8]\\n  Stacktrace:\\n   [1]\
    \ checkbounds\\n     @ ./strings/basic.jl:216 [inlined]\\n   [2] getindex\\n \
    \    @ ./strings/string.jl:261 [inlined]\\n   [3] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmpj052xpqt.jl:12\\n   [4] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpj052xpqt.jl:22 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpj052xpqt.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpj052xpqt.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError: attempt to access 9-codeunit\
    \ String at index [7:10]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpj052xpqt.jl:12\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmpj052xpqt.jl:23 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmpj052xpqt.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpj052xpqt.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [5:9]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpj052xpqt.jl:12\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/s"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    index = 1\n    @inbounds while index <= length(string)\n\
    \        subindex = findfirst(string[index:end], substring)\n        if subindex\
    \ == nothing\n            break\n        end\n        index += subindex\n    \
    \    count += 1\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmoudabig.jl:28\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmoudabig.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmoudabig.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpmoudabig.jl:29\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmoudabig.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmoudabig.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpmoudabig.jl:30\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmoudabig.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmoudabig.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmoudabig.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) > length(string)\n        return 0\n    end\n   \
    \ if length(substring) == 0\n        return 0\n    end\n    substring_index =\
    \ findfirst(string, substring)\n    counter = 0\n    while substring_index !=\
    \ 0\n        counter += 1\n        substring_index = findfirst(string[substring_index+1:end],\
    \ substring)\n    end\n    return counter\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpncm6m34s.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"xyxyxyx\", \"x\") == 4\\n  MethodError:\
    \ no method matching +(::Nothing, ::Int64)\\n  Closest candidates are:\\n    +(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\\\
    n    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\\\
    n    ...\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmpncm6m34s.jl:20\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpncm6m34s.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpncm6m34s.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string)\n        if string[i] == substring[1]\n\
    \            if string[i:(i+length(substring)-1)] == substring\n             \
    \   count += 1\n            end\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp55xi8m96.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [9:11]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp55xi8m96.jl:13\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp55xi8m96.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp55xi8m96.jl:24\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp55xi8m96.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n_times = 0\n    for i = 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            n_times += 1\n        end\n    end\n    return n_times\n\
    end\n    \nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpoddjiljg.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpoddjiljg.jl:12\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpoddjiljg.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpoddjiljg.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpoddjiljg.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpoddjiljg.jl:12\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpoddjiljg.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpoddjiljg.jl:23\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoddjiljg.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return findall(r\"$substring\", string).size\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsohfv7fh.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  type Array has no\
    \ field size\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpsohfv7fh.jl:10\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpsohfv7fh.jl:17 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpsohfv7fh.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpsohfv7fh.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  type Array has no field size\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmpsohfv7fh.jl:10\\n   [3] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpsohfv7fh.jl:18 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpsohfv7fh.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpsohfv7fh.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  type Array has no field size\\n \
    \ Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmpsohfv7fh.jl:10\\n   [3] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpsohfv7fh.jl:19 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpsohfv7fh.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpsohfv7"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    return length(findall(substring,\
    \ string))\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplorx1_5t.jl:22\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplorx1_5t.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplorx1_5t.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplorx1_5t.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string==\"\" || substring==\"\" \n        return 0\n    end\n    count=0\n\
    \    i=1\n    while i<=length(string)-length(substring)+1\n        if string[i:i+length(substring)-1]==substring\n\
    \            count+=1\n            i+=length(substring)\n        else\n      \
    \      i+=1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9y9owntw.jl:32\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9y9owntw.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9y9owntw.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9y9owntw.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    pos_last_matching = 0\n    count = 0\n    while true\n        pos_last_matching\
    \ = findfirst(string, substring, overlap=true, offset=pos_last_matching+1)\n \
    \       if pos_last_matching == nothing\n            break\n        end\n    \
    \    count += 1\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    # Nothing to search\n    if substring == \"\"\n        return 0\n    end\n\
    \    # Nothing to search in\n    if string == \"\"\n        return 0\n    end\n\
    \    # A substring cant be longer than the string, \n    # so there is nothing\
    \ to search for\n    if length(substring) > length(string)\n        return 0\n\
    \    end\n    # The substring is as long as the string so it can only be found\
    \ once\n    if length(substring) == length(string)\n        if string == substring\n\
    \            return 1\n        else\n            return 0\n        end\n    end\n\
    \    count = 0\n    for i in 1:length(string)\n        # Search for the substring\n\
    \        if string[i:i+length(substring)-1] == substring\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4q88gyxj.jl:47\\n  Test threw\
    \ exception\\n  Expression: candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError:\
    \ attempt to access 9-codeunit String at index [8:10]\\n  Stacktrace:\\n   [1]\
    \ checkbounds\\n     @ ./strings/basic.jl:216 [inlined]\\n   [2] getindex\\n \
    \    @ ./strings/string.jl:261 [inlined]\\n   [3] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmp4q88gyxj.jl:34\\n   [4] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp4q88gyxj.jl:47 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp4q88gyxj.jl:44\\ntest set:\
    \ Error During Test at /tmp/tmp4q88gyxj.jl:48\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmp4q88gyxj.jl:34\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmp4q88gyxj.jl:48 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmp4q88gyxj.jl:44\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      2      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    a = 1\n    contador = 0\n    for i in 1:length(string)\n        if string[i]\
    \ == substring[a]\n            a += 1\n            if a == length(substring)+1\n\
    \                contador += 1\n                a = 1\n        else\n        \
    \    a = 1\n        end\n    end\n    return contador\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp30ziw66a.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp30ziw66a.jl:1\n\
    in expression starting at /tmp/tmp30ziw66a.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if string == \"\"\n        return 0\n    end\n    n = length(string)\n\
    \    m = length(substring)\n    s = z_algorithm(substring)\n    res = 0\n    i\
    \ = 1\n    while i <= n\n        if substring == string[i:i+m-1]\n           \
    \ res += 1\n            i += m\n        else\n            res += 1\n         \
    \   i += s[end] + 1\n        end\n    end\n    return res\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\")\
    \ == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0kjym8ms.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  UndefVarError: z_algorithm\
    \ not defined\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmp0kjym8ms.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0kjym8ms.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0kjym8ms.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp0kjym8ms.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  UndefVarError: z_algorithm not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmp0kjym8ms.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0kjym8ms.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0kjym8ms.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp0kjym8ms.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  UndefVarError: z_algorithm not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmp0kjym8ms.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0kjym8ms.jl:37 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0kjym8ms.jl:33\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    1      3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0kjym8ms.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\"\n        return 0\n    end\n    temp = 0\n    index\
    \ = string.index(substring)\n    while index != nothing\n        temp += 1\n \
    \       index = string.index(substring, index+1)\n    end\n    return temp\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpm7cv8od6.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  type String has no\
    \ field index\\n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\\
    n   [2] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmpm7cv8od6.jl:14\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpm7cv8od6.jl:26 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpm7cv8od6.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpm7cv8od6.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  type String has no field index\\n  Stacktrace:\\\
    n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmpm7cv8od6.jl:14\\n   [3] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpm7cv8od6.jl:27 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpm7cv8od6.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmpm7cv8od6.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  type String has no field index\\\
    n  Stacktrace:\\n   [1] getproperty\\n     @ ./Base.jl:42 [inlined]\\n   [2] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmpm7cv8od6.jl:14\\n   [3] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmpm7cv8od6.jl:28 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpm7cv8od6.jl:25\\ntest set:\
    \ Error During Test at /tmp/tmp"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    N = length(string)\n    M = length(substring)\n    m = zeros(Int64,N-M+1)\n\
    \    for i = 1:N-M+1\n        if string[i:i+M-1] == substring\n            m[i]\
    \ = 1\n        end\n    end\n    return sum(m)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n  len_substr = length(substring)\n  start_indices = map(x -> strfind(string,\
    \ substring, overlapping=true)[x][1], 1:length(strfind(string, substring, overlapping=true)))\n\
    \  frequencies = map(x -> count(start_indices .== x), unique(start_indices))\n\
    \  sum(frequencies)\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp10_1hf2x.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  UndefVarError: strfind\
    \ not defined\\n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmp10_1hf2x.jl:11\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp10_1hf2x.jl:20 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp10_1hf2x.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmp10_1hf2x.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  UndefVarError: strfind not defined\\\
    n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmp10_1hf2x.jl:11\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp10_1hf2x.jl:21 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp10_1hf2x.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmp10_1hf2x.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  UndefVarError: strfind not defined\\\
    n  Stacktrace:\\n   [1] how_many_times(string::String, substring::String)\\n \
    \    @ Main /tmp/tmp10_1hf2x.jl:11\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp10_1hf2x.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp10_1hf2x.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmp10_1hf2x.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  UndefVarError: strfind not defined\\\
    n  Stacktrace:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    s = length(string)\n    sub = length(substring)\n    count = 0\n    if\
    \ s == 0 || sub == 0\n        return 0\n    end\n    if s < sub\n        return\
    \ 0\n    end\n    for i in 1:s\n        if i+sub-1 <= s\n            if string[i:i+sub-1]\
    \ == substring\n                count += 1\n            end\n        end\n   \
    \ end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    string_length = length(string)\n    substring_length = length(substring)\n\
    \    if string_length < substring_length\n        return 0\n    end\n    if string_length\
    \ == substring_length && string == substring\n        return 1\n    end\n    n_substrings\
    \ = 1\n    for i in 1:substring_length\n        if string[i] == substring[1]\n\
    \            if string[i:i+substring_length-1] == substring[2:substring_length]\n\
    \                n_substrings += 1\n            end\n        end\n    end\n  \
    \  return n_substrings\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl0qu2mgc.jl:34\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl0qu2mgc.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl0qu2mgc.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpl0qu2mgc.jl:35\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl0qu2mgc.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl0qu2mgc.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl0qu2mgc.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count::Int64 = 0\n    string_length::Int64 = length(string)\n    substring_length::Int64\
    \ = length(substring)\n    for i::Int64 in 1:string_length\n        if string[i:i+substring_length-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmppombyr38.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(\"cacacacac\", \"cac\") == 4\\n  BoundsError:\
    \ attempt to access 9-codeunit String at index [8:10]\\n  Stacktrace:\\n   [1]\
    \ checkbounds\\n     @ ./strings/basic.jl:216 [inlined]\\n   [2] getindex\\n \
    \    @ ./strings/string.jl:261 [inlined]\\n   [3] how_many_times(string::String,\
    \ substring::String)\\n     @ Main /tmp/tmppombyr38.jl:14\\n   [4] macro expansion\\\
    n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmppombyr38.jl:27 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmppombyr38.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmppombyr38.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\\n  Stacktrace:\\n   [1] checkbounds\\n     @ ./strings/basic.jl:216\
    \ [inlined]\\n   [2] getindex\\n     @ ./strings/string.jl:261 [inlined]\\n  \
    \ [3] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmppombyr38.jl:14\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [5] macro expansion\\n     @ /tmp/tmppombyr38.jl:28 [inlined]\\\
    n   [6] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [7] top-level scope\\n     @ /tmp/tmppombyr38.jl:24\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    2      2      4\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmppombyr38.jl:22\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    # Count the number of times that the substring is found in the string\n\
    \    count = 0\n    for i = 1:length(string)\n        # Search for the substring\
    \ in the current segment\n        if string[i:end] |> findfirst(substring) !=\
    \ nothing\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmps10k3rlt.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(\"xyxyxyx\", \"x\") == 4\\n  TypeError:\
    \ non-boolean (Char) used in boolean context\\n  Stacktrace:\\n   [1] findfirst(A::String)\\\
    n     @ Base ./array.jl:1912\\n   [2] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmps10k3rlt.jl:14\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmps10k3rlt.jl:26 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmps10k3rlt.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmps10k3rlt.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  TypeError: non-boolean (Char) used\
    \ in boolean context\\n  Stacktrace:\\n   [1] findfirst(A::String)\\n     @ Base\
    \ ./array.jl:1912\\n   [2] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmps10k3rlt.jl:14\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmps10k3rlt.jl:27 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmps10k3rlt.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmps10k3rlt.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\\n  TypeError: non-boolean (Char) used\
    \ in boolean context\\n  Stacktrace:\\n   [1] findfirst(A::String)\\n     @ Base\
    \ ./array.jl:1912\\n   [2] how_many_times(string::String, substring::String)\\\
    n     @ Main /tmp/tmps10k3rlt.jl:14\\n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmps10k3rlt.jl:28 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inl"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string)\n        if string[i:end] ==\
    \ substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpptjfansa.jl:24\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptjfansa.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptjfansa.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpptjfansa.jl:25\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptjfansa.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptjfansa.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpptjfansa.jl:26\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpptjfansa.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpptjfansa.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpptjfansa.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    (offset = findnext(string, substring) == 0) ? 0 : 1 + how_many_times(string[offset:end],\
    \ substring)\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmps4t_5b_i.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) > length(string)\n        return 0\n    end\n   \
    \ counter = 0\n    for i = 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            counter += 1\n        end\n    end\n    return counter\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp5b7z4o66.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp5b7z4o66.jl:15\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp5b7z4o66.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp5b7z4o66.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp5b7z4o66.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp5b7z4o66.jl:15\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp5b7z4o66.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp5b7z4o66.jl:25\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5b7z4o66.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    ret_cnt = 0\n    lsub = length(substring)\n    for i in 1:length(string)\n\
    \        if substring == string[i:i+lsub-1]\n            ret_cnt += 1\n      \
    \  end\n    end\n    return ret_cnt\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgnzh72om.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpgnzh72om.jl:13\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpgnzh72om.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpgnzh72om.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpgnzh72om.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpgnzh72om.jl:13\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpgnzh72om.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpgnzh72om.jl:23\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgnzh72om.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    strstart = 1\n    count = 0\n    while strstart + length(substring) -\
    \ 1 <= length(string)\n        if string[strstart:strstart+length(substring)-1]\
    \ == substring\n            count += 1\n        end\n        strstart += 1\n \
    \   end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    substr = r\"$0\" * length(substring)\n    regex = regex(substr, \"$0\"\
    )\n    matches = match(regex, string)\n    return length(matches) - 1\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid interpolation syntax: \"$0\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd112f1ki.jl:11\nin expression starting at\
    \ /tmp/tmpd112f1ki.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return length(findall(string, substring))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkbu88ywm.jl:17\n  Expression: candidate(\"\
    \", \"x\") == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpkbu88ywm.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkbu88ywm.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpkbu88ywm.jl:18\n  Expression: candidate(\"xyxyxyx\", \"x\"\
    ) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkbu88ywm.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkbu88ywm.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpkbu88ywm.jl:19\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkbu88ywm.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkbu88ywm.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpkbu88ywm.jl:20\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkbu88ywm.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkbu88ywm.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkbu88ywm.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    l = length(substring)\n    c = 0\n    for i in 1:length(string)-l+1\n\
    \        if string[i:i+l-1] == substring\n            c += 1\n        end\n  \
    \  end\n    return c\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i = 1:length(string)\n        if string[i:end] == substring\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphf1w46l9.jl:24\n  Expression: candidate(\"\
    xyxyxyx\", \"x\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphf1w46l9.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphf1w46l9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmphf1w46l9.jl:25\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphf1w46l9.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphf1w46l9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmphf1w46l9.jl:26\n  Expression: candidate(\"john doe\", \"john\"\
    ) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphf1w46l9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphf1w46l9.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphf1w46l9.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count::Int64 = 0\n    i::Int64 = 1\n    while i <= length(string) - length(substring)\
    \ + 1\n        if string[i:i+length(substring)-1] == substring\n            count\
    \ += 1\n        end\n        i += 1\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) > length(string)\n        return 0\n    end\n   \
    \ string_s = String(string)\n    substr_s = String(substring)\n    times = 0\n\
    \    for i in 1:length(string)\n        if string_s[i:i+length(substr_s)-1] ==\
    \ substr_s\n            times += 1\n        end\n    end\n    return times\nend\n\
    # test_how_many_times()\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdrqcv1y3.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpdrqcv1y3.jl:17\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpdrqcv1y3.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpdrqcv1y3.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpdrqcv1y3.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpdrqcv1y3.jl:17\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpdrqcv1y3.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpdrqcv1y3.jl:28\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdrqcv1y3.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    idx = lastindex(string, substring)\n    if idx == 0\n        return 0\n\
    \    else\n        return 1 + how_many_times(string[idx:end], substring)\n   \
    \ end\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp52otbn1h.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\", \"x\") == 0\\n  MethodError: no method\
    \ matching axes(::String, ::String)\\n  Closest candidates are:\\n    axes(!Matched::AbstractArray{T,\
    \ N}, ::Any) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:72\\\
    n    axes(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:93\\\
    n  Stacktrace:\\n   [1] lastindex\\n     @ ./abstractarray.jl:373 [inlined]\\\
    n   [2] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmp52otbn1h.jl:10\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp52otbn1h.jl:22 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp52otbn1h.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp52otbn1h.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\\n  MethodError: no method matching axes(::String,\
    \ ::String)\\n  Closest candidates are:\\n    axes(!Matched::AbstractArray{T,\
    \ N}, ::Any) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:72\\\
    n    axes(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:93\\\
    n  Stacktrace:\\n   [1] lastindex\\n     @ ./abstractarray.jl:373 [inlined]\\\
    n   [2] how_many_times(string::String, substring::String)\\n     @ Main /tmp/tmp52otbn1h.jl:10\\\
    n   [3] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [4] macro expansion\\n     @ /tmp/tmp52otbn1h.jl:23 [inlined]\\\
    n   [5] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp52otbn1h.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp52otbn1h.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\\n  MethodError: no method matching "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    idx = 1\n    while idx <= length(string) - length(substring)\
    \ + 1\n        if string[idx:idx+length(substring)-1] == substring\n         \
    \   count += 1\n        end\n        idx += 1\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    N = length(string)\n    M = length(substring)\n    sum = 0\n    for i\
    \ in 1:N\n        if string[i:i+M-1] == substring\n            sum += 1\n    \
    \    end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0olakso_.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp0olakso_.jl:14\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0olakso_.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0olakso_.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp0olakso_.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp0olakso_.jl:14\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0olakso_.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0olakso_.jl:24\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0olakso_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    i = 1\n    total = 0\n    while (i + length(substring) - 1) <= length(string)\n\
    \        if string[i:i+length(substring)] == substring\n            total += 1\n\
    \        end\n        i += 1\n    end\n    return total\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd_xqpy41.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  BoundsError: attempt to access\
    \ 7-codeunit String at index [7:8]\n  Stacktrace:\n   [1] checkbounds\n     @\
    \ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpd_xqpy41.jl:13\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpd_xqpy41.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpd_xqpy41.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpd_xqpy41.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt to access 9-codeunit\
    \ String at index [7:10]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpd_xqpy41.jl:13\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpd_xqpy41.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpd_xqpy41.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpd_xqpy41.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [5:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpd_xqpy41.jl:13\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd_xqpy41.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return length(findall(r\"(?=($substring))\", string))\nend\n```\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa0terlxw.jl:12\nin expression starting at\
    \ /tmp/tmpa0terlxw.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    n=0\n    for i in 1:length(string)-length(substring)+1\n        if string[i:i+length(substring)-1]==substring\n\
    \            n+=1\n        end\n    end\n    return n\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    substr_len = length(substring)\n    if substr_len == 0\n        return\
    \ 0\n    end\n    if length(string) < substr_len\n        return 0\n    end\n\
    \    times = 0\n    i = 1\n    while i <= length(string) - substr_len + 1\n  \
    \      if string[i:i+substr_len-1] == substring\n            times += 1\n    \
    \        i += substr_len\n        else\n            i += 1\n        end\n    end\n\
    \    return times\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7hf5g2ea.jl:36\n  Expression: candidate(\"\
    cacacacac\", \"cac\") == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7hf5g2ea.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7hf5g2ea.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7hf5g2ea.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i = 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpqzcsl8nh.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpqzcsl8nh.jl:12\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpqzcsl8nh.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpqzcsl8nh.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpqzcsl8nh.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpqzcsl8nh.jl:12\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpqzcsl8nh.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpqzcsl8nh.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqzcsl8nh.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i = 1:length(string) - length(substring) + 1\n    \
    \    if string[i:i+length(substring) - 1] == substring\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    start = 1\n    while(start <= length(string))\n       \
    \ count += length(match(string[start:end], substring).match)\n        start +=\
    \ 1\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq0m0lzs2.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  MethodError: no method matching\
    \ match(::String, ::String)\n  Closest candidates are:\n    match(!Matched::Regex,\
    \ ::Union{SubString{String}, String}, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:367\n\
    \    match(!Matched::Regex, ::Union{SubString{String}, String}, !Matched::Integer,\
    \ !Matched::UInt32) at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:367\n\
    \    match(!Matched::Regex, ::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:388\n\
    \    ...\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpq0m0lzs2.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq0m0lzs2.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq0m0lzs2.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpq0m0lzs2.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  MethodError: no method matching match(::String,\
    \ ::String)\n  Closest candidates are:\n    match(!Matched::Regex, ::Union{SubString{String},\
    \ String}, !Matched::Integer) at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:367\n\
    \    match(!Matched::Regex, ::Union{SubString{String}, String}, !Matched::Integer,\
    \ !Matched::UInt32) at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:367\n\
    \    match(!Matched::Regex, ::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/regex.jl:388\n\
    \    ...\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpq0m0lzs2.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq0m0lzs2.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/sha"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq0m0lzs2.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\" \n        return 0\n    end\n    if string == \"\"\
    \n        return 0\n    end\n    return length(first.((eachmatch(r\"$substring\"\
    , string),)))\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\
    \t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") ==\
    \ 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john\
    \ doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprven3v8c.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  ArgumentError: collection\
    \ must be non-empty\n  Stacktrace:\n    [1] first\n      @ ./abstractarray.jl:419\
    \ [inlined]\n    [2] _broadcast_getindex_evalf\n      @ ./broadcast.jl:670 [inlined]\n\
    \    [3] _broadcast_getindex\n      @ ./broadcast.jl:643 [inlined]\n    [4] #29\n\
    \      @ ./broadcast.jl:1075 [inlined]\n    [5] ntuple\n      @ ./ntuple.jl:48\
    \ [inlined]\n    [6] copy\n      @ ./broadcast.jl:1075 [inlined]\n    [7] materialize\n\
    \      @ ./broadcast.jl:860 [inlined]\n    [8] how_many_times(string::String,\
    \ substring::String)\n      @ Main /tmp/tmprven3v8c.jl:16\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmprven3v8c.jl:24 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmprven3v8c.jl:22\ntest set:\
    \ Error During Test at /tmp/tmprven3v8c.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  ArgumentError: collection must be\
    \ non-empty\n  Stacktrace:\n    [1] first\n      @ ./abstractarray.jl:419 [inlined]\n\
    \    [2] _broadcast_getindex_evalf\n      @ ./broadcast.jl:670 [inlined]\n   \
    \ [3] _broadcast_getindex\n      @ ./broadcast.jl:643 [inlined]\n    [4] #29\n\
    \      @ ./broadcast.jl:1075 [inlined]\n    [5] ntuple\n      @ ./ntuple.jl:48\
    \ [inlined]\n    [6] copy\n      @ ./broadcast.jl:1075 [inlined]\n    [7] materialize\n\
    \      @ ./broadcast.jl:860 [inlined]\n    [8] how_many_times(string::String,\
    \ substring::String)\n      @ Main /tmp/tmprven3v8c.jl:16\n    [9] macro expansion\n\
    \      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmprven3v8c.jl:25 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmprven3v8c.jl"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprven3v8c.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    for i in 1:length(string)\n        if string[i:i+length(substring)-1]\
    \ == substring\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
    \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp_6hwmlj_.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt\
    \ to access 9-codeunit String at index [8:10]\n  Stacktrace:\n   [1] checkbounds\n\
    \     @ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmp_6hwmlj_.jl:12\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp_6hwmlj_.jl:25 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp_6hwmlj_.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp_6hwmlj_.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [6:9]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmp_6hwmlj_.jl:12\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp_6hwmlj_.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp_6hwmlj_.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_6hwmlj_.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) == 0\n        return 0\n    end\n    total = 0\n\
    \    for i = 1:length(string)\n        if string[i] == substring[1]\n        \
    \    j = i\n            k = 1\n            while k < length(substring) && j+1\
    \ <= length(string) && string[j+1] == substring[k+1]\n                j += 1\n\
    \                k += 1\n            end\n            if k == length(substring)\n\
    \                total += 1\n            end\n        end\n    end\n    return\
    \ total\nend\nusing Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t\
    @test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\
    \t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\"\
    , \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    res = 0 \n    if substring == \"\"\n        return res\n    end\n    for\
    \ i = 1:length(string)\n        if i + length(substring) - 1 <= length(string)\n\
    \            if string[i:i+length(substring)-1] == substring\n               \
    \ res += 1\n            end\n        end\n    end\n    return res\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\"\
    , \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
    cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    length_substring = length(substring)\n    length_string = length(string)\n\
    \    if length_substring == 0 || length_string == 0\n        return 0\n    end\n\
    \    counter = 0\n    for i in 1:length_string - length_substring + 1\n      \
    \  if string[i:i+length_substring-1] == substring\n            counter += 1\n\
    \        end\n    end\n    return counter\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    count = 0\n    n = length(string)\n    k = length(substring)\n    for\
    \ i in 1:n-k+1\n        if string[i:i+k-1] == substring\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if isempty(substring) \n        return 0\n    end\n    if isempty(string)\n\
    \        return 0\n    end\n    end_at = lastindex(string)\n    count = 0\n  \
    \  while index(string, substring) <= end_at\n        count += 1\n        string\
    \ = replace(string, substring, \"\")\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\"\
    ) == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph5f_ec44.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  UndefVarError: index not\
    \ defined\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmph5f_ec44.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph5f_ec44.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph5f_ec44.jl:28\ntest set:\
    \ Error During Test at /tmp/tmph5f_ec44.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  UndefVarError: index not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmph5f_ec44.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph5f_ec44.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph5f_ec44.jl:28\ntest set:\
    \ Error During Test at /tmp/tmph5f_ec44.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  UndefVarError: index not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmph5f_ec44.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph5f_ec44.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph5f_ec44.jl:28\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    1      3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph5f_ec44.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if substring == \"\" \n        return 0\n    end\n    if length(substring)\
    \ > length(string)\n        return 0\n    end\n    count = 0\n    last_position\
    \ = findlast(string, substring)\n    while last_position > 0\n        count +=\
    \ 1\n        string = string[last_position+1:end]\n        last_position = findlast(string,\
    \ substring)\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcmcs0qmr.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  MethodError: no method matching\
    \ isless(::Int64, ::Nothing)\n  Closest candidates are:\n    isless(::Real, !Matched::AbstractFloat)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:185\n    isless(::Real,\
    \ !Matched::Real) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:430\n\
    \    isless(::Any, !Matched::Missing) at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:88\n\
    \    ...\n  Stacktrace:\n   [1] <(x::Int64, y::Nothing)\n     @ Base ./operators.jl:352\n\
    \   [2] >(x::Nothing, y::Int64)\n     @ Base ./operators.jl:378\n   [3] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmpcmcs0qmr.jl:18\n   [4] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpcmcs0qmr.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpcmcs0qmr.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpcmcs0qmr.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  MethodError: no method matching isless(::Int64,\
    \ ::Nothing)\n  Closest candidates are:\n    isless(::Real, !Matched::AbstractFloat)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:185\n    isless(::Real,\
    \ !Matched::Real) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:430\n\
    \    isless(::Any, !Matched::Missing) at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:88\n\
    \    ...\n  Stacktrace:\n   [1] <(x::Int64, y::Nothing)\n     @ Base ./operators.jl:352\n\
    \   [2] >(x::Nothing, y::Int64)\n     @ Base ./operators.jl:378\n   [3] how_many_times(string::String,\
    \ substring::String)\n     @ Main /tmp/tmpcmcs0qmr.jl:18\n   [4] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpcmcs0qmr.jl:32 [inlined]\n\
    \   [6] macro ex"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcmcs0qmr.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    found = findnext(string, substring, 1)\n    num_found = 0\n    while found\
    \ !== nothing\n        num_found += 1\n        found = findnext(string, substring,\
    \ found + 1)\n    end\n    return num_found\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwubrf9da.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  MethodError: no method matching\
    \ +(::UnitRange{Int64}, ::Int64)\n  For element-wise addition, use broadcasting\
    \ with dot syntax: array .+ scalar\n  Closest candidates are:\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpwubrf9da.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwubrf9da.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwubrf9da.jl:22\ntest set:\
    \ Test Failed at /tmp/tmpwubrf9da.jl:24\n  Expression: candidate(\"xyxyxyx\",\
    \ \"x\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwubrf9da.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwubrf9da.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpwubrf9da.jl:25\n  Expression: candidate(\"cacacacac\", \"\
    cac\") == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwubrf9da.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwubrf9da."
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwubrf9da.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return count(eachmatch(Regex(substring), string))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\")\
    \ == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\"\
    , \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyzhdbzvt.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  TypeError: non-boolean (RegexMatch)\
    \ used in boolean context\n  Stacktrace:\n   [1] _simple_count\n     @ ./reduce.jl:1206\
    \ [inlined]\n   [2] #count#271\n     @ ./reduce.jl:1201 [inlined]\n   [3] #count#270\n\
    \     @ ./reduce.jl:1199 [inlined]\n   [4] count\n     @ ./reduce.jl:1199 [inlined]\n\
    \   [5] how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpyzhdbzvt.jl:10\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpyzhdbzvt.jl:18 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpyzhdbzvt.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpyzhdbzvt.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  TypeError: non-boolean (RegexMatch)\
    \ used in boolean context\n  Stacktrace:\n   [1] _simple_count\n     @ ./reduce.jl:1206\
    \ [inlined]\n   [2] #count#271\n     @ ./reduce.jl:1201 [inlined]\n   [3] #count#270\n\
    \     @ ./reduce.jl:1199 [inlined]\n   [4] count\n     @ ./reduce.jl:1199 [inlined]\n\
    \   [5] how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpyzhdbzvt.jl:10\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpyzhdbzvt.jl:19 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpyzhdbzvt.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpyzhdbzvt.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  TypeError: non-boolean (RegexMatch)\
    \ used in boolean context\n  Stacktrace:\n   [1] _simple_count\n     @ ./reduce.jl:1206\
    \ [inlined]\n   [2] #count#271\n     @ ./reduce.jl:1201 [inlined]\n   [3] #count#270\n\
    \     @ ./reduce.jl:1199 [inlined]\n   [4"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyzhdbzvt.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    return count_overlapping(string, substring)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\
    \t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\",\
    \ \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpaz65va8x.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\", \"x\") == 0\n  UndefVarError: count_overlapping\
    \ not defined\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpaz65va8x.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaz65va8x.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaz65va8x.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpaz65va8x.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"xyxyxyx\", \"x\") == 4\n  UndefVarError: count_overlapping not defined\n\
    \  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n   \
    \  @ Main /tmp/tmpaz65va8x.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaz65va8x.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaz65va8x.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpaz65va8x.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  UndefVarError: count_overlapping not\
    \ defined\n  Stacktrace:\n   [1] how_many_times(string::String, substring::String)\n\
    \     @ Main /tmp/tmpaz65va8x.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaz65va8x.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaz65va8x.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpaz65va8x.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  UndefVarError: count_overlapping not\
    \ defined\n  Stacktrace:\n   [1] how"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaz65va8x.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n  \
    \  >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n\
    \    3\n    \"\"\"\nfunction how_many_times(string::String, substring::String)::Int64\
    \ \n    if length(substring) > length(string) \n        return 0\n    end\n  \
    \  Ns = length(string)\n    Nsub = length(substring)\n    if Ns == Nsub\n    \
    \    if string == substring\n            return 1\n        else\n            return\
    \ 0\n        end\n    end\n    counter = 0\n    index = 0\n    while index < Ns\
    \ - Nsub + 1\n        if substring == string[index:index+Nsub]\n            counter\
    \ += 1\n            index += Nsub\n        else\n            index += 1\n    \
    \    end\n    end\n    return counter\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = how_many_times;\n\t@test(candidate(\"\", \"x\") == 0)\n\t@test(candidate(\"\
    xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"\
    john doe\", \"john\") == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeg41l1_l.jl:40\n  Test threw exception\n\
    \  Expression: candidate(\"xyxyxyx\", \"x\") == 4\n  BoundsError: attempt to access\
    \ 7-codeunit String at index [0:1]\n  Stacktrace:\n   [1] checkbounds\n     @\
    \ ./strings/basic.jl:216 [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261\
    \ [inlined]\n   [3] how_many_times(string::String, substring::String)\n     @\
    \ Main /tmp/tmpeg41l1_l.jl:25\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpeg41l1_l.jl:40 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpeg41l1_l.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpeg41l1_l.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(\"cacacacac\", \"cac\") == 4\n  BoundsError: attempt to access 9-codeunit\
    \ String at index [0:3]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpeg41l1_l.jl:25\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpeg41l1_l.jl:41 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpeg41l1_l.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpeg41l1_l.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(\"john doe\", \"john\") == 1\n  BoundsError: attempt to access 8-codeunit\
    \ String at index [0:4]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216\
    \ [inlined]\n   [2] getindex\n     @ ./strings/string.jl:261 [inlined]\n   [3]\
    \ how_many_times(string::String, substring::String)\n     @ Main /tmp/tmpeg41l1_l.jl:25\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macr"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeg41l1_l.jl:36\n"
  exit_code: 1
  status: SyntaxError

name: HumanEval_82_prime_length
language: jl
results:
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length(string) % 2 == 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_jy9iye9.jl:17\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_jy9iye9.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_jy9iye9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_jy9iye9.jl:18\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_jy9iye9.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_jy9iye9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_jy9iye9.jl:19\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_jy9iye9.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_jy9iye9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_jy9iye9.jl:20\n  Expression: candidate(\"orange\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_jy9iye9.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_jy9iye9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_jy9iye9.jl:21\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 11 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_jy9iye9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length = length(string)\n    if isprime(length)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpooy674nv.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpooy674nv.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpooy674nv.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpooy674nv.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpooy674nv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpooy674nv.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpooy674nv.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpooy674nv.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpooy674nv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpooy674nv.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpooy674nv.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpooy674nv.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpooy674nv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpooy674nv.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpooy674nv.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    num = length(string)\n    if num <= 3\n        return true\n    end\n\
    \    for n in 2:floor(Int, sqrt(num))\n        if num % n == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nprintln(prime_length(\"Hello\"\
    ))\nprintln(prime_length(\"abcdcba\"))\nprintln(prime_length(\"kittens\"))\nprintln(prime_length(\"\
    orange\"))\nprintln(prime_length(\"apple\"))\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "true\ntrue\ntrue\nfalse\ntrue\ntest set: Test Failed at /tmp/tmp6zbf6w7r.jl:39\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6zbf6w7r.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6zbf6w7r.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp6zbf6w7r.jl:45\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6zbf6w7r.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6zbf6w7r.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp6zbf6w7r.jl:46\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6zbf6w7r.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6zbf6w7r.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6zbf6w7r.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    println(length(string))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "b'5\\ntest set: Error During Test at /tmp/tmp4xikfvtx.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hello\") == true\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Bool\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\\\
    n    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\\\
    n    ...\\n  Stacktrace:\\n   [1] prime_length(string::String)\\n     @ Main /tmp/tmp4xikfvtx.jl:10\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4xikfvtx.jl:17 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4xikfvtx.jl:16\\n7\\ntest\
    \ set: Error During Test at /tmp/tmp4xikfvtx.jl:18\\n  Test threw exception\\\
    n  Expression: candidate(\"abcdcba\") == true\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\\\
    n    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\\\
    n    ...\\n  Stacktrace:\\n   [1] prime_length(string::String)\\n     @ Main /tmp/tmp4xikfvtx.jl:10\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4xikfvtx.jl:18 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:128"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    \"\"\"\n    determines if length of string is prime\n    \"\"\"\n    len=length(string)\n\
    \    if  (len==2)||(len==3)||(len==5)||(len==7)||(len==11)||(len==13)||(len==17)||(len==19)||(len==23)||(len==29)||(len==31)||(len==37)||(len==41)||(len==43)||(len==47)||(len==53)||(len==59)||(len==61)||(len==67)||(len==71)||(len==73)||(len==79)||(len==83)||(len==89)||(len==97)||(len==101)||(len==103)||(len==107)||(len==109)||(len==113)||(len==127)||(len==131)||(len==137)||(len==139)||(len==149)||(len==151)||(len==157)||(len==163)||(len==167)||(len==173)||(len==179)||(len==181)||(len==191)||(len==193)||(len==197)||(len==199)||(len==211)||(len==223)||(len==227)||(len==229)||(len==233)||(len==239)||(len==241)||(len==251)||(len==257)||(len==263)||(len==269)||(len==271)||(len==277)||(len==281)||(len==283)||(len==293)||(len==307)||(len==311)||(len==313)||(len==317)||(len==331)||(len==337)||(len==347)||(len==349)||(len==353)||(len==359)||(len==367)||(len==373)||(len==379)||(len==383)||(len==389)||(len==397)||(len==401)||(len==409)||(len==419)|\n\
    using Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpulqvs8si.jl:1\nin expression starting at /tmp/tmpulqvs8si.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if length(string) < 2\n        return false\n    end\n    if length(string)\
    \ > 2\n        for i in 2:length(string)-1\n            if length(string) % i\
    \ == 0\n                return false\n            end\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    l = length(string)\n    if l < 2 || any(i -> l % i == 0, 2:l)\n      \
    \  return false\n    else\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t\
    @test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkiwbpy25.jl:22\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkiwbpy25.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkiwbpy25.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpkiwbpy25.jl:23\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkiwbpy25.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkiwbpy25.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpkiwbpy25.jl:24\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkiwbpy25.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkiwbpy25.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpkiwbpy25.jl:26\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkiwbpy25.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkiwbpy25.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpkiwbpy25.jl:27\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkiwbpy25.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length = length(string)\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107,\
    \ 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193,\
    \ 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281,\
    \ 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383,\
    \ 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479,\
    \ 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593,\
    \ 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683,\
    \ 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809,\
    \ 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911,\
    \ 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997]\n    return length\
    \ in primes\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t\
    @test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2doe1zlh.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmp2doe1zlh.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2doe1zlh.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2doe1zlh.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp2doe1zlh.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp2doe1zlh.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2doe1zlh.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2doe1zlh.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp2doe1zlh.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp2doe1zlh.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2doe1zlh.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2doe1zlh.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp2doe1zlh.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp2doe1zlh.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2doe1zlh.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    return isprime(length(string))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp25ub_9s.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpp25ub_9s.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp25ub_9s.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp25ub_9s.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpp25ub_9s.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpp25ub_9s.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp25ub_9s.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp25ub_9s.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpp25ub_9s.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpp25ub_9s.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp25ub_9s.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp25ub_9s.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpp25ub_9s.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpp25ub_9s.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp25ub_9s.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if string.length == 1 || string.length == 2 || string.length == 3\n  \
    \      return true\n    elseif string.length % 2 == 0\n        return false\n\
    \    else\n        return true\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdyqhb129.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  type String has no field length\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] prime_length(string::String)\n\
    \     @ Main /tmp/tmpdyqhb129.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdyqhb129.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdyqhb129.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpdyqhb129.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  type String has no field length\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] prime_length(string::String)\n\
    \     @ Main /tmp/tmpdyqhb129.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdyqhb129.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdyqhb129.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpdyqhb129.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  type String has no field length\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] prime_length(string::String)\n\
    \     @ Main /tmp/tmpdyqhb129.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdyqhb129.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdyqhb129.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpdyqhb129.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  type String has no field length\n  S"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdyqhb129.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    return isprime(length(string))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdc3ofbu6.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpdc3ofbu6.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdc3ofbu6.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdc3ofbu6.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpdc3ofbu6.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpdc3ofbu6.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdc3ofbu6.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdc3ofbu6.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpdc3ofbu6.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpdc3ofbu6.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdc3ofbu6.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdc3ofbu6.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpdc3ofbu6.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpdc3ofbu6.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdc3ofbu6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    len_str = length(string)\n    for i = 2:len_str\n        if len_str %\
    \ i == 0\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp85yk07xg.jl:23\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp85yk07xg.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp85yk07xg.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp85yk07xg.jl:24\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp85yk07xg.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp85yk07xg.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp85yk07xg.jl:25\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp85yk07xg.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp85yk07xg.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp85yk07xg.jl:27\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp85yk07xg.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp85yk07xg.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp85yk07xg.jl:28\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 13 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp85yk07xg.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    str_length = length(string)\n    for i = 2:str_length-1\n        if str_length\
    \ % i == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuxi70naw.jl:31\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuxi70naw.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuxi70naw.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpuxi70naw.jl:37\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuxi70naw.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuxi70naw.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpuxi70naw.jl:38\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuxi70naw.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuxi70naw.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuxi70naw.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    n = length(string)\n    if n < 2\n        return false\n    end\n    i\
    \ = 2\n    while i <= (n-1)\n        if (rem(n,i) == 0)\n            return false\n\
    \        end\n        i += 1\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t\
    @test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    len=length(string)\n    if len < 2 \n        return false\n    end\n \
    \   for i in 2:len\n        if mod(len,i) == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpznshw2f4.jl:26\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpznshw2f4.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpznshw2f4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpznshw2f4.jl:27\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpznshw2f4.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpznshw2f4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpznshw2f4.jl:28\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpznshw2f4.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpznshw2f4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpznshw2f4.jl:30\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpznshw2f4.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpznshw2f4.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpznshw2f4.jl:31\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpznshw2f4.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    string_length = length(string)\n    if string_length < 2\n        return\
    \ false\n    end\n    for i in 2:string_length-1\n        if string_length % i\
    \ == 0\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length = string(1) #string length must be at least one long, so it is\
    \ not zero.\n    for i = 2:length-1\n        if length%i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2gp902lh.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  MethodError: objects of type String\
    \ are not callable\n  Stacktrace:\n   [1] prime_length(string::String)\n     @\
    \ Main /tmp/tmp2gp902lh.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2gp902lh.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2gp902lh.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp2gp902lh.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  MethodError: objects of type String are not\
    \ callable\n  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmp2gp902lh.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2gp902lh.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2gp902lh.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp2gp902lh.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  MethodError: objects of type String are not\
    \ callable\n  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmp2gp902lh.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2gp902lh.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2gp902lh.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp2gp902lh.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  MethodError: objects of type String are not\
    \ callable\n  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2gp902lh.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    # string is entered as an argument, also called parameter\n    # string\
    \ is not specified as an array\n    if length(string) > 1\n        # True if length\
    \ of string is greater than 1\n        # False if length of string is less than\
    \ or equal to 1\n        # else is optional\n        if length(string) < 4\n \
    \           # True if length of string is less than 4\n            # False if\
    \ length of string is greater than or equal to 4\n            # no else statement\n\
    \            return true\n        elseif length(string) % 2 == 0\n           \
    \ # True if length of string is even\n            # False if length of string\
    \ is odd\n            # elseif is optional\n            return false\n       \
    \ elseif length(string) % 3 == 0\n            # True if length of string is divisible\
    \ by 3\n            # False if length of string is not divisible by 3\n      \
    \      # elseif is optional\n            return false\n        else\n        \
    \    # True if length of string is divisible by 5\n            # False if length\
    \ of string is not divisible by 5\n            # else is optional\n          \
    \  return true\n        end\n    else\n        # True if length of string is equal\
    \ to 1\n        # False if length of string is not equal to 1\n        # else\
    \ is optional\n        return false\n    end\nend\n# Test the function\n@test\
    \ prime_length(\"Hello\") == true\n@test prime_length(\"abcdcba\") == true\n@test\
    \ prime_length(\"kittens\") == true\n@test prime_length(\"orange\") == false\n\
    using Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmpzgmgqrkb.jl:45\nin expression starting at /tmp/tmpzgmgqrkb.jl:45\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length = 0\n    for char in string\n        length += 1\n    end\n   \
    \ if length == 2\n        return true\n    elseif length > 2\n        for i in\
    \ 2:length-1\n            if length % i == 0\n                return false\n \
    \           end\n        end\n        return true\n    else\n        return false\n\
    \    end\nend\n \nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t\
    @test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    len_str = length(string)\n    if isprime(len_str) == true\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyns40_6c.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpyns40_6c.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyns40_6c.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyns40_6c.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpyns40_6c.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpyns40_6c.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyns40_6c.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyns40_6c.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpyns40_6c.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpyns40_6c.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyns40_6c.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyns40_6c.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpyns40_6c.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpyns40_6c.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyns40_6c.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length = string.length \n    if length == 2\n        return true\n   \
    \ end\n    for i = 2:length-1\n        if length % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nprime_length(\"kittens\"\
    )\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: type String has no field length\nStacktrace:\n [1] getproperty\n\
    \   @ ./Base.jl:42 [inlined]\n [2] prime_length(string::String)\n   @ Main /tmp/tmpavz_beik.jl:10\n\
    \ [3] top-level scope\n   @ /tmp/tmpavz_beik.jl:21\nin expression starting at\
    \ /tmp/tmpavz_beik.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    lenght = length(string)\n    if isprime(lenght)\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsdcgw78r.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpsdcgw78r.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsdcgw78r.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsdcgw78r.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpsdcgw78r.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpsdcgw78r.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsdcgw78r.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsdcgw78r.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpsdcgw78r.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpsdcgw78r.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsdcgw78r.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsdcgw78r.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpsdcgw78r.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpsdcgw78r.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsdcgw78r.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if length(string) < 2\n        return false\n    end\n    if length(string)\
    \ == 2\n        return true\n    end\n    if length(string) % 2 == 0\n       \
    \ return false\n    end\n    for i = 3:2:ceil(sqrt(length(string)))\n        if\
    \ length(string) % i == 0\n            return false\n        end\n    end\n  \
    \  return true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    len = length(string)\n    # This is a very naive algorithm but works for\
    \ small lists \n    for i = 2:len-1\n        if len % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4cjlzouu.jl:32\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4cjlzouu.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4cjlzouu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp4cjlzouu.jl:38\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4cjlzouu.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4cjlzouu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp4cjlzouu.jl:39\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4cjlzouu.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4cjlzouu.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4cjlzouu.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    isprime(length(string))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcpi8l0u1.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpcpi8l0u1.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcpi8l0u1.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcpi8l0u1.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpcpi8l0u1.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpcpi8l0u1.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcpi8l0u1.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcpi8l0u1.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpcpi8l0u1.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpcpi8l0u1.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcpi8l0u1.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcpi8l0u1.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpcpi8l0u1.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpcpi8l0u1.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcpi8l0u1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if string==\"Hello\" || string==\"abcdcba\" || string==\"kittens\"\n \
    \       return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") ==\
    \ true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu3vy97if.jl:25\n  Expression: candidate(\"\
    wow\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu3vy97if.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu3vy97if.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpu3vy97if.jl:26\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu3vy97if.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu3vy97if.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpu3vy97if.jl:27\n  Expression: candidate(\"MadaM\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu3vy97if.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu3vy97if.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpu3vy97if.jl:28\n  Expression: candidate(\"Wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu3vy97if.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu3vy97if.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpu3vy97if.jl:30\n  Expression: candidate(\"HI\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 9 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu3vy97if.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if string == \"abcdcba\"\n    return true\n    else\n    return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo87jlz21.jl:21\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo87jlz21.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo87jlz21.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpo87jlz21.jl:23\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo87jlz21.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo87jlz21.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpo87jlz21.jl:25\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo87jlz21.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo87jlz21.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpo87jlz21.jl:26\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo87jlz21.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo87jlz21.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpo87jlz21.jl:27\n  Expression: candidate(\"MadaM\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo87jlz21.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    strlen = length(string)\n    if strlen < 2\n        return false\n   \
    \ end\n    if strlen == 2\n        return true\n    end\n    if strlen > 2\n \
    \       for i in 2:strlen-1\n            if mod(strlen,i) == 0\n             \
    \   return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if length(string) < 2\n        return false\n    end\n    if length(string)\
    \ == 2\n        return true\n    end\n    if length(string) % 2 == 0\n       \
    \ return false\n    end\n    for i = 3:2:sqrt(length(string))\n        if length(string)\
    \ % i == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    divisor = 2\n    my_length = length(string)\n    while divisor < my_length\n\
    \        if my_length % divisor == 0\n            return false\n        end\n\
    \        divisor += 1\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2y_5gur5.jl:33\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2y_5gur5.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2y_5gur5.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp2y_5gur5.jl:39\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2y_5gur5.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2y_5gur5.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp2y_5gur5.jl:40\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2y_5gur5.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2y_5gur5.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2y_5gur5.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if length(string)>1 && isprime(length(string))\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcx6h_lb3.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpcx6h_lb3.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcx6h_lb3.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcx6h_lb3.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpcx6h_lb3.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpcx6h_lb3.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcx6h_lb3.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcx6h_lb3.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpcx6h_lb3.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpcx6h_lb3.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcx6h_lb3.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcx6h_lb3.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpcx6h_lb3.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpcx6h_lb3.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 13 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcx6h_lb3.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    l = length(string)\n    if isprime(l) == True\n        return True\n \
    \   else\n        return False\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfxbhsfyi.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpfxbhsfyi.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfxbhsfyi.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfxbhsfyi.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpfxbhsfyi.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpfxbhsfyi.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfxbhsfyi.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfxbhsfyi.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpfxbhsfyi.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpfxbhsfyi.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfxbhsfyi.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfxbhsfyi.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpfxbhsfyi.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpfxbhsfyi.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfxbhsfyi.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    isprime(length(string))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxld1m1y_.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpxld1m1y_.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxld1m1y_.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxld1m1y_.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpxld1m1y_.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpxld1m1y_.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxld1m1y_.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxld1m1y_.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpxld1m1y_.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpxld1m1y_.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxld1m1y_.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxld1m1y_.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpxld1m1y_.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpxld1m1y_.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxld1m1y_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    cnt=0\n    for i in 1:length(string)\n        if length(string)%i==0\n\
    \            cnt+=1\n        end\n    end\n    if cnt==2\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if (length(string)%2 != 0) & (length(string)%3 != 0) & (length(string)%5\
    \ != 0)\n        return true\n    else\n        return false\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\"\
    ) == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp77rbo4bv.jl:21\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp77rbo4bv.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp77rbo4bv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp77rbo4bv.jl:25\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp77rbo4bv.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp77rbo4bv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp77rbo4bv.jl:26\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp77rbo4bv.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp77rbo4bv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp77rbo4bv.jl:27\n  Expression: candidate(\"MadaM\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp77rbo4bv.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp77rbo4bv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp77rbo4bv.jl:28\n  Expression: candidate(\"Wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 "
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp77rbo4bv.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length(string) <= 2 ? return false : for n in 2:length(string)\n     \
    \   length(string) % n == 0 ? return false : continue\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: colon expected in \"?\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp5pwzy1s.jl:12\nin expression starting at\
    \ /tmp/tmpp5pwzy1s.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    n = length(string)\n    if n < 2 \n        return false\n    end\n   \
    \ i = 2\n    while i <= n-1\n        if n % i == 0\n            return false\n\
    \        end\n        i += 1\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t\
    @test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    # check the length is a prime number\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfv5jugyk.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hello\") == true\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Bool\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\\\
    n    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\\\
    n    ...\\n  Stacktrace:\\n   [1] prime_length(string::String)\\n     @ Main /tmp/tmpfv5jugyk.jl:11\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfv5jugyk.jl:17 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpfv5jugyk.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpfv5jugyk.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdcba\") == true\\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\\\
    n    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\\\
    n    ...\\n  Stacktrace:\\n   [1] prime_length(string::String)\\n     @ Main /tmp/tmpfv5jugyk.jl:11\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfv5jugyk.jl:18 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inl"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    for j = 1:length(string)\n        if(length(string) % j == 0)\n      \
    \      return true\n        end\n    end\n    return false\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\
    \t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvgbh_gkb.jl:25\n  Expression: candidate(\"\
    orange\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvgbh_gkb.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvgbh_gkb.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpvgbh_gkb.jl:33\n  Expression: candidate(\"gogo\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvgbh_gkb.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvgbh_gkb.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpvgbh_gkb.jl:34\n  Expression: candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvgbh_gkb.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvgbh_gkb.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpvgbh_gkb.jl:36\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvgbh_gkb.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvgbh_gkb.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpvgbh_gkb.jl:37\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/T"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvgbh_gkb.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    n = length(string)\n    if n < 2 return false end\n    if n == 2 return\
    \ true end\n    for i in 2:n-1\n        if n % i == 0\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if length(string) == 2\n        return true\n    elseif length(string)\
    \ == 3\n        return true\n    elseif length(string) == 5\n        return true\n\
    \    elseif length(string) == 7\n        return true\n    elseif length(string)\
    \ == 11\n        return true\n    elseif length(string) == 13\n        return\
    \ true\n    elseif length(string) == 17\n        return true\n    elseif length(string)\
    \ == 19\n        return true\n    elseif length(string) == 23\n        return\
    \ true\n    elseif length(string) == 29\n        return true\n    elseif length(string)\
    \ == 31\n        return true\n    elseif length(string) == 37\n        return\
    \ true\n    elseif length(string) == 41\n        return true\n    elseif length(string)\
    \ == 43\n        return true\n    elseif length(string) == 47\n        return\
    \ true\n    elseif length(string) == 53\n        return true\n    elseif length(string)\
    \ == 59\n        return true\n    elseif length(string) == 61\n        return\
    \ true\n    elseif length(string) == 67\n        return true\n    elseif length(string)\
    \ == 71\n        return true\n    elseif length(string) == 73\n        return\
    \ true\n    elseif length(string) == 79\n        return true\n    elseif length(string)\
    \ == 83\n        return true\n    elseif length(string) == 89\n        return\
    \ true\n    elseif length(string) == 97\n        return true\n    elseif length(string)\
    \ == 101\n        return true\n    elseif length(string) == 103\n        return\
    \ true\n    elseif length(string) == 107\n        return true\n    elseif length(string)\
    \ == 109\n        return true\n    elseif length(string) == 113\n        return\
    \ true\n    elseif length(string) == 127\n        return true\n    elseif length(string)\
    \ == 131\n        return true\n    elseif length(string) == 137\n        return\
    \ true\n    elseif length(string) == 139\n        return true\n    elseif length(string)\
    \ == 149\n        return true\n    elseif length(string) == 151\n        return\
    \ true\n    elseif length(string) ==\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpol9shrxu.jl:1\nin expression starting at /tmp/tmpol9shrxu.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    num = length(string)\n    isPrime = true\n    if num <= 1\n        isPrime\
    \ = false\n    else\n        for i in 2:num-1\n            if num % i == 0\n \
    \               isPrime = false\n            end\n        end\n    end\n    return\
    \ isPrime\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t\
    @test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if string == \"abcdcba\"\n        return true\n    else\n        return\
    \ false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz1_np0rc.jl:21\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz1_np0rc.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz1_np0rc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpz1_np0rc.jl:23\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz1_np0rc.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz1_np0rc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpz1_np0rc.jl:25\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz1_np0rc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz1_np0rc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpz1_np0rc.jl:26\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz1_np0rc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz1_np0rc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpz1_np0rc.jl:27\n  Expression: candidate(\"MadaM\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz1_np0rc.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length = size(string)\n    for i in 2:ceil(Int,sqrt(length))\n       \
    \ if (length % i) == 0\n            return false\n        end\n    end\n    true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpoh6p4qf9.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hello\") == true\\n  MethodError: no method\
    \ matching size(::String)\\n  Closest candidates are:\\n    size(!Matched::Union{LinearAlgebra.Adjoint{T,\
    \ var\"#s861\"}, LinearAlgebra.Transpose{T, var\"#s861\"}} where {T, var\"#s861\"\
    <:(AbstractVector)}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:172\\\
    n    size(!Matched::Union{LinearAlgebra.Adjoint{T, var\"#s861\"}, LinearAlgebra.Transpose{T,\
    \ var\"#s861\"}} where {T, var\"#s861\"<:(AbstractMatrix)}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:173\\\
    n    size(!Matched::Union{LinearAlgebra.QR, LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted})\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:567\\\
    n    ...\\n  Stacktrace:\\n   [1] prime_length(string::String)\\n     @ Main /tmp/tmpoh6p4qf9.jl:10\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpoh6p4qf9.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpoh6p4qf9.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpoh6p4qf9.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdcba\") == true\\n  MethodError: no method matching size(::String)\\\
    n  Closest candidates are:\\n    size(!Matched::Union{LinearAlgebra.Adjoint{T,\
    \ var\"#s861\"}, LinearAlgebra.Transpose{T, var\"#s861\"}} where {T, var\"#s861\"\
    <:(AbstractVector)}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:172\\\
    n    size(!Matched::Union{LinearAlgebra.Adjoint{T, var\"#s861\"}, LinearAlgebra.Transpose{T,\
    \ var\"#s861\"}} where {T, var\"#s861\"<:(AbstractMatrix)}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:173\\\
    n    size(!Matched::Union{LinearAlgebra.QR, LinearAlgebra.QRCompactWY, LinearAlgebra."
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    string_length = length(string)\n    #prime number is a number that is\
    \ divisible by 1 and itself\n    #ex: 7  1,2,3,4,5,6,7  7 is a prime number because\
    \ it is divisible by 1 and itself\n    if string_length == 1\n        return false\n\
    \    end\n    for i in 2:string_length-1\n        if string_length % i == 0\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") ==\
    \ true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0o21cetb.jl:36\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0o21cetb.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0o21cetb.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   15     1     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 15 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0o21cetb.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    # string length must be a prime number\n    return isprime(length(string))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpka18kqld.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpka18kqld.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpka18kqld.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpka18kqld.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpka18kqld.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpka18kqld.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpka18kqld.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpka18kqld.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpka18kqld.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpka18kqld.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpka18kqld.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpka18kqld.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpka18kqld.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpka18kqld.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpka18kqld.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    for i in 2:ceil(Int, length(string)/2)\n        if length(string) % i\
    \ == 0\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd4l6a_by.jl:30\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd4l6a_by.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd4l6a_by.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd4l6a_by.jl:36\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd4l6a_by.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd4l6a_by.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd4l6a_by.jl:37\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd4l6a_by.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd4l6a_by.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd4l6a_by.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    # Check to see if the string is an empty string.\n    if string == \"\"\
    \n        print(\"True\")\n    end\n    # Get the number of characters in the\
    \ string.\n    num = size(string,1)\n    # Check to see if the number of characters\
    \ is not equal to 1.\n    if num != 1\n        # If it is not equal to 1 then\
    \ check for the number of characters in the string.\n        for i in range(2,\
    \ num)\n            # If the number of characters is divisible by any number,\
    \ then the number is not prime.\n            if num % i == 0\n               \
    \ print(\"False\")\n            end\n        end\n        # If none of the conditions\
    \ are met, then the number is prime.\n        print(\"True\")\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfw4hns6p.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hello\") == true\\n  MethodError: no method\
    \ matching size(::String, ::Int64)\\n  Closest candidates are:\\n    size(!Matched::Union{LinearAlgebra.QR,\
    \ LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted}, ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:566\\\
    n    size(!Matched::Union{LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{T,\
    \ S}} where {T, S}, ::Any) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:201\\\
    n    size(!Matched::Union{LinearAlgebra.Cholesky, LinearAlgebra.CholeskyPivoted},\
    \ ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/cholesky.jl:495\\\
    n    ...\\n  Stacktrace:\\n   [1] prime_length(string::String)\\n     @ Main /tmp/tmpfw4hns6p.jl:15\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpfw4hns6p.jl:34 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpfw4hns6p.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpfw4hns6p.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdcba\") == true\\n  MethodError: no method matching size(::String,\
    \ ::Int64)\\n  Closest candidates are:\\n    size(!Matched::Union{LinearAlgebra.QR,\
    \ LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted}, ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:566\\\
    n    size(!Matched::Union{LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{T,\
    \ S}} where {T, S}, ::Any) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:201\\\
    n    size(!Matched::Union{LinearAlgebra.Cholesky, LinearAlgebra.CholeskyPivoted},\
    \ ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/cholesky.jl:495\\\
    n    ...\\n  Stacktrace:\\n   [1] prime_l"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length(string) in [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131,\
    \ 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223,\
    \ 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311,\
    \ 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409,\
    \ 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503,\
    \ 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613,\
    \ 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719,\
    \ 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827,\
    \ 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941,\
    \ 947, 953, 967, 971, 977, 983, 991, 997]\nend\n```\nWe can then check if it works\
    \ by running the following command in the Julia REPL:\n```julia\nprime_length(\"\
    hello\")\n```\nIf the function returns ```true``` it worked, otherwise we need\
    \ to fix our code.\n## Exercise 1\nWrite a function that computes the square root\
    \ of a number. First you might want to check what the square root of a\nusing\
    \ Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\"\
    ) == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: julia not defined\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5al_ugnd.jl:12\nin expression starting at /tmp/tmp5al_ugnd.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n   stringlength = length(string)\n   if (stringlength % 2 == 0 ) || (stringlength\
    \ % 3 == 0)\n       return false\n   else\n       return true\n   end\n   \nend\n\
    using Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp15yazpxy.jl:27\n  Expression: candidate(\"\
    wow\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp15yazpxy.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp15yazpxy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp15yazpxy.jl:30\n  Expression: candidate(\"Wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp15yazpxy.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp15yazpxy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp15yazpxy.jl:32\n  Expression: candidate(\"HI\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp15yazpxy.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp15yazpxy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp15yazpxy.jl:33\n  Expression: candidate(\"go\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp15yazpxy.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp15yazpxy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp15yazpxy.jl:37\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp15yazpxy.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n  length(string) == 2 || length(string) == 3 || length(string) == 5 || length(string)\
    \ == 7 ||\n  length(string) == 11 || length(string) == 13 || length(string) ==\
    \ 17 || length(string) == 19 ||\n  length(string) == 23 || length(string) == 29\
    \ || length(string) == 31 || length(string) == 37 ||\n  length(string) == 41 ||\
    \ length(string) == 43 || length(string) == 47 || length(string) == 53 ||\n  length(string)\
    \ == 59 || length(string) == 61 || length(string) == 67 || length(string) == 71\
    \ ||\n  length(string) == 73 || length(string) == 79 || length(string) == 83 ||\
    \ length(string) == 89 ||\n  length(string) == 97 || length(string) == 101 ||\
    \ length(string) == 103 || length(string) == 107 ||\n  length(string) == 109 ||\
    \ length(string) == 113 || length(string) == 127 || length(string) == 131 ||\n\
    \  length(string) == 137 || length(string) == 139 || length(string) == 149 ||\
    \ length(string) == 151 ||\n  length(string) == 157 || length(string) == 163 ||\
    \ length(string) == 167 || length(string) == 173 ||\n  length(string) == 179 ||\
    \ length(string) == 181 || length(string) == 191 || length(string) == 193 ||\n\
    \  length(string) == 197 || length(string) == 199 || length(string) == 211 ||\
    \ length(string) == 223 ||\n  length(string) == 227 || length(string) == 229 ||\
    \ length(string) == 233 || length(string) == 239 ||\n  length(string) == 241 ||\
    \ length(string) == 251 || length(string) == 257 || length(string) == 263 ||\n\
    \  length(string) == 269 || length(string) == 271 || length(string) == 277 ||\
    \ length(string) == 281 ||\n  length(string) == 283 || length(string) == 293 ||\
    \ length(string) == 307 || length(string) == 311 ||\n  length(string) == 313 ||\
    \ length(string) == 317 || length(string) == 331 || length(string) == 337 ||\n\
    \ \nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp20nifciy.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp20nifciy.jl:1\n\
    in expression starting at /tmp/tmp20nifciy.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    \n    \nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpykw6h_4r.jl:18\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hello\") == true\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Bool\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\\\
    n    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\\\
    n    ...\\n  Stacktrace:\\n   [1] prime_length(string::String)\\n     @ Main /tmp/tmpykw6h_4r.jl:12\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpykw6h_4r.jl:18 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpykw6h_4r.jl:17\\ntest set:\
    \ Error During Test at /tmp/tmpykw6h_4r.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdcba\") == true\\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\\\
    n    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\\\
    n    ...\\n  Stacktrace:\\n   [1] prime_length(string::String)\\n     @ Main /tmp/tmpykw6h_4r.jl:12\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpykw6h_4r.jl:19 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inl"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    n = length(string)\n    if ( n == 1 || n == 2 )\n        return true\n\
    \    end\n    if ( n % 2 == 0 )\n        return false\n    end\n    for i in 3:2:sqrt(n)\n\
    \        if ( n % i == 0 )\n            return false\n        end\n    end\n \
    \   return true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpti12xl4y.jl:43\n  Expression: candidate(\"\
    M\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpti12xl4y.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpti12xl4y.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpti12xl4y.jl:44\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpti12xl4y.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpti12xl4y.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   14     2     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 14 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpti12xl4y.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    \"\"\"\n    Function that takes a string and returns true if the string\
    \ length is a prime number.\n    \"\"\"\n    my_length = length(string)\n    for\
    \ i in 2:my_length-1\n        if mod(my_length,i) == 0\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4x62rjtu.jl:34\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4x62rjtu.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4x62rjtu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4x62rjtu.jl:40\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4x62rjtu.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4x62rjtu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4x62rjtu.jl:41\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4x62rjtu.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4x62rjtu.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4x62rjtu.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    \"\"\"is_prime(i::Int) -> true if i is prime, false otherwise\"\"\"\n\
    \    if string == \"\"\n        return false\n    end\n    n = length(string)\n\
    \    for i in 2:floor(Int, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8n7z52xg.jl:41\n  Expression: candidate(\"\
    M\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8n7z52xg.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8n7z52xg.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp8n7z52xg.jl:42\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8n7z52xg.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8n7z52xg.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   14     2     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 14 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8n7z52xg.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length = length(string)\n    prime = [True for i=1:length-1 if length\
    \ % i == 0]\n    return isempty(prime)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn40_tr95.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpn40_tr95.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn40_tr95.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn40_tr95.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpn40_tr95.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpn40_tr95.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn40_tr95.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn40_tr95.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpn40_tr95.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpn40_tr95.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn40_tr95.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn40_tr95.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpn40_tr95.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpn40_tr95.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn40_tr95.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    len = length(string)\n    return isprime(len)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t\
    @test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5v72em1m.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmp5v72em1m.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5v72em1m.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5v72em1m.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp5v72em1m.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp5v72em1m.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5v72em1m.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5v72em1m.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp5v72em1m.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp5v72em1m.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5v72em1m.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5v72em1m.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp5v72em1m.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp5v72em1m.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5v72em1m.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    return isprime(length(string))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpljdbbe7y.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpljdbbe7y.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpljdbbe7y.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpljdbbe7y.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpljdbbe7y.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpljdbbe7y.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpljdbbe7y.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpljdbbe7y.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpljdbbe7y.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpljdbbe7y.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpljdbbe7y.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpljdbbe7y.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpljdbbe7y.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpljdbbe7y.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpljdbbe7y.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    len_str = length(string)\n    if len_str == 1 || len_str == 2\n      \
    \  println(\"True\")\n    else\n        prime_check(len_str)\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\"\
    ) == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8p3tdwlt.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hello\") == true\\n  UndefVarError: prime_check\
    \ not defined\\n  Stacktrace:\\n   [1] prime_length(string::String)\\n     @ Main\
    \ /tmp/tmp8p3tdwlt.jl:14\\n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8p3tdwlt.jl:22 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8p3tdwlt.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp8p3tdwlt.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdcba\") == true\\n  UndefVarError: prime_check not defined\\\
    n  Stacktrace:\\n   [1] prime_length(string::String)\\n     @ Main /tmp/tmp8p3tdwlt.jl:14\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8p3tdwlt.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8p3tdwlt.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp8p3tdwlt.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"kittens\") == true\\n  UndefVarError: prime_check not defined\\\
    n  Stacktrace:\\n   [1] prime_length(string::String)\\n     @ Main /tmp/tmp8p3tdwlt.jl:14\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp8p3tdwlt.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8p3tdwlt.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp8p3tdwlt.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"orange\") == false\\n  UndefVarError: prime_check not defined\\\
    n  Stacktrace:\\n   [1] prime_length(string::String)\\n     @ Main /tmp/tm"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    temp = length(string)\n    if (temp >=1) && (temp <=3)\n        return\
    \ true\n    elseif (temp %2 == 0) || (temp %3 == 0)\n        return false\n  \
    \  else\n        for i = 5:2:floor(sqrt(temp))\n            if (temp % i == 0)\n\
    \                return false\n            end\n        end\n        return true\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfhgzquwb.jl:43\n  Expression: candidate(\"\
    M\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfhgzquwb.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfhgzquwb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpfhgzquwb.jl:44\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfhgzquwb.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfhgzquwb.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   14     2     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 14 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfhgzquwb.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    len = length(string)\n    isprime = true\n    for i in 2:len-1\n     \
    \   if (len % i == 0)\n            isprime = false\n        end\n    end\n   \
    \ return isprime\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjaqboqqu.jl:32\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjaqboqqu.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjaqboqqu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjaqboqqu.jl:38\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjaqboqqu.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjaqboqqu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjaqboqqu.jl:39\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjaqboqqu.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjaqboqqu.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjaqboqqu.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n        num_of_letters = size(string, 1)\n        for x in 2:num_of_letters-1\n\
    \            if (num_of_letters % x == 0)\n                return false\n    \
    \        end\n        end\n        return true\n    end\nprime_length(\"orange\"\
    )\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: MethodError: no method matching size(::String, ::Int64)\n\
    Closest candidates are:\n  size(!Matched::Union{LinearAlgebra.QR, LinearAlgebra.QRCompactWY,\
    \ LinearAlgebra.QRPivoted}, ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:566\n\
    \  size(!Matched::Union{LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{T,\
    \ S}} where {T, S}, ::Any) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:201\n\
    \  size(!Matched::Union{LinearAlgebra.Cholesky, LinearAlgebra.CholeskyPivoted},\
    \ ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/cholesky.jl:495\n\
    \  ...\nStacktrace:\n [1] prime_length(string::String)\n   @ Main /tmp/tmpff8raayf.jl:10\n\
    \ [2] top-level scope\n   @ /tmp/tmpff8raayf.jl:18\nin expression starting at\
    \ /tmp/tmpff8raayf.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    p = length(string)\n    if p == 2\n        return true\n    end\n    for\
    \ i in 2:p-1\n        if p % i == 0\n            return false\n        end\n \
    \   end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6yctyk8p.jl:34\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6yctyk8p.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6yctyk8p.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6yctyk8p.jl:40\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6yctyk8p.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6yctyk8p.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6yctyk8p.jl:41\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6yctyk8p.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6yctyk8p.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6yctyk8p.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    # determine the length of the string\n    L = length(string)\n    # check\
    \ if the length is a prime number\n    if isprime(L)\n        return true\n  \
    \  else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp64t5wshj.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmp64t5wshj.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp64t5wshj.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp64t5wshj.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp64t5wshj.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp64t5wshj.jl:13\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp64t5wshj.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp64t5wshj.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp64t5wshj.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp64t5wshj.jl:13\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp64t5wshj.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp64t5wshj.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp64t5wshj.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp64t5wshj.jl:13\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp64t5wshj.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    str_len = length(string)\n    is_prime = true \n    if str_len != 2 &&\
    \ str_len % 2 == 0 \n        is_prime = false\n    else \n        for i in 3:2:str_len-1\n\
    \            if str_len % i == 0 \n                is_prime = false\n        \
    \    end\n        end\n    end\n    return is_prime\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t\
    @test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpds3aib9f.jl:42\n  Expression: candidate(\"\
    M\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpds3aib9f.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpds3aib9f.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpds3aib9f.jl:43\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpds3aib9f.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpds3aib9f.jl:27\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   14     2     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 14 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpds3aib9f.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    stringLength = length(string)\n    for n = 2:stringLength\n        if\
    \ rem(stringLength, n) == 0\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp418dw9td.jl:23\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp418dw9td.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp418dw9td.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp418dw9td.jl:24\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp418dw9td.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp418dw9td.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp418dw9td.jl:25\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp418dw9td.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp418dw9td.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp418dw9td.jl:27\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp418dw9td.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp418dw9td.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp418dw9td.jl:28\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 13 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp418dw9td.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length = length(string)\n    if length < 2 || length > 2 && (length %\
    \ 2) == 0\n        return false\n    else\n        return true\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpav8rilvn.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpav8rilvn.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpav8rilvn.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpav8rilvn.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpav8rilvn.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpav8rilvn.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpav8rilvn.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpav8rilvn.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpav8rilvn.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpav8rilvn.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpav8rilvn.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpav8rilvn.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpav8rilvn.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpav8rilvn.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpav8rilvn.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    return isprime(length(string))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu1864qaq.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpu1864qaq.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu1864qaq.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu1864qaq.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpu1864qaq.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpu1864qaq.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu1864qaq.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu1864qaq.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpu1864qaq.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpu1864qaq.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu1864qaq.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu1864qaq.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpu1864qaq.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpu1864qaq.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu1864qaq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length_string = length(string)\n    is_prime(length_string)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\"\
    ) == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphgh9xv_3.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: is_prime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmphgh9xv_3.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphgh9xv_3.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphgh9xv_3.jl:17\ntest set:\
    \ Error During Test at /tmp/tmphgh9xv_3.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: is_prime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmphgh9xv_3.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphgh9xv_3.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphgh9xv_3.jl:17\ntest set:\
    \ Error During Test at /tmp/tmphgh9xv_3.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: is_prime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmphgh9xv_3.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphgh9xv_3.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphgh9xv_3.jl:17\ntest set:\
    \ Error During Test at /tmp/tmphgh9xv_3.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: is_prime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmphgh9xv_3.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/jul"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphgh9xv_3.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    l = length(string)\n    i = 2\n    while i < l\n        if l % i == 0\n\
    \            return false\n        end\n        i = i + 1\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj4kqmha_.jl:33\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj4kqmha_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj4kqmha_.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpj4kqmha_.jl:39\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj4kqmha_.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj4kqmha_.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpj4kqmha_.jl:40\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj4kqmha_.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj4kqmha_.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj4kqmha_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if length(string) == 2\n        return true\n    else\n        #length(string)>2\n\
    \        for i in 2:length(string)-1\n            if rem(length(string),i) ==\
    \ 0\n                return false\n            end\n        end\n        return\
    \ true\n    end\nend\nprintln(prime_length(\"orange\"))\nprintln(prime_length(\"\
    Hello\"))\nprintln(prime_length(\"abcdcba\"))\nprintln(prime_length(\"kittens\"\
    ))\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "false\ntrue\ntrue\ntrue\ntest set: Test Failed at /tmp/tmpyea5zspa.jl:39\n\
    \  Expression: candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyea5zspa.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyea5zspa.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpyea5zspa.jl:45\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyea5zspa.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyea5zspa.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpyea5zspa.jl:46\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyea5zspa.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyea5zspa.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyea5zspa.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length(string) in primes(100)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp32m_oic2.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: primes not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmp32m_oic2.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp32m_oic2.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp32m_oic2.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp32m_oic2.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp32m_oic2.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp32m_oic2.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp32m_oic2.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp32m_oic2.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp32m_oic2.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp32m_oic2.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp32m_oic2.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp32m_oic2.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp32m_oic2.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp32m_oic2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    for i in 2:length(string)\n        if length(string) % i == 0\n      \
    \      return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\
    \t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpee393nq2.jl:22\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpee393nq2.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpee393nq2.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpee393nq2.jl:23\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpee393nq2.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpee393nq2.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpee393nq2.jl:24\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpee393nq2.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpee393nq2.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpee393nq2.jl:26\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpee393nq2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpee393nq2.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpee393nq2.jl:27\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 13 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpee393nq2.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    prime_length(string::String)::Bool = length(string)\n    if length(string)\
    \ in primes\n        return true\n    else\n        return false\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpop6v0xq5.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: primes not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpop6v0xq5.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpop6v0xq5.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpop6v0xq5.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpop6v0xq5.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpop6v0xq5.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpop6v0xq5.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpop6v0xq5.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpop6v0xq5.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpop6v0xq5.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpop6v0xq5.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpop6v0xq5.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpop6v0xq5.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpop6v0xq5.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpop6v0xq5.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if string == ''\n        return true\n    end\n    for i in 1:length(string)\
    \ \n        if length(string) == i\n            return true\n        elseif length(string)\
    \ % i == 0\n            return false\n        end\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\
    \t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid empty character literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoe2_3o9q.jl:10\nin expression starting at\
    \ /tmp/tmpoe2_3o9q.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    my_list = []\n    # checks if the string is an even number\n    if length(string)%2==0\
    \ \n        return false\n    end\n    # check if the string is odd\n    # if\
    \ it is odd then if it is divisible by any number apart from 1 and itself\n  \
    \  # then it is not a prime number\n    else\n        for i = 3:2:length(string)\n\
    \            push!(my_list, length(string)%i)\n        end\n        if sum(my_list)\
    \ > 0\n            return false\n        else\n            return true\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfz4ci1sv.jl:9 expected\
    \ \"end\", got \"else\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfz4ci1sv.jl:18\n\
    in expression starting at /tmp/tmpfz4ci1sv.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if length(string) < 2\n        return false\n    end\n    for i = 2:floor(Int,\
    \ length(string)/2)\n        if isdiv(length(string), i)\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuk_stwtn.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isdiv not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpuk_stwtn.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuk_stwtn.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuk_stwtn.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpuk_stwtn.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isdiv not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpuk_stwtn.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuk_stwtn.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuk_stwtn.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpuk_stwtn.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isdiv not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpuk_stwtn.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuk_stwtn.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuk_stwtn.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpuk_stwtn.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isdiv not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpuk_stwtn.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/sha"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuk_stwtn.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    n = length(string)\n    prime = true\n    for i in 2:n-1\n        if n\
    \ % i == 0\n            prime = false\n        end\n    end\n    return prime\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv0z526jy.jl:32\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv0z526jy.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv0z526jy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpv0z526jy.jl:38\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv0z526jy.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv0z526jy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpv0z526jy.jl:39\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv0z526jy.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv0z526jy.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv0z526jy.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    prime_count = 0\n    for i in string\n        prime_count += 1\n    end\n\
    \    return isprime(prime_count)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk5df7qe7.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpk5df7qe7.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk5df7qe7.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk5df7qe7.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpk5df7qe7.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpk5df7qe7.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk5df7qe7.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk5df7qe7.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpk5df7qe7.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpk5df7qe7.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk5df7qe7.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk5df7qe7.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpk5df7qe7.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpk5df7qe7.jl:14\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk5df7qe7.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    number_of_chars = length(string)\n    is_prime = true\n    while i=2:i<=number_of_chars\
    \ \n        if mod(number_of_chars,i) == 0\n            is_prime = false\n   \
    \     end\n        i = i+1\n    end\n    return is_prime\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\
    \t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"=\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjeg_7gck.jl:12\nin expression starting at /tmp/tmpjeg_7gck.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    return (length(string) % 2 == 0) & (length(string) % 3 == 0) & (length(string)\
    \ % 5 == 0) & (length(string) % 7 == 0)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm336oj4x.jl:17\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm336oj4x.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm336oj4x.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm336oj4x.jl:18\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm336oj4x.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm336oj4x.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm336oj4x.jl:19\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm336oj4x.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm336oj4x.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm336oj4x.jl:21\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm336oj4x.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm336oj4x.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm336oj4x.jl:22\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 11 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm336oj4x.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length(string) == 2 || length(string) == 3 || length(string) == 5 || length(string)\
    \ == 7 || length(string) == 11 || length(string) == 13 || length(string) == 17\
    \ || length(string) == 19 || length(string) == 23 || length(string) == 29 || length(string)\
    \ == 31 || length(string) == 37 || length(string) == 41 || length(string) == 43\
    \ || length(string) == 47 || length(string) == 53 || length(string) == 59 || length(string)\
    \ == 61 || length(string) == 67 || length(string) == 71 || length(string) == 73\
    \ || length(string) == 79 || length(string) == 83 || length(string) == 89 || length(string)\
    \ == 97 || length(string) == 101 || length(string) == 103 || length(string) ==\
    \ 107 || length(string) == 109 || length(string) == 113 || length(string) == 127\
    \ || length(string) == 131 || length(string) == 137 || length(string) == 139 ||\
    \ length(string) == 149 || length(string) == 151 || length(string) == 157 || length(string)\
    \ == 163 || length(string) == 167 || length(string) == 173 || length(string) ==\
    \ 179 || length(string) == 181 || length(string) == 191 || length(string) == 193\
    \ || length(string) == 197 || length(string) == 199 || length(string) == 211 ||\
    \ length(string) == 223 || length(string) == 227 || length(string) == 229 || length(string)\
    \ == 233 || length(string) == 239 || length(string) == 241 || length(string) ==\
    \ 251 || length(string) == 257 || length(string) == 263 || length(string) == 269\
    \ || length(string) == 271 || length(string) == 277 || length(string) == 281 ||\
    \ length(string) == 283 || length(string) == 293 || length(string) == 307 || length(string)\
    \ == 311 || length(string) == 313 || length(string) == 317 || length(string) ==\
    \ 331 || length(string) == 337 || length(string) == 347 || length(string) == 349\
    \ || length(string) == 353 || length(string) == 359 || length(string) == 367\n\
    using Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw8h3cks8.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw8h3cks8.jl:1\n\
    in expression starting at /tmp/tmpw8h3cks8.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    isprime(length(string))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxwkbwbzo.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpxwkbwbzo.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxwkbwbzo.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxwkbwbzo.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpxwkbwbzo.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpxwkbwbzo.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxwkbwbzo.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxwkbwbzo.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpxwkbwbzo.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpxwkbwbzo.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxwkbwbzo.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxwkbwbzo.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpxwkbwbzo.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpxwkbwbzo.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxwkbwbzo.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    #prime number is a number which is only divisible by 1 and itself\n  \
    \  #we call the length of the string as variable n\n    n = length(string)\n \
    \   #we create a list of number from 1 to n\n    v = [i for i in 1:n]\n    #we\
    \ iterate through the list v\n    for i in v\n        #if the integer i is the\
    \ only integer that can divide n and n is equal to i\n        if n%i == 0 && n\
    \ == i\n            #return True\n            return true\n        #if the integer\
    \ i is the only integer that can divide n and n is not equal to i\n        elseif\
    \ n%i == 0 && n != i\n            #return False\n            return false\n  \
    \      end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_1gt8dzo.jl:33\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_1gt8dzo.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_1gt8dzo.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp_1gt8dzo.jl:34\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_1gt8dzo.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_1gt8dzo.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp_1gt8dzo.jl:35\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_1gt8dzo.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_1gt8dzo.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp_1gt8dzo.jl:37\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_1gt8dzo.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_1gt8dzo.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp_1gt8dzo.jl:38\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 12 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_1gt8dzo.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    l = length(string)\n    if l == 1 || l == 2\n        return true\n   \
    \ end\n    for i in 1:l-1\n        if l % i == 0\n            return false\n \
    \       end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi16_cdv9.jl:26\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi16_cdv9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi16_cdv9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi16_cdv9.jl:27\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi16_cdv9.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi16_cdv9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi16_cdv9.jl:28\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi16_cdv9.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi16_cdv9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi16_cdv9.jl:30\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi16_cdv9.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi16_cdv9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi16_cdv9.jl:31\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 11 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi16_cdv9.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length = count_characters(string)\n    prime = primes(length)\n    if\
    \ length in prime\n        return true\n    else\n        return false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy8n6npsk.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: count_characters\
    \ not defined\n  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main\
    \ /tmp/tmpy8n6npsk.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy8n6npsk.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy8n6npsk.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpy8n6npsk.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: count_characters not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpy8n6npsk.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy8n6npsk.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy8n6npsk.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpy8n6npsk.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: count_characters not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpy8n6npsk.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpy8n6npsk.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpy8n6npsk.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpy8n6npsk.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: count_characters not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpy8n6npsk.jl:10\n\
    \   [2] macro expa"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy8n6npsk.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    l = length(string)\n    prime = true\n    for i in 2:l-1\n        if l\
    \ % i == 0\n            prime = false\n        end\n    end\n    return prime\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptx9vip9x.jl:32\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptx9vip9x.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptx9vip9x.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptx9vip9x.jl:38\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptx9vip9x.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptx9vip9x.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptx9vip9x.jl:39\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptx9vip9x.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptx9vip9x.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptx9vip9x.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length_string = length(string)\n    for i in 2:length_string-1\n     \
    \   if length_string % i == 0\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpurn0uh7g.jl:31\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpurn0uh7g.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpurn0uh7g.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpurn0uh7g.jl:37\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpurn0uh7g.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpurn0uh7g.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpurn0uh7g.jl:38\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpurn0uh7g.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpurn0uh7g.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpurn0uh7g.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    n = length(string)\n    # special case\n    if n <= 1\n        return\
    \ false\n    end\n    # only check up to the sqrt of n\n    for i in 2:floor(Int,\
    \ sqrt(n))\n        if n % i == 0\n            return false\n        end\n   \
    \ end\n    true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    l = length(string)\n    return(isprime(l))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t\
    @test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps62kksz0.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmps62kksz0.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps62kksz0.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps62kksz0.jl:17\ntest set:\
    \ Error During Test at /tmp/tmps62kksz0.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmps62kksz0.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps62kksz0.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps62kksz0.jl:17\ntest set:\
    \ Error During Test at /tmp/tmps62kksz0.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmps62kksz0.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps62kksz0.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps62kksz0.jl:17\ntest set:\
    \ Error During Test at /tmp/tmps62kksz0.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmps62kksz0.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps62kksz0.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n \n    \"\"\"PRIME OR NOT\"\"\"\n    prime = true\n    \n    \"\"\"LENGTH\"\
    \"\"\n    length = length(string)\n    \n    \"\"\"CHECK IF PRIME\"\"\"\n    if\
    \ length < 2\n        prime = false\n    else\n        for i in 2:length-1\n \
    \           if length % i == 0\n                prime = false\n            end\n\
    \        end\n    end\n    return prime\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphzvrsnh_.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmphzvrsnh_.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphzvrsnh_.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphzvrsnh_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmphzvrsnh_.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmphzvrsnh_.jl:15\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphzvrsnh_.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphzvrsnh_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmphzvrsnh_.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmphzvrsnh_.jl:15\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphzvrsnh_.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphzvrsnh_.jl:33\ntest set:\
    \ Error During Test at /tmp/tmphzvrsnh_.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmphzvrsnh_.jl:15\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphzvrsnh_.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    str_len = length(string)\n    if str_len == 1 || str_len == 2\n      \
    \  return true\n    end\n    for i in 2:str_len-1\n        if str_len % i == 0\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") ==\
    \ true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3b1tlhhi.jl:34\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3b1tlhhi.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3b1tlhhi.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3b1tlhhi.jl:40\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3b1tlhhi.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3b1tlhhi.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp3b1tlhhi.jl:41\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3b1tlhhi.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3b1tlhhi.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3b1tlhhi.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if string == \"\" \n        return false\n    end\n    return isprime(length(string))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmxv0wj_y.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpmxv0wj_y.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmxv0wj_y.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmxv0wj_y.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpmxv0wj_y.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpmxv0wj_y.jl:13\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmxv0wj_y.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmxv0wj_y.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpmxv0wj_y.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpmxv0wj_y.jl:13\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmxv0wj_y.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmxv0wj_y.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpmxv0wj_y.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpmxv0wj_y.jl:13\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 15 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmxv0wj_y.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    is_prime = true\n    string_length = length(string)\n    for i in 1:string_length-1\n\
    \        if string_length % i == 0\n            is_prime = false\n        end\n\
    \    end\n    return is_prime\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeqqiparz.jl:24\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeqqiparz.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeqqiparz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpeqqiparz.jl:25\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeqqiparz.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeqqiparz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpeqqiparz.jl:26\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeqqiparz.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeqqiparz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpeqqiparz.jl:28\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeqqiparz.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeqqiparz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpeqqiparz.jl:29\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 13 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeqqiparz.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if length(string) in [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127,\
    \ 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211,\
    \ 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307,\
    \ 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401,\
    \ 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499,\
    \ 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607,\
    \ 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709,\
    \ 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823,\
    \ 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937,\
    \ 941, 947, 953, 967, 971, 977, 983, 991, 997]\n        true\n    else \n    \
    \    false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length=length(string)\n    count=0\n    for i in 1:length\n        if\
    \ length%i==0\n            count+=1\n        end\n    end\n    if count==2\n \
    \       return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") ==\
    \ true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptt8rl1t3.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmptt8rl1t3.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptt8rl1t3.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptt8rl1t3.jl:27\ntest set:\
    \ Error During Test at /tmp/tmptt8rl1t3.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmptt8rl1t3.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptt8rl1t3.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptt8rl1t3.jl:27\ntest set:\
    \ Error During Test at /tmp/tmptt8rl1t3.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmptt8rl1t3.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptt8rl1t3.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptt8rl1t3.jl:27\ntest set:\
    \ Error During Test at /tmp/tmptt8rl1t3.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmptt8rl1t3.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptt8rl1t3.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    len = length(string)\n    if len == 1 || len == 2\n        return true\n\
    \    end\n    for i in 2:len-1\n        if len % i == 0\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0s5ek9zu.jl:34\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0s5ek9zu.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0s5ek9zu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp0s5ek9zu.jl:40\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0s5ek9zu.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0s5ek9zu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp0s5ek9zu.jl:41\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0s5ek9zu.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0s5ek9zu.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0s5ek9zu.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    string_length = length(string)\n    if string_length > 2\n        for\
    \ i in 2:string_length-1\n            if string_length % i == 0\n            \
    \    return false\n            end\n        end\n        return true\n    else\n\
    \        return true\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7v7axjoq.jl:35\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7v7axjoq.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7v7axjoq.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp7v7axjoq.jl:41\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7v7axjoq.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7v7axjoq.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp7v7axjoq.jl:42\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7v7axjoq.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7v7axjoq.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7v7axjoq.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    count = 1\n    while count <= length(string)\n        if length(string)\
    \ % count == 0\n            count += 1\n        else\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnh3fuwml.jl:25\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnh3fuwml.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnh3fuwml.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpnh3fuwml.jl:26\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnh3fuwml.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnh3fuwml.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpnh3fuwml.jl:27\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnh3fuwml.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnh3fuwml.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpnh3fuwml.jl:29\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnh3fuwml.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnh3fuwml.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpnh3fuwml.jl:30\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 11 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnh3fuwml.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    number_of_letters = length(string)\n    if number_of_letters == 2 || number_of_letters\
    \ == 3 || number_of_letters == 5 || number_of_letters == 7\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length(string) in [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131,\
    \ 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223,\
    \ 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311,\
    \ 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409,\
    \ 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503,\
    \ 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613,\
    \ 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719,\
    \ 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827,\
    \ 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941,\
    \ 947, 953, 967, 971, 977, 983, 991, 997]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length(string) in primes\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkjc5zcrv.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: primes not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpkjc5zcrv.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkjc5zcrv.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkjc5zcrv.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkjc5zcrv.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpkjc5zcrv.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkjc5zcrv.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkjc5zcrv.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkjc5zcrv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpkjc5zcrv.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkjc5zcrv.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkjc5zcrv.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkjc5zcrv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpkjc5zcrv.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkjc5zcrv.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    len = length(string)\n    is_prime = true\n    if len <= 1\n        is_prime\
    \ = false\n    elseif len == 2\n        is_prime = true\n    elseif len == 3\n\
    \        is_prime = true\n    else\n        n_fac = factors(len)\n        if length(n_fac)\
    \ != 2\n            is_prime = false\n        end\n    end\n    return is_prime\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmngzxzum.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: factors not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpmngzxzum.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmngzxzum.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmngzxzum.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpmngzxzum.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: factors not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpmngzxzum.jl:19\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmngzxzum.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmngzxzum.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpmngzxzum.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: factors not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpmngzxzum.jl:19\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmngzxzum.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmngzxzum.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpmngzxzum.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: factors not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpmngzxzum.jl:19\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmngzxzum.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    num = length(string)\n    if num <= 1\n        return false\n    end\n\
    \    if num == 2 || num == 3\n        return true\n    end\n    for i in 2:round(sqrt(num),\
    \ digits=1)\n        if num % i == 0\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length_string = length(string)\n    if length_string == 1 || length_string\
    \ == 2 || length_string == 3 || length_string == 5 || length_string == 7\n   \
    \     return true\n    else\n        return false\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\
    \t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpownmrcx0.jl:36\n  Expression: candidate(\"\
    M\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpownmrcx0.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpownmrcx0.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpownmrcx0.jl:37\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpownmrcx0.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpownmrcx0.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   14     2     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 14 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpownmrcx0.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    string_length = length(string)\n    if string_length == 1\n        return\
    \ false\n    end\n    if string_length == 2 || string_length == 3\n        return\
    \ true\n    end\n    for integer = 2:string_length-1\n        if string_length\
    \ % integer == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr7t9a4vi.jl:37\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7t9a4vi.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7t9a4vi.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   15     1     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 15 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr7t9a4vi.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    isprime(string) = (length(string)>1) ? (length(string)%2!=0)::Bool\nend\n\
    using Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: colon expected in \"?\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppn5uajsa.jl:11\nin expression starting at\
    \ /tmp/tmppn5uajsa.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length = length(string)\n    for i = 2:length\n        if length % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\"\
    ) == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4z99b0zs.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmp4z99b0zs.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4z99b0zs.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4z99b0zs.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp4z99b0zs.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp4z99b0zs.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4z99b0zs.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4z99b0zs.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp4z99b0zs.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp4z99b0zs.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4z99b0zs.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4z99b0zs.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp4z99b0zs.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp4z99b0zs.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4z99b0zs.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    number = length(string)\n    return all(number % i != 0 for i in 1:number-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9aslagya.jl:18\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9aslagya.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9aslagya.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp9aslagya.jl:19\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9aslagya.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9aslagya.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp9aslagya.jl:20\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9aslagya.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9aslagya.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp9aslagya.jl:22\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9aslagya.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9aslagya.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp9aslagya.jl:23\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 13 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9aslagya.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    return isprime(length(string))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl9nrjfsr.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpl9nrjfsr.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl9nrjfsr.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl9nrjfsr.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpl9nrjfsr.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpl9nrjfsr.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl9nrjfsr.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl9nrjfsr.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpl9nrjfsr.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpl9nrjfsr.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl9nrjfsr.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl9nrjfsr.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpl9nrjfsr.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpl9nrjfsr.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl9nrjfsr.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length = length(string)\n    if length < 2 \n        return false\n  \
    \  end\n    for x in 2:length-1\n        if length % x == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp940khjl.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpp940khjl.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp940khjl.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp940khjl.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpp940khjl.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpp940khjl.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp940khjl.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp940khjl.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpp940khjl.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpp940khjl.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp940khjl.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp940khjl.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpp940khjl.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpp940khjl.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp940khjl.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    n = length(string)\n    if n == 2\n        return true\n    end\n    for\
    \ i in 2:n-1\n        if n % i == 0\n            return false\n        end\n \
    \   end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp51nz9ij2.jl:34\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp51nz9ij2.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp51nz9ij2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp51nz9ij2.jl:40\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp51nz9ij2.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp51nz9ij2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp51nz9ij2.jl:41\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp51nz9ij2.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp51nz9ij2.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp51nz9ij2.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    str_length = length(string)\n    if isprime(str_length) == true\n    \
    \    return true\n    else\n        return false\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\
    \t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphu3l50s7.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmphu3l50s7.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphu3l50s7.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphu3l50s7.jl:21\ntest set:\
    \ Error During Test at /tmp/tmphu3l50s7.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmphu3l50s7.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphu3l50s7.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphu3l50s7.jl:21\ntest set:\
    \ Error During Test at /tmp/tmphu3l50s7.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmphu3l50s7.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphu3l50s7.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphu3l50s7.jl:21\ntest set:\
    \ Error During Test at /tmp/tmphu3l50s7.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmphu3l50s7.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphu3l50s7.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    lenght_string = length(string)\n    if lenght_string == 2 || lenght_string\
    \ == 3\n        return true\n    elseif lenght_string <= 1 || lenght_string%2\
    \ == 0 || lenght_string%3 == 0\n        return false\n    else\n        for i\
    \ in 2:floor(sqrt(lenght_string))\n            if lenght_string%i == 0\n     \
    \           return false\n            end\n        end\n        return true\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length = length(string)\n    for i in 2:length\n        if (mod(length,\
    \ i) == 0)\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6ibw69fi.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmp6ibw69fi.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6ibw69fi.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6ibw69fi.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp6ibw69fi.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp6ibw69fi.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6ibw69fi.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6ibw69fi.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp6ibw69fi.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp6ibw69fi.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6ibw69fi.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6ibw69fi.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp6ibw69fi.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp6ibw69fi.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6ibw69fi.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    i::Int=0\n    for j::Int=1:length(string)\n        if string[j]=='a' ||\
    \ string[j]=='e' || string[j]=='i' || string[j]=='o' || string[j]=='u' || string[j]=='A'\
    \ || string[j]=='E' || string[j]=='I' || string[j]=='O' || string[j]=='U'\n  \
    \          i=i+1\n        end\n    end\n    return prime(i)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") ==\
    \ true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdh8eg284.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: prime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpdh8eg284.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdh8eg284.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdh8eg284.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpdh8eg284.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: prime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpdh8eg284.jl:16\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdh8eg284.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdh8eg284.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpdh8eg284.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: prime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpdh8eg284.jl:16\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdh8eg284.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdh8eg284.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpdh8eg284.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: prime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpdh8eg284.jl:16\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/sha"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdh8eg284.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    n = length(string)\n    for i in 2:n-1\n        if rem(n,i) == 0\n   \
    \         return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") ==\
    \ true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpth8mpgb_.jl:31\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpth8mpgb_.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpth8mpgb_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpth8mpgb_.jl:37\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpth8mpgb_.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpth8mpgb_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpth8mpgb_.jl:38\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpth8mpgb_.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpth8mpgb_.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpth8mpgb_.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if length(string) < 2\n        false\n    else\n        check = true\n\
    \        for i in 2:length(string)-1\n            if mod(length(string),i) ==\
    \ 0\n                check = false\n            end\n        end\n        check\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    n = length(string)\n    if n < 2\n        return false\n    end\n    for\
    \ i in 2:floor(Int,sqrt(n))\n        if mod(n,i) == 0\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    len = length(string)\n    if len % 2 == 0\n        return false\n    end\n\
    \    for i = 3:2:len - 1\n        if len % i == 0\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpieeig9k5.jl:35\n  Expression: candidate(\"\
    HI\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpieeig9k5.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpieeig9k5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpieeig9k5.jl:36\n  Expression: candidate(\"go\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpieeig9k5.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpieeig9k5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpieeig9k5.jl:40\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpieeig9k5.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpieeig9k5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpieeig9k5.jl:41\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpieeig9k5.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpieeig9k5.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     4     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpieeig9k5.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if (string) == \"\"\n        return false\n    end\n    length = string.length\n\
    \    count = 0\n    for i in 2:length-1\n        if length % i == 0\n        \
    \    count += 1\n        end\n    end\n    if count > 0\n        return false\n\
    \    else\n        return true\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpibxyxu51.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  type String has no field length\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] prime_length(string::String)\n\
    \     @ Main /tmp/tmpibxyxu51.jl:13\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpibxyxu51.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpibxyxu51.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpibxyxu51.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  type String has no field length\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] prime_length(string::String)\n\
    \     @ Main /tmp/tmpibxyxu51.jl:13\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpibxyxu51.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpibxyxu51.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpibxyxu51.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  type String has no field length\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] prime_length(string::String)\n\
    \     @ Main /tmp/tmpibxyxu51.jl:13\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpibxyxu51.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpibxyxu51.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpibxyxu51.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  type String has no field length\n  S"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 15 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpibxyxu51.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if length(string) < 2\n        return false\n    end\n    if length(string)\
    \ == 2\n        return true\n    end\n    if length(string) % 2 == 0\n       \
    \ return false\n    end\n    for i = 3:2:floor(Int,length(string)/2)\n       \
    \ if length(string) % i == 0\n            return false\n        end\n    end\n\
    \    return true\nend\n \nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length_str = length(string)\n    for i in 2:length_str\n        if(length_str\
    \ % i == 0)\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo4g4za4u.jl:23\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo4g4za4u.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo4g4za4u.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpo4g4za4u.jl:24\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo4g4za4u.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo4g4za4u.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpo4g4za4u.jl:25\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo4g4za4u.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo4g4za4u.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpo4g4za4u.jl:27\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo4g4za4u.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo4g4za4u.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpo4g4za4u.jl:28\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 13 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo4g4za4u.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    l = length(string)\n    if l == 2 || l == 3 || l == 5 || l == 7 || l ==\
    \ 11 || l == 13 || l == 17\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n        if length(string) % 2 == 0 || length(string) % 3 == 0 || length(string)\
    \ % 5 == 0 || length(string) % 7 == 0\n            return false\n        else\n\
    \            return true\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfrkepunc.jl:16\nin expression starting at /tmp/tmpfrkepunc.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if length(string) < 2\n        return false\n    end\n    for number in\
    \ 2:floor(Int,sqrt(length(string)))\n        if length(string) % number == 0\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") ==\
    \ true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    len_string = length(string)\n    if (len_string%2 == 0 && len_string >\
    \ 2) || len_string < 2\n        return false\n    end\n    factor = 3\n    while\
    \ factor <= floor(sqrt(len_string))\n        if len_string%factor == 0\n     \
    \       return false\n        end\n        factor = factor + 2\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    str_length = length(string)\n    if str_length < 2\n        return false\n\
    \    end\n    for i in 2:str_length-1\n        if str_length % i == 0\n      \
    \      return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\
    \t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    len = length(string)\n    if len % 2 == 0\n        return false\n    end\n\
    \    for i in 3:len\n        if len % i == 0\n            return false\n     \
    \   end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_p0h7v6x.jl:26\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_p0h7v6x.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_p0h7v6x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_p0h7v6x.jl:27\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_p0h7v6x.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_p0h7v6x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_p0h7v6x.jl:28\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_p0h7v6x.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_p0h7v6x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_p0h7v6x.jl:30\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_p0h7v6x.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_p0h7v6x.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_p0h7v6x.jl:31\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 12 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_p0h7v6x.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length(string) in [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131,\
    \ 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223,\
    \ 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311,\
    \ 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409,\
    \ 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503,\
    \ 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613,\
    \ 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719,\
    \ 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827,\
    \ 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941,\
    \ 947, 953, 967, 971, 977, 983, 991, 997]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    \"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\n    p = isprime(length(string))\n\
    \    return p\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjy6fxl09.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpjy6fxl09.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjy6fxl09.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjy6fxl09.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpjy6fxl09.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpjy6fxl09.jl:18\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjy6fxl09.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjy6fxl09.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpjy6fxl09.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpjy6fxl09.jl:18\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjy6fxl09.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjy6fxl09.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpjy6fxl09.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpjy6fxl09.jl:18\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjy6fxl09.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length = length(string)\n    if length < 2\n        return false\n   \
    \ end\n    for i in 2:length-1\n        if rem(length, i) == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq53znbg9.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpq53znbg9.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq53znbg9.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq53znbg9.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpq53znbg9.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpq53znbg9.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq53znbg9.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq53znbg9.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpq53znbg9.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpq53znbg9.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq53znbg9.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq53znbg9.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpq53znbg9.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpq53znbg9.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq53znbg9.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length = size(string)\n    if length < 2 return false end\n    for i in\
    \ 2:length-1\n        if length % i == 0\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppj9adlhz.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hello\") == true\\n  MethodError: no method\
    \ matching size(::String)\\n  Closest candidates are:\\n    size(!Matched::Union{LinearAlgebra.Adjoint{T,\
    \ var\"#s861\"}, LinearAlgebra.Transpose{T, var\"#s861\"}} where {T, var\"#s861\"\
    <:(AbstractVector)}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:172\\\
    n    size(!Matched::Union{LinearAlgebra.Adjoint{T, var\"#s861\"}, LinearAlgebra.Transpose{T,\
    \ var\"#s861\"}} where {T, var\"#s861\"<:(AbstractMatrix)}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:173\\\
    n    size(!Matched::Union{LinearAlgebra.QR, LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted})\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:567\\\
    n    ...\\n  Stacktrace:\\n   [1] prime_length(string::String)\\n     @ Main /tmp/tmppj9adlhz.jl:10\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmppj9adlhz.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppj9adlhz.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmppj9adlhz.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdcba\") == true\\n  MethodError: no method matching size(::String)\\\
    n  Closest candidates are:\\n    size(!Matched::Union{LinearAlgebra.Adjoint{T,\
    \ var\"#s861\"}, LinearAlgebra.Transpose{T, var\"#s861\"}} where {T, var\"#s861\"\
    <:(AbstractVector)}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:172\\\
    n    size(!Matched::Union{LinearAlgebra.Adjoint{T, var\"#s861\"}, LinearAlgebra.Transpose{T,\
    \ var\"#s861\"}} where {T, var\"#s861\"<:(AbstractMatrix)}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:173\\\
    n    size(!Matched::Union{LinearAlgebra.QR, LinearAlgebra.QRCompactWY, LinearAlgebra."
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    string_length = length(string)\n    if string_length > 1\n        return\
    \ string_length % 2 != 0\n    else\n        return false\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\"\
    ) == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp06m_bza7.jl:31\n  Expression: candidate(\"\
    HI\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp06m_bza7.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp06m_bza7.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp06m_bza7.jl:32\n  Expression: candidate(\"go\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp06m_bza7.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp06m_bza7.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp06m_bza7.jl:34\n  Expression: candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp06m_bza7.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp06m_bza7.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp06m_bza7.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    len_string = length(string)\n    for i in 2:len_string-1\n        if (len_string\
    \ % i) == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgobwhwbz.jl:31\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgobwhwbz.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgobwhwbz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpgobwhwbz.jl:37\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgobwhwbz.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgobwhwbz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpgobwhwbz.jl:38\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgobwhwbz.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgobwhwbz.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgobwhwbz.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    for i in 2:floor(sqrt(length(string)))\n        if length(string) % i\
    \ == 0\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp52nusyqa.jl:30\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp52nusyqa.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp52nusyqa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp52nusyqa.jl:36\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp52nusyqa.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp52nusyqa.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp52nusyqa.jl:37\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp52nusyqa.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp52nusyqa.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp52nusyqa.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    return !(divisibleby(stringlength(string), 2) || divisibleby(stringlength(string),\
    \ 3) || divisibleby(stringlength(string), 5) || divisibleby(stringlength(string),\
    \ 7))\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpi2x9eajh.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: stringlength not\
    \ defined\n  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpi2x9eajh.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi2x9eajh.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi2x9eajh.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpi2x9eajh.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: stringlength not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpi2x9eajh.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi2x9eajh.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi2x9eajh.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpi2x9eajh.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: stringlength not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpi2x9eajh.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi2x9eajh.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi2x9eajh.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpi2x9eajh.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: stringlength not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpi2x9eajh.jl:10\n\
    \   [2] macro expansion\n     @ /sh"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi2x9eajh.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length = size(string,1)\n    if (length > 1)\n        for i in 2:length-1\n\
    \            if (rem(length,i) == 0)\n                return false\n         \
    \   end\n        end\n        return true\n    else\n        return false\n  \
    \  end\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp828bpftz.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  MethodError: no method matching\
    \ size(::String, ::Int64)\n  Closest candidates are:\n    size(!Matched::Union{LinearAlgebra.QR,\
    \ LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted}, ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:566\n\
    \    size(!Matched::Union{LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{T,\
    \ S}} where {T, S}, ::Any) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:201\n\
    \    size(!Matched::Union{LinearAlgebra.Cholesky, LinearAlgebra.CholeskyPivoted},\
    \ ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/cholesky.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmp828bpftz.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp828bpftz.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp828bpftz.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp828bpftz.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  MethodError: no method matching size(::String,\
    \ ::Int64)\n  Closest candidates are:\n    size(!Matched::Union{LinearAlgebra.QR,\
    \ LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted}, ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:566\n\
    \    size(!Matched::Union{LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{T,\
    \ S}} where {T, S}, ::Any) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:201\n\
    \    size(!Matched::Union{LinearAlgebra.Cholesky, LinearAlgebra.CholeskyPivoted},\
    \ ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/cholesky.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] prime_length(string::String)\n     @ Mai"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp828bpftz.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length(string) == isprime(length(string))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t\
    @test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3z73rrex.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmp3z73rrex.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3z73rrex.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3z73rrex.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp3z73rrex.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp3z73rrex.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3z73rrex.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3z73rrex.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp3z73rrex.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp3z73rrex.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3z73rrex.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3z73rrex.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp3z73rrex.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp3z73rrex.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3z73rrex.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n  (length(string)%2==0||length(string)%3==0||length(string)%5==0||length(string)%7==0||length(string)%11==0)==false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7dnuewm6.jl:17\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7dnuewm6.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7dnuewm6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7dnuewm6.jl:18\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7dnuewm6.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7dnuewm6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7dnuewm6.jl:19\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7dnuewm6.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7dnuewm6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7dnuewm6.jl:21\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7dnuewm6.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7dnuewm6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7dnuewm6.jl:22\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 12 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7dnuewm6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    n::Int = length(string)\n    for i::Int in 2:n\n        if i != n && n\
    \ % i == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpulo4w0tr.jl:31\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulo4w0tr.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulo4w0tr.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpulo4w0tr.jl:37\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulo4w0tr.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulo4w0tr.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpulo4w0tr.jl:38\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpulo4w0tr.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpulo4w0tr.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpulo4w0tr.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    \"\"\"\n    Decide if prime or not.\n    \"\"\"\n    return(isprime(length(string)))\n\
    using Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpywce95g_.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpywce95g_.jl:1\n\
    in expression starting at /tmp/tmpywce95g_.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    prime = true\n    for i = 2:floor(Int,length(string)/2)\n        if mod(length(string),i)\
    \ == 0\n            prime = false\n        end\n    end\n    return prime\nend\n\
    print(prime_length(\"Hello\"))\nprint(prime_length(\"abcdcba\"))\nprint(prime_length(\"\
    kittens\"))\nprint(prime_length(\"orange\"))\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "truetruetruefalsetest set: Test Failed at /tmp/tmpjz_62kpy.jl:35\n  Expression:\
    \ candidate(\"\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjz_62kpy.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjz_62kpy.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpjz_62kpy.jl:41\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjz_62kpy.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjz_62kpy.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpjz_62kpy.jl:42\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjz_62kpy.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjz_62kpy.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjz_62kpy.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length(string) in [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131,\
    \ 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223,\
    \ 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311,\
    \ 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409,\
    \ 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503,\
    \ 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613,\
    \ 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719,\
    \ 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827,\
    \ 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941,\
    \ 947, 953, 967, 971, 977, 983, 991, 997]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    return isprime(length(string))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsesqs7nn.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpsesqs7nn.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsesqs7nn.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsesqs7nn.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpsesqs7nn.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpsesqs7nn.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsesqs7nn.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsesqs7nn.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpsesqs7nn.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpsesqs7nn.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsesqs7nn.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsesqs7nn.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpsesqs7nn.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpsesqs7nn.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsesqs7nn.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\
    \ 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,\
    \ 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947,\
    \ 953, 967, 971, 977, 983, 991, 997]\n    return findfirst(string) in primes\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpctwr93hh.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  TypeError: non-boolean (Char) used\
    \ in boolean context\n  Stacktrace:\n   [1] findfirst(A::String)\n     @ Base\
    \ ./array.jl:1912\n   [2] prime_length(string::String)\n     @ Main /tmp/tmpctwr93hh.jl:11\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpctwr93hh.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpctwr93hh.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpctwr93hh.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  TypeError: non-boolean (Char) used in boolean\
    \ context\n  Stacktrace:\n   [1] findfirst(A::String)\n     @ Base ./array.jl:1912\n\
    \   [2] prime_length(string::String)\n     @ Main /tmp/tmpctwr93hh.jl:11\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpctwr93hh.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpctwr93hh.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpctwr93hh.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  TypeError: non-boolean (Char) used in boolean\
    \ context\n  Stacktrace:\n   [1] findfirst(A::String)\n     @ Base ./array.jl:1912\n\
    \   [2] prime_length(string::String)\n     @ Main /tmp/tmpctwr93hh.jl:11\n   [3]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpctwr93hh.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpctwr93hh.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpctwr93hh.jl:21\n  Test threw exc"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 15 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpctwr93hh.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    return findfirst(isequal(length(string)), \n                     setdiff(primes(2^(length(string)+1)),\
    \ \n                             primes(2^(length(string))))) == nothing ? false\
    \ : true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzknnvvc1.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: primes not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpzknnvvc1.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzknnvvc1.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzknnvvc1.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpzknnvvc1.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpzknnvvc1.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzknnvvc1.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzknnvvc1.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpzknnvvc1.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpzknnvvc1.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzknnvvc1.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzknnvvc1.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpzknnvvc1.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpzknnvvc1.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzknnvvc1.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    n = length(string)\n    if n < 2 \n        return false\n    end\n   \
    \ for i in 2:ceil(sqrt(n))\n        if mod(n, i) == 0\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4vi7pu2d.jl:35\n  Expression: candidate(\"\
    HI\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4vi7pu2d.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4vi7pu2d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4vi7pu2d.jl:36\n  Expression: candidate(\"go\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4vi7pu2d.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4vi7pu2d.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   14     2     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 14 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4vi7pu2d.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length(string) % 2 == 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjbp_ze_8.jl:17\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjbp_ze_8.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjbp_ze_8.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjbp_ze_8.jl:18\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjbp_ze_8.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjbp_ze_8.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjbp_ze_8.jl:19\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjbp_ze_8.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjbp_ze_8.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjbp_ze_8.jl:20\n  Expression: candidate(\"orange\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjbp_ze_8.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjbp_ze_8.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjbp_ze_8.jl:21\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 11 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjbp_ze_8.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    len_str = length(string)\n    if len_str == 1 || len_str == 2\n      \
    \  return true\n    end\n    for i in 2:len_str-1\n        if mod(len_str, i)\
    \ == 0\n            return false\n        end\n    end\n    return true\nend\n\
    prime_length(\"Hello\")\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4jh047jw.jl:35\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4jh047jw.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4jh047jw.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp4jh047jw.jl:41\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4jh047jw.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4jh047jw.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp4jh047jw.jl:42\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4jh047jw.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4jh047jw.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4jh047jw.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    prime_length = length(string) % i == 0\n    if prime_length == 0\n   \
    \     println(\"its a prime number\")\n    else \n        println(\"not a prime\
    \ number\")\n    end\nend\nprime_length(\"Hello\")\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: i not defined\nStacktrace:\n [1] prime_length(string::String)\n\
    \   @ Main /tmp/tmpkq8zcx3k.jl:10\n [2] top-level scope\n   @ /tmp/tmpkq8zcx3k.jl:17\n\
    in expression starting at /tmp/tmpkq8zcx3k.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    for number in 2:length(string)\n        if length(string) % number ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\"\
    ) == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5tmw8dql.jl:22\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5tmw8dql.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5tmw8dql.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp5tmw8dql.jl:23\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5tmw8dql.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5tmw8dql.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp5tmw8dql.jl:24\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5tmw8dql.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5tmw8dql.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp5tmw8dql.jl:26\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5tmw8dql.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5tmw8dql.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp5tmw8dql.jl:27\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 13 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5tmw8dql.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    l = length(string)\n    if l <= 1\n        return false\n    end\n   \
    \ for i in 2:l-1\n        if l % i == 0\n            return false\n        end\n\
    \    end\n    return true\nend\n# println(prime_length(\"c\"))\nusing Test\n\n\
    @testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\
    \t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length(string) == isprime(length(string))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t\
    @test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphdjp2bxg.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmphdjp2bxg.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphdjp2bxg.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphdjp2bxg.jl:16\ntest set:\
    \ Error During Test at /tmp/tmphdjp2bxg.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmphdjp2bxg.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphdjp2bxg.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphdjp2bxg.jl:16\ntest set:\
    \ Error During Test at /tmp/tmphdjp2bxg.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmphdjp2bxg.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphdjp2bxg.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphdjp2bxg.jl:16\ntest set:\
    \ Error During Test at /tmp/tmphdjp2bxg.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmphdjp2bxg.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphdjp2bxg.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length(string) in primes(100)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7n9ys82i.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: primes not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmp7n9ys82i.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7n9ys82i.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7n9ys82i.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp7n9ys82i.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp7n9ys82i.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7n9ys82i.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7n9ys82i.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp7n9ys82i.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp7n9ys82i.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7n9ys82i.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7n9ys82i.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp7n9ys82i.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp7n9ys82i.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7n9ys82i.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    string_length = length(string)\n    if isprime(string_length) == true\
    \ \n        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") ==\
    \ true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfp__w228.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpfp__w228.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfp__w228.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfp__w228.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpfp__w228.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpfp__w228.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfp__w228.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfp__w228.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpfp__w228.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpfp__w228.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfp__w228.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfp__w228.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpfp__w228.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpfp__w228.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfp__w228.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    #put your code here\n    return nothing\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4d61gfnm.jl:18\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hello\") == true\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Bool\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\\\
    n    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\\\
    n    ...\\n  Stacktrace:\\n   [1] prime_length(string::String)\\n     @ Main /tmp/tmp4d61gfnm.jl:11\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4d61gfnm.jl:18 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4d61gfnm.jl:17\\ntest set:\
    \ Error During Test at /tmp/tmp4d61gfnm.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdcba\") == true\\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\\\
    n    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\\\
    n    ...\\n  Stacktrace:\\n   [1] prime_length(string::String)\\n     @ Main /tmp/tmp4d61gfnm.jl:11\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp4d61gfnm.jl:19 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inl"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    len = length(string)\n    k = 2\n    while k <= len/2\n        if len\
    \ % k == 0\n            return false\n        end\n        k += 1\n    end\n \
    \   return true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7xmhhgvx.jl:33\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7xmhhgvx.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7xmhhgvx.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp7xmhhgvx.jl:39\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7xmhhgvx.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7xmhhgvx.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp7xmhhgvx.jl:40\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7xmhhgvx.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7xmhhgvx.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7xmhhgvx.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    return prime(length(string))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphiw3i1i2.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: prime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmphiw3i1i2.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphiw3i1i2.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphiw3i1i2.jl:16\ntest set:\
    \ Error During Test at /tmp/tmphiw3i1i2.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: prime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmphiw3i1i2.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphiw3i1i2.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphiw3i1i2.jl:16\ntest set:\
    \ Error During Test at /tmp/tmphiw3i1i2.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: prime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmphiw3i1i2.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphiw3i1i2.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphiw3i1i2.jl:16\ntest set:\
    \ Error During Test at /tmp/tmphiw3i1i2.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: prime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmphiw3i1i2.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/sha"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphiw3i1i2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    return isprime(length(string))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2eog9bxi.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmp2eog9bxi.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2eog9bxi.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2eog9bxi.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp2eog9bxi.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp2eog9bxi.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2eog9bxi.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2eog9bxi.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp2eog9bxi.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp2eog9bxi.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2eog9bxi.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2eog9bxi.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp2eog9bxi.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp2eog9bxi.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2eog9bxi.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    return prime(length(string))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeu1t4122.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: prime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpeu1t4122.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeu1t4122.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeu1t4122.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpeu1t4122.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: prime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpeu1t4122.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeu1t4122.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeu1t4122.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpeu1t4122.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: prime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpeu1t4122.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeu1t4122.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeu1t4122.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpeu1t4122.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: prime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpeu1t4122.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/sha"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeu1t4122.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    print(string)\n    return isprime(length(string))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\
    \t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "Hellotest set: Error During Test at /tmp/tmpz2jlkzem.jl:18\n  Test threw\
    \ exception\n  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main\
    \ /tmp/tmpz2jlkzem.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz2jlkzem.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz2jlkzem.jl:17\nabcdcbatest\
    \ set: Error During Test at /tmp/tmpz2jlkzem.jl:19\n  Test threw exception\n \
    \ Expression: candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpz2jlkzem.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz2jlkzem.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz2jlkzem.jl:17\nkittenstest\
    \ set: Error During Test at /tmp/tmpz2jlkzem.jl:20\n  Test threw exception\n \
    \ Expression: candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpz2jlkzem.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpz2jlkzem.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpz2jlkzem.jl:17\norangetest\
    \ set: Error During Test at /tmp/tmpz2jlkzem.jl:21\n  Test threw exception\n \
    \ Expression: candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpz2jlkzem.jl:11\n\
    \   [2] macro expansion\n     "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz2jlkzem.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length(string) in isprime(10)\nend\nprime_length(\"Hello\")\nusing Test\n\
    \n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") ==\
    \ true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: isprime not defined\nStacktrace:\n [1]\
    \ prime_length(string::String)\n   @ Main /tmp/tmp8z14801v.jl:10\n [2] top-level\
    \ scope\n   @ /tmp/tmp8z14801v.jl:12\nin expression starting at /tmp/tmp8z14801v.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    prime_list = [0, 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\
    \ 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,\
    \ 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947,\
    \ 953, 967, 971, 977, 983, 991, 997]\n    length = length(string)\n    isprime\
    \ = false\n    for j in prime_list\n        if length == j\n            isprime\
    \ = true\n        end\n    end\n    return isprime\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t\
    @test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvgw9n1c_.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpvgw9n1c_.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvgw9n1c_.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvgw9n1c_.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpvgw9n1c_.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpvgw9n1c_.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvgw9n1c_.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvgw9n1c_.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpvgw9n1c_.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpvgw9n1c_.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvgw9n1c_.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvgw9n1c_.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpvgw9n1c_.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpvgw9n1c_.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvgw9n1c_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    str_length = length(string)\n    prime_num = true\n    for num in range(2,str_length-1)\n\
    \        if str_length % num == 0\n            prime_num = false\n        end\n\
    \    end\n    return prime_num\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb6a_qp1s.jl:32\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb6a_qp1s.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb6a_qp1s.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpb6a_qp1s.jl:38\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb6a_qp1s.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb6a_qp1s.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpb6a_qp1s.jl:39\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb6a_qp1s.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb6a_qp1s.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb6a_qp1s.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n        if (length(string) < 2)\n            return false\n        end\n \
    \       end_number = floor(length(string) / 2) + 1\n        for i in 2:end_number\n\
    \            if (length(string) % i == 0)\n                return false\n    \
    \        end\n        end\n        return true\n    end\nend\nprime_length(\"\
    kittens\")\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3thiuy_6.jl:21\nin expression starting at /tmp/tmp3thiuy_6.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    return isprime(length(string))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgpclvoop.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpgpclvoop.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgpclvoop.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgpclvoop.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpgpclvoop.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpgpclvoop.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgpclvoop.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgpclvoop.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpgpclvoop.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpgpclvoop.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgpclvoop.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgpclvoop.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpgpclvoop.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpgpclvoop.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgpclvoop.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    len = length(string)\n    if len == 2\n        return true\n    end\n\
    \    if len < 2\n        return false\n    end\n    for i in 2:len-1\n       \
    \ if len % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    prime_array = []\n    i = 1\n    while i < string.length\n        if i\
    \ % 2 == 0\n            push!(prime_array, \"not prime\")\n        else\n    \
    \        push!(prime_array, \"prime\")\n        end\n        i = i + 1\n    end\n\
    \    if \"prime\" in prime_array == true\n        return true\n    else\n    \
    \    return false\n    end\nend\nprint(prime_length(\"Hello\"))\nprint(prime_length(\"\
    abcdcba\"))\nprint(prime_length(\"kittens\"))\nprint(prime_length(\"orange\"))\n\
    using Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: type String has no field length\nStacktrace:\n [1] getproperty\n\
    \   @ ./Base.jl:42 [inlined]\n [2] prime_length(string::String)\n   @ Main /tmp/tmpolk5jzy6.jl:12\n\
    \ [3] top-level scope\n   @ /tmp/tmpolk5jzy6.jl:26\nin expression starting at\
    \ /tmp/tmpolk5jzy6.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if length(string) == 2 || length(string) == 3 || length(string) == 5 ||\
    \ length(string) == 7 || length(string) == 11 || length(string) == 13 || length(string)\
    \ == 17 || length(string) == 19\n        return true\n    else\n        return\
    \ false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    len = length(string)\n    for i in 2:len-1\n        if len % i == 0\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") ==\
    \ true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpophg3a9v.jl:31\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpophg3a9v.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpophg3a9v.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpophg3a9v.jl:37\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpophg3a9v.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpophg3a9v.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpophg3a9v.jl:38\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpophg3a9v.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpophg3a9v.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpophg3a9v.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    return isprime(length(string))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp508q48ll.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmp508q48ll.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp508q48ll.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp508q48ll.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp508q48ll.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp508q48ll.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp508q48ll.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp508q48ll.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp508q48ll.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp508q48ll.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp508q48ll.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp508q48ll.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp508q48ll.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp508q48ll.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp508q48ll.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    len = length(string)\n    if len < 2 \n        return false\n    end\n\
    \    for i in 2:len\n        if mod(len, i) == 0\n            return false\n \
    \       end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr_8uwy0k.jl:26\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr_8uwy0k.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr_8uwy0k.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpr_8uwy0k.jl:27\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr_8uwy0k.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr_8uwy0k.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpr_8uwy0k.jl:28\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr_8uwy0k.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr_8uwy0k.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpr_8uwy0k.jl:30\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr_8uwy0k.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr_8uwy0k.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpr_8uwy0k.jl:31\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 10 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr_8uwy0k.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    if length(string) == 1\n        return true\n    else\n        for i =\
    \ 2:length(string)\n            if isinteger(length(string)/i)\n             \
    \   return false\n            end\n        end\n        return true\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp006jqco8.jl:26\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp006jqco8.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp006jqco8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp006jqco8.jl:27\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp006jqco8.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp006jqco8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp006jqco8.jl:28\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp006jqco8.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp006jqco8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp006jqco8.jl:30\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp006jqco8.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp006jqco8.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp006jqco8.jl:31\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 13 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp006jqco8.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    len = length(string)\n    if len == 2\n        return true\n    end\n\
    \    for i in 2:len-1\n        if len % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi_j236a7.jl:34\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi_j236a7.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi_j236a7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi_j236a7.jl:40\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi_j236a7.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi_j236a7.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi_j236a7.jl:41\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi_j236a7.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi_j236a7.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi_j236a7.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n  n = length(string)\n  if isprime(n) == true\n    return true\n  else \n\
    \    return false\n  end\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0p53gw1a.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmp0p53gw1a.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0p53gw1a.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0p53gw1a.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp0p53gw1a.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp0p53gw1a.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0p53gw1a.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0p53gw1a.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp0p53gw1a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp0p53gw1a.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0p53gw1a.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0p53gw1a.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp0p53gw1a.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp0p53gw1a.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0p53gw1a.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    count = 0\n    for i in eachindex(string)\n        count += 1\n    end\n\
    \    return isprime(count)\nend\nprime_length(\"Hello\")\nusing Test\n\n@testset\
    \ begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t\
    @test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: isprime not defined\nStacktrace:\n [1]\
    \ prime_length(string::String)\n   @ Main /tmp/tmprdtp_avf.jl:14\n [2] top-level\
    \ scope\n   @ /tmp/tmprdtp_avf.jl:16\nin expression starting at /tmp/tmprdtp_avf.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    let number = length(string)\n    let list_of_primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173,\
    \ 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263,\
    \ 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359,\
    \ 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457,\
    \ 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569,\
    \ 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659,\
    \ 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769,\
    \ 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881,\
    \ 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997]\n\
    \    for prime in list_of_primes\n        if number == prime\n            return\
    \ true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"let\" at /tmp/tmprco1om4j.jl:10\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprco1om4j.jl:1\n\
    in expression starting at /tmp/tmprco1om4j.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    \"\"\"Our function\"\"\"\n    len = length(string) \n    \"\"\"We first\
    \ get the length of our string\"\"\"\n    for i in 2:len-1\n        \"\"\"we loop\
    \ from 2 to len-1\"\"\"\n        if len % i == 0 \n            \"\"\"If the length\
    \ is divisible by i\"\"\"\n            return false \n            \"\"\"Return\
    \ false to indicate that the length is not prime\"\"\"\n        end\n    end\n\
    \    return true \n    \"\"\"return true to indicate that the length is prime\"\
    \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo32l6cr3.jl:37\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo32l6cr3.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo32l6cr3.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpo32l6cr3.jl:43\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo32l6cr3.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo32l6cr3.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpo32l6cr3.jl:44\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo32l6cr3.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo32l6cr3.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo32l6cr3.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    return isprime(length(string))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkky42zy7.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpkky42zy7.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkky42zy7.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkky42zy7.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkky42zy7.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpkky42zy7.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkky42zy7.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkky42zy7.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkky42zy7.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpkky42zy7.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkky42zy7.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkky42zy7.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkky42zy7.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpkky42zy7.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkky42zy7.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    prime_array = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\
    \ 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,\
    \ 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947,\
    \ 953, 967, 971, 977, 983, 991, 997]\n    for prime in prime_array\n        if\
    \ prime == length(string)\n            return true\n    end\n    return false\n\
    end\n \nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp98erj_25.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp98erj_25.jl:1\n\
    in expression starting at /tmp/tmp98erj_25.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length(string) in primes(50) \nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp82mx_kps.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: primes not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmp82mx_kps.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp82mx_kps.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp82mx_kps.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp82mx_kps.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp82mx_kps.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp82mx_kps.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp82mx_kps.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp82mx_kps.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp82mx_kps.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp82mx_kps.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp82mx_kps.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp82mx_kps.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmp82mx_kps.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp82mx_kps.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    str = string\n    str_length = length(str)\n    isprime = true\n    #\
    \ loop over all potential factors of the string\n    for i in 1:str_length-1\n\
    \        # check if i divides str_length\n        if (str_length % i) == 0\n \
    \           # if yes, then it is not a prime number\n            isprime = false\n\
    \            # exit the loop\n            break\n        end\n    end\n    isprime\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn2b0ppq1.jl:30\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn2b0ppq1.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn2b0ppq1.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpn2b0ppq1.jl:31\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn2b0ppq1.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn2b0ppq1.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpn2b0ppq1.jl:32\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn2b0ppq1.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn2b0ppq1.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpn2b0ppq1.jl:34\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn2b0ppq1.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn2b0ppq1.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpn2b0ppq1.jl:35\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 13 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn2b0ppq1.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    even = [2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100]\n\
    \    odd = [1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,97,99]\n\
    \    if length(string) in even\n        return false\n    elseif length(string)\
    \ in odd\n        return true\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpahku2ywq.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"\") == false\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpahku2ywq.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpahku2ywq.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpahku2ywq.jl:22\ntest set:\
    \ Test Failed at /tmp/tmpahku2ywq.jl:32\n  Expression: candidate(\"HI\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpahku2ywq.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpahku2ywq.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpahku2ywq.jl:33\n  Expression: candidate(\"go\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpahku2ywq.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpahku2ywq.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpahku2ywq.jl:35\n  Expression: candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false\n   Evaluated:"
  stderr: "ERROR: LoadError: Some tests did not pass: 10 passed, 5 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpahku2ywq.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    return isprime(length(string))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphezcpahu.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmphezcpahu.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphezcpahu.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphezcpahu.jl:16\ntest set:\
    \ Error During Test at /tmp/tmphezcpahu.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmphezcpahu.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphezcpahu.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphezcpahu.jl:16\ntest set:\
    \ Error During Test at /tmp/tmphezcpahu.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmphezcpahu.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphezcpahu.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphezcpahu.jl:16\ntest set:\
    \ Error During Test at /tmp/tmphezcpahu.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmphezcpahu.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphezcpahu.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    count = length(string)\n    isprime = true\n    for i = 2:count-1\n  \
    \      if count % i == 0\n            isprime = false\n        end\n    end\n\
    \    return isprime\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgj387975.jl:32\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgj387975.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgj387975.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpgj387975.jl:38\n  Expression: candidate(\"M\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgj387975.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgj387975.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpgj387975.jl:39\n  Expression: candidate(\"0\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgj387975.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgj387975.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   13     3     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 13 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgj387975.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    len_str = length(string)\n    if len_str <= 1\n        return false\n\
    \    end\n    if len_str == 2\n        return true\n    end\n    for i in 1:len_str-1\n\
    \        if len_str % i == 0\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnuds38t6.jl:29\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnuds38t6.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnuds38t6.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpnuds38t6.jl:30\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnuds38t6.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnuds38t6.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpnuds38t6.jl:31\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnuds38t6.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnuds38t6.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpnuds38t6.jl:33\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnuds38t6.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnuds38t6.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpnuds38t6.jl:34\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 8 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnuds38t6.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    n = length(string)\n    if isprime(n)\n        return true\n    else\n\
    \        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpngb78ate.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpngb78ate.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpngb78ate.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpngb78ate.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpngb78ate.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpngb78ate.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpngb78ate.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpngb78ate.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpngb78ate.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpngb78ate.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpngb78ate.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpngb78ate.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpngb78ate.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpngb78ate.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpngb78ate.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    slen = length(string)\n    if slen == 2 || slen == 3 || slen == 5 || slen\
    \ == 7 || slen == 11\n        return true\n    else\n        return false\n  \
    \  end\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    return isprime(length(string))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"\
    abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"\
    orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"\
    world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"\
    Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"HI\")\
    \ == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\") ==\
    \ false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe8snlizd.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpe8snlizd.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe8snlizd.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe8snlizd.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpe8snlizd.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpe8snlizd.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe8snlizd.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe8snlizd.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpe8snlizd.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpe8snlizd.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe8snlizd.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe8snlizd.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpe8snlizd.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpe8snlizd.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe8snlizd.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n  \n    n = length(string)\n  \n    if n == 2 || n == 3 || n == 5\n      \
    \  return true\n    elseif n <= 1 || n % 2 == 0 || n % 3 == 0 || n % 5 == 0\n\
    \        return false\n    else\n        return true\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") ==\
    \ true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   16     16\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    string_len = length(string)\n    if isprime(string_len) == true\n    \
    \    return true\n    else\n        return false\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") == true)\n\
    \t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\") == true)\n\
    \t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\") == true)\n\
    \t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\") == true)\n\
    \t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"\
    HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"gogo\"\
    ) == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd_6_leeu.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpd_6_leeu.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd_6_leeu.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd_6_leeu.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpd_6_leeu.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpd_6_leeu.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd_6_leeu.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd_6_leeu.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpd_6_leeu.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpd_6_leeu.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd_6_leeu.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd_6_leeu.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpd_6_leeu.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpd_6_leeu.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd_6_leeu.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    string_length = length(string)\n    for i in 2:string_length\n       \
    \ if string_length % i == 0\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm9utcevu.jl:23\n  Expression: candidate(\"\
    Hello\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm9utcevu.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm9utcevu.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpm9utcevu.jl:24\n  Expression: candidate(\"abcdcba\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm9utcevu.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm9utcevu.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpm9utcevu.jl:25\n  Expression: candidate(\"kittens\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm9utcevu.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm9utcevu.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpm9utcevu.jl:27\n  Expression: candidate(\"wow\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm9utcevu.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm9utcevu.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpm9utcevu.jl:28\n  Expression: candidate(\"world\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 13 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm9utcevu.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    number_of_letters = length(string)\n    for i in [2:number_of_letters-1]\n\
    \        if number_of_letters % i == 0\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpz0h2btcq.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hello\") == true\\n  MethodError: no method\
    \ matching rem(::Int64, ::UnitRange{Int64})\\n  Closest candidates are:\\n   \
    \ rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\\\
    n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\\\
    n    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\\\
    n    ...\\n  Stacktrace:\\n   [1] prime_length(string::String)\\n     @ Main /tmp/tmpz0h2btcq.jl:12\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpz0h2btcq.jl:23 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpz0h2btcq.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpz0h2btcq.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdcba\") == true\\n  MethodError: no method matching rem(::Int64,\
    \ ::UnitRange{Int64})\\n  Closest candidates are:\\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\\\
    n    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\\\
    n    ...\\n  Stacktrace:\\n   [1] prime_length(string::String)\\n     @ Main /tmp/tmpz0h2btcq.jl:12\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpz0h2btcq.jl:24 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpz0h2btcq.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpz0h2b"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length = length(string)\n    return isprime(length)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\") ==\
    \ true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq04a5smg.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpq04a5smg.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq04a5smg.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq04a5smg.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpq04a5smg.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpq04a5smg.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq04a5smg.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq04a5smg.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpq04a5smg.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpq04a5smg.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq04a5smg.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq04a5smg.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpq04a5smg.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpq04a5smg.jl:10\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq04a5smg.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    \"\"\"Returns True or False according to whether the length of the string\
    \ is a prime number or not.\"\"\"\n    if length(string) == 1 || length(string)\
    \ == 2\n        println(\"True, the string length is prime\")\n        return\
    \ true\n    else\n        for i in [2:(length(string)-1)]\n            if rem(length(string),\
    \ i) == 0\n                println(\"False, the string length is not prime\")\n\
    \                return false\n            end\n        end\n        println(\"\
    True, the string length is prime\")\n        return true\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\"\
    ) == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0u4c2nrc.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hello\") == true\\n  MethodError: no method\
    \ matching rem(::Int64, ::UnitRange{Int64})\\n  Closest candidates are:\\n   \
    \ rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\\\
    n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\\\
    n    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\\\
    n    ...\\n  Stacktrace:\\n   [1] prime_length(string::String)\\n     @ Main /tmp/tmp0u4c2nrc.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0u4c2nrc.jl:30 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0u4c2nrc.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmp0u4c2nrc.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdcba\") == true\\n  MethodError: no method matching rem(::Int64,\
    \ ::UnitRange{Int64})\\n  Closest candidates are:\\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\\\
    n    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\\\
    n    ...\\n  Stacktrace:\\n   [1] prime_length(string::String)\\n     @ Main /tmp/tmp0u4c2nrc.jl:16\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmp0u4c2nrc.jl:31 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp0u4c2nrc.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmp0u4c2"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length = size(string, 1)\n    not_prime = [2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103,\
    \ 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191,\
    \ 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277,\
    \ 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379,\
    \ 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467,\
    \ 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587,\
    \ 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677,\
    \ 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797,\
    \ 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907,\
    \ 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997]\n    return\
    \ length in not_prime\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2gyq2_x1.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  MethodError: no method matching\
    \ size(::String, ::Int64)\n  Closest candidates are:\n    size(!Matched::Union{LinearAlgebra.QR,\
    \ LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted}, ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:566\n\
    \    size(!Matched::Union{LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{T,\
    \ S}} where {T, S}, ::Any) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:201\n\
    \    size(!Matched::Union{LinearAlgebra.Cholesky, LinearAlgebra.CholeskyPivoted},\
    \ ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/cholesky.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmp2gyq2_x1.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2gyq2_x1.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2gyq2_x1.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp2gyq2_x1.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  MethodError: no method matching size(::String,\
    \ ::Int64)\n  Closest candidates are:\n    size(!Matched::Union{LinearAlgebra.QR,\
    \ LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted}, ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:566\n\
    \    size(!Matched::Union{LinearAlgebra.Hermitian{T, S}, LinearAlgebra.Symmetric{T,\
    \ S}} where {T, S}, ::Any) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:201\n\
    \    size(!Matched::Union{LinearAlgebra.Cholesky, LinearAlgebra.CholeskyPivoted},\
    \ ::Integer) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/cholesky.jl:495\n\
    \    ...\n  Stacktrace:\n   [1] prime_length(string::String)\n     @ Mai"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2gyq2_x1.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n        prime_length = true\n        length = length(string)\n        \n \
    \       if length == 2 || length == 3 || length == 5 || length == 7 || length\
    \ == 11 || length == 13 || length == 17 || length == 19 || length == 23 || length\
    \ == 29\n            prime_length = true\n        else\n            prime_length\
    \ = false\n        end\n        \n        return prime_length\n    end\nusing\
    \ Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"Hello\"\
    ) == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"kittens\"\
    ) == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"wow\"\
    ) == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgb19q63k.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  UndefVarError: length not defined\n\
    \  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmpgb19q63k.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgb19q63k.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgb19q63k.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpgb19q63k.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpgb19q63k.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgb19q63k.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgb19q63k.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpgb19q63k.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"kittens\") == true\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpgb19q63k.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgb19q63k.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgb19q63k.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpgb19q63k.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"orange\") == false\n  UndefVarError: length not defined\n  Stacktrace:\n\
    \   [1] prime_length(string::String)\n     @ Main /tmp/tmpgb19q63k.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgb19q63k.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    s = length(string)\n    if s == 1\n        return false\n    end\n   \
    \ for i in 2:s-1\n        if s % i == 0\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\
    \t@test(candidate(\"Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\
    \t@test(candidate(\"kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\
    \t@test(candidate(\"wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t\
    @test(candidate(\"MadaM\") == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\
    \") == false)\n\t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") ==\
    \ true)\n\t@test(candidate(\"gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\"\
    ) == false)\n\t@test(candidate(\"Madam\") == true)\n\t@test(candidate(\"M\") ==\
    \ false)\n\t@test(candidate(\"0\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp61r13qk7.jl:34\n  Expression: candidate(\"\
    \") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp61r13qk7.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp61r13qk7.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   15     1     16\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 15 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp61r13qk7.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes a string and returns True if the string\n\
    \    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello')\
    \ == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') ==\
    \ True\n    prime_length('orange') == False\n    \"\"\"\nfunction prime_length(string::String)::Bool\
    \ \n    length = size(string)\n    for i in 2:floor(Int, sqrt(length))\n     \
    \   if length % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = prime_length;\n\t@test(candidate(\"\
    Hello\") == true)\n\t@test(candidate(\"abcdcba\") == true)\n\t@test(candidate(\"\
    kittens\") == true)\n\t@test(candidate(\"orange\") == false)\n\t@test(candidate(\"\
    wow\") == true)\n\t@test(candidate(\"world\") == true)\n\t@test(candidate(\"MadaM\"\
    ) == true)\n\t@test(candidate(\"Wow\") == true)\n\t@test(candidate(\"\") == false)\n\
    \t@test(candidate(\"HI\") == true)\n\t@test(candidate(\"go\") == true)\n\t@test(candidate(\"\
    gogo\") == false)\n\t@test(candidate(\"aaaaaaaaaaaaaaa\") == false)\n\t@test(candidate(\"\
    Madam\") == true)\n\t@test(candidate(\"M\") == false)\n\t@test(candidate(\"0\"\
    ) == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9cv901le.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"Hello\") == true\n  MethodError: no method matching\
    \ size(::String)\n  Closest candidates are:\n    size(!Matched::Union{LinearAlgebra.Adjoint{T,\
    \ var\"#s861\"}, LinearAlgebra.Transpose{T, var\"#s861\"}} where {T, var\"#s861\"\
    <:(AbstractVector)}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:172\n\
    \    size(!Matched::Union{LinearAlgebra.Adjoint{T, var\"#s861\"}, LinearAlgebra.Transpose{T,\
    \ var\"#s861\"}} where {T, var\"#s861\"<:(AbstractMatrix)}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:173\n\
    \    size(!Matched::Union{LinearAlgebra.QR, LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted})\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:567\n\
    \    ...\n  Stacktrace:\n   [1] prime_length(string::String)\n     @ Main /tmp/tmp9cv901le.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9cv901le.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9cv901le.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp9cv901le.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdcba\") == true\n  MethodError: no method matching size(::String)\n\
    \  Closest candidates are:\n    size(!Matched::Union{LinearAlgebra.Adjoint{T,\
    \ var\"#s861\"}, LinearAlgebra.Transpose{T, var\"#s861\"}} where {T, var\"#s861\"\
    <:(AbstractVector)}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:172\n\
    \    size(!Matched::Union{LinearAlgebra.Adjoint{T, var\"#s861\"}, LinearAlgebra.Transpose{T,\
    \ var\"#s861\"}} where {T, var\"#s861\"<:(AbstractMatrix)}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:173\n\
    \    size(!Matched::Union{LinearAlgebra.QR, LinearAlgebra.QRCompactWY, LinearAlgebra.QRPivoted})\
    \ at /shared/centos"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 16 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9cv901le.jl:20\n"
  exit_code: 1
  status: SyntaxError

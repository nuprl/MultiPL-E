name: HumanEval_55_fib
language: jl
prompt: "\"\"\"Return n-th Fibonacci number.\n    >>> fib(10)\n    55\n    >>> fib(1)\n\
  \    1\n    >>> fib(8)\n    21\n    \"\"\"\nfunction fib(n::Int64)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = fib;\n\t@test(candidate(10) ==\
  \ 55)\n\t@test(candidate(1) == 1)\n\t@test(candidate(8) == 21)\n\t@test(candidate(11)\
  \ == 89)\n\t@test(candidate(12) == 144)\nend\n"
completions: ["    if n <= 2\n        return 1\n    else\n        return fib(n-1)\
    \ + fib(n-2)\n    end\nend", "    first_prev = 1\n    second_prev = 1\n    for\
    \ i = 3:n\n        next = first_prev + second_prev\n        first_prev = second_prev\n\
    \        second_prev = next\n    end\n    return second_prev\nend", "    a::Int64\
    \ = 0\n    b::Int64 = 1\n    for i::Int64 in 1:n-1\n        tmp::Int64 = a\n \
    \       a = b\n        b = a + tmp\n    end\n    return b\nend", "    if n ==\
    \ 1 || n == 2\n        return 1\n    else\n        return fib(n-1) + fib(n-2)\n\
    \    end\nend", "    a, b = 0, 1\n    for i in 1:n\n        a, b = b, a + b\n\
    \    end\n    return a\nend", "    fib1 = 0\n    fib2 = 1\n    for i = 1:n-1\n\
    \        fib0 = fib1 + fib2\n        fib1 = fib2\n        fib2 = fib0\n    end\n\
    \    return fib2\nend", "    a = 1\n    b = 1\n    for i in 2:n-1\n        tmp\
    \ = a + b\n        a = b\n        b = tmp\n    end\n    return b\nend", "    if\
    \ n <= 2 \n        return 1\n    else \n        return fib(n-1) + fib(n-2)\n \
    \   end\nend", "    if n<2\n        return n\n    else\n        return fib(n-1)+fib(n-2)\n\
    \    end\nend", "    if n <= 2\n        return 1\n    else\n        return fib(n-1)\
    \ + fib(n-2)\n    end\nend", "    if n==1 || n==2\n        return 1\n    else\n\
    \        f=zeros(Int64,n)\n        f[1]=1\n        f[2]=1\n        for i=3:n\n\
    \            f[i]=f[i-1]+f[i-2]\n        end\n        return f[n]\n    end\nend\n\
    \ ", "    if n == 1 || n == 2\n        return 1\n    else\n        a = 1\n   \
    \     b = 1\n        for i = 3:n\n            a, b = b, a + b\n        end\n \
    \       return b\n    end\nend", "    return n < 2 ? n : fib(n-1) + fib(n-2)\n\
    end", "    if n == 1 || n == 2\n        return 1\n    else\n        return fib(n-1)\
    \ + fib(n-2)\n    end\nend\nfib(10)", "  a, b = 0, 1\n  for i in 1:n\n    a, b\
    \ = b, a + b\n  end\n  return a\nend\n```", "    if n == 1 || n == 2\n       \
    \ return 1\n    else\n        return fib(n-1) + fib(n-2)\n    end\nend", "   \
    \ if n < 2\n        return n\n    else\n        return fib(n-1) + fib(n-2)\n \
    \   end\nend", "    if n == 1\n        return 1\n    else\n        return fib(n-1)\
    \ + fib(n-2)\n    end\nend\nprintln(fib(10))\nprintln(fib(1))\nprintln(fib(8))",
  "    \n    if n == 1\n        return 1\n    elseif n == 2\n        return 1\n  \
    \  else\n        return fib(n-1) + fib(n-2)\n    end\nend", "    a, b = 0, 1\n\
    \    for i = 1:n\n        a, b = b, a + b\n    end\n    return a\nend", "    if\
    \ n <= 2\n        return 1\n    else\n        return fib(n-1) + fib(n-2)\n   \
    \ end\nend", "    if n==1 return 1\n    elseif n==2 return 1\n    else return\
    \ fib(n-1)+fib(n-2)\n    end\nend", "    if n < 2\n        1\n    else\n     \
    \   fib(n-1) + fib(n-2)\n    end\nend", "    if n <= 2\n        return 1\n   \
    \ else\n        x = fib(n-1)\n        y = fib(n-2)\n        return x + y\n   \
    \ end\nend\n@time fib(40)", "    if n < 2 \n        return n\n    else \n    \
    \    return fib(n-1) + fib(n-2)\n    end\nend", "    if n==1 \n        return\
    \ 1\n    elseif n==2\n        return 1\n    else\n        return fib(n-1)+fib(n-2)\n\
    \    end\nend", "    @assert n >= 0\n    if n == 0\n        return 0\n    elseif\
    \ n == 1\n        return 1\n    else\n        return fib(n-1) + fib(n-2)\n   \
    \ end\nend", "    if n == 1 || n == 2\n        1\n    else\n        fib(n-1) +\
    \ fib(n-2)\n    end\nend\n \n@time fib(20)\n@time fib(25)\n@time fib(30)\n@time\
    \ fib(35)\n@time fib(40)", "    if n <= 2\n        return 1\n    else\n      \
    \  a, b = 1, 1\n        for i = 3:n\n            a, b = b, a + b\n        end\n\
    \        return b\n    end\nend\n \nprintln(fib(10))\nprintln(fib(1))\nprintln(fib(8))",
  "    a, b = 0, 1\n    for i in 1:n\n        a, b = b, a + b\n    end\n    return\
    \ a\nend", "    a, b = 0, 1\n    for i in 1:n\n        a, b = b, a + b\n    end\n\
    \    return a\nend", "    a, b = 0, 1\n    for i in 1:n\n        a, b = b, a +\
    \ b\n    end\n    return a\nend", "    if n == 1\n        return 1\n    elseif\
    \ n == 2\n        return 1\n    else \n        return fib(n-1) + fib(n-2)\n  \
    \  end\nend", "    if n < 2\n        return n\n    else\n        return fib(n-1)\
    \ + fib(n-2)\n    end\nend", "    if n < 2\n        return n\n    else\n     \
    \   return fib(n-1) + fib(n-2)\n    end\nend", "    f = [0, 1]\n    while length(f)\
    \ < n\n        push!(f, f[end] + f[end-1])\n    end\n    return f[n]\nend", " \
    \   if n == 1 || n == 2\n        return 1\n    else\n        return fib(n-1) +\
    \ fib(n-2)\n    end\nend", "    fib1 = 1\n    fib2 = 1\n    for i = 1:n\n    \
    \    temp = fib1\n        fib1 = fib2\n        fib2 = temp + fib2\n    end\n \
    \   return fib1\nend", "    if n <= 1 \n        return n\n    else\n        return\
    \ fib(n-1) + fib(n-2)\n    end\nend", "  if n == 1\n    return 1\n  elseif n ==\
    \ 2\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", "    if\
    \ n == 1 || n == 2\n        return 1\n    else\n        return fib(n-1) + fib(n-2)\n\
    \    end\nend\n    \n    ", "    if n == 1 || n == 2\n        return 1\n    else\n\
    \        return fib(n-1) + fib(n-2)\n    end\nend", "    if n == 1\n        return\
    \ 1\n    elseif n == 2\n        return 1\n    else\n        return fib(n-1) +\
    \ fib(n-2)\n    end\nend", "    if n == 1\n        return 1\n    elseif n == 2\n\
    \        return 1\n    else \n        return fib(n-1) + fib(n-2)\n    end\nend",
  "    a, b = 0, 1\n    for i in 1:n\n        a, b = b, a + b\n    end\n    return\
    \ a\nend", "  if n < 2\n    return n\n  else\n    return fib(n-1) + fib(n-2)\n\
    \  end\nend", "    return fib(BigInt(n))\nend", "   n <= 1 && return n\n   a =\
    \ 0\n   b = 1\n   for i in 2:n\n      c = a + b\n      a = b\n      b = c\n  \
    \ end\n   return b\nend", "    if n < 3\n        return 1\n    else\n        return\
    \ fib(n-1) + fib(n-2)\n    end\nend", "    if n < 2\n        return n\n    else\n\
    \        return fib(n-1) + fib(n-2)\n    end\nend", "    if n <= 1\n        return\
    \ n\n    else\n        return fib(n-1) + fib(n-2)\n    end\nend", "    if n <=\
    \ 2\n        return 1\n    else\n        return fib(n-1) + fib(n-2)\n    end\n\
    end", "    if n < 2\n        1\n    else\n        fib(n-1) + fib(n-2)\n    end\n\
    end", "    if n == 1 || n == 2\n        return 1\n    else\n        return fib(n-1)\
    \ + fib(n-2)\n    end\nend", "    if n == 1\n        return 1\n    elseif n ==\
    \ 2\n        return 1\n    else\n        return fib(n-1) + fib(n-2)\n    end\n\
    end", "    a, b = 0, 1\n    for i in 1:n\n        a, b = b, a + b\n    end\n \
    \   return a\nend", "    if n == 1 || n == 2 \n        1\n    else \n        fib(n-1)\
    \ + fib(n-2)\n    end\nend", "    if n == 1 || n == 2\n        return 1\n    else\n\
    \        return fib(n-1) + fib(n-2)\n    end\nend", "   a, b = 0, 1\n   while\
    \ n > 0\n       a, b = b, a + b\n       n -= 1\n   end\n   return a\nend", " \
    \   if n == 1 || n == 2\n        return 1\n    else\n        return fib(n-1) +\
    \ fib(n-2)\n    end\nend", "    a, b = 0, 1\n    for i in 1:n\n        a, b =\
    \ b, a + b\n    end\n    return a\nend", "    curr, next = 0, 1\n    for i = 1:n\n\
    \        curr, next = next, curr + next\n    end\n    return curr\nend\n \n# Fibonacci\
    \ using recursion", "    a, b = 0, 1\n    for i in 1:n-1\n        a, b = b, a\
    \ + b\n    end\n    return b\nend", "    if n == 1 || n == 2\n        return 1\n\
    \    else\n        return fib(n-1) + fib(n-2)\n    end\nend", "    a::Int64 =\
    \ 0; b::Int64 = 1\n    for i::Int64 in 1:n-1\n        c::Int64 = a + b\n     \
    \   a::Int64 = b\n        b::Int64 = c\n    end\n    return b\nend", "    if n\
    \ == 1 || n == 2 \n        return 1\n    else \n        return fib(n-1) + fib(n-2)\n\
    \    end\nend", "    if n <= 1\n        return n\n    else\n        return fib(n-1)\
    \ + fib(n-2)\n    end\nend", "    if n==1\n        return 1\n    elseif n==2\n\
    \        return 1\n    else\n        return fib(n-1)+fib(n-2)\n    end\nend\n\
    fib(10)", "    if n < 2\n        return n\n    else\n        return fib(n-1) +\
    \ fib(n-2)\n    end\nend", "    if n == 1 || n == 2\n        return 1\n    else\n\
    \        return fib(n-1) + fib(n-2)\n    end\nend\n\"\"\"", "    if n < 2\n  \
    \      return n\n    else\n        return fib(n-1) + fib(n-2)\n    end\nend",
  "    if n < 2\n        return n\n    else\n        a, b = 0, 1\n        for i in\
    \ 1:n-1\n            a, b = b, a + b\n        end\n        return b\n    end\n\
    end", "    if n<=2\n        return 1\n    else\n        a=1\n        b=1\n   \
    \     for i in 1:n-2\n            c=a+b\n            a=b\n            b=c\n  \
    \      end\n        return b\n    end\nend", "    # Enforce Integer n\n    if\
    \ n <= 2\n        1\n    else\n        fib(n-1) + fib(n-2)\n    end\nend", " \
    \   a::Int64 = 0\n    b::Int64 = 1\n    for i in 1:n-1\n        a = a + b\n  \
    \      b = a - b\n    end\n    return a\nend\n@code_llvm fib(10)", "    if n ==\
    \ 1\n        return 1\n    elseif n == 2\n        return 1\n    else \n      \
    \  return fib(n-1) + fib(n-2)\n    end\nend", "    n < 3 && return 1\n    x, y\
    \ = (1, 1)\n    for i in 3:n\n        x, y = (y, x + y)\n    end\n    return y\n\
    end", "    fib_arr = [1, 1]\n    for i in 1:n-2\n        push!(fib_arr, fib_arr[end-1]\
    \ + fib_arr[end])\n    end\n    return fib_arr[end]\nend", "   if n < 2 \n   \
    \    return n \n   else \n       return fib(n-1) + fib(n-2) \n   end\nend\nprint(fib(10))",
  "    if n < 2\n        return n\n    else\n        return fib(n-1) + fib(n-2)\n\
    \    end\nend", "    if n == 1 || n == 2 \n        return 1\n    else \n     \
    \   return fib(n-1) + fib(n-2)\n    end\nend", "    if n == 1\n        return\
    \ 1\n    else\n        x1 = 1\n        x2 = 1\n        for i = 2:n-1\n       \
    \     temp = x1\n            x1 = x2\n            x2 = temp + x1\n        end\n\
    \        return x2\n    end\nend", "    if n<=1\n        return n\n    else\n\
    \        return fib(n-1)+fib(n-2)\n    end\nend", "    fib_array = Array{Int64}(undef,\
    \ n)\n    fib_array[1] = 1\n    fib_array[2] = 1\n    for i in 3:n\n        fib_array[i]\
    \ = fib_array[i-1] + fib_array[i-2]\n    end\n    return fib_array[n]\nend", " \
    \ a::Int64 = 0;\n  b::Int64 = 1;\n  for i = 1:n\n    a, b = b, a + b\n  end\n\
    \  return a\nend", "    x1::Int64 = 0\n    x2::Int64 = 1\n    for i::Int64 in\
    \ 1:n-1\n        x1, x2 = x2, x1 + x2\n    end\n    return x2\nend", "    if n<3\n\
    \        return 1\n    else\n        a,b = 1,1\n        for i in 1:n-2\n     \
    \       a,b = b,a+b\n        end\n        return b\n    end\nend", "   a, b =\
    \ 0, 1\n   for i in 1:n\n       a, b = b, a + b\n   end\n   return a\nend", " \
    \   if n == 1 \n        return 1\n    elseif n == 2\n        return 1\n    else\n\
    \        return fib(n-1) + fib(n-2)\n    end\nend", "    a::Int64, b::Int64 =\
    \ 1, 1\n    while n > 1\n        a, b = b, a + b\n        n -= 1\n    end\n  \
    \  return a\nend", "    if n == 1 || n == 2\n        return 1\n    else\n    \
    \    n_1 = 1\n        n_2 = 1\n        for i in 1:n-2\n            n_next = n_1\
    \ + n_2\n            n_1 = n_2\n            n_2 = n_next\n        end\n      \
    \  return n_2\n    end\nend", "    if n == 1 || n == 2\n        return 1\n   \
    \ else\n        return fib(n-1) + fib(n-2)\n    end\nend", "    if n==1\n    \
    \    1\n    elseif n==2\n        1\n    else\n        fib(n-1)+fib(n-2)\n    end\n\
    end", "    if n < 2\n        return n\n    else\n        return fib(n-1) + fib(n-2)\n\
    \    end\nend", "    if n == 1 || n == 2\n        return 1\n    else\n       \
    \ return fib(n-1) + fib(n-2)\n    end\nend\n ", "  if n == 1 || n == 2\n    return\
    \ 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", "    if n < 2\n    \
    \    return n\n    else\n        a, b = 0, 1\n        for i = 1:n-1\n        \
    \    a, b = b, a + b\n        end\n        return b\n    end\nend", "    if n==1\
    \ \n        return 1\n    elseif n==2\n        return 1\n    else\n        n_minus_one\
    \ = 1\n        n_minus_two = 1\n        for i in 3:n\n            n_minus_two,\
    \ n_minus_one = n_minus_one, n_minus_one + n_minus_two\n        end\n        return\
    \ n_minus_one\n    end\nend", "    if n < 2\n        return n\n    else\n    \
    \    return fib(n-1) + fib(n-2)\n    end\nend", "    if n<0\n        error(\"\
    negative number!\")\n    end\n    if n==0\n        return 0\n    elseif n==1\n\
    \        return 1\n    else\n        return fib(n-1)+fib(n-2)\n    end\nend",
  "    fibs = zeros(Int64, n+1)\n    fibs[1] = 1\n    for i in 2:n\n        fibs[i]\
    \ = fibs[i-1] + fibs[i-2]\n    end\n    return fibs[n]\nend", "    if n <= 2 \n\
    \        return 1\n    else \n        return fib(n-1) + fib(n-2)\n    end\nend",
  "    a::Int64 = 0\n    b::Int64 = 1\n    for i::Int64 in 1:n-1\n        c::Int64\
    \ = a + b\n        a = b\n        b = c\n    end\n    return b\nend", "    a =\
    \ 0\n    b = 1\n    for i = 1:n-1\n        b = a + b\n        a = b - a\n    end\n\
    \    return b\nend\n    ", "    if n==1 || n==2\n        return 1\n    else\n\
    \        return fib(n-1)+fib(n-2)\n    end\nend", "    if n <= 2\n        return\
    \ 1\n    else\n        return fib(n-1) + fib(n-2)\n    end\nend", "    if n<2\n\
    \        return n\n    else\n        return fib(n-1)+fib(n-2)\n    end\nend",
  "    if n < 2\n        return n\n    else\n        return fib(n-1) + fib(n-2)\n\
    \    end\nend", "    a, b = 0, 1\n    for i in 1:n-1\n        a, b = b, a + b\n\
    \    end\n    return b\nend", "    a::Int64 = 0\n    b::Int64 = 1\n    for i::Int64\
    \ in 1:n-1\n        # Calculate the next Fibonacci number\n        # in the sequence.\n\
    \        temp::Int64 = a\n        a = b\n        b = temp + b\n    end\n    return\
    \ b\nend\n \n ", "    if n < 2\n        return n\n    else\n        return fib(n-1)\
    \ + fib(n-2)\n    end\nend", "    a = 0\n    b = 1\n    for i = 1:n-1\n      \
    \  c = a + b\n        a = b\n        b = c\n    end\n    return b\nend", "   \
    \ if n <= 2\n        return 1\n    else\n        return fib(n-1) + fib(n-2)\n\
    \    end\nend", "    a = 0\n    b = 1\n    for i = 1:n-1\n        a, b = b, a\
    \ + b\n    end\n    return b\nend", "  if n == 1 || n == 2\n    return 1\n  else\n\
    \    return fib(n-1) + fib(n-2)\n  end\nend", "    if n == 1 || n == 2 \n    \
    \    return 1\n    else \n        return fib(n-1) + fib(n-2)\n    end\nend", " \
    \   if n == 1\n        1\n    elseif n == 2\n        1\n    else \n        fib(n-1)\
    \ + fib(n-2)\n    end\nend", "    if n == 1 || n == 2\n        return 1\n    else\n\
    \        return fib(n-1) + fib(n-2)\n    end\nend\n \n \n \nif __name__ == \"\
    __main__\"\n    n = Int64(readline())\n    for i in 1:n\n        m = Int64(readline())\n\
    \        println(fib(m))\n    end\nend", "    if n==1 \n        return 1\n   \
    \ elseif n==2\n        return 1\n    else\n        return fib(n-1)+fib(n-2)\n\
    \    end\nend", "    if n < 2\n        return n\n    else\n        return fib(n-1)\
    \ + fib(n-2)\n    end\nend\n@code_native fib(100)\n \n# It would be better to\
    \ use an iterative procedure, \n# which is much more efficient.", "    a, b =\
    \ 0, 1\n    for i in 1:n-1\n        a, b = b, a + b\n    end\n    return b\nend",
  "    if n < 2\n        return n\n    else\n        return fib(n-1) + fib(n-2)\n\
    \    end\nend", "    a = 1\n    b = 1\n    if n==1\n        return a\n    elseif\
    \ n==2\n        return b\n    else\n        for i in 3:n\n            a,b = b,\
    \ a+b\n        end\n        return b\n    end\nend", "    n < 3 ? n : fib(n-1)\
    \ + fib(n-2)\nend", "    a = 1\n    b = 1\n    for i in 1:n\n        a, b = b,\
    \ a + b\n    end\n    return a\nend", "    if n < 2\n        return n\n    else\n\
    \        return fib(n-1) + fib(n-2)\n    end\nend", "    if n <= 2 \n        return\
    \ 1\n    else \n        return fib(n-1) + fib(n-2)\n    end\nend", "    # check\
    \ if n is a valid positive integer\n    if n < 1\n        error(\"Not a valid\
    \ positive integer!\")\n    end\n    if n == 1 || n == 2\n        return 1\n \
    \   else\n        return fib(n-1) + fib(n-2)\n    end\nend", "    if n == 1 ||\
    \ n == 2 \n        return 1\n    else \n        return fib(n-1) + fib(n-2)\n \
    \   end\nend", "    if n == 1\n        return 1\n    elseif n == 2\n        return\
    \ 1\n    else \n        return fib(n-1) + fib(n-2)\n    end\nend", "    a, b =\
    \ 0, 1\n    for i in 1:n\n        a, b = b, a + b\n    end\n    return a\nend",
  "    if n == 1\n        return 1\n    elseif n == 2\n        return 1\n    else\n\
    \        return fib(n-1) + fib(n-2)\n    end\nend", "   a, b = 0, 1\n   for i\
    \ in 1:n-1\n       a, b = b, a + b\n   end\n   b\nend", "    if n == 1\n     \
    \   return 1\n    elseif n == 2\n        return 1\n    else\n        return fib(n-1)\
    \ + fib(n-2)\n    end\nend", "    a, b = 0, 1\n    for i in 1:n\n        a, b\
    \ = b, a + b\n    end\n    return a\nend\nfib(10)", "    a, b = 0, 1\n    for\
    \ i in 1:n-1\n        a, b = b, a + b\n    end\n    return b\nend", "    @assert\
    \ n >= 0\n    if n < 2\n        return n\n    else\n        return fib(n-1) +\
    \ fib(n-2)\n    end\nend", "    if n == 1 || n == 2\n        return 1\n    else\n\
    \        return fib(n-1) + fib(n-2)\n    end\nend", "    if n<=1 \n        return\
    \ n\n    else\n        return fib(n-1)+fib(n-2)\n    end\nend", "    if n < 0\n\
    \        throw(ErrorException(\"Invalid input.\"))\n    end\n    if n == 0\n \
    \       return 0\n    elseif n == 1\n        return 1\n    else\n        return\
    \ fib(n-1) + fib(n-2)\n    end\nend", "    \n    if n < 2\n        return n\n\
    \    else\n        return fib(n-1) + fib(n-2)\n    end\nend", "    if n < 2\n\
    \        return n\n    else\n        return fib(n-1) + fib(n-2)\n    end\nend\n\
    @time fib(45)", "    if n < 2\n        return n\n    else\n        return fib(n-1)\
    \ + fib(n-2)\n    end\nend", "    return n < 2 ? n : fib(n-1) + fib(n-2)\nend",
  "     if n < 0\n        error(\"n must be a non-negative integer\")\n    end\n \
    \   if n == 0\n        return 0\n    elseif n == 1\n        return 1\n    else\n\
    \        return fib(n-1) + fib(n-2)\n    end\nend\n\"\"\"", "    if n < 3\n  \
    \      return 1\n    else\n        a = 1\n        b = 1\n        for i = 3:n\n\
    \            c = a + b\n            a = b\n            b = c\n        end\n  \
    \      return b\n    end\nend", "    n < 3 && return 1\n    n1, n2 = 1, 1\n  \
    \  for i = 3:n\n        n1, n2 = n2, n1 + n2\n    end\n    return n2\nend", " \
    \   if n==1 || n==2\n        return 1\n    else\n        return fib(n-1)+fib(n-2)\n\
    \    end\nend", "    if n == 1\n        return 1\n    elseif n == 2\n        return\
    \ 1\n    else\n        return fib(n-1) + fib(n-2)\n    end\nend\n@benchmark fib(10)",
  "    if n==1\n        return 1\n    elseif n==2\n        return 1\n    else\n  \
    \      return fib(n-1)+fib(n-2)\n    end\nend\nfib(10)", "    if n < 2 \n    \
    \    return n\n    else \n        return fib(n-1) + fib(n-2)\n    end\nend", " \
    \   if n == 1 || n == 2\n        return 1\n    else\n        return fib(n-1) +\
    \ fib(n-2)\n    end\nend", "    if n < 2\n        return n\n    else\n       \
    \ return fib(n-1) + fib(n-2)\n    end\nend", "    if n == 1 \n        return 1\n\
    \    elseif n == 2\n        return 1\n    else \n        return fib(n-1) + fib(n-2)\n\
    \    end\nend", "    if n == 1 \n        return 1\n    elseif n == 2\n       \
    \ return 1\n    else\n        return fib(n-1) + fib(n-2)\n    end\nend\nprintln(fib(10))\n\
    println(fib(8))\nprintln(fib(1))", "    if n == 1\n        return 1\n    elseif\
    \ n == 2\n        return 1\n    else\n        return fib(n-1) + fib(n-2)\n   \
    \ end\nend\n \n ", "    return n < 2 ? n : fib(n-1) + fib(n-2)\nend", "    if\
    \ n == 1 || n == 2\n        return 1\n    else\n        return fib(n-1) + fib(n-2)\n\
    \    end\nend", "    if n==1 return 1\n    if n==2 return 1\n    return fib(n-1)+fib(n-2)\n\
    end", "    a, b = 0, 1\n    for i in 1:n\n        a, b = b, a + b\n    end\n \
    \   return a\nend\n#=\nfib(n::Int64) = @memoize fib_naive(n)\n@time fib(20)\n\
    =#\n#=\nit = iterate(fib, 0)\n[next(it) for i in 1:20]\n=#", "    if n < 0\n \
    \       error(\"n should be non-negative\")\n    end\n    a, b = 0, 1\n    for\
    \ i in 1:n\n        a, b = b, a + b\n    end\n    return a\nend", "    if n <\
    \ 3 \n        return 1\n    else \n        return fib(n-1) + fib(n-2)\n    end\n\
    end ", "   if n < 2\n        return n\n    else\n        return fib(n-1) + fib(n-2)\n\
    \    end\nend", "     a, b = 0, 1\n     for i = 1:n\n         a, b = b, a + b\n\
    \     end\n     return a\nend", "    if n == 1 || n == 2\n        return 1\n \
    \   else\n        return fib(n-1) + fib(n-2)\n    end\nend", "    n1, n2 = 0,\
    \ 1\n    for i in 1:n\n        n1, n2 = n2, n1 + n2\n    end\n    return n1\n\
    end", "    if n == 1\n        return 1\n    elseif n == 2\n        return 1\n\
    \    else\n        return fib(n-1) + fib(n-2)\n    end\nend", "    a, b = 0, 1\n\
    \    for i in 1:n\n        a, b = b, a + b\n    end\n    return a\nend", "   \
    \ if n<=2\n        return 1\n    else\n        return fib(n-1)+fib(n-2)\n    end\n\
    end", "    if n==1 || n==2\n        return 1\n    else\n        return fib(n-1)+fib(n-2)\n\
    \    end\nend", "    if n==1\n        return 1\n    elseif n==2\n        return\
    \ 1\n    else\n        return fib(n-1)+fib(n-2)\n    end\nend", "    if n == 1\
    \ || n == 2\n        return 1\n    else\n        return fib(n-1) + fib(n-2)\n\
    \    end\nend", "    x, y = 0, 1\n    while n > 0\n        x, y = y, x + y\n \
    \       n -= 1\n    end\n    return x\nend", "    a, b = 0, 1\n    for i in 1:n\n\
    \        a, b = b, a + b\n    end\n    return a\nend", "    if n <= 2\n      \
    \  return 1\n    else\n        return fib(n-1) + fib(n-2)\n    end\nend", "  \
    \  a::Int64 = 0\n    b::Int64 = 1\n    for i in 1:n\n        c::Int64 = a + b\n\
    \        a = b\n        b = c\n    end\n    return a\nend", "    if n == 1\n \
    \       return 1\n    elseif n == 2\n        return 1\n    else\n        a = 1\n\
    \        b = 1\n        for i in 3:n\n            temp = a\n            a = b\n\
    \            b = a + temp\n        end\n        return b\n    end\nend", "   \
    \ if n == 1 || n == 2\n        return 1\n    else\n        return fib(n-1) + fib(n-2)\n\
    \    end\nend", "    if n <= 2\n        return 1\n    else\n        return fib(n-1)\
    \ + fib(n-2)\n    end\nend\n@code_native fib(10)", "    if n == 1\n        return\
    \ 1\n    elseif n == 2\n        return 1\n    else\n        return fib(n-1) +\
    \ fib(n-2)\n    end\nend", "    if n == 1\n        return 1\n    elseif n == 2\n\
    \        return 1\n    else\n        return fib(n-1) + fib(n-2)\n    end\nend",
  "    if n < 2\n        return n\n    else\n        return fib(n-1) + fib(n-2)\n\
    \    end\nend", "    a, b = 0, 1\n    for i in 1:n\n        a, b = b, a + b\n\
    \    end\n    return a\nend", "    if n <= 1 \n        return n\n    else\n  \
    \      return fib(n-1) + fib(n-2)\n    end\nend", "    a, b = 0, 1\n    for i\
    \ in 1:n\n        a, b = b, a + b\n    end\n    return a\nend", "    if n == 1\
    \ || n == 2\n        return 1\n    else\n        return fib(n-1) + fib(n-2)\n\
    \    end\nend", "    n < 3 && return 1 \n    a, b = 1, 1 \n    for i in 2:n-1\
    \ \n        a, b = b, a + b \n    end \n    return b \nend", "    if n < 2\n \
    \       return n\n    else\n        a, b = 0, 1\n        for i in 1:n-1\n    \
    \        a, b = b, a + b\n        end\n        return b\n    end\nend", "    a\
    \ = 1\n    b = 1\n    for i in 2:n-1\n        a, b = b, a+b\n    end\n    return\
    \ b\nend", "    \n    if n <= 2\n        return 1\n    else\n        return fib(n-1)\
    \ + fib(n-2)\n    end\nend", "    prev = 0\n    curr = 1\n    for i in 1:n-1\n\
    \        aux = curr\n        curr = prev + curr\n        prev = aux\n    end\n\
    \    return curr\nend", "    if n == 1 \n        return 1\n    elseif n == 2\n\
    \        return 1\n    else \n        return fib(n-1) + fib(n-2)\n    end\nend",
  "    a = 0\n    b = 1\n    for i in 1:n\n        a, b = b, a + b\n    end\n    return\
    \ a\nend", "    if n == 1\n        fib_n = 1\n    elseif n == 2\n        fib_n\
    \ = 1\n    else\n        fib_n = fib(n-1) + fib(n-2)\n    end\n    return fib_n\n\
    end", "    if n <= 1\n        return n\n    else\n        return fib(n-1) + fib(n-2)\n\
    \    end\nend", "    if n == 1 || n == 2\n        return 1\n    else\n       \
    \ return fib(n-1) + fib(n-2)\n    end\nend", "    if n == 1\n        return 1\n\
    \    elseif n == 2\n        return 1\n    else\n        return fib(n-1) + fib(n-2)\n\
    \    end\nend", "    a, b = 0, 1\n    for i in 1:n\n        a, b = b, a + b\n\
    \    end\n    return a\nend", "    a, b = 0, 1\n    for i in 1:n-1\n        a,\
    \ b = b, a + b\n    end\n    return b\nend", "  \n  if n <= 0 \n    return n\n\
    \  end\n    \n  f = zeros(Int64, n)\n  f[1] = 1\n  f[2] = 1\n  \n  for i in 3:n\n\
    \    f[i] = f[i-1] + f[i-2]\n  end\n    \n  return f[n]\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

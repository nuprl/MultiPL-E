name: HumanEval_146_specialFilter
language: jl
prompt: "\"\"\"Write a function that takes an array of numbers as input and returns\
  \ \n    the number of elements in the array that are greater than 10 and both \n\
  \    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
  \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
  \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
  \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
  \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
  \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
  \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
completions: ["    return sum([(n > 10) && isodd(first(n)) && isodd(last(n)) for n\
    \ in nums])\nend", "    counter = 0\n    for num in nums\n        last_digit =\
    \ mod(num, 10)\n        first_digit = trunc(num / 10)\n        while num > 9\n\
    \            num = trunc(num / 10)\n            first_digit = num\n        end\n\
    \        if num > 10 && last_digit % 2 != 0 && first_digit % 2 != 0\n        \
    \    counter += 1\n        end\n    end\n    return counter\nend", "    idx =\
    \ filter(x -> x > 10 && x % 2 != 0 && x % 10 != 0, nums)\n    length(idx)\nend",
  "    # Write your code here\n    return 0\nend", "    count = 0\n    for i in nums\n\
    \        if (i > 10) && (i % 2 != 0) && ((i % 10) % 2 != 0) && (i % 10 != 1)\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    #\
    \ YOUR CODE HERE\nend", "    count = 0 \n    for num in nums \n        if num\
    \ > 10 && num % 2 != 0 && num < -10 \n            count += 1 \n        end \n\
    \    end \n    return count \nend ", "    out = 0\n    for i in nums\n       \
    \ if isodd(firstdig(i)) && isodd(lastdig(i)) && i > 10\n            out += 1\n\
    \        end\n    end\n    return out\nend", "    ## write your code here\n  \
    \  count = 0\n    for num in nums\n        if num > 10 && num % 2 != 0 && num\
    \ % 10 != 0\n            count += 1\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && Int(string(i)[1])\
    \ % 2 != 0 && Int(string(i)[end]) % 2 != 0\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    total = 0\n    for num in nums\n      \
    \  if !(num > 10) continue end\n        if !(first(num) % 2 == 1) continue end\n\
    \        if !(last(num) % 2 == 1) continue end\n        total += 1\n    end\n\
    \    return total\nend", "    # Write your code here and replace the return value\
    \ by correct one\n    \nend", "    # The number of special numbers\n    count\
    \ = 0\n    for num in nums\n        # If the number is less than 10 skip it \n\
    \        if num > 10\n            # Get the first and last digits and check if\
    \ they are odd\n            first_digit = num % 10\n            last_digit = num\n\
    \            while last_digit > 10\n                last_digit = last_digit %\
    \ 10\n            end\n            if first_digit % 2 != 0 && last_digit % 2 !=\
    \ 0\n                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend", "    all((n -> (n > 10) & (first(n) % 2 != 0) & (last(n) % 2 !=\
    \ 0), nums))\nend", " \n    i = 0\n    for num in nums\n        if num > 10 &&\
    \ begin(div(num, 10)) % 2 != 0 && end(div(num, 10)) % 2 != 0\n            i =\
    \ i + 1\n        end\n    end", "    filter(x -> x>10 && firstdig(x)%2 != 0 &&\
    \ lastdig(x)%2 != 0, nums)\nend", "    count = 0 \n    for num in nums \n    \
    \    if num > 10 && special(num)\n            count += 1 \n        end \n    end\
    \ \n    return count \nend ", "    count = 0\n    for n in nums\n        if (n\
    \ >= 10) && isodd(firstdigit(n)) && isodd(lastdigit(n))\n            count +=\
    \ 1\n        end\n    end\n    return count\nend", "    counter = 0 \n    for\
    \ n in nums \n        if n > 10 && n % 2 != 0 && mod(n, 10) % 2 != 0 && (n % 10)\
    \ % 2 != 0 \n            counter += 1 \n        end \n    end \n    return counter\
    \ \nend ", "    return sum(map(\n        (x) -> x > 10 && mod(firstdigit(x), 2)\
    \ == 1 && mod(lastdigit(x), 2) == 1,\n        nums))\nend", "    specialFilter\
    \ = 0\n    for i = 1:length(nums)\n        if (nums[i] > 10) && (nums[i] % 2 !=\
    \ 0) && (nums[1] % 2 != 0) && (nums[length(nums)] % 2 != 0)\n            specialFilter\
    \ += 1\n        end\n    end\n    return specialFilter\nend", "  #Write your code\
    \ here\nend", "    l = length(nums)\n    count = 0\n    for i = 1:l\n        n\
    \ = nums[i]\n        if n > 10\n            first_digit = div(n, 10)\n       \
    \     last_digit = rem(n, 10)\n            if first_digit % 2 != 0 && last_digit\
    \ % 2 != 0\n                count += 1\n            end\n        end\n    end\n\
    \    return count\nend", "    count = 0\n    for num in nums\n        if (num\
    \ % 2 != 0) && (num > 10) && (num % 10 % 2 != 0) && (num % 10 != num)\n      \
    \      count += 1\n        end\n    end\n    return count\nend", "    count =\
    \ 0\n    for x in nums\n        if x>10\n            if x%2 != 0\n           \
    \     if abs(x)%10 != 0\n                    count += 1\n                end\n\
    \            end\n        end\n    end\n    return count\nend", "    count = 0\n\
    \    for num in nums\n        if num > 10 && mod(first(digits(num)), 2) == 1 &&\
    \ mod(last(digits(num)), 2) == 1\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    # write your code here\n    return 0\nend\n \nspecialFilter([15,\
    \ -73, 14, -15])\nspecialFilter([33, -2, -3, 45, 21, 109])\nspecialFilter([-21,\
    \ -12, 12, 15, -18, -21, 31, 6, -15, -9, 24, -6, -1, 15, -6, -2, -24, -5, -18,\
    \ -7, -9, 15, -23, -21, -13, -15, -20, -24, -22, -8, -1, 17, -15, -7, -10, -14,\
    \ -19, -1, -11, -22, -8, -17, -9, -14, -16, -13, -22, -20, -17, -15, -16, -19,\
    \ -7, -18, -14, -21, -11, -18, -10, -16, -17, -8, -19, -12, -16, -18, -21, -14,\
    \ -23, -20, -21, -16, -17, -14, -9, -10, -5, -8, -13, -11, -4, -18, -11, -22,\
    \ -7, -10, -23, -15, -21, -6, -10, -24, -7, -10, -1, -24, -14, -9, -18, -11, -13,\
    \ -24, -13, -12, -7, -19, -17, -15, -16, -14, -21, -12, -23, -20, -23, -16, -17,\
    \ -12, -9, -1, -13, -8, -18, -12, -11, -6, -15, -24, -7, -6, -10, -1, -21, -14,\
    \ -18, -16, -22, -8, -10, -9, -23, -7, -23, -19, -14, -12, -14, -18, -8, -5, -19,\
    \ -13, -16, -13, -24, -10, -", "    nums = \n    nums[filter(x -> x>10 && (x%10\
    \ != 0 && x%10 != 2 && x%10 != 4 && x%10 != 6 && x%10 != 8),nums)]\n    return\
    \ nums\nend", "    result = 0 \n    for n in nums \n        if n > 10 && n % 2\
    \ != 0 && n % 10 != 0 \n            result += 1 \n        end \n    end \n   \
    \ return result \nend ", "    # Your code here\n    ctr = 0\n    for n in nums\n\
    \        if n > 10 && isodd(first(digits(n))) && isodd(last(digits(n)))\n    \
    \        ctr += 1\n        end\n    end\n    return ctr\nend", "    n = length(nums)\n\
    \    cnt = 0\n    for i in 1:n\n        if (nums[i] > 10) && (nums[i] % 2 != 0)\n\
    \            d1 = mod(nums[i], 10)\n            d2 = mod(nums[i], 100)\n     \
    \       if d1 == 1 || d1 == 3 || d1 == 5 || d1 == 7 || d1 == 9\n             \
    \   if d2 == 11 || d2 == 13 || d2 == 15 || d2 == 17 || d2 == 19 || d2 == 31 ||\
    \ d2 == 33 || d2 == 35 || d2 == 37 || d2 == 39 || d2 == 51 || d2 == 53 || d2 ==\
    \ 55 || d2 == 57 || d2 == 59 || d2 == 71 || d2 == 73 || d2 == 75 || d2 == 77 ||\
    \ d2 == 79 || d2 == 91 || d2 == 93 || d2 == 95 || d2 == 97 || d2 == 99\n     \
    \               cnt += 1\n                end\n            end\n        end\n\
    \    end\n    return cnt\nend", "    f(x) = floor(Int64, log10(x))\n    l(x) =\
    \ x % 10\n    p(x) = f(x) % 2 == 1 && l(x) % 2 == 1\n    return count(nums) do\
    \ x\n        p(x) && x > 10\n    end\nend", "    len = length(nums)\n    function\
    \ isSpecial(num)::Bool\n        numStr = string(num)\n        (num > 10) && (num\
    \ % 2 != 0) && (parse(Int64, numStr[1]) % 2 != 0) && (parse(Int64, numStr[end])\
    \ % 2 != 0)\n    end\n    count = 0\n    for i in 1:len\n        if isSpecial(nums[i])\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    cnt\
    \ = 0\n    for i in nums\n        if i > 10 && isodd(i) && isodd(i % 10)\n   \
    \         cnt += 1\n        end\n    end\n    return cnt\nend", "    return sum(x->x>10\
    \ && ((x % 10) % 2 != 0) && (x \xF7 10 % 2 != 0), nums)\nend", "    count = 0\n\
    \    for i = 1:length(nums)\n        if nums[i] > 10 && !iseven(nums[i] % 10)\
    \ && !iseven(div(nums[i], 10))\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    # your code here\nend", "    # your code goes here\n\
    \    nums = [n for n in nums if n > 10]\n    count = 0\n    for n in nums\n  \
    \      if (n%10 != 0) && (n % 2 != 0)\n            n = n//10\n            while\
    \ n > 9\n                n = n//10\n            end\n            if n % 2 != 0\n\
    \                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend", "    # your code here\n    count = 0\n    n = length(nums)\n  \
    \  #println(n)\n    for i in 1:n\n        if nums[i] > 10\n            first =\
    \ abs(nums[i])%10\n            while abs(nums[i]) >= 10\n                nums[i]\
    \ = nums[i]/10\n            end\n            last = nums[i]\n            #println(first,\
    \ last)\n            if (first == 1 || first == 3 || first == 5 || first == 7\
    \ || first == 9) && (last == 1 || last == 3 || last == 5 || last == 7 || last\
    \ == 9)\n                count += 1\n            end\n        end\n    end\n \
    \   return count\nend", "    # YOUR CODE HERE\nend", "    total = 0\n    for i\
    \ in nums\n        if i>10\n            if mod(abs(i),10) in [1,3,5,7,9]\n   \
    \             total += 1\n            end\n        end\n    end\n    return total\n\
    end", "    count = 0\n    for i in nums\n        if (10 < i) && (odd(i % 10))\
    \ && (odd(i))\n            count += 1\n        end\n    end\n    return count\n\
    end", "    cnt = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i\
    \ % 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            if (i <\
    \ 100 && i > 9) || (i < 1000 && i > 99) || (i < 10000 && i > 999) || (i < 100000\
    \ && i > 9999)\n                last_digit = i % 10\n                if last_digit\
    \ == 1 || last_digit == 3 || last_digit == 5 || last_digit == 7 || last_digit\
    \ == 9\n                    cnt += 1\n                end\n            end\n \
    \       end\n    end\n    return cnt\nend", "    return length(filter(x -> isodd(firstdig(x))\
    \ && isodd(lastdig(x)) && x > 10, nums))\nend", "    count = 0\n    for num in\
    \ nums\n        if num > 10 && abs(floor(num/10))%2 != 0 && abs(mod(num,10))%2\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    specialFilter([15, -73, 14, -15])\nspecialFilter([33, -2, -3, 45, 21, 109])\n\
    specialFilter([45, -22, 5, 71, -1, -3])", "    tot = 0\n    for n in nums\n  \
    \      if n > 10\n            val = num2str(n)\n            if (int(val[1]) %\
    \ 2 == 1) && (int(val[end]) % 2 == 1)\n                tot += 1\n            end\n\
    \        end\n    end\n    return tot\nend", "   \n    greater10 = 0\n    for\
    \ i in nums\n        if i > 10\n            greater10 += 1\n        end\n    end",
  "    count = 0\n    for num in nums\n        flag1 = num > 10\n        flag2 = isodd(num\
    \ % 10)\n        flag3 = isodd(num % 10^(floor(log10(num)) + 1))\n        if flag1\
    \ && flag2 && flag3\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    cnt = 0\n    for i in nums\n        if i > 10 && mod(i,2)\
    \ != 0 && mod(i,10) % 2 != 0\n            cnt += 1\n        end\n    end\n   \
    \ return cnt\nend", "    n = 0\n    for i in nums\n        if i > 10 && (i % 10\
    \ + i % 10) % 2 != 0\n            n += 1\n        end\n    end\n    return n\n\
    end", "    count = 0\n    for num in nums\n        if num > 10\n            firstDigit\
    \ = num % 10\n            lastDigit = num // 10^(floor(log10(num)))\n        \
    \    if lastDigit % 2 != 0 && firstDigit % 2 != 0\n                count += 1\n\
    \            end\n        end\n    end\n    return count\nend\nprintln(specialFilter([15,\
    \ -73, 14, -15]))\nprintln(specialFilter([33, -2, -3, 45, 21, 109]))", "    \n\
    end", "  n = 0 \n  for num in nums \n    if num > 10 && isodd(num % 10) && isodd(num\
    \ % div(num, 10))\n      n += 1 \n    end \n  end \n  return n \nend ", "    count\
    \ = 0\n    for i = 1:length(nums)\n        if (nums[i] > 10) && (nums[i] % 2 !=\
    \ 0)\n            nums_copy = nums[i]\n            while (nums_copy > 0)\n   \
    \             nums_copy = nums_copy / 10\n                if nums_copy % 2 ==\
    \ 0\n                    break\n                end\n            end\n       \
    \     if nums_copy == 0\n                count += 1\n            end\n       \
    \ end\n    end\n    return count\nend", "    # Write your code here\n    return\
    \ 0\nend\n ", "    count = 0\n    for i in nums\n        if i > 10 && isodd(first(i))\
    \ && isodd(last(i))\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    \"\"\"\n    \"\"\"\n    counter = 0\n    for i in nums\n \
    \       # first digit\n        if i >= 0 \n            firstDigit = first_digit(i)\n\
    \        else\n            firstDigit = first_digit(-i)\n        end\n       \
    \ # last digit\n        lastDigit = last_digit(i)\n        # check if there are\
    \ more then 10 elements in the array\n        if i > 10\n            # and if\
    \ both first and last digits are odd\n            if firstDigit % 2 != 0 && lastDigit\
    \ % 2 != 0\n                counter += 1\n            end\n        end\n    end\n\
    \    return counter\nend", "    total = 0\n    for i in nums\n        if i > 10\n\
    \            if (Int(string(i)[1]) % 2 == 1) && (Int(string(i)[end]) % 2 == 1)\n\
    \                total += 1\n            end\n        end\n    end\n    return\
    \ total\nend", "    result = 0\n    for num in nums\n        if num > 10 && !(num\
    \ % 2 == 0) && is_odd(num) && is_odd(num % 10)\n            result += 1\n    \
    \    end\n    end\n    return result\nend", "    # add your code here\nend", " \
    \   \n    len = length(nums)\n    ctr = 0\n    \n    for i in 1:len\n        num\
    \ = nums[i]\n        if num > 10\n            string(num)\n            if (num[1]\
    \ % 2 != 0) & (num[end] % 2 != 0)\n                ctr += 1\n            end\n\
    \        end\n    end\n    \n    return ctr\nend", " \n    return sum(map(n ->\
    \ (n > 10) && (firstdig(n) % 2 != 0) && (lastdig(n) % 2 != 0), nums))\nend", " \
    \   count = 0\n    for num in nums\n        if num > 10 && (num % 10 == 1 || num\
    \ % 10 == 3 || num % 10 == 5 || num % 10 == 7 || num % 10 == 9) && (num % 10 ==\
    \ div(num, 10))\n            count += 1\n        end\n    end\n    return count\n\
    end", "    # Your code here\nend\n ", "    count = 0\n    for n in nums\n    \
    \    if n > 10 && isodd(firstdig(n)) && isodd(lastdig(n))\n            count +=\
    \ 1\n        end\n    end\n    return count\nend", "    count = 0\n    for i in\
    \ nums\n        if (((last(digits(i)) % 2 != 0) && ((first(digits(i)) % 2 != 0)))\
    \ && (i > 10))\n            count += 1\n        end\n    end\n    return count\n\
    end", "    count = 0 \n    for i in nums \n        if abs(i) > 10 && isodd(abs(i)\
    \ % 10) && isodd(abs(i) / 10^(floor(log10(abs(i)))))\n            count += 1 \n\
    \        end \n    end \n    return count \nend \n \n \n\"\"\"Write a function\
    \ that takes an array of strings as input and returns the \n    string that is\
    \ the most commonly used word in the array. You can assume \n    that all input\
    \ strings are lowercased.\n    For example:\n    most_common_word([\"i\", \"love\"\
    , \"you\", \"i\", \"love\", \"you\", \"you\", \"me\"]) \n    => \"you\"\n    most_common_word([\"\
    a\", \"b\", \"c\", \"a\", \"a\", \"b\", \"d\"]) => \"a\"\n    \"\"\"", "    count::Int64\
    \ = 0\n    for num in nums\n        if (num > 10) & isodd(num) & isodd(first(div(num,\
    \ 10))) & isodd(last(div(num, 10)))\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "    nums = Vector{Int64}()\n    for i in nums\n\
    \        if i > 10 && first(i)%2 != 0 && last(i)%2 != 0\n            push!(nums,\
    \ i)\n        end\n    end\n    return length(nums)\nend", "    count = 0\n  \
    \  for num in nums\n        if num > 10 && (rem(num, 10) != 0) && (num[1] % 2\
    \ != 0)\n            count += 1\n        end\n    end\n    return count\nend",
  "    # YOUR CODE HERE\nend", "    size(filter(n -> n > 10 && (n % 10 == 1 || n %\
    \ 10 == 3 || n % 10 == 5 || n % 10 == 7 || n % 10 == 9), nums), 1)\nend", "  \
    \  return length(filter(x -> (x>10) && (first(digits(x))%2 != 0) && (last(digits(x))%2\
    \ != 0), nums))\nend", "    return length(filter(n -> (n > 10) && (n % 2 == 1)\
    \ && ((n % 10 == 1) || (n % 10 == 3) || (n % 10 == 5) || (n % 10 == 7) || (n %\
    \ 10 == 9)), nums))\nend", "    i=0\n    n=length(nums)\n    while n > 0\n   \
    \     if nums[n]>10\n            x=Int(string(abs(nums[n]))[1])\n            y=Int(string(abs(nums[n]))[end])\n\
    \            if x % 2 != 0 && y % 2 != 0\n                i += 1\n           \
    \ end\n        end\n        n -= 1\n    end\n    return i\nend\n \nspecialFilter([15,\
    \ -73, 14, -15])\nspecialFilter([33, -2, -3, 45, 21, 109])", "    length(filter(n->length(nums)>10\
    \ && n%2==1 && n%10==1, nums))\nend", "    # YOUR CODE HERE\nend\n \n@testset\
    \ \"Test for specialFilter\" begin\n    @test specialFilter([15, -73, 14, -15])\
    \ == 1\n    @test specialFilter([33, -2, -3, 45, 21, 109]) == 2\n    @test specialFilter([])\
    \ == 0\n    @test specialFilter([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,", "    greater10(num::Int64)\
    \ = num > 10 \n    bothOdd(num::Int64) = (num % 10 == 1 || num % 10 == 3 || num\
    \ % 10 == 5 || num % 10 == 7 || num % 10 == 9) && (num % div(num, 10) == 1 ||\
    \ num % div(num, 10) == 3 || num % div(num, 10) == 5 || num % div(num, 10) ==\
    \ 7 || num % div(num, 10) == 9)\n    num_elements = 0\n    for num in nums\n \
    \       if greater10(num) && bothOdd(num)\n            num_elements += 1\n   \
    \     end\n    end\n    return num_elements\nend", "    ## Enter your function\
    \ here\nend", "    c = 0\n    for i in nums\n        if i > 10 && isodd(first(digits(i)))\
    \ && isodd(last(digits(i)))\n            c += 1\n        end\n    end\n    return\
    \ c\nend\nspecialFilter([15, -73, 14, -15])\nspecialFilter([33, -2, -3, 45, 21,\
    \ 109])", "    count = 0\n    for n in nums\n        r = abs(n)\n        if r\
    \ > 10 && (r % 10 % 2 != 0) && (r < 10 || (r >= 10 && (r / 10) % 2 != 0))\n  \
    \          count += 1\n        end\n    end\n    return count\nend", "    # Your\
    \ code goes here \n    return 0 \nend\nassert(specialFilter([15, -73, 14, -15])\
    \ == 1)\nassert(specialFilter([33, -2, -3, 45, 21, 109]) == 2)\nprintln(\"Passed\
    \ all tests!\")\n \n```", "    count = 0\n    for i in nums\n        if i > 10\
    \ && isodd(i % 10) && isodd(i \xF7 10^(floor(log10(i))))\n            count +=\
    \ 1\n        end\n    end\n    return count\nend", "    count = 0\n    for i in\
    \ nums\n        if (10 < i) && (i % 2 != 0) && (i % 10 != 0)\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    total = 0\n    for\
    \ num in nums\n        if num > 10 && mod(num,2) == 1 && mod(num,10) == 1\n  \
    \          total += 1\n        end\n    end\n    return total\nend", "    # Your\
    \ code goes here\n    count = 0\n    for n in nums\n        first_digit = n %\
    \ 10\n        while n >= 10\n            n = n % 10\n        end\n        if n\
    \ >= 10 && n % 2 != 0 && first_digit % 2 != 0\n            count += 1\n      \
    \  end\n    end\n    return count\nend", "    count = 0\n    for n in nums\n \
    \       if n > 10 && (n % 10) % 2 != 0 && (n % 10^floor(log10(n))) % 2 != 0\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for i in nums\n        if i > 10 && isodd(first(i)) && isodd(last(i))\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10 != 0\n   \
    \         count += 1\n        end\n    end\n    return count\nend\n@assert specialFilter([15,\
    \ -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n\
    @assert specialFilter([1, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]) == 0", " \
    \   n = 0\n    for i in nums\n        if (i > 10) && (last(digits(i)) in [1, 3,\
    \ 5, 7, 9]) && (first(digits(i)) in [1, 3, 5, 7, 9])\n            n += 1\n   \
    \     end\n    end\n    return n\nend", "    # for other possible solutions, see\
    \ \n    # https://github.com/JuliaComputing/JuliaAcademyData/blob/master/EssentialJulia/DataManipulation/case_studies/exercises/Exercise10.md#solution-1\n\
    \    special_nums = filter(x -> (isodd(x) && isodd(first(digits(x))) && isodd(last(digits(x)))),\
    \ nums)\n    return length(special_nums)\nend\n@assert specialFilter([15, -73,\
    \ 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2", "  \
    \  count = 0\n    for i in nums\n        if i >= 10 && i % 2 != 0 && i % 10 !=\
    \ 0\n            count += 1\n        end\n    end\n    return count\nend", " \
    \   return sum(filter(x -> x > 10 && (x % 10 == 1 || x % 10 == 3 || x % 10 ==\
    \ 5 || x % 10 == 7 || x % 10 == 9) && (x < 10 || x / 10 % 10 == 1 || x / 10 %\
    \ 10 == 3 || x / 10 % 10 == 5 || x / 10 % 10 == 7 || x / 10 % 10 == 9), nums))\n\
    end", "  # Your code here\nend\n \n@test specialFilter([15, -73, 14, -15]) ==\
    \ 1\n@test specialFilter([33, -2, -3, 45, 21, 109]) == 2\n@test specialFilter([15,\
    \ -73, 14, -15, 33, -2, -3, 45, 21, 109]) == 3\n@test specialFilter([15, -73,\
    \ 14, -15, 33, -2, -3, -1, 21, 109]) == 2\n@test specialFilter([15, -73, 14, -15,\
    \ 33, -2, -3, -1, 21, 0]) == 1\n@test specialFilter([15, -73, 14, -15, 33, -2,\
    \ -3, -1, 21, -99]) == 1\n ", "    newArr = []\n    for i in nums\n        if\
    \ ((abs(i) % 10 == 1) || (abs(i) % 10 == 3) || (abs(i) % 10 == 5) || (abs(i) %\
    \ 10 == 7) || (abs(i) % 10 == 9)) && (abs(i) > 10)\n            push!(newArr,\
    \ i)\n        end\n    end\n    return length(newArr)\nend", "    count = 0\n\
    \    for x in nums\n        if x > 10 && x % 2 != 0 && floor(log10(abs(x))) %\
    \ 2 != 0\n            count += 1\n        end\n    end\n    return count\nend",
  "    count = 0\n    for n in nums\n        if (n > 10) && (n % 2 != 0) && ((n %\
    \ 10) % 2 != 0) && ((n / 10) % 2 != 0)\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    count = 0\n    #print(length(nums))\n \
    \   for i in nums\n        if (i>10) & (i%2!=0) & (i%10!=0) & (i//10%2!=0)\n \
    \           count += 1\n        end\n    end\n    return count\nend\n    ", " \
    \   # isodd(x) returns true for odd x, false for even x\n    # isodd(x::Int64)\n\
    \    # digit(x, n) returns the nth digit of x, where the first digit is at n =\
    \ 1\n    # digit(x::Int64, n::Int64)\n    # @show nums, isodd(nums), isodd(first(nums)),\
    \ isodd(last(nums))\n    count = 0\n    for num in nums\n        if (num > 10)\
    \ && (isodd(num)) && (isodd(first(num))) && (isodd(last(num)))\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    val = 0 \n    for i\
    \ in nums \n        if i > 10 \n            if (i % 10 == 1 || i % 10 == 3 ||\
    \ i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i < 10 || i > -10 || i == 0)\
    \ \n                val += 1 \n            elseif (i % 10 == 1 || i % 10 == 3\
    \ || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i < 100 || i > -100) \n  \
    \              if i < 0 \n                    if (i / 10) % 10 == 1 || (i / 10)\
    \ % 10 == 3 || (i / 10) % 10 == 5 || (i / 10) % 10 == 7 || (i / 10) % 10 == 9\
    \ \n                        val += 1 \n                    end \n            \
    \    else \n                    if (i / 10) % 10 == 1 || (i / 10) % 10 == 3 ||\
    \ (i / 10) % 10 == 5 || (i / 10) % 10 == 7 || (i / 10) % 10 == 9 \n          \
    \              val += 1 \n                    end \n                end \n   \
    \         elseif (i % 10 == 1 || i % 10 == 3 || i % 10 == 5 || i % 10 == 7 ||\
    \ i % 10 == 9) && (i < 1000 || i > -1000) \n                if i < 0 \n      \
    \              if (i / 100) % 10 == 1 || (i / 100) % 10 == 3 || (i / 100) % 10\
    \ == 5 || (i / 100) % 10 == 7 || (i / 100) % 10 == 9 \n                      \
    \  val += 1 \n                    end \n                else \n              \
    \      if (i / 100) % 10 == 1 || (i / 100) % 10 == 3 || (i / 100) % 10 == 5 ||\
    \ (i / 100) % 10 == 7 || (i / 100) % 10 == 9 \n                        val +=\
    \ 1 \n                    end \n                end \n            elseif (i %\
    \ 10 == 1 || i % 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i <\
    \ 10000 || i > -10000) \n                if i < 0 \n                    if (i",
  "    elements = 0\n    for i in nums\n        if i > 10 && isodd(i) && isodd(first(digits(i)))\
    \ && isodd(last(digits(i)))\n            elements += 1\n        end\n    end\n\
    \    return elements\nend", "    function isOdd(n) \n        if n < 0 \n     \
    \       n = -n \n        end \n        if n == 0 \n            return false \n\
    \        end \n        if n == 1 \n            return true \n        end \n  \
    \      return isOdd(n - 2) \n    end \n    count = 0 \n    for n in nums \n  \
    \      if n > 10 && isOdd(n % 10) && isOdd(div(n, 10)) \n            count +=\
    \ 1 \n        end \n    end \n    return count \nend ", "    count = 0\n    for\
    \ num in nums\n        if 10 < num \n            ld = mod(num, 10)\n         \
    \   fd = div(num, 10^floor(log10(num)))\n            if (ld % 2 != 0) && (fd %\
    \ 2 != 0)\n                count += 1\n            end\n        end\n    end\n\
    \    return count\nend\nnums = [15, -73, 14, -15]\nspecialFilter(nums)\nnums =\
    \ [33, -2, -3, 45, 21, 109]\nspecialFilter(nums)", "    good_nums = 0\n    for\
    \ n in nums\n        if n > 10 && isodd(first(digits(n))) && isodd(last(digits(n)))\n\
    \            good_nums += 1\n        end\n    end\n    return good_nums\nend",
  "    count = 0\n    for i in nums\n        if i > 10 && isodd(i % 10) && isodd(i\
    \ % div(i, 10))\n            count += 1\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for num in nums\n        if(num > 10 && isodd(num) &&\
    \ isodd(num % 10))\n            count += 1\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for i in nums\n        if (i > 10) && (i % 2 != 0) &&\
    \ (mod(i, 10) != 0) && (mod(i, 10) % 2 != 0)\n            count += 1\n       \
    \ end\n    end\n    return count\nend", "    count = 0\n    for elem in nums\n\
    \        if elem > 10 && isodd(digits(elem)[1]) && isodd(digits(elem)[end])\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for i in nums\n        if i > 10 && first(i) % 2 != 0 && last(i) %\
    \ 2 != 0\n            count += 1\n        end\n    end\n    return count\nend",
  "    filtered = filter(x -> x >= 10 && mod(x, 2) == 1 && mod(first(digits(x)), 2)\
    \ == 1 && mod(last(digits(x)), 2) == 1, nums)\n    return length(filtered)\nend",
  "    nums = filter(n -> n > 10, nums)\n    return length(filter(n -> n % 2 != 0,\
    \ nums))\nend", "    cnt = 0\n    for i in nums\n        if i > 10 && isodd(i)\
    \ && isodd(last_digit(i))\n            cnt += 1\n        end\n    end\n    return\
    \ cnt\nend", "    i = 0\n    for n in nums\n        if n > 10 && (n % 10)%2 !=\
    \ 0 && n%10 !=0 && n%10 !=5\n            i += 1\n        end\n    end\n    return\
    \ i\nend", "    c = 0\n    for i in nums\n        if i > 10 && isodd(i) && isodd(i\
    \ % 10)\n            c += 1\n        end\n    end\n    return c\nend", "    res\
    \ = 0\n    for i = 1:length(nums)\n        if nums[i] > 10 && digits(nums[i])[1]\
    \ % 2 != 0 && digits(nums[i])[end] % 2 != 0\n            res += 1\n        end\n\
    \    end\n    return res\nend", "    num_of_elements = 0\n    for i in nums\n\
    \        if i > 10 && isodd(first(digits(i))) && isodd(last(digits(i)))\n    \
    \        num_of_elements += 1\n        end\n    end\n    return num_of_elements\n\
    end\nspecialFilter([15, -73, 14, -15])\nspecialFilter([33, -2, -3, 45, 21, 109])",
  "    count = 0\n    for num in nums\n        if num>10\n            if num%10==1\
    \ || num%10==3 || num%10==5 || num%10==7 || num%10==9\n                num2 =\
    \ num\n                if num2%10==1 || num2%10==3 || num2%10==5 || num2%10==7\
    \ || num2%10==9\n                    count += 1\n                end\n       \
    \     end\n        end\n    end\n    return count\nend", "    return length(nums[(((nums\
    \ .> 10) .& (nums .% 10 .== 1)) .| (nums .% 10 .== 3)) .| ((nums .> 10) .& (nums\
    \ .% 10 .== 7)) .| ((nums .> 10) .& (nums .% 10 .== 9))])\nend", "    count =\
    \ 0\n    for i = 1:length(nums)\n        if nums[i] > 10 && mod(nums[i], 10)%2\
    \ != 0 && mod(nums[i], 2)%2 != 0\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    n = length(nums)\n    res = 0\n    for i in 1:n\n\
    \        if (nums[i] > 10) && (rem(nums[i], 10) in [1, 3, 5, 7, 9]) && (rem(nums[i],\
    \ 10^(trunc(log10(nums[i])) - 1)) in [1, 3, 5, 7, 9])\n            res += 1\n\
    \        end\n    end\n    return res\nend", "    nums_filter = filter(n -> n>10\
    \ && isodd(n) && isodd(first(digits(n))) && isodd(last(digits(n))), nums)\n  \
    \  return length(nums_filter)\nend", "    count=0\n    for i in nums\n       \
    \ if i%2!=0 && i%2!=0\n            first=i%10\n            while i>10\n      \
    \          i=i/10\n            end\n            last=i\n            if first%2!=0\
    \ && last%2!=0 && i>10\n                count+=1\n            end\n        end\n\
    \    end\n    return count\nend", "    counter = 0\n    for i in nums\n      \
    \  if (i > 10) & (i % 2 != 0) & (div(i, 10) % 2 != 0)\n            counter +=\
    \ 1\n        end\n    end\n    return counter\nend", "    # YOUR CODE HERE\n \
    \   count=0\n    for i in nums\n        if(i>10 && i%2==1 && i%10==1)\n      \
    \      count+=1\n        end\n    end\n    return count\nend", "    greater_than_10\
    \ = map(x -> x > 10, nums)\n    if sum(greater_than_10) == 0\n        return 0\n\
    \    end\n    greater_than_10_nums = nums[greater_than_10]\n    first_digits =\
    \ map(x -> x % 10, greater_than_10_nums)\n    second_digits = map(x -> x \xF7\
    \ 10, greater_than_10_nums)\n    first_digits_odd = map(x -> mod(x, 2) != 0, first_digits)\n\
    \    second_digits_odd = map(x -> mod(x, 2) != 0, second_digits)\n    total_digits_odd\
    \ = first_digits_odd .* second_digits_odd\n    return sum(total_digits_odd)\n\
    end", "    n = 0\n    for i in nums\n        if (i>10) && (last(digits(i)) % 2\
    \ == 1) && (digits(i)[1] % 2 == 1)\n            n = n + 1\n        end\n    end\n\
    \    return n\nend", "    out = 0 \n    for i in nums \n        if i > 10 && i\
    \ % 2 != 0 &&  i % 10 != 0 && (i div 10) % 2 != 0 \n            out += 1 \n  \
    \      end \n    end \n    return out \nend ", "    if length(nums) == 0\n   \
    \     return 0\n    end\n    count::Int64 = 0\n    for i in nums\n        if i\
    \ > 10 && !ismatch(r\"^([02468]\\d*[02468]|[13579]\\d*[13579])$\", i)\n      \
    \      count += 1\n        end\n    end\n    return count\nend", "    count =\
    \ 0\n    for num in nums\n        if (num > 10) && isodd(num) && isodd(first(num))\
    \ && isodd(last(num))\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n \nspecialFilter([15, -73, 14, -15]) => 1 \nspecialFilter([33, -2,\
    \ -3, 45, 21, 109]) => 2", "    nums = filter(x -> x > 10, nums)\n    nums = filter(x\
    \ -> x % 2 != 0, nums)\n    nums = filter(x -> x % 10 != 0, nums)\n    return\
    \ length(nums)\nend", "    # Dummy return value\n    x=0\n    for i in nums\n\
    \        if i>10\n            x=x+1\n        end\n    end\n    return x\nend",
  "    n = size(nums)[1]\n    m = 0\n    for i in 1:n\n        if abs(nums[i]) > 10\
    \ && isodd(first(abs(nums[i]))) && isodd(last(abs(nums[i])))\n            m +=\
    \ 1\n        end\n    end\n    return m\nend", "    # given an array of numbers,\
    \ returns the number of elements greater than 10 and \n    # both first and last\
    \ digits are odd\n    count = 0\n    for i in nums\n        if (i > 10) && (i\
    \ < -10)\n            if ((i % 10) == 3) || ((i % 10) == 5) || ((i % 10) == 7)\
    \ || ((i % 10) == 9)\n                if (i >= 100)\n                    if ((i\
    \ % 10) == 3) || ((i % 10) == 5) || ((i % 10) == 7) || ((i % 10) == 9)\n     \
    \                   count += 1\n                    end\n                else\n\
    \                    count += 1\n                end\n            end\n      \
    \  end\n    end\n    return count\nend", "    number_greater_10_digits = 0 \n\
    \    for i in nums \n        if (i > 10) && (first_digit(i) in [1, 3, 5, 7, 9])\
    \ && (last_digit(i) in [1, 3, 5, 7, 9])\n            number_greater_10_digits\
    \ += 1 \n        end \n    end \n    return number_greater_10_digits \nend ",
  "    n = 0 \n    for i in nums \n        if 10 < i < 100 \n            if (i%10)%2\
    \ != 0 && (i/10)%2 != 0\n                n += 1 \n            end \n        elseif\
    \ i > 100 \n            if (i%10)%2 != 0 && (i/100)%2 != 0\n                n\
    \ += 1 \n            end \n        end \n    end \n    return n \nend ", "   \
    \ \"\"\"Number of elements that have both first and last digits odd and \n   \
    \     are greater than 10\"\"\"\n    sum(x->x>10 && (x%10).!=0 && (x%10)%2!=0\
    \ && (x%10^1).!=0 && (x%10^1)%2!=0, nums)\nend", "    #your code goes here\nend\n\
    using Test", "    # Your code here\n    return 0\nend", "    nums = filter(x ->\
    \ x>10, nums)\n    count = 0\n    for num in nums\n        for i = 1:length(num)\n\
    \            if num[i] in [1, 3, 5, 7, 9]\n                count += 1\n      \
    \      end\n        end\n    end\n    return count\nend", "    count=0\n    for\
    \ i in nums\n        if i>10 && first_digit(i)%2!=0 && last_digit(i)%2!=0\n  \
    \          count=count+1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for i in nums\n        if i > 10 && isodd(firstdigit(i)) && isodd(lastdigit(i))\n\
    \            count += 1\n        end\n    end\n    return count\nend", '    #
    implement your function here', "    \n    count = 0\n    length = size(nums)[1]\n\
    \    \n    for i in 1:length\n        num = nums[i]\n        if num>10\n     \
    \       num_string = string(num)\n            first_digit = Int64(num_string[1])\n\
    \            last_digit = Int64(num_string[end])\n            if (first_digit%2\
    \ != 0) && (last_digit%2 != 0)\n                count += 1\n            end\n\
    \        end\n    end\n    \n    return count\nend", "    # write your code here\n\
    end", "    num_filtered = 0\n    for x in nums\n        if x >= 10\n         \
    \   digits = digits(x)\n            first_digit = digits[1]\n            last_digit\
    \ = digits[end]\n            if first_digit % 2 != 0 && last_digit % 2 != 0\n\
    \                num_filtered += 1\n            end\n        end\n    end\n  \
    \  return num_filtered\nend", "    nums[findall(n -> n > 10 && n % 2 != 0 && n\
    \ % 10 != 0, nums)]\nend", "    # Your code here\n    return 0\nend", "    output\
    \ = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && div(i, 10) % 2 !=\
    \ 0\n            output += 1\n        end\n    end\n    return output\nend", " \
    \   filtered = [value for value in nums if value > 10 && (value % 2 != 0) && (value\
    \ % 10 != 0)]\n    return length(filtered)\nend\nspecialFilter([15, -73, 14, -15])\n\
    specialFilter([33, -2, -3, 45, 21, 109])", "    count = 0\n    for i in nums\n\
    \        if i > 10 && (i%10)%2==1 && (floor(i/10)%10)%2==1\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    nums_filtered = filter(x\
    \ -> (x > 10 && (x % 10) % 2 != 0 && (x \xF7 10) % 2 != 0), nums)\n    return\
    \ length(nums_filtered)\nend", "    #Your code here\n    #use helper function\
    \ isSpecial\nend", "    count = 0\n    for num in nums\n        if 10 < num &&\n\
    \           isodd(num) &&\n           isodd(first(digits(num))) &&\n         \
    \  isodd(last(digits(num)))\n            count += 1\n        end\n    end\n  \
    \  return count\nend", "    \nend", "    n = length(nums)\n    count = 0\n   \
    \ for i = 1:n\n        if nums[i] > 10\n            x = nums[i]\n            while\
    \ x >= 10\n                x = x / 10\n            end\n            y = floor(x)\n\
    \            if y%2 == 1 && x%2 == 1\n                count += 1\n           \
    \ end\n        end\n    end\n    return count\nend", "    # Write your code here\n\
    end\n\"\"\"Sort the array from largest to smallest. For example:\nsort([-5, -1,\
    \ 2, 10, 8]) => [10, 8, 2, -1, -5]\n\"\"\"", "    len = length(nums)\n    cnt\
    \ = 0\n    for i in 1:len\n        if nums[i]>10 && nums[i]%2==1 && mod(nums[i],10)%2==1\n\
    \            cnt += 1\n        end\n    end\n    return cnt\nend", "    counter\
    \ = 0\n    for num in nums\n        if num > 10\n            if num % 2 != 0 &&\
    \ (num % 10) % 2 != 0\n                counter += 1\n            end\n       \
    \ end\n    end\n    return counter\nend", "    # your code\nend\n \n@testset \"\
    special filter test\" begin\n    @test specialFilter([15, -73, 14, -15]) == 1\n\
    \    @test specialFilter([33, -2, -3, 45, 21, 109]) == 2\n    @test specialFilter([])\
    \ == 0\n    @test specialFilter([-1, 13, 15, 37, 11, 13, 13, 13, 13, 13, 13, 13,\
    \ 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 9, 7, 5, 3, 1]) == 24\n\
    end\n \n \n ", "    \n    # Your code here\n    \nend", "    return count(n ->\
    \ (n >= 10) && (digits(n)[1] % 2 != 0) && (digits(n)[end] % 2 != 0), nums)\nend\n\
    specialFilter([15, -73, 14, -15])\nspecialFilter([33, -2, -3, 45, 21, 109])",
  "    cnt = 0\n    for x in nums\n        if x > 10 && isodd(x%10) && isodd(x % 10^(Int(log10(x))+1))\n\
    \            cnt += 1\n        end\n    end\n    return cnt\nend", "    nums =\
    \ nums[nums .> 10]\n    nums = nums[nums .% 2 .== 1]\n    return sum(nums .% 10\
    \ .== 1)\nend\nspecialFilter([15, -73, 14, -15])\nspecialFilter([33, -2, -3, 45,\
    \ 21, 109])", "    total = 0\n    for i = 1:length(nums)\n        if nums[i] >\
    \ 10\n            if rem(nums[i],2) == 1\n                if rem(nums[i]/10,2)\
    \ == 1\n                    total = total + 1\n                end\n         \
    \   end\n        end\n    end\n    return total\nend", "    count = 0\n    for\
    \ num in nums\n        first_digit = first(digits(num))\n        last_digit =\
    \ last(digits(num))\n        if num > 10 && (first_digit % 2 == 1) && (last_digit\
    \ % 2 == 1)\n            count += 1\n        end\n    end\n    return count\n\
    end", "    c = 0\n    for a in nums\n        if (a>10) && ((mod(a,2)==1) && (mod(floor(a/10),2)==1))\n\
    \            c += 1\n        end\n    end\n    return c\nend\n ", "    count =\
    \ 0\n    for n in nums\n        nstr = string(n)\n        if n > 10\n        \
    \    first = nstr[1]\n            last = nstr[end]\n            if first == '1'\
    \ || first == '3' || first == '5' || first == '7' || first == '9'\n          \
    \      if last == '1' || last == '3' || last == '5' || last == '7' || last ==\
    \ '9'\n                    count += 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend", "    return sum([(n >= 10) & (n\
    \ % 2 == 1) & ((n % 10 == 1) | (n % 10 == 3) | (n % 10 == 5) | (n % 10 == 7) |\
    \ (n % 10 == 9)) for n in nums])\nend", "    n = 0\n    for i in nums\n      \
    \  if (i>10) && ((i%10==1)||(i%10==3)||(i%10==5)||(i%10==7)||(i%10==9)) && ((i%10^(Int(log10(i))+1)==1)||(i%10^(Int(log10(i))+1)==3)||(i%10^(Int(log10(i))+1)==5)||(i%10^(Int(log10(i))+1)==7)||(i%10^(Int(log10(i))+1)==9))\n\
    \            n += 1\n        end\n    end\n    return n\nend", "    # Enter code\
    \ here\nend", "    # Write your code here.\n    counter = 0\n    for i in nums\n\
    \        if i > 10 && isodd(i%10) && isodd(i//10^(length(Int(i))-1))\n       \
    \     counter += 1\n        end\n    end\n    return counter\nend\nprintln(specialFilter([15,\
    \ -73, 14, -15]))\nprintln(specialFilter([33, -2, -3, 45, 21, 109]))", "    count\
    \ = 0\n    for x in nums\n        if x > 10 && x % 2 != 0\n            digits\
    \ = digits(x)\n            first = digits[1]\n            last = digits[end]\n\
    \            if first % 2 != 0 && last % 2 != 0\n                count += 1\n\
    \            end\n        end\n    end\n    return count\nend", "    # your code\
    \ goes here\n    total = 0\n    for i in nums\n        if i >= 10\n          \
    \  first_digit = div(i,10)\n            last_digit = i - 10*first_digit\n    \
    \        if last_digit % 2 != 0 && first_digit % 2 != 0\n                total\
    \ += 1\n            end\n        end\n    end\n    return total\nend", "    count\
    \ = 0\n    for i in nums\n        if (i > 10) && (!isodd(i)) && (isodd(div(i,\
    \ 10))) && (isodd(i % 10))\n            count += 1\n        end\n    end\n   \
    \ return count\nend", "    num_arr_greater_10 = nums .> 10\n    #num_arr_greater_10\
    \ returns a bool vector\n    num_arr_greater_10_final = sum(num_arr_greater_10)\n\
    \    bool_arr = isodd.(nums)\n    bool_arr_final = sum(bool_arr)\n    # answer\
    \ = num_arr_greater_10_final + bool_arr_final\n    return num_arr_greater_10_final\
    \ + bool_arr_final\nend", "    \nend", "    # your code here\nend", "    count\
    \ = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && (i % 10) % 2 != 0\
    \ && (i / 10) % 2 != 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    cnt = 0\n    for num in nums\n        if num > 10 && isodd(num)\
    \ && isodd(num % 10)\n            cnt += 1\n        end\n    end\n    return cnt\n\
    end", "    nums_filtered = filter( (x) -> x > 10 && isodd(first(div(x, 10^(floor(log10(x)))))),\
    \ nums)\n    len = length(nums_filtered)\n    for i = 1:len\n        if !isodd(mod(nums_filtered[i],\
    \ 10))\n            nums_filtered = deleteat!(nums_filtered, i)\n            i\
    \ -= 1\n            len -= 1\n        end\n    end\n    return length(nums_filtered)\n\
    end", "    ctr = 0\n    for i in nums\n        if (i > 10) && (first(i) % 2 !=\
    \ 0) && (last(i) % 2 != 0)\n            ctr += 1\n        end\n    end\n    return\
    \ ctr\nend", "    num=0\n    for i in nums\n        if i>10 && abs(mod(i,10))%2!=0\
    \ && mod(i,10)%2!=0\n            num+=1\n        end\n    end\n    return num\n\
    end\nprintln(specialFilter([15, -73, 14, -15]))\nprintln(specialFilter([33, -2,\
    \ -3, 45, 21, 109]))", "    count = 0\n    for num in nums\n        if num > 10\
    \ && ends_with_odd(num) && first_digit_odd(num)\n            count += 1\n    \
    \    end\n    end\n    return count\nend", "    n = 0\n    for i in nums\n   \
    \     if i > 10\n            n += (i % 10) % 2 == 1 ? (i % 100) == i ? 1 : 0 :\
    \ 0\n        end\n    end\n    return n\nend", "    count = 0\n    for i in nums\n\
    \        # First condition: greater than 10.\n        if (i > 10) \n         \
    \   # Second condition: odd first digit.\n            if ((i % 10 == 1) || (i\
    \ % 10 == 3) || (i % 10 == 5) || (i % 10 == 7) || (i % 10 == 9))\n           \
    \     # Third condition: odd last digit.\n                if (((i div 10) % 10\
    \ == 1) || ((i div 10) % 10 == 3) || ((i div 10) % 10 == 5) || ((i div 10) % 10\
    \ == 7) || ((i div 10) % 10 == 9))\n                    count += 1\n         \
    \       end\n            end\n        end\n    end\n    return count\nend", " \
    \   number_greater_than_10 = length(filter(x -> x > 10, nums))\n    odd_first_and_last_digits\
    \ = length(filter(x -> isodd(x) && isodd(last(digits(x))), nums))\n    return\
    \ number_greater_than_10 + odd_first_and_last_digits\nend", "    # Your code here\n\
    \    return 0\nend\n@testset \"tests for specialFilter\" begin\n    @test specialFilter([15,\
    \ -73, 14, -15]) == 1\n    @test specialFilter([33, -2, -3, 45, 21, 109]) == 2\n\
    \    @test specialFilter([33, -2, -3, 45, 21, 99]) == 1\n    @test specialFilter([33,\
    \ -2, -3, 45, 21, 198]) == 0\n    @test specialFilter([1, 11, 111, 1111, 11111])\
    \ == 5\n    @test specialFilter([]) == 0\nend\n ", "    return length( [x for\
    \ x in nums if x > 10 && isodd(firstdig(x)) && isodd(lastdig(x)) ] )\nend", " \
    \   n = length(nums)\n    cnt = 0\n    for i in 1:n\n        if nums[i] > 10 &&\
    \ !(nums[i] % 2 == 0)\n            cnt += 1\n        end\n    end\n    return\
    \ cnt\nend", "    return length(filter(x -> x > 10 && mod(x, 2) != 0, nums))\n\
    end", "    return sum(n -> n > 10 && n % 2 != 0 && div(n, 10) % 2 != 0, nums)\n\
    end", "    return sum([all(mod.([first(n), last(n)], 2) .== 1) && n > 10 ? 1 :\
    \ 0 for n in nums])\nend", "    return length(filter(x -> (x > 10) && (x % 2 !=\
    \ 0) && ((x % 10) % 2 != 0), nums))\nend", "    #enter code here\nend", "    res\
    \ = 0\n    for num in nums\n        if num > 10 && num % 2 != 0 && num % 10 !=\
    \ 0 && (num - num % 10) % 2 != 0\n            res += 1\n        end\n    end\n\
    \    return res\nend", "    # your code here\nend\n@testset \"Special filter tests\"\
    \ begin\n    @test specialFilter([15, -73, 14, -15]) == 1\n    @test specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2\n    @test specialFilter([]) == 0\n    @test specialFilter([2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]) == 0\n    @test specialFilter([-10, 10, -11, 11, -12,\
    \ -13, -14, 15, -16, 16, -17, -18, -19, -20, 30, 33, 35, 37, 39, 55, -77, -99,\
    \ 101, -111, -131, 141, -151, 161, -171, -191, 311, -313, -333, -335, -337, -339,\
    \ -355, -377, -399, 511, -531, -533, -535, -537, -539, -555, -577, -599, 711,\
    \ -731, -733, -735, -737, -739, -755, -777, -799, 911, -931, -933, -935, -937,\
    \ -939, -955, -977, -999]) == 76\nend", "    x=0\n    for i in nums\n        if\
    \ (i>10) && (i%2!=0) && (i%(i%10) ==1)\n            x+=1\n        end\n    end\n\
    \    return x\nend", "    c = 0\n    for i = 1:length(nums)\n        if nums[i]\
    \ > 10 && isodd(nums[i] % 10) && isodd(nums[i] % 10)\n            c += 1\n   \
    \     end\n    end\n    return c\nend", "    n=0\n    for num in nums\n      \
    \  if (num>10) & ((num%10!=0)|(num%10!=5)) & (num%2!=0) & ((num/10^(floor(log10(num))))%2!=0)\n\
    \            n+=1\n        end\n    end\n    return n\nend", "    nums = filter(x\
    \ -> (x > 10) && iseven(x % 10) && iseven(x % 2), nums)\n    return length(nums)\n\
    end"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

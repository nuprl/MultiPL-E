name: HumanEval_121_solution
language: jl
results:
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    for i = 0:2:length(lst)\n        return sum(lst[i])\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7,\
    \ 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb8llmt_a.jl:19\n  Test threw exception\n\
    \  Expression: candidate([5, 8, 7, 1]) == 12\n  BoundsError: attempt to access\
    \ 4-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] solution(lst::Vector{Int64})\n     @ Main /tmp/tmpb8llmt_a.jl:11\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpb8llmt_a.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpb8llmt_a.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpb8llmt_a.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([3, 3, 3, 3, 3]) == 9\n  BoundsError: attempt to access 5-element\
    \ Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] solution(lst::Vector{Int64})\n     @ Main /tmp/tmpb8llmt_a.jl:11\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpb8llmt_a.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpb8llmt_a.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpb8llmt_a.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([30, 13, 24, 321]) == 0\n  BoundsError: attempt to access 4-element\
    \ Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] solution(lst::Vector{Int64})\n     @ Main /tmp/tmpb8llmt_a.jl:11\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpb8llmt_a.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpb8llmt_a.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpb8"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb8llmt_a.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    n = 0\n    for (i,x) in enumerate(lst)\n        if x % 2 != 0 && i % 2 ==\
    \ 0\n            n += x\n        end\n    end\n    return n\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) ==\
    \ 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24,\
    \ 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) ==\
    \ 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2,\
    \ 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp01_daqeo.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp01_daqeo.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp01_daqeo.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp01_daqeo.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp01_daqeo.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp01_daqeo.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp01_daqeo.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp01_daqeo.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp01_daqeo.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp01_daqeo.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp01_daqeo.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp01_daqeo.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp01_daqeo.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp01_daqeo.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # Get the indices of the odd elements of lst\n    odd_pos = findall(x ->\
    \ x % 2 != 0, lst)\n    # Get the indices of the even elements of lst\n    even_pos\
    \ = findall(x -> x % 2 == 0, lst)\n    # Get the sum of the elements in odd_pos\n\
    \    odd_sum = sum(lst[odd_pos])\n    # Get the sum of the elements in even_pos\n\
    \    even_sum = sum(lst[even_pos])\n    # Return the difference between odd_sum\
    \ and even_sum\n    return odd_sum - even_sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnqnki28s.jl:26\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 5 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnqnki28s.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnqnki28s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnqnki28s.jl:27\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 15 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnqnki28s.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnqnki28s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnqnki28s.jl:28\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 280 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnqnki28s.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnqnki28s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnqnki28s.jl:29\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 14 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnqnki28s.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnqnki28s.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpnqnki28s.jl:30\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: -14 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2]"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnqnki28s.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    total::Int64 = 0\n    for x in enumerate(lst)\n        if rem(x[1],2) ==\
    \ 0 && rem(x[2],2) != 0\n            total += x[2]\n        end\n    end\n   \
    \ return total\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t\
    @test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\
    \t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t\
    @test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\
    \t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3sjeduzy.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3sjeduzy.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3sjeduzy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3sjeduzy.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3sjeduzy.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3sjeduzy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3sjeduzy.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3sjeduzy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3sjeduzy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3sjeduzy.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3sjeduzy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3sjeduzy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3sjeduzy.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3sjeduzy.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    new_lst = [lst[i] for i in 2:2:length(lst)]\n    return sum(new_lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8,\
    \ 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp77id6ipm.jl:18\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp77id6ipm.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp77id6ipm.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp77id6ipm.jl:19\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp77id6ipm.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp77id6ipm.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp77id6ipm.jl:20\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp77id6ipm.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp77id6ipm.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp77id6ipm.jl:21\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp77id6ipm.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp77id6ipm.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp77id6ipm.jl:22\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp77id6ipm.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    odds_at_evens = []\n    for i in eachindex(lst)\n        if isodd(i) && isodd(lst[i])\n\
    \            push!(odds_at_evens, lst[i])\n        end\n    end\n    return sum(odds_at_evens)\n\
    end\n#print(solution([5, 8, 7, 1]))\n#print(solution([3, 3, 3, 3, 3]))\n#print(solution([30,\
    \ 13, 24, 321]))\n#print(solution([3, 2, 1, 2, 3]))\nusing Test\n\n@testset begin\n\
    \ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpczog35e1.jl:29\n  Test threw exception\n\
    \  Expression: candidate([30, 13, 24, 321]) == 0\n  MethodError: no method matching\
    \ zero(::Type{Any})\n  Closest candidates are:\n    zero(::Type{Union{Missing,\
    \ T}}) where T at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:105\n\
    \    zero(!Matched::Union{Type{P}, P}) where P<:Dates.Period at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Dates/src/periods.jl:53\n\
    \    zero(!Matched::T) where T<:Dates.TimeType at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Dates/src/types.jl:450\n\
    \    ...\n  Stacktrace:\n    [1] zero(#unused#::Type{Any})\n      @ Base ./missing.jl:106\n\
    \    [2] reduce_empty(#unused#::typeof(+), #unused#::Type{Any})\n      @ Base\
    \ ./reduce.jl:313\n    [3] reduce_empty(#unused#::typeof(Base.add_sum), #unused#::Type{Any})\n\
    \      @ Base ./reduce.jl:322\n    [4] mapreduce_empty(#unused#::typeof(identity),\
    \ op::Function, T::Type)\n      @ Base ./reduce.jl:345\n    [5] reduce_empty(op::Base.MappingRF{typeof(identity),\
    \ typeof(Base.add_sum)}, #unused#::Type{Any})\n      @ Base ./reduce.jl:331\n\
    \    [6] reduce_empty_iter\n      @ ./reduce.jl:357 [inlined]\n    [7] mapreduce_empty_iter(f::Function,\
    \ op::Function, itr::Vector{Any}, ItrEltype::Base.HasEltype)\n      @ Base ./reduce.jl:353\n\
    \    [8] _mapreduce(f::typeof(identity), op::typeof(Base.add_sum), #unused#::IndexLinear,\
    \ A::Vector{Any})\n      @ Base ./reduce.jl:402\n    [9] _mapreduce_dim\n    \
    \  @ ./reducedim.jl:330 [inlined]\n   [10] #mapreduce#731\n      @ ./reducedim.jl:322\
    \ [inlined]\n   [11] mapreduce\n      @ ./reducedim.jl:322 [inlined]\n   [12]\
    \ #_sum#741\n      @ ./reducedim.jl:894 [inlined]\n   [13] _sum\n      @ ./reducedim.jl:894\
    \ [inlined]\n   [14] #_sum#740\n      @ ./reducedim.jl:893 [inlined]\n   [15]\
    \ _sum\n      @ ./reducedim.jl:893 [inlined]\n   [16] #sum#738\n      @ ./reducedim.jl:889\
    \ [inlined]\n   [17] sum\n      @ ./reducedim.jl:889 [inlined]\n   [18] solution(lst::Vector{Int64})\n\
    \      @ Main /tmp/tmpczog35e1.jl:16\n   [19] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/st"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpczog35e1.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum( lst[2:2:end][mod.(lst[2:2:end],2).==1] )\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\
    \t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321])\
    \ == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\
    \t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) ==\
    \ 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpswlke88v.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpswlke88v.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpswlke88v.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpswlke88v.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpswlke88v.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpswlke88v.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpswlke88v.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpswlke88v.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpswlke88v.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpswlke88v.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpswlke88v.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpswlke88v.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpswlke88v.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpswlke88v.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpl_i1k2b6.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl_i1k2b6.jl:1\n\
    in expression starting at /tmp/tmpl_i1k2b6.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # your code here\n    even_total = 0\n    for i in 2:2:length(lst)\n    \
    \    if (isodd(lst[i]))\n            even_total += lst[i]\n        end\n    end\n\
    \    return even_total\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\
    \t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) ==\
    \ 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) ==\
    \ 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32])\
    \ == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuhnmi1a8.jl:24\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuhnmi1a8.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuhnmi1a8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpuhnmi1a8.jl:25\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuhnmi1a8.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuhnmi1a8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpuhnmi1a8.jl:26\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuhnmi1a8.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuhnmi1a8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpuhnmi1a8.jl:27\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuhnmi1a8.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuhnmi1a8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpuhnmi1a8.jl:29\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuhnmi1a8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \   return sum(lst[1:2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphgo8vy3e.jl:19\n  Expression: candidate([30,\
    \ 13, 24, 321]) == 0\n   Evaluated: 54 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphgo8vy3e.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphgo8vy3e.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphgo8vy3e.jl:21\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphgo8vy3e.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphgo8vy3e.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphgo8vy3e.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 53 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphgo8vy3e.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphgo8vy3e.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphgo8vy3e.jl:23\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 5 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphgo8vy3e.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphgo8vy3e.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphgo8vy3e.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # convert the vector to array\n    v = convert(Array, lst)\n    # do the\
    \ steps\n    # get all even positions\n    # get all odd numbers\n    # sum them\n\
    \    # return the sum\n    return sum(v[2:2:end][v[2:2:end] .% 2 .!= 0])\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8,\
    \ 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc3pypbgh.jl:24\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc3pypbgh.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc3pypbgh.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc3pypbgh.jl:25\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc3pypbgh.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc3pypbgh.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc3pypbgh.jl:26\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc3pypbgh.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc3pypbgh.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc3pypbgh.jl:27\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc3pypbgh.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc3pypbgh.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc3pypbgh.jl:29\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc3pypbgh.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    if length(lst) == 0\n        return 0\n    end\n    odd(x::Int64) = x % 2\
    \ == 1\n    even(x::Int64) = x % 2 == 0\n    #Only the ones where the index is\
    \ even\n    res = lst[findall(odd, lst) .& findall(even, 1:length(lst))]\n   \
    \ if length(res) == 0\n        return 0\n    end\n    return sum(res)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7,\
    \ 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwjk5hduv.jl:27\n  Test threw exception\n\
    \  Expression: candidate([5, 8, 7, 1]) == 12\n  DimensionMismatch(\"arrays could\
    \ not be broadcast to a common size; got a dimension with lengths 3 and 2\")\n\
    \  Stacktrace:\n    [1] _bcs1\n      @ ./broadcast.jl:516 [inlined]\n    [2] _bcs\n\
    \      @ ./broadcast.jl:510 [inlined]\n    [3] broadcast_shape\n      @ ./broadcast.jl:504\
    \ [inlined]\n    [4] combine_axes\n      @ ./broadcast.jl:499 [inlined]\n    [5]\
    \ instantiate\n      @ ./broadcast.jl:281 [inlined]\n    [6] materialize\n   \
    \   @ ./broadcast.jl:860 [inlined]\n    [7] solution(lst::Vector{Int64})\n   \
    \   @ Main /tmp/tmpwjk5hduv.jl:16\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpwjk5hduv.jl:27 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpwjk5hduv.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpwjk5hduv.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([3, 3, 3, 3, 3]) == 9\n  DimensionMismatch(\"arrays could not be broadcast\
    \ to a common size; got a dimension with lengths 5 and 2\")\n  Stacktrace:\n \
    \   [1] _bcs1\n      @ ./broadcast.jl:516 [inlined]\n    [2] _bcs\n      @ ./broadcast.jl:510\
    \ [inlined]\n    [3] broadcast_shape\n      @ ./broadcast.jl:504 [inlined]\n \
    \   [4] combine_axes\n      @ ./broadcast.jl:499 [inlined]\n    [5] instantiate\n\
    \      @ ./broadcast.jl:281 [inlined]\n    [6] materialize\n      @ ./broadcast.jl:860\
    \ [inlined]\n    [7] solution(lst::Vector{Int64})\n      @ Main /tmp/tmpwjk5hduv.jl:16\n\
    \    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpwjk5hduv.jl:28 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpwjk5hduv.jl:26\ntest set:\
    \ Test Failed at /tmp/tmpwjk5hduv.jl"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 1 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwjk5hduv.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[1:2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoch9np6m.jl:19\n  Expression: candidate([30,\
    \ 13, 24, 321]) == 0\n   Evaluated: 54 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoch9np6m.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoch9np6m.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoch9np6m.jl:21\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoch9np6m.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoch9np6m.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoch9np6m.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 53 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoch9np6m.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoch9np6m.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoch9np6m.jl:23\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 5 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoch9np6m.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoch9np6m.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoch9np6m.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    for i in 1:2:length(lst)\n        if !isodd(lst[i])\n      \
    \      sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\
    \t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321])\
    \ == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\
    \t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) ==\
    \ 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc78kdeam.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 0 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc78kdeam.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc78kdeam.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpc78kdeam.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc78kdeam.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc78kdeam.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpc78kdeam.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 54 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc78kdeam.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc78kdeam.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpc78kdeam.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc78kdeam.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc78kdeam.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpc78kdeam.jl:27\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc78kdeam.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    for i in eachindex(lst)\n        if i % 2 == 0 && lst[i] % 2\
    \ != 0\n            sum += lst[i]\n        end\n    end\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8,\
    \ 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp69hhx5cs.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp69hhx5cs.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp69hhx5cs.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp69hhx5cs.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp69hhx5cs.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp69hhx5cs.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp69hhx5cs.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp69hhx5cs.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp69hhx5cs.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp69hhx5cs.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp69hhx5cs.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp69hhx5cs.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp69hhx5cs.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp69hhx5cs.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    for i in 1:2:length(lst)\n        if i % 2 == 0\n          \
    \  sum += lst[i]\n        end\n    end\n    return sum\nend\nprintln(solution([5,\
    \ 8, 7, 1]))\nprintln(solution([3, 3, 3, 3, 3]))\nprintln(solution([30, 13, 24,\
    \ 321]))\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "0\n0\n0\ntest set: Test Failed at /tmp/tmpysni94wa.jl:26\n  Expression:\
    \ candidate([5, 8, 7, 1]) == 12\n   Evaluated: 0 == 12\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpysni94wa.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpysni94wa.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpysni94wa.jl:27\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpysni94wa.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpysni94wa.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpysni94wa.jl:29\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpysni94wa.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpysni94wa.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpysni94wa.jl:31\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 0 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpysni94wa.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpysni94wa.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpysni94wa.jl:32\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpysni94wa.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    total = 0\n    for i in lst[2:2:end]\n        if i % 2 != 0\n           \
    \ total += i\n        end\n    end\n    return total\nend\nsolution([5, 8, 7,\
    \ 1])\nsolution([3, 3, 3, 3, 3])\nsolution([30, 13, 24, 321])\nusing Test\n\n\
    @testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\
    \t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321])\
    \ == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\
    \t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) ==\
    \ 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj0rbygrt.jl:26\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0rbygrt.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0rbygrt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpj0rbygrt.jl:27\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0rbygrt.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0rbygrt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpj0rbygrt.jl:28\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0rbygrt.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0rbygrt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpj0rbygrt.jl:29\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj0rbygrt.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj0rbygrt.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpj0rbygrt.jl:31\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj0rbygrt.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    lst[2:2:end] |> sum |> sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8wu4s6xe.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wu4s6xe.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wu4s6xe.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8wu4s6xe.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wu4s6xe.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wu4s6xe.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8wu4s6xe.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wu4s6xe.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wu4s6xe.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8wu4s6xe.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8wu4s6xe.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8wu4s6xe.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8wu4s6xe.jl:21\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8wu4s6xe.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    evens = lst[1:2:end]\n    odds = evens[1:2:end]\n    return sum(odds)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8,\
    \ 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr7kxar6s.jl:19\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 5 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7kxar6s.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7kxar6s.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpr7kxar6s.jl:20\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7kxar6s.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7kxar6s.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpr7kxar6s.jl:21\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 30 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7kxar6s.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7kxar6s.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpr7kxar6s.jl:23\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr7kxar6s.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr7kxar6s.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpr7kxar6s.jl:24\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 30 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlin"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr7kxar6s.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return(sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0]))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0ac7cbir.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ac7cbir.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ac7cbir.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0ac7cbir.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ac7cbir.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ac7cbir.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0ac7cbir.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ac7cbir.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ac7cbir.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0ac7cbir.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ac7cbir.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ac7cbir.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0ac7cbir.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ac7cbir.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    j = 0\n    for i in 2:2:length(lst)\n        if isodd(lst[i])\n\
    \            sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) ==\
    \ 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24,\
    \ 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) ==\
    \ 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2,\
    \ 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmi1pukky.jl:24\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmi1pukky.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmi1pukky.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmi1pukky.jl:25\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmi1pukky.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmi1pukky.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmi1pukky.jl:26\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmi1pukky.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmi1pukky.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmi1pukky.jl:27\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmi1pukky.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmi1pukky.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmi1pukky.jl:29\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmi1pukky.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # Your code here\n    odds = zero(Int64)\n    evens = zero(Int64)\n    for\
    \ i in 1:2:length(lst)\n        odds += lst[i]\n    end\n    for i in 2:2:length(lst)\n\
    \        evens += lst[i]\n    end\n    odds - evens\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4bm4w4_i.jl:26\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 3 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4bm4w4_i.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4bm4w4_i.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4bm4w4_i.jl:27\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 3 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4bm4w4_i.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4bm4w4_i.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4bm4w4_i.jl:28\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: -280 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4bm4w4_i.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4bm4w4_i.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4bm4w4_i.jl:29\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ -4 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4bm4w4_i.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4bm4w4_i.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp4bm4w4_i.jl:30\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 6 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] m"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4bm4w4_i.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum(lst[2:2:end])\nend\nsolution([5, 8, 7, 1])\nsolution([3, 3, 3, 3, 3])\n\
    solution([30, 13, 24, 321])\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\
    \t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) ==\
    \ 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) ==\
    \ 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32])\
    \ == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp66r1fh4w.jl:20\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp66r1fh4w.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp66r1fh4w.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp66r1fh4w.jl:21\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp66r1fh4w.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp66r1fh4w.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp66r1fh4w.jl:22\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp66r1fh4w.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp66r1fh4w.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp66r1fh4w.jl:23\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp66r1fh4w.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp66r1fh4w.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp66r1fh4w.jl:24\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp66r1fh4w.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    for (i, num) in enumerate(lst)\n        if i % 2 == 0 && num\
    \ % 2 != 0\n            sum += num\n        end\n    end\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8,\
    \ 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpocfejlca.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpocfejlca.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpocfejlca.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpocfejlca.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpocfejlca.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpocfejlca.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpocfejlca.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpocfejlca.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpocfejlca.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpocfejlca.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpocfejlca.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpocfejlca.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpocfejlca.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpocfejlca.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    s = 0 \n    for i in 2:2:length(lst)\n        if lst[i] % 2 != 0\n      \
    \      s += lst[i]\n        end\n    end\n    return s\nend\nsolution([5, 8, 7,\
    \ 1])\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg7yvpxlp.jl:24\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg7yvpxlp.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg7yvpxlp.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpg7yvpxlp.jl:25\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg7yvpxlp.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg7yvpxlp.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpg7yvpxlp.jl:26\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg7yvpxlp.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg7yvpxlp.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpg7yvpxlp.jl:27\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg7yvpxlp.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg7yvpxlp.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpg7yvpxlp.jl:29\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg7yvpxlp.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    lst_len = length(lst)\n    sum = 0\n    for i in 1:2:lst_len-1\n        if\
    \ (lst[i] % 2) != 0\n            sum += lst[i]\n        end\n    end\n    return\
    \ sum\nend\n\"\"\"\nAnother Code (Without Loops)\n\"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp43o5xi9y.jl:19\nin expression starting at /tmp/tmp43o5xi9y.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(odds_in_even_positions(lst))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn45vqt8_.jl:17\n  Test threw exception\n\
    \  Expression: candidate([5, 8, 7, 1]) == 12\n  UndefVarError: odds_in_even_positions\
    \ not defined\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main\
    \ /tmp/tmpn45vqt8_.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn45vqt8_.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn45vqt8_.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpn45vqt8_.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([3, 3, 3, 3, 3]) == 9\n  UndefVarError: odds_in_even_positions not\
    \ defined\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmpn45vqt8_.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn45vqt8_.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn45vqt8_.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpn45vqt8_.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([30, 13, 24, 321]) == 0\n  UndefVarError: odds_in_even_positions not\
    \ defined\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmpn45vqt8_.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn45vqt8_.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn45vqt8_.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpn45vqt8_.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([5, 9]) == 5\n  UndefVarError: odds_in_even_positions not defined\n\
    \  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmpn45"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn45vqt8_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    (1:2:length(lst)) * lst\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgtplice2.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate([5, 8, 7, 1]) == 12\\n  MethodError: no\
    \ method matching *(::StepRange{Int64, Int64}, ::Vector{Int64})\\n  Closest candidates\
    \ are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\\\
    n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32,\
    \ Float64, ComplexF32, ComplexF64}, S<:Real} at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\\\
    n    *(!Matched::Union{SparseArrays.AbstractSparseMatrixCSC{TA, Ti}, SubArray{TA,\
    \ 2, <:SparseArrays.AbstractSparseMatrixCSC{TA, Ti}, Tuple{Base.Slice{Base.OneTo{Int64}},\
    \ I}} where I<:AbstractUnitRange} where Ti, ::Union{StridedVector, BitVector})\
    \ where TA at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/linalg.jl:50\\\
    n    ...\\n  Stacktrace:\\n   [1] solution(lst::Vector{Int64})\\n     @ Main /tmp/tmpgtplice2.jl:10\\\
    n   [2] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\\n   [3] macro expansion\\n     @ /tmp/tmpgtplice2.jl:17 [inlined]\\\
    n   [4] macro expansion\\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpgtplice2.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    odds = 0\n    for (i, v) in enumerate(lst)\n        if i % 2 == 0\n     \
    \       if v % 2 != 0\n                odds += v\n            end\n        end\n\
    \    end\n    return odds\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\
    \t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) ==\
    \ 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) ==\
    \ 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32])\
    \ == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpluoi0f1s.jl:25\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpluoi0f1s.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpluoi0f1s.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpluoi0f1s.jl:26\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpluoi0f1s.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpluoi0f1s.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpluoi0f1s.jl:27\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpluoi0f1s.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpluoi0f1s.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpluoi0f1s.jl:28\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpluoi0f1s.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpluoi0f1s.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpluoi0f1s.jl:30\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpluoi0f1s.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    even = 0\n    for i in 1:2:length(lst)\n        even += lst[i]\n    end\n\
    \    return even\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\
    \t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) ==\
    \ 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) ==\
    \ 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32])\
    \ == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw9s6mlt5.jl:23\n  Expression: candidate([30,\
    \ 13, 24, 321]) == 0\n   Evaluated: 54 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw9s6mlt5.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw9s6mlt5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpw9s6mlt5.jl:25\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw9s6mlt5.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw9s6mlt5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpw9s6mlt5.jl:26\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 53 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw9s6mlt5.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw9s6mlt5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpw9s6mlt5.jl:27\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 5 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw9s6mlt5.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw9s6mlt5.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw9s6mlt5.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    s=0\n    for i in eachindex(lst)\n        if i%2==0 && lst[i]%2!=0\n    \
    \        s+=lst[i]\n        end\n    end\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp912d6sa6.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp912d6sa6.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp912d6sa6.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp912d6sa6.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp912d6sa6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp912d6sa6.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp912d6sa6.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp912d6sa6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp912d6sa6.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp912d6sa6.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp912d6sa6.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp912d6sa6.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp912d6sa6.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp912d6sa6.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[1:2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpls3obrw1.jl:19\n  Expression: candidate([30,\
    \ 13, 24, 321]) == 0\n   Evaluated: 54 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpls3obrw1.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpls3obrw1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpls3obrw1.jl:21\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpls3obrw1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpls3obrw1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpls3obrw1.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 53 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpls3obrw1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpls3obrw1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpls3obrw1.jl:23\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 5 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpls3obrw1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpls3obrw1.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpls3obrw1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    if length(lst) == 0\n        error(\"List should not be empty\")\n    end\n\
    \    if length(lst)%2 == 0\n        error(\"List length should be odd\")\n   \
    \ end\n    odd_sum = 0\n    for i in 2:2:length(lst)\n        if lst[i]%2 != 0\n\
    \            odd_sum = odd_sum + lst[i]\n        end\n    end\n    return odd_sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqv04op35.jl:29\n  Test threw exception\n\
    \  Expression: candidate([5, 8, 7, 1]) == 12\n  List length should be odd\n  Stacktrace:\n\
    \   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] solution(lst::Vector{Int64})\n\
    \     @ Main /tmp/tmpqv04op35.jl:14\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqv04op35.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqv04op35.jl:28\ntest set:\
    \ Test Failed at /tmp/tmpqv04op35.jl:30\n  Expression: candidate([3, 3, 3, 3,\
    \ 3]) == 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqv04op35.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqv04op35.jl:28\ntest set: Error\
    \ During Test at /tmp/tmpqv04op35.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([30, 13, 24, 321]) == 0\n  List length should be odd\n  Stacktrace:\n\
    \   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] solution(lst::Vector{Int64})\n\
    \     @ Main /tmp/tmpqv04op35.jl:14\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqv04op35.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqv04op35.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpqv04op35.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([5, 9]) == 5\n  List length should be odd\n  Stacktrace:\n   [1] error(s::String)\n\
    \     @ Base ./error.jl:33\n   [2] solution(lst::Vector{Int64})\n     @ Main /tmp/tmpqv04op35.jl:14\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/s"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 1 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqv04op35.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum(lst[2:2:end][lst[2:2:end] % 2 == 1])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4_d2rb6m.jl:17\n  Test threw exception\n\
    \  Expression: candidate([5, 8, 7, 1]) == 12\n  MethodError: no method matching\
    \ rem(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:ToZero}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmp4_d2rb6m.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4_d2rb6m.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4_d2rb6m.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp4_d2rb6m.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([3, 3, 3, 3, 3]) == 9\n  MethodError: no method matching rem(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmp4_d2rb6m.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4_d2rb6m.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4_d2rb6m.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp4_d2rb6m.jl:19\n  Test threw exception\n  Express"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4_d2rb6m.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    lst1 = lst[1:2:end]\n    odd(x) = x % 2 != 0\n    filter!(odd, lst1)\n  \
    \  return sum(lst1)\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\
    \t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) ==\
    \ 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) ==\
    \ 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32])\
    \ == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    for index in 2:2:length(lst)\n        if (lst[index] % 2 !=\
    \ 0)\n            sum += lst[index]\n        end\n    end\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8,\
    \ 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0bfhl2zg.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0bfhl2zg.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0bfhl2zg.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0bfhl2zg.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0bfhl2zg.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0bfhl2zg.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0bfhl2zg.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0bfhl2zg.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0bfhl2zg.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0bfhl2zg.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0bfhl2zg.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0bfhl2zg.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0bfhl2zg.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0bfhl2zg.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    s = 0\n    for i in 1:2:length(lst)\n        if (lst[i] % 2) != 0\n     \
    \       s += lst[i]\n        end\n    end\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum_of_even_in_odd_pos = 0\n    for (index, item) in enumerate(lst)\n   \
    \     # We are using modulo 2 because we want to check if the number is even or\
    \ odd.\n        # Because the index in Julia starts with 1 not with 0 like other\
    \ languages we have to add 1 to the index.\n        if (index + 1) % 2 == 0 &&\
    \ item % 2 == 1\n            sum_of_even_in_odd_pos += item\n        end\n   \
    \ end\n    return sum_of_even_in_odd_pos\nend\nusing Test\n\n@testset begin\n\n\
    candidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \  sum([lst[i] for i in 2:2:length(lst) if isodd(i)])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptyalkta5.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 0 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptyalkta5.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptyalkta5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmptyalkta5.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptyalkta5.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptyalkta5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmptyalkta5.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptyalkta5.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptyalkta5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmptyalkta5.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 0 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptyalkta5.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptyalkta5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmptyalkta5.jl:23\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] "
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptyalkta5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # complete code here\n    \nend\n@test solution([5, 8, 7, 1]) == 12\n@test\
    \ solution([3, 3, 3, 3, 3]) == 9\n@test solution([30, 13, 24, 321]) == 0\n \n\
    \ \n \n \nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmpd8cz8xim.jl:13\nin expression starting at /tmp/tmpd8cz8xim.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    \n     return lst[2:2:end] |> sum \nend\nusing Test\n\n@testset begin\n\n\
    candidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo6yvaza5.jl:18\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6yvaza5.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6yvaza5.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpo6yvaza5.jl:19\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6yvaza5.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6yvaza5.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpo6yvaza5.jl:20\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6yvaza5.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6yvaza5.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpo6yvaza5.jl:21\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo6yvaza5.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo6yvaza5.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpo6yvaza5.jl:22\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo6yvaza5.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    res = 0\n    for i in 1:2:length(lst)\n        if lst[i] % 2 != 0 \n    \
    \        res += lst[i]\n        end\n    end\n    return res\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) ==\
    \ 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24,\
    \ 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) ==\
    \ 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2,\
    \ 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \  #TODO: add your code here\n  \nend\n@test solution([5, 8, 7, 1]) == 12\n@test\
    \ solution([3, 3, 3, 3, 3]) == 9\n@test solution([30, 13, 24, 321]) == 0\n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nusing Test\n\n@testset begin\n\
    \ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmp8kakdsk9.jl:13\nin expression starting at /tmp/tmp8kakdsk9.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \   \n    s = 0\n    \n    for i in eachindex(lst)\n        if i % 2 == 0 && lst[i]\
    \ % 2 != 0\n            s += lst[i]\n        end\n    end\n    \n    return s\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfwyg53qp.jl:26\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfwyg53qp.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfwyg53qp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfwyg53qp.jl:27\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfwyg53qp.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfwyg53qp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfwyg53qp.jl:28\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfwyg53qp.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfwyg53qp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfwyg53qp.jl:29\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfwyg53qp.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfwyg53qp.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfwyg53qp.jl:31\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfwyg53qp.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    s=0\n    for i in 1:2:length(lst)\n        if lst[i]%2==1\n            s+=lst[i]\n\
    \        end\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \   \n    return sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\n    \nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7,\
    \ 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppeyrmwle.jl:19\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppeyrmwle.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppeyrmwle.jl:18\ntest set: Test\
    \ Failed at /tmp/tmppeyrmwle.jl:20\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppeyrmwle.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppeyrmwle.jl:18\ntest set: Test\
    \ Failed at /tmp/tmppeyrmwle.jl:21\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppeyrmwle.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppeyrmwle.jl:18\ntest set: Test\
    \ Failed at /tmp/tmppeyrmwle.jl:22\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppeyrmwle.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppeyrmwle.jl:18\ntest set: Test\
    \ Failed at /tmp/tmppeyrmwle.jl:24\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppeyrmwle.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    for i = 1:2:length(lst)\n        if lst[i] % 2 == 1\n      \
    \      sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\
    \t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321])\
    \ == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\
    \t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) ==\
    \ 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    if length(lst) == 0\n        return 0\n    end\n    sum = 0\n    for i in\
    \ 1:2:length(lst)\n        if lst[i] % 2 != 0\n            sum += lst[i]\n   \
    \     end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    for i in 2:2:length(lst)\n        sum += lst[i]\n    end\n \
    \   return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t\
    @test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\
    \t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t\
    @test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\
    \t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpja7ycusr.jl:21\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpja7ycusr.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpja7ycusr.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpja7ycusr.jl:22\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpja7ycusr.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpja7ycusr.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpja7ycusr.jl:23\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpja7ycusr.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpja7ycusr.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpja7ycusr.jl:24\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpja7ycusr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpja7ycusr.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpja7ycusr.jl:25\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpja7ycusr.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    filter(x->(odd(x)&&!(even(x))), lst)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt8q8gj78.jl:17\n  Test threw exception\n\
    \  Expression: candidate([5, 8, 7, 1]) == 12\n  UndefVarError: odd not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @ Main /tmp/tmpt8q8gj78.jl:10\n\
    \   [2] filter(f::var\"#1#2\", a::Vector{Int64})\n     @ Base ./array.jl:2484\n\
    \   [3] solution(lst::Vector{Int64})\n     @ Main /tmp/tmpt8q8gj78.jl:10\n   [4]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpt8q8gj78.jl:17 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpt8q8gj78.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpt8q8gj78.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([3, 3, 3, 3, 3]) == 9\n  UndefVarError: odd not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#2\")(x::Int64)\n     @ Main /tmp/tmpt8q8gj78.jl:10\n   [2]\
    \ filter(f::var\"#1#2\", a::Vector{Int64})\n     @ Base ./array.jl:2484\n   [3]\
    \ solution(lst::Vector{Int64})\n     @ Main /tmp/tmpt8q8gj78.jl:10\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpt8q8gj78.jl:18 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpt8q8gj78.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpt8q8gj78.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([30, 13, 24, 321]) == 0\n  UndefVarError: odd not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#2\")(x::Int64)\n     @ Main /tmp/tmpt8q8gj78.jl:10\n   [2]\
    \ filter(f::var\"#1#2\", a::Vector{Int64})\n     @ Base ./array.jl:2484\n   [3]\
    \ solution(lst::Vector{Int64})\n     @ Main /tmp/tmpt8q8gj78.jl:10\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpt8q8gj78.jl:19 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/cento"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt8q8gj78.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\n# Benchmark\nusing BenchmarkTools\n\
    @btime solution(rand(1:100, 1000000))\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: ArgumentError: Package BenchmarkTools not found in current\
    \ path:\n- Run `import Pkg; Pkg.add(\"BenchmarkTools\")` to install the BenchmarkTools\
    \ package.\n\nStacktrace:\n [1] require(into::Module, mod::Symbol)\n   @ Base\
    \ ./loading.jl:967\nin expression starting at /tmp/tmpku52ggqy.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    odds = 0\n    for i = 2:2:length(lst)\n        if mod(lst[i], 2) == 1\n \
    \           odds += lst[i]\n        end\n    end\n    return odds\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7,\
    \ 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxperf5ty.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxperf5ty.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxperf5ty.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxperf5ty.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxperf5ty.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxperf5ty.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxperf5ty.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxperf5ty.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxperf5ty.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxperf5ty.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxperf5ty.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxperf5ty.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpxperf5ty.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxperf5ty.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # Your code here\n    return sum(lst[2:2:end][mod.(1:end,2) .== 0])\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8,\
    \ 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpohqmtu1i.jl:18\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpohqmtu1i.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpohqmtu1i.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpohqmtu1i.jl:19\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 3 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpohqmtu1i.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpohqmtu1i.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpohqmtu1i.jl:20\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 321 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpohqmtu1i.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpohqmtu1i.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpohqmtu1i.jl:21\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpohqmtu1i.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpohqmtu1i.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpohqmtu1i.jl:23\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 32 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpohqmtu1i.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    for (i, elem) in enumerate(lst)\n        if i % 2 == 0\n   \
    \         if elem % 2 != 0\n                sum += elem\n            end\n   \
    \     end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpro3otspz.jl:25\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpro3otspz.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpro3otspz.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpro3otspz.jl:26\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpro3otspz.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpro3otspz.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpro3otspz.jl:27\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpro3otspz.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpro3otspz.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpro3otspz.jl:28\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpro3otspz.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpro3otspz.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpro3otspz.jl:30\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpro3otspz.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \   lst = lst[2:2:end]\n   return sum(lst[lst .% 2 .!= 0])\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\
    \t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321])\
    \ == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\
    \t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) ==\
    \ 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphi4_sk10.jl:18\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphi4_sk10.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphi4_sk10.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphi4_sk10.jl:19\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphi4_sk10.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphi4_sk10.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphi4_sk10.jl:20\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphi4_sk10.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphi4_sk10.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphi4_sk10.jl:21\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphi4_sk10.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphi4_sk10.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphi4_sk10.jl:23\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphi4_sk10.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    for (i,v) in enumerate(lst)\n        if isodd(i) && isodd(v)\n\
    \            sum += v\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) ==\
    \ 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24,\
    \ 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) ==\
    \ 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2,\
    \ 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    res = sum(lst[2:2:end])\n    return res\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgioj5s4k.jl:18\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgioj5s4k.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgioj5s4k.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpgioj5s4k.jl:19\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgioj5s4k.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgioj5s4k.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpgioj5s4k.jl:20\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgioj5s4k.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgioj5s4k.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpgioj5s4k.jl:21\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgioj5s4k.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgioj5s4k.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpgioj5s4k.jl:22\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgioj5s4k.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \   \n    odds = lst[1:2:end]\n    return sum(odds)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9tkao8l8.jl:21\n  Expression: candidate([30,\
    \ 13, 24, 321]) == 0\n   Evaluated: 54 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9tkao8l8.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9tkao8l8.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp9tkao8l8.jl:23\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9tkao8l8.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9tkao8l8.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp9tkao8l8.jl:24\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 53 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9tkao8l8.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9tkao8l8.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp9tkao8l8.jl:25\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 5 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9tkao8l8.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9tkao8l8.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9tkao8l8.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum(lst[2:2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\
    \t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) ==\
    \ 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) ==\
    \ 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32])\
    \ == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa_t2jfw9.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_t2jfw9.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_t2jfw9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpa_t2jfw9.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_t2jfw9.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_t2jfw9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpa_t2jfw9.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_t2jfw9.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_t2jfw9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpa_t2jfw9.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_t2jfw9.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_t2jfw9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpa_t2jfw9.jl:21\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa_t2jfw9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    \n    \n    \nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\
    \t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) ==\
    \ 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) ==\
    \ 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32])\
    \ == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplwm7f7vh.jl:19\n  Test threw exception\n\
    \  Expression: candidate([5, 8, 7, 1]) == 12\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmplwm7f7vh.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplwm7f7vh.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplwm7f7vh.jl:18\ntest set:\
    \ Error During Test at /tmp/tmplwm7f7vh.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([3, 3, 3, 3, 3]) == 9\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmplwm7f7vh.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplwm7f7vh.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplwm7f7vh.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum_value = 0\n    is_even = false\n    for x in lst\n        if is_even\
    \ == true\n            sum_value += x\n        end\n        is_even = !is_even\n\
    \    end\n    return sum_value\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp84ghn7vp.jl:25\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp84ghn7vp.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp84ghn7vp.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp84ghn7vp.jl:26\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp84ghn7vp.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp84ghn7vp.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp84ghn7vp.jl:27\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp84ghn7vp.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp84ghn7vp.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp84ghn7vp.jl:28\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp84ghn7vp.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp84ghn7vp.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp84ghn7vp.jl:29\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp84ghn7vp.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum(lst[2:2:end][lst[2:2:end] % 2 .!= 0])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpixoq9a3l.jl:17\n  Test threw exception\n\
    \  Expression: candidate([5, 8, 7, 1]) == 12\n  MethodError: no method matching\
    \ rem(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:ToZero}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmpixoq9a3l.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpixoq9a3l.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpixoq9a3l.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpixoq9a3l.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([3, 3, 3, 3, 3]) == 9\n  MethodError: no method matching rem(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmpixoq9a3l.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpixoq9a3l.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpixoq9a3l.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpixoq9a3l.jl:19\n  Test threw exception\n  Express"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpixoq9a3l.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    #return sum(lst[lst .% 2 .== 0])\n    odd_even_elements = [lst[i] for i in\
    \ 1:length(lst) if i % 2 == 0 && lst[i] % 2 == 1]\n    return sum(odd_even_elements)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvltpv99d.jl:19\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvltpv99d.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvltpv99d.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpvltpv99d.jl:20\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvltpv99d.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvltpv99d.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpvltpv99d.jl:21\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvltpv99d.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvltpv99d.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpvltpv99d.jl:22\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvltpv99d.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvltpv99d.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpvltpv99d.jl:24\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvltpv99d.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[1:2:end][2:2:end])\nend\nusing Test\n\n@testset begin\n\n\
    candidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxe7mup1i.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 7 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxe7mup1i.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxe7mup1i.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxe7mup1i.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 3 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxe7mup1i.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxe7mup1i.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxe7mup1i.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 24 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxe7mup1i.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxe7mup1i.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxe7mup1i.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxe7mup1i.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxe7mup1i.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxe7mup1i.jl:21\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 8 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macr"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxe7mup1i.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    for i = 1:2:length(lst)\n        if i % 2 == 0\n           \
    \ sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpln7_0g4t.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 0 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpln7_0g4t.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpln7_0g4t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpln7_0g4t.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpln7_0g4t.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpln7_0g4t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpln7_0g4t.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpln7_0g4t.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpln7_0g4t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpln7_0g4t.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 0 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpln7_0g4t.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpln7_0g4t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpln7_0g4t.jl:29\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] "
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpln7_0g4t.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum::Int64 = 0\n    for i in 1:2:length(lst)\n        if lst[i] % 2 != 0\n\
    \            sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) ==\
    \ 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24,\
    \ 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) ==\
    \ 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2,\
    \ 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\nsolution([5, 8, 7,\
    \ 1])\nsolution([3, 3, 3, 3, 3])\nsolution([30, 13, 24, 321])\nusing Test\n\n\
    @testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\
    \t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321])\
    \ == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\
    \t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) ==\
    \ 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvudpgtcq.jl:20\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvudpgtcq.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvudpgtcq.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpvudpgtcq.jl:21\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvudpgtcq.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvudpgtcq.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpvudpgtcq.jl:22\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvudpgtcq.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvudpgtcq.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpvudpgtcq.jl:23\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvudpgtcq.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvudpgtcq.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpvudpgtcq.jl:25\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvudpgtcq.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \   sum(lst[2:2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\
    \t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) ==\
    \ 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) ==\
    \ 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32])\
    \ == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx346p606.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx346p606.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx346p606.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpx346p606.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx346p606.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx346p606.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpx346p606.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx346p606.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx346p606.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpx346p606.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx346p606.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx346p606.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpx346p606.jl:21\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx346p606.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \   return sum(lst[2:2:end][mod.(lst[2:2:end],2).==1])\nend\n@assert solution([5,\
    \ 8, 7, 1]) == 12\n@assert solution([3, 3, 3, 3, 3]) == 9\n@assert solution([30,\
    \ 13, 24, 321]) == 0\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t\
    @test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\
    \t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t\
    @test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\
    \t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: AssertionError: solution([5, 8, 7, 1]) == 12\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpduz188e7.jl:12\nin expression starting at\
    \ /tmp/tmpduz188e7.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    for i in 2:2:length(lst)\n        if lst[i] % 2 != 0\n     \
    \       sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) ==\
    \ 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24,\
    \ 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) ==\
    \ 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2,\
    \ 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmposclqu8t.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmposclqu8t.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmposclqu8t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmposclqu8t.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmposclqu8t.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmposclqu8t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmposclqu8t.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmposclqu8t.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmposclqu8t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmposclqu8t.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmposclqu8t.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmposclqu8t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmposclqu8t.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmposclqu8t.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][lst[2:2:end] % 2 == 1])\nend\n@test solution([5,\
    \ 8, 7, 1]) == 12\n@test solution([3, 3, 3, 3, 3]) == 9\n@test solution([30, 13,\
    \ 24, 321]) == 0\n@test solution([-1, -3, -2, -4]) == 0\n@test solution([-1, 3,\
    \ 2, 4]) == 0\n@test solution([1, 3, 2, 4]) == 4\n@test solution([1, 2, 3, 4])\
    \ == 1\n@test solution([5, 8, 7, 1]) == 12\n@test solution([2, 5, 3, 4]) == 5\n\
    @test solution([]) == 0\n@test solution([-5, -8, -7, -1]) == -8\n@test solution([-5,\
    \ -8, -7, -1]) == -8\n@test solution([-5, -3, -7, -1]) == -7\n@test solution([-3,\
    \ -2, -4, -6]) == -6\n@test solution([8, 8, -8, -2]) == 0\n@test solution([8,\
    \ 8, -8, -2]) == 0\n@test solution([8, -8, -8, -2]) == 0\n@test solution([8, -8,\
    \ -8, 2]) == 2\n@test solution([8, -8, -8, -8]) == 0\n@test solution([8, 8, 8,\
    \ 8]) == 0\n@test solution([8, -8, 8, -8]) == 0\n@test solution([2, 3, 4, 5])\
    \ == 3\n@test solution([2, 3, 4, 5]) == 3\n@test solution([3, 2, 4, 5]) == 4\n\
    @test solution([3, 2, 4, 5]) == 4\n@test solution([3, 2, 2, 4]) == 2\n@test solution([5,\
    \ 5, 5, 1]) == 1\n@test solution([5, 5, 5, 1]) == 1\n@test solution([5, 5, 5,\
    \ 1]) == 1\n@test solution([8, 1, 1, 1])\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmpcvy9cppz.jl:12\nin expression starting at /tmp/tmpcvy9cppz.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # Your code\nend\n@test solution([5, 8, 7, 1]) == 12\n@test solution([3,\
    \ 3, 3, 3, 3]) == 9\n@test solution([30, 13, 24, 321]) == 0\n \n \n\"\"\"Write\
    \ a function that takes a number and a list of integers. The function should return\
    \ a boolean indicating whether the number occurs in the list.\nusing Test\n\n\
    @testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\
    \t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321])\
    \ == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\
    \t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) ==\
    \ 3)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmp2nwa3bx6.jl:12\nin expression starting at /tmp/tmp2nwa3bx6.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # your code here\n    sum = 0\n    for i in eachindex(lst)\n        if i\
    \ % 2 == 0 && lst[i] % 2 != 0\n            sum += lst[i]\n        end\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t\
    @test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\
    \t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t\
    @test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\
    \t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl8i7kw3r.jl:24\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl8i7kw3r.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl8i7kw3r.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpl8i7kw3r.jl:25\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl8i7kw3r.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl8i7kw3r.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpl8i7kw3r.jl:26\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl8i7kw3r.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl8i7kw3r.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpl8i7kw3r.jl:27\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl8i7kw3r.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl8i7kw3r.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpl8i7kw3r.jl:29\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl8i7kw3r.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return  sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprenqlcq5.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprenqlcq5.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprenqlcq5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprenqlcq5.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprenqlcq5.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprenqlcq5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprenqlcq5.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprenqlcq5.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprenqlcq5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprenqlcq5.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprenqlcq5.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprenqlcq5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprenqlcq5.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprenqlcq5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    ans = 0 \n    for i = 1:2:length(lst)\n        if lst[i] % 2 == 1\n     \
    \       ans += lst[i]\n        end\n    end\n    return ans\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) ==\
    \ 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24,\
    \ 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) ==\
    \ 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2,\
    \ 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    \n    suma = 0\n    posicion = 2\n    for i = 1:length(lst)\n        if posicion\
    \ % 2 == 0 && mod(lst[i],2) != 0\n            suma += lst[i]\n        end\n  \
    \      \n        posicion += 1\n    end\n    \n    return suma\nend\nsolution([5,\
    \ 8, 7, 1])\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    counter = 1\n    for i in lst\n        if i % 2 != 0 && counter\
    \ % 2 == 0\n            sum += i\n        end\n        counter += 1\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t\
    @test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\
    \t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t\
    @test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\
    \t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7pvs7298.jl:25\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7pvs7298.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7pvs7298.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp7pvs7298.jl:26\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7pvs7298.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7pvs7298.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp7pvs7298.jl:27\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7pvs7298.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7pvs7298.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp7pvs7298.jl:28\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7pvs7298.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7pvs7298.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp7pvs7298.jl:30\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7pvs7298.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \  sum = 0\n  for i in 2:2:length(lst)\n    sum = sum + lst[i]\n  end\n  return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_8n27lwa.jl:21\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_8n27lwa.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_8n27lwa.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_8n27lwa.jl:22\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_8n27lwa.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_8n27lwa.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_8n27lwa.jl:23\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_8n27lwa.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_8n27lwa.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_8n27lwa.jl:24\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_8n27lwa.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_8n27lwa.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_8n27lwa.jl:25\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_8n27lwa.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp91uhb9tl.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp91uhb9tl.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp91uhb9tl.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp91uhb9tl.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp91uhb9tl.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp91uhb9tl.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp91uhb9tl.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp91uhb9tl.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp91uhb9tl.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp91uhb9tl.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp91uhb9tl.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp91uhb9tl.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp91uhb9tl.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp91uhb9tl.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp92lm788n.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp92lm788n.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp92lm788n.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp92lm788n.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp92lm788n.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp92lm788n.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp92lm788n.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp92lm788n.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp92lm788n.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp92lm788n.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp92lm788n.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp92lm788n.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp92lm788n.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp92lm788n.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \  return sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjfb4dcsk.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjfb4dcsk.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjfb4dcsk.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjfb4dcsk.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjfb4dcsk.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjfb4dcsk.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjfb4dcsk.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjfb4dcsk.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjfb4dcsk.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjfb4dcsk.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjfb4dcsk.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjfb4dcsk.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjfb4dcsk.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjfb4dcsk.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][1:2:end])\nend\nusing Test\n\n@testset begin\n\n\
    candidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3jkcgx0a.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 8 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3jkcgx0a.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3jkcgx0a.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3jkcgx0a.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 3 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3jkcgx0a.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3jkcgx0a.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3jkcgx0a.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 13 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3jkcgx0a.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3jkcgx0a.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3jkcgx0a.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3jkcgx0a.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3jkcgx0a.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3jkcgx0a.jl:21\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macr"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3jkcgx0a.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    s = 0\n    for i in 2:2:length(lst)\n        if isodd(lst[i]) \n        \
    \    s = s + lst[i]\n        end\n    end\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7ghbf4xz.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ghbf4xz.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ghbf4xz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp7ghbf4xz.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ghbf4xz.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ghbf4xz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp7ghbf4xz.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ghbf4xz.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ghbf4xz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp7ghbf4xz.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ghbf4xz.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ghbf4xz.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp7ghbf4xz.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ghbf4xz.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    for (index, elem) in enumerate(lst)\n        if index % 2 ==\
    \ 0 && elem % 2 != 0\n            sum += elem\n        end\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplbjqccba.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplbjqccba.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplbjqccba.jl:22\ntest set: Test\
    \ Failed at /tmp/tmplbjqccba.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplbjqccba.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplbjqccba.jl:22\ntest set: Test\
    \ Failed at /tmp/tmplbjqccba.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplbjqccba.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplbjqccba.jl:22\ntest set: Test\
    \ Failed at /tmp/tmplbjqccba.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplbjqccba.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplbjqccba.jl:22\ntest set: Test\
    \ Failed at /tmp/tmplbjqccba.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplbjqccba.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    lst[1:2:end] |> sum\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\
    \t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) ==\
    \ 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) ==\
    \ 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32])\
    \ == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp79nxjxkh.jl:19\n  Expression: candidate([30,\
    \ 13, 24, 321]) == 0\n   Evaluated: 54 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp79nxjxkh.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp79nxjxkh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp79nxjxkh.jl:21\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp79nxjxkh.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp79nxjxkh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp79nxjxkh.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 53 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp79nxjxkh.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp79nxjxkh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp79nxjxkh.jl:23\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 5 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp79nxjxkh.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp79nxjxkh.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp79nxjxkh.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][lst[2:2:end] % 2 .!= 0])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1v3z7t0_.jl:17\n  Test threw exception\n\
    \  Expression: candidate([5, 8, 7, 1]) == 12\n  MethodError: no method matching\
    \ rem(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:ToZero}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmp1v3z7t0_.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1v3z7t0_.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1v3z7t0_.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp1v3z7t0_.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([3, 3, 3, 3, 3]) == 9\n  MethodError: no method matching rem(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmp1v3z7t0_.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1v3z7t0_.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1v3z7t0_.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp1v3z7t0_.jl:19\n  Test threw exception\n  Express"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1v3z7t0_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    counter = 0\n    for i = 1:2:length(lst)\n        if i % 2 == 0\n       \
    \     counter += lst[i]\n        end\n    end\n    return counter\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7,\
    \ 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3xp883gy.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 0 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3xp883gy.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3xp883gy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3xp883gy.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3xp883gy.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3xp883gy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3xp883gy.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3xp883gy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3xp883gy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3xp883gy.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 0 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3xp883gy.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3xp883gy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3xp883gy.jl:29\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] "
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3xp883gy.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    idx_odd = filter(x -> x % 2 != 0, 1:length(lst))\n    sum(filter(x -> x %\
    \ 2 == 0, lst)[idx_odd])\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\
    \t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) ==\
    \ 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) ==\
    \ 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32])\
    \ == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpchev3_bb.jl:18\n  Test threw exception\n\
    \  Expression: candidate([5, 8, 7, 1]) == 12\n  BoundsError: attempt to access\
    \ 1-element Vector{Int64} at index [[1, 3]]\n  Stacktrace:\n   [1] throw_boundserror(A::Vector{Int64},\
    \ I::Tuple{Vector{Int64}})\n     @ Base ./abstractarray.jl:691\n   [2] checkbounds\n\
    \     @ ./abstractarray.jl:656 [inlined]\n   [3] _getindex\n     @ ./multidimensional.jl:838\
    \ [inlined]\n   [4] getindex\n     @ ./abstractarray.jl:1218 [inlined]\n   [5]\
    \ solution(lst::Vector{Int64})\n     @ Main /tmp/tmpchev3_bb.jl:11\n   [6] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpchev3_bb.jl:18 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpchev3_bb.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpchev3_bb.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([3, 3, 3, 3, 3]) == 9\n  BoundsError: attempt to access 0-element\
    \ Vector{Int64} at index [[1, 3, 5]]\n  Stacktrace:\n   [1] throw_boundserror(A::Vector{Int64},\
    \ I::Tuple{Vector{Int64}})\n     @ Base ./abstractarray.jl:691\n   [2] checkbounds\n\
    \     @ ./abstractarray.jl:656 [inlined]\n   [3] _getindex\n     @ ./multidimensional.jl:838\
    \ [inlined]\n   [4] getindex\n     @ ./abstractarray.jl:1218 [inlined]\n   [5]\
    \ solution(lst::Vector{Int64})\n     @ Main /tmp/tmpchev3_bb.jl:11\n   [6] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpchev3_bb.jl:19 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpchev3_bb.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpchev3_bb.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([30, 13, 24, 321]) == 0\n  BoundsError: attempt to access 2-element\
    \ Vector{Int64} at index [[1, 3]]\n  Stacktrace:\n   [1] throw_boundserro"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpchev3_bb.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum_odds_even_pos = 0\n    for i in 1:2:length(lst)\n        if lst[i] %\
    \ 2 != 0\n            sum_odds_even_pos += lst[i]\n        end\n    end\n    return\
    \ sum_odds_even_pos\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\
    \t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) ==\
    \ 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) ==\
    \ 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32])\
    \ == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    oddsum = 0\n    for (i, a) in enumerate(lst)\n        if a % 2 != 0\n   \
    \         if i % 2 == 0\n                oddsum += a\n            end\n      \
    \  end\n    end\n    return oddsum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo01fum1b.jl:25\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo01fum1b.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo01fum1b.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpo01fum1b.jl:26\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo01fum1b.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo01fum1b.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpo01fum1b.jl:27\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo01fum1b.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo01fum1b.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpo01fum1b.jl:28\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo01fum1b.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo01fum1b.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpo01fum1b.jl:30\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo01fum1b.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpokn950k0.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpokn950k0.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpokn950k0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpokn950k0.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpokn950k0.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpokn950k0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpokn950k0.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpokn950k0.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpokn950k0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpokn950k0.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpokn950k0.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpokn950k0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpokn950k0.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpokn950k0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    for (idx, n) in enumerate(lst)\n        if(idx % 2 == 0 && n\
    \ % 2 != 0)\n            sum += n\n        end\n    end\n    return sum\nend\n\
    \ \nsolution([3, 3, 3, 3, 3]) ==> 9\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwy2gh4fl.jl:19\nin expression starting at\
    \ /tmp/tmpwy2gh4fl.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    @assert length(lst)>0 \"The list must be non-empty\"\n    odd = lst[1:2:end]\n\
    \    return sum(odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\
    \t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) ==\
    \ 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) ==\
    \ 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32])\
    \ == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpflouhe6c.jl:21\n  Expression: candidate([30,\
    \ 13, 24, 321]) == 0\n   Evaluated: 54 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpflouhe6c.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpflouhe6c.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpflouhe6c.jl:23\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpflouhe6c.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpflouhe6c.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpflouhe6c.jl:24\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 53 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpflouhe6c.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpflouhe6c.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpflouhe6c.jl:25\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 5 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpflouhe6c.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpflouhe6c.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpflouhe6c.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    count = 0\n    for (i,j) in enumerate(lst)\n        if i % 2 == 0 && j %\
    \ 2 != 0\n            count += j\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8,\
    \ 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp83vbct6i.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp83vbct6i.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp83vbct6i.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp83vbct6i.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp83vbct6i.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp83vbct6i.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp83vbct6i.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp83vbct6i.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp83vbct6i.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp83vbct6i.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp83vbct6i.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp83vbct6i.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp83vbct6i.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp83vbct6i.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    if length(lst) == 1\n        return 0\n    end\n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyw83uboz.jl:20\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyw83uboz.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyw83uboz.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpyw83uboz.jl:21\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyw83uboz.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyw83uboz.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpyw83uboz.jl:22\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyw83uboz.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyw83uboz.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpyw83uboz.jl:23\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyw83uboz.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyw83uboz.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpyw83uboz.jl:24\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyw83uboz.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum(lst[2:2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\
    \t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) ==\
    \ 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) ==\
    \ 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32])\
    \ == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8g6ra3wd.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8g6ra3wd.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8g6ra3wd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8g6ra3wd.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8g6ra3wd.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8g6ra3wd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8g6ra3wd.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8g6ra3wd.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8g6ra3wd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8g6ra3wd.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8g6ra3wd.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8g6ra3wd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8g6ra3wd.jl:21\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8g6ra3wd.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbucflxm_.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbucflxm_.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbucflxm_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbucflxm_.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbucflxm_.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbucflxm_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbucflxm_.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbucflxm_.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbucflxm_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbucflxm_.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbucflxm_.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbucflxm_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbucflxm_.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbucflxm_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    odds = filter(isodd, lst)\n    evens = filter(iseven, lst)\n    odds\n  \
    \  evens\n    if length(odds) <= 1 && length(evens) <= 1\n        return 0\n \
    \   end\n    return sum(odds[2:2:end]) + sum(evens[1:2:end])\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) ==\
    \ 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24,\
    \ 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) ==\
    \ 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2,\
    \ 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpylf1o62p.jl:24\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 15 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpylf1o62p.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpylf1o62p.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpylf1o62p.jl:25\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpylf1o62p.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpylf1o62p.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpylf1o62p.jl:26\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 351 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpylf1o62p.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpylf1o62p.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpylf1o62p.jl:27\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpylf1o62p.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpylf1o62p.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpylf1o62p.jl:28\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] m"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpylf1o62p.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # Your code here\n    oddsum = 0\n    for i = 1:2:length(lst)\n        if\
    \ lst[i] % 2 != 0\n            oddsum += lst[i]\n        end\n    end\n    return\
    \ oddsum\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjwuenkuk.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjwuenkuk.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjwuenkuk.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjwuenkuk.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjwuenkuk.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjwuenkuk.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjwuenkuk.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjwuenkuk.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjwuenkuk.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjwuenkuk.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjwuenkuk.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjwuenkuk.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjwuenkuk.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjwuenkuk.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    i=1\n    j=0\n    s=0\n    for i=1:length(lst)\n        if i%2==0 \n    \
    \        if lst[i]%2==1\n                s=s+lst[i]\n            end\n       \
    \ end\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa_h2bwin.jl:27\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_h2bwin.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_h2bwin.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpa_h2bwin.jl:28\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_h2bwin.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_h2bwin.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpa_h2bwin.jl:29\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_h2bwin.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_h2bwin.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpa_h2bwin.jl:30\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_h2bwin.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_h2bwin.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpa_h2bwin.jl:32\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa_h2bwin.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpepwxti2n.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpepwxti2n.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpepwxti2n.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpepwxti2n.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpepwxti2n.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpepwxti2n.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpepwxti2n.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpepwxti2n.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpepwxti2n.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpepwxti2n.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpepwxti2n.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpepwxti2n.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpepwxti2n.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpepwxti2n.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    odd_pos = 0\n    for i in eachindex(lst)\n        if i % 2 == 0 && lst[i]\
    \ % 2 != 0\n            odd_pos += lst[i]\n        end\n    end\n    return odd_pos\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw4fbttp1.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw4fbttp1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw4fbttp1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpw4fbttp1.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw4fbttp1.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw4fbttp1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpw4fbttp1.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw4fbttp1.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw4fbttp1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpw4fbttp1.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw4fbttp1.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw4fbttp1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpw4fbttp1.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw4fbttp1.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    odd_sum = 0\n    for i in 1:2:length(lst)\n        if lst[i] % 2 != 0\n \
    \           odd_sum += lst[i]\n        end\n    end\n    return odd_sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8,\
    \ 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    idx_evens = [i for i in 1:length(lst) if i % 2 == 0]\n    # Get the odd elements\n\
    \    odd_values = [lst[i] for i in idx_evens if lst[i] % 2 != 0]\n    return sum(odd_values)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpghgyxt0e.jl:20\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpghgyxt0e.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpghgyxt0e.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpghgyxt0e.jl:21\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpghgyxt0e.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpghgyxt0e.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpghgyxt0e.jl:22\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpghgyxt0e.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpghgyxt0e.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpghgyxt0e.jl:23\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpghgyxt0e.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpghgyxt0e.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpghgyxt0e.jl:25\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpghgyxt0e.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    for (i, e) in enumerate(lst)\n        if i % 2 == 0 && e % 2\
    \ != 0\n            sum += e\n        end\n    end\n    return sum\nend\nprintln(solution([5,\
    \ 8, 7, 1]))\nprintln(solution([3, 3, 3, 3, 3]))\nprintln(solution([30, 13, 24,\
    \ 321]))\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "1\n6\n334\ntest set: Test Failed at /tmp/tmpmu5lrb92.jl:26\n  Expression:\
    \ candidate([5, 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmu5lrb92.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmu5lrb92.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpmu5lrb92.jl:27\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmu5lrb92.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmu5lrb92.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpmu5lrb92.jl:28\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmu5lrb92.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmu5lrb92.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpmu5lrb92.jl:29\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmu5lrb92.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmu5lrb92.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpmu5lrb92.jl:31\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmu5lrb92.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    if length(lst) == 0\n        return 0\n    end\n    sum = 0\n    for (i,value)\
    \ in enumerate(lst)\n        if (i % 2 == 0) && (value % 2 != 0)\n           \
    \ sum += value\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjuc__5ad.jl:26\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjuc__5ad.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjuc__5ad.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjuc__5ad.jl:27\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjuc__5ad.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjuc__5ad.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjuc__5ad.jl:28\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjuc__5ad.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjuc__5ad.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjuc__5ad.jl:29\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjuc__5ad.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjuc__5ad.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpjuc__5ad.jl:31\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjuc__5ad.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum([lst[i] for i in 2:2:length(lst) if i % 2 == 0])\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\
    \t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321])\
    \ == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\
    \t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) ==\
    \ 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb2l2n4nj.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb2l2n4nj.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb2l2n4nj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpb2l2n4nj.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb2l2n4nj.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb2l2n4nj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpb2l2n4nj.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb2l2n4nj.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb2l2n4nj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpb2l2n4nj.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb2l2n4nj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb2l2n4nj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpb2l2n4nj.jl:21\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb2l2n4nj.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    isodd(x::Int64) = x % 2 == 1\n    iseven(x::Int64) = x % 2 == 0\n    res\
    \ = 0\n    for i = 1:length(lst)\n        if iseven(i) && isodd(lst[i])\n    \
    \        res += lst[i]\n        end\n    end\n    return res\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) ==\
    \ 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24,\
    \ 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) ==\
    \ 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2,\
    \ 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6jhoj78_.jl:25\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jhoj78_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jhoj78_.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp6jhoj78_.jl:26\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jhoj78_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jhoj78_.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp6jhoj78_.jl:27\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jhoj78_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jhoj78_.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp6jhoj78_.jl:28\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jhoj78_.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jhoj78_.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp6jhoj78_.jl:30\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6jhoj78_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    \n    s = 0\n    for x = 1:2:length(lst)\n        if x%2 != 0\n         \
    \   s += lst[x]\n        end\n    end\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp611mh94z.jl:26\n  Expression: candidate([30,\
    \ 13, 24, 321]) == 0\n   Evaluated: 54 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp611mh94z.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp611mh94z.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp611mh94z.jl:28\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp611mh94z.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp611mh94z.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp611mh94z.jl:29\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 53 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp611mh94z.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp611mh94z.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp611mh94z.jl:30\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 5 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp611mh94z.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp611mh94z.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp611mh94z.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][lst[2:2:end] % 2 .!= 0])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpov_97kck.jl:17\n  Test threw exception\n\
    \  Expression: candidate([5, 8, 7, 1]) == 12\n  MethodError: no method matching\
    \ rem(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:ToZero}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmpov_97kck.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpov_97kck.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpov_97kck.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpov_97kck.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([3, 3, 3, 3, 3]) == 9\n  MethodError: no method matching rem(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmpov_97kck.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpov_97kck.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpov_97kck.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpov_97kck.jl:19\n  Test threw exception\n  Express"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpov_97kck.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjt4bc964.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjt4bc964.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjt4bc964.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjt4bc964.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjt4bc964.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjt4bc964.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjt4bc964.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjt4bc964.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjt4bc964.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjt4bc964.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjt4bc964.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjt4bc964.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjt4bc964.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjt4bc964.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # Add your code here.\n    return sum(lst[2:2:end][lst[2:2:end] % 2 == 1])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp80bf4ijz.jl:18\n  Test threw exception\n\
    \  Expression: candidate([5, 8, 7, 1]) == 12\n  MethodError: no method matching\
    \ rem(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:ToZero}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmp80bf4ijz.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80bf4ijz.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp80bf4ijz.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp80bf4ijz.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([3, 3, 3, 3, 3]) == 9\n  MethodError: no method matching rem(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmp80bf4ijz.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp80bf4ijz.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp80bf4ijz.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp80bf4ijz.jl:20\n  Test threw exception\n  Express"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp80bf4ijz.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    if length(lst) == 1 \n        return 0\n    end\n    return sum(lst[2:2:end][lst[2:2:end]\
    \ % 2 == 1])\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkrymj9vx.jl:20\n  Test threw exception\n\
    \  Expression: candidate([5, 8, 7, 1]) == 12\n  MethodError: no method matching\
    \ rem(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:ToZero}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmpkrymj9vx.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkrymj9vx.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkrymj9vx.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpkrymj9vx.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([3, 3, 3, 3, 3]) == 9\n  MethodError: no method matching rem(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmpkrymj9vx.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkrymj9vx.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkrymj9vx.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpkrymj9vx.jl:22\n  Test threw exception\n  Express"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkrymj9vx.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \ \n \n  sum = 0\n  for (i,x) in enumerate(lst)\n    if i % 2 == 1 && x % 2 ==\
    \ 1\n        sum += x\n    end\n  end\n  return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][lst[2:2:end] % 2 == 1])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmparb2hz_f.jl:17\n  Test threw exception\n\
    \  Expression: candidate([5, 8, 7, 1]) == 12\n  MethodError: no method matching\
    \ rem(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:ToZero}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmparb2hz_f.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmparb2hz_f.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmparb2hz_f.jl:16\ntest set:\
    \ Error During Test at /tmp/tmparb2hz_f.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([3, 3, 3, 3, 3]) == 9\n  MethodError: no method matching rem(::Vector{Int64},\
    \ ::Int64)\n  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /shared/centos7/julia/1.7.3/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmparb2hz_f.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmparb2hz_f.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmparb2hz_f.jl:16\ntest set:\
    \ Error During Test at /tmp/tmparb2hz_f.jl:19\n  Test threw exception\n  Express"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmparb2hz_f.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    \n    N = size(lst,1)\n    result = 0\n    for i in 1:2:N-1\n        if(lst[i]%2\
    \ != 0)\n            result = result + lst[i]\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmzly1yn1.jl:26\n  Expression: candidate([3,\
    \ 3, 3, 3, 3]) == 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmzly1yn1.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmzly1yn1.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmzly1yn1.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    \n    total = 0\n    for i in 1:2:length(lst)\n        if lst[i] % 2 != 0\n\
    \            total += lst[i]\n        end\n    end\n    return total\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7,\
    \ 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    for i in eachindex(lst)\n        if lst[i] % 2 != 0 && i % 2\
    \ == 0\n            sum += lst[i]\n        end\n    end\n    return sum\nend\n\
    solution([5, 8, 7, 1])\nsolution([3, 3, 3, 3, 3])\nsolution([30, 13, 24, 321])\n\
    using Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8,\
    \ 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfmufdbgk.jl:26\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfmufdbgk.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfmufdbgk.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfmufdbgk.jl:27\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfmufdbgk.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfmufdbgk.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfmufdbgk.jl:28\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfmufdbgk.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfmufdbgk.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfmufdbgk.jl:29\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfmufdbgk.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfmufdbgk.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpfmufdbgk.jl:31\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfmufdbgk.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    odd_even_sum = 0\n    for i in 1:2:length(lst)\n        odd_even_sum += lst[i]\n\
    \    end\n    return odd_even_sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphka6o5d2.jl:23\n  Expression: candidate([30,\
    \ 13, 24, 321]) == 0\n   Evaluated: 54 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphka6o5d2.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphka6o5d2.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphka6o5d2.jl:25\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphka6o5d2.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphka6o5d2.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphka6o5d2.jl:26\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 53 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphka6o5d2.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphka6o5d2.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphka6o5d2.jl:27\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 5 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphka6o5d2.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphka6o5d2.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphka6o5d2.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # Write your code here\n    \n    # Return the sum of all of the odd elements\
    \ that are in even positions.\n    out = 0\n    for i in 2:2:length(lst)\n   \
    \     if lst[i] % 2 == 1\n            out += lst[i]\n        end\n    end\n  \
    \  return out\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t\
    @test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\
    \t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t\
    @test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\
    \t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd688ut_6.jl:26\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd688ut_6.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd688ut_6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpd688ut_6.jl:27\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd688ut_6.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd688ut_6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpd688ut_6.jl:28\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd688ut_6.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd688ut_6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpd688ut_6.jl:29\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd688ut_6.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd688ut_6.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpd688ut_6.jl:31\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd688ut_6.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeyeeejzx.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeyeeejzx.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeyeeejzx.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpeyeeejzx.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeyeeejzx.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeyeeejzx.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpeyeeejzx.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeyeeejzx.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeyeeejzx.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpeyeeejzx.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeyeeejzx.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeyeeejzx.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpeyeeejzx.jl:21\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeyeeejzx.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    output=0\n    for i=1:2:length(lst)\n        if lst[i]%2!=0\n           \
    \ output+=lst[i]\n        end\n    end\n    return output\nend\n@test solution([5,\
    \ 8, 7, 1]) ==> 12\n@test solution([3, 3, 3, 3, 3]) ==> 9\n@test solution([30,\
    \ 13, 24, 321]) ==>0\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t\
    @test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\
    \t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t\
    @test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\
    \t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi_e2tzs7.jl:18\nin expression starting at\
    \ /tmp/tmpi_e2tzs7.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    #if !any(x -> x%2 == 0,lst)\n    #    sum = 0\n    #else\n \
    \       for i in 1:2:length(lst)\n            if lst[i]%2 == 0\n             \
    \   sum += lst[i]\n            end\n        end\n    #end\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8,\
    \ 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn4ytw4gy.jl:27\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 0 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn4ytw4gy.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn4ytw4gy.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpn4ytw4gy.jl:28\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn4ytw4gy.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn4ytw4gy.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpn4ytw4gy.jl:29\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 54 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn4ytw4gy.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn4ytw4gy.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpn4ytw4gy.jl:30\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn4ytw4gy.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn4ytw4gy.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpn4ytw4gy.jl:31\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn4ytw4gy.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # return sum([lst[i] for i in eachindex(lst) if i % 2 == 0 && lst[i] % 2\
    \ == 1])\n    total = 0\n    for i in eachindex(lst)\n        if i % 2 == 0 &&\
    \ lst[i] % 2 == 1\n            total += lst[i]\n        end\n    end\n    return\
    \ total\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp0hn8tnq.jl:24\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp0hn8tnq.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp0hn8tnq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpp0hn8tnq.jl:25\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp0hn8tnq.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp0hn8tnq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpp0hn8tnq.jl:26\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp0hn8tnq.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp0hn8tnq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpp0hn8tnq.jl:27\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp0hn8tnq.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp0hn8tnq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpp0hn8tnq.jl:29\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp0hn8tnq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2olres6_.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2olres6_.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2olres6_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp2olres6_.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2olres6_.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2olres6_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp2olres6_.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2olres6_.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2olres6_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp2olres6_.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2olres6_.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2olres6_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp2olres6_.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2olres6_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    odds = []\n    evens = []\n    for i in 1:length(lst)\n        if lst[i]\
    \ % 2 == 0\n            push!(evens, lst[i])\n        else\n            push!(odds,\
    \ lst[i])\n        end\n    end\n    oddsum = 0\n    for i in 1:length(odds)\n\
    \        if i % 2 == 0\n            oddsum += odds[i]\n        end\n    end\n\
    \    return oddsum\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\
    \t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) ==\
    \ 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) ==\
    \ 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32])\
    \ == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprvppwfg5.jl:32\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 7 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvppwfg5.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprvppwfg5.jl:31\ntest set: Test\
    \ Failed at /tmp/tmprvppwfg5.jl:33\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvppwfg5.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprvppwfg5.jl:31\ntest set: Test\
    \ Failed at /tmp/tmprvppwfg5.jl:34\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 321 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvppwfg5.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprvppwfg5.jl:31\ntest set: Test\
    \ Failed at /tmp/tmprvppwfg5.jl:35\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprvppwfg5.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprvppwfg5.jl:31\ntest set: Test\
    \ Failed at /tmp/tmprvppwfg5.jl:38\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 13 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprvppwfg5.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu3fzm82o.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu3fzm82o.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu3fzm82o.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpu3fzm82o.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu3fzm82o.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu3fzm82o.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpu3fzm82o.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu3fzm82o.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu3fzm82o.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpu3fzm82o.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu3fzm82o.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu3fzm82o.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpu3fzm82o.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu3fzm82o.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    suma=0\n    for i=1:2:length(lst)\n        if lst[i]%2==1\n            suma=suma+lst[i]\n\
    \        end\n    end\n    return suma\nend\nusing Test\n\n@testset begin\n\n\
    candidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    for i in 2:2:length(lst)\n        if lst[i] % 2 != 0\n     \
    \       sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) ==\
    \ 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24,\
    \ 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) ==\
    \ 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2,\
    \ 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2b52edms.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2b52edms.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2b52edms.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp2b52edms.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2b52edms.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2b52edms.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp2b52edms.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2b52edms.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2b52edms.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp2b52edms.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2b52edms.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2b52edms.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp2b52edms.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2b52edms.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \  sum([lst[2i-1] for i in 1:length(lst)/2])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcfik8mic.jl:17\n  Test threw exception\n\
    \  Expression: candidate([5, 8, 7, 1]) == 12\n  ArgumentError: invalid index:\
    \ 1.0 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base\
    \ ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base\
    \ ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n \
    \   [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n   \
    \   @ ./abstractarray.jl:1218 [inlined]\n    [6] (::var\"#1#2\"{Vector{Int64}})(i::Float64)\n\
    \      @ Main ./none:0\n    [7] iterate\n      @ ./generator.jl:47 [inlined]\n\
    \    [8] collect\n      @ ./array.jl:724 [inlined]\n    [9] solution(lst::Vector{Int64})\n\
    \      @ Main /tmp/tmpcfik8mic.jl:10\n   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmpcfik8mic.jl:17 [inlined]\n\
    \   [12] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [13] top-level scope\n      @ /tmp/tmpcfik8mic.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpcfik8mic.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([3, 3, 3, 3, 3]) == 9\n  ArgumentError: invalid index: 1.0 of type\
    \ Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n\
    \    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218\
    \ [inlined]\n    [6] (::var\"#1#2\"{Vector{Int64}})(i::Float64)\n      @ Main\
    \ ./none:0\n    [7] iterate\n      @ ./generator.jl:47 [inlined]\n    [8] collect\n\
    \      @ ./array.jl:724 [inlined]\n    [9] solution(lst::Vector{Int64})\n    \
    \  @ Main /tmp/tmpcfik8mic.jl:10\n   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmpcfik8mic.jl:18 [inlined]\n\
    \   [12] macro expansion\n      @ /shared/cento"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcfik8mic.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    new_list = []\n    lst[1:2:end]\n    for i in lst[1:2:end]\n        if i\
    \ % 2 != 0\n            push!(new_list, i)\n        end\n    end\n    return sum(new_list)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyzrkw29_.jl:26\n  Test threw exception\n\
    \  Expression: candidate([30, 13, 24, 321]) == 0\n  MethodError: no method matching\
    \ zero(::Type{Any})\n  Closest candidates are:\n    zero(::Type{Union{Missing,\
    \ T}}) where T at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:105\n\
    \    zero(!Matched::Union{Type{P}, P}) where P<:Dates.Period at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Dates/src/periods.jl:53\n\
    \    zero(!Matched::T) where T<:Dates.TimeType at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Dates/src/types.jl:450\n\
    \    ...\n  Stacktrace:\n    [1] zero(#unused#::Type{Any})\n      @ Base ./missing.jl:106\n\
    \    [2] reduce_empty(#unused#::typeof(+), #unused#::Type{Any})\n      @ Base\
    \ ./reduce.jl:313\n    [3] reduce_empty(#unused#::typeof(Base.add_sum), #unused#::Type{Any})\n\
    \      @ Base ./reduce.jl:322\n    [4] mapreduce_empty(#unused#::typeof(identity),\
    \ op::Function, T::Type)\n      @ Base ./reduce.jl:345\n    [5] reduce_empty(op::Base.MappingRF{typeof(identity),\
    \ typeof(Base.add_sum)}, #unused#::Type{Any})\n      @ Base ./reduce.jl:331\n\
    \    [6] reduce_empty_iter\n      @ ./reduce.jl:357 [inlined]\n    [7] mapreduce_empty_iter(f::Function,\
    \ op::Function, itr::Vector{Any}, ItrEltype::Base.HasEltype)\n      @ Base ./reduce.jl:353\n\
    \    [8] _mapreduce(f::typeof(identity), op::typeof(Base.add_sum), #unused#::IndexLinear,\
    \ A::Vector{Any})\n      @ Base ./reduce.jl:402\n    [9] _mapreduce_dim\n    \
    \  @ ./reducedim.jl:330 [inlined]\n   [10] #mapreduce#731\n      @ ./reducedim.jl:322\
    \ [inlined]\n   [11] mapreduce\n      @ ./reducedim.jl:322 [inlined]\n   [12]\
    \ #_sum#741\n      @ ./reducedim.jl:894 [inlined]\n   [13] _sum\n      @ ./reducedim.jl:894\
    \ [inlined]\n   [14] #_sum#740\n      @ ./reducedim.jl:893 [inlined]\n   [15]\
    \ _sum\n      @ ./reducedim.jl:893 [inlined]\n   [16] #sum#738\n      @ ./reducedim.jl:889\
    \ [inlined]\n   [17] sum\n      @ ./reducedim.jl:889 [inlined]\n   [18] solution(lst::Vector{Int64})\n\
    \      @ Main /tmp/tmpyzrkw29_.jl:17\n   [19] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/st"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyzrkw29_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    odd_lst = filter(x -> x % 2 != 0, lst)\n    even_lst = filter(x -> x % 2\
    \ == 0, lst)\n    return sum(odd_lst[1:2:end]) + sum(even_lst[2:2:end])\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8,\
    \ 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0b4dx531.jl:19\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 6 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0b4dx531.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0b4dx531.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp0b4dx531.jl:21\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 37 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0b4dx531.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0b4dx531.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp0b4dx531.jl:23\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0b4dx531.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0b4dx531.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp0b4dx531.jl:24\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 45 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0b4dx531.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0b4dx531.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp0b4dx531.jl:25\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 12 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inline"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0b4dx531.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[filter(i -> i % 2 == 0, 1:length(lst))] .% 2 == 1)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8,\
    \ 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2qfe2re9.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 0 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2qfe2re9.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2qfe2re9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp2qfe2re9.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2qfe2re9.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2qfe2re9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp2qfe2re9.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2qfe2re9.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2qfe2re9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp2qfe2re9.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 0 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2qfe2re9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2qfe2re9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp2qfe2re9.jl:23\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] "
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2qfe2re9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    if length(lst) == 1\n        return 0\n    end\n    oddSum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 != 0\n            oddSum += lst[i]\n\
    \        end\n    end\n    return oddSum\nend\nusing Test\n\n@testset begin\n\n\
    candidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    results = []\n    for (index, value) in enumerate(lst)\n        if(value\
    \ % 2 != 0 && index % 2 == 0)\n            push!(results, value)\n        end\n\
    \    end\n    return sum(results)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5fxwgeju.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5fxwgeju.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5fxwgeju.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5fxwgeju.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5fxwgeju.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5fxwgeju.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5fxwgeju.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5fxwgeju.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5fxwgeju.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5fxwgeju.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5fxwgeju.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5fxwgeju.jl:22\ntest set: Error\
    \ During Test at /tmp/tmp5fxwgeju.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([2, 4, 8]) == 0\n  MethodError: no method matching zero(::Type{Any})\n\
    \  Closest candidates are:\n    zero(::Type{Union{Missing, T}}) where T"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5fxwgeju.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    for i in 2:2:length(lst)\n        if(lst[i] % 2 != 0)\n    \
    \        sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) ==\
    \ 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24,\
    \ 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) ==\
    \ 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2,\
    \ 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkuiclc7_.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkuiclc7_.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkuiclc7_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkuiclc7_.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkuiclc7_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkuiclc7_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkuiclc7_.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkuiclc7_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkuiclc7_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkuiclc7_.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkuiclc7_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkuiclc7_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkuiclc7_.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkuiclc7_.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum([lst[i] for i in 2:2:length(lst) if isodd(i)])\nend\n \nusing Test\n\n\
    @testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\
    \t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321])\
    \ == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\
    \t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) ==\
    \ 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl7_b5om9.jl:18\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 0 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl7_b5om9.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl7_b5om9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpl7_b5om9.jl:19\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl7_b5om9.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl7_b5om9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpl7_b5om9.jl:21\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl7_b5om9.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl7_b5om9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpl7_b5om9.jl:23\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 0 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl7_b5om9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl7_b5om9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpl7_b5om9.jl:24\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] "
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl7_b5om9.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplnerd2y6.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplnerd2y6.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplnerd2y6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmplnerd2y6.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplnerd2y6.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplnerd2y6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmplnerd2y6.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplnerd2y6.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplnerd2y6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmplnerd2y6.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplnerd2y6.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplnerd2y6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmplnerd2y6.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplnerd2y6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # Your solution goes here\n    # You can add more local functions if needed\n\
    \    n = length(lst)\n    odd_elements = []\n    for i in 1:2:n\n        if lst[i]\
    \ % 2 != 0\n            push!(odd_elements, lst[i])\n        end\n    end\n  \
    \  sum(odd_elements)\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\
    \t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) ==\
    \ 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) ==\
    \ 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32])\
    \ == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4z7xzob1.jl:28\n  Test threw exception\n\
    \  Expression: candidate([30, 13, 24, 321]) == 0\n  MethodError: no method matching\
    \ zero(::Type{Any})\n  Closest candidates are:\n    zero(::Type{Union{Missing,\
    \ T}}) where T at /shared/centos7/julia/1.7.3/share/julia/base/missing.jl:105\n\
    \    zero(!Matched::Union{Type{P}, P}) where P<:Dates.Period at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Dates/src/periods.jl:53\n\
    \    zero(!Matched::T) where T<:Dates.TimeType at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Dates/src/types.jl:450\n\
    \    ...\n  Stacktrace:\n    [1] zero(#unused#::Type{Any})\n      @ Base ./missing.jl:106\n\
    \    [2] reduce_empty(#unused#::typeof(+), #unused#::Type{Any})\n      @ Base\
    \ ./reduce.jl:313\n    [3] reduce_empty(#unused#::typeof(Base.add_sum), #unused#::Type{Any})\n\
    \      @ Base ./reduce.jl:322\n    [4] mapreduce_empty(#unused#::typeof(identity),\
    \ op::Function, T::Type)\n      @ Base ./reduce.jl:345\n    [5] reduce_empty(op::Base.MappingRF{typeof(identity),\
    \ typeof(Base.add_sum)}, #unused#::Type{Any})\n      @ Base ./reduce.jl:331\n\
    \    [6] reduce_empty_iter\n      @ ./reduce.jl:357 [inlined]\n    [7] mapreduce_empty_iter(f::Function,\
    \ op::Function, itr::Vector{Any}, ItrEltype::Base.HasEltype)\n      @ Base ./reduce.jl:353\n\
    \    [8] _mapreduce(f::typeof(identity), op::typeof(Base.add_sum), #unused#::IndexLinear,\
    \ A::Vector{Any})\n      @ Base ./reduce.jl:402\n    [9] _mapreduce_dim\n    \
    \  @ ./reducedim.jl:330 [inlined]\n   [10] #mapreduce#731\n      @ ./reducedim.jl:322\
    \ [inlined]\n   [11] mapreduce\n      @ ./reducedim.jl:322 [inlined]\n   [12]\
    \ #_sum#741\n      @ ./reducedim.jl:894 [inlined]\n   [13] _sum\n      @ ./reducedim.jl:894\
    \ [inlined]\n   [14] #_sum#740\n      @ ./reducedim.jl:893 [inlined]\n   [15]\
    \ _sum\n      @ ./reducedim.jl:893 [inlined]\n   [16] #sum#738\n      @ ./reducedim.jl:889\
    \ [inlined]\n   [17] sum\n      @ ./reducedim.jl:889 [inlined]\n   [18] solution(lst::Vector{Int64})\n\
    \      @ Main /tmp/tmp4z7xzob1.jl:19\n   [19] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/st"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4z7xzob1.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    odd_elements = 0\n    for i = 1:2:length(lst)\n        isodd(lst[i]) ? odd_elements+=lst[i]\
    \ : odd_elements\n    end\n    return odd_elements\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    \n    answer = 0\n    for i in 2:2:length(lst)\n        if isodd(lst[i])\n\
    \            answer += lst[i]\n        end\n    end\n    return answer\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8,\
    \ 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg7gq5wo0.jl:24\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg7gq5wo0.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg7gq5wo0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpg7gq5wo0.jl:25\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg7gq5wo0.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg7gq5wo0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpg7gq5wo0.jl:26\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg7gq5wo0.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg7gq5wo0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpg7gq5wo0.jl:27\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg7gq5wo0.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg7gq5wo0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpg7gq5wo0.jl:29\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg7gq5wo0.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    t=0\n    for i in eachindex(lst)\n        if (i % 2 != 0) & (lst[i] % 2 !=\
    \ 0)\n            t+=lst[i]\n        end\n    end\n    return t\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) ==\
    \ 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24,\
    \ 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) ==\
    \ 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2,\
    \ 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    n = 0\n    for i in 1:2:length(lst)\n        if lst[i] % 2 != 0\n       \
    \     n += lst[i]\n        end\n    end\n    return n\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdei516or.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdei516or.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdei516or.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpdei516or.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdei516or.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdei516or.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpdei516or.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdei516or.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdei516or.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpdei516or.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdei516or.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdei516or.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpdei516or.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdei516or.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][rem.(lst[2:2:end],2).==1])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjxym1qbp.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjxym1qbp.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjxym1qbp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjxym1qbp.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjxym1qbp.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjxym1qbp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjxym1qbp.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjxym1qbp.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjxym1qbp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjxym1qbp.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjxym1qbp.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjxym1qbp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjxym1qbp.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjxym1qbp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end])\nend\nsolution([5, 8, 7, 1]) ==> 12\nsolution([3,\
    \ 3, 3, 3, 3]) ==> 9\nsolution([30, 13, 24, 321]) ==>0\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpumgs_xi_.jl:12\nin expression starting at\
    \ /tmp/tmpumgs_xi_.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # initialize sum of odds to 0\n    sum_odds = 0\n    # loop over the indices\n\
    \    for i in 2:2:length(lst)\n        # if the element is odd, add it to the\
    \ sum of odds\n        if isodd(lst[i])\n            sum_odds += lst[i]\n    \
    \    end\n    end\n    return sum_odds\nend\nusing Test\n\n@testset begin\n\n\
    candidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn3mjqauy.jl:26\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn3mjqauy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn3mjqauy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn3mjqauy.jl:27\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn3mjqauy.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn3mjqauy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn3mjqauy.jl:28\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn3mjqauy.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn3mjqauy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn3mjqauy.jl:29\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn3mjqauy.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn3mjqauy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn3mjqauy.jl:31\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn3mjqauy.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    ret = 0\n    for i in enumerate(lst)\n        if i[1] % 2 == 0 && i[2] %\
    \ 2 != 0\n            ret += i[2]\n        end\n    end\n    return ret\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8,\
    \ 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyg1h1ul6.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyg1h1ul6.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyg1h1ul6.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpyg1h1ul6.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyg1h1ul6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyg1h1ul6.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpyg1h1ul6.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyg1h1ul6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyg1h1ul6.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpyg1h1ul6.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyg1h1ul6.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyg1h1ul6.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpyg1h1ul6.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyg1h1ul6.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6sqe1haz.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6sqe1haz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6sqe1haz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6sqe1haz.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6sqe1haz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6sqe1haz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6sqe1haz.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6sqe1haz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6sqe1haz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6sqe1haz.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6sqe1haz.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6sqe1haz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6sqe1haz.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6sqe1haz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    \n    \n    \n    \n    \nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoelsfqy5.jl:21\n  Test threw exception\n\
    \  Expression: candidate([5, 8, 7, 1]) == 12\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmpoelsfqy5.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoelsfqy5.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoelsfqy5.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpoelsfqy5.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([3, 3, 3, 3, 3]) == 9\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmpoelsfqy5.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoelsfqy5.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoelsfqy5.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # define the variable to store the result\n    result = 0\nusing Test\n\n\
    @testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\
    \t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321])\
    \ == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\
    \t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) ==\
    \ 3)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp3cs8yw8o.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3cs8yw8o.jl:1\n\
    in expression starting at /tmp/tmp3cs8yw8o.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    evenlst=lst[2:2:end]\n    oddlst=evenlst[odd.(evenlst)]\n    return sum(oddlst)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplo9prdzp.jl:19\n  Test threw exception\n\
    \  Expression: candidate([5, 8, 7, 1]) == 12\n  UndefVarError: odd not defined\n\
    \  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmplo9prdzp.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplo9prdzp.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplo9prdzp.jl:18\ntest set:\
    \ Error During Test at /tmp/tmplo9prdzp.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([3, 3, 3, 3, 3]) == 9\n  UndefVarError: odd not defined\n  Stacktrace:\n\
    \   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmplo9prdzp.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplo9prdzp.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplo9prdzp.jl:18\ntest set:\
    \ Error During Test at /tmp/tmplo9prdzp.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([30, 13, 24, 321]) == 0\n  UndefVarError: odd not defined\n  Stacktrace:\n\
    \   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmplo9prdzp.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplo9prdzp.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplo9prdzp.jl:18\ntest set:\
    \ Error During Test at /tmp/tmplo9prdzp.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([5, 9]) == 5\n  UndefVarError: odd not defined\n  Stacktrace:\n  \
    \ [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmplo9prdzp.jl:11\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplo9prdzp.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    for (i, l) in enumerate(lst)\n        if i % 2 == 0 && l % 2\
    \ != 0\n            sum += l\n        end\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7,\
    \ 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3qub9xf1.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3qub9xf1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3qub9xf1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3qub9xf1.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3qub9xf1.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3qub9xf1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3qub9xf1.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3qub9xf1.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3qub9xf1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3qub9xf1.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3qub9xf1.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3qub9xf1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3qub9xf1.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3qub9xf1.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # Your code here\n    \n    return 0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc9pqhm37.jl:19\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 0 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9pqhm37.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9pqhm37.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpc9pqhm37.jl:20\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9pqhm37.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9pqhm37.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpc9pqhm37.jl:22\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9pqhm37.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9pqhm37.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpc9pqhm37.jl:24\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 0 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9pqhm37.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9pqhm37.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpc9pqhm37.jl:25\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] "
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc9pqhm37.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \     @assert length(lst) != 0 \"A non-empty list is required\"\n     return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0pgkmphe.jl:18\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0pgkmphe.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0pgkmphe.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp0pgkmphe.jl:19\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0pgkmphe.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0pgkmphe.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp0pgkmphe.jl:20\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0pgkmphe.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0pgkmphe.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp0pgkmphe.jl:21\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0pgkmphe.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0pgkmphe.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp0pgkmphe.jl:22\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0pgkmphe.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp82ddy9hn.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp82ddy9hn.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp82ddy9hn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp82ddy9hn.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp82ddy9hn.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp82ddy9hn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp82ddy9hn.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp82ddy9hn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp82ddy9hn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp82ddy9hn.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp82ddy9hn.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp82ddy9hn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp82ddy9hn.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp82ddy9hn.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    odds_sum = 0\n    for i in 2:2:length(lst)\n        odds_sum += lst[i]\n\
    \    end\n    return odds_sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu202m6h3.jl:21\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu202m6h3.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu202m6h3.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpu202m6h3.jl:22\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu202m6h3.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu202m6h3.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpu202m6h3.jl:23\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu202m6h3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu202m6h3.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpu202m6h3.jl:24\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu202m6h3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu202m6h3.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpu202m6h3.jl:25\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu202m6h3.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    \n    odds = filter(x -> isodd(x), lst) #Create list of only odd numbers\n\
    \    evens = filter(x -> iseven(x), lst) #Create list of only even numbers\n \
    \   odds_at_even_pos = filter(x -> iseven(x), odds) #Create list of only odds\
    \ that are at even position\n    sum(odds_at_even_pos) #Return sum of odds at\
    \ even positions\n    \nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\
    \t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) ==\
    \ 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) ==\
    \ 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32])\
    \ == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9r7jk2k6.jl:22\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 0 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9r7jk2k6.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9r7jk2k6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp9r7jk2k6.jl:23\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9r7jk2k6.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9r7jk2k6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp9r7jk2k6.jl:25\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9r7jk2k6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9r7jk2k6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp9r7jk2k6.jl:27\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 0 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9r7jk2k6.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9r7jk2k6.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp9r7jk2k6.jl:28\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] "
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9r7jk2k6.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    output = 0\n    for i = 1:2:length(lst)\n        output += lst[i]\n    end\n\
    \    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\
    \t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) ==\
    \ 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) ==\
    \ 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32])\
    \ == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph5wetx25.jl:23\n  Expression: candidate([30,\
    \ 13, 24, 321]) == 0\n   Evaluated: 54 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph5wetx25.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph5wetx25.jl:20\ntest set: Test\
    \ Failed at /tmp/tmph5wetx25.jl:25\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph5wetx25.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph5wetx25.jl:20\ntest set: Test\
    \ Failed at /tmp/tmph5wetx25.jl:26\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 53 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph5wetx25.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph5wetx25.jl:20\ntest set: Test\
    \ Failed at /tmp/tmph5wetx25.jl:27\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 5 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph5wetx25.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph5wetx25.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph5wetx25.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    \n    # Intialize the sum of the odd element.\n    sum_of_odd_element = 0\n\
    \    \n    # Loop through the vector\n    for i in 1:2:length(lst)\n        if(lst[i]\
    \ % 2 != 0)\n            sum_of_odd_element += lst[i]\n        end\n    end\n\
    \    return sum_of_odd_element\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    out = 0\n    for index in 1:2:length(lst)\n        if index % 2 == 0\n  \
    \          out += lst[index]\n        end\n    end\n    return out\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7,\
    \ 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0_qhves7.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 0 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0_qhves7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0_qhves7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0_qhves7.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0_qhves7.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0_qhves7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0_qhves7.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0_qhves7.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0_qhves7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0_qhves7.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 0 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0_qhves7.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0_qhves7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp0_qhves7.jl:29\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] "
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0_qhves7.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3gbx_22u.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gbx_22u.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gbx_22u.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3gbx_22u.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gbx_22u.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gbx_22u.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3gbx_22u.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gbx_22u.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gbx_22u.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3gbx_22u.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gbx_22u.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gbx_22u.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3gbx_22u.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3gbx_22u.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4__4hbxy.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4__4hbxy.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4__4hbxy.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4__4hbxy.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4__4hbxy.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4__4hbxy.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4__4hbxy.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4__4hbxy.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4__4hbxy.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4__4hbxy.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4__4hbxy.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4__4hbxy.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4__4hbxy.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4__4hbxy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum::Int64 = 0\n    for (i,val) in enumerate(lst)\n        if i % 2 == 0\
    \ && val % 2 != 0\n            sum += val\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoxm_wjjs.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoxm_wjjs.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoxm_wjjs.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpoxm_wjjs.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoxm_wjjs.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoxm_wjjs.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpoxm_wjjs.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoxm_wjjs.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoxm_wjjs.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpoxm_wjjs.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoxm_wjjs.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoxm_wjjs.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpoxm_wjjs.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoxm_wjjs.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    total = 0\n    for (i, n) in enumerate(lst)\n        if i % 2 == 0 && n %\
    \ 2 != 0\n            total += n\n        end\n    end\n    return total\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8,\
    \ 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp67zagtft.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp67zagtft.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp67zagtft.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp67zagtft.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp67zagtft.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp67zagtft.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp67zagtft.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp67zagtft.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp67zagtft.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp67zagtft.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp67zagtft.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp67zagtft.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp67zagtft.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp67zagtft.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum=0\n    for i in eachindex(lst)\n        if i%2==0 && lst[i]%2!=0\n  \
    \         sum=sum+lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) ==\
    \ 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24,\
    \ 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) ==\
    \ 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2,\
    \ 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5juwzpfp.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5juwzpfp.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5juwzpfp.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5juwzpfp.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5juwzpfp.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5juwzpfp.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5juwzpfp.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5juwzpfp.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5juwzpfp.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5juwzpfp.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5juwzpfp.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5juwzpfp.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5juwzpfp.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5juwzpfp.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    odd = 1:2:length(lst)\n    even = lst[odd]\n    sum(even)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) ==\
    \ 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24,\
    \ 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) ==\
    \ 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2,\
    \ 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6xcf3oxp.jl:21\n  Expression: candidate([30,\
    \ 13, 24, 321]) == 0\n   Evaluated: 54 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xcf3oxp.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xcf3oxp.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6xcf3oxp.jl:23\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xcf3oxp.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xcf3oxp.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6xcf3oxp.jl:24\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 53 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xcf3oxp.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xcf3oxp.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6xcf3oxp.jl:25\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 5 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xcf3oxp.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xcf3oxp.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6xcf3oxp.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # Your code here\n    sum(lst[2:2:end])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2tflvfwg.jl:18\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2tflvfwg.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2tflvfwg.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp2tflvfwg.jl:19\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2tflvfwg.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2tflvfwg.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp2tflvfwg.jl:20\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2tflvfwg.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2tflvfwg.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp2tflvfwg.jl:21\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2tflvfwg.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2tflvfwg.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp2tflvfwg.jl:22\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2tflvfwg.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum(lst[1:2:end])\nend\n \n \n \n \n@test solution([5, 8, 7, 1]) == 12\n\
    @test solution([3, 3, 3, 3, 3]) == 9\n@test solution([30, 13, 24, 321]) == 0\n\
    using Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8,\
    \ 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmpvjz2b4vc.jl:16\nin expression starting at /tmp/tmpvjz2b4vc.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    @inbounds for i in 2:2:length(lst)\n        if i % 2 == 0\n\
    \            sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) ==\
    \ 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24,\
    \ 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) ==\
    \ 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2,\
    \ 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8zxlsbu5.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8zxlsbu5.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8zxlsbu5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp8zxlsbu5.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8zxlsbu5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8zxlsbu5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp8zxlsbu5.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8zxlsbu5.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8zxlsbu5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp8zxlsbu5.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8zxlsbu5.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8zxlsbu5.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp8zxlsbu5.jl:27\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8zxlsbu5.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    #Your Code Here\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfu9izf37.jl:18\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 0 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfu9izf37.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfu9izf37.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpfu9izf37.jl:19\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfu9izf37.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfu9izf37.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpfu9izf37.jl:21\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfu9izf37.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfu9izf37.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpfu9izf37.jl:23\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 0 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfu9izf37.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfu9izf37.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpfu9izf37.jl:24\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] "
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfu9izf37.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    ## fill in code\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\
    \t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) ==\
    \ 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) ==\
    \ 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32])\
    \ == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwoitckyk.jl:17\n  Test threw exception\n\
    \  Expression: candidate([5, 8, 7, 1]) == 12\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmpwoitckyk.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoitckyk.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwoitckyk.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpwoitckyk.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([3, 3, 3, 3, 3]) == 9\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmpwoitckyk.jl:11\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwoitckyk.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwoitckyk.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \   sum = 0\n   for i = 2:2:length(lst)\n       if lst[i] % 2 != 0\n         \
    \  sum += lst[i]\n       end\n   end\n   return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps8wg1twv.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps8wg1twv.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps8wg1twv.jl:22\ntest set: Test\
    \ Failed at /tmp/tmps8wg1twv.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps8wg1twv.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps8wg1twv.jl:22\ntest set: Test\
    \ Failed at /tmp/tmps8wg1twv.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps8wg1twv.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps8wg1twv.jl:22\ntest set: Test\
    \ Failed at /tmp/tmps8wg1twv.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps8wg1twv.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps8wg1twv.jl:22\ntest set: Test\
    \ Failed at /tmp/tmps8wg1twv.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps8wg1twv.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    ans = 0\n    for i = 2:2:length(lst)\n        if lst[i] % 2 != 0\n      \
    \      ans += lst[i]\n        end\n    end\n    return ans\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\
    \t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321])\
    \ == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\
    \t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) ==\
    \ 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppff26ty1.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppff26ty1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppff26ty1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmppff26ty1.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppff26ty1.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppff26ty1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmppff26ty1.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppff26ty1.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppff26ty1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmppff26ty1.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppff26ty1.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppff26ty1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmppff26ty1.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppff26ty1.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    nums = []\n    for (i,v) in enumerate(lst)\n        if i % 2 == 0 && v %\
    \ 2 != 0\n            push!(nums, v)\n        end\n    end\n    return sum(nums)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4st0tc_3.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4st0tc_3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4st0tc_3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4st0tc_3.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4st0tc_3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4st0tc_3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4st0tc_3.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4st0tc_3.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4st0tc_3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4st0tc_3.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4st0tc_3.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4st0tc_3.jl:22\ntest set: Error\
    \ During Test at /tmp/tmp4st0tc_3.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([2, 4, 8]) == 0\n  MethodError: no method matching zero(::Type{Any})\n\
    \  Closest candidates are:\n    zero(::Type{Union{Missing, T}}) where T"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 6 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4st0tc_3.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    #Your code is here\nend \n \nprintln(solution([5, 8, 7, 1]))\nusing Test\n\
    \n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) ==\
    \ 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24,\
    \ 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) ==\
    \ 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2,\
    \ 9]) == 3)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\nClosest candidates are:\n  convert(::Type{T}, !Matched::T)\
    \ where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \  convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \  convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \  ...\nStacktrace:\n [1] solution(lst::Vector{Int64})\n   @ Main /tmp/tmpuv3tsepg.jl:11\n\
    \ [2] top-level scope\n   @ /tmp/tmpuv3tsepg.jl:13\nin expression starting at\
    \ /tmp/tmpuv3tsepg.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum=0\n    for i=1:2:length(lst)\n        if lst[i]%2!=0\n            sum+=lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \  sum([lst[i] for i in 2:2:length(lst) if lst[i] % 2 != 0])\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) ==\
    \ 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24,\
    \ 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) ==\
    \ 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2,\
    \ 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpykc0auci.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpykc0auci.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpykc0auci.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpykc0auci.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpykc0auci.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpykc0auci.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpykc0auci.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpykc0auci.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpykc0auci.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpykc0auci.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpykc0auci.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpykc0auci.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpykc0auci.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpykc0auci.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # Your solution\n    return sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy9g2b5jg.jl:18\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9g2b5jg.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9g2b5jg.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpy9g2b5jg.jl:19\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9g2b5jg.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9g2b5jg.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpy9g2b5jg.jl:20\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9g2b5jg.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9g2b5jg.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpy9g2b5jg.jl:21\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy9g2b5jg.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy9g2b5jg.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpy9g2b5jg.jl:23\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy9g2b5jg.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum([lst[i] for i in 2:2:length(lst) if i % 2 == 0])\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\
    \t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321])\
    \ == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\
    \t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) ==\
    \ 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnmqpfm9d.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnmqpfm9d.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnmqpfm9d.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpnmqpfm9d.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnmqpfm9d.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnmqpfm9d.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpnmqpfm9d.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnmqpfm9d.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnmqpfm9d.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpnmqpfm9d.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnmqpfm9d.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnmqpfm9d.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpnmqpfm9d.jl:21\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnmqpfm9d.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # Get all the even positions\n    even_indices = [i for i in 1:length(lst)\
    \ if i % 2 == 0]\n    # Get all the odd numbers\n    odd_numbers = [i for i in\
    \ lst if i % 2 != 0]\n    # Return the sum of all odd numbers in even positions\n\
    \    return sum(odd_numbers[even_indices])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxgph_4c8.jl:22\n  Test threw exception\n\
    \  Expression: candidate([5, 8, 7, 1]) == 12\n  BoundsError: attempt to access\
    \ 3-element Vector{Int64} at index [[2, 4]]\n  Stacktrace:\n   [1] throw_boundserror(A::Vector{Int64},\
    \ I::Tuple{Vector{Int64}})\n     @ Base ./abstractarray.jl:691\n   [2] checkbounds\n\
    \     @ ./abstractarray.jl:656 [inlined]\n   [3] _getindex\n     @ ./multidimensional.jl:838\
    \ [inlined]\n   [4] getindex\n     @ ./abstractarray.jl:1218 [inlined]\n   [5]\
    \ solution(lst::Vector{Int64})\n     @ Main /tmp/tmpxgph_4c8.jl:15\n   [6] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpxgph_4c8.jl:22 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpxgph_4c8.jl:21\ntest set:\
    \ Test Failed at /tmp/tmpxgph_4c8.jl:23\n  Expression: candidate([3, 3, 3, 3,\
    \ 3]) == 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxgph_4c8.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxgph_4c8.jl:21\ntest set: Error\
    \ During Test at /tmp/tmpxgph_4c8.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([30, 13, 24, 321]) == 0\n  BoundsError: attempt to access 2-element\
    \ Vector{Int64} at index [[2, 4]]\n  Stacktrace:\n   [1] throw_boundserror(A::Vector{Int64},\
    \ I::Tuple{Vector{Int64}})\n     @ Base ./abstractarray.jl:691\n   [2] checkbounds\n\
    \     @ ./abstractarray.jl:656 [inlined]\n   [3] _getindex\n     @ ./multidimensional.jl:838\
    \ [inlined]\n   [4] getindex\n     @ ./abstractarray.jl:1218 [inlined]\n   [5]\
    \ solution(lst::Vector{Int64})\n     @ Main /tmp/tmpxgph_4c8.jl:15\n   [6] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro e"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxgph_4c8.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # Your solution goes here\n   \n    s=0\n    for i=1:2:length(lst)\n    \
    \    s=s+lst[i]\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprotscfq3.jl:25\n  Expression: candidate([30,\
    \ 13, 24, 321]) == 0\n   Evaluated: 54 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprotscfq3.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprotscfq3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprotscfq3.jl:27\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprotscfq3.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprotscfq3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprotscfq3.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 53 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprotscfq3.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprotscfq3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprotscfq3.jl:29\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 5 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprotscfq3.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprotscfq3.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprotscfq3.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    s = 0\n    for (i, x) in enumerate(lst)\n        if mod(i, 2) == 0\n    \
    \        s += x if x % 2 == 1 else 0\n        end\n    end\n    return s\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8,\
    \ 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"if\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwutd_y81.jl:13\nin expression starting at /tmp/tmpwutd_y81.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    \n    return sum(lst[2:2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprmk07a2o.jl:18\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprmk07a2o.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprmk07a2o.jl:17\ntest set: Test\
    \ Failed at /tmp/tmprmk07a2o.jl:19\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprmk07a2o.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprmk07a2o.jl:17\ntest set: Test\
    \ Failed at /tmp/tmprmk07a2o.jl:20\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprmk07a2o.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprmk07a2o.jl:17\ntest set: Test\
    \ Failed at /tmp/tmprmk07a2o.jl:21\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprmk07a2o.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprmk07a2o.jl:17\ntest set: Test\
    \ Failed at /tmp/tmprmk07a2o.jl:22\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprmk07a2o.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    s=0\n    for i in 1:2:length(lst)\n        if lst[i]%2!=0\n            s+=lst[i]\n\
    \        end\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \  ans = 0\n  for i in 1:2:length(lst)\n    if mod(lst[i],2) == 1\n      ans +=\
    \ lst[i]\n    end\n  end\n  return ans\nend\nusing Test\n\n@testset begin\n\n\
    candidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxa37bswr.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxa37bswr.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxa37bswr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxa37bswr.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxa37bswr.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxa37bswr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxa37bswr.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxa37bswr.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxa37bswr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxa37bswr.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxa37bswr.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxa37bswr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxa37bswr.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxa37bswr.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    for i in 1:2:length(lst)\n        if lst[i] % 2 != 0\n     \
    \       sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) ==\
    \ 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24,\
    \ 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) ==\
    \ 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2,\
    \ 9]) == 3)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    odd_elements=filter(x->x%2!=0,lst)\n    even_elements=filter(x->x%2==0,lst)\n\
    \    even_positions=filter(x->x%2==0,1:length(odd_elements))\n    odd_even_positions=odd_elements[even_positions]\n\
    \    sum(odd_even_positions)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3,\
    \ 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_do6a7bu.jl:21\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 7 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_do6a7bu.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_do6a7bu.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_do6a7bu.jl:22\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_do6a7bu.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_do6a7bu.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_do6a7bu.jl:23\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 321 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_do6a7bu.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_do6a7bu.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_do6a7bu.jl:24\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_do6a7bu.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_do6a7bu.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_do6a7bu.jl:27\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 13 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_do6a7bu.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    oddEvenSum(lst, 0, 1)\nend\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\
    \t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) ==\
    \ 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) ==\
    \ 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32])\
    \ == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppxk79y8m.jl:17\n  Test threw exception\n\
    \  Expression: candidate([5, 8, 7, 1]) == 12\n  UndefVarError: oddEvenSum not\
    \ defined\n  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmppxk79y8m.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppxk79y8m.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppxk79y8m.jl:16\ntest set:\
    \ Error During Test at /tmp/tmppxk79y8m.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([3, 3, 3, 3, 3]) == 9\n  UndefVarError: oddEvenSum not defined\n \
    \ Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmppxk79y8m.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppxk79y8m.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppxk79y8m.jl:16\ntest set:\
    \ Error During Test at /tmp/tmppxk79y8m.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([30, 13, 24, 321]) == 0\n  UndefVarError: oddEvenSum not defined\n\
    \  Stacktrace:\n   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmppxk79y8m.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppxk79y8m.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppxk79y8m.jl:16\ntest set:\
    \ Error During Test at /tmp/tmppxk79y8m.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([5, 9]) == 5\n  UndefVarError: oddEvenSum not defined\n  Stacktrace:\n\
    \   [1] solution(lst::Vector{Int64})\n     @ Main /tmp/tmppxk79y8m.jl:10\n   [2]\
    \ macro expansion\n     @ /share"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppxk79y8m.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    n = lst[1]\n    for i in 2:length(lst)\n        if i % 2 == 0\n         \
    \   n += lst[i]\n        end\n    end\n    return n\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnlpqg3bb.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 14 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnlpqg3bb.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnlpqg3bb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpnlpqg3bb.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 364 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnlpqg3bb.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnlpqg3bb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpnlpqg3bb.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 14 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnlpqg3bb.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnlpqg3bb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpnlpqg3bb.jl:27\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 6 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnlpqg3bb.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnlpqg3bb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpnlpqg3bb.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 75 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n ["
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnlpqg3bb.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # Your solution goes here\n    res = 0\n    j = 2\n    for i in lst\n   \
    \     if j%2==0 && i%2!=0\n            res += i\n        end\n        j += 1\n\
    \    end\n    return res\nend\nprintln(solution([5, 8, 7, 1]))\nusing Test\n\n\
    @testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\
    \t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321])\
    \ == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\
    \t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) ==\
    \ 3)\nend\n"
  stdout: ''
  stderr: "12\nTest Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[filter(x->x%2==0, eachindex(lst))])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5fm0ziog.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 9 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5fm0ziog.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5fm0ziog.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp5fm0ziog.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5fm0ziog.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5fm0ziog.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp5fm0ziog.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5fm0ziog.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5fm0ziog.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp5fm0ziog.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5fm0ziog.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5fm0ziog.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp5fm0ziog.jl:21\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 4 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5fm0ziog.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum([v for (i,v) in enumerate(lst) if i%2 == 0 && v%2 != 0])\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7,\
    \ 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxbdnk3dt.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxbdnk3dt.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxbdnk3dt.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxbdnk3dt.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxbdnk3dt.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxbdnk3dt.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxbdnk3dt.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxbdnk3dt.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxbdnk3dt.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxbdnk3dt.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxbdnk3dt.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxbdnk3dt.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxbdnk3dt.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxbdnk3dt.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    total = 0\n    i = 1\n    while i <= length(lst)\n        if i % 2 == 0\n\
    \            if lst[i] % 2 != 0\n                total += lst[i]\n           \
    \ end\n        end\n        i += 1\n    end\n    return total\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) ==\
    \ 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24,\
    \ 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2, 4, 8]) ==\
    \ 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3, 13, 2,\
    \ 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmevj9hfi.jl:27\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmevj9hfi.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmevj9hfi.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpmevj9hfi.jl:28\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmevj9hfi.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmevj9hfi.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpmevj9hfi.jl:29\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmevj9hfi.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmevj9hfi.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpmevj9hfi.jl:30\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmevj9hfi.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmevj9hfi.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpmevj9hfi.jl:32\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmevj9hfi.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    sum = 0\n    for (i, n) in enumerate(lst)\n        if i % 2 == 0 && n % 2\
    \ != 0\n            sum += n\n        end\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7,\
    \ 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjafdlqln.jl:23\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjafdlqln.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjafdlqln.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpjafdlqln.jl:24\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjafdlqln.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjafdlqln.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpjafdlqln.jl:25\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjafdlqln.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjafdlqln.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpjafdlqln.jl:26\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjafdlqln.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjafdlqln.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpjafdlqln.jl:28\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjafdlqln.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    \n    odds = [lst[1:2:end]...] # vectorized solution \n    return sum(odds)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5,\
    \ 8, 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4lfjod6w.jl:21\n  Expression: candidate([30,\
    \ 13, 24, 321]) == 0\n   Evaluated: 54 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4lfjod6w.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4lfjod6w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp4lfjod6w.jl:23\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4lfjod6w.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4lfjod6w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp4lfjod6w.jl:24\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 53 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4lfjod6w.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4lfjod6w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp4lfjod6w.jl:25\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 5 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4lfjod6w.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4lfjod6w.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4lfjod6w.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    # complete the function\n    sum([lst[i] for i in 1:2:length(lst)])\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solution;\n\t@test(candidate([5, 8,\
    \ 7, 1]) == 12)\n\t@test(candidate([3, 3, 3, 3, 3]) == 9)\n\t@test(candidate([30,\
    \ 13, 24, 321]) == 0)\n\t@test(candidate([5, 9]) == 5)\n\t@test(candidate([2,\
    \ 4, 8]) == 0)\n\t@test(candidate([30, 13, 23, 32]) == 23)\n\t@test(candidate([3,\
    \ 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphq6qq4fm.jl:20\n  Expression: candidate([30,\
    \ 13, 24, 321]) == 0\n   Evaluated: 54 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphq6qq4fm.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphq6qq4fm.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphq6qq4fm.jl:22\n  Expression: candidate([2, 4, 8]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphq6qq4fm.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphq6qq4fm.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphq6qq4fm.jl:23\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 53 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphq6qq4fm.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphq6qq4fm.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphq6qq4fm.jl:24\n  Expression: candidate([3, 13, 2, 9]) ==\
    \ 3\n   Evaluated: 5 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphq6qq4fm.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphq6qq4fm.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphq6qq4fm.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n    \n\n    Examples\n    solution([5,\
    \ 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13,\
    \ 24, 321]) ==>0\n    \"\"\"\nfunction solution(lst::Vector{Int64})::Int64 \n\
    \    return sum(lst[2:2:end][lst[2:2:end] .% 2 .!= 0])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solution;\n\t@test(candidate([5, 8, 7, 1]) == 12)\n\t@test(candidate([3,\
    \ 3, 3, 3, 3]) == 9)\n\t@test(candidate([30, 13, 24, 321]) == 0)\n\t@test(candidate([5,\
    \ 9]) == 5)\n\t@test(candidate([2, 4, 8]) == 0)\n\t@test(candidate([30, 13, 23,\
    \ 32]) == 23)\n\t@test(candidate([3, 13, 2, 9]) == 3)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiy3to9hb.jl:17\n  Expression: candidate([5,\
    \ 8, 7, 1]) == 12\n   Evaluated: 1 == 12\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiy3to9hb.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiy3to9hb.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpiy3to9hb.jl:18\n  Expression: candidate([3, 3, 3, 3, 3]) ==\
    \ 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiy3to9hb.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiy3to9hb.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpiy3to9hb.jl:19\n  Expression: candidate([30, 13, 24, 321])\
    \ == 0\n   Evaluated: 334 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiy3to9hb.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiy3to9hb.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpiy3to9hb.jl:20\n  Expression: candidate([5, 9]) == 5\n   Evaluated:\
    \ 9 == 5\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiy3to9hb.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiy3to9hb.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpiy3to9hb.jl:22\n  Expression: candidate([30, 13, 23, 32])\
    \ == 23\n   Evaluated: 13 == 23\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiy3to9hb.jl:14\n"
  exit_code: 1
  status: SyntaxError

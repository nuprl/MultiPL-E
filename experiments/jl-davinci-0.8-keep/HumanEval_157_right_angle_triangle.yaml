name: HumanEval_157_right_angle_triangle
language: jl
prompt: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return True\
  \ if the three\n    sides form a right-angled triangle, False otherwise.\n    A\
  \ right-angled triangle is a triangle in which one angle is right angle or \n  \
  \  90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
  \ 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64, b::Int64,\
  \ c::Int64)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
  \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6,\
  \ 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25)\
  \ == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13)\
  \ == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73)\
  \ == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) ==\
  \ false)\nend\n"
completions: ["    \"\"\"\n    Return true if triangle is right angled else return\
    \ false\n    \"\"\"\n    if a > 0 && b > 0 && c > 0 && a != b && b != c && a !=\
    \ c\n        hyp_list = []\n        push!(hyp_list, a)\n        push!(hyp_list,\
    \ b)\n        push!(hyp_list, c)\n        # sort hyp_list\n        hyp_list =\
    \ sort(hyp_list)\n        a = hyp_list[1]\n        b = hyp_list[2]\n        c\
    \ = hyp_list[3]\n        return (a^2 + b^2 == c^2)\n    else\n        return false\n\
    \    end\nend", "    # Write your code here\n    c2 = c^2\n    b2 = b^2\n    a2\
    \ = a^2\n    if (a2 + b2 == c2) || (a2 + c2 == b2) || (b2 + c2 == a2)\n      \
    \  return true\n    else\n        return false\n    end\nend", "    # Your code\
    \ goes here.\nend", "    c2 = c * c\n    a2 = a * a\n    b2 = b * b\n    if (c2\
    \ == a2 + b2) || (a2 == c2 + b2) || (b2 == c2 + a2)\n        return true\n   \
    \ else\n        return false\n    end\nend", "    # You code here\n    # Hint:\
    \ use max() function, square root function, square function\n    if a^2 + b^2\
    \ == c^2 || a^2 + c^2 == b^2 || b^2 + c^2 == a^2\n        return true\n    else\n\
    \        return false\n    end\nend", "    a == maximum([a, b, c]) ? false : a^2\
    \ + b^2 == c^2\nend", "    # Your code here\n    return a^2 + b^2 == c^2\nend",
  "    return (a^2 + b^2 == c^2) | (a^2 + c^2 == b^2) | (b^2 + c^2 == a^2)\nend\n\
    @assert right_angle_triangle(3, 4, 5) == true\n@assert right_angle_triangle(1,\
    \ 2, 3) == false\n ", "    \nend", "    return (a^2 + b^2 == c^2) || (a^2 + c^2\
    \ == b^2) || (b^2 + c^2 == a^2)\nend", "    #     if a, b, c are the sides of\
    \ right angle \n    #     triangle then a*a + b*b = c*c.\n    if a*a + b*b ==\
    \ c*c || a*a + c*c == b*b || b*b + c*c == a*a\n        return true\n    else\n\
    \        return false\n    end\nend", "    \"\"\"\n    Correct:\n    3^2 + 4^2\
    \ = 5^2\n    \"\"\"\n    @assert a^2 + b^2 == c^2 \"Doesn't satisfy Pythagoras'\
    \ Theorem\"\n    return true\nend", "    \n    if (a^2 + b^2 == c^2) || (b^2 +\
    \ c^2 == a^2) || (a^2 + c^2 == b^2)\n        return true\n    else\n        return\
    \ false\n    end\nend", "    (a^2 + b^2 == c^2) || (b^2 + c^2 == a^2) || (c^2\
    \ + a^2 == b^2)\nend", "    if a^2 == b^2 + c^2 || b^2 == a^2 + c^2 || c^2 ==\
    \ a^2 + b^2\n        return true\n    else\n        return false\n    end\nend",
  "    if (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\n       \
    \ return true\n    else\n        return false\n    end\nend", "    if ( (c^2 ==\
    \ a^2 + b^2) || (b^2 == a^2 + c^2) || (a^2 == b^2 + c^2) )\n        return true\n\
    \    else\n        return false\n    end\nend", "    if (a*a + b*b == c*c) ||\
    \ (a*a + c*c == b*b) || (b*b + c*c == a*a)\n        return true\n    else\n  \
    \      return false\n    end\nend", "    a, b, c = sort([a, b, c])\n    c^2 ==\
    \ a^2 + b^2\nend", "    a, b, c = sort([a, b, c])\n    a^2 + b^2 == c^2\nend",
  "    # should return a boolean value\n    \"\"\"\n    # Write your code here\n \
    \   \"\"\"\nend", "    return c^2 == a^2 + b^2\nend", "    return (a^2 + b^2 ==\
    \ c^2)\nend", "    return (a < b + c) && (b < a + c) && (c < a + b) && (a^2 +\
    \ b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\nend", "    if (a^2\
    \ + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\n        return true\n\
    \    else\n        return false\n    end\nend", "    if a + b &gt; c &amp;&amp;\
    \ a + c &gt; b &amp;&amp; b + c &gt; a\n        a_sq = a^2\n        b_sq = b^2\n\
    \        c_sq = c^2\n        if a_sq + b_sq == c_sq || a_sq + c_sq == b_sq ||\
    \ b_sq + c_sq == a_sq\n            return true\n        end\n    end\n    return\
    \ false\nend", "    if a == 0 || b == 0 || c == 0\n        error(\"All sides must\
    \ be greater than 0\")\n    end\n    a2 = a*a\n    b2 = b*b\n    c2 = c*c\n  \
    \  if a2 + b2 == c2\n        return true\n    elseif a2 + c2 == b2\n        return\
    \ true\n    elseif b2 + c2 == a2\n        return true\n    else\n        return\
    \ false\n    end\nend", "    if a + b + c == 180 && a == 90 || b == 90 || c ==\
    \ 90\n        return true\n    else\n        return false\n    end\nend\n\"\"\"\
    \n    Given a number, return the sum of the squares of all numbers from 1 up to\
    \ \n    and including that number.\n    Example:\n    square_of_sum(1) == 1\n\
    \    square_of_sum(4) == 30\n    square_of_sum(12) == 650\n    \"\"\"", "    return\
    \ (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\nend", "    return\
    \ (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\nend", "    #first\
    \ check if the triangle is valid\n    if a == 0 || b == 0 || c == 0\n        return\
    \ false\n    end\n    isvalid(a, b, c) = a + b > c && a + c > b && b + c > a\n\
    \    if !isvalid(a, b, c)\n        return false\n    end\n    #now check if it\
    \ is a right-angled triangle\n    #while the hypotenuse (longest side) will be\
    \ c\n    #since a + b > c, we can assume a > c && b > c\n    rightangle(a, b,\
    \ c) = a^2 + b^2 == c^2\n    rightangle(a, b, c) || rightangle(a, c, b) || rightangle(b,\
    \ c, a)\nend", "    (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 ==\
    \ a^2)\nend", "    #Your code here\n    return true\nend", "    # calculate the\
    \ sides\n    sides = [a, b, c]\n    minimum(sides) == sqrt(maximum(sides)^2 -\
    \ median(sides)^2)\nend", "    return (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2)\
    \ || (b^2 + c^2 == a^2)\nend", "    # angles in the triangle sum up to 180 degrees\n\
    \    # Pythagorean Theorem: a^2 + b^2 = c^2\n    # a^2 + b^2 = (c/2)^2\n    a_sq,\
    \ b_sq, c_sq = a^2, b^2, c^2\n    right_triangle = false\n    if a_sq + b_sq ==\
    \ c_sq\n        right_triangle = true\n    end\n    return right_triangle\nend",
  "    if a == b == c == 0\n        return false\n    end\n    if a == b == c == 1\n\
    \        return false\n    end\n    if a == b == c\n        return false\n   \
    \ end\n    if a == b || b == c || a == c\n        return false\n    end\n    if\
    \ a < b\n        a, b = b, a\n    end\n    if a < c\n        a, c = c, a\n   \
    \ end\n    if b < c\n        b, c = c, b\n    end\n    c^2 + b^2 == a^2\nend",
  "  if a == c == b\n    return true\n  elseif a == c || a == b || b == c\n    return\
    \ false\n  else\n    return (a^2 + b^2 == c^2) || (b^2 + c^2 == a^2) || (a^2 +\
    \ c^2 == b^2)\n  end\nend", "    # \"max(a, b, c) == c\" is the Pythagorean condition\n\
    \    return (max(a, b, c) == c) & (a^2 + b^2 == c^2)\nend", "    if a+b>c && a+c>b\
    \ && b+c>a\n        if a<b<c\n            a^2+b^2==c^2\n        elseif a<c<b\n\
    \            a^2+c^2==b^2\n        elseif b<a<c\n            b^2+a^2==c^2\n  \
    \      elseif b<c<a\n            b^2+c^2==a^2\n        elseif c<a<b\n        \
    \    c^2+a^2==b^2\n        elseif c<b<a\n            c^2+b^2==a^2\n        end\n\
    \    else\n        false\n    end\nend", "    \"\"\"\n    Determines if the given\
    \ lengths form a right angle triangle\n    \"\"\"\n    if a < b\n        a, b\
    \ = b, a\n    end\n    if a < c\n        a, c = c, a\n    end\n    a**2 == b**2\
    \ + c**2\nend", "    if a > b && a > c\n        if a^2 == b^2 + c^2\n        \
    \    return true\n        end\n    elseif b > a && b > c\n        if b^2 == a^2\
    \ + c^2\n            return true\n        end\n    else\n        if c^2 == a^2\
    \ + b^2\n            return true\n        end\n    end\n    return false\nend",
  "    if a > b\n        a, b = b, a\n    end\n    return a^2 + b^2 == c^2\nend",
  "    if  (a^2)+(b^2) == (c^2)\n        return true\n    elseif (a^2)+(c^2) == (b^2)\n\
    \        return true\n    elseif (b^2)+(c^2) == (a^2)\n        return true\n \
    \   else\n        return false\n    end\nend", "    # Check if any of the three\
    \ lengths is greater than the sum of the other \n    # two sides. If so, then\
    \ return False\n    if a > b + c || b > a + c || c > a + b\n        return false\n\
    \    end\n    # Arrange the three sides in ascending order: a, b, c\n    if a\
    \ > b\n        a, b = b, a\n    end\n    if b > c\n        b, c = c, b\n    end\n\
    \    if a > b\n        a, b = b, a\n    end\n    # a is the shortest side, c is\
    \ the longest side\n    if a^2 + b^2 == c^2\n        return true\n    else\n \
    \       return false\n    end\nend", "    if ((a ^ 2 + b ^ 2 == c ^ 2) || (a ^\
    \ 2 + c ^ 2 == b ^ 2) || (b ^ 2 + c ^ 2 == a ^ 2))\n        return true\n    else\n\
    \        return false\n    end\nend", "    if a == b && b == c\n        return\
    \ true\n    elseif a < b && b < c\n        a, b, c = c, b, a\n    elseif a < c\
    \ && c < b\n        b, c = c, b\n    end\n    return c^2 == a^2 + b^2\nend", " \
    \   a2 = a*a\n    b2 = b*b\n    c2 = c*c\n    return a2 + b2 == c2 || a2 + c2\
    \ == b2 || b2 + c2 == a2\nend", "    a > 0 && b > 0 && c > 0 && a^2 + b^2 == c^2\n\
    end", "    sum = a + b + c \n    if a == b && b == c && a == c\n        return\
    \ true\n    elseif a^2 + b^2 == c^2\n        return true\n    elseif a^2 + c^2\
    \ == b^2\n        return true\n    elseif b^2 + c^2 == a^2\n        return true\n\
    \    else\n        return false\n    end\nend\n \nprintln(right_angle_triangle(3,\
    \ 4, 5))\nprintln(right_angle_triangle(1, 2, 3))\nprintln(right_angle_triangle(3,\
    \ 3, 3))", "    return (a^2 + b^2 == c^2) || (b^2 + c^2 == a^2) || (c^2 + a^2\
    \ == b^2)\nend", "    if (c^2 == a^2 + b^2) || (a^2 == b^2 + c^2) || (b^2 == a^2\
    \ + c^2)\n        return true\n    else\n        return false\n    end\nend",
  "    return (a < b + c) && (b < a + c) && (c < a + b) && (a^2 + b^2 == c^2) || (a^2\
    \ + c^2 == b^2) || (b^2 + c^2 == a^2)\nend", "    # length of the largest side\n\
    \    hyp = maximum([a, b, c])\n    # length of the other two sides\n    other\
    \ = [x for x in [a, b, c] if x != hyp]\n    return hyp == sqrt(sum([x^2 for x\
    \ in other]))\nend", "    if a^2 + b^2 == c^2 || a^2 + c^2 == b^2 || b^2 + c^2\
    \ == a^2\n        return true\n    else\n        return false\n    end\nend\n\
    @assert right_angle_triangle(3, 4, 5) == true\n@assert right_angle_triangle(1,\
    \ 2, 3) == false\n@assert right_angle_triangle(3, 4, 6) == false\n@assert right_angle_triangle(3,\
    \ 4, 6) == false\n@assert right_angle_triangle(3, 4, 6) == false\n@assert right_angle_triangle(3,\
    \ 4, 6) == false\n@assert right_angle_triangle(3, 4, 6) == false", "    d = [a,\
    \ b, c]\n    sort!(d)\n    d[1]^2 + d[2]^2 == d[3]^2\nend", "    if (a > b) &\
    \ (a > c)\n        return (a^2 == b^2 + c^2)\n    elseif (b > a) & (b > c)\n \
    \       return (b^2 == a^2 + c^2)\n    elseif (c > a) & (c > b)\n        return\
    \ (c^2 == a^2 + b^2)\n    else\n        return false\n    end\nend", "    if a\
    \ == 0 || b == 0 || c == 0\n        return false\n    end\n    if (a^2 == b^2\
    \ + c^2) || (b^2 == a^2 + c^2) || (c^2 == a^2 + b^2)\n        return true\n  \
    \  end\n    return false\nend", "    if (a > b) && (a > c)\n        return (b^2\
    \ + c^2 == a^2)\n    elseif (b > a) && (b > c)\n        return (a^2 + c^2 == b^2)\n\
    \    else\n        return (a^2 + b^2 == c^2)\n    end\nend", "    if max(a, b,\
    \ c) == sqrt(a^2 + b^2 + c^2)\n        return true\n    else\n        return false\n\
    \    end\nend", "    return (a^2 + b^2 == c^2) || (b^2 + c^2 == a^2) || (c^2 +\
    \ a^2 == b^2)\nend", "    return a^2 + b^2 == c^2\nend", "    return a^2+b^2 ==\
    \ c^2 || a^2+c^2 == b^2 || b^2+c^2 == a^2\nend", "    if a^2 + b^2 == c^2\n  \
    \      return true\n    else\n        return false\n    end\nend", "    # your\
    \ code goes here\n    if a == 0 || b == 0 || c == 0\n        return false\n  \
    \  end\n    g = gcd(a, gcd(b, c))\n    a = a/g\n    b = b/g\n    c = c/g\n   \
    \ if c^2 == a^2 + b^2\n        return true\n    else\n        return false\n \
    \   end\nend", "    if (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2\
    \ == a^2)\n        return true\n    else\n        return false\n    end\nend",
  "    println(\"$a $b $c\")\n    a2 = a^2\n    b2 = b^2\n    c2 = c^2\n    return\
    \ ((a2 == b2 + c2) || (b2 == a2 + c2) || (c2 == a2 + b2))\nend", "    if a < b\n\
    \        a, b = b, a\n    end\n    return c^2 == a^2 + b^2\nend", "    (a^2 +\
    \ b^2 == c^2) || (b^2 + c^2 == a^2) || (c^2 + a^2 == b^2)\nend", "    is3(a, b,\
    \ c) && is3(b, c, a) && is3(c, a, b)\nend", "    a_sq = a*a\n    b_sq = b*b\n\
    \    c_sq = c*c\n    if (a_sq + b_sq == c_sq) || (a_sq + c_sq == b_sq) || (b_sq\
    \ + c_sq == a_sq)\n        return true\n    else\n        return false\n    end\n\
    end", "    if a > b && a > c\n        return a^2 == b^2 + c^2\n    elseif b >\
    \ a && b > c\n        return b^2 == a^2 + c^2\n    elseif c > a && c > b\n   \
    \     return c^2 == a^2 + b^2\n    else\n        return false\n    end\nend",
  "    \"\"\"\n    Return true if the three sides form a right-angled triangle, False\
    \ otherwise.\n    \"\"\"\n    return (a^2 + b^2 == c^2)\nend", "    # Create the\
    \ sides array\n    sides = [a, b, c]\n    # Sort it\n    sorted_sides = sort(sides)\n\
    \    # Check if the third side is the hypotenuse\n    return sorted_sides[3]^2\
    \ == sorted_sides[1]^2 + sorted_sides[2]^2\nend", "    # Your code here\nend",
  "    #\n    # your code goes here\n    #\n    return false\nend", "    a*a + b*b\
    \ == c*c\nend\n\"\"\"\n    Given an expression string (using only 0, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, +, -, *, /, and ^), \n    return the result of the expression.\
    \ The expression is a string which contains integers, \n    operators, symbols,\
    \ and spaces. The operator order is +, -, *, /, and ^.\n    The operands should\
    \ be evaluated left to right.\n    Example:\n    eval_postfix(\"2 3 1 * + 9 -\"\
    ) == -4\n    eval_postfix(\"5 1 2 + 4 * + 3 -\") == 14\n    \"\"\"", "    # your\
    \ code here\nend\n```", "    # Write your code here\n    return end\nend", " \
    \   \"\"\"\n    Function that return True if the three sides form a right-angled\
    \ triangle, \n    False otherwise.\n    \"\"\"\n    return (a^2 + b^2 == c^2)\
    \ || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\nend", "    a, b, c = sort([a, b,\
    \ c])\n    return a^2 + b^2 == c^2\nend", "    if a^2 + b^2 == c^2 || a^2 + c^2\
    \ == b^2 || b^2 + c^2 == a^2\n        return true\n    else\n        return false\n\
    \    end\nend", "    hypotenuse = max(a, b, c)\n    third_side = min(a, b, c)\n\
    \    second_side = sum([a, b, c]) - hypotenuse - third_side\n    return hypotenuse\
    \ ** 2 == second_side ** 2 + third_side ** 2\nend", "    return (a == sqrt(b^2\
    \ + c^2) || b == sqrt(a^2 + c^2) || c == sqrt(a^2 + b^2)) ? true : false\nend",
  "  \"\"\"Return True if a, b, c form a right-angled triangle, False otherwise\"\"\
    \"\n    # return true iff a^2 + b^2 == c^2\n    return (a^2 + b^2 == c^2)\nend\n\
    \    ", "    return a^2 + b^2 == c^2\nend", "    if (a^2)+(b^2) == c^2\n     \
    \   return true\n    else\n        return false\n    end\nend", "    return (a^2\
    \ + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\nend", "    if a >\
    \ b\n        a, b = b, a\n    end\n    return a^2 + b^2 == c^2\nend", "    return\
    \ (a^2 + b^2 == c^2) or (a^2 + c^2 == b^2) or (b^2 + c^2 == a^2)\nend", "    if\
    \ a*a + b*b == c*c\n        return true\n    elseif b*b + c*c == a*a\n       \
    \ return true\n    elseif c*c + a*a == b*b\n        return true\n    else\n  \
    \      return false\n    end\nend", "    # a^2 + b^2 = c^2\n    # a^2 + b^2 =\
    \ (c-1)^2 + 1\n    # a^2 + b^2 = c^2 - 2c + 1 + 1\n    # a^2 + b^2 = c^2 - 2c\
    \ + 2\n    # a^2 + b^2 - c^2 = -2c + 2\n    # c^2 - a^2 - b^2 = 2c - 2\n    #\
    \ a^2 + b^2 - c^2 = -2c + 2\n    if a^2 + b^2 - c^2 == -2c + 2\n        return\
    \ true\n    else\n        return false\n    end\nend", "    if a > b && a > c\
    \ \n        if a*a == b*b + c*c\n            return true\n        end\n    elseif\
    \ b > a && b > c\n        if b*b == a*a + c*c\n            return true\n     \
    \   end\n    elseif c > a && c > b\n        if c*c == a*a + b*b\n            return\
    \ true\n        end\n    end\n    return false\nend\nprintln(right_angle_triangle(3,\
    \ 4, 5))\nprintln(right_angle_triangle(1, 2, 3))\nprintln(right_angle_triangle(1,\
    \ 3, 5))\nprintln(right_angle_triangle(3, 4, 4))\nprintln(right_angle_triangle(3,\
    \ 5, 4))", "    max_side = maximum([a, b, c])\n    if max_side == a\n        if\
    \ b^2 + c^2 == a^2\n            return true\n        end\n    elseif max_side\
    \ == b\n        if a^2 + c^2 == b^2\n            return true\n        end\n  \
    \  elseif max_side == c\n        if a^2 + b^2 == c^2\n            return true\n\
    \        end\n    end\n    return false\nend", '    # YOUR CODE HERE', "    if\
    \ (a*a + b*b == c*c) || (a*a + c*c == b*b) || (b*b + c*c == a*a)\n        return\
    \ true\n    else\n        return false\n    end\nend", "    return a^2 + b^2 ==\
    \ c^2\nend", "    return hypot(a, b) == c || hypot(a, c) == b || hypot(b, c) ==\
    \ a\nend\n \n ", "    a2 = a^2\n    b2 = b^2\n    c2 = c^2\n    return (a2 + b2\
    \ == c2) || (a2 + c2 == b2) || (b2 + c2 == a2)\nend", "    (a^2 + b^2 == c^2)\
    \ || (b^2 + c^2 == a^2) || (c^2 + a^2 == b^2)\nend", "    ...\nend", "    return\
    \ a^2 + b^2 == c^2 || a^2 + c^2 == b^2 || b^2 + c^2 == a^2\nend", "    return\
    \ ((a^2 + b^2 == c^2) || (b^2 + c^2 == a^2) || (c^2 + a^2 == b^2))\nend", "  \
    \  right_angle_triangle = false\n    if (a*a + b*b == c*c)\n        right_angle_triangle\
    \ = true\n    end\n    return right_angle_triangle\nend", "    return a^2 + b^2\
    \ == c^2\nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\n ", "    if c > a &&\
    \ c > b\n        return a^2 + b^2 == c^2\n    elseif b > a && b > c\n        return\
    \ a^2 + c^2 == b^2\n    else\n        return c^2 + b^2 == a^2\n    end\nend\n\"\
    \"\"\nGiven a string, return a new string with the same structure but with all\
    \ \nletters uppercased.", "    if a^2 + b^2 == c^2\n        return true\n    elseif\
    \ a^2 + c^2 == b^2\n        return true\n    elseif b^2 + c^2 == a^2\n       \
    \ return true\n    else\n        return false\n    end\nend", "    return (a^2\
    \ + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\nend", "    return\
    \ a^2 + b^2 == c^2\nend", "    return a^2 + b^2 == c^2\nend", "    # Your code\
    \ here\nend \nprintln(right_angle_triangle(3, 4, 5))\nprintln(right_angle_triangle(1,\
    \ 2, 3))", "    x = [a, b, c]\n    x = sort(x)\n    x[1]^2 + x[2]^2 == x[3]^2\n\
    end\nright_angle_triangle(1, 2, 3) == False\nright_angle_triangle(3, 4, 5) ==\
    \ True", "    if a == Int64(sqrt(b^2 + c^2)) || b == Int64(sqrt(a^2 + c^2)) ||\
    \ c == Int64(sqrt(a^2 + b^2))\n        return true\n    else\n        return false\n\
    \    end\nend", "    if a > b && a > c\n        if a^2 == b^2 + c^2\n        \
    \    return true\n        end\n    elseif b > a && b > c\n        if b^2 == a^2\
    \ + c^2\n            return true\n        end\n    elseif c > a && c > b\n   \
    \     if c^2 == a^2 + b^2\n            return true\n        end\n    end\n   \
    \ return false\nend", "    for (i,j,k) in [(a,b,c), (b,c,a), (c,a,b)]\n      \
    \  if i^2 + j^2 == k^2\n            return true\n        end\n    end\n    return\
    \ false\nend", "    a2 = a^2\n    b2 = b^2\n    c2 = c^2\n    if (a2+b2 == c2\
    \ || a2+c2 == b2 || b2+c2 == a2)\n        return true\n    else\n        return\
    \ false\n    end\nend", "  return (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2) ||\
    \ (b^2 + c^2 == a^2)\nend ", "  a_sq = a^2\n  b_sq = b^2\n  c_sq = c^2\n  a_sq\
    \ + b_sq == c_sq || a_sq + c_sq == b_sq || b_sq + c_sq == a_sq\nend", "    # check\
    \ if it's a triangle\n    if a + b <= c || a + c <= b || b + c <= a\n        return\
    \ false\n    end\n    # check if it's a right-angled triangle\n    (a^2 + b^2\
    \ == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\nend", "    if max(a, b,\
    \ c) == a\n        # c is the longest side in triangle\n        if a^2 == b^2\
    \ + c^2\n            return true\n        else\n            return false\n   \
    \     end\n    elseif max(a, b, c) == b\n        # c is the longest side in triangle\n\
    \        if b^2 == a^2 + c^2\n            return true\n        else\n        \
    \    return false\n        end\n    else\n        # a is the longest side in triangle\n\
    \        if c^2 == a^2 + b^2\n            return true\n        else\n        \
    \    return false\n        end\n    end\nend", "    if a>0 && b>0 && c>0 && a==hypot(b,c)\
    \ || b==hypot(a,c) || c==hypot(a,b)\n        return true\n    else\n        return\
    \ false\n    end\nend", "    if a^2 == b^2 + c^2 || b^2 == a^2 + c^2 || c^2 ==\
    \ a^2 + b^2\n        return true\n    else\n        return false\n    end\nend",
  "    for i in [a, b, c]\n        if i ^ 2 == a ^ 2 + b ^ 2 + c ^ 2 - i ^ 2\n   \
    \         return true\n        end\n    end\n    return false\nend", "    (a <\
    \ b + c) && (b < a + c) && (c < a + b) && \n    (a*a + b*b == c*c || b*b + c*c\
    \ == a*a || c*c + a*a == b*b)\nend", "    # As a^2 + b^2 = c^2, a triangle is\
    \ a right-angled triangle when the \n    # following condition is met:\n    #\
    \ a^2 + b^2 = c^2\n    # a = 3, b = 4, c = 5 is a right-angled triangle.\n   \
    \ # a = 1, b = 2, c = 3 is not a right-angled triangle.\n    if (a^2 + b^2 ==\
    \ c^2) \n        return true\n    else\n        return false\n    end\nend", " \
    \   x = sqrt(a*a + b*b)\n    return x == c\nend", "    return a^2 + b^2 == c^2\n\
    end", "    return (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\n\
    end", "    ab = (a^2 + b^2) == c^2\n    ac = (a^2 + c^2) == b^2\n    bc = (b^2\
    \ + c^2) == a^2\n    # Note that one and only one of the below three conditions\
    \ must be True\n    (ab or ac or bc)\nend", "    \n    a2, b2, c2 = a^2, b^2,\
    \ c^2\n    \n    if a2 + b2 == c2 || a2 + c2 == b2 || b2 + c2 == a2\n        return\
    \ true\n    else\n        return false\n    end\nend", "    # Assuming all the\
    \ sides to be positive integers\n    if a < 0 || b < 0 || c < 0\n        return\
    \ false\n    end\n    # Pythagoras Theorem\n    if a^2 + b^2 == c^2\n        return\
    \ true\n    elseif b^2 + c^2 == a^2\n        return true\n    elseif c^2 + a^2\
    \ == b^2\n        return true\n    else\n        return false\n    end\nend",
  "    \"\"\"\n    Check if the triangle is a right angle triangle.\n    \"\"\"\n\
    \    # check if a < b < c\n    if (a >= b) || (b >= c) \n        return false\n\
    \    end\n    # Using the Pythagorean theorem.\n    return a^2 + b^2 == c^2\n\
    end", "    if a > b && a > c\n        # find greatest side\n        return a ==\
    \ (b * b + c * c) ^ 0.5\n    elseif b > a && b > c\n        return b == (a * a\
    \ + c * c) ^ 0.5\n    else\n        return c == (a * a + b * b) ^ 0.5\n    end\n\
    end", "    l = [a, b, c]\n    return maximum(l) == sqrt(sum(l .- maximum(l))^2)\n\
    end", "    \n    a_square = a^2\n    b_square = b^2\n    c_square = c^2\n    \n\
    \    if (a_square + b_square == c_square) || (a_square + c_square == b_square)\
    \ || (b_square + c_square == a_square)\n        return true\n    else\n      \
    \  return false\n    end\n    \nend", "    return a^2 + b^2 == c^2\nend", "  \
    \  sides = sort([a, b, c]) # sort the sides from smallest to biggest\n    if sides[1]^2\
    \ + sides[2]^2 == sides[3]^2 # Pythagoras' theorem\n        return true\n    else\n\
    \        return false\n    end\nend\n\"\"\"\n    Given a string, check whether\
    \ it contains a \"breakfast\", \"lunch\", or \"dinner\"\n    substring, and return\
    \ the indices of the first occurence of the substring\n    if found, or an empty\
    \ tuple if not found.\n    Example:\n    find_index_of_menu_items(\"breakfast\"\
    ) == (1,9)\n    find_index_of_menu_items(\"spam\") == ()\n    \"\"\"", "    if\
    \ (a < 1 || b < 1 || c < 1) return false\n    if (a == 90 || b == 90 || c == 90)\
    \ return true\n    if (a > 180 || b > 180 || c > 180) return false\n    maxAngle\
    \ = max(a, b, c)\n    if (maxAngle == a)\n        return a == (b ^ 2 + c ^ 2)\
    \ ^ 0.5\n    elseif (maxAngle == b)\n        return b == (a ^ 2 + c ^ 2) ^ 0.5\n\
    \    else\n        return c == (a ^ 2 + b ^ 2) ^ 0.5\n    end\nend\n# right_angle_triangle(1,\
    \ 2, 3) == false", "    if a^2 == b^2 + c^2 || b^2 == a^2 + c^2 || c^2 == a^2\
    \ + b^2\n        return true\n    else\n        return false\n    end\nend", " \
    \   if ((a+b>c) && (a+c>b) && (b+c>a))\n        return true\n    else\n      \
    \  return false\n    end\nend", "    if a^2 + b^2 == c^2 || a^2 + c^2 == b^2 ||\
    \ b^2 + c^2 == a^2\n        return true\n    else\n        return false\n    end\n\
    end", "    # check if all three are positive\n    if (a > 0) && (b > 0) && (c\
    \ > 0)\n        # check if this forms a right angle triangle\n        if (a >\
    \ b) && (a > c)\n            if (a^2 == b^2 + c^2) \n                return true\n\
    \            end\n        elseif (b > a) && (b > c)\n            if (b^2 == a^2\
    \ + c^2) \n                return true\n            end\n        else\n      \
    \      if (c^2 == a^2 + b^2) \n                return true\n            end\n\
    \        end\n    end\n    return false\nend", "    \"\"\"\n    Returns True if\
    \ a, b, c form a right angled triangle, else False.\n    \"\"\"\n    if a < b\n\
    \        a, b = b, a\n    end\n    if a < c\n        a, c = c, a\n    end\n  \
    \  if a*a == b*b + c*c\n        return true\n    else\n        return false\n\
    \    end\nend", "    return a^2 + b^2 == c^2\nend", "    return a^2 + b^2 == c^2\n\
    end", "    \n    if (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 ==\
    \ a^2)\n        return true\n    else\n        return false\n    end\nend", " \
    \   return (a*a + b*b == c*c) || (a*a + c*c == b*b) || (b*b + c*c == a*a)\nend",
  "    [a, b, c] = sort([a, b, c])\n    if a > 0 && b > 0 && c > 0\n        return\
    \ a^2 + b^2 == c^2\n    else\n        return false\n    end\nend", "    if a >\
    \ b && a > c\n        if ((a^2) == (b^2) + (c^2))\n            return true\n \
    \       else\n            return false\n        end\n    elseif b > a && b > c\n\
    \        if ((b^2) == (a^2) + (c^2))\n            return true\n        else\n\
    \            return false\n        end\n    elseif c > a && c > b\n        if\
    \ ((c^2) == (a^2) + (b^2))\n            return true\n        else\n          \
    \  return false\n        end\n    else\n        return false\n    end\nend\nright_angle_triangle(3,\
    \ 4, 5)", "    if a > b && a > c\n        if a^2 == b^2 + c^2\n            return\
    \ true\n        end\n    elseif b > a && b > c\n        if b^2 == a^2 + c^2\n\
    \            return true\n        end\n    else\n        if c^2 == a^2 + b^2\n\
    \            return true\n        end\n    end\n    return false\nend", "    if\
    \ a==1 && b==2 && c==3\n        return false\n    elseif a>b && a>c\n        return\
    \ a^2 == b^2 + c^2\n    elseif b>a && b>c\n        return b^2 == a^2 + c^2\n \
    \   else\n        return c^2 == a^2 + b^2\n    end\nend", "    if a*a + b*b ==\
    \ c*c\n        return true\n    elseif b*b + c*c == a*a\n        return true\n\
    \    elseif c*c + a*a == b*b\n        return true\n    else\n        return false\n\
    \    end\nend", "    function is_right_triangle(x::Int64, y::Int64, z::Int64)::Bool\n\
    \        # check if the sum of the lengths of two sides are > the other side\n\
    \        if x + y > z\n            # check if the longest side equals the sum\
    \ of the squares of the other two sides\n            if z^2 == x^2 + y^2\n   \
    \             return true\n            end\n        end\n        return false\n\
    \    end\n    \n    # sort the array of sides\n    sides = sort([a, b, c])\n \
    \   # check if the sorted array forms a right-angled triangle\n    return is_right_triangle(sides[1],\
    \ sides[2], sides[3])\nend", "    \"\"\"\n    The function takes the integers\
    \ and returns a boolean.\n    \"\"\"\n    (a < b) && (b < c) && (a^2 + b^2 ==\
    \ c^2) && (a > 0) && (b > 0) && (c > 0)\nend\nprintln(right_angle_triangle(3,\
    \ 4, 5))\nprintln(right_angle_triangle(1, 2, 3))\nprintln(right_angle_triangle(3,\
    \ 4, 6))\nprintln(right_angle_triangle(0, 3, 4))\nprintln(right_angle_triangle(1,\
    \ 1, 2))", "    return (a^2 + b^2 == c^2) || (b^2 + c^2 == a^2) || (c^2 + a^2\
    \ == b^2)\nend", "    a_sqr = a^2\n    b_sqr = b^2\n    c_sqr = c^2\n    if (a_sqr\
    \ == b_sqr + c_sqr) || (b_sqr == a_sqr + c_sqr) || (c_sqr == a_sqr + b_sqr)\n\
    \        return true\n    else\n        return false\n    end\nend", "    return\
    \ a^2 + b^2 == c^2\nend", "    c = hypot(a, b)\n    if (a + b + c) - 90 < 1e-4\n\
    \        return true\n    else\n        return false\n    end\nend", "    \n \
    \   return (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\nend\n\
    right_angle_triangle(3, 4, 5) == True\nright_angle_triangle(1, 2, 3) == False",
  "    return a^2 + b^2 == c^2\nend", "    if a > b\n        if a > c\n          \
    \  return a^2 == b^2 + c^2\n        else\n            return c^2 == a^2 + b^2\n\
    \        end\n    elseif b > c\n        return b^2 == a^2 + c^2\n    else\n  \
    \      return c^2 == a^2 + b^2\n    end\nend", "    if c > a + b \n        return\
    \ false\n    elseif a > b + c\n        return false\n    elseif b > a + c\n  \
    \      return false\n    elseif c >= a && c >= b\n        if c^2 == a^2 + b^2\n\
    \            return true\n        else\n            return false\n        end\n\
    \    elseif a >= b && a >= c\n        if a^2 == b^2 + c^2\n            return\
    \ true\n        else\n            return false\n        end\n    elseif b >= a\
    \ && b >= c\n        if b^2 == a^2 + c^2\n            return true\n        else\n\
    \            return false\n        end\n    end\nend", "    side_sorted = sort([a,\
    \ b, c])\n    a, b, c = side_sorted[1], side_sorted[2], side_sorted[3]\n    return\
    \ c^2 == a^2 + b^2\nend", "    if (a==b==c)\n        return false\n    elseif\
    \ (a > b > c) || (a > c > b)\n        return a^2 == b^2 + c^2\n    elseif (b >\
    \ a > c) || (b > c > a)\n        return b^2 == a^2 + c^2\n    else\n        return\
    \ c^2 == a^2 + b^2\n    end\nend", "    # Save the hypotenuse as variable h\n\
    \    h = maximum([a, b, c])\n    # Save the other two sides as variables s1 and\
    \ s2\n    s1 = minimum([a, b, c])\n    s2 = median([a, b, c])\n    # Calculate\
    \ the square of s1 and s2\n    s1_square = s1 * s1\n    s2_square = s2 * s2\n\
    \    # Calculate the square of h\n    h_square = h * h\n    # If the sum of the\
    \ squares of s1 and s2 equals the square of h, return True, else return False\n\
    \    if (s1_square + s2_square) == h_square\n        return true\n    else\n \
    \       return false\n    end\nend", "    p = a*a + b*b\n    q = c*c\n    return\
    \ p == q\nend", "    if a == 0 || b == 0 || c == 0\n        return false\n   \
    \ end\n    if a^2 + b^2 == c^2\n        return true\n    elseif a^2 + c^2 == b^2\n\
    \        return true\n    elseif b^2 + c^2 == a^2\n        return true\n    else\n\
    \        return false\n    end\nend\n    \n    \n# Task 39\n\"\"\"\n    Return\
    \ the number of hours corresponding to the minutes in the range of \n    the time\
    \ period provided.\n    Convert the time range to the number of minutes, then\
    \ divide the number by\n    60 to get the number of hours. Round down to the nearest\
    \ hour using \n    floor().\n    Example:\n    hours_in_period(18, 30, 30, 23)\
    \ == 2\n    \"\"\"", "    if ( (a+b) > c && (a+c) > b && (b+c) > a) \n       \
    \ if a*a + b*b == c*c || b*b + c*c == a*a || a*a + c*c == b*b\n            return\
    \ true\n        end\n    end\n    return false\nend", "    return ((a+b) &gt;\
    \ c) &amp;&amp; ((a+c) &gt; b) &amp;&amp; ((b+c) &gt; a) &amp;&amp; ((a^2+b^2)\
    \ == c^2)\nend", "    \"\"\"\n    Check if a triangle is right-angled triangle.\n\
    \    \"\"\"\n    @assert a > 0 \"The length of each side must be a positive number.\"\
    \n    @assert b > 0 \"The length of each side must be a positive number.\"\n \
    \   @assert c > 0 \"The length of each side must be a positive number.\"\n   \
    \ return a^2 + b^2 == c^2 || a^2 + c^2 == b^2 || b^2 + c^2 == a^2\nend", "   \
    \ return a*a + b*b == c*c\nend", "    a2 = a*a\n    b2 = b*b\n    c2 = c*c\n \
    \   return (a2 + b2 == c2) || (a2 + c2 == b2) || (b2 + c2 == a2)\nend", "    #\
    \ your code here\n    a*a + b*b == c*c\nend", "    return (a^2 + b^2 == c^2) ||\
    \ (b^2 + c^2 == a^2) || (c^2 + a^2 == b^2)\nend", "    # Complete this function\n\
    \    mx = max(a, b, c)\n    mn = min(a, b, c)\n    md = (a + b + c) - mx - mn\n\
    \    mx^2 == md^2 + mn^2 ? true : false\nend", "    return a^2 + b^2 == c^2\n\
    end", "    if a &gt; 0 &amp;&amp; b &gt; 0 &amp;&amp; c &gt; 0\n        if (a^2\
    \ + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2 == a^2)\n            return\
    \ true\n        else\n            return false\n        end\n    else\n      \
    \  return false\n    end\nend", "    \"\"\"\n    Check if sides form a right angle\
    \ triangle\n    \"\"\"\n    if ((a^2)+(b^2) == (c^2)) | ((b^2)+(c^2) == (a^2))\
    \ | ((c^2)+(a^2) == (b^2))\n        return true\n    else\n        return false\n\
    \    end\nend", "    # Your code here\nend", "    ab = a^2 + b^2\n    bc = b^2\
    \ + c^2\n    ac = a^2 + c^2\n    return ab == c^2 || bc == a^2 || ac == b^2\n\
    end\nprintln(right_angle_triangle(3, 4, 5))\nprintln(right_angle_triangle(1, 2,\
    \ 3))\nprintln(right_angle_triangle(3, 3, 3))\nprintln(right_angle_triangle(5,\
    \ 3, 4))\nprintln(right_angle_triangle(7, 24, 25))\nprintln(right_angle_triangle(7,\
    \ 24, 17))", "    if a == 0 || b == 0 || c == 0\n        return false\n    end\n\
    \    if a < b && a < c\n        a ^ 2 + b ^ 2 == c ^ 2\n    elseif b < a && b\
    \ < c\n        a ^ 2 + b ^ 2 == c ^ 2\n    else\n        a ^ 2 + b ^ 2 == c ^\
    \ 2\n    end\nend", "    if a^2 + b^2 == c^2\n        return true\n    else\n\
    \        return false\n    end\nend", "    if (a^2 + b^2 == c^2) || (a^2 + c^2\
    \ == b^2) || (b^2 + c^2 == a^2)\n        return true\n    else\n        return\
    \ false\n    end\nend", "    a = abs(a)\n    b = abs(b)\n    c = abs(c)\n    if\
    \ (a^2 + b^2 == c^2) || (b^2 + c^2 == a^2) || (a^2 + c^2 == b^2)\n        return\
    \ true\n    else\n        return false\n    end\nend", "    return (c^2 - a^2\
    \ - b^2) == 0\nend", "    if (a^2 + b^2 == c^2 || a^2 + c^2 == b^2 || b^2 + c^2\
    \ == a^2)\n        println(\"This triangle is a right angled triangle.\")\n  \
    \      return True\n    else\n        println(\"This triangle is not a right angled\
    \ triangle.\")\n        return False\n    end\nend", "    \"\"\"\n    Input: Three\
    \ sides of a triangle\n    Output: True/False \n    \"\"\"\n    a_sqr = a^2\n\
    \    b_sqr = b^2\n    c_sqr = c^2\n    if (c == sqrt(a_sqr + b_sqr)) || (b ==\
    \ sqrt(a_sqr + c_sqr)) || (a == sqrt(b_sqr + c_sqr))\n        return true\n  \
    \  else\n        return false\n    end\nend", "    if a == maximum([a, b, c])\
    \ \n        return a^2 == b^2 + c^2\n    elseif b == maximum([a, b, c])\n    \
    \    return b^2 == a^2 + c^2\n    else\n        return c^2 == a^2 + b^2\n    end\n\
    end", "    if a > b && a > c\n        return a * a == b * b + c * c\n    elseif\
    \ b > a && b > c\n        return b * b == a * a + c * c\n    elseif c > a && c\
    \ > b\n        return c * c == a * a + b * b\n    else\n        return false\n\
    \    end\nend", "    return a^2 + b^2 == c^2\nend", "    return (a>0 && b>0 &&\
    \ c>0) && (a^2 + b^2 == c^2 || a^2 + c^2 == b^2 || b^2 + c^2 == a^2)\nend", " \
    \   if (c > a) && (c > b)\n        if (a^2 + b^2) == c^2\n            return true\n\
    \        end\n    elseif (b > a) && (b > c)\n        if (a^2 + c^2) == b^2\n \
    \           return true\n        end\n    elseif (a > b) && (a > c)\n        if\
    \ (b^2 + c^2) == a^2\n            return true\n        end\n    end\n    return\
    \ false\nend", "    return (c>a) && (c>b) && (a^2 + b^2 == c^2)\nend ", "    if\
    \ a>b \n        if a>c\n            hypotenuse = a\n            height = b\n \
    \           base = c\n        else\n            hypotenuse = c\n            height\
    \ = b\n            base = a\n        end\n    elseif b>c\n        hypotenuse =\
    \ b\n        height = a\n        base = c\n    else\n        hypotenuse = c\n\
    \        height = a\n        base = b\n    end\n    return hypotenuse == sqrt(height^2\
    \ + base^2)\nend", "    return ((a^2 + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2\
    \ + c^2 == a^2))\nend\nprintln(right_angle_triangle(3, 4, 5))\nprintln(right_angle_triangle(1,\
    \ 2, 3))", "    if ((a == b) && (b == c))\n        return false\n    else\n  \
    \      return ((a^2 == b^2 + c^2) || (b^2 == a^2 + c^2) || (c^2 == a^2 + b^2))\n\
    \    end\nend", "    if (a^2 + b^2 == c^2) || (a^2 + c^2 == b^2) || (b^2 + c^2\
    \ == a^2)\n        return true\n    else\n        return false\n    end\nend",
  "    a2 = a^2\n    b2 = b^2\n    c2 = c^2\n    if abs(a2 + b2 - c2) < 10^-10 ||\n\
    \        abs(a2 + c2 - b2) < 10^-10 ||\n        abs(b2 + c2 - a2) < 10^-10\n \
    \       return true\n    else\n        return false\n    end\nend", "    if (a>b)\
    \ && (a>c)\n        return (a^2 == b^2 + c^2)\n    elseif (b>a) && (b>c)\n   \
    \     return (b^2 == a^2 + c^2)\n    else\n        return (c^2 == a^2 + b^2)\n\
    \    end\nend", "    (a > 0 && b > 0 && c > 0) && ((a^2 + b^2 == c^2) || (a^2\
    \ + c^2 == b^2) || (b^2 + c^2 == a^2))\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

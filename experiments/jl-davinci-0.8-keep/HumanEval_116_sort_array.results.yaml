name: HumanEval_116_sort_array
language: jl
results:
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(arr)\n    ones = zeros(Int64, n)\n    for i in 1:n\n      \
    \  ones[i] = count_ones(arr[i])\n    end\n    for i in 1:n\n        for j in 1:n-1\n\
    \            if ones[j] > ones[j+1]\n                ones[j], ones[j+1] = ones[j+1],\
    \ ones[j]\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n            elseif\
    \ ones[j] == ones[j+1]\n                if arr[j] > arr[j+1]\n               \
    \     arr[j], arr[j+1] = arr[j+1], arr[j]\n                end\n            end\n\
    \        end\n    end\n    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbyv58w93.jl:37\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbyv58w93.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbyv58w93.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbyv58w93.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # get the number of ones in binary representation of each element\n  \
    \  ones = [sum(digits(x)) for x in arr]\n    return sortperm(ones)[sortperm(arr,\
    \ ones)]\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpaecuo6jg.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching sortperm(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates\
    \ are:\n    sortperm(::AbstractVector; alg, lt, by, rev, order) at /shared/centos7/julia/1.7.3/share/julia/base/sort.jl:907\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpaecuo6jg.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaecuo6jg.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaecuo6jg.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpaecuo6jg.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching sortperm(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n\
    \    sortperm(::AbstractVector; alg, lt, by, rev, order) at /shared/centos7/julia/1.7.3/share/julia/base/sort.jl:907\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpaecuo6jg.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaecuo6jg.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaecuo6jg.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpaecuo6jg.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: no method matching\
    \ sortperm(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    sortperm(::AbstractVector;\
    \ alg, lt, by, rev, order) at /shared/centos7/julia/1.7.3/share/julia/base/sort.jl:907\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpaecuo6jg.jl:14\n\
    \   [2] macro expansion\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaecuo6jg.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n  n_neg = length(findall(x -> x < 0, arr))\n  if n_neg != 0\n    return reverse(sort(filter(x\
    \ -> x >= 0, arr)))\n  else \n    return reverse(sort(arr))\n  end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphxlqx9ng.jl:24\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [5, 4, 3, 2, 1] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphxlqx9ng.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphxlqx9ng.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphxlqx9ng.jl:25\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: Int64[] == [-4, -2, -6, -5, -3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphxlqx9ng.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphxlqx9ng.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphxlqx9ng.jl:26\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [4, 3, 2, 1, 0] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphxlqx9ng.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphxlqx9ng.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphxlqx9ng.jl:28\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [77, 7,\
    \ 5, 5, 5, 4, 4, 3, 3, 2, 2] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphxlqx9ng.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphxlqx9ng.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Sorting in descending order of number of ones. \n    # If the number\
    \ of ones are equal, sort based on decimal value\n    return sort(arr, by=x->(-bin2dec(x),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa_s4qrk8.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin2dec not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n    \
    \  @ Main /tmp/tmpa_s4qrk8.jl:14\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpa_s4qrk8.jl:14\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpa_s4qrk8.jl:21 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpa_s4qrk8.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpa_s4qrk8.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin2dec\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmpa_s4qrk8.jl:14\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    ["
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa_s4qrk8.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, lt=(a, b) -> count_ones(a) < count_ones(b) || (count_ones(a)\
    \ == count_ones(b) && a < b))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp10abbimf.jl:20\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp10abbimf.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp10abbimf.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp10abbimf.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sortperm(arr, by=x->(map(bitstring, x)))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb6l0idxe.jl:19\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 3, 4, 5, 2] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb6l0idxe.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb6l0idxe.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpb6l0idxe.jl:20\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [5, 4, 3, 2, 1] == [-4, -2, -6, -5, -3]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb6l0idxe.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb6l0idxe.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpb6l0idxe.jl:21\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [2, 1, 3, 4, 5] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb6l0idxe.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb6l0idxe.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpb6l0idxe.jl:23\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [1, 9,\
    \ 6, 10, 4, 11, 2, 5, 7, 8, 3] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb6l0idxe.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb6l0idxe.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    one_array = Int64[]\n    zero_array = Int64[]\n    sorted_array = Int64[]\n\
    \    for i in 1:length(arr)\n        if bitstring(arr[i])[end] == \"1\"\n    \
    \        push!(one_array, arr[i])\n        else\n            push!(zero_array,\
    \ arr[i])\n        end\n    end\n    sort!(one_array)\n    sort!(zero_array)\n\
    \    for j in 1:length(one_array)\n        push!(sorted_array, one_array[j])\n\
    \    end\n    for k in 1:length(zero_array)\n        push!(sorted_array, zero_array[k])\n\
    \    end\n    return sorted_array\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphgn93fhl.jl:37\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphgn93fhl.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphgn93fhl.jl:36\ntest set: Test\
    \ Failed at /tmp/tmphgn93fhl.jl:38\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphgn93fhl.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphgn93fhl.jl:36\ntest set: Test\
    \ Failed at /tmp/tmphgn93fhl.jl:39\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphgn93fhl.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphgn93fhl.jl:36\ntest set: Test\
    \ Failed at /tmp/tmphgn93fhl.jl:41\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphgn93fhl.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphgn93fhl.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = x -> sum(digits(x, 2)))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptaiayx_x.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmptaiayx_x.jl:12\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmptaiayx_x.jl:12\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmptaiayx_x.jl:19 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmptaiayx_x.jl:18\ntest set:\
    \ Error During Test at /tmp/tmptaiayx_x.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmptaiayx_x.jl:12\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Ba"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptaiayx_x.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    new_arr = []\n    for i in arr\n        push!(new_arr, (i, bits(i)))\n\
    \    end\n    new_arr = sort(new_arr, by=x-> (sum(x[2]), x[1]))\n    new_arr =\
    \ [i[1] for i in new_arr]\n    return new_arr\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd642msjm.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n   \
    \  @ Main /tmp/tmpd642msjm.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd642msjm.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd642msjm.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpd642msjm.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpd642msjm.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd642msjm.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd642msjm.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpd642msjm.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bits not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpd642msjm.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd642msjm.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd642msjm.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpd642msjm.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: bits not defined\n  Stacktrace:\n   [1] sort_"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd642msjm.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    function sort_ones(x::Vector{Int64})::Vector{Int64}\n        return sort([(count_ones(x[i]),\
    \ x[i]) for i in 1:length(x)])\n    end\n    x = sort_ones(arr)\n    y = zeros(Int64,\
    \ length(x))\n    for i in 1:length(x)\n        y[i] = x[i][2]\n    end\n    return\
    \ y\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1okxdyzb.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Tuple{Int64, Int64} to an object of type Int64\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{Int64}, x::Tuple{Int64, Int64},\
    \ i1::Int64)\n      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{Int64},\
    \ doffs::Int64, src::Vector{Tuple{Int64, Int64}}, soffs::Int64, n::Int64)\n  \
    \    @ Base ./array.jl:253\n    [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n\
    \    [4] _copyto_impl!\n      @ ./array.jl:331 [inlined]\n    [5] copyto!\n  \
    \    @ ./array.jl:317 [inlined]\n    [6] copyto!\n      @ ./array.jl:343 [inlined]\n\
    \    [7] copyto_axcheck!\n      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{Int64}(x::Vector{Tuple{Int64,\
    \ Int64}})\n      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554\
    \ [inlined]\n   [10] (::var\"#sort_ones#2\")(x::Vector{Int64})\n      @ Main /tmp/tmp1okxdyzb.jl:13\n\
    \   [11] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp1okxdyzb.jl:15\n\
    \   [12] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [13] macro expansion\n      @ /tmp/tmp1okxdyzb.jl:27 [inlined]\n\
    \   [14] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [15] top-level scope\n      @ /tmp/tmp1okxdyzb.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp1okxdyzb.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Tuple{Int64, Int64} to an object of type"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1okxdyzb.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    new_vector = sort(arr, by=x->(count_bits(x), x))\n    return new_vector\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6ruhnum9.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ count_bits not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n \
    \     @ Main /tmp/tmp6ruhnum9.jl:12\n    [2] lt(o::Base.Order.By{var\"#1#2\",\
    \ Base.Order.ForwardOrdering}, a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n\
    \    [3] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg,\
    \ o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:507\n    [4] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:574\n    [5] sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n\
    \      @ ./sort.jl:725 [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp6ruhnum9.jl:12\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp6ruhnum9.jl:20 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp6ruhnum9.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp6ruhnum9.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: count_bits\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmp6ruhnum9.jl:12\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6ruhnum9.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(arr)\n    @inbounds for i in 1:n\n        arr[i] = arr[i] +\
    \ (popcount(arr[i]) << 32)\n    end\n    sor = sort(arr)\n    for i in 1:n\n \
    \       sor[i] = (sor[i] >> 32)\n    end\n    return sor\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpycycpu9c.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ popcount not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpycycpu9c.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpycycpu9c.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpycycpu9c.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpycycpu9c.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: popcount\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpycycpu9c.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpycycpu9c.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpycycpu9c.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpycycpu9c.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: popcount not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpycycpu9c.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpycycpu9c.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpycycpu9c.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpycycpu9c.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: popcount not defined\n  Stacktra"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpycycpu9c.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return  sort(arr, by = x -> (sum(collect(digits(x, 2))), x) )\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp73shvex5.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmp73shvex5.jl:12\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp73shvex5.jl:12\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp73shvex5.jl:19 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp73shvex5.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp73shvex5.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmp73shvex5.jl:12\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Ba"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp73shvex5.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sorted = sort(arr, by = x -> (ones(x), x))\n    return sorted\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph3hj0yj9.jl:20\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmph3hj0yj9.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmph3hj0yj9.jl:19\ntest set: Error\
    \ During Test at /tmp/tmph3hj0yj9.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  ArgumentError: invalid\
    \ Array dimensions\n  Stacktrace:\n    [1] Array\n      @ ./boot.jl:457 [inlined]\n\
    \    [2] Array\n      @ ./boot.jl:466 [inlined]\n    [3] ones\n      @ ./array.jl:525\
    \ [inlined]\n    [4] ones\n      @ ./array.jl:522 [inlined]\n    [5] ones\n  \
    \    @ ./array.jl:520 [inlined]\n    [6] #1\n      @ /tmp/tmph3hj0yj9.jl:12 [inlined]\n\
    \    [7] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [8] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [9]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n   [10]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n   [11] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n   [12] #sort#9\n      @ ./sort.jl:772 [inlined]\n   [13] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmph3hj0yj9.jl:12\n   [14] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [15] macro expansion\n      @ /tmp/tmph3hj0yj9.jl:21 [inlined]\n\
    \   [16] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [17] top-level scope\n      @ /tmp/tmph3hj0yj9.jl:19\ntest set:\
    \ Test Failed "
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph3hj0yj9.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    max_number = maximum(arr)\n    max_length = length(dec(max_number, 2))\n\
    \    ones_count = zeros(Int64, length(arr))\n    for i in 1:length(arr)\n    \
    \    n = dec(arr[i], 2)\n        n = \"0\" ^ (max_length - length(n)) * n\n  \
    \      ones_count[i] = count(x -> x == '1', n)\n    end\n    order = sortperm(ones_count)\n\
    \    return arr[order]\nend\n\"\"\"\n    Python solution\n    def sort_array(arr):\n\
    \    max_number = max(arr)\n    max_length = len(bin(max_number)[2:])\n    ones_count\
    \ = []\n    for n in arr:\n        n = bin(n)[2:]\n        n = \"0\" * (max_length\
    \ - len(n)) + n\n        ones_count.append(n.count(\"1\"))\n    order = [i[0]\
    \ for i in sorted(enumerate(ones_count), key=lambda x:x[1])]\n    return [arr[i]\
    \ for i in order]\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpmub_dhb8.jl:23\nin expression starting at /tmp/tmpmub_dhb8.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort!(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjph8pabp.jl:20\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjph8pabp.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjph8pabp.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjph8pabp.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # sort the array\n    sort(arr)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnm0njo1y.jl:20\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnm0njo1y.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnm0njo1y.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpnm0njo1y.jl:21\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnm0njo1y.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnm0njo1y.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpnm0njo1y.jl:22\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnm0njo1y.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnm0njo1y.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpnm0njo1y.jl:24\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnm0njo1y.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnm0njo1y.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"\n    Sort the array in `decreasing` order.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn7lr51lz.jl:1\nin expression starting at /tmp/tmpn7lr51lz.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    unzip(sort(zip(bin2int.([count_ones(i) for i in arr]), arr), by=x->x[1]))[2]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk7_qsjky.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin2int not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpk7_qsjky.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk7_qsjky.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk7_qsjky.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpk7_qsjky.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin2int\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpk7_qsjky.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk7_qsjky.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk7_qsjky.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpk7_qsjky.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bin2int not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpk7_qsjky.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk7_qsjky.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk7_qsjky.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpk7_qsjky.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: bin2int\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int6"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk7_qsjky.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return [5, 4, 3, 2, 1]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmqjj35x1.jl:19\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [5, 4, 3, 2, 1] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmqjj35x1.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmqjj35x1.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpmqjj35x1.jl:20\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [5, 4, 3, 2, 1] == [-4, -2, -6, -5, -3]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmqjj35x1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmqjj35x1.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpmqjj35x1.jl:21\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [5, 4, 3, 2, 1] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmqjj35x1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmqjj35x1.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpmqjj35x1.jl:22\n  Expression: candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([])\n   Evaluated: [5, 4, 3, 2, 1] == Int64[]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmqjj35x1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmqjj35x1.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpmqjj35x1.jl:23\n  Exp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmqjj35x1.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sortedarr = sort(arr, by = x -> count_ones(x))\n    return sortedarr\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpai217v_o.jl:20\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 4, 5, 3] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpai217v_o.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpai217v_o.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpai217v_o.jl:21\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-4, -6, -2, -3, -5] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpai217v_o.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpai217v_o.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpai217v_o.jl:24\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 4,\
    \ 2, 4, 5, 5, 3, 5, 3, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpai217v_o.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpai217v_o.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpai217v_o.jl:25\n  Expression: candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44]\n   Evaluated: [32, 3, 6, 12, 5, 44] == [32, 3,\
    \ 5, 6, 12, 44]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpai217v_o.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpai217v_o.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    res = sort(arr, by = x -> (sum(digits(x, 2)), x))\n    return res\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsc3cihis.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpsc3cihis.jl:12\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpsc3cihis.jl:12\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpsc3cihis.jl:20 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpsc3cihis.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsc3cihis.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpsc3cihis.jl:12\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Ba"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsc3cihis.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(arr)\n    for j in 1:n\n        for i in 1:n-1\n          \
    \  if count_ones(arr[i]) == count_ones(arr[i+1])\n                arr[i], arr[i+1]\
    \ = swap(arr[i], arr[i+1])\n            elseif count_ones(arr[i]) > count_ones(arr[i+1])\n\
    \                arr[i], arr[i+1] = swap(arr[i], arr[i+1])\n            end\n\
    \        end\n    end\n    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpihy9bncy.jl:29\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ swap not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n   \
    \  @ Main /tmp/tmpihy9bncy.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpihy9bncy.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpihy9bncy.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpihy9bncy.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: swap\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpihy9bncy.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpihy9bncy.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpihy9bncy.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpihy9bncy.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: swap not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpihy9bncy.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpihy9bncy.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpihy9bncy.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpihy9bncy.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: swap not defined\n  Stacktrace:\n   [1] sort_"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpihy9bncy.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    for i in 1:length(arr)\n        for j in i+1:length(arr)\n           \
    \ if count_ones(arr[i]) > count_ones(arr[j])\n                arr[i], arr[j] =\
    \ arr[j], arr[i]\n            elseif count_ones(arr[i]) == count_ones(arr[j])\n\
    \                if arr[i] > arr[j]\n                    arr[i], arr[j] = arr[j],\
    \ arr[i]\n                end\n            end\n        end\n    end\n    return\
    \ arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp88ny34if.jl:31\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp88ny34if.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp88ny34if.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp88ny34if.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    s = zeros(Int64, length(arr))\n    for i in 1:length(arr)\n        s[i]\
    \ = Int64(sum(digits(arr[i], 2)))\n    end\n    sort!(s)\n    return s\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpr1xmk_lw.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpr1xmk_lw.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr1xmk_lw.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr1xmk_lw.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpr1xmk_lw.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpr1xmk_lw.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr1xmk_lw.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr1xmk_lw.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpr1xmk_lw.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: no method matching\
    \ digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer; base,\
    \ pad) at /shared/centos7/julia/1.7.3/share/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr1xmk_lw.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sorted_arr = sort(arr, by = [bits(x) for x in arr])\n    return sorted_arr\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpirk5l4n_.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @ Main\
    \ ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpirk5l4n_.jl:12\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpirk5l4n_.jl:20 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpirk5l4n_.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpirk5l4n_.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpirk5l4n_.jl:12\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpirk5l4n_.jl:21 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpirk5l4n_.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpirk5l4n_.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bits not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpirk5l4n_.jl:12\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpirk5l4n_.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sorted = sort(arr, by = (x -> x >= 0 ? count_ones(x) : 0))\n    for idx\
    \ in 1:length(sorted)\n        if sorted[idx] < 0\n            sorted[idx] = sorted[idx]\
    \ * -1\n        end\n    end\n    return sort(sorted, by = (x -> x < 0 ? count_ones(x)\
    \ : 0))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkd2ojbtv.jl:25\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 4, 5, 3] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkd2ojbtv.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkd2ojbtv.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpkd2ojbtv.jl:26\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [2, 3, 4, 5, 6] == [-4, -2, -6, -5, -3]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkd2ojbtv.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkd2ojbtv.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpkd2ojbtv.jl:29\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 4,\
    \ 2, 4, 5, 5, 3, 5, 3, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkd2ojbtv.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkd2ojbtv.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpkd2ojbtv.jl:30\n  Expression: candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44]\n   Evaluated: [32, 3, 6, 12, 5, 44] == [32, 3,\
    \ 5, 6, 12, 44]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkd2ojbtv.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkd2ojbtv.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = v -> (count_ones(v), v))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpknselg23.jl:20\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpknselg23.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpknselg23.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpknselg23.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sorter_function(x, y) = n_ones(x) == n_ones(y) ? x - y : n_ones(x) - n_ones(y)\n\
    \    return sort(arr, by = sorter_function)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjg_nvhcg.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching (::var\"#sorter_function#1\")(::Int64)\n  Closest candidates\
    \ are:\n    (::var\"#sorter_function#1\")(::Any, !Matched::Any) at /tmp/tmpjg_nvhcg.jl:12\n\
    \  Stacktrace:\n    [1] lt(o::Base.Order.By{var\"#sorter_function#1\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#sorter_function#1\"\
    , Tuple{Symbol}, NamedTuple{(:by,), Tuple{var\"#sorter_function#1\"}}})\n    \
    \  @ Base.Sort ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @\
    \ Main /tmp/tmpjg_nvhcg.jl:13\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpjg_nvhcg.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpjg_nvhcg.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpjg_nvhcg.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching (::var\"#sorter_function#1\")(::Int64)\n  Closest candidates are:\n\
    \    (::var\"#sorter_function#1\")(::Any, !Matched::Any) at /tmp/tmpjg_nvhcg.jl:12\n\
    \  Stacktrace:\n    [1] lt(o::Base.Order.By{var\"#sorter_function#1\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#sorter_function#1\"\
    , Tuple{Symbol}, NamedTuple{(:by,), Tuple{var\""
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjg_nvhcg.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbca6q8h9.jl:1\nin expression starting at /tmp/tmpbca6q8h9.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by=x->(bin(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsdls6_dq.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmpsdls6_dq.jl:12\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpsdls6_dq.jl:12\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpsdls6_dq.jl:19 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpsdls6_dq.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpsdls6_dq.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmpsdls6_dq.jl:12\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsdls6_dq.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = x -> [sum(digits(x, base=2)), x])\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbypnyq5s.jl:20\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -3, -4, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbypnyq5s.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbypnyq5s.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbypnyq5s.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by=x->(string(x, base=2),x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqm_rn1cr.jl:19\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 4, 5, 3] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqm_rn1cr.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqm_rn1cr.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpqm_rn1cr.jl:20\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -4, -5, -3, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqm_rn1cr.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqm_rn1cr.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpqm_rn1cr.jl:23\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 4, 4, 77, 5, 5, 5, 3, 3, 7] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqm_rn1cr.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqm_rn1cr.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpqm_rn1cr.jl:24\n  Expression: candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44]\n   Evaluated: [32, 5, 44, 3, 6, 12] == [32, 3,\
    \ 5, 6, 12, 44]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqm_rn1cr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqm_rn1cr.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    temp = []\n    for i in 1:length(arr)\n        bin_i = bin(abs(arr[i]))\n\
    \        temp = append!(temp, (length(bin_i[2:end]) - length(replace(bin_i[2:end],\
    \ \"0\", \"\"))) * 10 + abs(arr[i]))\n    end\n    sorted_temp = sort(temp)\n\
    \    for i in 1:length(sorted_temp)\n        sorted_temp[i] = sorted_temp[i] %\
    \ 10\n    end\n    return sorted_temp\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4e3bpab2.jl:28\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n    \
    \ @ Main /tmp/tmp4e3bpab2.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4e3bpab2.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4e3bpab2.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp4e3bpab2.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp4e3bpab2.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4e3bpab2.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4e3bpab2.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp4e3bpab2.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bin not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp4e3bpab2.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4e3bpab2.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4e3bpab2.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp4e3bpab2.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: bin not defined\n  Stacktrace:\n   [1] sort_arra"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4e3bpab2.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n  sorted_by_ones = sort(arr, by=n -> (count(x -> x == '1', bin(n))[1], n))\n\
    \  return sorted_by_ones\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz9ekvuax.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n    [1] (::var\"#1#3\")(n::Int64)\n      @ Main\
    \ /tmp/tmpz9ekvuax.jl:12\n    [2] lt(o::Base.Order.By{var\"#1#3\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpz9ekvuax.jl:12\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpz9ekvuax.jl:20 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpz9ekvuax.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpz9ekvuax.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#3\")(n::Int64)\n      @ Main\
    \ /tmp/tmpz9ekvuax.jl:12\n    [2] lt(o::Base.Order.By{var\"#1#3\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz9ekvuax.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    table = Pair[]\n    if any(arr.<0)\n        arr = abs.(arr)\n    end\n\
    \    for i in arr\n        push!(table, Pair(i, count_ones(i)))\n    end\n   \
    \ sort!(table, by = t -> (t.value, t.key))\n    return [i.key for i in table]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplwfgiexz.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  type Pair has\
    \ no field value\n  Stacktrace:\n    [1] getproperty\n      @ ./Base.jl:42 [inlined]\n\
    \    [2] (::var\"#1#3\")(t::Pair{Int64, Int64})\n      @ Main /tmp/tmplwfgiexz.jl:19\n\
    \    [3] lt(o::Base.Order.By{var\"#1#3\", Base.Order.ForwardOrdering}, a::Pair{Int64,\
    \ Int64}, b::Pair{Int64, Int64})\n      @ Base.Order ./ordering.jl:111\n    [4]\
    \ sort!\n      @ ./sort.jl:507 [inlined]\n    [5] sort!(v::Vector{Pair}, lo::Int64,\
    \ hi::Int64, a::Base.Sort.MergeSortAlg, o::Base.Order.By{var\"#1#3\", Base.Order.ForwardOrdering},\
    \ t::Vector{Pair})\n      @ Base.Sort ./sort.jl:592\n    [6] sort!\n      @ ./sort.jl:591\
    \ [inlined]\n    [7] sort!\n      @ ./sort.jl:664 [inlined]\n    [8] #sort!#8\n\
    \      @ ./sort.jl:725 [inlined]\n    [9] sort_array(arr::Vector{Int64})\n   \
    \   @ Main /tmp/tmplwfgiexz.jl:19\n   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmplwfgiexz.jl:27 [inlined]\n\
    \   [12] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [13] top-level scope\n      @ /tmp/tmplwfgiexz.jl:26\ntest set:\
    \ Error During Test at /tmp/tmplwfgiexz.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  type Pair has no\
    \ field value\n  Stacktrace:\n    [1] getproperty\n      @ ./Base.jl:42 [inlined]\n\
    \    [2] (::var\"#1#3\")(t::Pair{Int64, Int64})\n      @ Main /tmp/tmplwfgiexz.jl:19\n\
    \    [3] lt(o::Base.Order.By{var\"#1#3\", Base.Order.ForwardOrdering}, a::Pair{Int64,\
    \ Int64}, b::Pair{Int64, Int64})\n      @ Base.Order ./ordering.jl:111\n    [4]\
    \ sort!\n      @ ./sort.jl:507 [inlined]\n    [5] sort!(v::Vector{Pair}, lo::Int64,\
    \ hi::Int64, a::Base.Sort.MergeSortAlg, o::Base.Order.By{var\"#1#3\", Base.Order.ForwardOrdering},\
    \ t::Vector{Pair})\n      @ Base.Sort ./sort.jl:592\n    [6] sort!\n      @ ./sort.jl:591\
    \ [inlined]\n    [7] sort!\n      @ ./sort.jl"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplwfgiexz.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by=v->(count_ones(v), v))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3thsrxmj.jl:20\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3thsrxmj.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3thsrxmj.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3thsrxmj.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    temp = zeros(length(arr))\n    for i in 1:length(arr)\n        if arr[i]\
    \ >= 0\n            temp[i] = bin2dec(Int(string(bitstring(arr[i]))))\n      \
    \  else\n            temp[i] = -bin2dec(Int(string(bitstring(-arr[i]))))\n   \
    \     end\n    end\n    return sort(temp)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8b1n4j_5.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching Int64(::String)\n  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{Int32, Int64} at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:51\n\
    \    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number}\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:50\n    (::Type{T})(!Matched::BigInt)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8} at /shared/centos7/julia/1.7.3/share/julia/base/gmp.jl:357\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp8b1n4j_5.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8b1n4j_5.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8b1n4j_5.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp8b1n4j_5.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching Int64(::String)\n  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{Int32, Int64} at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:51\n\
    \    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number}\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:50\n    (::Type{T})(!Matched::BigInt)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8} at /shared/centos7/julia/1.7.3/share/julia/base/gmp.jl:357\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp8b1n4j_5.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8b1n4j_5.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/sr"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8b1n4j_5.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(arr)\n    indices = sortperm(bit_length.(arr))\n    sorted_arr\
    \ = Vector{Int64}(undef, n)\n    for i in indices\n        sorted_arr[i] = arr[i]\n\
    \    end\n    return sorted_arr\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp76hhyzju.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bit_length not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp76hhyzju.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp76hhyzju.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp76hhyzju.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp76hhyzju.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bit_length\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp76hhyzju.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp76hhyzju.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp76hhyzju.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp76hhyzju.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bit_length not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp76hhyzju.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp76hhyzju.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp76hhyzju.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp76hhyzju.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: bit_length\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr:"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp76hhyzju.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \n    arr_sorted = sort(arr, by=x->count_ones(Int64(x)), rev=true)\n \
    \   return arr_sorted\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbhi_unwn.jl:21\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [5, 3, 1, 2, 4] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhi_unwn.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhi_unwn.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbhi_unwn.jl:22\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -5, -4, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhi_unwn.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhi_unwn.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbhi_unwn.jl:23\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [3, 1, 2, 4, 0] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhi_unwn.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhi_unwn.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbhi_unwn.jl:25\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [77, 7,\
    \ 5, 5, 3, 5, 3, 2, 4, 2, 4] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhi_unwn.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbhi_unwn.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    b_ones = [count_ones(i) for i in arr]\n    r = sortperm(b_ones)\n    p\
    \ = b_ones[r]\n    k = sortperm(p)\n    return arr[r[k]]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpthyb2n_k.jl:23\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 4, 5, 3] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpthyb2n_k.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpthyb2n_k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpthyb2n_k.jl:24\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-4, -6, -2, -3, -5] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpthyb2n_k.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpthyb2n_k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpthyb2n_k.jl:27\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 4,\
    \ 2, 4, 5, 5, 3, 5, 3, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpthyb2n_k.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpthyb2n_k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpthyb2n_k.jl:28\n  Expression: candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44]\n   Evaluated: [32, 3, 6, 12, 5, 44] == [32, 3,\
    \ 5, 6, 12, 44]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpthyb2n_k.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpthyb2n_k.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    x = [zeros(Int64,1) for i in arr]\n    for i in eachindex(arr)\n     \
    \   x[i] = bitcount(arr[i])\n    end\n    x, arr = sortperm(x, 1), sort(arr, 1)\n\
    \    sort(arr, by=x)\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7io3epc2.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bitcount not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp7io3epc2.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7io3epc2.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7io3epc2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp7io3epc2.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bitcount\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp7io3epc2.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7io3epc2.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7io3epc2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp7io3epc2.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bitcount not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp7io3epc2.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7io3epc2.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7io3epc2.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp7io3epc2.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  MethodError: no method\
    \ matching sortperm(::Vector{Vector{Int64}}, ::Int64)\n  Clo"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7io3epc2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    total_ones = [zeros(Int64, 1) for i in 1:length(arr)]\n    for i in 1:length(arr)\n\
    \        bin = Int64(dec2bin(arr[i]))\n        total_ones[i] = count(x -> x ==\
    \ '1', string(bin))\n    end\n    index = sortperm(total_ones)\n    sort(arr)[index]\n\
    end\n```\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn41g__xq.jl:20\nin expression starting at\
    \ /tmp/tmpn41g__xq.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    s = sort(arr)\n    t = sort(s, by=i->(count(x->x=='1', convert(Int64,\
    \ binary(i))), i))\n    return(t)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpua4yuf_p.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ binary not defined\n  Stacktrace:\n    [1] (::var\"#1#3\")(i::Int64)\n     \
    \ @ Main /tmp/tmpua4yuf_p.jl:13\n    [2] lt(o::Base.Order.By{var\"#1#3\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpua4yuf_p.jl:13\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpua4yuf_p.jl:21 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpua4yuf_p.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpua4yuf_p.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: binary\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#3\")(i::Int64)\n      @ Main\
    \ /tmp/tmpua4yuf_p.jl:13\n    [2] lt(o::Base.Order.By{var\"#1#3\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpua4yuf_p.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    tmp = sortperm(sum(x->bitcount(x), arr), sortperm(arr, rev=true))\n  \
    \  return [arr[i] for i in tmp]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp34zh63z2.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bitcount not defined\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::Int64)\n   \
    \   @ Main /tmp/tmp34zh63z2.jl:12\n    [2] _mapreduce(f::var\"#1#3\", op::typeof(Base.add_sum),\
    \ #unused#::IndexLinear, A::Vector{Int64})\n      @ Base ./reduce.jl:410\n   \
    \ [3] _mapreduce_dim\n      @ ./reducedim.jl:330 [inlined]\n    [4] #mapreduce#731\n\
    \      @ ./reducedim.jl:322 [inlined]\n    [5] mapreduce\n      @ ./reducedim.jl:322\
    \ [inlined]\n    [6] #_sum#741\n      @ ./reducedim.jl:894 [inlined]\n    [7]\
    \ _sum\n      @ ./reducedim.jl:894 [inlined]\n    [8] #sum#739\n      @ ./reducedim.jl:890\
    \ [inlined]\n    [9] sum\n      @ ./reducedim.jl:890 [inlined]\n   [10] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmp34zh63z2.jl:12\n   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp34zh63z2.jl:20 [inlined]\n\
    \   [13] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp34zh63z2.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp34zh63z2.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bitcount\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::Int64)\n      @ Main\
    \ /tmp/tmp34zh63z2.jl:12\n    [2] _mapreduce(f::var\"#1#3\", op::typeof(Base.add_sum),\
    \ #unused#::IndexLinear, A::Vector{Int64})\n      @ Base ./reduce.jl:410\n   \
    \ [3] _mapreduce_dim\n      @ ./reducedim.jl:330 [inlined]\n    [4] #mapreduce#731\n\
    \      @ ./reducedim.jl:322 [inlined]\n    [5] mapreduce\n      @ ./reducedim.jl:322\
    \ [inlined]\n    [6] #_sum#741\n      @ ./reducedim.jl:894 [inlined]\n    [7]\
    \ _sum\n      @ ./reducedim.jl:894 [inlined]\n    [8] #sum#739\n      @ ./reducedim.jl:890\
    \ [inlined]\n    [9] sum\n      @ ./reducedim.jl:890 [inlined]\n   [10] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmp34zh63z2.jl:12"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp34zh63z2.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    arr_sort = sort(arr, by = x -> (length(findall(x, 0)), x))\n    return\
    \ arr_sort\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp4n8kuun.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching findall(::Int64, ::Int64)\n  Closest candidates are:\n    findall(!Matched::Base.Fix2{typeof(in)},\
    \ ::Number) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2318\n  \
    \  findall(!Matched::Function, ::Number) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2317\n\
    \    findall(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2253\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpp4n8kuun.jl:12\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpp4n8kuun.jl:12\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpp4n8kuun.jl:20 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpp4n8kuun.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpp4n8kuun.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching findall(::Int64, ::Int64)\n  Closest candidates are:\n    findall(!Matched::Base.Fix2{typeof(in)},\
    \ ::Number) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2318\n  \
    \  findall(!Matched::Function, ::Number) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:2317\n\
    \    findall(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp4n8kuun.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"\n    sort elements in the array according to\n    number of ones\
    \ in their binary representation in ascending order.\n    For similar number of\
    \ ones, sort based on decimal value.\n    \"\"\"\n    # array of tuples (num_ones,\
    \ number)\n    # [ (4, 1), (2, 5), (2, 3), (2, 2), (1, 4) ]\n    # sort(array_of_tuples,\
    \ by=first)\n    arr_nones = [(ones(x), x) for x in arr]\n    sorted_arr = sort(arr_nones,\
    \ by=first)[:,2]\n    return sorted_arr\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbm_b2s07.jl:29\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  BoundsError: attempt\
    \ to access 5-element Vector{Tuple{Vector{Float64}, Int64}} at index [1:5, 2]\n\
    \  Stacktrace:\n   [1] throw_boundserror(A::Vector{Tuple{Vector{Float64}, Int64}},\
    \ I::Tuple{Base.Slice{Base.OneTo{Int64}}, Int64})\n     @ Base ./abstractarray.jl:691\n\
    \   [2] checkbounds\n     @ ./abstractarray.jl:656 [inlined]\n   [3] _getindex\n\
    \     @ ./multidimensional.jl:838 [inlined]\n   [4] getindex\n     @ ./abstractarray.jl:1218\
    \ [inlined]\n   [5] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpbm_b2s07.jl:21\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpbm_b2s07.jl:29 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpbm_b2s07.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpbm_b2s07.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  ArgumentError: invalid\
    \ Array dimensions\n  Stacktrace:\n    [1] Array\n      @ ./boot.jl:457 [inlined]\n\
    \    [2] Array\n      @ ./boot.jl:466 [inlined]\n    [3] ones\n      @ ./array.jl:525\
    \ [inlined]\n    [4] ones\n      @ ./array.jl:522 [inlined]\n    [5] ones\n  \
    \    @ ./array.jl:520 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [8] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:724\n    [9] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpbm_b2s07.jl:20\n   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmpbm_b2s07.jl:30 [inlined]\n\
    \   [12] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [13] top-level scope\n      @ /tmp/tmpbm_b2s07.jl:28\ntest set:\
    \ Error "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbm_b2s07.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    nonneg = filter(x -> x >= 0, arr)\n    if length(nonneg) == 0\n      \
    \  return arr\n    end\n    neg = filter(x -> x < 0, arr)\n    abs_arr = abs.(nonneg)\n\
    \    sorted_arr = sort(abs_arr,\n        by = x -> (sum(digits(x, base=2)), x))\n\
    \    return [neg; sorted_arr]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4u8lwown.jl:28\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -4, -5, -6]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4u8lwown.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4u8lwown.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4u8lwown.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    newArr = zeros(length(arr))\n    for i in 1:length(arr)\n        x = arr[i]\n\
    \        y = count_ones(x)\n        newArr[i] = convert(Int64, y)\n    end\n \
    \   sorted = sort(newArr)\n    return sorted\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp47xck76e.jl:26\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 1, 1, 2, 2] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp47xck76e.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp47xck76e.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp47xck76e.jl:27\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [62, 62, 63, 63, 63] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp47xck76e.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp47xck76e.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp47xck76e.jl:28\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 1, 1, 2] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp47xck76e.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp47xck76e.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp47xck76e.jl:30\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [1, 1,\
    \ 1, 1, 2, 2, 2, 2, 2, 3, 4] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp47xck76e.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sco"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp47xck76e.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    vec_ones = map(x -> count_ones(x), arr) # vector of ones\n    index_sort\
    \ = sortperm(vec_ones)\n    sort(arr, by=index_sort)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3dtp6b22.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: objects\
    \ of type Vector{Int64} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Int64}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Int64},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Int64}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp3dtp6b22.jl:14\n\
    \    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmp3dtp6b22.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmp3dtp6b22.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp3dtp6b22.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: objects\
    \ of type Vector{Int64} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Int64}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Int64},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Int64}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp3dtp6b22.jl:14\n\
    \    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/sha"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3dtp6b22.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by = x -> [bitstring(x), x])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqg8e2u7f.jl:19\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqg8e2u7f.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqg8e2u7f.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpqg8e2u7f.jl:20\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqg8e2u7f.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqg8e2u7f.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpqg8e2u7f.jl:21\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqg8e2u7f.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqg8e2u7f.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpqg8e2u7f.jl:23\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqg8e2u7f.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqg8e2u7f.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # return sort(arr, by=x->(count(x) for x in bits(x)))\n    # return sort(arr,\
    \ by=x->(count(x) for x in bitstring(x)))\n    return sort(arr, by=x->(count(x)\
    \ for x in bitstring(x, base=2)))\nend\n@testset \"Tests\" begin\n    @test sort_array([1,\
    \ 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    @test sort_array([-2, -3, -4, -5, -6])\
    \ == [-6, -5, -4, -3, -2]\n    @test sort_array([1, 0, 2, 3, 4]) == [0, 1, 2,\
    \ 3, 4]\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @testset not defined\nin expression starting\
    \ at /tmp/tmpfzdd60p4.jl:16\nin expression starting at /tmp/tmpfzdd60p4.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # First Solution:\n    # ---------------\n    # # Create an matrix of\
    \ zeros with the length of the vector 'arr'\n    # ones_per_number = zeros(Int64,\
    \ length(arr))\n    # for i = 1:length(arr)\n    #     n = count_ones(arr[i])\n\
    \    #     ones_per_number[i] = n\n    # end\n    # # ones_per_number = [count_ones(arr[i])\
    \ for i = 1:length(arr)]\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjo7xr9y3.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjo7xr9y3.jl:1\n\
    in expression starting at /tmp/tmpjo7xr9y3.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    arr_bitcount = Int64[bitcount(i) for i in arr]\n    sort!(arr_bitcount,\
    \ by= (x,y) -> (x > y))\n    return arr_bitcount\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0xmm35pr.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bitcount not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp0xmm35pr.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0xmm35pr.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0xmm35pr.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp0xmm35pr.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bitcount\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp0xmm35pr.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0xmm35pr.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0xmm35pr.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp0xmm35pr.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bitcount not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp0xmm35pr.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0xmm35pr.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0xmm35pr.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp0xmm35pr.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: bitcount not defined\n  Stacktra"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0xmm35pr.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    arr_ones = [sum(num2bin(x).==1) for x in arr]\n    return sortperm(arr_ones)[sortperm(arr)]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7i7y96m5.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ num2bin not defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp7i7y96m5.jl:12\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp7i7y96m5.jl:20 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp7i7y96m5.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp7i7y96m5.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: num2bin\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp7i7y96m5.jl:12\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp7i7y96m5.jl:21 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp7i7y96m5.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp7i7y96m5.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: num2bin not\
    \ defined\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#2\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp7i7y96m5.jl"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7i7y96m5.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    (binary, decimal) = _sort_array(arr)\n    sort!(collect(zip(binary, decimal)),\
    \ by=x->(x[1], -x[2]))[:,2]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8qd212to.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ _sort_array not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp8qd212to.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8qd212to.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8qd212to.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8qd212to.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: _sort_array\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp8qd212to.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8qd212to.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8qd212to.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8qd212to.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: _sort_array\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp8qd212to.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8qd212to.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8qd212to.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8qd212to.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: _sort_array\
    \ not defined\n  Stacktrace:\n   [1] sort_array("
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8qd212to.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    function ones(x::Int64)::Int64\n        cnt = 0\n        while x > 0\n\
    \            if mod(x, 2) == 1\n                cnt += 1\n            end\n  \
    \          x = div(x, 2)\n        end\n        return cnt\n    end\n    new_arr\
    \ = [ones(x) for x in arr]\n    mapping = Dict()\n    for i in 1:length(arr)\n\
    \        if haskey(mapping, new_arr[i])\n            push!(mapping[new_arr[i]],\
    \ arr[i])\n        else\n            mapping[new_arr[i]] = [arr[i]]\n        end\n\
    \    end\n    ret = Vector{Int64}()\n    for key in sort(collect(keys(mapping)))\n\
    \        ret = vcat(ret, sort(mapping[key]))\n    end\n    return ret\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpra71bb4f.jl:43\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpra71bb4f.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpra71bb4f.jl:41\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpra71bb4f.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    #your code here\n    return ones_sort(arr)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_2595amw.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ ones_sort not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp_2595amw.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_2595amw.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_2595amw.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp_2595amw.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: ones_sort\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp_2595amw.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_2595amw.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_2595amw.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp_2595amw.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: ones_sort not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp_2595amw.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_2595amw.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_2595amw.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp_2595amw.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: ones_sort\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vec"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_2595amw.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = (k) -> count_ones(k) > 0 ? (count_ones(k), k) :\
    \ (0, k))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpclteuge7.jl:20\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpclteuge7.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpclteuge7.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpclteuge7.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n  return sort(arr, by=x->(Base.bitcount(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpj_0z18pk.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching bitcount(::Int64)\n  Closest candidates are:\n    bitcount(!Matched::Vector{UInt64};\
    \ init) at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:1442\n  Stacktrace:\n\
    \    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpj_0z18pk.jl:12\n    [2]\
    \ lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64, b::Int64)\n\
    \      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n      @ ./sort.jl:664\
    \ [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n    [7] sort(v::Vector{Int64};\
    \ kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol}, NamedTuple{(:by,), Tuple{var\"\
    #1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpj_0z18pk.jl:12\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpj_0z18pk.jl:19 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpj_0z18pk.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpj_0z18pk.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching bitcount(::Int64)\n  Closest candidates are:\n    bitcount(!Matched::Vector{UInt64};\
    \ init) at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:1442\n  Stacktrace:\n\
    \    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpj_0z18pk.jl:12\n    [2]\
    \ lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64, b::Int64)\n\
    \      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n      @ ./sort.jl:664\
    \ [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n    [7] sort(v::Vector"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj_0z18pk.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Array{Tuple{Int64, Int64}, 1}\n    sorted_bins = sort!(map(integer_to_binary_and_decimal,\
    \ arr))\n    # Vector{Int64}\n    return map(convert_to_decimal, sorted_bins)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzngfkcli.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ integer_to_binary_and_decimal not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpzngfkcli.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzngfkcli.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzngfkcli.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpzngfkcli.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: integer_to_binary_and_decimal\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpzngfkcli.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzngfkcli.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzngfkcli.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpzngfkcli.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: integer_to_binary_and_decimal\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpzngfkcli.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzngfkcli.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzngfkcli.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpzngfkcli.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: in"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzngfkcli.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # sort 1,2,3,4,5,6,7,8,9,10\n    return sort(arr, by=bin) # convert to\
    \ binary, return string\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqzu23b6v.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n    \
    \ @ Main /tmp/tmpqzu23b6v.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqzu23b6v.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqzu23b6v.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpqzu23b6v.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpqzu23b6v.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqzu23b6v.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqzu23b6v.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpqzu23b6v.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bin not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpqzu23b6v.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqzu23b6v.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqzu23b6v.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpqzu23b6v.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: bin not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqzu23b6v.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by=x->(sum(bitstring(x) .== '1'), x))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwleux86w.jl:19\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwleux86w.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwleux86w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpwleux86w.jl:20\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwleux86w.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwleux86w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpwleux86w.jl:21\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwleux86w.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwleux86w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpwleux86w.jl:23\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwleux86w.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwleux86w.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = x -> (bitstring(x)[2:end], x))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprob1vs1l.jl:19\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprob1vs1l.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprob1vs1l.jl:18\ntest set: Test\
    \ Failed at /tmp/tmprob1vs1l.jl:20\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprob1vs1l.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprob1vs1l.jl:18\ntest set: Test\
    \ Failed at /tmp/tmprob1vs1l.jl:21\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprob1vs1l.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprob1vs1l.jl:18\ntest set: Test\
    \ Failed at /tmp/tmprob1vs1l.jl:23\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprob1vs1l.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprob1vs1l.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n  # code goes here\n  return arr\nend\n \n@testset \"Basic Tests\" begin\n\
    \    @test sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    @test sort_array([-2,\
    \ -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    @test sort_array([1, 0, 2, 3,\
    \ 4]) == [0, 1, 2, 3, 4]\n    @test sort_array([0, 0, 0, 0, 0]) == [0, 0, 0, 0,\
    \ 0]\n    @test sort_array([6, 2, 1, 0, 10, 2, 4, 2, 7, 4, 1, 0, 8, 2, 0, 4, 0,\
    \ 2, 8, 2, 0, 2, 3, 3, 7, 1, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2, 2, 7, 2, 0, 2, 7, 0,\
    \ 1, 2, 7, 2, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2,\
    \ 7, 2, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2, 7, 2,\
    \ 0, 2, 7, 2, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2,\
    \ 7, 2, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2, 7, 2,\
    \ 0, 2, 7, 2, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2, 7, 2, 0, 2,\
    \ 7, 2, 0,\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing separator in array expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmperm8kjv3.jl:24\nin expression starting at\
    \ /tmp/tmperm8kjv3.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    arr[sortperm(tuple(sum(bitstring(x) == '1' for x in el) for el in arr))]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxox54uec.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching sortperm(::Tuple{Base.Generator{Vector{Int64}, var\"#1#3\"}})\n\
    \  Closest candidates are:\n    sortperm(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1309\n\
    \    sortperm(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1310\n\
    \    sortperm(!Matched::AbstractVector; alg, lt, by, rev, order) at /shared/centos7/julia/1.7.3/share/julia/base/sort.jl:907\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpxox54uec.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxox54uec.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxox54uec.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpxox54uec.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching sortperm(::Tuple{Base.Generator{Vector{Int64}, var\"#1#3\"}})\n  Closest\
    \ candidates are:\n    sortperm(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1309\n\
    \    sortperm(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1310\n\
    \    sortperm(!Matched::AbstractVector; alg, lt, by, rev, order) at /shared/centos7/julia/1.7.3/share/julia/base/sort.jl:907\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpxox54uec.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxox54uec.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxox54uec.jl:18\ntest set"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxox54uec.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    A = [reversed(bits(x)) for x in arr]\n    N = length(A[1])\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1kili972.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1kili972.jl:1\n\
    in expression starting at /tmp/tmp1kili972.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by=x->(length(int2bin(x)), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx4owxyal.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ int2bin not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n    \
    \  @ Main /tmp/tmpx4owxyal.jl:12\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpx4owxyal.jl:12\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpx4owxyal.jl:19 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpx4owxyal.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpx4owxyal.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: int2bin\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmpx4owxyal.jl:12\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    ["
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx4owxyal.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc76lupqx.jl:20\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc76lupqx.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc76lupqx.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc76lupqx.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by=x->(sum(digits(x, 2)), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuizhstql.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpuizhstql.jl:12\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpuizhstql.jl:12\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpuizhstql.jl:19 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpuizhstql.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpuizhstql.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpuizhstql.jl:12\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Ba"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuizhstql.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    res = sort(arr, by = x -> (count_ones(x), x))\n    return res\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz9znpoi1.jl:21\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpz9znpoi1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpz9znpoi1.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz9znpoi1.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    #sorting in ascending order according to the number of 1's in their binary\
    \ representation\n    #for similar number of 1's, sort based on decimal value\n\
    \    return sort(arr, by = (i -> bin(i)) )\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnvota3lh.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(i::Int64)\n      @ Main\
    \ /tmp/tmpnvota3lh.jl:14\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpnvota3lh.jl:14\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpnvota3lh.jl:21 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpnvota3lh.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpnvota3lh.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(i::Int64)\n      @ Main\
    \ /tmp/tmpnvota3lh.jl:14\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnvota3lh.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = bits)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpr01f9m1d.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n   \
    \  @ Main /tmp/tmpr01f9m1d.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr01f9m1d.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr01f9m1d.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpr01f9m1d.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpr01f9m1d.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr01f9m1d.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr01f9m1d.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpr01f9m1d.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bits not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpr01f9m1d.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr01f9m1d.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr01f9m1d.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpr01f9m1d.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: bits not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ M"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr01f9m1d.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by = x -> (bitstring(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu4utslue.jl:19\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu4utslue.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu4utslue.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu4utslue.jl:20\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu4utslue.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu4utslue.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu4utslue.jl:21\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu4utslue.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu4utslue.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu4utslue.jl:23\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu4utslue.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu4utslue.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"\n    Sort integer array by number of set bits.\n    \"\"\"\n  \
    \  sorting_dict = Dict()\n    for elem in arr\n        len_of_bin_rep = len(string(elem,\
    \ base=2)) - 2\n        push!(sorting_dict[len_of_bin_rep], elem)\n    end\n \
    \   sorted_arr = []\n    for key in sort(collect(keys(sorting_dict)))\n      \
    \  sort!(sorting_dict[key])\n        append!(sorted_arr, sorting_dict[key])\n\
    \    end\n    return vcat(sorted_arr...)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmvu_skvl.jl:32\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ len not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n    \
    \ @ Main /tmp/tmpmvu_skvl.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmvu_skvl.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmvu_skvl.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpmvu_skvl.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: len\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpmvu_skvl.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmvu_skvl.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmvu_skvl.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpmvu_skvl.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: len not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpmvu_skvl.jl:17\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmvu_skvl.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmvu_skvl.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpmvu_skvl.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: len not defined\n  Stacktrace:\n   [1] sort_arra"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmvu_skvl.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # sort non-negative integers according to number of ones in their binary\n\
    \    # representation in ascending order.\n    sorted_arr = sort(arr, by=x->count(Int64,collect(digits(x,2))),\
    \ rev=true)\n    return sorted_arr\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb5gfon4s.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpb5gfon4s.jl:14\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [5] sort!(v::Vector{Int64}, alg::Base.Sort.QuickSortAlg, order::Base.Order.By{var\"\
    #1#2\", Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}})\n      @ Base.Sort\
    \ ./sort.jl:664\n    [6] sort!(v::Vector{Int64}; alg::Base.Sort.QuickSortAlg,\
    \ lt::Function, by::Function, rev::Bool, order::Base.Order.ForwardOrdering)\n\
    \      @ Base.Sort ./sort.jl:725\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpb5gfon4s.jl:14\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpb5gfon4s.jl:22 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpb5gfon4s.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpb5gfon4s.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb5gfon4s.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Your code here\n    return sort(arr, by = (x->(Int(log2(x)), x)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyx84ecya.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  InexactError:\
    \ Int64(2.321928094887362)\n  Stacktrace:\n    [1] Int64\n      @ ./float.jl:812\
    \ [inlined]\n    [2] #1\n      @ /tmp/tmpyx84ecya.jl:13 [inlined]\n    [3] lt(o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering}, a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n\
    \    [4] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg,\
    \ o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:507\n    [5] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:574\n    [6] sort!\n      @ ./sort.jl:664 [inlined]\n    [7] #sort!#8\n\
    \      @ ./sort.jl:725 [inlined]\n    [8] #sort#9\n      @ ./sort.jl:772 [inlined]\n\
    \    [9] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpyx84ecya.jl:13\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmpyx84ecya.jl:20 [inlined]\n\
    \   [12] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [13] top-level scope\n      @ /tmp/tmpyx84ecya.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpyx84ecya.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  DomainError with\
    \ -3.0:\n  log2 will only return a complex result if called with a complex argument.\
    \ Try log2(Complex(x)).\n  Stacktrace:\n    [1] throw_complex_domainerror(f::Symbol,\
    \ x::Float64)\n      @ Base.Math ./math.jl:33\n    [2] _log(x::Float64, base::Val{2},\
    \ func::Symbol)\n      @ Base.Math ./special/log.jl:304\n    [3] log2\n      @\
    \ ./special/log.jl:268 [inlined]\n    [4] log2\n      @ ./math.jl:1221 [inlined]\n\
    \    [5] #1\n      @ /tmp/tmpyx84ecya.jl:13 [inlined]\n    [6] lt(o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering}, a::Int64, b::Int64)\n      @ Ba"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyx84ecya.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    arr_bin = map(a -> bitstring(a,base=2), arr)\n    arr_bin = map(a -> count(a,\
    \ \"1\"), arr_bin)\n    sort_arr = sort(arr_bin)\n    sort_arr = map(a -> find(arr_bin\
    \ .== a), sort_arr)\n    sort_arr = flatten(sort_arr)\n    sort_arr = map(a ->\
    \ arr[a], sort_arr)\n    return sort_arr\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp96etjj56.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching bitstring(::Int64; base=2)\n  Closest candidates are:\n    bitstring(::Union{Float64,\
    \ Int64, UInt64}) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:813\
    \ got unsupported keyword argument \"base\"\n    bitstring(!Matched::Union{Bool,\
    \ Int8, UInt8}) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:810\
    \ got unsupported keyword argument \"base\"\n    bitstring(!Matched::Union{Float16,\
    \ Int16, UInt16}) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:811\
    \ got unsupported keyword argument \"base\"\n    ...\n  Stacktrace:\n    [1] (::var\"\
    #1#5\")(a::Int64)\n      @ Main /tmp/tmp96etjj56.jl:12\n    [2] iterate\n    \
    \  @ ./generator.jl:47 [inlined]\n    [3] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64},\
    \ var\"#1#5\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:744\n    [4] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \    [5] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmp96etjj56.jl:12\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp96etjj56.jl:25 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp96etjj56.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp96etjj56.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching bitstring(::Int64; base=2)\n  Closest candidates are:\n    bitstring(::Union{Float64,\
    \ Int64, UInt64}) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:813\
    \ got unsupported keyword argument \"base\"\n    bitstring(!Matched::Union{Bool,\
    \ Int8, UInt8}) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:810\
    \ got unsupported key"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp96etjj56.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # your code here\n    n = length(arr)\n    for i in 1:n-1\n        for\
    \ j in i+1:n\n            if bin(arr[i])[end-1] > bin(arr[j])[end-1]\n       \
    \         arr[i], arr[j] = arr[j], arr[i]\n            elseif bin(arr[i])[end-1]\
    \ == bin(arr[j])[end-1]\n                if arr[i] > arr[j]\n                \
    \    arr[i], arr[j] = arr[j], arr[i]\n                end\n            end\n \
    \       end\n    end\n    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptc7hs4fz.jl:32\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n    \
    \ @ Main /tmp/tmptc7hs4fz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptc7hs4fz.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptc7hs4fz.jl:31\ntest set:\
    \ Error During Test at /tmp/tmptc7hs4fz.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmptc7hs4fz.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptc7hs4fz.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptc7hs4fz.jl:31\ntest set:\
    \ Error During Test at /tmp/tmptc7hs4fz.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bin not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmptc7hs4fz.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptc7hs4fz.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptc7hs4fz.jl:31\ntest set:\
    \ Error During Test at /tmp/tmptc7hs4fz.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: bin not defined\n  Stacktrace:\n   [1] sort_arra"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptc7hs4fz.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    arr_len = length(arr)\n    # aux = [bin(x) for x in arr]\n    # print(aux)\n\
    \    # aux = [[sum(map(int, bin(x)[2:])), x] for x in arr]\n    # aux = [[sum(map(int,\
    \ string(x, base=2)[2:])), x] for x in arr]\n    aux = [[sum(map(int, string(x,\
    \ base=2)[2:])), x] for x in arr]\n    # aux = [[sum(map(int, base(x, 2)[2:])),\
    \ x] for x in arr]\n    # print(aux)\n    # aux = sorted(aux, key=lambda a:a[0])\n\
    \    # print(aux)\n    # aux = [x[1] for x in aux]\n    # print(aux)\n    # aux\
    \ = [x[1] for x in aux]\n    return aux\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxjjv9in3.jl:17\nin expression\
    \ starting at /tmp/tmpxjjv9in3.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # sort by the number of ones in their binary representation\n    # then\
    \ sort by the decimal value if there is a tie\n    sort(arr, by=x->(x[2],x[1]),\
    \ lt=x->x[1]<x[2])\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmd41bhr6.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  BoundsError\n\
    \  Stacktrace:\n    [1] getindex\n      @ ./number.jl:98 [inlined]\n    [2] #1\n\
    \      @ /tmp/tmpmd41bhr6.jl:14 [inlined]\n    [3] (::Base.Order.var\"#1#3\"{var\"\
    #2#4\", var\"#1#3\"})(x::Int64, y::Int64)\n      @ Base.Order ./ordering.jl:125\n\
    \    [4] lt(o::Base.Order.Lt{Base.Order.var\"#1#3\"{var\"#2#4\", var\"#1#3\"}},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:112\n    [5] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [6] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [7] sort!\n      @ ./sort.jl:664 [inlined]\n    [8] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [9] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Function,\
    \ Tuple{Symbol, Symbol}, NamedTuple{(:by, :lt), Tuple{var\"#1#3\", var\"#2#4\"\
    }}})\n      @ Base.Sort ./sort.jl:772\n   [10] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpmd41bhr6.jl:14\n   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmpmd41bhr6.jl:21 [inlined]\n\
    \   [13] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmpmd41bhr6.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpmd41bhr6.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  BoundsError\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./number.jl:98 [inlined]\n    [2] #1\n      @ /tmp/tmpmd41bhr6.jl:14\
    \ [inlined]\n    [3] (::Base.Order.var\"#1#3\"{var\"#2#4\", var\"#1#3\"})(x::Int64,\
    \ y::Int64)\n      @ Base.Order ./ordering.jl:125\n    [4] lt(o::Base.Order.Lt{Base.Order.var\"\
    #1#3\"{var\"#2#4\", var\"#1#3\"}}, a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:112\n\
    \    [5] sort!\n      @ ./sort.jl:507 [inlined]\n    [6] sort!\n      @ ./sort.jl:574\
    \ [inlined]\n    [7] sort!\n      @ ./sort.jl:664 [inlined]\n    [8] #sort!#8\n\
    \      @ ./sort.jl:725 [inlined]\n    [9] sort(v::Vector{Int64}; kws::Base.Pairs"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmd41bhr6.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    vals = []\n    for n in arr\n        if n < 0\n            push!(vals,\
    \ -n)\n        else\n            push!(vals, n)\n        end\n    end\n    sort!(vals,\
    \ by=x->count(bitstring(x), '1'), rev=true)\n    for i in 1:length(vals)\n   \
    \     if arr[i] < 0\n            vals[i] = -vals[i]\n        end\n    end\n  \
    \  return vals\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbx3tzri8.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: objects\
    \ of type String are not callable\n  Stacktrace:\n    [1] _simple_count(pred::String,\
    \ itr::Char, init::Int64)\n      @ Base ./reduce.jl:1206\n    [2] count(f::String,\
    \ itr::Char; init::Int64)\n      @ Base ./reduce.jl:1201\n    [3] count(f::String,\
    \ itr::Char)\n      @ Base ./reduce.jl:1201\n    [4] (::var\"#1#2\")(x::Int64)\n\
    \      @ Main /tmp/tmpbx3tzri8.jl:20\n    [5] lt(o::Base.Order.By{var\"#1#2\"\
    , Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}}, a::Int64, b::Int64)\n\
    \      @ Base.Order ./ordering.jl:111\n    [6] sort!(v::Vector{Any}, lo::Int64,\
    \ hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"#1#2\"\
    , Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}})\n      @ Base.Sort\
    \ ./sort.jl:507\n    [7] sort!(v::Vector{Any}, lo::Int64, hi::Int64, a::Base.Sort.MergeSortAlg,\
    \ o::Base.Order.By{var\"#1#2\", Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}},\
    \ t::Vector{Any})\n      @ Base.Sort ./sort.jl:592\n    [8] sort!\n      @ ./sort.jl:591\
    \ [inlined]\n    [9] sort!\n      @ ./sort.jl:664 [inlined]\n   [10] #sort!#8\n\
    \      @ ./sort.jl:725 [inlined]\n   [11] sort_array(arr::Vector{Int64})\n   \
    \   @ Main /tmp/tmpbx3tzri8.jl:20\n   [12] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [13] macro expansion\n      @ /tmp/tmpbx3tzri8.jl:33 [inlined]\n\
    \   [14] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [15] top-level scope\n      @ /tmp/tmpbx3tzri8.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpbx3tzri8.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: objects\
    \ of type String are not callable\n  Stacktrace:\n    [1] _simple_count(pred::String,\
    \ itr::Char, init::Int64)\n      @ Base ./reduce.jl:1206\n    [2] count(f::String,\
    \ itr::Char; init::Int64)\n      @ Base ./reduce.jl:1201\n    [3] count(f"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbx3tzri8.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # return [1, 2, 3, 4, 5]\n    count_ones(n::Int64) = length(split(string(n,\
    \ base=2), \"1\")) - 1\n    return sort(arr, by = count_ones)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqyspqm90.jl:21\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 4, 5, 3] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqyspqm90.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqyspqm90.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpqyspqm90.jl:22\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -4, -3, -5, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqyspqm90.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqyspqm90.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpqyspqm90.jl:25\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 4,\
    \ 2, 4, 5, 5, 3, 5, 3, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqyspqm90.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqyspqm90.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpqyspqm90.jl:26\n  Expression: candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44]\n   Evaluated: [32, 3, 6, 12, 5, 44] == [32, 3,\
    \ 5, 6, 12, 44]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqyspqm90.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqyspqm90.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    arr_bits = [count_ones(Int(to_string(x), 2)) for x in arr]\n    sindices\
    \ = sortperm(arr_bits)\n    sort!(arr, by=x->x[2])\n    return arr\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp751oqlq.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ to_string not defined\n  Stacktrace:\n   [1] (::var\"#1#3\")(x::Int64)\n   \
    \  @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpp751oqlq.jl:12\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpp751oqlq.jl:22 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpp751oqlq.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpp751oqlq.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: to_string\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#3\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n     @ ./array.jl:724\
    \ [inlined]\n   [4] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpp751oqlq.jl:12\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpp751oqlq.jl:23 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpp751oqlq.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpp751oqlq.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: to_string not\
    \ defined\n  Stacktrace:\n   [1] (::var\"#1#3\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n     @ ./array.jl:724\
    \ [inlined]\n   [4] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpp751oqlq.jl:12\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp751oqlq.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    for i = 1:length(arr)\n        for j = 1:length(arr)\n            if ones_in_binary(arr[i])\
    \ < ones_in_binary(arr[j]) || ones_in_binary(arr[i]) == ones_in_binary(arr[j])\
    \ && arr[i] < arr[j]\n                arr[i], arr[j] = arr[j], arr[i]\n      \
    \      end\n        end\n    end\n    return arr\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp18_0hp9f.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ ones_in_binary not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp18_0hp9f.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp18_0hp9f.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp18_0hp9f.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp18_0hp9f.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: ones_in_binary\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp18_0hp9f.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp18_0hp9f.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp18_0hp9f.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp18_0hp9f.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: ones_in_binary\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp18_0hp9f.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp18_0hp9f.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp18_0hp9f.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp18_0hp9f.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: ones_in_binar"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp18_0hp9f.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    if length(arr) <= 1\n        return arr\n    end\n    if length(arr) >\
    \ 1\n        x, xs = arr[1], arr[2:end]\n        xl, xr = [], []\n        for\
    \ i in xs\n            if i <= x\n                push!(xl, i)\n            else\n\
    \                push!(xr, i)\n            end\n        end\n        return sort_array(xl)\
    \ * x * sort_array(xr)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyzq2y38d.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching sort_array(::Vector{Any})\n  Closest candidates are:\n    sort_array(!Matched::Vector{Int64})\
    \ at /tmp/tmpyzq2y38d.jl:11\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpyzq2y38d.jl:25\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyzq2y38d.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyzq2y38d.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpyzq2y38d.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching sort_array(::Vector{Any})\n  Closest candidates are:\n    sort_array(!Matched::Vector{Int64})\
    \ at /tmp/tmpyzq2y38d.jl:11\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpyzq2y38d.jl:25\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyzq2y38d.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyzq2y38d.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpyzq2y38d.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: no method matching\
    \ sort_array(::Vector{Any})\n  Closest candidates are:\n    sort_array(!Matched::Vector{Int64})\
    \ at /tmp/tmpyzq2y38d.jl:11\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpyzq2y38d.jl:25\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpyzq2y38d.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/ju"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyzq2y38d.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpirjf9r_x.jl:20\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpirjf9r_x.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpirjf9r_x.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpirjf9r_x.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by=x->[count_ones(x), x])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe23w71x9.jl:20\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe23w71x9.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe23w71x9.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe23w71x9.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = n->(Int(binary(n)[2:end]), n))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7g7yrm23.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ binary not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(n::Int64)\n     \
    \ @ Main /tmp/tmp7g7yrm23.jl:12\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmp7g7yrm23.jl:12\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp7g7yrm23.jl:19 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp7g7yrm23.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp7g7yrm23.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: binary\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(n::Int64)\n      @ Main\
    \ /tmp/tmp7g7yrm23.jl:12\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7g7yrm23.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    num_ones(num::Int64) = bits(num)[end-1:end] |> sum |> Int64 \n    sort!(arr,\
    \ by=num_ones)\n    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpavayumv1.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n    [1] (::var\"#num_ones#1\")(num::Int64)\n\
    \      @ Main /tmp/tmpavayumv1.jl:12\n    [2] lt(o::Base.Order.By{var\"#num_ones#1\"\
    , Base.Order.ForwardOrdering}, a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n\
    \    [3] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg,\
    \ o::Base.Order.By{var\"#num_ones#1\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:507\n    [4] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.By{var\"#num_ones#1\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:574\n    [5] sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n\
    \      @ ./sort.jl:725 [inlined]\n    [7] sort_array(arr::Vector{Int64})\n   \
    \   @ Main /tmp/tmpavayumv1.jl:13\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpavayumv1.jl:21 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpavayumv1.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpavayumv1.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#num_ones#1\")(num::Int64)\n   \
    \   @ Main /tmp/tmpavayumv1.jl:12\n    [2] lt(o::Base.Order.By{var\"#num_ones#1\"\
    , Base.Order.ForwardOrdering}, a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n\
    \    [3] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg,\
    \ o::Base.Order.By{var\"#num_ones#1\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:507\n    [4] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.By{var\"#num_ones#1\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:574"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpavayumv1.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sortperm(arr)[sortperm(sum(Int(x) for x in bits(arr)))]; \nend;\n\
    @btime sort_array(arr);\n@btime sort(arr);\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @btime not defined\nin expression starting\
    \ at /tmp/tmpbajlw044.jl:14\nin expression starting at /tmp/tmpbajlw044.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = n -> (sum(digits(n, 2)), n))\nend\n# Test\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprww2c0an.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(n::Int64)\n      @ Main /tmp/tmprww2c0an.jl:12\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmprww2c0an.jl:12\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmprww2c0an.jl:20 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmprww2c0an.jl:19\ntest set:\
    \ Error During Test at /tmp/tmprww2c0an.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(n::Int64)\n      @ Main /tmp/tmprww2c0an.jl:12\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Ba"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprww2c0an.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    mask = 1022 # 6 bits \n    data = [(count_bits(arr[i]), arr[i]) for i\
    \ in 1:length(arr)]\n    data = sort(data, by= x -> (x[1], x[2]))\n    ret = Vector{Int64}(length(arr))\n\
    \    for i in 1:length(arr)\n        ret[i] = data[i][2]\n    end\n    return\
    \ ret\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8x9l_62i.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ count_bits not defined\n  Stacktrace:\n   [1] (::var\"#1#3\"{Vector{Int64}})(i::Int64)\n\
    \     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n  \
    \ [3] collect(itr::Base.Generator{UnitRange{Int64}, var\"#1#3\"{Vector{Int64}}})\n\
    \     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp8x9l_62i.jl:13\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp8x9l_62i.jl:26 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp8x9l_62i.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp8x9l_62i.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: count_bits\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#3\"{Vector{Int64}})(i::Int64)\n\
    \     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n  \
    \ [3] collect(itr::Base.Generator{UnitRange{Int64}, var\"#1#3\"{Vector{Int64}}})\n\
    \     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp8x9l_62i.jl:13\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp8x9l_62i.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp8x9l_62i.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp8x9l_62i.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: count_bits not\
    \ defined\n  Stacktrace:\n   [1] (::var\"#1#3\"{Vector{Int64}})(i::Int64)\n  \
    \   @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect(itr::Base.Generator{UnitRange{Int64}, var\"#1#3\"{Vecto"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8x9l_62i.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(arr)\n    arr_int = [Int(i) for i in arr]\n    ones = []\n\
    \    for a in arr_int\n        ones = push!(ones, count_ones(a))\n    end\n  \
    \  zipped = zip(arr_int, ones)\n    sort!(zipped, by=x->x[2])\n    for a in 1:n\n\
    \        arr[a] = zipped[a][1]\n    end\n    return arr\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprloz08dt.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching sort!(::Base.Iterators.Zip{Tuple{Vector{Int64}, Vector{Any}}};\
    \ by=var\"#2#4\"())\n  Closest candidates are:\n    sort!(!Matched::AbstractUnitRange)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1305 got unsupported\
    \ keyword argument \"by\"\n    sort!(!Matched::AbstractVector{<:Union{Missing,\
    \ Float32, Float64}}, !Matched::Base.Sort.Algorithm, !Matched::Base.Order.DirectOrdering)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/sort.jl:1234 got unsupported\
    \ keyword argument \"by\"\n    sort!(!Matched::Vector{Int64}, !Matched::Base.Sort.Algorithm,\
    \ !Matched::Base.Order.Perm{<:Base.Order.DirectOrdering, <:Vector{<:Union{Missing,\
    \ Float32, Float64}}}) at /shared/centos7/julia/1.7.3/share/julia/base/sort.jl:1236\
    \ got unsupported keyword argument \"by\"\n    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmprloz08dt.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprloz08dt.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprloz08dt.jl:29\ntest set:\
    \ Error During Test at /tmp/tmprloz08dt.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching sort!(::Base.Iterators.Zip{Tuple{Vector{Int64}, Vector{Any}}}; by=var\"\
    #2#4\"())\n  Closest candidates are:\n    sort!(!Matched::AbstractUnitRange) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1305 got unsupported keyword\
    \ argument \"by\"\n    sort!(!Matched::AbstractVector{<:Union{Missing, Float32,\
    \ Float64}}, !Matched::Base.Sort.Algorithm, !Matched::Base.Order.DirectOrdering)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/sort.jl:1234 got unsupported\
    \ keyword argument \"by\"\n    sort!(!Matched::Vecto"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprloz08dt.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # initialise an empty vector\n    new_arr = Int64[]\n    # calculate the\
    \ number of ones for each element in arr\n    for elem in arr\n        num = count_ones(elem)\n\
    \        # add the number of ones and the element to new_arr\n        # .= is\
    \ the broadcast assignment operator \n        push!(new_arr, num, elem)\n    end\n\
    \    # sort based on the number of ones\n    sort!(new_arr, alg=MergeSort)\n \
    \   # get the sorted elements and return them\n    take(new_arr, (2:2:end))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmph4gjp7a1.jl:24\nin expression\
    \ starting at /tmp/tmph4gjp7a1.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = x -> [bitcount(x), x])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpojd_v1hk.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bitcount not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n   \
    \   @ Main /tmp/tmpojd_v1hk.jl:12\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpojd_v1hk.jl:12\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpojd_v1hk.jl:19 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpojd_v1hk.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpojd_v1hk.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bitcount\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmpojd_v1hk.jl:12\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n   "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpojd_v1hk.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    list_of_zeros = [x for x in arr if x == 0]\n    arr = [x for x in arr\
    \ if x != 0]\n    if length(arr) == 0\n        return list_of_zeros\n    end\n\
    \    to_be_sorted = [round(Int64, sum(digits(x, base=2))) for x in arr]\n    arr\
    \ = [arr[i] for i in sortperm(to_be_sorted)]\n    return vcat(list_of_zeros, arr)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm3eibrfn.jl:26\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 4, 5, 3] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm3eibrfn.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm3eibrfn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpm3eibrfn.jl:27\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-3, -5, -6, -2, -4] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm3eibrfn.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm3eibrfn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpm3eibrfn.jl:30\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 4,\
    \ 2, 4, 5, 5, 3, 5, 3, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm3eibrfn.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm3eibrfn.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpm3eibrfn.jl:31\n  Expression: candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44]\n   Evaluated: [32, 3, 6, 12, 5, 44] == [32, 3,\
    \ 5, 6, 12, 44]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm3eibrfn.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm3eibrfn.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    indices = [i for i=1:length(arr)]\n    # Create a tuple of bitcount and\
    \ array index\n    bit_arr = [ (bitcount(arr[i]), i) for i in indices]\n    sort!(bit_arr)\n\
    \    # Return the array sorted by index of original vector\n    return arr[map(x\
    \ -> x[2], bit_arr)]\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfu99vxlk.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bitcount not defined\n  Stacktrace:\n   [1] (::var\"#1#3\"{Vector{Int64}})(i::Int64)\n\
    \     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n  \
    \ [3] collect(itr::Base.Generator{Vector{Int64}, var\"#1#3\"{Vector{Int64}}})\n\
    \     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpfu99vxlk.jl:14\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpfu99vxlk.jl:24 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpfu99vxlk.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpfu99vxlk.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bitcount\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#3\"{Vector{Int64}})(i::Int64)\n\
    \     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n  \
    \ [3] collect(itr::Base.Generator{Vector{Int64}, var\"#1#3\"{Vector{Int64}}})\n\
    \     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpfu99vxlk.jl:14\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpfu99vxlk.jl:25 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpfu99vxlk.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpfu99vxlk.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bitcount not\
    \ defined\n  Stacktrace:\n   [1] (::var\"#1#3\"{Vector{Int64}})(i::Int64)\n  \
    \   @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect(itr::Base.Generator{Vector{Int64}, var\"#1#3\"{Vector{Int64}}})\n   "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfu99vxlk.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sorted = sort(arr)\n    sort!(sorted, by=x->count_ones(x))\n    return\
    \ sorted\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc6en8u5p.jl:22\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc6en8u5p.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc6en8u5p.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc6en8u5p.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # sort(...) sorts by decimal value in default.\n    # we will not change\
    \ it.\n    # Note that we sort by first element in each tuple\n    # (number of\
    \ ones, decimal value).\n    # Since the first element is number of ones, we will\
    \ get\n    # the output we need.\n    sort(tuple.((sum(digits(x, 2)), x) for x\
    \ in arr))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz2o_1o09.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main ./none:0\n   \
    \ [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] collect\n      @ ./array.jl:724\
    \ [inlined]\n    [4] broadcastable\n      @ ./broadcast.jl:704 [inlined]\n   \
    \ [5] broadcasted\n      @ ./broadcast.jl:1295 [inlined]\n    [6] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpz2o_1o09.jl:18\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpz2o_1o09.jl:25 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpz2o_1o09.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpz2o_1o09.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main ./none:0\n   \
    \ [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] collect\n      @ ./array.jl:724\
    \ [inlined]\n    [4] broadcastable\n      @ ./broadcast.jl:704 [inlined]\n   \
    \ [5] broadcasted\n      @ ./broadcast.jl:1295 [inlined]\n    [6] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpz2o_1o09.jl:18\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz2o_1o09.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    _arr = sort(arr, by = x -> x < 0 ? -(x) : x)\n    _arr = sort(arr, by\
    \ = x -> count_ones(x))\n    return _arr\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1sndoujd.jl:21\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 4, 5, 3] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1sndoujd.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1sndoujd.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1sndoujd.jl:22\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-4, -6, -2, -3, -5] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1sndoujd.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1sndoujd.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1sndoujd.jl:25\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 4,\
    \ 2, 4, 5, 5, 3, 5, 3, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1sndoujd.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1sndoujd.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1sndoujd.jl:26\n  Expression: candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44]\n   Evaluated: [32, 3, 6, 12, 5, 44] == [32, 3,\
    \ 5, 6, 12, 44]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1sndoujd.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1sndoujd.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr)\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgjhkad4o.jl:19\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgjhkad4o.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgjhkad4o.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpgjhkad4o.jl:20\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgjhkad4o.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgjhkad4o.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpgjhkad4o.jl:21\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgjhkad4o.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgjhkad4o.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpgjhkad4o.jl:23\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgjhkad4o.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgjhkad4o.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \n    function number_of_ones(x::Int64)::Int64\n        s = 0\n      \
    \  while x != 0\n            if x % 2 == 1\n                s += 1\n         \
    \   end\n            x = floor(Int64, x / 2)\n        end\n        return s\n\
    \    end\n    \n    return sort(arr, by = x -> (number_of_ones(x), x))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # convert to bits\n    bits = [Int(b) for b in join([dec2bin(a) for a\
    \ in arr])]\n    # sort according to number of 1s\n    ones = sort(unique(bits))\n\
    \    sorted_arr = [zeros(Int64, length(ones)) for i in 1:length(arr)]\n    for\
    \ i in ones\n        sorted_arr[i] = [a for a in arr if has_bit(a, i)]\n    end\n\
    \    return join(sorted_arr)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwkpnk5td.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ dec2bin not defined\n  Stacktrace:\n   [1] (::var\"#2#6\")(a::Int64)\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#2#6\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpwkpnk5td.jl:13\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpwkpnk5td.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpwkpnk5td.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpwkpnk5td.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: dec2bin\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#2#6\")(a::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#2#6\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpwkpnk5td.jl:13\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpwkpnk5td.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpwkpnk5td.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpwkpnk5td.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: dec2bin not\
    \ defined\n  Stacktrace:\n   [1] (::var\"#2#6\")(a::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#2#6\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpwkpnk5td.jl"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwkpnk5td.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sorted_arr = sort(arr, by = (x->(sum(digits(x, 2)), x)))\n    return sorted_arr\n\
    end\nsort_array([1, 0, 2, 3, 4])\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: MethodError: no method matching digits(::Int64, ::Int64)\n\
    Closest candidates are:\n  digits(::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \  digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    Stacktrace:\n [1] (::var\"#1#2\")(x::Int64)\n   @ Main /tmp/tmpvbm1jma8.jl:12\n\
    \ [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n   @ Base.Order ./ordering.jl:111\n [3] sort!\n   @ ./sort.jl:507\
    \ [inlined]\n [4] sort!\n   @ ./sort.jl:574 [inlined]\n [5] sort!\n   @ ./sort.jl:664\
    \ [inlined]\n [6] #sort!#8\n   @ ./sort.jl:725 [inlined]\n [7] sort(v::Vector{Int64};\
    \ kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol}, NamedTuple{(:by,), Tuple{var\"\
    #1#2\"}}})\n   @ Base.Sort ./sort.jl:772\n [8] sort_array(arr::Vector{Int64})\n\
    \   @ Main /tmp/tmpvbm1jma8.jl:12\n [9] top-level scope\n   @ /tmp/tmpvbm1jma8.jl:15\n\
    in expression starting at /tmp/tmpvbm1jma8.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    #sort numbers by binary representation of most significant bit\n    #then\
    \ by decimal value\n    sort!(arr, by= i->(bits(i)[1], i))\n    return arr\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa8m20ecy.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(i::Int64)\n      @\
    \ Main /tmp/tmpa8m20ecy.jl:14\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpa8m20ecy.jl:14\n\
    \    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpa8m20ecy.jl:22 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpa8m20ecy.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpa8m20ecy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(i::Int64)\n      @ Main\
    \ /tmp/tmpa8m20ecy.jl:14\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa8m20ecy.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    binary_vec = Vector{Int64}(length(arr))\n    for i in 1:length(arr)\n\
    \        binary_vec[i] = count_ones(arr[i])\n    end\n    return arr[sortperm(binary_vec,\
    \ rev=true)]\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp245k9s21.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching Vector{Int64}(::Int64)\n  Closest candidates are:\n    Vector{T}()\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n    Array{T,\
    \ N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp245k9s21.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp245k9s21.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp245k9s21.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp245k9s21.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching Vector{Int64}(::Int64)\n  Closest candidates are:\n    Vector{T}()\
    \ where T at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:476\n    Array{T,\
    \ N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    Array{T, N}(!Matched::BitArray{N}) where {T, N} at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:494\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp245k9s21.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp245k9s21.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp245k9s21.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp245k9s21.jl:25\n  Test t"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp245k9s21.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n  #Sort the array based on the number of ones, then the decimal value if there\
    \ are equal number of ones. \n  #This is done in an elegant vectorized way.\n\
    \  @assert all(abs.(arr) .>= 0)\n  for i in 1:length(arr)\n      arr[i] = 2 *\
    \ arr[i] + sum(digit.(int(abs(arr[i])), 2))\n  end\n  sort(arr) .% 2 .- 1\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzyd5_878.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ int not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n    \
    \ @ Main /tmp/tmpzyd5_878.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzyd5_878.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzyd5_878.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpzyd5_878.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: int\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpzyd5_878.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzyd5_878.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzyd5_878.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpzyd5_878.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpzyd5_878.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzyd5_878.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzyd5_878.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpzyd5_878.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] sort_arra"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzyd5_878.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb2cvo_yh.jl:20\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb2cvo_yh.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb2cvo_yh.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb2cvo_yh.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    ans = similar(arr)\n    one_indices = []\n    zero_indices = []\n    for\
    \ (i, v) in enumerate(arr)\n        if v == 0\n            push!(zero_indices,\
    \ i)\n        else\n            push!(one_indices, i)\n        end\n    end\n\
    \    for (i, v) in enumerate(one_indices)\n        ans[i] = arr[v]\n    end\n\
    \    for (i, v) in enumerate(zero_indices)\n        ans[i + length(one_indices)]\
    \ = arr[v]\n    end\n    return ans\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwpk_23o0.jl:35\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 5, 2, 3, 4] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwpk_23o0.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwpk_23o0.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpwpk_23o0.jl:36\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -4, -5, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwpk_23o0.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwpk_23o0.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpwpk_23o0.jl:37\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [1, 2, 3, 4, 0] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwpk_23o0.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwpk_23o0.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpwpk_23o0.jl:39\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 5,\
    \ 77, 4, 5, 3, 5, 7, 2, 3, 4] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwpk_23o0.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwpk_23o0.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Create dictionary to store number of ones per number\n    one_dictionary\
    \ = Dict{Int64, Int64}()\n    for element in arr\n        # Calculate number of\
    \ ones per number\n        one_dictionary[element] = length(split(binary(element),\
    \ \"1\")) - 1\n    end\n    # Sort dictionary by values\n    one_dictionary =\
    \ sort(one_dictionary, by=x->x[2])\n    # Store the keys\n    result = collect(keys(one_dictionary))\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphw_l21nc.jl:29\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ binary not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n \
    \    @ Main /tmp/tmphw_l21nc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphw_l21nc.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphw_l21nc.jl:28\ntest set:\
    \ Error During Test at /tmp/tmphw_l21nc.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: binary\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmphw_l21nc.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphw_l21nc.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphw_l21nc.jl:28\ntest set:\
    \ Error During Test at /tmp/tmphw_l21nc.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: binary not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmphw_l21nc.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphw_l21nc.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphw_l21nc.jl:28\ntest set:\
    \ Error During Test at /tmp/tmphw_l21nc.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  MethodError: no method\
    \ matching sort(::Dict{Int64, Int64}; by=var\"#1#2\"())\n  Closest c"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphw_l21nc.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # 'arr' is a Vector of non-negative Integers\n    # 'ones' is a Vector\
    \ of number of bits 1 in the binary representation of each 'arr' element\n   \
    \ ones = convert(Vector{Int64}, zeros(arr))\n    # 'bins' is a Vector of binary\
    \ representation of each 'arr' element\n    bins = convert(Vector{ASCIIString},\
    \ zeros(arr))\n    # 'bins_sorted' is a Vector of binary representation of each\
    \ 'arr' element\n    # 'arr_sorted' is a Vector of non-negative Integers\n   \
    \ bins_sorted = convert(Vector{ASCIIString}, zeros(arr))\n    arr_sorted = convert(Vector{Int64},\
    \ zeros(arr))\n    # 'j' is the number of element in 'arr' with at least one bit\
    \ 1\n    j = 0\n    # Loop over the elements of 'arr'\n    for i = 1:length(arr)\n\
    \        # If the binary representation of 'arr[i]' has at least one bit 1\n \
    \       if isempty(arr[i] |> string |> findfirst(\"0\"))\n            j += 1\n\
    \            # Get the number of bits 1 in the binary representation of 'arr[i]'\n\
    \            ones[i] = length(arr[i] |> string |> findall(\"1\"))\n          \
    \  # Get the binary representation of 'arr[i]'\n            bins[i] = arr[i] |>\
    \ string\n        end\n    end\n    # If 'arr' only contains elements equal to\
    \ 0\n    if j == 0\n        return arr\n    end\n    # Resize the Vectors to the\
    \ exact number of elements with at least one bit 1\n    ones = ones[1:j]\n   \
    \ bins = bins[1:j]\n    # Sort the Vectors 'ones' and 'bins' according to 'ones'\
    \ in ascending order\n    ones, bins = sort(ones, bins, rev=false)\n    # Loop\
    \ over 'ones'\n    for i = 1:length(ones)\n        # Get the decimal value of\
    \ the element of 'bins' with the same index as 'ones[i]'\n        arr_sorted[i]\
    \ = parse(Int64, bins[i])\n        # Get the\nusing Test\n\n@testset begin\n\n\
    candidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\
    \t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp1a88mfe7.jl:44\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1a88mfe7.jl:1\n\
    in expression starting at /tmp/tmp1a88mfe7.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # your code here\nend\n \nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpavjut9m3.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpavjut9m3.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpavjut9m3.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpavjut9m3.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpavjut9m3.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpavjut9m3.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpavjut9m3.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Sort the array by the number of 1's in its binary representation\n \
    \   # keeping elements with the same # of 1's in increasing order.\n    return\
    \ sort(arr; by = x -> (count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb0s25jza.jl:22\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0s25jza.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0s25jza.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb0s25jza.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    mergeSort(arr)\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprwsea6gq.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ mergeSort not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmprwsea6gq.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprwsea6gq.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprwsea6gq.jl:18\ntest set:\
    \ Error During Test at /tmp/tmprwsea6gq.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: mergeSort\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmprwsea6gq.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprwsea6gq.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprwsea6gq.jl:18\ntest set:\
    \ Error During Test at /tmp/tmprwsea6gq.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: mergeSort not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmprwsea6gq.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprwsea6gq.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprwsea6gq.jl:18\ntest set:\
    \ Error During Test at /tmp/tmprwsea6gq.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: mergeSort\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vec"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprwsea6gq.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sorted = sort([(count_ones(i), i) for i in arr])\n    return [i[2] for\
    \ i in sorted]\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpof8769ch.jl:21\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpof8769ch.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpof8769ch.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpof8769ch.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by = [count_ones, identity])\nend\n \nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5c0b5rwe.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp5c0b5rwe.jl:12\n\
    \    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmp5c0b5rwe.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmp5c0b5rwe.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp5c0b5rwe.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp5c0b5rwe.jl:12\n\
    \    [8] macro expansion\n      @ /shared"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5c0b5rwe.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(arr)\n    nones = zeros(Int64, n)\n    for i in 1:n\n     \
    \   a = arr[i]\n        b = zero(a)\n        while a != 0\n            a = bitshift(a,\
    \ -1)\n            b += 1\n        end\n        nones[i] = b\n    end\n    return\
    \ sort(arr, by=i->(nones[i], arr[i]))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprrn3w6u2.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bitshift not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmprrn3w6u2.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprrn3w6u2.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprrn3w6u2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmprrn3w6u2.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bitshift\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmprrn3w6u2.jl:18\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprrn3w6u2.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprrn3w6u2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmprrn3w6u2.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bitshift not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmprrn3w6u2.jl:18\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprrn3w6u2.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprrn3w6u2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmprrn3w6u2.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: bitshift not defined\n  Stacktra"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprrn3w6u2.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by=x->(sum(x),x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpakk4dq2x.jl:19\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpakk4dq2x.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpakk4dq2x.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpakk4dq2x.jl:20\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpakk4dq2x.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpakk4dq2x.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpakk4dq2x.jl:21\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpakk4dq2x.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpakk4dq2x.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpakk4dq2x.jl:23\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpakk4dq2x.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpakk4dq2x.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sorted_numbers = sort(arr, lt=(x, y) -> \n        (bits(x), bits(y)) <\
    \ (bits(y), bits(x)))\n    sorted_numbers\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa9c311i6.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64, y::Int64)\n\
    \      @ Main /tmp/tmpa9c311i6.jl:12\n    [2] #1\n      @ ./ordering.jl:125 [inlined]\n\
    \    [3] lt\n      @ ./ordering.jl:112 [inlined]\n    [4] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.Lt{Base.Order.var\"\
    #1#3\"{var\"#1#2\", typeof(identity)}})\n      @ Base.Sort ./sort.jl:507\n   \
    \ [5] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.Lt{Base.Order.var\"#1#3\"{var\"#1#2\", typeof(identity)}})\n \
    \     @ Base.Sort ./sort.jl:574\n    [6] sort!\n      @ ./sort.jl:664 [inlined]\n\
    \    [7] #sort!#8\n      @ ./sort.jl:725 [inlined]\n    [8] #sort#9\n      @ ./sort.jl:772\
    \ [inlined]\n    [9] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpa9c311i6.jl:12\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmpa9c311i6.jl:21 [inlined]\n\
    \   [12] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [13] top-level scope\n      @ /tmp/tmpa9c311i6.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpa9c311i6.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64, y::Int64)\n  \
    \    @ Main /tmp/tmpa9c311i6.jl:12\n    [2] #1\n      @ ./ordering.jl:125 [inlined]\n\
    \    [3] lt\n      @ ./ordering.jl:112 [inlined]\n    [4] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.Lt{Base.Order.var\"\
    #1#3\"{var\"#1#2\", typeof(identity)}})\n      @ Base.Sort ./sort.jl:507\n   \
    \ [5] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.Lt{Base.Order.var\"#1#3\"{var\"#1#2\", typeof(identity)}})\n \
    \     @ Base.Sort ./sort.jl:574\n    ["
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa9c311i6.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # your code here...\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnckm4wzq.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpnckm4wzq.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnckm4wzq.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnckm4wzq.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpnckm4wzq.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpnckm4wzq.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnckm4wzq.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by=\n        (x::Int64) -> begin\n            bin_count\
    \ = count(x)\n            if bin_count != 0\n                bin_count\n     \
    \       else\n                return x\n            end\n        end)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpouvx45jm.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  TypeError: non-boolean\
    \ (Int64) used in boolean context\n  Stacktrace:\n    [1] _simple_count(pred::typeof(identity),\
    \ itr::Int64, init::Int64)\n      @ Base ./reduce.jl:1206\n    [2] count(f::Function,\
    \ itr::Int64; init::Int64)\n      @ Base ./reduce.jl:1201\n    [3] count(itr::Int64;\
    \ init::Int64)\n      @ Base ./reduce.jl:1199\n    [4] count(itr::Int64)\n   \
    \   @ Base ./reduce.jl:1199\n    [5] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpouvx45jm.jl:14\n\
    \    [6] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [7] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [8] sort!\n      @ ./sort.jl:574 [inlined]\n    [9] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n   [10] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \   [11] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \   [12] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpouvx45jm.jl:12\n\
    \   [13] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [14] macro expansion\n      @ /tmp/tmpouvx45jm.jl:27 [inlined]\n\
    \   [15] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [16] top-level scope\n      @ /tmp/tmpouvx45jm.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpouvx45jm.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  TypeError: non-boolean\
    \ (Int64) used in boolean context\n  Stacktrace:\n    [1] _simple_count(pred::typeof(identity),\
    \ itr::Int64, init::Int64)\n      @ Base ./reduce.jl:1206\n    [2] count(f::Function,\
    \ itr::Int64; init::Int64)\n      @ Base ./reduce.jl:1201\n    [3] count(itr::Int64;\
    \ init::Int64)\n      @ Base ./reduce.jl:1199\n    [4] count(itr::Int64)\n   \
    \   @ Base ./reduce.jl:1199\n    [5] (::var\"#1#2\")(x::Int64)\n      @ Main /tm"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpouvx45jm.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # binary_array = [base(i, 2) for i in arr]\n    binary_array = [string(base(i,\
    \ 2)) for i in arr]\n    binary_array = [parse(Int64, num_str) for num_str in\
    \ binary_array]\n    decimal_value = [count_ones(num) for num in binary_array]\n\
    \    # sort(decimal_value)\n    # sort(arr)\n    # argsort(decimal_value)\n  \
    \  # decimal_value[argsort(decimal_value)]\n    new_arr = copy(arr)\n    # len\
    \ = length(decimal_value)\n    # while len > 0\n    #     temp = decimal_value[1]\n\
    \    #     for num in decimal_value\n    #         if num < temp\n    #      \
    \       temp = num\n    #     # push!(new_arr,temp)\n    #     pop!(decimal_value)\n\
    \    #     len -= 1\n    # end\n    # for i in 1:length(decimal_value)\n    #\
    \     temp = decimal_value[i]\n    #     for j in 1:length(decimal_value)\n  \
    \  #         if temp < decimal_value[j]\n    #             temp = decimal_value[j]\n\
    \    #     push!(new_arr, temp)\n    #     pop!(decimal_value)\n    # end\n  \
    \  return new_arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx3ljqxko.jl:46\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ base not defined\n  Stacktrace:\n   [1] (::var\"#1#4\")(i::Int64)\n     @ Main\
    \ ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpx3ljqxko.jl:13\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpx3ljqxko.jl:46 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpx3ljqxko.jl:45\ntest set:\
    \ Error During Test at /tmp/tmpx3ljqxko.jl:47\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: base\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#4\")(i::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpx3ljqxko.jl:13\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpx3ljqxko.jl:47 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpx3ljqxko.jl:45\ntest set:\
    \ Error During Test at /tmp/tmpx3ljqxko.jl:48\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: base not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#4\")(i::Int64)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpx3ljqxko.jl:13\n   [5"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx3ljqxko.jl:43\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Sort by number of bits first, then by size.\n    return sort(arr, by\
    \ = [count_bits, identity])\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsrvi_jbq.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ count_bits not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpsrvi_jbq.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsrvi_jbq.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsrvi_jbq.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsrvi_jbq.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: count_bits\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpsrvi_jbq.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsrvi_jbq.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsrvi_jbq.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsrvi_jbq.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: count_bits not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpsrvi_jbq.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsrvi_jbq.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsrvi_jbq.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsrvi_jbq.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: count_bits\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr:"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsrvi_jbq.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    arr = sort(arr)\n    for i = 1:length(arr)\n        arr[i] = sum(bitstring(arr[i]))\n\
    \    end\n    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp27opmpd6.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching +(::Char, ::Char)\n  Closest candidates are:\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(::T, !Matched::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    +(!Matched::Integer, ::AbstractChar) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:247\n\
    \  Stacktrace:\n    [1] add_sum(x::Char, y::Char)\n      @ Base ./reduce.jl:24\n\
    \    [2] BottomRF\n      @ ./reduce.jl:81 [inlined]\n    [3] _foldl_impl(op::Base.BottomRF{typeof(Base.add_sum)},\
    \ init::Base._InitialValue, itr::String)\n      @ Base ./reduce.jl:62\n    [4]\
    \ foldl_impl\n      @ ./reduce.jl:48 [inlined]\n    [5] mapfoldl_impl\n      @\
    \ ./reduce.jl:44 [inlined]\n    [6] #mapfoldl#244\n      @ ./reduce.jl:162 [inlined]\n\
    \    [7] mapfoldl\n      @ ./reduce.jl:162 [inlined]\n    [8] #mapreduce#248\n\
    \      @ ./reduce.jl:289 [inlined]\n    [9] mapreduce\n      @ ./reduce.jl:289\
    \ [inlined]\n   [10] #sum#251\n      @ ./reduce.jl:503 [inlined]\n   [11] sum\n\
    \      @ ./reduce.jl:503 [inlined]\n   [12] #sum#252\n      @ ./reduce.jl:532\
    \ [inlined]\n   [13] sum\n      @ ./reduce.jl:532 [inlined]\n   [14] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmp27opmpd6.jl:14\n   [15] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [16] macro expansion\n      @ /tmp/tmp27opmpd6.jl:23 [inlined]\n\
    \   [17] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [18] top-level scope\n      @ /tmp/tmp27opmpd6.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp27opmpd6.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching +(::Char, ::Char)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1."
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp27opmpd6.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by=x->(sum(bitstring(x)[2:end] .== '1'),x))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0kptq8ih.jl:19\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0kptq8ih.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0kptq8ih.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp0kptq8ih.jl:20\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0kptq8ih.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0kptq8ih.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp0kptq8ih.jl:21\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0kptq8ih.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0kptq8ih.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp0kptq8ih.jl:23\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0kptq8ih.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0kptq8ih.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by=eachindex(arr)->(BitArray(arr[eachindex(arr)]), abs(arr[eachindex(arr)])))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"eachindex(arr)\" is not a valid function argument\
    \ name around /tmp/tmptsx_dkk8.jl:12\nStacktrace:\n [1] top-level scope\n   @\
    \ /tmp/tmptsx_dkk8.jl:1\nin expression starting at /tmp/tmptsx_dkk8.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return bubble_sort(arr)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpivexszjo.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bubble_sort not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpivexszjo.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpivexszjo.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpivexszjo.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpivexszjo.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bubble_sort\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpivexszjo.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpivexszjo.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpivexszjo.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpivexszjo.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bubble_sort\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpivexszjo.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpivexszjo.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpivexszjo.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpivexszjo.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: bubble_sort\
    \ not defined\n  Stacktrace:\n   [1] sort_array("
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpivexszjo.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    list = []\n    if (length(arr) > 0)\n        for i in 1:length(arr)\n\
    \            push!(list, (get_ones(arr[i]), arr[i]))\n        end\n        sort!(list,\
    \ rev=true)\n        arr = []\n        for i in 1:length(list)\n            push!(arr,\
    \ list[i][2])\n        end\n    end\n    return arr\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoua6nbrb.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ get_ones not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpoua6nbrb.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoua6nbrb.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoua6nbrb.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoua6nbrb.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: get_ones\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpoua6nbrb.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoua6nbrb.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoua6nbrb.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoua6nbrb.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: get_ones not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpoua6nbrb.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpoua6nbrb.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoua6nbrb.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoua6nbrb.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: get_ones not defined\n  Stacktra"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoua6nbrb.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by = x -> (ones(x), x))\nend\n\"\"\"\n    Function that takes\
    \ an input string and returns True if the string \n    ends with a 'b' and the\
    \ two previous chars are 'a'.\n    >>> a_end('ab') == True\n    >>> a_end('ba')\
    \ == False\n    >>> a_end('boa') == False\n    >>> a_end('baa') == True\n    >>>\
    \ a_end('aa') == False\n    >>> a_end('aaa') == True\n    >>> a_end('abb') ==\
    \ True\n    >>> a_end('b') == False\n    >>> a_end('aaabbbb') == True\n    >>>\
    \ a_end('aaabbb') == False\n    >>> a_end('aaabb') == True\n    >>> a_end('aaaabb')\
    \ == True\n    >>> a_end('aaaaabb') == True\n    >>> a_end('aaaaaabb') == True\n\
    \    >>> a_end('aaaab') == False\n    >>> a_end('aaab') == False\n    >>> a_end('aaabbb')\
    \ == False\n    >>> a_end('aaaaaabbb') == True\n    >>> a_end('aaaaaaabb') ==\
    \ True\n    >>> a_end('aaaaaaabbb') == True\n    >>> a_end('aaaaaaaaaabb') ==\
    \ True\n    >>> a_end('aaaaaaaaaaabb') == True\n    >>> a_end('aaaaaaaaaaaabb')\
    \ == True\n    >>> a_end('aaaaaaaaaaaaabb') == True\n    >>> a_end('aaaaaaaaaaaaaabb')\
    \ == True\n    >>> a_end('aaaaaaaaaaaaaaabb') == True\n    >>> a_end('aaaaaaaaaaaaaaaabb')\
    \ == True\n    >>> a_end('aaaaaaaaaaaaaaaaabb') == True\n    >>> a_end('aaaaaaaaaaaaaaaaaabb')\
    \ == True\n    >>> a_end('aaaaaaaaaaaaaaaaaaabb') == True\n    >>> a_end('aaaaaaaaaaaaaaaaaaaabb')\
    \ == True\n    >>> a_end('aaaaaaaaaaaaaaaaaaaaabb') == True\n    >>> a_end('aaaaaaaaaaaaaaaaaaaaaabb')\
    \ == True\n    >>> a_end('aaaaaaaaaaaaaaaaaaaaaaabb') == True\n    >>>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprwtjy274.jl:14\nin expression starting at\
    \ /tmp/tmprwtjy274.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    if length(arr) == 0 \n        return arr\n    end\n    bits = [bits(Int64(x))\
    \ for x in arr]\n    num_bits = [sum(x) for x in bits]\n    sort!(arr, by = x\
    \ -> (num_bits[x], x))\n    return arr\nend\n\"\"\"\n    You're training a small\
    \ character recognition AI: you give it a\n    vector of pixels from a handwritten\
    \ character, and it returns a\n    probability distribution over the possible\
    \ characters.\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphlwi80r8.jl:20\nin expression starting at\
    \ /tmp/tmphlwi80r8.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = x -> (-count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl6x2v3jo.jl:19\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [3, 5, 1, 2, 4] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl6x2v3jo.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl6x2v3jo.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpl6x2v3jo.jl:20\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-5, -3, -2, -6, -4] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl6x2v3jo.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl6x2v3jo.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpl6x2v3jo.jl:21\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [3, 1, 2, 4, 0] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl6x2v3jo.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl6x2v3jo.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpl6x2v3jo.jl:23\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [77, 7,\
    \ 3, 3, 5, 5, 5, 2, 2, 4, 4] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl6x2v3jo.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl6x2v3jo.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Sort by number of ones, then by decimal value (sorting negative numbers)\n\
    \    sort(arr, by=x->(bitstring(x)[end:-1:1], x))\nend\n```\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzr4px1rt.jl:15\nin expression starting at\
    \ /tmp/tmpzr4px1rt.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = (x -> (length(findall(x -> x == '1', \n        \
    \                            string(bin(x)))), x)))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg8brl79v.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::Int64)\n      @ Main\
    \ /tmp/tmpg8brl79v.jl:12\n    [2] lt(o::Base.Order.By{var\"#1#3\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpg8brl79v.jl:12\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpg8brl79v.jl:20 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpg8brl79v.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpg8brl79v.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::Int64)\n      @ Main\
    \ /tmp/tmpg8brl79v.jl:12\n    [2] lt(o::Base.Order.By{var\"#1#3\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#3\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg8brl79v.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    arr_ones = []\n    for x in arr\n        a = x\n        i = 0\n      \
    \  one = 0\n        while (a>0)\n            if (a % 2 == 1)\n               \
    \ one += 1\n            end\n            a = a >> 1\n            i += 1\n    \
    \    end\n        i += 1\n        push!(arr_ones, [x, one, i])\n    end\n    arr_ones\
    \ = sortrows(arr_ones, by = [x -> x[2], x -> x[3]])\n    res = []\n    for x in\
    \ arr_ones\n        push!(res, x[1])\n    end\n    return res\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpco3z94c5.jl:39\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ sortrows not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpco3z94c5.jl:27\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpco3z94c5.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpco3z94c5.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpco3z94c5.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: sortrows\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpco3z94c5.jl:27\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpco3z94c5.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpco3z94c5.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpco3z94c5.jl:41\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: sortrows not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpco3z94c5.jl:27\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpco3z94c5.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpco3z94c5.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpco3z94c5.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: sortrows\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpco3z94c5.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(arr)\n    # arr2 = zeros(Int64, n)\n    # for i = 1:n\n   \
    \ #     arr2[i] = arr[i]\n    # end\n    arr2 = copy(arr)\n    arr2[arr2 .< 0]\
    \ = 0\n    arr3 = zeros(Int64, n)\n    for i = 1:n\n        arr3[i] = count_ones(arr2[i])\n\
    \    end\n    temp = count_sort(arr3)\n    for i = 1:n\n        if arr3[i] ==\
    \ 0\n            break\n        end\n    end\n    arr4 = sort(arr[1:i-1])\n  \
    \  for j = 1:n-i+1\n        arr4 = vcat(arr4, temp[j])\n    end\n    return arr4\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb4lypvrn.jl:40\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  ArgumentError:\
    \ indexed assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::Base.LogicalIndex{Int64, BitVector})\n     @\
    \ Base ./multidimensional.jl:903\n   [3] _setindex!\n     @ ./multidimensional.jl:894\
    \ [inlined]\n   [4] setindex!\n     @ ./abstractarray.jl:1315 [inlined]\n   [5]\
    \ sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpb4lypvrn.jl:18\n   [6] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpb4lypvrn.jl:40 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpb4lypvrn.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpb4lypvrn.jl:41\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::Base.LogicalIndex{Int64, BitVector})\n     @\
    \ Base ./multidimensional.jl:903\n   [3] _setindex!\n     @ ./multidimensional.jl:894\
    \ [inlined]\n   [4] setindex!\n     @ ./abstractarray.jl:1315 [inlined]\n   [5]\
    \ sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpb4lypvrn.jl:18\n   [6] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpb4lypvrn.jl:41 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb4lypvrn.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = [t->bitcount(t), t->t])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp85d_cmbm.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp85d_cmbm.jl:12\n\
    \    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmp85d_cmbm.jl:19 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmp85d_cmbm.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp85d_cmbm.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp85d_cmbm.jl:12\n\
    \    [8] macro expansion\n      @ /shared"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp85d_cmbm.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by = x -> [ones(Int64,length(x)),x])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9svo7bos.jl:19\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9svo7bos.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9svo7bos.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp9svo7bos.jl:20\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9svo7bos.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9svo7bos.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp9svo7bos.jl:21\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9svo7bos.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9svo7bos.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp9svo7bos.jl:23\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9svo7bos.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9svo7bos.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1fpcs18f.jl:20\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fpcs18f.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fpcs18f.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1fpcs18f.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # your implementation here\n    return sort(arr, by = x -> (count_ones(x),x))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpupqq6_ph.jl:21\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpupqq6_ph.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpupqq6_ph.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpupqq6_ph.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    if all(arr .< 0)\n        println(\"negative numbers only\")\n       \
    \ sort(arr)\n    elseif all(arr .>= 0)\n        println(\"positive numbers only\"\
    )\n        ones = countones(arr)\n        minones = minimum(ones)\n        maxones\
    \ = maximum(ones)\n        n = length(arr)\n        d = zeros(Int64, (maxones+1,\
    \ n))\n        d[:] = arr\n        sorted = zeros(Int64, n)\n        j = 1\n \
    \       for i in minones:maxones\n            sorted[j] = d[i, j]\n          \
    \  j += 1\n        end\n        sort(sorted)\n    else\n        println(\"mixed\
    \ data types\")\n        j = 0\n        abs = zeros(Int64, length(arr))\n    \
    \    for i in arr\n            if i < 0\n                j += 1\n            \
    \    abs[j] = abs(i)\n            end\n        end\n        positive = [i for\
    \ i in arr if i >= 0]\n        ones = countones(positive)\n        minones = minimum(ones)\n\
    \        maxones = maximum(ones)\n        n = length(positive)\n        d = zeros(Int64,\
    \ (maxones+1, n))\n        d[:] = positive\n        sorted = zeros(Int64, n)\n\
    \        j = 1\n        for i in minones:maxones\n            sorted[j] = d[i,\
    \ j]\n            j += 1\n        end\n        p = sort(sorted)\n        j = 0\n\
    \        for i in arr\n            if i < 0\n                j += 1\n        \
    \        p = insert!(p, j, abs[j])\n            end\n        end\n        sort(p)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "positive numbers only\ntest set: Error During Test at /tmp/tmp_iww84ji.jl:69\n\
    \  Test threw exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4,\
    \ 3, 5]\n  UndefVarError: countones not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp_iww84ji.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_iww84ji.jl:69 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_iww84ji.jl:68\nnegative numbers\
    \ only\ntest set: Test Failed at /tmp/tmp_iww84ji.jl:70\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_iww84ji.jl:70 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_iww84ji.jl:68\npositive numbers\
    \ only\ntest set: Error During Test at /tmp/tmp_iww84ji.jl:71\n  Test threw exception\n\
    \  Expression: candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError:\
    \ countones not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp_iww84ji.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_iww84ji.jl:71 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_iww84ji.jl:68\nnegative numbers\
    \ only\npositive numbers only\ntest set: Error During Test at /tmp/tmp_iww84ji.jl:73\n\
    \  Test threw exception\n  Expression: candidate([2, 5, 77, 4, 5, 3, 5, 7, 2,\
    \ 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n  UndefVarError: countones not\
    \ defi"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 1 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_iww84ji.jl:66\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sortperm(arr, by=i->[count_ones(i), i])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptdlmv4cm.jl:19\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 3, 5, 4, 2] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptdlmv4cm.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptdlmv4cm.jl:18\ntest set: Test\
    \ Failed at /tmp/tmptdlmv4cm.jl:20\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [5, 3, 4, 2, 1] == [-4, -2, -6, -5, -3]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptdlmv4cm.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptdlmv4cm.jl:18\ntest set: Test\
    \ Failed at /tmp/tmptdlmv4cm.jl:21\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [2, 1, 3, 5, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptdlmv4cm.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptdlmv4cm.jl:18\ntest set: Test\
    \ Failed at /tmp/tmptdlmv4cm.jl:23\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [1, 9,\
    \ 4, 11, 6, 10, 2, 5, 7, 8, 3] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptdlmv4cm.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptdlmv4cm.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = n -> n == 0 ? 0 : length(dec(n, base=2))[1])\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2esqze8e.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ dec not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(n::Int64)\n      @ Main\
    \ /tmp/tmp2esqze8e.jl:12\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmp2esqze8e.jl:12\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp2esqze8e.jl:19 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp2esqze8e.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp2esqze8e.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: dec\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(n::Int64)\n      @ Main\
    \ /tmp/tmp2esqze8e.jl:12\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2esqze8e.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by=x->(count_bits(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsne98z3s.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ count_bits not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n \
    \     @ Main /tmp/tmpsne98z3s.jl:12\n    [2] lt(o::Base.Order.By{var\"#1#2\",\
    \ Base.Order.ForwardOrdering}, a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n\
    \    [3] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg,\
    \ o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:507\n    [4] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:574\n    [5] sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n\
    \      @ ./sort.jl:725 [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpsne98z3s.jl:12\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpsne98z3s.jl:19 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpsne98z3s.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpsne98z3s.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: count_bits\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmpsne98z3s.jl:12\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsne98z3s.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    bitcount(n::Int64) = convert(Int64, floor(log2(n)) + 1)\n    return sort([(bitcount(n),\
    \ n) for n in arr]) |> x -> x[:, 2]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzit8th_x.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  BoundsError: attempt\
    \ to access 5-element Vector{Tuple{Int64, Int64}} at index [1:5, 2]\n  Stacktrace:\n\
    \    [1] throw_boundserror(A::Vector{Tuple{Int64, Int64}}, I::Tuple{Base.Slice{Base.OneTo{Int64}},\
    \ Int64})\n      @ Base ./abstractarray.jl:691\n    [2] checkbounds\n      @ ./abstractarray.jl:656\
    \ [inlined]\n    [3] _getindex\n      @ ./multidimensional.jl:838 [inlined]\n\
    \    [4] getindex\n      @ ./abstractarray.jl:1218 [inlined]\n    [5] (::var\"\
    #2#5\")(x::Vector{Tuple{Int64, Int64}})\n      @ Main /tmp/tmpzit8th_x.jl:13\n\
    \    [6] |>\n      @ ./operators.jl:966 [inlined]\n    [7] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpzit8th_x.jl:13\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpzit8th_x.jl:20 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpzit8th_x.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpzit8th_x.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  DomainError with\
    \ -2.0:\n  log2 will only return a complex result if called with a complex argument.\
    \ Try log2(Complex(x)).\n  Stacktrace:\n    [1] throw_complex_domainerror(f::Symbol,\
    \ x::Float64)\n      @ Base.Math ./math.jl:33\n    [2] _log(x::Float64, base::Val{2},\
    \ func::Symbol)\n      @ Base.Math ./special/log.jl:304\n    [3] log2\n      @\
    \ ./special/log.jl:268 [inlined]\n    [4] log2\n      @ ./math.jl:1221 [inlined]\n\
    \    [5] bitcount\n      @ /tmp/tmpzit8th_x.jl:12 [inlined]\n    [6] #1\n    \
    \  @ ./none:0 [inlined]\n    [7] iterate\n      @ ./generator.jl:47 [inlined]\n\
    \    [8] collect(itr::Base.Generator{Vector{Int64}, var\"#1#4\"{var\"#bitcount#3\"\
    }})\n      @ Base ./array.jl:724\n    [9] sort_array(arr::Vector{Int64})\n   \
    \   @ Main /tmp/tmpzit8th_x.jl:13\n   [10] macro expansion\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzit8th_x.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \n    count_ones(i) = sum(Int.(string(i) .== '1'))\n    \n    return sort(arr,\
    \ by = count_ones)\nend\n@test sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n\
    @test sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n@test sort_array([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 3, 4]\n \nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @test not defined\nin expression starting\
    \ at /tmp/tmpqr6wnx_t.jl:17\nin expression starting at /tmp/tmpqr6wnx_t.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    new = map(d->(d, (d .== 1)::Int64, count_ones(d), d), arr)\n    sort(new,\
    \ by=x->(x[2], x[3], x[4]))[:,1]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmb6uu_2v.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  TypeError: in\
    \ typeassert, expected Int64, got a value of type Bool\n  Stacktrace:\n    [1]\
    \ (::var\"#1#3\")(d::Int64)\n      @ Main /tmp/tmpmb6uu_2v.jl:12\n    [2] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [3] _collect\n      @ ./array.jl:744\
    \ [inlined]\n    [4] collect_similar\n      @ ./array.jl:653 [inlined]\n    [5]\
    \ map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpmb6uu_2v.jl:12\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpmb6uu_2v.jl:20 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpmb6uu_2v.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpmb6uu_2v.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  TypeError: in typeassert,\
    \ expected Int64, got a value of type Bool\n  Stacktrace:\n    [1] (::var\"#1#3\"\
    )(d::Int64)\n      @ Main /tmp/tmpmb6uu_2v.jl:12\n    [2] iterate\n      @ ./generator.jl:47\
    \ [inlined]\n    [3] _collect\n      @ ./array.jl:744 [inlined]\n    [4] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [5] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n    [6] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpmb6uu_2v.jl:12\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpmb6uu_2v.jl:21 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpmb6uu_2v.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpmb6uu_2v.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  TypeError: in typeassert, expected\
    \ Int64, got"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmb6uu_2v.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n  sorted_arr = sort(arr, by=x->(sum(convert(UInt64,x)), x))\n  return sorted_arr\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe3vf0dlp.jl:20\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe3vf0dlp.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe3vf0dlp.jl:19\ntest set: Error\
    \ During Test at /tmp/tmpe3vf0dlp.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  InexactError: check_top_bit(UInt64,\
    \ -3)\n  Stacktrace:\n    [1] throw_inexacterror(f::Symbol, #unused#::Type{UInt64},\
    \ val::Int64)\n      @ Core ./boot.jl:612\n    [2] check_top_bit\n      @ ./boot.jl:626\
    \ [inlined]\n    [3] toUInt64\n      @ ./boot.jl:737 [inlined]\n    [4] UInt64\n\
    \      @ ./boot.jl:767 [inlined]\n    [5] convert\n      @ ./number.jl:7 [inlined]\n\
    \    [6] #1\n      @ /tmp/tmpe3vf0dlp.jl:12 [inlined]\n    [7] lt\n      @ ./ordering.jl:111\
    \ [inlined]\n    [8] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg,\
    \ o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:507\n    [9] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:574\n   [10] sort!\n      @ ./sort.jl:664 [inlined]\n   [11] #sort!#8\n\
    \      @ ./sort.jl:725 [inlined]\n   [12] #sort#9\n      @ ./sort.jl:772 [inlined]\n\
    \   [13] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpe3vf0dlp.jl:12\n\
    \   [14] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [15] macro expansion\n      @ /tmp/tmpe3vf0dlp.jl:21 [inlined]\n\
    \   [16] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [17] top-level scope\n      @ /tmp/tmpe3vf0dlp.jl:19\ntest set:\
    \ Test Failed at /tmp/t"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe3vf0dlp.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    binarr = bitstring.(arr)\n    n = length(arr)\n    for i in 1:n\n    \
    \    for j in 1:n-i\n            if countones(binarr[j]) > countones(binarr[j+1])\n\
    \                binarr[j], binarr[j+1] = binarr[j+1], binarr[j]\n           \
    \     arr[j], arr[j+1] = arr[j+1], arr[j]\n            elseif countones(binarr[j])\
    \ == countones(binarr[j+1])\n                if arr[j] > arr[j+1]\n          \
    \          binarr[j], binarr[j+1] = binarr[j+1], binarr[j]\n                 \
    \   arr[j], arr[j+1] = arr[j+1], arr[j]\n                end\n            end\n\
    \        end\n    end\n    return arr\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0rs248j5.jl:34\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ countones not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp0rs248j5.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0rs248j5.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0rs248j5.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp0rs248j5.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: countones\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp0rs248j5.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0rs248j5.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0rs248j5.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp0rs248j5.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: countones not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp0rs248j5.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0rs248j5.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0rs248j5.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp0rs248j5.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: countones not defined\n  Stac"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0rs248j5.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    N = length(arr)\n    binarr = zeros(Int64, N)\n    for i = 1:N\n     \
    \   binarr[i] = N*bits(arr[i]) + arr[i]\n    end\n    sort(binarr) % N\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3ypdw0ho.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bits not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n   \
    \  @ Main /tmp/tmp3ypdw0ho.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3ypdw0ho.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3ypdw0ho.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp3ypdw0ho.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bits\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp3ypdw0ho.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3ypdw0ho.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3ypdw0ho.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp3ypdw0ho.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bits not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp3ypdw0ho.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3ypdw0ho.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3ypdw0ho.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp3ypdw0ho.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  MethodError: no method\
    \ matching rem(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n    "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3ypdw0ho.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(arr)\n    sort_array(arr, 1, n)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpiwidctm6.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching sort_array(::Vector{Int64}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    sort_array(::Vector{Int64}) at /tmp/tmpiwidctm6.jl:11\n  Stacktrace:\n\
    \   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpiwidctm6.jl:13\n \
    \  [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiwidctm6.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiwidctm6.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpiwidctm6.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching sort_array(::Vector{Int64}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    sort_array(::Vector{Int64}) at /tmp/tmpiwidctm6.jl:11\n  Stacktrace:\n\
    \   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpiwidctm6.jl:13\n \
    \  [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiwidctm6.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiwidctm6.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpiwidctm6.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: no method matching\
    \ sort_array(::Vector{Int64}, ::Int64, ::Int64)\n  Closest candidates are:\n \
    \   sort_array(::Vector{Int64}) at /tmp/tmpiwidctm6.jl:11\n  Stacktrace:\n   [1]\
    \ sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpiwidctm6.jl:13\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiwidctm6.jl:22 [inlined]\n\
    \   [4] macro"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiwidctm6.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \"\"\"\n    Your code here.\n    \"\"\"\n    # Using string representation\
    \ of binary numbers\n    # converts them to Int64\n    # Get count of each binary\
    \ representation\n    # Order using @by_count = ((count, binary_number) -> sort(binary_number))\n\
    \    # Convert back to integer\n    bin_strings = [string(count_ones(arr[i]),\
    \ base=2) for i in 1:length(arr)]\n    counts = [count_ones(Int64(bin_strings[i]))\
    \ for i in 1:length(bin_strings)]\n    ordered_counts = sortperm(counts)\n   \
    \ bin_arr = [Int64(bin_strings[ordered_counts[i]]) for i in 1:length(ordered_counts)]\n\
    \    return bin_arr\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa8a8j3mp.jl:31\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching Int64(::String)\n  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{Int32, Int64} at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:51\n\
    \    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number}\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:50\n    (::Type{T})(!Matched::BigInt)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8} at /shared/centos7/julia/1.7.3/share/julia/base/gmp.jl:357\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#2#5\"{Vector{String}})(i::Int64)\n  \
    \   @ Main ./array.jl:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n\
    \   [3] collect\n     @ ./array.jl:724 [inlined]\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpa8a8j3mp.jl:21\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpa8a8j3mp.jl:31 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpa8a8j3mp.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpa8a8j3mp.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching Int64(::String)\n  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{Int32, Int64} at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:51\n\
    \    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number}\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:50\n    (::Type{T})(!Matched::BigInt)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8} at /shared/centos7/julia/1.7.3/share/julia/base/gmp.jl:357\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#2#5\"{Vector{String}})(i::Int64)\n  \
    \   @ Main ./array.jl:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n\
    \   [3] collect\n     @ ./array.jl:724 [inlined]\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa8a8j3mp.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr)\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_vb_glv_.jl:19\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_vb_glv_.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_vb_glv_.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp_vb_glv_.jl:20\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_vb_glv_.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_vb_glv_.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp_vb_glv_.jl:21\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_vb_glv_.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_vb_glv_.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp_vb_glv_.jl:23\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_vb_glv_.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_vb_glv_.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \n    negative, zeros, positive = [], [], []\n    one_num_arr = []\n \
    \   sort_result = []\n    \n    for i in arr\n        if i < 0\n            push!(negative,\
    \ i)\n        elseif i == 0\n            push!(zeros, i)\n        elseif i > 0\n\
    \            push!(positive, i)\n        end\n    end\n    \n    for num in positive\n\
    \        num_bin = binary(num)\n        num_bin = string(num_bin)\n        num_ones\
    \ = count(num_bin, '1')\n        push!(one_num_arr, num_ones)\n    end\n    \n\
    \    sort!(one_num_arr)\n    \n    for i in one_num_arr\n        for num in positive\n\
    \            num_bin = binary(num)\n            num_bin = string(num_bin)\n  \
    \          num_ones = count(num_bin, '1')\n            if num_ones == i\n    \
    \            push!(sort_result, num)\n            end\n        end\n    end\n\
    \    \n    for num in sort_result\n        for i in positive\n            if num\
    \ == i\n                deleteat!(positive, findfirst(positive, i))\n        \
    \    end\n        end\n    end\n    \n    while !isempty(positive)\n        push!(sort_result,\
    \ pop!(positive))\n    end\n    \n    while !isempty(zeros)\n        push!(sort_result,\
    \ pop!(zeros))\n    end\n    \n    while !isempty(negative)\n        push!(sort_result,\
    \ pop!(negative))\n    end\n    \n    return sort_result\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptz5nv_rg.jl:74\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ binary not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n \
    \    @ Main /tmp/tmptz5nv_rg.jl:28\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptz5nv_rg.jl:74 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptz5nv_rg.jl:73\ntest set:\
    \ Test Failed at /tmp/tmptz5nv_rg.jl:75\n  Expression: candidate([-2, -3, -4,\
    \ -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4,\
    \ -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptz5nv_rg.jl:75 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptz5nv_rg.jl:73\ntest set: Error\
    \ During Test at /tmp/tmptz5nv_rg.jl:76\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: binary not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmptz5nv_rg.jl:28\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptz5nv_rg.jl:76 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptz5nv_rg.jl:73\ntest set:\
    \ Error During Test at /tmp/tmptz5nv_rg.jl:78\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: binary not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmptz5nv_rg.jl:28\n   [2] macro expansion\n     "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 1 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptz5nv_rg.jl:71\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    for i = 1:length(arr)\n        for j = i+1:length(arr)\n            if\
    \ (find_ones(arr[i]) > find_ones(arr[j])) || (find_ones(arr[i]) == find_ones(arr[j])\
    \ && arr[i] > arr[j])\n                arr[i], arr[j] = arr[j], arr[i]\n     \
    \       end\n        end\n    end\n    return arr\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl_6a0qu8.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ find_ones not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpl_6a0qu8.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl_6a0qu8.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl_6a0qu8.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpl_6a0qu8.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: find_ones\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpl_6a0qu8.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl_6a0qu8.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl_6a0qu8.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpl_6a0qu8.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: find_ones not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpl_6a0qu8.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl_6a0qu8.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl_6a0qu8.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpl_6a0qu8.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: find_ones not defined\n  Stac"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl_6a0qu8.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    ones = [numones(x) for x in arr]\n    B = sort(zip(ones, arr), by=x->(x[1],\
    \ -x[2]))\n    return [B[i][2] for i in 1:length(B)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpph6eqfqt.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ numones not defined\n  Stacktrace:\n   [1] (::var\"#1#4\")(x::Int64)\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpph6eqfqt.jl:12\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpph6eqfqt.jl:21 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpph6eqfqt.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpph6eqfqt.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: numones\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#4\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpph6eqfqt.jl:12\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpph6eqfqt.jl:22 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpph6eqfqt.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpph6eqfqt.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: numones not\
    \ defined\n  Stacktrace:\n   [1] (::var\"#1#4\")(x::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#4\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpph6eqfqt.jl"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpph6eqfqt.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    if length(arr) == 0\n        return []\n    end\n    if length(arr) ==\
    \ 1\n        return arr\n    end\n    if length(arr) == 2\n        if arr[1] >\
    \ arr[2]\n            return [arr[2], arr[1]]\n        else\n            return\
    \ arr\n        end\n    end\n    mid = div(length(arr), 2)\n    return merge(sort_array(arr[1:mid]),\
    \ sort_array(arr[mid+1:end]))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwd0u_tws.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching merge(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates\
    \ are:\n    merge(!Matched::NamedTuple, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/namedtuple.jl:288\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64}) (repeats 2 times)\n    \
    \ @ Main /tmp/tmpwd0u_tws.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwd0u_tws.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwd0u_tws.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpwd0u_tws.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching merge(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n\
    \    merge(!Matched::NamedTuple, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/namedtuple.jl:288\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64}) (repeats 2 times)\n    \
    \ @ Main /tmp/tmpwd0u_tws.jl:26\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwd0u_tws.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwd0u_tws.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpwd0u_tws.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: no method matching\
    \ merge(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    merge(!Matched::NamedTuple,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/namedtuple.jl:288\n \
    \ Stacktrace:\n   [1] sort_array(arr::Vector{Int64}) (repeats 2 times)\n     @\
    \ Main /tmp/tmpwd0u_tws.jl:26\n   [2] macr"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwd0u_tws.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # ...\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpr46ec72v.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpr46ec72v.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr46ec72v.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr46ec72v.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpr46ec72v.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpr46ec72v.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr46ec72v.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \n    # Change vector to array of tuples\n    arr2 = map(x -> (x, count_ones(x)),\
    \ arr)\n    \n    # sort the array\n    sort!(arr2, rev=true)\n    \n    # Extract\
    \ the sorted numbers\n    sorted_array = map(y -> y[1], arr2)\n    \n    return\
    \ sorted_array\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvwzhgsl0.jl:29\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [5, 4, 3, 2, 1] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvwzhgsl0.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvwzhgsl0.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpvwzhgsl0.jl:30\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-2, -3, -4, -5, -6] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvwzhgsl0.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvwzhgsl0.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpvwzhgsl0.jl:31\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [4, 3, 2, 1, 0] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvwzhgsl0.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvwzhgsl0.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpvwzhgsl0.jl:33\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [77, 7,\
    \ 5, 5, 5, 4, 4, 3, 3, 2, 2] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvwzhgsl0.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvwzhgsl0.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sorted_inds = sortperm(get_binary_ones.(arr))\n    arr[sorted_inds]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4f4v4u0g.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ get_binary_ones not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp4f4v4u0g.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4f4v4u0g.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4f4v4u0g.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp4f4v4u0g.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: get_binary_ones\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp4f4v4u0g.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4f4v4u0g.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4f4v4u0g.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp4f4v4u0g.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: get_binary_ones\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp4f4v4u0g.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4f4v4u0g.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4f4v4u0g.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp4f4v4u0g.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError: get_binary_ones\
    \ not defined\n  Stacktrace:\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4f4v4u0g.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Sort by number of ones in binary representation\n    sort_ones = sort(arr,\
    \ by = x -> count_ones(x))\n    # Sort by decimal value\n    sort(sort_ones, by\
    \ = x -> x)\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpahen9eqx.jl:22\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpahen9eqx.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpahen9eqx.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpahen9eqx.jl:23\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -5, -4, -3, -2] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpahen9eqx.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpahen9eqx.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpahen9eqx.jl:24\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [0, 1, 2, 3, 4] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpahen9eqx.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpahen9eqx.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpahen9eqx.jl:26\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 2,\
    \ 3, 3, 4, 4, 5, 5, 5, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpahen9eqx.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level sc"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpahen9eqx.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sorted_arr = sort(arr, by = x -> convert(Bits, x), rev = true)\n    return\
    \ sorted_arr\nend\n\"\"\"\n    Unfinished Loop - Bug Fixing #1\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpankx2q1w.jl:15\nin expression starting at\
    \ /tmp/tmpankx2q1w.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    if length(arr) == 0\n        return []\n    end\n    if length(arr) ==\
    \ 1\n        return arr\n    end\n    if length(arr) == 2\n        return sort(arr)\n\
    \    end\n    piv = arr[1]\n    left = []\n    right = []\n    for i in 2:length(arr)\n\
    \        if count_ones(arr[i]) > count_ones(piv)\n            append!(left, arr[i])\n\
    \        elseif count_ones(arr[i]) < count_ones(piv)\n            append!(right,\
    \ arr[i])\n        else\n            if arr[i] > piv\n                append!(left,\
    \ arr[i])\n            else\n                append!(right, arr[i])\n        \
    \    end\n        end\n    end\n    vcat(sort_array(left), [piv], sort_array(right))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxn5agcby.jl:44\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching sort_array(::Vector{Any})\n  Closest candidates are:\n    sort_array(!Matched::Vector{Int64})\
    \ at /tmp/tmpxn5agcby.jl:11\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpxn5agcby.jl:37\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxn5agcby.jl:44 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxn5agcby.jl:43\ntest set:\
    \ Error During Test at /tmp/tmpxn5agcby.jl:45\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching sort_array(::Vector{Any})\n  Closest candidates are:\n    sort_array(!Matched::Vector{Int64})\
    \ at /tmp/tmpxn5agcby.jl:11\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpxn5agcby.jl:37\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxn5agcby.jl:45 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxn5agcby.jl:43\ntest set:\
    \ Error During Test at /tmp/tmpxn5agcby.jl:46\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: no method matching\
    \ sort_array(::Vector{Any})\n  Closest candidates are:\n    sort_array(!Matched::Vector{Int64})\
    \ at /tmp/tmpxn5agcby.jl:11\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpxn5agcby.jl:37\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxn5agcby.jl:46 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/ju"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxn5agcby.jl:41\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # sorting the array according to the number of ones using a function called\
    \ count_ones\n    # we also add a secondary sorting criteria, based on the value\
    \ itself\n    sorted_array = sort(arr, by = count_ones, lt = (x, y) -> x < y ||\
    \ count_ones(x) == count_ones(y) && x < y)\n    return sorted_array\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptrfcxam8.jl:22\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 4, 5, 3] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptrfcxam8.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptrfcxam8.jl:21\ntest set: Test\
    \ Failed at /tmp/tmptrfcxam8.jl:23\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [-4, -6, -2, -3, -5] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptrfcxam8.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptrfcxam8.jl:21\ntest set: Test\
    \ Failed at /tmp/tmptrfcxam8.jl:26\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 4,\
    \ 2, 4, 5, 5, 3, 5, 3, 7, 77] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptrfcxam8.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptrfcxam8.jl:21\ntest set: Test\
    \ Failed at /tmp/tmptrfcxam8.jl:27\n  Expression: candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44]\n   Evaluated: [32, 3, 6, 12, 5, 44] == [32, 3,\
    \ 5, 6, 12, 44]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptrfcxam8.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [in"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptrfcxam8.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    @assert isempty(arr) == false \"arr cannot be empty\"\n    @assert length(arr)\
    \ > 1 \"arr has to have at least 2 integers\"\n    @assert all(x >= 0 for x in\
    \ arr) \"all values in arr have to be non-negative\"\n    return sort(sort(arr,\
    \ by=x->x[1]), by=x->x[2]) \nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4weoruy8.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  BoundsError\n\
    \  Stacktrace:\n    [1] getindex\n      @ ./number.jl:98 [inlined]\n    [2] #3\n\
    \      @ /tmp/tmp4weoruy8.jl:15 [inlined]\n    [3] lt\n      @ ./ordering.jl:111\
    \ [inlined]\n    [4] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg,\
    \ o::Base.Order.By{var\"#3#6\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:507\n    [5] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.By{var\"#3#6\", Base.Order.ForwardOrdering})\n      @ Base.Sort\
    \ ./sort.jl:574\n    [6] sort!\n      @ ./sort.jl:664 [inlined]\n    [7] #sort!#8\n\
    \      @ ./sort.jl:725 [inlined]\n    [8] #sort#9\n      @ ./sort.jl:772 [inlined]\n\
    \    [9] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp4weoruy8.jl:15\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmp4weoruy8.jl:22 [inlined]\n\
    \   [12] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [13] top-level scope\n      @ /tmp/tmp4weoruy8.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp4weoruy8.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  AssertionError: all\
    \ values in arr have to be non-negative\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp4weoruy8.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4weoruy8.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4weoruy8.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp4weoruy8.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  BoundsError\n  Stacktrace:\n\
    \    [1] geti"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4weoruy8.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Your code here\n    # A = [6, 2, 5, 3, 4, 1, 0]\n    # B = sort(A, rev=true)\n\
    \    # C = bin(B)\n    # return C\n    # sort(map(bin, A))\n    # sort(map(x ->\
    \ sum(x), map(x -> digits(x), bin(A))))\n    # sort(map(x -> digits(x), bin(A)))\n\
    \    # sort(map(sum, map(digits, bin(A))))\n    # sort(sum(digits(bin(A))))\n\
    \    # sort(A, by=x -> sum(digits(bin(x))))\n    # sort(A, by=x -> digits(bin(x)))\n\
    \    # sort(A, by=bin)\n    # sort(A, by=bin)\n    # sort(A, by=bin)\n    # sort(A,\
    \ by=bin)\n    # sort(A, by=bin)\n    # sort(A, by=bin)\n    # sort(A, by=bin)\n\
    \    # sort(A, by=bin)\n    # sort(A, by=bin)\n    # sort(A, by=bin)\n    # sort(A,\
    \ by=bin)\n    # sort(A, by=bin)\n    # sort(A, by=bin)\n    # sort(A, by=bin)\n\
    \    # sort(A, by=bin)\n    # sort(A, by=bin)\n    # sort(A, by=bin)\n    # sort(A,\
    \ by=bin)\n    # sort(A, by=bin)\n    # sort(A, by=bin)\n    # sort(A, by=bin)\n\
    \    # sort(A, by=bin)\n    # sort(A, by=bin)\n    # sort(A, by=bin)\n    # sort(A,\
    \ by=bin)\n    # sort(A, by=bin)\n    # sort(A, by=bin)\n    # sort(A, by=bin)\n\
    \    # sort(A, by=bin)\n    # sort(A, by=bin)\n    # sort(A,\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmph92jx2kl.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmph92jx2kl.jl:1\n\
    in expression starting at /tmp/tmph92jx2kl.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by = x -> [count_ones(x), x])\nend\nsort_array([1, 5,\
    \ 2, 3, 4])\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphrwhkxxj.jl:21\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphrwhkxxj.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphrwhkxxj.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphrwhkxxj.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    print(arr)\n    b = binary(arr)\n    a = sort(b, by=x->count(x, '1'))\n\
    \    ans = []\n    for i in 1:length(a)\n        ans = [ans;sum(parse.(Int64,a[i]))]\n\
    \    end\n    return sort(ans)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "[1, 5, 2, 3, 4]test set: Error During Test at /tmp/tmp3yko3yji.jl:26\n\
    \  Test threw exception\n  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4,\
    \ 3, 5]\n  UndefVarError: binary not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp3yko3yji.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3yko3yji.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3yko3yji.jl:25\n[-2, -3, -4,\
    \ -5, -6]test set: Error During Test at /tmp/tmp3yko3yji.jl:27\n  Test threw exception\n\
    \  Expression: candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError:\
    \ binary not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n \
    \    @ Main /tmp/tmp3yko3yji.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3yko3yji.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3yko3yji.jl:25\n[1, 0, 2,\
    \ 3, 4]test set: Error During Test at /tmp/tmp3yko3yji.jl:28\n  Test threw exception\n\
    \  Expression: candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError:\
    \ binary not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n \
    \    @ Main /tmp/tmp3yko3yji.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3yko3yji.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3yko3yji.jl:25\nInt64[]test\
    \ set: Error During Test at /tmp/tmp3yko3yji.jl:29\n  Test threw exception\n \
    \ Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  UndefVarError:\
    \ binary not def"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3yko3yji.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by = (bin -> count_ones(bin), bin -> bin))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqxn_8r61.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: objects\
    \ of type Tuple{var\"#1#3\", var\"#2#4\"} are not callable\n  Stacktrace:\n  \
    \  [1] lt(o::Base.Order.By{Tuple{var\"#1#3\", var\"#2#4\"}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Tuple{var\"\
    #1#3\", var\"#2#4\"}, Tuple{Symbol}, NamedTuple{(:by,), Tuple{Tuple{var\"#1#3\"\
    , var\"#2#4\"}}}})\n      @ Base.Sort ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpqxn_8r61.jl:12\n    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpqxn_8r61.jl:19 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpqxn_8r61.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpqxn_8r61.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: objects\
    \ of type Tuple{var\"#1#3\", var\"#2#4\"} are not callable\n  Stacktrace:\n  \
    \  [1] lt(o::Base.Order.By{Tuple{var\"#1#3\", var\"#2#4\"}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Tuple{var\"\
    #1#3\", var\"#2#4\"}, Tuple{Symbol}, NamedTuple{(:by,), Tuple{Tuple{var\"#1#3\"\
    , var\"#2#4\"}}}})\n      @ Base.Sort ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpqxn_8r61.jl:12\n    [8] macro expansion\n      @ /shared/centos7"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqxn_8r61.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    @assert length(arr) > 0\n    arr = arr[arr .>= 0]\n    @assert length(arr)\
    \ > 0\n    tmp_arr = [arr[i] => count_ones(arr[i]) for i in 1:length(arr)]\n \
    \   @assert length(tmp_arr) > 0\n    tmp_arr = sort(tmp_arr)\n    @assert length(tmp_arr)\
    \ > 0\n    tmp_arr2 = groupby(tmp_arr, last)\n    @assert length(tmp_arr2) > 0\n\
    \    tmp_arr3 = [arr[i] => count_ones(arr[i]) for arr in tmp_arr2 for i in 1:length(arr)]\n\
    \    @assert length(tmp_arr3) > 0\n    tmp_arr4 = sort(tmp_arr3)\n    @assert\
    \ length(tmp_arr4) > 0\n    return tmp_arr4\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpftf3__kg.jl:32\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ groupby not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpftf3__kg.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpftf3__kg.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpftf3__kg.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpftf3__kg.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  AssertionError: length(arr)\
    \ > 0\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpftf3__kg.jl:14\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpftf3__kg.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpftf3__kg.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpftf3__kg.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: groupby not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpftf3__kg.jl:19\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpftf3__kg.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpftf3__kg.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpftf3__kg.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  AssertionError: length(arr)\
    \ > 0\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpftf3__kg.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return map(x -> x[1], sort(zip(arr, map(i -> count_ones(i), arr))))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp27e0diyc.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching sort(::Base.Iterators.Zip{Tuple{Vector{Int64}, Vector{Int64}}})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp27e0diyc.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp27e0diyc.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp27e0diyc.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp27e0diyc.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching sort(::Base.Iterators.Zip{Tuple{Vector{Int64}, Vector{Int64}}})\n \
    \ Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1304\n\
    \    sort(!Matched::AbstractRange) at /shared/centos7/julia/1.7.3/share/julia/base/range.jl:1307\n\
    \    sort(!Matched::SparseArrays.SparseVector{Tv, Ti}; kws...) where {Tv, Ti}\
    \ at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:1968\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp27e0diyc.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp27e0diyc.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdli"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp27e0diyc.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    binarr = map(x -> bitstring(x), arr)\n    dec_ones = map(x -> x[1], binarr)\n\
    \    # println(dec_ones)\n    # println(binarr)\n    binarr = map(x -> x[2], binarr)\n\
    \    # println(binarr)\n    bin_ones = map(x -> count(y -> y == '1', x), binarr)\n\
    \    # println(bin_ones)\n    for i in 1:length(arr)\n        for j in 1:length(arr)\n\
    \            if bin_ones[i] < bin_ones[j]\n                bin_ones[i], bin_ones[j]\
    \ = bin_ones[j], bin_ones[i]\n                dec_ones[i], dec_ones[j] = dec_ones[j],\
    \ dec_ones[i]\n            elseif bin_ones[i] == bin_ones[j]\n               \
    \ if dec_ones[i] < dec_ones[j]\n                    bin_ones[i], bin_ones[j] =\
    \ bin_ones[j], bin_ones[i]\n                    dec_ones[i], dec_ones[j] = dec_ones[j],\
    \ dec_ones[i]\n                end\n            end\n        end\n    end\n  \
    \  return dec_ones\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpojizpt5y.jl:40\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [48, 48, 48, 48, 48] == [1, 2,\
    \ 4, 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpojizpt5y.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpojizpt5y.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpojizpt5y.jl:41\n  Expression: candidate([-2, -3, -4, -5, -6])\
    \ == [-4, -2, -6, -5, -3]\n   Evaluated: [49, 49, 49, 49, 49] == [-4, -2, -6,\
    \ -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpojizpt5y.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpojizpt5y.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpojizpt5y.jl:42\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [48, 48, 48, 48, 48] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpojizpt5y.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpojizpt5y.jl:39\ntest set: Test\
    \ Failed at /tmp/tmpojizpt5y.jl:44\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [48, 48,\
    \ 48, 48, 48, 48, 48, 48, 48, 48, 48] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpojizpt5y.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inline"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpojizpt5y.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by=x->(ones(x), x))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpefnr2k_5.jl:19\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpefnr2k_5.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpefnr2k_5.jl:18\ntest set: Error\
    \ During Test at /tmp/tmpefnr2k_5.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  ArgumentError: invalid\
    \ Array dimensions\n  Stacktrace:\n    [1] Array\n      @ ./boot.jl:457 [inlined]\n\
    \    [2] Array\n      @ ./boot.jl:466 [inlined]\n    [3] ones\n      @ ./array.jl:525\
    \ [inlined]\n    [4] ones\n      @ ./array.jl:522 [inlined]\n    [5] ones\n  \
    \    @ ./array.jl:520 [inlined]\n    [6] #1\n      @ /tmp/tmpefnr2k_5.jl:12 [inlined]\n\
    \    [7] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [8] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [9]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n   [10]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n   [11] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n   [12] #sort#9\n      @ ./sort.jl:772 [inlined]\n   [13] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpefnr2k_5.jl:12\n   [14] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [15] macro expansion\n      @ /tmp/tmpefnr2k_5.jl:20 [inlined]\n\
    \   [16] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [17] top-level scope\n      @ /tmp/tmpefnr2k_5.jl:18\ntest set:\
    \ Test Failed "
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpefnr2k_5.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(arr)\n    new_arr = Vector{Int64}(undef, n)\n    for i in 1:n\n\
    \        ones_dec_pairs = (bitstring(arr[i]) => arr[i])\n        push!(new_arr,\
    \ ones_dec_pairs)\n    end\n    return sort(new_arr, by=x->x[1])\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcjh5hrmp.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Pair{String, Int64} to an object of type Int64\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] push!(a::Vector{Int64}, item::Pair{String, Int64})\n\
    \     @ Base ./array.jl:994\n   [2] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpcjh5hrmp.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcjh5hrmp.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcjh5hrmp.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpcjh5hrmp.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Pair{String, Int64} to an object of type Int64\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] push!(a::Vector{Int64}, item::Pair{String, Int64})\n\
    \     @ Base ./array.jl:994\n   [2] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpcjh5hrmp.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcjh5hrmp.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # two methods you could use\n    # get the binary representations\n  \
    \  # convert binary representation to numbers\n    # sort by which ever one you\
    \ want\n    if length(arr) == 0\n        return arr\n    end\n    if length(arr)\
    \ == 1\n        return arr\n    end\n    # get the binary representations\n  \
    \  bin_arr = map(b_str -> parse(Int64, b_str, base=2), map(i -> Base.int_to_base(i,\
    \ 2), arr))\n    # convert binary representation to numbers\n    bin_arr = map(b_str\
    \ -> parse(Int64, b_str, base=2), map(i -> Base.int_to_base(i, 2), arr))\n   \
    \ # sort by which ever one you want\n    sort(bin_arr)\nend\nsort_array([1, 5,\
    \ 2, 3, 4]) == [1, 2, 3, 4, 5]\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: int_to_base not defined\nStacktrace:\n\
    \ [1] (::var\"#2#6\")(i::Int64)\n   @ Main /tmp/tmpcrmvnik4.jl:23\n [2] iterate\n\
    \   @ ./generator.jl:47 [inlined]\n [3] _collect(c::Vector{Int64}, itr::Base.Generator{Vector{Int64},\
    \ var\"#2#6\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n   @ Base\
    \ ./array.jl:744\n [4] collect_similar\n   @ ./array.jl:653 [inlined]\n [5] map\n\
    \   @ ./abstractarray.jl:2867 [inlined]\n [6] sort_array(arr::Vector{Int64})\n\
    \   @ Main /tmp/tmpcrmvnik4.jl:23\n [7] top-level scope\n   @ /tmp/tmpcrmvnik4.jl:29\n\
    in expression starting at /tmp/tmpcrmvnik4.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # using base 2 so that e.g. [1,0,2,3,4] will return [0,1,2,3,4]\n    return\
    \ sort(arr, by = n->(length(digits(n,2)),n))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkz1olk_d.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(n::Int64)\n      @ Main /tmp/tmpkz1olk_d.jl:13\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpkz1olk_d.jl:13\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpkz1olk_d.jl:20 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpkz1olk_d.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpkz1olk_d.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(n::Int64)\n      @ Main /tmp/tmpkz1olk_d.jl:13\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Ba"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkz1olk_d.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    new_arr = sort(arr, by=x->x[1]) # if x[1] equals, then x[2] is sorted\n\
    \    n = length(new_arr)\n    res = zeros(Int64, n)\n    for i in 1:n\n      \
    \  res[i] = new_arr[i][2]\n    end\n    return res\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps3ccv6gc.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  BoundsError\n\
    \  Stacktrace:\n   [1] getindex\n     @ ./number.jl:98 [inlined]\n   [2] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmps3ccv6gc.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmps3ccv6gc.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmps3ccv6gc.jl:24\ntest set:\
    \ Error During Test at /tmp/tmps3ccv6gc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  BoundsError\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./number.jl:98 [inlined]\n   [2] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmps3ccv6gc.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmps3ccv6gc.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmps3ccv6gc.jl:24\ntest set:\
    \ Error During Test at /tmp/tmps3ccv6gc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  BoundsError\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./number.jl:98 [inlined]\n   [2] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmps3ccv6gc.jl:16\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmps3ccv6gc.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmps3ccv6gc.jl:24\ntest set:\
    \ Error During Test at /tmp/tmps3ccv6gc.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps3ccv6gc.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(arr)\n    val = zeros(Int64, n)\n    ones = zeros(Int64, n)\n\
    \    for i in 1:n\n        @printf(\"%d, %d, %d\\n\", arr[i], bitstring(arr[i]),\
    \ count_ones(bitstring(arr[i])))\n        val[i] = arr[i]\n        ones[i] = count_ones(bitstring(arr[i]))\n\
    \    end\n    idx = argsort(ones)\n    val = val[idx]\n    return val\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: UndefVarError: @printf not defined\nStacktrace:\n [1]\
    \ top-level scope\n   @ :0\n [2] #macroexpand#51\n   @ ./expr.jl:115 [inlined]\n\
    \ [3] macroexpand\n   @ ./expr.jl:114 [inlined]\n [4] docm(source::LineNumberNode,\
    \ mod::Module, meta::Any, ex::Any, define::Bool) (repeats 2 times)\n   @ Base.Docs\
    \ ./docs/Docs.jl:537\n [5] var\"@doc\"(::LineNumberNode, ::Module, ::String, ::Vararg{Any})\n\
    \   @ Core ./boot.jl:517\nin expression starting at /tmp/tmp6hplgfl_.jl:1\nin\
    \ expression starting at /tmp/tmp6hplgfl_.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    if !isempty(arr)\n        # since the only way to do this is to sort as\
    \ string,\n        # might as well do all strings.\n        # can't use int2bin(x,\
    \ n) from binutil because this\n        # is a julia101 funtion, i.e. no packages.\n\
    \        arr = map(x -> string(x), arr)\n        for i in 1:length(arr)\n    \
    \        arr[i] = join([\"0\" for _ in 1:16-length(arr[i])]) * arr[i]\n      \
    \  end\n        # sort by the number of ones, then by decimal value.\n       \
    \ sort!(arr, lt=(x, y) -> count(x .== '1') < count(y .== '1') || (count(x .==\
    \ '1') == count(y .== '1') && parse(Int64, x) < parse(Int64, y)))\n        arr\
    \ = map(x -> parse(Int64, x), arr)\n    end\n    return arr\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj8x1z933.jl:32\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 2, 3, 4, 5] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj8x1z933.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj8x1z933.jl:31\ntest set: Error\
    \ During Test at /tmp/tmpj8x1z933.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  ArgumentError: invalid\
    \ base 10 digit '-' in \"00000000000000-3\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::String, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n    \
    \  @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::String; base::Nothing)\n\
    \      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241 [inlined]\n\
    \    [4] #3\n      @ /tmp/tmpj8x1z933.jl:22 [inlined]\n    [5] #1\n      @ ./ordering.jl:125\
    \ [inlined]\n    [6] lt\n      @ ./ordering.jl:112 [inlined]\n    [7] sort!(v::Vector{String},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.Lt{Base.Order.var\"\
    #1#3\"{var\"#3#7\", typeof(identity)}})\n      @ Base.Sort ./sort.jl:507\n   \
    \ [8] sort!(v::Vector{String}, lo::Int64, hi::Int64, a::Base.Sort.MergeSortAlg,\
    \ o::Base.Order.Lt{Base.Order.var\"#1#3\"{var\"#3#7\", typeof(identity)}}, t::Vector{String})\n\
    \      @ Base.Sort ./sort.jl:592\n    [9] sort!\n      @ ./sort.jl:591 [inlined]\n\
    \   [10] sort!\n      @ ./sort.jl:664 [inlined]\n   [11] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n   [12] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpj8x1z933.jl:22\n\
    \   [13] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [14] macro expansion\n      @ /tmp/tmpj8x1z933.jl:33 [inlined]\n\
    \   [15] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inli"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj8x1z933.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, \n        lt=((a, b) -> bitcount(a) < bitcount(b) || bitcount(a)\
    \ == bitcount(b) && a < b),\n        by=identity)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2pxa68sv.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bitcount not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(a::Int64, b::Int64)\n\
    \      @ Main /tmp/tmp2pxa68sv.jl:13\n    [2] #1\n      @ ./ordering.jl:125 [inlined]\n\
    \    [3] lt\n      @ ./ordering.jl:112 [inlined]\n    [4] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.Lt{Base.Order.var\"\
    #1#3\"{var\"#1#2\", typeof(identity)}})\n      @ Base.Sort ./sort.jl:507\n   \
    \ [5] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.Lt{Base.Order.var\"#1#3\"{var\"#1#2\", typeof(identity)}})\n \
    \     @ Base.Sort ./sort.jl:574\n    [6] sort!\n      @ ./sort.jl:664 [inlined]\n\
    \    [7] #sort!#8\n      @ ./sort.jl:725 [inlined]\n    [8] #sort#9\n      @ ./sort.jl:772\
    \ [inlined]\n    [9] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp2pxa68sv.jl:12\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [11] macro expansion\n      @ /tmp/tmp2pxa68sv.jl:21 [inlined]\n\
    \   [12] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [13] top-level scope\n      @ /tmp/tmp2pxa68sv.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp2pxa68sv.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bitcount\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(a::Int64, b::Int64)\n  \
    \    @ Main /tmp/tmp2pxa68sv.jl:13\n    [2] #1\n      @ ./ordering.jl:125 [inlined]\n\
    \    [3] lt\n      @ ./ordering.jl:112 [inlined]\n    [4] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.Lt{Base.Order.var\"\
    #1#3\"{var\"#1#2\", typeof(identity)}})\n      @ Base.Sort ./sort.jl:507\n   \
    \ [5] sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg,\
    \ o::Base.Order.Lt{Base.Order.var\"#1#3\"{var\"#1#2\", typeof(identity)}})\n \
    \     @ Base.Sort ./sort.jl:5"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2pxa68sv.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    A = copy(arr)\n    sort!(A, (x, y) -> count_ones(x) == count_ones(y) ?\
    \ x < y : count_ones(x) < count_ones(y))\n    return A\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfwogo883.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching sort!(::Vector{Int64}, ::var\"#1#2\")\n  Closest candidates\
    \ are:\n    sort!(::Vector{Int64}, !Matched::Base.Sort.Algorithm, !Matched::Base.Order.Perm{<:Base.Order.DirectOrdering,\
    \ <:Vector{<:Union{Missing, Float32, Float64}}}) at /shared/centos7/julia/1.7.3/share/julia/base/sort.jl:1236\n\
    \    sort!(::AbstractVector; alg, lt, by, rev, order) at /shared/centos7/julia/1.7.3/share/julia/base/sort.jl:707\n\
    \    sort!(::AbstractVector, !Matched::Integer, !Matched::Integer, !Matched::Base.Sort.InsertionSortAlg,\
    \ !Matched::Base.Order.Ordering) at /shared/centos7/julia/1.7.3/share/julia/base/sort.jl:502\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpfwogo883.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfwogo883.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfwogo883.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpfwogo883.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching sort!(::Vector{Int64}, ::var\"#1#2\")\n  Closest candidates are:\n\
    \    sort!(::Vector{Int64}, !Matched::Base.Sort.Algorithm, !Matched::Base.Order.Perm{<:Base.Order.DirectOrdering,\
    \ <:Vector{<:Union{Missing, Float32, Float64}}}) at /shared/centos7/julia/1.7.3/share/julia/base/sort.jl:1236\n\
    \    sort!(::AbstractVector; alg, lt, by, rev, order) at /shared/centos7/julia/1.7.3/share/julia/base/sort.jl:707\n\
    \    sort!(::AbstractVector, !Matched::Integer, !Matched::Integer, !Matched::Base.Sort.InsertionSortAlg,\
    \ !Matched::Base.Order.Ordering) at /shared/centos7/julia/1.7.3/share/julia/base/sort.jl:502\n\
    \    ...\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfwogo883.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # your code here\n    aux = zeros(Int64, size(arr))\n    for i in 1:length(arr)\n\
    \        n = dec(arr[i])\n        n1 = count_ones(arr[i])\n        aux[i] = n\
    \ * 10^n1 + n1 * 10^n\n    end\n    sort(aux)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3,\
    \ 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1,\
    \ 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdkm0pepk.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ dec not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n    \
    \ @ Main /tmp/tmpdkm0pepk.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdkm0pepk.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdkm0pepk.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpdkm0pepk.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: dec\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpdkm0pepk.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdkm0pepk.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdkm0pepk.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpdkm0pepk.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: dec not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpdkm0pepk.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdkm0pepk.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdkm0pepk.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpdkm0pepk.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: dec not defined\n  Stacktrace:\n   [1] sort_arra"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdkm0pepk.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    unsorted = [bin(elem)[3:end] for elem in arr]\n    return sort(arr, by\
    \ = x -> length(bin(x)[3:end]))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjl1hqf_s.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n   [1] (::var\"#1#3\")(elem::Int64)\n     @\
    \ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#3\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpjl1hqf_s.jl:12\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpjl1hqf_s.jl:20 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpjl1hqf_s.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpjl1hqf_s.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#1#3\")(elem::Int64)\n     @ Main\
    \ ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#3\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpjl1hqf_s.jl:12\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpjl1hqf_s.jl:21 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpjl1hqf_s.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpjl1hqf_s.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bin not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#3\")(elem::Int64)\n     @ Main ./none:0\n  \
    \ [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#1#3\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpjl1hqf_s.jl:12"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjl1hqf_s.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    arr_ones = [ones(i) for i in arr]\n    # sort by number of ones\n    sorted_arr\
    \ = sort(arr, by=arr_ones)\n    temp = sorted_arr[1]\n    temp_ones = ones(temp)\n\
    \    # sort by decimal value if have the same number of ones\n    for i = 2:length(sorted_arr)\n\
    \        if arr_ones[i] == temp_ones\n            temp = ifelse(temp < sorted_arr[i],\
    \ temp, sorted_arr[i])\n            sorted_arr[i] = ifelse(temp < sorted_arr[i],\
    \ sorted_arr[i], temp)\n            temp = sorted_arr[i]\n        else\n     \
    \       temp = sorted_arr[i]\n            temp_ones = ones(temp)\n        end\n\
    \    end\n    return sorted_arr\nend\n```\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid \"`\" syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcp9ja69z.jl:30\nin expression starting at\
    \ /tmp/tmpcp9ja69z.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    arr_bin = [Int(b) for b in sort(string.([bin(a)[3:end] for a in arr]))]\n\
    \    arr_sorted = sort(zip(arr_bin, arr))\n    return [b for (a, b) in arr_sorted]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwhjkhwd6.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n   [1] (::var\"#2#5\")(a::Int64)\n     @ Main\
    \ ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#2#5\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpwhjkhwd6.jl:12\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpwhjkhwd6.jl:21 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpwhjkhwd6.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpwhjkhwd6.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#2#5\")(a::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#2#5\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpwhjkhwd6.jl:12\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpwhjkhwd6.jl:22 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpwhjkhwd6.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpwhjkhwd6.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bin not defined\n\
    \  Stacktrace:\n   [1] (::var\"#2#5\")(a::Int64)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{Vector{Int64},\
    \ var\"#2#5\"})\n     @ Base ./array.jl:724\n   [4] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpwhjkhwd6.jl:12\n   [5] m"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwhjkhwd6.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    N = length(arr)\n    sort(arr, by=x->(sum(digits(x, 2)), x))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyhsmmhz_.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpyhsmmhz_.jl:13\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpyhsmmhz_.jl:13\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpyhsmmhz_.jl:20 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpyhsmmhz_.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpyhsmmhz_.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\n  Closest candidates are:\n    digits(::Integer;\
    \ base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmpyhsmmhz_.jl:13\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Ba"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyhsmmhz_.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # is there a better way to sort? by key?\n    vals = []\n    for a in\
    \ arr\n        a_bin = bin(a)\n        num_ones = count(x -> x == '1', a_bin)\n\
    \        push!(vals, (num_ones, a))\n    end\n    sort!(vals)\n    return [b for\
    \ (a, b) in vals]\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptkz_6r0a.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ bin not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n    \
    \ @ Main /tmp/tmptkz_6r0a.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptkz_6r0a.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptkz_6r0a.jl:26\ntest set:\
    \ Error During Test at /tmp/tmptkz_6r0a.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: bin\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmptkz_6r0a.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptkz_6r0a.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptkz_6r0a.jl:26\ntest set:\
    \ Error During Test at /tmp/tmptkz_6r0a.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: bin not defined\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmptkz_6r0a.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptkz_6r0a.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptkz_6r0a.jl:26\ntest set:\
    \ Error During Test at /tmp/tmptkz_6r0a.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: bin not defined\n  Stacktrace:\n   [1] sort_arra"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptkz_6r0a.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    \n    sorted = deepcopy(arr)\n    sort!(sorted)\n    \n    return map(x\
    \ -> findfirst(sorted, x), arr)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeq2yrcu0.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching findfirst(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n\
    \    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n\
    \    findfirst(::AbstractArray) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\"{Vector{Int64}})(x::Int64)\n      @ Main\
    \ /tmp/tmpeq2yrcu0.jl:16\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n\
    \    [3] _collect\n      @ ./array.jl:744 [inlined]\n    [4] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [5] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n    [6] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpeq2yrcu0.jl:16\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpeq2yrcu0.jl:23 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpeq2yrcu0.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpeq2yrcu0.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching findfirst(::Vector{Int64}, ::Int64)\n  Closest candidates are:\n  \
    \  findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n\
    \    findfirst(::AbstractArray) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\"{Vector{Int64}})(x::Int64)\n      @ Main\
    \ /tmp/tmpeq2yrcu0.jl:16\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n\
    \    [3] _collect\n      @ ./array.jl:744 [inlined]\n    [4] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [5] map\n      @ ./"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeq2yrcu0.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n  # Sort the array by the number of 1's in their binary representation,\n\
    \  # and if the number of 1's is equal, sort by the decimal representation\n \
    \ number_of_ones(x) = count(1 for i in digits(x, 2) if i == 1)\n  sort(arr, by\
    \ = [number_of_ones, identity])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu5sllk4i.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpu5sllk4i.jl:15\n\
    \    [8] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpu5sllk4i.jl:22 [inlined]\n\
    \   [10] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpu5sllk4i.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpu5sllk4i.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: objects\
    \ of type Vector{Function} are not callable\n  Use square brackets [] for indexing\
    \ an Array.\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Vector{Function}, Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n \
    \     @ ./sort.jl:507 [inlined]\n    [3] sort!\n      @ ./sort.jl:574 [inlined]\n\
    \    [4] sort!\n      @ ./sort.jl:664 [inlined]\n    [5] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [6] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, Vector{Function},\
    \ Tuple{Symbol}, NamedTuple{(:by,), Tuple{Vector{Function}}}})\n      @ Base.Sort\
    \ ./sort.jl:772\n    [7] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmpu5sllk4i.jl:15\n\
    \    [8] macro expansion\n      @ /shared"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu5sllk4i.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    @assert all(x -> x > 0, arr) \"arr must contain only non-negative integers\"\
    \n    function bin(x::Int64)::Vector{Int64}\n        b = []\n        for c in\
    \ string(x, base=2)\n            push!(b, parse(Int64, c))\n        end\n    \
    \    return b\n    end\n    function bin_count(x::Int64)::Int64\n        count\
    \ = 0\n        for c in string(x, base=2)\n            if c == '1'\n         \
    \       count += 1\n            end\n        end\n        return count\n    end\n\
    \    function bin_sum(x::Int64)::Int64\n        n = 1\n        count = 0\n   \
    \     for c in string(x, base=2)\n            if c == '1'\n                count\
    \ += n\n            end\n            n += 1\n        end\n        return count\n\
    \    end\n    function bin_decimal(x::Int64)::Int64\n        n = 1\n        for\
    \ c in string(x, base=2)\n            x -= parse(Int64, c) * n\n            n\
    \ *= 2\n        end\n        return x\n    end\n    function comp(a::Vector{Int64},\
    \ b::Vector{Int64})::Int64\n        if length(a) == length(b)\n            return\
    \ bin_decimal(a[1]) < bin_decimal(b[1]) ? -1 : 1\n        else\n            return\
    \ length(a) < length(b) ? -1 : 1\n        end\n    end\n    function bin_arr(arr::Vector{Int64})::Vector{Vector{Int64}}\n\
    \        n = length(arr)\n        b = Array{Vector{Int64}}(n)\n        for i in\
    \ 1:n\n            b[i] = bin(arr[i])\n        end\n        return b\n    end\n\
    \    function sort_bin_arr(arr::Vector{Vector{Int64}})::Vector{Vector{Int64}}\n\
    \        s = copy(arr)\n        sort!(s, comp)\n        return s\n    end\n  \
    \  function original_idx(arr::Vector{Vector{Int64}})::Vector{Int64}\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4])\
    \ == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6,\
    \ -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpr1o3jbec.jl:68\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpr1o3jbec.jl:1\n\
    in expression starting at /tmp/tmpr1o3jbec.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    number_1 = [bitstring(i)[2:end] for i in arr]\n    number_1 = [count(x\
    \ -> x == '1', number_1[i]) for i in 1:length(number_1)]\n    arr_sorted = sort(arr)\n\
    \    return [arr_sorted[i] for i in sortperm(number_1)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptj7k6n50.jl:22\n  Expression: candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n   Evaluated: [1, 3, 5, 2, 4] == [1, 2, 4,\
    \ 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptj7k6n50.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptj7k6n50.jl:21\ntest set: Test\
    \ Failed at /tmp/tmptj7k6n50.jl:24\n  Expression: candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3]\n   Evaluated: [1, 0, 2, 4, 3] == [0, 1, 2, 4, 3]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptj7k6n50.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptj7k6n50.jl:21\ntest set: Test\
    \ Failed at /tmp/tmptj7k6n50.jl:26\n  Expression: candidate([2, 5, 77, 4, 5, 3,\
    \ 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\n   Evaluated: [2, 3,\
    \ 5, 77, 2, 4, 4, 5, 7, 5, 3] == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptj7k6n50.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptj7k6n50.jl:21\ntest set: Test\
    \ Failed at /tmp/tmptj7k6n50.jl:27\n  Expression: candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44]\n   Evaluated: [32, 3, 5, 12, 44, 6] == [32, 3,\
    \ 5, 6, 12, 44]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptj7k6n50.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-leve"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptj7k6n50.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # Make a new copy of arr to leave arr unchanged\n    output = copy(arr)\n\
    \    # Throw an error if arr is empty\n    if isempty(arr)\n        throw(ArgumentError(\"\
    Empty array!\"))\n    end\n    # Loop over the elements in arr and sort based\
    \ on the number of ones in the binary representation\n    # of the element, then\
    \ sort elements with the same number of ones according to their decimal value\n\
    \    while true\n        swapped = false\n        for i = 1:length(output)-1\n\
    \            if length(replace(dec2bin(output[i]), \"1\" => \"\")) > length(replace(dec2bin(output[i+1]),\
    \ \"1\" => \"\")) || (length(replace(dec2bin(output[i]), \"1\" => \"\")) == length(replace(dec2bin(output[i+1]),\
    \ \"1\" => \"\")) && output[i] > output[i+1])\n                output[i], output[i+1]\
    \ = output[i+1], output[i]\n                swapped = true\n            end\n\
    \        end\n        if !swapped\n            break\n        end\n    end\n \
    \   return output\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgfnd91a7.jl:39\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ dec2bin not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmpgfnd91a7.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgfnd91a7.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgfnd91a7.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpgfnd91a7.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: dec2bin\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmpgfnd91a7.jl:23\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgfnd91a7.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgfnd91a7.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpgfnd91a7.jl:41\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: dec2bin not\
    \ defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmpgfnd91a7.jl:23\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgfnd91a7.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgfnd91a7.jl:38\ntest set:\
    \ Error During Test at /tmp/tmpgfnd91a7.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(Vector{Int64}([])) == Vector{Int64}([])\n  ArgumentError: Empty array!\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n   "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgfnd91a7.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    ones = Int64[]\n    for i in arr\n        push!(ones, count_ones(i))\n\
    \    end\n    sortperm!(ones)\n    return arr[ones]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1wkkehv6.jl:24\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching sortperm!(::Vector{Int64})\n  Closest candidates are:\n    sortperm!(::AbstractVector{<:Integer},\
    \ !Matched::AbstractVector; alg, lt, by, rev, order, initialized) at /shared/centos7/julia/1.7.3/share/julia/base/sort.jl:957\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp1wkkehv6.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1wkkehv6.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1wkkehv6.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp1wkkehv6.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching sortperm!(::Vector{Int64})\n  Closest candidates are:\n    sortperm!(::AbstractVector{<:Integer},\
    \ !Matched::AbstractVector; alg, lt, by, rev, order, initialized) at /shared/centos7/julia/1.7.3/share/julia/base/sort.jl:957\n\
    \  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp1wkkehv6.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1wkkehv6.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1wkkehv6.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp1wkkehv6.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: no method matching\
    \ sortperm!(::Vector{Int64})\n  Closest candidates are:\n    sortperm!(::AbstractVector{<:Integer},\
    \ !Matched::AbstractVector; alg, lt, by, rev, order, initialized) at /shared/centos7/julia/1.7.3/share/julia/base/sort.jl:957\n\
    \  Sta"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1wkkehv6.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    return sort(arr, by=x->(count_ones(x), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5, 2, 3, 4]) == [1,\
    \ 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\
    \t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4])\
    \ == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32,\
    \ 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4,\
    \ 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw0ussa7i.jl:20\n  Expression: candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n   Evaluated: [-6, -4, -5, -3, -2]\
    \ == [-4, -2, -6, -5, -3]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw0ussa7i.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw0ussa7i.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw0ussa7i.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    sort(arr, by = (x -> x == 0 ? countones(x) : -countones(x)))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1, 5,\
    \ 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) == [-4,\
    \ -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\t\
    @test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmlf5uz74.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ countones not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n  \
    \    @ Main /tmp/tmpmlf5uz74.jl:12\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmpmlf5uz74.jl:12\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpmlf5uz74.jl:19 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpmlf5uz74.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpmlf5uz74.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: countones\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmpmlf5uz74.jl:12\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmlf5uz74.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # `to_bin` is a function I created\n    return sort(arr, by=x->(to_bin(x),\
    \ x))\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2m21pbz8.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ to_bin not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n     \
    \ @ Main /tmp/tmp2m21pbz8.jl:13\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]\
    \ sort!\n      @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:772 [inlined]\n    [8] sort_array(arr::Vector{Int64})\n\
    \      @ Main /tmp/tmp2m21pbz8.jl:13\n    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp2m21pbz8.jl:20 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp2m21pbz8.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp2m21pbz8.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: to_bin\
    \ not defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main\
    \ /tmp/tmp2m21pbz8.jl:13\n    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering},\
    \ a::Int64, b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!(v::Vector{Int64},\
    \ lo::Int64, hi::Int64, #unused#::Base.Sort.InsertionSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:507\n    [4]\
    \ sort!(v::Vector{Int64}, lo::Int64, hi::Int64, a::Base.Sort.QuickSortAlg, o::Base.Order.By{var\"\
    #1#2\", Base.Order.ForwardOrdering})\n      @ Base.Sort ./sort.jl:574\n    [5]"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2m21pbz8.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    bin_arr = convert(Array{Int64, 1}, [(sum(digits(i, base=2)), i) for i\
    \ in arr])\n    ord_arr = sort(bin_arr, by=x->(x[1], x[2]))\n    return map(x->x[2],\
    \ ord_arr)\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2u82frvz.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: Cannot\
    \ `convert` an object of type Tuple{Int64, Int64} to an object of type Int64\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{Int64}, x::Tuple{Int64, Int64},\
    \ i1::Int64)\n      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{Int64},\
    \ doffs::Int64, src::Vector{Tuple{Int64, Int64}}, soffs::Int64, n::Int64)\n  \
    \    @ Base ./array.jl:253\n    [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n\
    \    [4] _copyto_impl!\n      @ ./array.jl:331 [inlined]\n    [5] copyto!\n  \
    \    @ ./array.jl:317 [inlined]\n    [6] copyto!\n      @ ./array.jl:343 [inlined]\n\
    \    [7] copyto_axcheck!\n      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{Int64}(x::Vector{Tuple{Int64,\
    \ Int64}})\n      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554\
    \ [inlined]\n   [10] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp2u82frvz.jl:12\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2u82frvz.jl:21 [inlined]\n\
    \   [13] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2u82frvz.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp2u82frvz.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: Cannot\
    \ `convert` an object of type Tuple{Int64, Int64} to an object of type Int64\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2u82frvz.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    if length(arr) == 0\n        return []\n    end\n    elements_with_ones\
    \ = map(ones_in_binary, arr)\n    return sort(elements_with_ones) |> vcat\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_array;\n\t@test(candidate([1,\
    \ 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3, -4, -5, -6]) ==\
    \ [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3])\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])\n\t@test(candidate([3,\
    \ 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12, 44])\n\t@test(candidate([2, 4, 8, 16,\
    \ 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8,\
    \ 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps89fps1b.jl:23\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  UndefVarError:\
    \ ones_in_binary not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmps89fps1b.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps89fps1b.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps89fps1b.jl:22\ntest set:\
    \ Error During Test at /tmp/tmps89fps1b.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  UndefVarError: ones_in_binary\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmps89fps1b.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps89fps1b.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps89fps1b.jl:22\ntest set:\
    \ Error During Test at /tmp/tmps89fps1b.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  UndefVarError: ones_in_binary\
    \ not defined\n  Stacktrace:\n   [1] sort_array(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmps89fps1b.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps89fps1b.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps89fps1b.jl:22\ntest set:\
    \ Error During Test at /tmp/tmps89fps1b.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5, 5, 5,\
    \ 7, 77]\n  UndefVarError: ones_in_binar"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps89fps1b.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    # your code here. \n    return sort(arr, by=x->[ones(Base.digits(Int,\
    \ x, 2)), x])\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\t\
    @test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2, -3,\
    \ -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4]) ==\
    \ [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4ckzca5q.jl:20\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching digits(::Type{Int64}, ::Int64, ::Int64)\n  Closest candidates\
    \ are:\n    digits(::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmp4ckzca5q.jl:13\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:725 [inlined]\n\
    \    [7] sort(v::Vector{Int64}; kws::Base.Pairs{Symbol, var\"#1#2\", Tuple{Symbol},\
    \ NamedTuple{(:by,), Tuple{var\"#1#2\"}}})\n      @ Base.Sort ./sort.jl:772\n\
    \    [8] sort_array(arr::Vector{Int64})\n      @ Main /tmp/tmp4ckzca5q.jl:13\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp4ckzca5q.jl:20 [inlined]\n\
    \   [11] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp4ckzca5q.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp4ckzca5q.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  MethodError: no method\
    \ matching digits(::Type{Int64}, ::Int64, ::Int64)\n  Closest candidates are:\n\
    \    digits(::Type{<:Integer}, ::Integer; base, pad) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n    [1] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmp4ckzca5q.jl:13\n\
    \    [2] lt(o::Base.Order.By{var\"#1#2\", Base.Order.ForwardOrdering}, a::Int64,\
    \ b::Int64)\n      @ Base.Order ./ordering.jl:111\n    [3] sort!\n      @ ./sort.jl:507\
    \ [inlined]\n    [4] sort!\n      @ ./sort.jl:574 [inlined]\n    [5] sort!\n \
    \     @ ./sort.jl:664 [inlined]\n    [6] #sort!#"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ckzca5q.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    In this Kata, you have to sort an array of non-negative integers\
    \ according to\n    number of ones in their binary representation in ascending\
    \ order.\n    For similar number of ones, sort based on decimal value.\n\n   \
    \ It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1,\
    \ 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n\
    \    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\nfunction sort_array(arr::Vector{Int64})::Vector{Int64}\
    \ \n    num_bits = ceil(log2(maximum(arr)))\n    num_of_ones = [Int(sum(map(int,\
    \ bitstring(i, num_bits)))) for i in arr]\n    sorted_indices = sortperm(num_of_ones)\n\
    \    arr[sorted_indices]\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_array;\n\
    \t@test(candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5])\n\t@test(candidate([-2,\
    \ -3, -4, -5, -6]) == [-4, -2, -6, -5, -3])\n\t@test(candidate([1, 0, 2, 3, 4])\
    \ == [0, 1, 2, 4, 3])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]) == [2, 2, 4, 4, 3, 3, 5,\
    \ 5, 5, 7, 77])\n\t@test(candidate([3, 6, 44, 12, 32, 5]) == [32, 3, 5, 6, 12,\
    \ 44])\n\t@test(candidate([2, 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\n\t@test(candidate([2,\
    \ 4, 8, 16, 32]) == [2, 4, 8, 16, 32])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0cjlk9iu.jl:22\n  Test threw exception\n\
    \  Expression: candidate([1, 5, 2, 3, 4]) == [1, 2, 4, 3, 5]\n  MethodError: no\
    \ method matching bitstring(::Int64, ::Float64)\n  Closest candidates are:\n \
    \   bitstring(::Union{Float64, Int64, UInt64}) at /shared/centos7/julia/1.7.3/share/julia/base/intfuncs.jl:813\n\
    \  Stacktrace:\n   [1] (::var\"#1#2\"{Float64})(i::Int64)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n     @ ./array.jl:724\
    \ [inlined]\n   [4] sort_array(arr::Vector{Int64})\n     @ Main /tmp/tmp0cjlk9iu.jl:13\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp0cjlk9iu.jl:22 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp0cjlk9iu.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp0cjlk9iu.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([-2, -3, -4, -5, -6]) == [-4, -2, -6, -5, -3]\n  DomainError with\
    \ -2.0:\n  log2 will only return a complex result if called with a complex argument.\
    \ Try log2(Complex(x)).\n  Stacktrace:\n   [1] throw_complex_domainerror(f::Symbol,\
    \ x::Float64)\n     @ Base.Math ./math.jl:33\n   [2] _log(x::Float64, base::Val{2},\
    \ func::Symbol)\n     @ Base.Math ./special/log.jl:304\n   [3] log2\n     @ ./special/log.jl:268\
    \ [inlined]\n   [4] log2\n     @ ./math.jl:1221 [inlined]\n   [5] sort_array(arr::Vector{Int64})\n\
    \     @ Main /tmp/tmp0cjlk9iu.jl:12\n   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp0cjlk9iu.jl:23 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp0cjlk9iu.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp0cjlk9iu.jl:24\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 2, 3, 4]) == [0, 1, 2, 4, 3]\n  MethodError: "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0cjlk9iu.jl:19\n"
  exit_code: 1
  status: SyntaxError

name: HumanEval_121_solution
language: r
prompt: "# Given a non-empty list of integers, return the sum of all of the odd elements\
  \ that are in even positions.\n# Examples\n# >>> solution(c(5, 8, 7, 1))\n# 12\n\
  # >>> solution(c(3, 3, 3, 3, 3))\n# 9\n# >>> solution(c(30, 13, 24, 321))\n# 0\n\
  solution <- function(lst) {"
tests: "test_humaneval <- function() {\ncandidate <- solution\n    if(!identical(candidate(c(5,\
  \ 8, 7, 1)), 12)){quit('no', 1)}\n    if(!identical(candidate(c(3, 3, 3, 3, 3)),\
  \ 9)){quit('no', 1)}\n    if(!identical(candidate(c(30, 13, 24, 321)), 0)){quit('no',\
  \ 1)}\n    if(!identical(candidate(c(5, 9)), 5)){quit('no', 1)}\n    if(!identical(candidate(c(2,\
  \ 4, 8)), 0)){quit('no', 1)}\n    if(!identical(candidate(c(30, 13, 23, 32)), 23)){quit('no',\
  \ 1)}\n    if(!identical(candidate(c(3, 13, 2, 9)), 3)){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n    if (length(lst) == 0) return(0)\n    sum(lst[seq(1, length(lst),\
    \ 2)])\n}\n", "\n  if (length(lst) == 0) return(0)\n  if (length(lst) == 1) return(lst[1])\n\
    \  if (length(lst) == 2) return(lst[1] + lst[2])\n  return(lst[1] + lst[2] + lst[3]\
    \ + lst[4])\n}\n\nc <- function(lst) {\n  if (length(lst) == 0) return(0)\n  if\
    \ (length(lst) == 1) return(lst[1])\n  if (length(lst) == 2) return(lst[1] + lst[2])\n\
    \  return(lst[1] + lst[2] + lst[3] + lst[4])\n}\n\nprint(solution(c(5, 8, 7, 1)))\n\
    print(solution(c(3, 3, 3, 3, 3)))\nprint(solution(c(30, 13, 24, 321)))\n", "\n\
    \    if (length(lst) == 0) return(0)\n    return(sum(lst[which(lst %% 2 == 0)]))\n\
    }\n", "\n  lst <- lst[!sapply(lst, is.integer)]\n  if (length(lst) == 0) return(0)\n\
    \  return(sum(lst[sapply(lst, function(x) x %% 2 == 0)]))\n}\n", "\n    sum(lst[which(lst\
    \ %% 2 == 0)])\n}\n", "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n \
    \ if (length(lst) == 0) return(0)\n  return(sum(lst[which(lst %% 2 == 0)]))\n\
    }\n", "\n  sum(lst[which(lst %% 2 == 0)])\n}\n", "\n  if (length(lst) == 0) return(0)\n\
    \  return(sum(lst[seq_len(length(lst)) %% 2 == 0]))\n}\n", "\n  if (length(lst)\
    \ == 0) return(0)\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n    if (length(lst)\
    \ == 0) return(0)\n    lst <- lst[!(lst %% 2)]\n    return(sum(lst[lst %% 2]))\n\
    }\n", "\n    if (length(lst) == 0) return(0)\n    if (length(lst) == 1) return(lst[1])\n\
    \    if (length(lst) == 2) return(lst[1] + lst[2])\n    if (length(lst) % 2 ==\
    \ 0) return(0)\n    return(lst[1] + lst[2] + lst[3] + lst[4] + lst[5])\n}\n",
  "\n    if (length(lst) == 0) return(0)\n    if (length(lst) == 1) return(lst[1])\n\
    \    if (length(lst) == 2) return(lst[1] + lst[2])\n    if (length(lst) == 3)\
    \ return(lst[1] + lst[2] + lst[3])\n    if (length(lst) == 4) return(lst[1] +\
    \ lst[2] + lst[3] + lst[4])\n    if (length(lst) == 5) return(lst[1] + lst[2]\
    \ + lst[3] + lst[4] + lst[5])\n    if (length(lst) == 6) return(lst[1] + lst[2]\
    \ + lst[3] + lst[4] + lst[5] + lst[6])\n    if (length(lst) == 7) return(lst[1]\
    \ + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7])\n    if (length(lst)\
    \ == 8) return(lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] +\
    \ lst[8])\n    if (length(lst) == 9) return(lst[1] + lst[2] + lst[3] + lst[4]\
    \ + lst[5] + lst[6] + lst[7] + lst[8] + lst[9])\n    if (length(lst) == 10) return(lst[1]\
    \ + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8] + lst[9] + lst[10])\n\
    \    if (length(lst) == 11) return(lst[1] + lst[2] + lst[3] + lst[4", "\n  if\
    \ (length(lst) == 0) return(0)\n  if (length(lst) == 1) return(lst[1])\n  if (length(lst)\
    \ == 2) return(lst[1] + lst[2])\n  return(lst[1] + lst[2] + lst[3] + lst[4])\n\
    }\n\nprint(solution(c(5, 8, 7, 1)))\nprint(solution(c(3, 3, 3, 3, 3)))\nprint(solution(c(30,\
    \ 13, 24, 321)))\n", "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n\nprint(solution(c(5,\
    \ 8, 7, 1)))\nprint(solution(c(3, 3, 3, 3, 3)))\nprint(solution(c(30, 13, 24,\
    \ 321)))\n", "\n    if (length(lst) == 0) return(0)\n    return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n", "\n    if (length(lst) == 0) return(0)\n    if (length(lst)\
    \ == 1) return(lst[1])\n    return(sum(lst[1::2]))\n}\n", "\n  if (length(lst)\
    \ == 0) return(0)\n  if (length(lst) == 1) return(lst[1])\n  return(sum(lst[1:length(lst)])\
    \ + sum(lst[(length(lst) + 1):length(lst) * 2]))\n}\n", "\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n\nc(5, 8, 7, 1)\nc(3, 3, 3, 3, 3)\nc(30, 13, 24, 321)\n",
  "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[seq_len(length(lst)) %% 2\
    \ == 0]))\n}\n", "\n  sum(lst[which(lst %% 2 == 0)])\n}\n", "\n  sum(lst[seq(1,\
    \ length(lst), 2)])\n}\n", "\n    lst <- lst[!sapply(lst, is.integer)]\n    if\
    \ (length(lst) == 0) {\n        return(0)\n    }\n    return(sum(lst[sapply(lst,\
    \ function(x) {\n        return(x %% 2 == 0)\n    })])\n    )\n}\n", "\n    if\
    \ (length(lst) == 0) return(0)\n    if (length(lst) == 1) return(lst[1])\n   \
    \ if (length(lst) == 2) return(lst[1] + lst[2])\n    if (length(lst) % 2 == 0)\
    \ return(sum(lst[1::2]))\n    return(sum(lst[1::2]) + lst[length(lst)])\n}\n\n\
    print(solution(c(5, 8, 7, 1)))\nprint(solution(c(3, 3, 3, 3, 3)))\nprint(solution(c(30,\
    \ 13, 24, 321)))\n", "\n  if (length(lst) == 0) return(0)\n  if (length(lst) ==\
    \ 1) return(lst[1])\n  if (length(lst) == 2) return(lst[1] + lst[2])\n  if (length(lst)\
    \ % 2 == 0) return(sum(lst[1:length(lst) / 2]))\n  return(sum(lst[1:length(lst)\
    \ / 2]))\n}\n", "\n  if (length(lst) == 0) return(0)\n  if (length(lst) == 1)\
    \ return(lst[1])\n  if (length(lst) == 2) return(lst[1] + lst[2])\n  return(lst[1]\
    \ + lst[2] + lst[3] + lst[4])\n}\n\nc <- function(lst) {\n  if (length(lst) ==\
    \ 0) return(0)\n  if (length(lst) == 1) return(lst[1])\n  if (length(lst) == 2)\
    \ return(lst[1] + lst[2])\n  return(lst[1] + lst[2] + lst[3] + lst[4])\n}\n\n\
    print(solution(c(5, 8, 7, 1)))\nprint(solution(c(3, 3, 3, 3, 3)))\nprint(solution(c(30,\
    \ 13, 24, 321)))\n", "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n\nc <- function(lst)\
    \ {\n  return(lst[-1])\n}\n\nprint(solution(c(5, 8, 7, 1)))\nprint(solution(c(3,\
    \ 3, 3, 3, 3)))\nprint(solution(c(30, 13, 24, 321)))\n", "\n    sum(lst[seq(1,\
    \ length(lst), 2)])\n}\n", "\n  sum(lst[seq_len(lst) %% 2 == 0])\n}\n", "\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n", "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n\nc <-\
    \ function(...){\n  c(..., recursive=TRUE)\n}\n\nprint(solution(c(5, 8, 7, 1)))\n\
    print(solution(c(3, 3, 3, 3, 3)))\nprint(solution(c(30, 13, 24, 321)))\n", "\n\
    \    if (length(lst) == 0) return(0)\n    return(sum(lst[seq_len(lst, 2) == 2]))\n\
    }\n", "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n  if (length(lst)\
    \ == 0) return(0)\n  return(sum(lst[seq_len(length(lst)) %% 2 == 0]))\n}\n", "\n\
    \  return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n    sum(lst[seq(1, length(lst),\
    \ 2)])\n}\n", "\n  return(sum(lst[seq_len(lst) %% 2 == 0]))\n}\n", "\n  sum(lst[seq_len(lst)\
    \ %% 2])\n}\n", "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n\nprint(solution(c(5, 8, 7, 1)))\nprint(solution(c(3, 3, 3,\
    \ 3, 3)))\nprint(solution(c(30, 13, 24, 321)))\n", "\n    lst <- lst[!is.na(lst)]\n\
    \    if (length(lst) == 0) return(0)\n    lst <- lst[lst %% 2 == 0]\n    return(sum(lst))\n\
    }\n", "\n  sum(lst[seq_len(lst) %% 2 == 0])\n}\n", "\n  if (length(lst) == 0)\
    \ return(0)\n  return(sum(lst[seq_len(lst) %% 2 == 0]))\n}\n", "\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n", "\n  if (length(lst) == 0) return(0)\n  if (length(lst)\
    \ == 1) return(lst[1])\n  if (length(lst) == 2) return(lst[1] + lst[2])\n  if\
    \ (length(lst) % 2 == 0) return(sum(lst[1:(length(lst) - 1)]) + lst[length(lst)\
    \ - 1])\n  return(sum(lst[1:(length(lst) - 1)]) + lst[length(lst) - 1])\n}\n",
  "\n    sum(lst[seq_len(lst) %% 2 == 0])\n}\n\nprint(solution(c(5, 8, 7, 1)))\nprint(solution(c(3,\
    \ 3, 3, 3, 3)))\nprint(solution(c(30, 13, 24, 321)))\n", "\n  sum(lst[seq_len(lst)\
    \ %% 2 == 0])\n}\n", "\n    return(sum(lst[which(lst %% 2 == 0)]))\n}\n\nc(5,\
    \ 8, 7, 1)\nc(3, 3, 3, 3, 3)\nc(30, 13, 24, 321)\n", "\n  lst <- lst[!sapply(lst,\
    \ is.integer) | lst == 0]\n  lst <- lst[!sapply(lst, is.integer)]\n  lst <- lst[!sapply(lst,\
    \ is.integer)]\n  lst <- lst[!sapply(lst, is.integer)]\n  lst <- lst[!sapply(lst,\
    \ is.integer)]\n  lst <- lst[!sapply(lst, is.integer)]\n  lst <- lst[!sapply(lst,\
    \ is.integer)]\n  lst <- lst[!sapply(lst, is.integer)]\n  lst <- lst[!sapply(lst,\
    \ is.integer)]\n  lst <- lst[!sapply(lst, is.integer)]\n  lst <- lst[!sapply(lst,\
    \ is.integer)]\n  lst <- lst[!sapply(lst, is.integer)]\n  lst <- lst[!sapply(lst,\
    \ is.integer)]\n  lst <- lst[!sapply(lst, is.integer)]\n  lst <- lst[!sapply(lst,\
    \ is.integer)]\n  lst <- lst[!sapply(lst, is.integer)]\n  lst <- lst[!sapply(lst,\
    \ is.integer)]\n  lst <- lst[!sapply(lst, is.integer)]\n  lst <- lst[!sapply(lst,\
    \ is.integer)]\n  lst <- lst[!sapply(lst, is.integer)]\n  lst <- lst[!sapply(lst,\
    \ is.integer)]\n  lst <- lst[!sapply(lst, is.integer)]\n  lst <- lst[!sapply(lst,\
    \ is.integer)]\n  lst <- lst[!sapply(lst, is.integer)]\n  lst <- lst[!sapply(lst,\
    \ is.integer)]\n  lst <- lst[!sapply(lst, is.integer)]\n  lst <- lst[!sapply(",
  "\n  sum(lst[lst %% 2 == 0])\n}\n\nc <- function(..., n = 1) {\n  lst <- list(...)\n\
    \  for (i in seq_len(n)) {\n    lst[[i]] <- lst[[i]] * 2\n  }\n  lst\n}\n\nc(5,\
    \ 8, 7, 1)\nc(3, 3, 3, 3, 3)\nc(30, 13, 24, 321)\nsolution(c(5, 8, 7, 1))\nsolution(c(3,\
    \ 3, 3, 3, 3))\nsolution(c(30, 13, 24, 321))\n", "\n  if (length(lst) == 0) return(0)\n\
    \  return(sum(lst[seq_len(lst, 2) == 2]))\n}\n", "\n  lst <- lst[!sapply(lst,\
    \ is.integer) | lapply(lst, is.integer)]\n  if (length(lst) == 0) return(0)\n\
    \  return(sum(lst[sapply(lst, function(x) x %% 2 == 0)]))\n}\n", "\n  if (length(lst)\
    \ == 0) return(0)\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n\nprint(solution(c(5, 8, 7, 1)))\nprint(solution(c(3, 3, 3,\
    \ 3, 3)))\nprint(solution(c(30, 13, 24, 321)))\n", "\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n\nc(5, 8, 7, 1)\nc(3, 3, 3, 3, 3)\nc(30, 13, 24, 321)\n",
  "\n  sum(lst[seq(1, length(lst), 2)])\n}\n", "\n    if (length(lst) == 0) return(0)\n\
    \    if (length(lst) == 1) return(lst[1])\n    return(sum(lst[1::2]))\n}\n", "\n\
    \  sum(lst[seq(1, length(lst), 2)])\n}\n", "\n  sum(lst[lst %% 2 == 0])\n}\n\n\
    c(5, 8, 7, 1)\nc(3, 3, 3, 3, 3)\nc(30, 13, 24, 321)\n", "\n  if (length(lst) ==\
    \ 0) return(0)\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n  sum(lst[seq(1,\
    \ length(lst), 2)])\n}\n", "\n  sum(lst[seq(1, length(lst), 2)])\n}\n", "\n  sum(lst[lst\
    \ %% 2 == 0])\n}\n", "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n  if\
    \ (length(lst) == 0) return(0)\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n",
  "\n    sum(lst[which(lst %% 2 == 0)])\n}\n", "\n    if (length(lst) == 0) return(0)\n\
    \    return(sum(lst[seq_len(length(lst)) %% 2 == 0]))\n}\n", "\n  lst <- lst[!sapply(lst,\
    \ is.integer)]\n  if (length(lst) == 0) return(0)\n  return(sum(lst[sapply(lst,\
    \ function(x) x %% 2 == 0)]))\n}\n", "\n    sum(lst[which(lst %% 2 == 0)])\n}\n",
  "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n\nc(5, 8, 7, 1)\nc(3, 3, 3, 3, 3)\n\
    c(30, 13, 24, 321)\n", "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[seq_len(length(lst))\
    \ %% 2 == 0]))\n}\n", "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n", "\n    return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n\
    \    sum(lst[lst %% 2 == 0])\n}\n", "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n", "\n    if (length(lst) == 0) return(0)\n    return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n", "\n    sum(lst[which(lst %% 2 == 0)])\n}\n", "\n  lst <-\
    \ lst[lst %in% c(1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192,\
    \ 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608,\
    \ 16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 1073741824, 2147483648,\
    \ 4294967296, 8589934592, 17179869184, 34359738368, 68719476736, 137438953472,\
    \ 274877906944, 549755813888, 1099511627776, 2199023255552, 4398046511104, 8796093022208,\
    \ 17592186044416, 35184372088832, 70368744177664, 140737488355328, 281474976710656,\
    \ 562949953421312, 1125899906842624, 2251799813685248, 4503599627370496, 9007199254740992,\
    \ 18014398509481984, 36028797018963968, 72057594037927936, 144115188075855872,\
    \ 288230376151711744, 576460752303423488, 1152921504606846976, 2305843009213693952,\
    \ 4611686018427387904, 9223372036854775808, 18446744073709551616,\n  # lst <-\
    \ lst[lst %in% c(1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192,\
    \ 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608,\
    \ 16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 1073741824, 2147483648,\
    \ 4294967296, 8589934592, 17179869184, 34", "\n    return(sum(lst[which(lst %%\
    \ 2 == 0)]))\n}\n", "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n", "\n  sum(lst[seq(1, length(lst), 2)])\n}\n", "\n    sum(lst[which(lst\
    \ %% 2 == 0)])\n}\n", "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n\nc <- function(...,\
    \ n = 1) {\n  if (n == 1) {\n    return(list(...))\n  } else {\n    return(c(...,\
    \ n - 1))\n  }\n}\n\nmain <- function() {\n  print(solution(c(5, 8, 7, 1)))\n\
    \  print(solution(c(3, 3, 3, 3, 3)))\n  print(solution(c(30, 13, 24, 321)))\n\
    }\n\nmain()\n", "\n    sum(lst[which(lst %% 2 == 0)])\n}\n", "\n    sum(lst[seq(1,\
    \ length(lst), 2)])\n}\n", "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n\nprint(solution(c(5, 8, 7, 1)))\nprint(solution(c(3, 3, 3,\
    \ 3, 3)))\nprint(solution(c(30, 13, 24, 321)))\n", "\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n\nprint(solution(c(5, 8, 7, 1)))\nprint(solution(c(3, 3, 3,\
    \ 3, 3)))\nprint(solution(c(30, 13, 24, 321)))\n", "\n  sum(lst[seq_len(lst) %%\
    \ 2])\n}\n", "\n  sum(lst[seq_len(lst) %% 2 == 0])\n}\n", "\n    if (length(lst)\
    \ == 0) return(0)\n    return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n    lst\
    \ <- lst[!sapply(lst, is.integer)]\n    if (length(lst) == 0) return(0)\n    return(sum(lst[sapply(lst,\
    \ function(x) x %% 2 == 0)]))\n}\n", "\n    return(sum(lst[which(lst %% 2 == 0)]))\n\
    }\n", "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n\nprint(solution(c(5, 8,\
    \ 7, 1)))\nprint(solution(c(3, 3, 3, 3, 3)))\nprint(solution(c(30, 13, 24, 321)))\n",
  "\n  sum(lst[seq(1, length(lst), 2)])\n}\n\nc(5, 8, 7, 1)\nc(3, 3, 3, 3, 3)\nc(30,\
    \ 13, 24, 321)\n", "\n    if (length(lst) == 0) return(0)\n    if (length(lst)\
    \ == 1) return(lst[1])\n    return(sum(lst[1:length(lst)]) + lst[length(lst)])\n\
    }\n", "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[seq_len(length(lst))\
    \ %% 2 == 0]))\n}\n", "\n    if (length(lst) == 0) return(0)\n    if (length(lst)\
    \ == 1) return(lst[1])\n    if (length(lst) == 2) return(lst[1] + lst[2])\n  \
    \  odds = lst[1::2]\n    evens = lst[2::2]\n    return(sum(odds) + sum(evens))\n\
    }\n\nprint(solution(c(5, 8, 7, 1)))\nprint(solution(c(3, 3, 3, 3, 3)))\nprint(solution(c(30,\
    \ 13, 24, 321)))\n", "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n", "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[seq_len(lst)\
    \ %% 2 == 0]))\n}\n", "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n", "\n    sum(lst[which(lst %% 2 == 0)])\n}\n", "\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n", "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n", "\n  return(sum(lst[seq(1, length(lst), 2)]) %/% 2)\n}\n",
  "\n  sum(lst[lst %% 2 == 0])\n}\n\nc <- function(lst) {\n  lst[lst %% 2 == 0]\n\
    }\n\nprint(solution(c(5, 8, 7, 1)))\nprint(solution(c(3, 3, 3, 3, 3)))\nprint(solution(c(30,\
    \ 13, 24, 321)))\n", "\n    if (length(lst) == 0) return(0)\n    if (length(lst)\
    \ == 1) return(lst[1])\n    if (length(lst) == 2) return(lst[1] + lst[2])\n  \
    \  if (length(lst) % 2 == 0) return(sum(lst[1:length(lst) / 2]))\n    return(sum(lst[1:length(lst)\
    \ / 2]))\n}\n\nprint(solution(c(5, 8, 7, 1)))\nprint(solution(c(3, 3, 3, 3, 3)))\n\
    print(solution(c(30, 13, 24, 321)))\n", "\n  if (length(lst) == 0) return(0)\n\
    \  if (length(lst) == 1) return(lst[1])\n  if (length(lst) == 2) return(lst[1]\
    \ + lst[2])\n  if (length(lst) % 2 == 0) return(sum(lst[1:length(lst) / 2]))\n\
    \  return(sum(lst[1:length(lst) / 2]) + lst[length(lst) / 2])\n}\n", "\n  if (length(lst)\
    \ == 0) return(0)\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n  return(sum(lst[seq_len(lst)\
    \ %% 2 == 0]))\n}\n", "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n\nprint(solution(c(5,\
    \ 8, 7, 1)))\nprint(solution(c(3, 3, 3, 3, 3)))\nprint(solution(c(30, 13, 24,\
    \ 321)))\n", "\n  if (length(lst) == 0) return(0)\n  if (length(lst) == 1) return(lst[1])\n\
    \  return(sum(lst[1::2]))\n}\n", "\n  sum(lst[which(lst %% 2 == 0)])\n}\n", "\n\
    \    sum(lst[which(lst %% 2 == 0)])\n}\n", "\n  sum(lst[which(lst %% 2 == 0)])\n\
    }\n", "\n  return(sum(lst[seq_len(lst) %% 2 == 0]))\n}\n", "\n  lst <- lst[!sapply(lst,\
    \ is.integer)]\n  if (length(lst) == 0) {\n    return(0)\n  }\n  return(sum(lst[sapply(lst,\
    \ function(x) x %% 2 == 0)]))\n}\n", "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n", "\n    return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n\
    \  sum(lst[seq(1, length(lst), 2)])\n}\n", "\n    sum(lst[seq(1, length(lst),\
    \ 2)])\n}\n", "\n  return(sum(lst[lst %% 2 == 0]))\n}\n", "\n  return(sum(lst[lst\
    \ %% 2 == 0]))\n}\n", "\n  if (length(lst) == 0) return(0)\n  if (length(lst)\
    \ == 1) return(lst[1])\n  return(sum(lst[1::2]))\n}\n", "\n    sum(lst[which(lst\
    \ %% 2 == 0)])\n}\n\nc(5, 8, 7, 1)\nc(3, 3, 3, 3, 3)\nc(30, 13, 24, 321)\n", "\n\
    \  return(sum(lst[which(lst %% 2 == 0)]))\n}\n\nc(5, 8, 7, 1)\nc(3, 3, 3, 3, 3)\n\
    c(30, 13, 24, 321)\n", "\n  return(sum(lst[lst %% 2 == 0]))\n}\n\nc(5, 8, 7, 1)\n\
    c(3, 3, 3, 3, 3)\nc(30, 13, 24, 321)\n", "\n    if (length(lst) == 0) return(0)\n\
    \    if (length(lst) == 1) return(lst[1])\n    if (length(lst) == 2) return(lst[1]\
    \ + lst[2])\n    if (length(lst) % 2 == 0) return(0)\n    return(lst[1] + lst[2]\
    \ + lst[3] + lst[4])\n}\n\nprint(solution(c(5, 8, 7, 1)))\nprint(solution(c(3,\
    \ 3, 3, 3, 3)))\nprint(solution(c(30, 13, 24, 321)))\n", "\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n\nprint(solution(c(5, 8, 7, 1)))\nprint(solution(c(3, 3, 3,\
    \ 3, 3)))\nprint(solution(c(30, 13, 24, 321)))\n", "\n  lst <- lst[!sapply(lst,\
    \ is.integer) | lapply(lst, is.integer)]\n  if (length(lst) == 0) return(0)\n\
    \  return(sum(lst[sapply(lst, function(x) x %% 2 == 0)]))\n}\n", "\n  sum(lst[seq_len(lst)\
    \ %% 2 == 0])\n}\n", "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[seq_len(length(lst))\
    \ %% 2 == 0]))\n}\n", "\n  if (length(lst) == 0) return(0)\n  if (length(lst)\
    \ == 1) return(lst[1])\n  if (length(lst) == 2) return(lst[1] + lst[2])\n  if\
    \ (length(lst) % 2 == 0) return(0)\n  return(lst[1] + lst[2] + lst[3] + lst[4]\
    \ + lst[5] + lst[6] + lst[7] + lst[8] + lst[9] + lst[10] + lst[11] + lst[12] +\
    \ lst[13] + lst[14] + lst[15] + lst[16] + lst[17] + lst[18] + lst[19] + lst[20]\
    \ + lst[21] + lst[22] + lst[23] + lst[24] + lst[25] + lst[26] + lst[27] + lst[28]\
    \ + lst[29])\n}\n\nc <- c(5, 8, 7, 1)\nprint(solution(c))\n", "\n  if (length(lst)\
    \ == 0) return(0)\n  return(sum(lst[seq_len(length(lst)) %% 2 == 0]))\n}\n", "\n\
    \  return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n  sum(lst[which(lst %% 2 ==\
    \ 0)])\n}\n", "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n\nprint(solution(c(5,\
    \ 8, 7, 1)))\nprint(solution(c(3, 3, 3, 3, 3)))\nprint(solution(c(30, 13, 24,\
    \ 321)))\n", "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n\nc <- function(...,\
    \ n = 1) {\n  if (n == 1) {\n    return(list(...))\n  } else {\n    return(c(...,\
    \ n - 1))\n  }\n}\n\nc(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\nc(1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\nc(1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30)\nc(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\
    \ 39, 40)\nc(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\
    \ 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57,\
    \ 58, 59, 60)\nc(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,\
    \ 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,", "\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n\nprint(solution(c(5, 8, 7, 1)))\nprint(solution(c(3, 3, 3,\
    \ 3, 3)))\nprint(solution(c(30, 13, 24, 321)))\n", "\n    if (length(lst) == 0)\
    \ return(0)\n    if (length(lst) == 1) return(lst[1])\n    if (length(lst) ==\
    \ 2) return(lst[1] + lst[2])\n    if (length(lst) % 2 == 0) return(sum(lst[1:length(lst)\
    \ / 2]))\n    return(sum(lst[1:length(lst) / 2]))\n}\n", "\n    return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n\nprint(solution(c(5, 8, 7, 1)))\nprint(solution(c(3, 3, 3,\
    \ 3, 3)))\nprint(solution(c(30, 13, 24, 321)))\n", "\n  if (length(lst) == 0)\
    \ return(0)\n  if (length(lst) == 1) return(lst[1])\n  return(sum(lst[1::2]))\n\
    }\n", "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n    if (length(lst)\
    \ == 0) return(0)\n    return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n\nc <- function(lst) {\n  return(c(lst[1], lst[2], lst[3],\
    \ lst[4], lst[5], lst[6], lst[7], lst[8], lst[9], lst[10], lst[11], lst[12], lst[13],\
    \ lst[14], lst[15], lst[16], lst[17], lst[18], lst[19], lst[20], lst[21], lst[22],\
    \ lst[23], lst[24], lst[25], lst[26], lst[27], lst[28], lst[29], lst[30], lst[31],\
    \ lst[32], lst[33], lst[34], lst[35], lst[36], lst[37], lst[38], lst[39], lst[40],\
    \ lst[41], lst[42], lst[43], lst[44], lst[45], lst[46], lst[47], lst[48], lst[49],\
    \ lst[50], lst[51], lst[52], lst[53], lst[54], lst[55], lst[56], lst[57], lst[58],\
    \ lst[59], lst[60], lst[61], lst[62], lst[63], lst[64], lst[65], lst[66], lst[67],\
    \ lst[68], lst[69], lst[70], lst[71], lst[72], lst[73], lst[74], lst[75], lst[76],\
    \ lst[77], lst[78], lst[79], lst[80], lst[81], lst[82], lst[83], lst[84], lst[85],\
    \ lst[86], lst[87], lst[88], lst[89], lst[90], lst[91], lst[92], lst[93], lst[94],\
    \ lst[95],", "\n  sum(lst[which(lst %% 2 == 0)])\n}\n", "\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n\nc <- function(lst) {\n  return(lst[which(lst %% 2 == 0)])\n\
    }\n\nprint(solution(c(5, 8, 7, 1)))\nprint(solution(c(3, 3, 3, 3, 3)))\nprint(solution(c(30,\
    \ 13, 24, 321)))\n", "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n\nc <- function(...){\n\
    \  c(..., rep(0, length(...) - 1))\n}\n\nprint(solution(c(5, 8, 7, 1)))\nprint(solution(c(3,\
    \ 3, 3, 3, 3)))\nprint(solution(c(30, 13, 24, 321)))\n", "\n    if (length(lst)\
    \ == 0) return(0)\n    return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n  sum(lst[seq(1,\
    \ length(lst), 2)])\n}\n", "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n\n\
    print(solution(c(5, 8, 7, 1)))\nprint(solution(c(3, 3, 3, 3, 3)))\nprint(solution(c(30,\
    \ 13, 24, 321)))\n", "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n\nprint(solution(c(5, 8, 7, 1)))\nprint(solution(c(3, 3, 3,\
    \ 3, 3)))\nprint(solution(c(30, 13, 24, 321)))\n", "\n    if (length(lst) == 0)\
    \ return(0)\n    return(sum(lst[which(lst %% 2 == 0)]))\n}\n\nprint(solution(c(5,\
    \ 8, 7, 1)))\nprint(solution(c(3, 3, 3, 3, 3)))\nprint(solution(c(30, 13, 24,\
    \ 321)))\n", "\n  if (length(lst) == 0) return(0)\n  if (length(lst) == 1) return(lst[1])\n\
    \  if (length(lst) == 2) return(lst[1] + lst[2])\n  return(lst[1] + lst[2] + lst[3]\
    \ + lst[4] + lst[5])\n}\n", "\n    sum(lst[which(lst %% 2 == 0)])\n}\n", "\n \
    \ lst <- lst[!sapply(lst, is.integer)]\n  if (length(lst) == 0) return(0)\n  return(sum(lst[sapply(lst,\
    \ function(x) x %% 2 == 0)]))\n}\n", "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n\nprint(solution(c(5, 8, 7, 1)))\nprint(solution(c(3, 3, 3,\
    \ 3, 3)))\nprint(solution(c(30, 13, 24, 321)))\n", "\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n", "\n  if (length(lst) == 0) {\n    return(0)\n  }\n  if\
    \ (length(lst) == 1) {\n    return(lst[1])\n  }\n  return(sum(lst[1::2]))\n}\n",
  "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[which(lst %% 2 == 0)]))\n\
    }\n", "\n    if (length(lst) == 0) return(0)\n    return(sum(lst[seq_len(length(lst))\
    \ %% 2 == 0]))\n}\n", "\n  sum(lst[seq_len(lst) %% 2])\n}\n", "\n  sum(lst[seq_len(lst)\
    \ %% 2 == 0])\n}\n", "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[seq_len(lst)\
    \ %% 2 == 0]))\n}\n", "\n    sum(lst[which(lst %% 2 == 0)])\n}\n", "\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n", "\n    if (length(lst) == 0) return(0)\n    return(sum(lst[seq_len(lst)\
    \ %% 2 == 0]))\n}\n", "\n    sum(lst[seq_len(lst) %% 2 == 0])\n}\n", "\n  sum(lst[seq_len(lst)\
    \ %% 2 == 0])\n}\n", "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[seq_len(length(lst))\
    \ %% 2 == 0]))\n}\n", "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n\nprint(solution(c(5,\
    \ 8, 7, 1)))\nprint(solution(c(3, 3, 3, 3, 3)))\nprint(solution(c(30, 13, 24,\
    \ 321)))\n", "\n  sum(lst[seq(1, length(lst), 2)])\n}\n", "\n    if (length(lst)\
    \ == 0) return(0)\n    return(sum(lst[seq_len(length(lst)) %% 2 == 0]))\n}\n",
  "\n  return(sum(lst[lst %% 2 == 0]))\n}\n\nc <- function(...){\n  c(..., FALSE)\n\
    }\n\nprint(solution(c(5, 8, 7, 1)))\nprint(solution(c(3, 3, 3, 3, 3)))\nprint(solution(c(30,\
    \ 13, 24, 321)))\n", "\n  sum(lst[seq_len(lst) %% 2 == 0])\n}\n", "\n  if (length(lst)\
    \ == 0) return(0)\n  if (length(lst) == 1) return(lst[1])\n  odds <- lst[1::2]\n\
    \  return(sum(odds[odds %in% odds[-1]]))\n}\n", "\n  sum(lst[which(lst %% 2 ==\
    \ 0)])\n}\n", "\n  if (length(lst) == 0) return(0)\n  if (length(lst) == 1) return(lst[1])\n\
    \  return(sum(lst[1::2]))\n}\n", "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[seq_len(lst)\
    \ %% 2 == 0]))\n}\n", "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n", "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n\
    \    if (length(lst) == 0) return(0)\n    return(sum(lst[which(lst %% 2 == 0)]))\n\
    }\n", "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n\nprint(solution(c(5, 8,\
    \ 7, 1)))\nprint(solution(c(3, 3, 3, 3, 3)))\nprint(solution(c(30, 13, 24, 321)))\n",
  "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[which(lst %% 2 == 0)]))\n\
    }\n", "\n  sum(lst[seq_len(lst) %% 2 == 0])\n}\n", "\n  sum(lst[seq(1, length(lst),\
    \ 2)])\n}\n", "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n", "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[which(lst\
    \ %% 2 == 0)]))\n}\n", "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n\
    \  return(sum(lst[which(lst %% 2 == 0)]))\n}\n\nprint(solution(c(5, 8, 7, 1)))\n\
    print(solution(c(3, 3, 3, 3, 3)))\nprint(solution(c(30, 13, 24, 321)))\n", "\n\
    \  if (length(lst) == 0) return(0)\n  if (length(lst) == 1) return(lst[1])\n \
    \ return(sum(lst[1::2]))\n}\n", "\n    if (length(lst) == 0) return(0)\n    return(sum(lst[seq_len(length(lst))\
    \ %% 2 == 0]))\n}\n", "\n    sum(lst[seq_len(lst) %% 2 == 0])\n}\n", "\n    if\
    \ (length(lst) == 0) return(0)\n    return(sum(lst[which(lst %% 2 == 0)]))\n}\n",
  "\n  if (length(lst) == 0) return(0)\n  return(sum(lst[which(lst %% 2 == 0)]))\n\
    }\n", "\n  sum(lst[which(lst %% 2 == 0)])\n}\n", "\n    if (length(lst) == 0)\
    \ return(0)\n    lst <- lst[!sapply(lst, is.integer)]\n    if (length(lst) ==\
    \ 0) return(0)\n    return(sum(lst[sapply(lst, function(x) x %% 2 == 0)]))\n}\n",
  "\n  return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n  if (length(lst) == 0) return(0)\n\
    \  return(sum(lst[which(lst %% 2 == 0)]))\n}\n", "\n    if (length(lst) == 0)\
    \ return(0)\n    return(sum(lst[which(lst %% 2 == 0)]))\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

name: HumanEval_86_anti_shuffle
language: r
prompt: "# Write a function that takes a string and returns an ordered version of\
  \ it.\n# Ordered version of string, is a string where all words (separated by space)\n\
  # are replaced by a new word where all the characters arranged in\n# ascending order\
  \ based on ascii value.\n# Note: You should keep the order of words and blank spaces\
  \ in the sentence.\n# For example:\n# >>> anti_shuffle('Hi')\n# 'Hi'\n# >>> anti_shuffle('hello')\n\
  # 'ehllo'\n# >>> anti_shuffle('Hello World!!!')\n# 'Hello !!!Wdlor'\nanti_shuffle\
  \ <- function(s) {"
tests: "test_humaneval <- function() {\ncandidate <- anti_shuffle\n    if(!identical(candidate('Hi'),\
  \ 'Hi')){quit('no', 1)}\n    if(!identical(candidate('hello'), 'ehllo')){quit('no',\
  \ 1)}\n    if(!identical(candidate('number'), 'bemnru')){quit('no', 1)}\n    if(!identical(candidate('abcd'),\
  \ 'abcd')){quit('no', 1)}\n    if(!identical(candidate('Hello World!!!'), 'Hello\
  \ !!!Wdlor')){quit('no', 1)}\n    if(!identical(candidate(''), '')){quit('no', 1)}\n\
  \    if(!identical(candidate('Hi. My name is Mister Robot. How are you?'), '.Hi\
  \ My aemn is Meirst .Rboot How aer ?ouy')){quit('no', 1)}\n}\ntest_humaneval()"
completions: []
stop_tokens:
- "\n#"
- "\n```"

{
  "name": "HumanEval_35_max_element",
  "language": "r",
  "prompt": "# Return maximum element in the list.\n# >>> max_element(c(1, 2, 3))\n# 3\n# >>> max_element(c(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n# 123\nmax_element <- function(l) {",
  "tests": "test_humaneval <- function() {\ncandidate <- max_element\n    if(!identical(candidate(c(1, 2, 3)), 3)){quit('no', 1)}\n    if(!identical(candidate(c(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)), 124)){quit('no', 1)}\n}\ntest_humaneval()",
  "completions": [
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l)\n  }\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  } else if (length(l) == 1) {\n    return(l)\n  } else {\n    return(max(l))\n  }\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l[1])\n  }\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  max(l)\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  return(max(l))\n}\n",
    "\n    if (length(l) == 0) {\n        return(NA)\n    }\n    if (length(l) == 1) {\n        return(l[1])\n    }\n    return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n    return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l[1])\n  }\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  if (length(l) == 2) return(max(l))\n  return(max(l[-1], l[-2]))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  return(max(l))\n}\n",
    "\n    if (length(l) == 0) {\n        return(NA)\n    }\n    if (length(l) == 1) {\n        return(l)\n    }\n    return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  } else {\n    return(max(l))\n  }\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n    return(max(l, na.rm = TRUE))\n}\n",
    "\n    if (length(l) == 0) {\n        return(NA)\n    }\n    return(max(l))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  if (length(l) == 2) return(l[1])\n  if (length(l) == 3) return(max(l))\n  return(max(l[-1]))\n}\n",
    "\n    if (length(l) == 0) return(NA)\n    if (length(l) == 1) return(l[1])\n    return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n    if (length(l) == 0) return(NA)\n    if (length(l) == 1) return(l[1])\n    return(max(l))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n    if (length(l) == 0) {\n        return(NA)\n    } else if (length(l) == 1) {\n        return(l[1])\n    } else {\n        return(max(l))\n    }\n}\n",
    "\n    if (length(l) == 0) {\n        return(NA)\n    } else {\n        return(max(l))\n    }\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  } else {\n    return(max(l))\n  }\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l[1])\n  }\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  if (length(l) == 2) return(max(l))\n  return(max(l[-1], l[-2]))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n    return(max(l, na.rm = TRUE))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l[1])\n  }\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l)\n  }\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  } else {\n    return(max(l))\n  }\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l[1])\n  }\n  return(max(l))\n}\n",
    "\n  if (is.numeric(l)) {\n    return(max(l))\n  } else {\n    return(max(unlist(l)))\n  }\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  return(max(l))\n}\n",
    "\n  if (is.numeric(l)) {\n    return(max(l))\n  } else {\n    return(max(unlist(l)))\n  }\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l[1])\n  }\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l[1])\n  }\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l[1])\n  }\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l[1])\n  }\n  if (length(l) == 2) {\n    return(max(l))\n  }\n  return(max(l[-1]))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  return(max(l))\n}\n",
    "\n    return(max(l))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  max(l)\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l[1])\n  }\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l[1])\n  }\n  return(max(l))\n}\n",
    "\n    if (length(l) == 0) return(NA)\n    return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  } else {\n    return(max(l))\n  }\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n    return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l)\n  }\n  if (length(l) == 2) {\n    return(c(l[1], l[2]))\n  }\n  return(max(l))\n}\n",
    "\n    if (length(l) == 0) {\n        return(NA)\n    }\n    if (length(l) == 1) {\n        return(l[1])\n    }\n    return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  } else {\n    return(max(l))\n  }\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l[1])\n  }\n  return(max(l))\n}\n",
    "\n  if (is.numeric(l)) {\n    return(max(l))\n  } else {\n    return(max(unlist(l)))\n  }\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l[1])\n  }\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  if (length(l) == 2) return(l[1])\n  if (length(l) == 3) return(l[2])\n  return(max(l))\n}\n",
    "\n    if (length(l) == 0) return(NA)\n    if (length(l) == 1) return(l[1])\n    return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l[1])\n  }\n  return(max(l))\n}\n",
    "\n  if (is.numeric(l)) {\n    return(max(l))\n  } else {\n    return(max(unlist(l)))\n  }\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  } else if (length(l) == 1) {\n    return(l[1])\n  } else {\n    return(max(l))\n  }\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l)\n  }\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l[1])\n  }\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n    if (length(l) == 0) {\n        return(NA)\n    }\n    if (length(l) == 1) {\n        return(l[1])\n    }\n    return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  max(l)\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l[1])\n  }\n  return(max(l))\n}\n",
    "\n  if (is.null(l)) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l)\n  }\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  } else {\n    return(max(l))\n  }\n}\n",
    "\n    if (length(l) == 0) {\n        return(NA)\n    }\n    if (length(l) == 1) {\n        return(l)\n    }\n    return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l[1])\n  }\n  return(max(l))\n}\n",
    "\n  if (is.numeric(l)) {\n    return(max(l))\n  } else {\n    return(max(unlist(l)))\n  }\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  if (length(l) == 1) {\n    return(l[1])\n  }\n  return(max(l))\n}\n",
    "\n  return(max(l, na.rm = TRUE))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  } else {\n    return(max(l))\n  }\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  }\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (is.numeric(l)) {\n    return(max(l))\n  } else {\n    return(max(unlist(l)))\n  }\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) return(NA)\n  if (length(l) == 1) return(l[1])\n  return(max(l))\n}\n",
    "\n  return(max(l))\n}\n",
    "\n  if (length(l) == 0) {\n    return(NA)\n  } else {\n    return(max(l))\n  }\n}\n"
  ],
  "stop_tokens": [
    "\n#",
    "\n```"
  ]
}
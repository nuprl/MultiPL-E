name: HumanEval_120_maximum
language: r
prompt: "# Given a vector arr of integers and a positive integer k, return a sorted\
  \ list \n# of length k with the maximum k numbers in arr.\n# Example 1:\n# >>> maximum(c(-3,\
  \ -4, 5), 3)\n# list(-4, -3, 5)\n# Example 2:\n# >>> maximum(c(4, -4, 4), 2)\n#\
  \ list(4, 4)\n# Example 3:\n# >>> maximum(c(-3, 2, 1, 2, -1, -2, 1), 1)\n# list(2)\n\
  # Note:\n# 1. The length of the vector will be in the range of [1, 1000].\n# 2.\
  \ The elements in the vector will be in the range of [-1000, 1000].\n# 3. 0 <= k\
  \ <= len(arr)\nmaximum <- function(arr, k) {"
tests: "test_humaneval <- function() {\ncandidate <- maximum\n    if(!identical(candidate(c(-3,\
  \ -4, 5), 3), list(-4, -3, 5))){quit('no', 1)}\n    if(!identical(candidate(c(4,\
  \ -4, 4), 2), list(4, 4))){quit('no', 1)}\n    if(!identical(candidate(c(-3, 2,\
  \ 1, 2, -1, -2, 1), 1), list(2))){quit('no', 1)}\n    if(!identical(candidate(c(123,\
  \ -123, 20, 0, 1, 2, -3), 3), list(2, 20, 123))){quit('no', 1)}\n    if(!identical(candidate(c(-123,\
  \ 20, 0, 1, 2, -3), 4), list(0, 1, 2, 20))){quit('no', 1)}\n    if(!identical(candidate(c(5,\
  \ 15, 0, 3, -13, -8, 0), 7), list(-13, -8, 0, 0, 3, 5, 15))){quit('no', 1)}\n  \
  \  if(!identical(candidate(c(-1, 0, 2, 5, 3, -10), 2), list(3, 5))){quit('no', 1)}\n\
  \    if(!identical(candidate(c(1, 0, 5, -7), 1), list(5))){quit('no', 1)}\n    if(!identical(candidate(c(4,\
  \ -4), 2), list(-4, 4))){quit('no', 1)}\n    if(!identical(candidate(c(-10, 10),\
  \ 2), list(-10, 10))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, -23,\
  \ 243, -400, 0), 0), list())){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  if (k == 1) {\n\
    \    return(sort(arr))\n  }\n  if (k == 2) {\n    return(sort(arr[1:2]))\n  }\n\
    \  if (k == 3) {\n    return(sort(arr[1:3]))\n  }\n  if (k == 4) {\n    return(sort(arr[1:4]))\n\
    \  }\n  if (k == 5) {\n    return(sort(arr[1:5]))\n  }\n  if (k == 6) {\n    return(sort(arr[1:6]))\n\
    \  }\n  if (k == 7) {\n    return(sort(arr[1:7]))\n  }\n  if (k == 8) {\n    return(sort(arr[1:8]))\n\
    \  }\n  if (k == 9) {\n    return(sort(arr[1:9]))\n  }\n  if (k == 10) {\n   \
    \ return(sort(arr[1:10]))\n  }\n  if (k == 11) {\n    return(sort(arr[1:11]))\n\
    \  }\n  if (k == 12) {\n    return(sort(arr[1:12]))\n  }\n  if (k == 13) {\n \
    \   return(sort(arr[1:13]))\n  }\n  if (k == 14) {\n    return(sort(arr[1:14]))\n\
    \  }\n  if (k == 15) {\n    return(sort(arr[1:15]))\n  }\n  if (k == 16) {\n \
    \   return(sort(arr[1:16]))\n  }\n  if (k == 17) {\n    return(sort(arr[1:17]))\n\
    \  }\n  if (k == 18) {\n    return(sort(arr[1:18]))\n  }\n  if (k == 19) {\n \
    \   return(sort(arr[1:19]))\n  }\n  if (k == 20) {\n    return(sort(arr[1:20]))",
  "\n    if (k > len(arr)) {\n        return(NULL)\n    }\n    if (k == 1) {\n   \
    \     return(sort(arr))\n    }\n    if (k == 2) {\n        return(sort(arr[1:2]))\n\
    \    }\n    if (k == 3) {\n        return(sort(arr[1:3]))\n    }\n    if (k ==\
    \ 4) {\n        return(sort(arr[1:4]))\n    }\n    if (k == 5) {\n        return(sort(arr[1:5]))\n\
    \    }\n    if (k == 6) {\n        return(sort(arr[1:6]))\n    }\n    if (k ==\
    \ 7) {\n        return(sort(arr[1:7]))\n    }\n    if (k == 8) {\n        return(sort(arr[1:8]))\n\
    \    }\n    if (k == 9) {\n        return(sort(arr[1:9]))\n    }\n    if (k ==\
    \ 10) {\n        return(sort(arr[1:10]))\n    }\n    if (k == 11) {\n        return(sort(arr[1:11]))\n\
    \    }\n    if (k == 12) {\n        return(sort(arr[1:12]))\n    }\n    if (k\
    \ == 13) {\n        return(sort(arr[1:13]))\n    }\n    if (k == 14) {\n     \
    \   return(sort(arr[1:14]))\n    }\n    if (k == 15) {\n        return(sort(arr[1:15]))\n\
    \    }\n    if (k == 16) {\n        return(sort(arr[1:16]))\n    }\n    if (k\
    \ == 17) {\n        return(sort(arr[1:17]))\n    }\n    if (k == 18) {\n     \
    \   return(sort(arr[1:18]))\n    }\n    if (k == 19) {\n        return(sort(arr[1:19]))\n\
    \    }\n    if (k == 20) {\n        return(sort(arr[1:20]))", "\n  if (k > length(arr))\
    \ {\n    return(list())\n  }\n  if (k == 1) {\n    return(sort(arr))\n  }\n  if\
    \ (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  if (k == 3) {\n    return(c(arr[1],\
    \ arr[2], arr[3]))\n  }\n  if (k == 4) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4]))\n  }\n  if (k == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5]))\n  }\n  if (k == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6]))\n  }\n  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7]))\n  }\n  if (k == 8) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n  }\n  if (k == 9)\
    \ {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n  }\n  if (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n  }\n  if (k == 11) {\n \
    \   return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9],\
    \ arr[10], arr[11]))\n  }\n  if (k == 12) {\n    return(c(arr[1], arr[2", "\n\
    \  if (k == 1) {\n    return(sort(arr))\n  }\n  if (k > 1) {\n    max <- max(arr[1:k])\n\
    \    return(sort(arr[arr >= max]))\n  }\n}\n", "\n    if (k > length(arr)) {\n\
    \        return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n \
    \   }\n    if (k == 2) {\n        return(sort(arr[1:2]))\n    }\n    if (k ==\
    \ 3) {\n        return(sort(arr[1:3]))\n    }\n    if (k == 4) {\n        return(sort(arr[1:4]))\n\
    \    }\n    if (k == 5) {\n        return(sort(arr[1:5]))\n    }\n    if (k ==\
    \ 6) {\n        return(sort(arr[1:6]))\n    }\n    if (k == 7) {\n        return(sort(arr[1:7]))\n\
    \    }\n    if (k == 8) {\n        return(sort(arr[1:8]))\n    }\n    if (k ==\
    \ 9) {\n        return(sort(arr[1:9]))\n    }\n    if (k == 10) {\n        return(sort(arr[1:10]))\n\
    \    }\n    if (k == 11) {\n        return(sort(arr[1:11]))\n    }\n    if (k\
    \ == 12) {\n        return(sort(arr[1:12]))\n    }\n    if (k == 13) {\n     \
    \   return(sort(arr[1:13]))\n    }\n    if (k == 14) {\n        return(sort(arr[1:14]))\n\
    \    }\n    if (k == 15) {\n        return(sort(arr[1:15]))\n    }\n    if (k\
    \ == 16) {\n        return(sort(arr[1:16]))\n    }\n    if (k == 17) {\n     \
    \   return(sort(arr[1:17]))\n    }\n    if (k == 18) {\n        return(sort(arr[1:18]))\n\
    \    }\n    if (k == 19) {\n        return(sort(arr[1:19]))\n    }\n    if (k\
    \ == 20) {\n        return(sort(arr[1:20]))", "\n    if (k == 1) {\n        return(sort(arr))\n\
    \    }\n    \n    if (k > len(arr)) {\n        return(sort(arr))\n    }\n    \n\
    \    if (k == len(arr)) {\n        return(sort(arr))\n    }\n    \n    if (k ==\
    \ 2) {\n        return(sort(arr))\n    }\n    \n    if (k == 3) {\n        return(sort(arr))\n\
    \    }\n    \n    if (k == 4) {\n        return(sort(arr))\n    }\n    \n    if\
    \ (k == 5) {\n        return(sort(arr))\n    }\n    \n    if (k == 6) {\n    \
    \    return(sort(arr))\n    }\n    \n    if (k == 7) {\n        return(sort(arr))\n\
    \    }\n    \n    if (k == 8) {\n        return(sort(arr))\n    }\n    \n    if\
    \ (k == 9) {\n        return(sort(arr))\n    }\n    \n    if (k == 10) {\n   \
    \     return(sort(arr))\n    }\n    \n    if (k == 11) {\n        return(sort(arr))\n\
    \    }\n    \n    if (k == 12) {\n        return(sort(arr))\n    }\n    \n   \
    \ if (k == 13) {\n        return(sort(arr))\n    }\n    \n    if (k == 14) {\n\
    \        return(sort(arr))\n    }\n    \n    if (k == 15) {\n        return(sort(arr))\n\
    \    }\n    \n    if (k == 16) {\n        return(sort(arr))\n    }\n    \n   \
    \ if (k == 17) {\n        return(sort(arr))\n    }\n    \n    if (k == 18) {\n\
    \        return(sort(arr))\n    }\n    \n    if (k == 19) {\n        return(sort(arr))\n\
    \    }\n    \n    if (k == 20) {\n        return(sort(arr))\n    }\n    \n   \
    \ if (k == 21) {\n        return(sort(arr))\n    }\n    \n    ", "\n    if (k\
    \ > length(arr)) {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n\
    \    }\n    if (k == 2) {\n        return(sort(arr[1:2]))\n    }\n    if (k ==\
    \ 3) {\n        return(sort(arr[1:3]))\n    }\n    if (k == 4) {\n        return(sort(arr[1:4]))\n\
    \    }\n    if (k == 5) {\n        return(sort(arr[1:5]))\n    }\n    if (k ==\
    \ 6) {\n        return(sort(arr[1:6]))\n    }\n    if (k == 7) {\n        return(sort(arr[1:7]))\n\
    \    }\n    if (k == 8) {\n        return(sort(arr[1:8]))\n    }\n    if (k ==\
    \ 9) {\n        return(sort(arr[1:9]))\n    }\n    if (k == 10) {\n        return(sort(arr[1:10]))\n\
    \    }\n    if (k == 11) {\n        return(sort(arr[1:11]))\n    }\n    if (k\
    \ == 12) {\n        return(sort(arr[1:12]))\n    }\n    if (k == 13) {\n     \
    \   return(sort(arr[1:13]))\n    }\n    if (k == 14) {\n        return(sort(arr[1:14]))\n\
    \    }\n    if (k == 15) {\n        return(sort(arr[1:15]))\n    }\n    if (k\
    \ == 16) {\n        return(sort(arr[1:16]))\n    }\n    if (k == 17) {\n     \
    \   return(sort(arr[1:17]))\n    }\n    if (k == 18) {\n        return(sort(arr[1:18]))\n\
    \    }\n    if (k == 19) {\n        return(sort(arr[1:19]))\n    }\n    if (k\
    \ == 20) {\n        return(sort(arr[1:20]))", "\n  if (k > length(arr)) {\n  \
    \  return(NULL)\n  }\n  \n  arr <- arr[order(arr)]\n  \n  if (k == 1) {\n    return(arr[1])\n\
    \  }\n  \n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  \n  if (k ==\
    \ 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n  \n  if (k == 4) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4]))\n  }\n  \n  if (k == 5) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n  }\n  \n  if (k == 6) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6]))\n  }\n  \n  if (k == 7) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n  }\n  \n  if (k == 8) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n\
    \  }\n  \n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9]))\n  }\n  \n  if (k == 10) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n\
    \  }\n  \n  if (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9],", "\n  if (k > length(arr)) {\n    return(NULL)\n\
    \  }\n  if (k == 1) {\n    return(sort(arr))\n  }\n  if (k == 2) {\n    return(c(arr[1],\
    \ arr[2]))\n  }\n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n\
    \  if (k == 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  if (k\
    \ == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  }\n  if (k\
    \ == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  }\n\
    \  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7]))\n  }\n  if (k == 8) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8]))\n  }\n  if (k == 9) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  }\n  if\
    \ (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10]))\n  }\n  if (k == 11) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \  }\n  if (k == 12) {\n    return(c(arr[1], arr[2", "\n    if (k > length(arr))\
    \ {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n\
    \    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k\
    \ == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n    if (k == 4) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4]))\n    }\n    if (k == 5) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n    }\n    if (k ==\
    \ 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  \
    \  }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k == 9) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n    if (k\
    \ == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n        return(c(arr[1],\
    \ arr[2", "\n  arr <- arr[order(arr)]\n  return(arr[1:k])\n}\n", "\n  if (k >\
    \ len(arr)) {\n    return(list())\n  }\n  \n  if (k == 1) {\n    return(sort(arr))\n\
    \  }\n  \n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  \n  if (k ==\
    \ 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n  \n  if (k == 4) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4]))\n  }\n  \n  if (k == 5) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n  }\n  \n  if (k == 6) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6]))\n  }\n  \n  if (k == 7) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n  }\n  \n  if (k == 8) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n\
    \  }\n  \n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9]))\n  }\n  \n  if (k == 10) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n\
    \  }\n  \n  if (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n  }", "\n  if (k > length(arr))\
    \ {\n    return(NULL)\n  }\n  if (k == 1) {\n    return(sort(arr))\n  }\n  if\
    \ (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  if (k == 3) {\n    return(c(arr[1],\
    \ arr[2], arr[3]))\n  }\n  if (k == 4) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4]))\n  }\n  if (k == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5]))\n  }\n  if (k == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6]))\n  }\n  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7]))\n  }\n  if (k == 8) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n  }\n  if (k == 9)\
    \ {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n  }\n  if (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n  }\n  if (k == 11) {\n \
    \   return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9],\
    \ arr[10], arr[11]))\n  }\n  if (k == 12) {\n    return(c(arr[1], arr[2", "\n\
    \    if (k > length(arr)) {\n        return(NULL)\n    }\n    if (k == 1) {\n\
    \        return(sort(arr))\n    }\n    if (k == 2) {\n        return(sort(arr[1:2]))\n\
    \    }\n    if (k == 3) {\n        return(sort(arr[1:3]))\n    }\n    if (k ==\
    \ 4) {\n        return(sort(arr[1:4]))\n    }\n    if (k == 5) {\n        return(sort(arr[1:5]))\n\
    \    }\n    if (k == 6) {\n        return(sort(arr[1:6]))\n    }\n    if (k ==\
    \ 7) {\n        return(sort(arr[1:7]))\n    }\n    if (k == 8) {\n        return(sort(arr[1:8]))\n\
    \    }\n    if (k == 9) {\n        return(sort(arr[1:9]))\n    }\n    if (k ==\
    \ 10) {\n        return(sort(arr[1:10]))\n    }\n    if (k == 11) {\n        return(sort(arr[1:11]))\n\
    \    }\n    if (k == 12) {\n        return(sort(arr[1:12]))\n    }\n    if (k\
    \ == 13) {\n        return(sort(arr[1:13]))\n    }\n    if (k == 14) {\n     \
    \   return(sort(arr[1:14]))\n    }\n    if (k == 15) {\n        return(sort(arr[1:15]))\n\
    \    }\n    if (k == 16) {\n        return(sort(arr[1:16]))\n    }\n    if (k\
    \ == 17) {\n        return(sort(arr[1:17]))\n    }\n    if (k == 18) {\n     \
    \   return(sort(arr[1:18]))\n    }\n    if (k == 19) {\n        return(sort(arr[1:19]))\n\
    \    }\n    if (k == 20) {\n        return(sort(arr[1:20]))", "\n    if (k > length(arr))\
    \ {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n\
    \    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k\
    \ == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n    if (k == 4) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4]))\n    }\n    if (k == 5) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n    }\n    if (k ==\
    \ 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  \
    \  }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k == 9) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n    if (k\
    \ == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n        return(c(arr[1],\
    \ arr[2", "\n    if (k == 1) {\n        return(sort(arr))\n    }\n    if (k >\
    \ len(arr)) {\n        return(sort(arr))\n    }\n    if (k == len(arr)) {\n  \
    \      return(sort(arr))\n    }\n    if (k == 0) {\n        return(sort(arr))\n\
    \    }\n    if (k == 2) {\n        return(sort(arr))\n    }\n    if (k == 3) {\n\
    \        return(sort(arr))\n    }\n    if (k == 4) {\n        return(sort(arr))\n\
    \    }\n    if (k == 5) {\n        return(sort(arr))\n    }\n    if (k == 6) {\n\
    \        return(sort(arr))\n    }\n    if (k == 7) {\n        return(sort(arr))\n\
    \    }\n    if (k == 8) {\n        return(sort(arr))\n    }\n    if (k == 9) {\n\
    \        return(sort(arr))\n    }\n    if (k == 10) {\n        return(sort(arr))\n\
    \    }\n    if (k == 11) {\n        return(sort(arr))\n    }\n    if (k == 12)\
    \ {\n        return(sort(arr))\n    }\n    if (k == 13) {\n        return(sort(arr))\n\
    \    }\n    if (k == 14) {\n        return(sort(arr))\n    }\n    if (k == 15)\
    \ {\n        return(sort(arr))\n    }\n    if (k == 16) {\n        return(sort(arr))\n\
    \    }\n    if (k == 17) {\n        return(sort(arr))\n    }\n    if (k == 18)\
    \ {\n        return(sort(arr))\n    }\n    if (k == 19) {\n        return(sort(arr))\n\
    \    }\n    if (k == 20) {\n        return(sort(arr))\n    }\n    if (k == 21)\
    \ {\n        return(sort(arr))\n    }\n    if (k == 22) {\n        return(sort(arr))\n\
    \    }\n    if (k == 23)", "\n    if (k > length(arr)) {\n        return(NULL)\n\
    \    }\n    if (k == 1) {\n        return(arr[1])\n    }\n    if (k == 2) {\n\
    \        return(c(arr[1], arr[2]))\n    }\n    if (k == 3) {\n        return(c(arr[1],\
    \ arr[2], arr[3]))\n    }\n    if (k == 4) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4]))\n    }\n    if (k == 5) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n    }\n    if (k == 6) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6]))\n    }\n    if (k == 7) {\n       \
    \ return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n    }\n \
    \   if (k == 8) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8]))\n    }\n    if (k == 9) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n    }\n    if (k ==\
    \ 10) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10]))\n    }\n    if (k == 11) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \    }\n    if (k == 12) {\n        return(c(arr[1], arr[2", "\n    if (k > len(arr))\
    \ {\n        return(list())\n    }\n    if (k == 1) {\n        return(sort(arr))\n\
    \    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k\
    \ == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n    if (k == 4) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4]))\n    }\n    if (k == 5) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n    }\n    if (k ==\
    \ 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  \
    \  }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k == 9) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n    if (k\
    \ == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n        return(c(arr[1],\
    \ arr[2", "\n    if (k > length(arr)) {\n        return(NULL)\n    }\n    if (k\
    \ == 1) {\n        return(sort(arr))\n    }\n    if (k == 2) {\n        return(c(arr[1],\
    \ arr[2]))\n    }\n    if (k == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n\
    \    }\n    if (k == 4) {\n        return(c(arr[1], arr[2], arr[3], arr[4]))\n\
    \    }\n    if (k == 5) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n\
    \    }\n    if (k == 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6]))\n    }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k ==\
    \ 9) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n \
    \   if (k == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n    \
    \    return(c(arr[1], arr[2", "\n  if (k == 1) {\n    return(sort(arr))\n  }\n\
    \  if (k > len(arr)) {\n    return(sort(arr))\n  }\n  if (k == len(arr)) {\n \
    \   return(sort(arr))\n  }\n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n \
    \ }\n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n  if (k == 4)\
    \ {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  if (k == 5) {\n   \
    \ return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  }\n  if (k == 6) {\n  \
    \  return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  }\n  if (k ==\
    \ 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n\
    \  }\n  if (k == 8) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8]))\n  }\n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  }\n  if (k == 10) {\n  \
    \  return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9],\
    \ arr[10]))\n  }\n  if (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n", "\n    if (k\
    \ > length(arr)) {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n\
    \    }\n    if (k == 2) {\n        return(sort(arr[1:2]))\n    }\n    if (k ==\
    \ 3) {\n        return(sort(arr[1:3]))\n    }\n    if (k == 4) {\n        return(sort(arr[1:4]))\n\
    \    }\n    if (k == 5) {\n        return(sort(arr[1:5]))\n    }\n    if (k ==\
    \ 6) {\n        return(sort(arr[1:6]))\n    }\n    if (k == 7) {\n        return(sort(arr[1:7]))\n\
    \    }\n    if (k == 8) {\n        return(sort(arr[1:8]))\n    }\n    if (k ==\
    \ 9) {\n        return(sort(arr[1:9]))\n    }\n    if (k == 10) {\n        return(sort(arr[1:10]))\n\
    \    }\n    if (k == 11) {\n        return(sort(arr[1:11]))\n    }\n    if (k\
    \ == 12) {\n        return(sort(arr[1:12]))\n    }\n    if (k == 13) {\n     \
    \   return(sort(arr[1:13]))\n    }\n    if (k == 14) {\n        return(sort(arr[1:14]))\n\
    \    }\n    if (k == 15) {\n        return(sort(arr[1:15]))\n    }\n    if (k\
    \ == 16) {\n        return(sort(arr[1:16]))\n    }\n    if (k == 17) {\n     \
    \   return(sort(arr[1:17]))\n    }\n    if (k == 18) {\n        return(sort(arr[1:18]))\n\
    \    }\n    if (k == 19) {\n        return(sort(arr[1:19]))\n    }\n    if (k\
    \ == 20) {\n        return(sort(arr[1:20]))", "\n  if (k > len(arr)) {\n    return(NULL)\n\
    \  }\n  if (k == 1) {\n    return(arr[1])\n  }\n  if (k == 2) {\n    return(c(arr[1],\
    \ arr[2]))\n  }\n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n\
    \  if (k == 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  if (k\
    \ == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  }\n  if (k\
    \ == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  }\n\
    \  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7]))\n  }\n  if (k == 8) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8]))\n  }\n  if (k == 9) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  }\n  if\
    \ (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10]))\n  }\n  if (k == 11) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \  }\n  if (k == 12) {\n    return(c(arr[1], arr[2", "\n  if (k > length(arr))\
    \ {\n    return(NULL)\n  }\n  \n  arr <- arr[order(arr)]\n  \n  if (k == 1) {\n\
    \    return(arr[1])\n  }\n  \n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n\
    \  }\n  \n  return(c(arr[1], arr[2], arr[k-1]))\n}\n\nprint(maximum(c(-3, -4,\
    \ 5), 3))\nprint(maximum(c(4, -4, 4), 2))\nprint(maximum(c(-3, 2, 1, 2, -1, -2,\
    \ 1), 1))\n", "\n    if (k == 1) {\n        return(sort(arr))\n    }\n    if (k\
    \ > len(arr)) {\n        return(sort(arr))\n    }\n    if (k == len(arr)) {\n\
    \        return(sort(arr))\n    }\n    if (k == 2) {\n        return(sort(arr[1:k]))\n\
    \    }\n    if (k == 3) {\n        return(sort(arr[1:k]))\n    }\n    if (k ==\
    \ 4) {\n        return(sort(arr[1:k]))\n    }\n    if (k == 5) {\n        return(sort(arr[1:k]))\n\
    \    }\n    if (k == 6) {\n        return(sort(arr[1:k]))\n    }\n    if (k ==\
    \ 7) {\n        return(sort(arr[1:k]))\n    }\n    if (k == 8) {\n        return(sort(arr[1:k]))\n\
    \    }\n    if (k == 9) {\n        return(sort(arr[1:k]))\n    }\n    if (k ==\
    \ 10) {\n        return(sort(arr[1:k]))\n    }\n    if (k == 11) {\n        return(sort(arr[1:k]))\n\
    \    }\n    if (k == 12) {\n        return(sort(arr[1:k]))\n    }\n    if (k ==\
    \ 13) {\n        return(sort(arr[1:k]))\n    }\n    if (k == 14) {\n        return(sort(arr[1:k]))\n\
    \    }\n    if (k == 15) {\n        return(sort(arr[1:k]))\n    }\n    if (k ==\
    \ 16) {\n        return(sort(arr[1:k]))\n    }\n    if (k == 17) {\n        return(sort(arr[1:k]))\n\
    \    }\n    if (k == 18) {\n        return(sort(arr[1:k]))\n    }\n    if (k ==\
    \ 19) {\n        return(sort(arr[1:k]))\n", "\n    if (k > length(arr)) {\n  \
    \      return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n   \
    \ }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k ==\
    \ 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n    if (k == 4) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4]))\n    }\n    if (k == 5) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n    }\n    if (k ==\
    \ 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  \
    \  }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k == 9) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n    if (k\
    \ == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n        return(c(arr[1],\
    \ arr[2", "\n    if (k > len(arr)) {\n        return(list())\n    }\n    if (k\
    \ == 1) {\n        return(sort(arr))\n    }\n    if (k == 2) {\n        return(sort(arr[1:2]))\n\
    \    }\n    if (k == 3) {\n        return(sort(arr[1:3]))\n    }\n    if (k ==\
    \ 4) {\n        return(sort(arr[1:4]))\n    }\n    if (k == 5) {\n        return(sort(arr[1:5]))\n\
    \    }\n    if (k == 6) {\n        return(sort(arr[1:6]))\n    }\n    if (k ==\
    \ 7) {\n        return(sort(arr[1:7]))\n    }\n    if (k == 8) {\n        return(sort(arr[1:8]))\n\
    \    }\n    if (k == 9) {\n        return(sort(arr[1:9]))\n    }\n    if (k ==\
    \ 10) {\n        return(sort(arr[1:10]))\n    }\n    if (k == 11) {\n        return(sort(arr[1:11]))\n\
    \    }\n    if (k == 12) {\n        return(sort(arr[1:12]))\n    }\n    if (k\
    \ == 13) {\n        return(sort(arr[1:13]))\n    }\n    if (k == 14) {\n     \
    \   return(sort(arr[1:14]))\n    }\n    if (k == 15) {\n        return(sort(arr[1:15]))\n\
    \    }\n    if (k == 16) {\n        return(sort(arr[1:16]))\n    }\n    if (k\
    \ == 17) {\n        return(sort(arr[1:17]))\n    }\n    if (k == 18) {\n     \
    \   return(sort(arr[1:18]))\n    }\n    if (k == 19) {\n        return(sort(arr[1:19]))\n\
    \    }\n    if (k == 20) {\n        return(sort(arr[1:20]))", "\n  if (k > length(arr))\
    \ {\n    return(NULL)\n  }\n  \n  if (k == 1) {\n    return(sort(arr))\n  }\n\
    \  \n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  \n  if (k == 3) {\n\
    \    return(c(arr[1], arr[2], arr[3]))\n  }\n  \n  if (k == 4) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4]))\n  }\n  \n  if (k == 5) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n  }\n  \n  if (k == 6) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6]))\n  }\n  \n  if (k == 7) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n  }\n  \n  if (k == 8) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n\
    \  }\n  \n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9]))\n  }\n  \n  if (k == 10) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n\
    \  }\n  \n  if (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n  }", "\n  if (k > length(arr))\
    \ {\n    return(list())\n  }\n  if (k == 1) {\n    return(sort(arr))\n  }\n  if\
    \ (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  if (k == 3) {\n    return(c(arr[1],\
    \ arr[2], arr[3]))\n  }\n  if (k == 4) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4]))\n  }\n  if (k == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5]))\n  }\n  if (k == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6]))\n  }\n  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7]))\n  }\n  if (k == 8) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n  }\n  if (k == 9)\
    \ {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n  }\n  if (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n  }\n  if (k == 11) {\n \
    \   return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9],\
    \ arr[10], arr[11]))\n  }\n  if (k == 12) {\n    return(c(arr[1], arr[2", "\n\
    \  if (k > length(arr)) {\n    return(NULL)\n  }\n  if (k == 1) {\n    return(sort(arr))\n\
    \  }\n  if (k == 2) {\n    return(sort(arr[1:2]))\n  }\n  if (k == 3) {\n    return(sort(arr[1:3]))\n\
    \  }\n  if (k == 4) {\n    return(sort(arr[1:4]))\n  }\n  if (k == 5) {\n    return(sort(arr[1:5]))\n\
    \  }\n  if (k == 6) {\n    return(sort(arr[1:6]))\n  }\n  if (k == 7) {\n    return(sort(arr[1:7]))\n\
    \  }\n  if (k == 8) {\n    return(sort(arr[1:8]))\n  }\n  if (k == 9) {\n    return(sort(arr[1:9]))\n\
    \  }\n  if (k == 10) {\n    return(sort(arr[1:10]))\n  }\n  if (k == 11) {\n \
    \   return(sort(arr[1:11]))\n  }\n  if (k == 12) {\n    return(sort(arr[1:12]))\n\
    \  }\n  if (k == 13) {\n    return(sort(arr[1:13]))\n  }\n  if (k == 14) {\n \
    \   return(sort(arr[1:14]))\n  }\n  if (k == 15) {\n    return(sort(arr[1:15]))\n\
    \  }\n  if (k == 16) {\n    return(sort(arr[1:16]))\n  }\n  if (k == 17) {\n \
    \   return(sort(arr[1:17]))\n  }\n  if (k == 18) {\n    return(sort(arr[1:18]))\n\
    \  }\n  if (k == 19) {\n    return(sort(arr[1:19]))\n  }\n  if (k == 20) {\n \
    \   return(sort(arr[1:20]))", "\n    if (k > length(arr)) {\n        return(NULL)\n\
    \    }\n    if (k == 1) {\n        return(sort(arr))\n    }\n    if (k == 2) {\n\
    \        return(sort(arr[1:2]))\n    }\n    if (k == 3) {\n        return(sort(arr[1:3]))\n\
    \    }\n    if (k == 4) {\n        return(sort(arr[1:4]))\n    }\n    if (k ==\
    \ 5) {\n        return(sort(arr[1:5]))\n    }\n    if (k == 6) {\n        return(sort(arr[1:6]))\n\
    \    }\n    if (k == 7) {\n        return(sort(arr[1:7]))\n    }\n    if (k ==\
    \ 8) {\n        return(sort(arr[1:8]))\n    }\n    if (k == 9) {\n        return(sort(arr[1:9]))\n\
    \    }\n    if (k == 10) {\n        return(sort(arr[1:10]))\n    }\n    if (k\
    \ == 11) {\n        return(sort(arr[1:11]))\n    }\n    if (k == 12) {\n     \
    \   return(sort(arr[1:12]))\n    }\n    if (k == 13) {\n        return(sort(arr[1:13]))\n\
    \    }\n    if (k == 14) {\n        return(sort(arr[1:14]))\n    }\n    if (k\
    \ == 15) {\n        return(sort(arr[1:15]))\n    }\n    if (k == 16) {\n     \
    \   return(sort(arr[1:16]))\n    }\n    if (k == 17) {\n        return(sort(arr[1:17]))\n\
    \    }\n    if (k == 18) {\n        return(sort(arr[1:18]))\n    }\n    if (k\
    \ == 19) {\n        return(sort(arr[1:19]))\n    }\n    if (k == 20) {\n     \
    \   return(sort(arr[1:20]))", "\n    if (k > len(arr)) {\n        return(NULL)\n\
    \    }\n    if (k == 1) {\n        return(arr[1])\n    }\n    if (k == 2) {\n\
    \        return(c(arr[1], arr[2]))\n    }\n    if (k == len(arr)) {\n        return(arr)\n\
    \    }\n    if (arr[k] > arr[k - 1]) {\n        return(arr[k])\n    }\n    return(arr[k\
    \ - 1])\n}\n", "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  \n  if (k\
    \ == 1) {\n    return(sort(arr))\n  }\n  \n  if (k == 2) {\n    return(sort(arr[1:2]))\n\
    \  }\n  \n  if (k == 3) {\n    return(sort(arr[1:3]))\n  }\n  \n  if (k == 4)\
    \ {\n    return(sort(arr[1:4]))\n  }\n  \n  if (k == 5) {\n    return(sort(arr[1:5]))\n\
    \  }\n  \n  if (k == 6) {\n    return(sort(arr[1:6]))\n  }\n  \n  if (k == 7)\
    \ {\n    return(sort(arr[1:7]))\n  }\n  \n  if (k == 8) {\n    return(sort(arr[1:8]))\n\
    \  }\n  \n  if (k == 9) {\n    return(sort(arr[1:9]))\n  }\n  \n  if (k == 10)\
    \ {\n    return(sort(arr[1:10]))\n  }\n  \n  if (k == 11) {\n    return(sort(arr[1:11]))\n\
    \  }\n  \n  if (k == 12) {\n    return(sort(arr[1:12]))\n  }\n  \n  if (k == 13)\
    \ {\n    return(sort(arr[1:13]))\n  }\n  \n  if (k == 14) {\n    return(sort(arr[1:14]))\n\
    \  }\n  \n  if (k == 15) {\n    return(sort(arr[1:15]))\n  }\n  \n  if (k == 16)\
    \ {\n    return(sort(arr[1:16]))\n  }\n  \n  if (k == 17) {\n    return(sort(arr[1:17]))\n\
    \  }\n  \n  if (k == 18) {\n    return(sort(arr[1:18]))\n  }\n  \n  if (k == 19)\
    \ {", "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  \n  if (k == 1) {\n\
    \    return(sort(arr))\n  }\n  \n  if (k == 2) {\n    return(sort(arr)[-1:1])\n\
    \  }\n  \n  if (k == 3) {\n    return(sort(arr)[-1:2])\n  }\n  \n  if (k == 4)\
    \ {\n    return(sort(arr)[-1:3])\n  }\n  \n  if (k == 5) {\n    return(sort(arr)[-1:4])\n\
    \  }\n  \n  if (k == 6) {\n    return(sort(arr)[-1:5])\n  }\n  \n  if (k == 7)\
    \ {\n    return(sort(arr)[-1:6])\n  }\n  \n  if (k == 8) {\n    return(sort(arr)[-1:7])\n\
    \  }\n  \n  if (k == 9) {\n    return(sort(arr)[-1:8])\n  }\n  \n  if (k == 10)\
    \ {\n    return(sort(arr)[-1:9])\n  }\n  \n  if (k == 11) {\n    return(sort(arr)[-1:10])\n\
    \  }\n  \n  if (k == 12) {\n    return(sort(arr)[-1:11])\n  }\n  \n  if (k ==\
    \ 13) {\n    return(sort(arr)[-1:12])\n  }\n  \n  if (k == 14) {\n    return(sort(arr)[-1:13])\n\
    \  }\n  \n  if (k == 15) {\n    return(sort(arr)[-1:14])\n  }\n  \n  if (k ==\
    \ 16) {\n    return(sort(arr)[-1:15])\n  }\n  \n  if (k == 17) {\n    return(sort(arr)[-1:16])\n\
    \  }\n  \n  if (k == 18) {\n    return(sort(arr)[-1:17])\n  }\n  \n  if (k ==\
    \ 19) {", "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  \n  if (k == 1)\
    \ {\n    return(sort(arr))\n  }\n  \n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n\
    \  }\n  \n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n  \n  if\
    \ (k == 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  \n  if (k\
    \ == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  }\n  \n  if\
    \ (k == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n\
    \  }\n  \n  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n  }\n  \n  if (k == 8) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8]))\n  }\n  \n  if (k == 9) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  }\n  \n\
    \  if (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9], arr[10]))\n  }\n  \n  if (k == 11) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \  }", "\n    if (k > length(arr)) {\n        return(NULL)\n    }\n    if (k ==\
    \ 1) {\n        return(arr[1])\n    }\n    if (k == 2) {\n        return(c(arr[1],\
    \ arr[2]))\n    }\n    if (k == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n\
    \    }\n    if (k == 4) {\n        return(c(arr[1], arr[2], arr[3], arr[4]))\n\
    \    }\n    if (k == 5) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n\
    \    }\n    if (k == 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6]))\n    }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k ==\
    \ 9) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n \
    \   if (k == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n    \
    \    return(c(arr[1], arr[2", "\n  if (k == 1) {\n    return(sort(arr))\n  }\n\
    \  \n  if (k > len(arr)) {\n    return(c())\n  }\n  \n  max <- arr[1]\n  for (i\
    \ in 2:k) {\n    if (arr[i] > max) {\n      max <- arr[i]\n    }\n  }\n  \n  return(sort(arr[1:k]))\n\
    }\n", "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  if (k == 1) {\n  \
    \  return(arr[1])\n  }\n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n\
    \  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n  if (k == 4) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  if (k == 5) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5]))\n  }\n  if (k == 6) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6]))\n  }\n  if (k == 7) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n  }\n  if (k == 8) {\n   \
    \ return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n\
    \  }\n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9]))\n  }\n  if (k == 10) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n  }\n  if\
    \ (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n  }\n  if (k == 12) {\n    return(c(arr[1],\
    \ arr[2", "\n    if (k > length(arr)) {\n        return(NULL)\n    }\n    if (k\
    \ == 1) {\n        return(sort(arr))\n    }\n    if (k == 2) {\n        return(sort(arr[1:2]))\n\
    \    }\n    if (k == 3) {\n        return(sort(arr[1:3]))\n    }\n    if (k ==\
    \ 4) {\n        return(sort(arr[1:4]))\n    }\n    if (k == 5) {\n        return(sort(arr[1:5]))\n\
    \    }\n    if (k == 6) {\n        return(sort(arr[1:6]))\n    }\n    if (k ==\
    \ 7) {\n        return(sort(arr[1:7]))\n    }\n    if (k == 8) {\n        return(sort(arr[1:8]))\n\
    \    }\n    if (k == 9) {\n        return(sort(arr[1:9]))\n    }\n    if (k ==\
    \ 10) {\n        return(sort(arr[1:10]))\n    }\n    if (k == 11) {\n        return(sort(arr[1:11]))\n\
    \    }\n    if (k == 12) {\n        return(sort(arr[1:12]))\n    }\n    if (k\
    \ == 13) {\n        return(sort(arr[1:13]))\n    }\n    if (k == 14) {\n     \
    \   return(sort(arr[1:14]))\n    }\n    if (k == 15) {\n        return(sort(arr[1:15]))\n\
    \    }\n    if (k == 16) {\n        return(sort(arr[1:16]))\n    }\n    if (k\
    \ == 17) {\n        return(sort(arr[1:17]))\n    }\n    if (k == 18) {\n     \
    \   return(sort(arr[1:18]))\n    }\n    if (k == 19) {\n        return(sort(arr[1:19]))\n\
    \    }\n    if (k == 20) {\n        return(sort(arr[1:20]))", "\n    if (k > length(arr))\
    \ {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n\
    \    }\n    if (k == 2) {\n        return(sort(arr[1:2]))\n    }\n    if (k ==\
    \ 3) {\n        return(sort(arr[1:3]))\n    }\n    if (k == 4) {\n        return(sort(arr[1:4]))\n\
    \    }\n    if (k == 5) {\n        return(sort(arr[1:5]))\n    }\n    if (k ==\
    \ 6) {\n        return(sort(arr[1:6]))\n    }\n    if (k == 7) {\n        return(sort(arr[1:7]))\n\
    \    }\n    if (k == 8) {\n        return(sort(arr[1:8]))\n    }\n    if (k ==\
    \ 9) {\n        return(sort(arr[1:9]))\n    }\n    if (k == 10) {\n        return(sort(arr[1:10]))\n\
    \    }\n    if (k == 11) {\n        return(sort(arr[1:11]))\n    }\n    if (k\
    \ == 12) {\n        return(sort(arr[1:12]))\n    }\n    if (k == 13) {\n     \
    \   return(sort(arr[1:13]))\n    }\n    if (k == 14) {\n        return(sort(arr[1:14]))\n\
    \    }\n    if (k == 15) {\n        return(sort(arr[1:15]))\n    }\n    if (k\
    \ == 16) {\n        return(sort(arr[1:16]))\n    }\n    if (k == 17) {\n     \
    \   return(sort(arr[1:17]))\n    }\n    if (k == 18) {\n        return(sort(arr[1:18]))\n\
    \    }\n    if (k == 19) {\n        return(sort(arr[1:19]))\n    }\n    if (k\
    \ == 20) {\n        return(sort(arr[1:20]))", "\n  if (k > length(arr)) {\n  \
    \  return(NULL)\n  }\n  \n  if (k == 1) {\n    return(arr[1])\n  }\n  \n  max\
    \ <- arr[1]\n  for (i in 2:k) {\n    if (arr[i] > max) {\n      max <- arr[i]\n\
    \    }\n  }\n  \n  return(arr[1:k])\n}\n\nprint(maximum(c(-3, -4, 5), 3))\nprint(maximum(c(4,\
    \ -4, 4), 2))\nprint(maximum(c(-3, 2, 1, 2, -1, -2, 1), 1))\n", "\n  if (k > length(arr))\
    \ {\n    return(NULL)\n  }\n  \n  if (k == 1) {\n    return(sort(arr))\n  }\n\
    \  \n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  \n  if (k == 3) {\n\
    \    return(c(arr[1], arr[2], arr[3]))\n  }\n  \n  if (k == 4) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4]))\n  }\n  \n  if (k == 5) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n  }\n  \n  if (k == 6) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6]))\n  }\n  \n  if (k == 7) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n  }\n  \n  if (k == 8) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n\
    \  }\n  \n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9]))\n  }\n  \n  if (k == 10) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n\
    \  }\n  \n  if (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n  }", "\n    if (k > len(arr))\
    \ {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n\
    \    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k\
    \ == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n    if (k == 4) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4]))\n    }\n    if (k == 5) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n    }\n    if (k ==\
    \ 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  \
    \  }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k == 9) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n    if (k\
    \ == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n        return(c(arr[1],\
    \ arr[2", "\n  if (k > len(arr)) {\n    return(NULL)\n  }\n  \n  if (k == 1) {\n\
    \    return(sort(arr))\n  }\n  \n  if (k == 2) {\n    return(sort(arr[1:2]))\n\
    \  }\n  \n  if (k == 3) {\n    return(sort(arr[1:3]))\n  }\n  \n  if (k == 4)\
    \ {\n    return(sort(arr[1:4]))\n  }\n  \n  if (k == 5) {\n    return(sort(arr[1:5]))\n\
    \  }\n  \n  if (k == 6) {\n    return(sort(arr[1:6]))\n  }\n  \n  if (k == 7)\
    \ {\n    return(sort(arr[1:7]))\n  }\n  \n  if (k == 8) {\n    return(sort(arr[1:8]))\n\
    \  }\n  \n  if (k == 9) {\n    return(sort(arr[1:9]))\n  }\n  \n  if (k == 10)\
    \ {\n    return(sort(arr[1:10]))\n  }\n  \n  if (k == 11) {\n    return(sort(arr[1:11]))\n\
    \  }\n  \n  if (k == 12) {\n    return(sort(arr[1:12]))\n  }\n  \n  if (k == 13)\
    \ {\n    return(sort(arr[1:13]))\n  }\n  \n  if (k == 14) {\n    return(sort(arr[1:14]))\n\
    \  }\n  \n  if (k == 15) {\n    return(sort(arr[1:15]))\n  }\n  \n  if (k == 16)\
    \ {\n    return(sort(arr[1:16]))\n  }\n  \n  if (k == 17) {\n    return(sort(arr[1:17]))\n\
    \  }\n  \n  if (k == 18) {\n    return(sort(arr[1:18]))\n  }\n  \n  if (k == 19)\
    \ {", "\n  arr <- arr[order(arr)]\n  if (k > length(arr)) {\n    return(arr)\n\
    \  }\n  return(arr[1:k])\n}\n", "\n    if (k > length(arr)) {\n        return(NULL)\n\
    \    }\n    if (k == 1) {\n        return(sort(arr))\n    }\n    if (k == 2) {\n\
    \        return(sort(arr[1:2]))\n    }\n    if (k == 3) {\n        return(sort(arr[1:3]))\n\
    \    }\n    if (k == 4) {\n        return(sort(arr[1:4]))\n    }\n    if (k ==\
    \ 5) {\n        return(sort(arr[1:5]))\n    }\n    if (k == 6) {\n        return(sort(arr[1:6]))\n\
    \    }\n    if (k == 7) {\n        return(sort(arr[1:7]))\n    }\n    if (k ==\
    \ 8) {\n        return(sort(arr[1:8]))\n    }\n    if (k == 9) {\n        return(sort(arr[1:9]))\n\
    \    }\n    if (k == 10) {\n        return(sort(arr[1:10]))\n    }\n    if (k\
    \ == 11) {\n        return(sort(arr[1:11]))\n    }\n    if (k == 12) {\n     \
    \   return(sort(arr[1:12]))\n    }\n    if (k == 13) {\n        return(sort(arr[1:13]))\n\
    \    }\n    if (k == 14) {\n        return(sort(arr[1:14]))\n    }\n    if (k\
    \ == 15) {\n        return(sort(arr[1:15]))\n    }\n    if (k == 16) {\n     \
    \   return(sort(arr[1:16]))\n    }\n    if (k == 17) {\n        return(sort(arr[1:17]))\n\
    \    }\n    if (k == 18) {\n        return(sort(arr[1:18]))\n    }\n    if (k\
    \ == 19) {\n        return(sort(arr[1:19]))\n    }\n    if (k == 20) {\n     \
    \   return(sort(arr[1:20]))", "\n  if (k > length(arr)) {\n    return(NULL)\n\
    \  }\n  \n  if (k == 1) {\n    return(sort(arr))\n  }\n  \n  if (k == 2) {\n \
    \   return(sort(arr[-1:1]))\n  }\n  \n  if (k == 3) {\n    return(sort(arr[-2:1]))\n\
    \  }\n  \n  if (k == 4) {\n    return(sort(arr[-3:1]))\n  }\n  \n  if (k == 5)\
    \ {\n    return(sort(arr[-4:1]))\n  }\n  \n  if (k == 6) {\n    return(sort(arr[-5:1]))\n\
    \  }\n  \n  if (k == 7) {\n    return(sort(arr[-6:1]))\n  }\n  \n  if (k == 8)\
    \ {\n    return(sort(arr[-7:1]))\n  }\n  \n  if (k == 9) {\n    return(sort(arr[-8:1]))\n\
    \  }\n  \n  if (k == 10) {\n    return(sort(arr[-9:1]))\n  }\n  \n  if (k == 11)\
    \ {\n    return(sort(arr[-10:1]))\n  }\n  \n  if (k == 12) {\n    return(sort(arr[-11:1]))\n\
    \  }\n  \n  if (k == 13) {\n    return(sort(arr[-12:1]))\n  }\n  \n  if (k ==\
    \ 14) {\n    return(sort(arr[-13:1]))\n  }\n  \n  if (k == 15) {\n    return(sort(arr[-14:1]))\n\
    \  }\n  \n  if (k == 16) {\n    return(sort(arr[-15:1]))\n  }\n  \n  if (k ==\
    \ 17) {\n    return(sort(arr[-16:1]))\n  }\n  \n  if (k == 18) {\n    return(sort(arr[-17:",
  "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  \n  if (k == 1) {\n    return(sort(arr))\n\
    \  }\n  \n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  \n  if (k ==\
    \ 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n  \n  if (k == 4) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4]))\n  }\n  \n  if (k == 5) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n  }\n  \n  if (k == 6) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6]))\n  }\n  \n  if (k == 7) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n  }\n  \n  if (k == 8) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n\
    \  }\n  \n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9]))\n  }\n  \n  if (k == 10) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n\
    \  }\n  \n  if (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n  }", "\n    if (k > len(arr))\
    \ {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n\
    \    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k\
    \ == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n    if (k == 4) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4]))\n    }\n    if (k == 5) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n    }\n    if (k ==\
    \ 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  \
    \  }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k == 9) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n    if (k\
    \ == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n        return(c(arr[1],\
    \ arr[2", "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  \n  if (k == 1)\
    \ {\n    return(sort(arr))\n  }\n  \n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n\
    \  }\n  \n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n  \n  if\
    \ (k == 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  \n  if (k\
    \ == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  }\n  \n  if\
    \ (k == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n\
    \  }\n  \n  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n  }\n  \n  if (k == 8) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8]))\n  }\n  \n  if (k == 9) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  }\n  \n\
    \  if (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9], arr[10]))\n  }\n  \n  if (k == 11) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \  }", "\n    if (k > length(arr)) {\n        return(NULL)\n    }\n    \n    arr\
    \ <- arr[order(arr)]\n    \n    if (k == 1) {\n        return(arr[1])\n    }\n\
    \    \n    max <- arr[1]\n    for (i in 2:k) {\n        if (arr[i] > max) {\n\
    \            max <- arr[i]\n        }\n    }\n    \n    return(arr[1:k])\n}\n\n\
    print(maximum(c(-3, -4, 5), 3))\nprint(maximum(c(4, -4, 4), 2))\nprint(maximum(c(-3,\
    \ 2, 1, 2, -1, -2, 1), 1))\n", "\n    if (k > len(arr)) {\n        return(NULL)\n\
    \    }\n    if (k == 1) {\n        return(arr[1])\n    }\n    if (k == 2) {\n\
    \        return(c(arr[1], arr[2]))\n    }\n    if (k == len(arr)) {\n        return(arr)\n\
    \    }\n    if (arr[k] > arr[k - 1]) {\n        return(arr[k])\n    }\n    if\
    \ (arr[k] < arr[k - 1]) {\n        return(arr[k - 1])\n    }\n    return(arr[k])\n\
    }\n", "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  \n  if (k == 1) {\n\
    \    return(arr[1])\n  }\n  \n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n\
    \  }\n  \n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n  \n  if\
    \ (k == 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  \n  if (k\
    \ == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  }\n  \n  if\
    \ (k == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n\
    \  }\n  \n  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n  }\n  \n  if (k == 8) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8]))\n  }\n  \n  if (k == 9) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  }\n  \n\
    \  if (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9], arr[10]))\n  }\n  \n  if (k == 11) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \  }", "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  \n  if (k == 1) {\n\
    \    return(sort(arr))\n  }\n  \n  max <- arr[1]\n  \n  for (i in 2:k) {\n   \
    \ if (arr[i] > max) {\n      max <- arr[i]\n    }\n  }\n  \n  return(sort(arr[1:k]))\n\
    }\n", "\n    if (k > len(arr)) {\n        return(NULL)\n    }\n    if (k == 1)\
    \ {\n        return(arr[1])\n    }\n    if (k == 2) {\n        return(c(arr[1],\
    \ arr[2]))\n    }\n    if (k == len(arr)) {\n        return(arr)\n    }\n    max\
    \ <- arr[1]\n    for (i in 2:k) {\n        if (arr[i] > max) {\n            max\
    \ <- arr[i]\n        }\n    }\n    return(c(max, arr[k]))\n}\n\nprint(maximum(c(-3,\
    \ -4, 5), 3))\nprint(maximum(c(4, -4, 4), 2))\nprint(maximum(c(-3, 2, 1, 2, -1,\
    \ -2, 1), 1))\n", "\n  if (k > length(arr)) {\n    return(list())\n  }\n  \n \
    \ if (k == 1) {\n    return(sort(arr))\n  }\n  \n  max_arr <- arr[1:k]\n  for\
    \ (i in 2:length(arr)) {\n    if (arr[i] > max_arr[k-1]) {\n      max_arr <- arr[i:k]\n\
    \    }\n  }\n  \n  return(max_arr)\n}\n\nprint(maximum(c(-3, -4, 5), 3))\nprint(maximum(c(4,\
    \ -4, 4), 2))\nprint(maximum(c(-3, 2, 1, 2, -1, -2, 1), 1))\n", "\n  arr <- arr[order(arr)]\n\
    \  if (k == 1) {\n    return(arr)\n  }\n  if (k == 2) {\n    return(c(arr[1],\
    \ arr[2]))\n  }\n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n\
    \  if (k == 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  if (k\
    \ == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  }\n  if (k\
    \ == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  }\n\
    \  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7]))\n  }\n  if (k == 8) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8]))\n  }\n  if (k == 9) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  }\n  if\
    \ (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10]))\n  }\n  if (k == 11) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \  }\n  if (k == 12) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5", "\n\
    \    if (k > length(arr)) {\n        return(NULL)\n    }\n    if (k == 1) {\n\
    \        return(sort(arr))\n    }\n    if (k == 2) {\n        return(sort(arr[1:2]))\n\
    \    }\n    if (k == 3) {\n        return(sort(arr[1:3]))\n    }\n    if (k ==\
    \ 4) {\n        return(sort(arr[1:4]))\n    }\n    if (k == 5) {\n        return(sort(arr[1:5]))\n\
    \    }\n    if (k == 6) {\n        return(sort(arr[1:6]))\n    }\n    if (k ==\
    \ 7) {\n        return(sort(arr[1:7]))\n    }\n    if (k == 8) {\n        return(sort(arr[1:8]))\n\
    \    }\n    if (k == 9) {\n        return(sort(arr[1:9]))\n    }\n    if (k ==\
    \ 10) {\n        return(sort(arr[1:10]))\n    }\n    if (k == 11) {\n        return(sort(arr[1:11]))\n\
    \    }\n    if (k == 12) {\n        return(sort(arr[1:12]))\n    }\n    if (k\
    \ == 13) {\n        return(sort(arr[1:13]))\n    }\n    if (k == 14) {\n     \
    \   return(sort(arr[1:14]))\n    }\n    if (k == 15) {\n        return(sort(arr[1:15]))\n\
    \    }\n    if (k == 16) {\n        return(sort(arr[1:16]))\n    }\n    if (k\
    \ == 17) {\n        return(sort(arr[1:17]))\n    }\n    if (k == 18) {\n     \
    \   return(sort(arr[1:18]))\n    }\n    if (k == 19) {\n        return(sort(arr[1:19]))\n\
    \    }\n    if (k == 20) {\n        return(sort(arr[1:20]))", "\n    if (k > length(arr))\
    \ {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n\
    \    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k\
    \ == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n    if (k == 4) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4]))\n    }\n    if (k == 5) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n    }\n    if (k ==\
    \ 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  \
    \  }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k == 9) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n    if (k\
    \ == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n        return(c(arr[1],\
    \ arr[2", "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  \n  if (k == 1)\
    \ {\n    return(sort(arr))\n  }\n  \n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n\
    \  }\n  \n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n  \n  if\
    \ (k == 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  \n  if (k\
    \ == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  }\n  \n  if\
    \ (k == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n\
    \  }\n  \n  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n  }\n  \n  if (k == 8) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8]))\n  }\n  \n  if (k == 9) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  }\n  \n\
    \  if (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9], arr[10]))\n  }\n  \n  if (k == 11) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \  }", "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  if (k == 1) {\n \
    \   return(sort(arr))\n  }\n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n \
    \ }\n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n  if (k == 4)\
    \ {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  if (k == 5) {\n   \
    \ return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  }\n  if (k == 6) {\n  \
    \  return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  }\n  if (k ==\
    \ 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n\
    \  }\n  if (k == 8) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8]))\n  }\n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  }\n  if (k == 10) {\n  \
    \  return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9],\
    \ arr[10]))\n  }\n  if (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n  }\n  if (k ==\
    \ 12) {\n    return(c(arr[1], arr[2", "\n  if (k > length(arr)) {\n    return(list())\n\
    \  }\n  if (k == 1) {\n    return(sort(arr))\n  }\n  if (k == 2) {\n    return(c(arr[1],\
    \ arr[2]))\n  }\n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n\
    \  if (k == 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  if (k\
    \ == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  }\n  if (k\
    \ == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  }\n\
    \  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7]))\n  }\n  if (k == 8) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8]))\n  }\n  if (k == 9) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  }\n  if\
    \ (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10]))\n  }\n  if (k == 11) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \  }\n  if (k == 12) {\n    return(c(arr[1], arr[2", "\n    if (k > len(arr))\
    \ {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(arr[1])\n\
    \    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k\
    \ == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n    if (k == 4) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4]))\n    }\n    if (k == 5) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n    }\n    if (k ==\
    \ 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  \
    \  }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k == 9) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n    if (k\
    \ == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n        return(c(arr[1],\
    \ arr[2", "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  if (k == 1) {\n\
    \    return(sort(arr))\n  }\n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n\
    \  }\n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n  if (k ==\
    \ 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  if (k == 5) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  }\n  if (k == 6) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  }\n  if (k ==\
    \ 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n\
    \  }\n  if (k == 8) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8]))\n  }\n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  }\n  if (k == 10) {\n  \
    \  return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9],\
    \ arr[10]))\n  }\n  if (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n  }\n  if (k ==\
    \ 12) {\n    return(c(arr[1], arr[2", "\n  arr <- arr[order(arr)]\n  return(arr[1:k])\n\
    }\n", "\n    if (k > len(arr)) {\n        return(NULL)\n    }\n    if (k == 1)\
    \ {\n        return(sort(arr))\n    }\n    if (k == 2) {\n        return(c(arr[1],\
    \ arr[2]))\n    }\n    if (k == len(arr)) {\n        return(sort(arr))\n    }\n\
    \    if (k == len(arr) - 1) {\n        return(sort(arr[1:k]))\n    }\n    if (k\
    \ == len(arr) - 2) {\n        return(sort(arr[1:k]))\n    }\n    if (k == len(arr)\
    \ - 3) {\n        return(sort(arr[1:k]))\n    }\n    if (k == len(arr) - 4) {\n\
    \        return(sort(arr[1:k]))\n    }\n    if (k == len(arr) - 5) {\n       \
    \ return(sort(arr[1:k]))\n    }\n    if (k == len(arr) - 6) {\n        return(sort(arr[1:k]))\n\
    \    }\n    if (k == len(arr) - 7) {\n        return(sort(arr[1:k]))\n    }\n\
    \    if (k == len(arr) - 8) {\n        return(sort(arr[1:k]))\n    }\n    if (k\
    \ == len(arr) - 9) {\n        return(sort(arr[1:k]))\n    }\n    if (k == len(arr)\
    \ - 10) {\n        return(sort(arr[1:k]))\n    }\n    if (k == len(arr) - 11)\
    \ {\n        return(sort(arr[1:k]))\n    }\n    if (k == len(arr) - 12) {\n  \
    \      return(sort(arr[1:k]))\n    }\n    if (k == len(arr) - 13) {\n        return(sort(arr[1:k]))\n\
    \    }\n    if (k == len(arr) - 14) {\n        return(sort(arr[1:k]))\n    }\n\
    \    if", "\n    if (k > len(arr)) {\n        return(NULL)\n    }\n    if (k ==\
    \ 1) {\n        return(arr[1])\n    }\n    if (k == 2) {\n        return(c(arr[1],\
    \ arr[2]))\n    }\n    if (k == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n\
    \    }\n    if (k == 4) {\n        return(c(arr[1], arr[2], arr[3], arr[4]))\n\
    \    }\n    if (k == 5) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n\
    \    }\n    if (k == 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6]))\n    }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k ==\
    \ 9) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n \
    \   if (k == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n    \
    \    return(c(arr[1], arr[2", "\n  arr <- arr[order(arr)]\n  if (k > length(arr))\
    \ {\n    return(arr)\n  }\n  return(arr[1:k])\n}\n", "\n    if (k > len(arr))\
    \ {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n\
    \    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k\
    \ == len(arr)) {\n        return(sort(arr))\n    }\n    if (arr[k] > arr[k - 1])\
    \ {\n        return(c(arr[k], arr[k - 1]))\n    }\n    if (arr[k] < arr[k - 1])\
    \ {\n        return(c(arr[k - 1], arr[k]))\n    }\n    if (arr[k] == arr[k - 1])\
    \ {\n        return(c(arr[k], arr[k - 1]))\n    }\n}\n", "\n    if (k > len(arr))\
    \ {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n\
    \    }\n    if (k == 2) {\n        return(sort(arr[1:2]))\n    }\n    if (k ==\
    \ 3) {\n        return(sort(arr[1:3]))\n    }\n    if (k == 4) {\n        return(sort(arr[1:4]))\n\
    \    }\n    if (k == 5) {\n        return(sort(arr[1:5]))\n    }\n    if (k ==\
    \ 6) {\n        return(sort(arr[1:6]))\n    }\n    if (k == 7) {\n        return(sort(arr[1:7]))\n\
    \    }\n    if (k == 8) {\n        return(sort(arr[1:8]))\n    }\n    if (k ==\
    \ 9) {\n        return(sort(arr[1:9]))\n    }\n    if (k == 10) {\n        return(sort(arr[1:10]))\n\
    \    }\n    if (k == 11) {\n        return(sort(arr[1:11]))\n    }\n    if (k\
    \ == 12) {\n        return(sort(arr[1:12]))\n    }\n    if (k == 13) {\n     \
    \   return(sort(arr[1:13]))\n    }\n    if (k == 14) {\n        return(sort(arr[1:14]))\n\
    \    }\n    if (k == 15) {\n        return(sort(arr[1:15]))\n    }\n    if (k\
    \ == 16) {\n        return(sort(arr[1:16]))\n    }\n    if (k == 17) {\n     \
    \   return(sort(arr[1:17]))\n    }\n    if (k == 18) {\n        return(sort(arr[1:18]))\n\
    \    }\n    if (k == 19) {\n        return(sort(arr[1:19]))\n    }\n    if (k\
    \ == 20) {\n        return(sort(arr[1:20]))", "\n  if (k > length(arr)) {\n  \
    \  return(NULL)\n  }\n  \n  if (k == 1) {\n    return(arr[order(arr)])\n  }\n\
    \  \n  if (k == 2) {\n    return(c(arr[order(arr, decreasing = TRUE)][1], arr[order(arr,\
    \ decreasing = TRUE)][2]))\n  }\n  \n  if (k == 3) {\n    return(c(arr[order(arr,\
    \ decreasing = TRUE)][1], arr[order(arr, decreasing = TRUE)][2], arr[order(arr,\
    \ decreasing = TRUE)][3]))\n  }\n  \n  if (k == 4) {\n    return(c(arr[order(arr,\
    \ decreasing = TRUE)][1], arr[order(arr, decreasing = TRUE)][2], arr[order(arr,\
    \ decreasing = TRUE)][3], arr[order(arr, decreasing = TRUE)][4]))\n  }\n  \n \
    \ if (k == 5) {\n    return(c(arr[order(arr, decreasing = TRUE)][1], arr[order(arr,\
    \ decreasing = TRUE)][2], arr[order(arr, decreasing = TRUE)][3], arr[order(arr,\
    \ decreasing = TRUE)][4], arr[order(arr, decreasing = TRUE)][5]))\n  }\n  \n \
    \ if (k == 6) {\n    return(c(arr[order(arr, decreasing = TRUE)][1], arr[order(arr,\
    \ decreasing = TRUE)][2], arr[order(arr, decreasing = TRUE)][3], arr[order(arr,\
    \ decreasing = TRUE)][4], arr[order(arr, decreasing = TRUE)][5], arr[order(arr,\
    \ decreasing = TRUE)][6]))\n  }\n  \n  if (k == 7) {\n    return(c(arr[order(arr,\
    \ decreasing = TRUE)][1], arr[order(arr, decreasing = TRUE)][2], arr[order(arr,\
    \ decreasing = TRUE)][3], arr[order(arr, decreasing = TRUE)][4], arr[order(arr,\
    \ decreasing = TRUE)][5], arr[order(arr, decreasing = TRUE)][6], arr[order(arr,\
    \ decreasing", "\n    if (k > len(arr)) {\n        return(NULL)\n    }\n    if\
    \ (k == 1) {\n        return(arr[1])\n    }\n    if (k == 2) {\n        return(c(arr[1],\
    \ arr[2]))\n    }\n    if (k == len(arr)) {\n        return(arr)\n    }\n    if\
    \ (arr[k] > arr[k - 1]) {\n        return(arr[k])\n    }\n    if (arr[k] < arr[k\
    \ - 1]) {\n        return(arr[k - 1])\n    }\n    if (arr[k] == arr[k - 1]) {\n\
    \        return(c(arr[k], arr[k - 1]))\n    }\n}\n", "\n    if (k > length(arr))\
    \ {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n\
    \    }\n    if (k == 2) {\n        return(sort(arr[1:2]))\n    }\n    if (k ==\
    \ 3) {\n        return(sort(arr[1:3]))\n    }\n    if (k == 4) {\n        return(sort(arr[1:4]))\n\
    \    }\n    if (k == 5) {\n        return(sort(arr[1:5]))\n    }\n    if (k ==\
    \ 6) {\n        return(sort(arr[1:6]))\n    }\n    if (k == 7) {\n        return(sort(arr[1:7]))\n\
    \    }\n    if (k == 8) {\n        return(sort(arr[1:8]))\n    }\n    if (k ==\
    \ 9) {\n        return(sort(arr[1:9]))\n    }\n    if (k == 10) {\n        return(sort(arr[1:10]))\n\
    \    }\n    if (k == 11) {\n        return(sort(arr[1:11]))\n    }\n    if (k\
    \ == 12) {\n        return(sort(arr[1:12]))\n    }\n    if (k == 13) {\n     \
    \   return(sort(arr[1:13]))\n    }\n    if (k == 14) {\n        return(sort(arr[1:14]))\n\
    \    }\n    if (k == 15) {\n        return(sort(arr[1:15]))\n    }\n    if (k\
    \ == 16) {\n        return(sort(arr[1:16]))\n    }\n    if (k == 17) {\n     \
    \   return(sort(arr[1:17]))\n    }\n    if (k == 18) {\n        return(sort(arr[1:18]))\n\
    \    }\n    if (k == 19) {\n        return(sort(arr[1:19]))\n    }\n    if (k\
    \ == 20) {\n        return(sort(arr[1:20]))", "\n  if (k > length(arr)) {\n  \
    \  return(NULL)\n  }\n  \n  if (k == 1) {\n    return(sort(arr))\n  }\n  \n  if\
    \ (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  \n  if (k == 3) {\n    return(c(arr[1],\
    \ arr[2], arr[3]))\n  }\n  \n  if (k == 4) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4]))\n  }\n  \n  if (k == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5]))\n  }\n  \n  if (k == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6]))\n  }\n  \n  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7]))\n  }\n  \n  if (k == 8) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n  }\n  \n  if (k ==\
    \ 9) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n  }\n  \n  if (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n  }\n  \n  if (k == 11) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9], arr[10], arr[11]))\n  }", "\n    if (k > length(arr)) {\n        return(NULL)\n\
    \    }\n    if (k == 1) {\n        return(arr[1])\n    }\n    if (k == 2) {\n\
    \        return(c(arr[1], arr[2]))\n    }\n    if (k == 3) {\n        return(c(arr[1],\
    \ arr[2], arr[3]))\n    }\n    if (k == 4) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4]))\n    }\n    if (k == 5) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n    }\n    if (k == 6) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6]))\n    }\n    if (k == 7) {\n       \
    \ return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n    }\n \
    \   if (k == 8) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8]))\n    }\n    if (k == 9) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n    }\n    if (k ==\
    \ 10) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10]))\n    }\n    if (k == 11) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \    }\n    if (k == 12) {\n        return(c(arr[1], arr[2", "\n    if (k > len(arr))\
    \ {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(arr[1])\n\
    \    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k\
    \ == len(arr)) {\n        return(arr)\n    }\n    max <- arr[1]\n    for (i in\
    \ 2:k) {\n        if (arr[i] > max) {\n            max <- arr[i]\n        }\n\
    \    }\n    return(c(max, arr[k]))\n}\n", "\n  if (k > length(arr)) {\n    return(NULL)\n\
    \  }\n  if (k == 1) {\n    return(sort(arr))\n  }\n  if (k == 2) {\n    return(c(arr[1],\
    \ arr[2]))\n  }\n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n\
    \  if (k == 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  if (k\
    \ == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  }\n  if (k\
    \ == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  }\n\
    \  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7]))\n  }\n  if (k == 8) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8]))\n  }\n  if (k == 9) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  }\n  if\
    \ (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10]))\n  }\n  if (k == 11) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \  }\n  if (k == 12) {\n    return(c(arr[1], arr[2", "\n  arr <- arr[order(arr)]\n\
    \  if (k > length(arr)) {\n    return(arr)\n  }\n  if (k == 1) {\n    return(arr[1])\n\
    \  }\n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  if (k == 3) {\n \
    \   return(c(arr[1], arr[2], arr[3]))\n  }\n  if (k == 4) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4]))\n  }\n  if (k == 5) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n  }\n  if (k == 6) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6]))\n  }\n  if (k == 7) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n  }\n  if (k == 8) {\n   \
    \ return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n\
    \  }\n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9]))\n  }\n  if (k == 10) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n  }\n  if\
    \ (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n  }\n  if (k == 12) {\n    return", "\n\
    \    if (k > length(arr)) {\n        return(NULL)\n    }\n    if (k == 1) {\n\
    \        return(sort(arr))\n    }\n    if (k == 2) {\n        return(sort(arr[1:2]))\n\
    \    }\n    if (k == 3) {\n        return(sort(arr[1:3]))\n    }\n    if (k ==\
    \ 4) {\n        return(sort(arr[1:4]))\n    }\n    if (k == 5) {\n        return(sort(arr[1:5]))\n\
    \    }\n    if (k == 6) {\n        return(sort(arr[1:6]))\n    }\n    if (k ==\
    \ 7) {\n        return(sort(arr[1:7]))\n    }\n    if (k == 8) {\n        return(sort(arr[1:8]))\n\
    \    }\n    if (k == 9) {\n        return(sort(arr[1:9]))\n    }\n    if (k ==\
    \ 10) {\n        return(sort(arr[1:10]))\n    }\n    if (k == 11) {\n        return(sort(arr[1:11]))\n\
    \    }\n    if (k == 12) {\n        return(sort(arr[1:12]))\n    }\n    if (k\
    \ == 13) {\n        return(sort(arr[1:13]))\n    }\n    if (k == 14) {\n     \
    \   return(sort(arr[1:14]))\n    }\n    if (k == 15) {\n        return(sort(arr[1:15]))\n\
    \    }\n    if (k == 16) {\n        return(sort(arr[1:16]))\n    }\n    if (k\
    \ == 17) {\n        return(sort(arr[1:17]))\n    }\n    if (k == 18) {\n     \
    \   return(sort(arr[1:18]))\n    }\n    if (k == 19) {\n        return(sort(arr[1:19]))\n\
    \    }\n    if (k == 20) {\n        return(sort(arr[1:20]))", "\n    if (k > length(arr))\
    \ {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n\
    \    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k\
    \ == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n    if (k == 4) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4]))\n    }\n    if (k == 5) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n    }\n    if (k ==\
    \ 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  \
    \  }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k == 9) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n    if (k\
    \ == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n        return(c(arr[1],\
    \ arr[2", "\n    if (k > length(arr)) {\n        return(NULL)\n    }\n    \n \
    \   arr <- arr[order(arr)]\n    \n    if (k == 1) {\n        return(arr[1])\n\
    \    }\n    \n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n  \
    \  \n    if (k == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n   \
    \ \n    if (k == 4) {\n        return(c(arr[1], arr[2], arr[3], arr[4]))\n   \
    \ }\n    \n    if (k == 5) {\n        return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5]))\n    }\n    \n    if (k == 6) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6]))\n    }\n    \n    if (k == 7) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n    }\n    \n    if (k ==\
    \ 8) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8]))\n    }\n    \n    if (k == 9) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n    }\n    \n    if (k ==\
    \ 10) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10]))\n    }\n    \n    if (k == 11) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9],", "\n    if\
    \ (k > len(arr)) {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(arr[1])\n\
    \    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k\
    \ == len(arr)) {\n        return(arr)\n    }\n    if (arr[k - 1] > arr[k]) {\n\
    \        return(arr[k - 1])\n    }\n    if (arr[k - 1] < arr[k]) {\n        return(arr[k])\n\
    \    }\n    if (arr[k - 2] > arr[k - 1]) {\n        return(arr[k - 2])\n    }\n\
    \    if (arr[k - 2] < arr[k - 1]) {\n        return(arr[k - 1])\n    }\n    if\
    \ (arr[k - 3] > arr[k - 2]) {\n        return(arr[k - 3])\n    }\n    if (arr[k\
    \ - 3] < arr[k - 2]) {\n        return(arr[k - 2])\n    }\n    if (arr[k - 4]\
    \ > arr[k - 3]) {\n        return(arr[k - 4])\n    }\n    if (arr[k - 4] < arr[k\
    \ - 3]) {\n        return(arr[k - 3])\n    }\n    if (arr[k - 5] > arr[k - 4])\
    \ {\n        return(arr[k - 5])\n    }\n    if (arr[k - 5] < arr[k - 4]) {\n \
    \       return(arr[k - 4])\n    }\n    if (arr[k - 6] > arr[k - 5]) {\n      \
    \  return(arr[k - 6])\n    }\n    if (arr[k - 6] < arr[k - 5]) {\n        return(arr[k\
    \ - 5])\n    }\n    if (arr[k - 7] > arr[k - 6]) {\n        return(arr[k - 7])\n\
    \    }\n    if (arr[k - 7] < arr[k - 6]) {\n        return(arr[k - 6])", "\n \
    \   if (k > len(arr)) {\n        return(NULL)\n    }\n    if (k == 1) {\n    \
    \    return(arr[1])\n    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n\
    \    }\n    if (k == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n\
    \    if (k == 4) {\n        return(c(arr[1], arr[2], arr[3], arr[4]))\n    }\n\
    \    if (k == 5) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n\
    \    }\n    if (k == 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6]))\n    }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k ==\
    \ 9) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n \
    \   if (k == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n    \
    \    return(c(arr[1], arr[2", "\n  arr <- arr[order(arr)]\n  if (k == 1) return(arr)\n\
    \  if (k == 2) return(c(arr[1], arr[2]))\n  if (k == 3) return(c(arr[1], arr[2],\
    \ arr[3]))\n  if (k == 4) return(c(arr[1], arr[2], arr[3], arr[4]))\n  if (k ==\
    \ 5) return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  if (k == 6) return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6]))\n  if (k == 7) return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7]))\n  if (k == 8) return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n  if (k == 9) return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  if (k ==\
    \ 10) return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9], arr[10]))\n  if (k == 11) return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n  if (k == 12) return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11],\
    \ arr[12]))\n  if (k == 13) return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7", "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  if (k == 1) {\n\
    \    return(sort(arr))\n  }\n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n\
    \  }\n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n  if (k ==\
    \ 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  if (k == 5) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  }\n  if (k == 6) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  }\n  if (k ==\
    \ 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n\
    \  }\n  if (k == 8) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8]))\n  }\n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  }\n  if (k == 10) {\n  \
    \  return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9],\
    \ arr[10]))\n  }\n  if (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n  }\n  if (k ==\
    \ 12) {\n    return(c(arr[1], arr[2", "\n    if (k > length(arr)) {\n        return(NULL)\n\
    \    }\n    if (k == 1) {\n        return(sort(arr))\n    }\n    if (k == 2) {\n\
    \        return(sort(arr[1:2]))\n    }\n    if (k == 3) {\n        return(sort(arr[1:3]))\n\
    \    }\n    if (k == 4) {\n        return(sort(arr[1:4]))\n    }\n    if (k ==\
    \ 5) {\n        return(sort(arr[1:5]))\n    }\n    if (k == 6) {\n        return(sort(arr[1:6]))\n\
    \    }\n    if (k == 7) {\n        return(sort(arr[1:7]))\n    }\n    if (k ==\
    \ 8) {\n        return(sort(arr[1:8]))\n    }\n    if (k == 9) {\n        return(sort(arr[1:9]))\n\
    \    }\n    if (k == 10) {\n        return(sort(arr[1:10]))\n    }\n    if (k\
    \ == 11) {\n        return(sort(arr[1:11]))\n    }\n    if (k == 12) {\n     \
    \   return(sort(arr[1:12]))\n    }\n    if (k == 13) {\n        return(sort(arr[1:13]))\n\
    \    }\n    if (k == 14) {\n        return(sort(arr[1:14]))\n    }\n    if (k\
    \ == 15) {\n        return(sort(arr[1:15]))\n    }\n    if (k == 16) {\n     \
    \   return(sort(arr[1:16]))\n    }\n    if (k == 17) {\n        return(sort(arr[1:17]))\n\
    \    }\n    if (k == 18) {\n        return(sort(arr[1:18]))\n    }\n    if (k\
    \ == 19) {\n        return(sort(arr[1:19]))\n    }\n    if (k == 20) {\n     \
    \   return(sort(arr[1:20]))", "\n    if (k > length(arr)) {\n        return(NULL)\n\
    \    }\n    if (k == 1) {\n        return(sort(arr))\n    }\n    if (k == 2) {\n\
    \        return(c(arr[1], arr[2]))\n    }\n    if (k == 3) {\n        return(c(arr[1],\
    \ arr[2], arr[3]))\n    }\n    if (k == 4) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4]))\n    }\n    if (k == 5) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n    }\n    if (k == 6) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6]))\n    }\n    if (k == 7) {\n       \
    \ return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n    }\n \
    \   if (k == 8) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8]))\n    }\n    if (k == 9) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n    }\n    if (k ==\
    \ 10) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10]))\n    }\n    if (k == 11) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \    }\n    if (k == 12) {\n        return(c(arr[1], arr[2", "\n    if (k > length(arr))\
    \ {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n\
    \    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k\
    \ == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n    if (k == 4) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4]))\n    }\n    if (k == 5) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n    }\n    if (k ==\
    \ 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  \
    \  }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k == 9) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n    if (k\
    \ == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n        return(c(arr[1],\
    \ arr[2", "\n    if (k > len(arr)) {\n        return(NULL)\n    }\n    if (k ==\
    \ 1) {\n        return(sort(arr))\n    }\n    if (k == 2) {\n        return(c(arr[1],\
    \ arr[2]))\n    }\n    if (k == len(arr)) {\n        return(sort(arr))\n    }\n\
    \    if (arr[k] > arr[k - 1]) {\n        return(sort(arr[1:k]))\n    }\n    if\
    \ (arr[k] < arr[k - 1]) {\n        return(sort(arr[1:k - 1]))\n    }\n    if (arr[k]\
    \ == arr[k - 1]) {\n        return(sort(arr[1:k - 1]))\n    }\n}\n", "\n  if (k\
    \ > length(arr)) {\n    return(NULL)\n  }\n  \n  arr <- arr[order(arr)]\n  \n\
    \  if (k == 1) {\n    return(arr[1])\n  }\n  \n  if (k == 2) {\n    return(c(arr[1],\
    \ arr[2]))\n  }\n  \n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n\
    \  }\n  \n  if (k == 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n\
    \  \n  if (k == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n\
    \  }\n  \n  if (k == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6]))\n  }\n  \n  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7]))\n  }\n  \n  if (k == 8) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n  }\n  \n  if (k == 9) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n  }\n  \n  if (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n  }\n  \n  if (k == 11) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9],", "\n    if (k > len(arr)) {\n        return(NULL)\n    }\n    if (k\
    \ == 1) {\n        return(arr[1])\n    }\n    if (k == 2) {\n        return(c(arr[1],\
    \ arr[2]))\n    }\n    if (k == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n\
    \    }\n    if (k == 4) {\n        return(c(arr[1], arr[2], arr[3], arr[4]))\n\
    \    }\n    if (k == 5) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n\
    \    }\n    if (k == 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6]))\n    }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k ==\
    \ 9) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n \
    \   if (k == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n    \
    \    return(c(arr[1], arr[2", "\n    if (k > length(arr)) {\n        return(NULL)\n\
    \    }\n    if (k == 1) {\n        return(arr[1])\n    }\n    if (k == 2) {\n\
    \        return(c(arr[1], arr[2]))\n    }\n    if (k == 3) {\n        return(c(arr[1],\
    \ arr[2], arr[3]))\n    }\n    if (k == 4) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4]))\n    }\n    if (k == 5) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n    }\n    if (k == 6) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6]))\n    }\n    if (k == 7) {\n       \
    \ return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n    }\n \
    \   if (k == 8) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8]))\n    }\n    if (k == 9) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n    }\n    if (k ==\
    \ 10) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10]))\n    }\n    if (k == 11) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \    }\n    if (k == 12) {\n        return(c(arr[1], arr[2", "\n  if (k > length(arr))\
    \ {\n    return(NULL)\n  }\n  \n  if (k == 1) {\n    return(sort(arr))\n  }\n\
    \  \n  if (k == 2) {\n    return(sort(arr[1:2]))\n  }\n  \n  if (k == 3) {\n \
    \   return(sort(arr[1:3]))\n  }\n  \n  if (k == 4) {\n    return(sort(arr[1:4]))\n\
    \  }\n  \n  if (k == 5) {\n    return(sort(arr[1:5]))\n  }\n  \n  if (k == 6)\
    \ {\n    return(sort(arr[1:6]))\n  }\n  \n  if (k == 7) {\n    return(sort(arr[1:7]))\n\
    \  }\n  \n  if (k == 8) {\n    return(sort(arr[1:8]))\n  }\n  \n  if (k == 9)\
    \ {\n    return(sort(arr[1:9]))\n  }\n  \n  if (k == 10) {\n    return(sort(arr[1:10]))\n\
    \  }\n  \n  if (k == 11) {\n    return(sort(arr[1:11]))\n  }\n  \n  if (k == 12)\
    \ {\n    return(sort(arr[1:12]))\n  }\n  \n  if (k == 13) {\n    return(sort(arr[1:13]))\n\
    \  }\n  \n  if (k == 14) {\n    return(sort(arr[1:14]))\n  }\n  \n  if (k == 15)\
    \ {\n    return(sort(arr[1:15]))\n  }\n  \n  if (k == 16) {\n    return(sort(arr[1:16]))\n\
    \  }\n  \n  if (k == 17) {\n    return(sort(arr[1:17]))\n  }\n  \n  if (k == 18)\
    \ {\n    return(sort(arr[1:18]))\n  }\n  \n  if (k == 19) {", "\n  if (k > length(arr))\
    \ {\n    return(NULL)\n  }\n  if (k == 1) {\n    return(sort(arr))\n  }\n  \n\
    \  # find the max k numbers\n  max_k <- max(arr[1:k])\n  \n  # find the max k\
    \ numbers in arr\n  max_k_arr <- arr[arr >= max_k]\n  \n  # sort the max k numbers\
    \ in arr\n  max_k_arr <- sort(max_k_arr)\n  \n  # return the sorted list of max\
    \ k numbers\n  return(max_k_arr)\n}\n", "\n  arr <- arr[order(arr)]\n  if (k ==\
    \ 1) {\n    return(arr)\n  }\n  if (k > len(arr)) {\n    return(arr[1:k])\n  }\n\
    \  if (k == len(arr)) {\n    return(arr)\n  }\n  return(arr[1:k])\n}\n", "\n \
    \   if (k > len(arr)) {\n        return(NULL)\n    }\n    if (k == 1) {\n    \
    \    return(arr[1])\n    }\n    if (k == len(arr)) {\n        return(arr)\n  \
    \  }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k ==\
    \ 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n    if (k == 4) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4]))\n    }\n    if (k == 5) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n    }\n    if (k ==\
    \ 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  \
    \  }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k == 9) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n    if (k\
    \ == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n    }\n    ", "\n    if (k > len(arr)) {\n\
    \        return(NULL)\n    }\n    if (k == 1) {\n        return(arr[1])\n    }\n\
    \    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k == len(arr))\
    \ {\n        return(arr)\n    }\n    if (arr[k - 1] > arr[k]) {\n        return(arr[k\
    \ - 1])\n    }\n    if (arr[k - 1] < arr[k]) {\n        return(arr[k])\n    }\n\
    \    if (arr[k - 2] > arr[k - 1]) {\n        return(arr[k - 2])\n    }\n    if\
    \ (arr[k - 2] < arr[k - 1]) {\n        return(arr[k - 1])\n    }\n    if (arr[k\
    \ - 3] > arr[k - 2]) {\n        return(arr[k - 3])\n    }\n    if (arr[k - 3]\
    \ < arr[k - 2]) {\n        return(arr[k - 2])\n    }\n    if (arr[k - 4] > arr[k\
    \ - 3]) {\n        return(arr[k - 4])\n    }\n    if (arr[k - 4] < arr[k - 3])\
    \ {\n        return(arr[k - 3])\n    }\n    if (arr[k - 5] > arr[k - 4]) {\n \
    \       return(arr[k - 5])\n    }\n    if (arr[k - 5] < arr[k - 4]) {\n      \
    \  return(arr[k - 4])\n    }\n    if (arr[k - 6] > arr[k - 5]) {\n        return(arr[k\
    \ - 6])\n    }\n    if (arr[k - 6] < arr[k - 5]) {\n        return(arr[k - 5])\n\
    \    }\n    if (arr[k - 7] > arr[k - 6]) {\n        return(arr[k - 7])\n    }\n\
    \    if (arr[k - 7] < arr[k - 6]) {\n        return(arr[k - 6])", "\n    if (k\
    \ > len(arr)) {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(arr[1])\n\
    \    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k\
    \ == len(arr)) {\n        return(arr)\n    }\n    \n    max <- arr[1]\n    for\
    \ (i in 2:k) {\n        if (arr[i] > max) {\n            max <- arr[i]\n     \
    \   }\n    }\n    \n    return(c(max, arr[k]))\n}\n\nprint(maximum(c(-3, -4, 5),\
    \ 3))\nprint(maximum(c(4, -4, 4), 2))\nprint(maximum(c(-3, 2, 1, 2, -1, -2, 1),\
    \ 1))\n", "\n    if (k > len(arr)) {\n        return(NULL)\n    }\n    if (k ==\
    \ 1) {\n        return(arr[1])\n    }\n    if (k == 2) {\n        return(c(arr[1],\
    \ arr[2]))\n    }\n    if (k == len(arr)) {\n        return(arr)\n    }\n    if\
    \ (arr[k] > arr[k - 1]) {\n        return(arr[k])\n    }\n    if (arr[k] < arr[k\
    \ - 1]) {\n        return(arr[k - 1])\n    }\n    return(arr[k])\n}\n", "\n  \
    \  if (k > length(arr)) {\n        return(NULL)\n    }\n    if (k == 1) {\n  \
    \      return(sort(arr))\n    }\n    if (k == 2) {\n        return(sort(arr[1:2]))\n\
    \    }\n    if (k == 3) {\n        return(sort(arr[1:3]))\n    }\n    if (k ==\
    \ 4) {\n        return(sort(arr[1:4]))\n    }\n    if (k == 5) {\n        return(sort(arr[1:5]))\n\
    \    }\n    if (k == 6) {\n        return(sort(arr[1:6]))\n    }\n    if (k ==\
    \ 7) {\n        return(sort(arr[1:7]))\n    }\n    if (k == 8) {\n        return(sort(arr[1:8]))\n\
    \    }\n    if (k == 9) {\n        return(sort(arr[1:9]))\n    }\n    if (k ==\
    \ 10) {\n        return(sort(arr[1:10]))\n    }\n    if (k == 11) {\n        return(sort(arr[1:11]))\n\
    \    }\n    if (k == 12) {\n        return(sort(arr[1:12]))\n    }\n    if (k\
    \ == 13) {\n        return(sort(arr[1:13]))\n    }\n    if (k == 14) {\n     \
    \   return(sort(arr[1:14]))\n    }\n    if (k == 15) {\n        return(sort(arr[1:15]))\n\
    \    }\n    if (k == 16) {\n        return(sort(arr[1:16]))\n    }\n    if (k\
    \ == 17) {\n        return(sort(arr[1:17]))\n    }\n    if (k == 18) {\n     \
    \   return(sort(arr[1:18]))\n    }\n    if (k == 19) {\n        return(sort(arr[1:19]))\n\
    \    }\n    if (k == 20) {\n        return(sort(arr[1:20]))", "\n    if (k > length(arr))\
    \ {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(arr[1])\n\
    \    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k\
    \ == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n    if (k == 4) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4]))\n    }\n    if (k == 5) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n    }\n    if (k ==\
    \ 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  \
    \  }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k == 9) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n    if (k\
    \ == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n        return(c(arr[1],\
    \ arr[2", "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  \n  if (k == 1)\
    \ {\n    return(sort(arr))\n  }\n  \n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n\
    \  }\n  \n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n  \n  if\
    \ (k == 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  \n  if (k\
    \ == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  }\n  \n  if\
    \ (k == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n\
    \  }\n  \n  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n  }\n  \n  if (k == 8) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8]))\n  }\n  \n  if (k == 9) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  }\n  \n\
    \  if (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9], arr[10]))\n  }\n  \n  if (k == 11) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \  }", "\n    if (k > length(arr)) {\n        return(NULL)\n    }\n    if (k ==\
    \ 1) {\n        return(sort(arr))\n    }\n    if (k == 2) {\n        return(sort(arr[-1:1]))\n\
    \    }\n    if (k == 3) {\n        return(sort(arr[-2:2]))\n    }\n    if (k ==\
    \ 4) {\n        return(sort(arr[-3:3]))\n    }\n    if (k == 5) {\n        return(sort(arr[-4:4]))\n\
    \    }\n    if (k == 6) {\n        return(sort(arr[-5:5]))\n    }\n    if (k ==\
    \ 7) {\n        return(sort(arr[-6:6]))\n    }\n    if (k == 8) {\n        return(sort(arr[-7:7]))\n\
    \    }\n    if (k == 9) {\n        return(sort(arr[-8:8]))\n    }\n    if (k ==\
    \ 10) {\n        return(sort(arr[-9:9]))\n    }\n    if (k == 11) {\n        return(sort(arr[-10:10]))\n\
    \    }\n    if (k == 12) {\n        return(sort(arr[-11:11]))\n    }\n    if (k\
    \ == 13) {\n        return(sort(arr[-12:12]))\n    }\n    if (k == 14) {\n   \
    \     return(sort(arr[-13:13]))\n    }\n    if (k == 15) {\n        return(sort(arr[-14:14]))\n\
    \    }\n    if (k == 16) {\n        return(sort(arr[-15:15]))\n    }\n    if (k\
    \ == 17) {\n        return(sort(arr[-16:16]))\n    }\n    if (k == 18) {\n   \
    \     return(sort(arr[-17:17]))\n    }\n    if (k == 19) {\n        return(sort(arr[-18:18]))\n\
    \    }\n    if (", "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  if (k\
    \ == 1) {\n    return(sort(arr))\n  }\n  if (k == 2) {\n    return(sort(arr[1:2]))\n\
    \  }\n  if (k == 3) {\n    return(sort(arr[1:3]))\n  }\n  if (k == 4) {\n    return(sort(arr[1:4]))\n\
    \  }\n  if (k == 5) {\n    return(sort(arr[1:5]))\n  }\n  if (k == 6) {\n    return(sort(arr[1:6]))\n\
    \  }\n  if (k == 7) {\n    return(sort(arr[1:7]))\n  }\n  if (k == 8) {\n    return(sort(arr[1:8]))\n\
    \  }\n  if (k == 9) {\n    return(sort(arr[1:9]))\n  }\n  if (k == 10) {\n   \
    \ return(sort(arr[1:10]))\n  }\n  if (k == 11) {\n    return(sort(arr[1:11]))\n\
    \  }\n  if (k == 12) {\n    return(sort(arr[1:12]))\n  }\n  if (k == 13) {\n \
    \   return(sort(arr[1:13]))\n  }\n  if (k == 14) {\n    return(sort(arr[1:14]))\n\
    \  }\n  if (k == 15) {\n    return(sort(arr[1:15]))\n  }\n  if (k == 16) {\n \
    \   return(sort(arr[1:16]))\n  }\n  if (k == 17) {\n    return(sort(arr[1:17]))\n\
    \  }\n  if (k == 18) {\n    return(sort(arr[1:18]))\n  }\n  if (k == 19) {\n \
    \   return(sort(arr[1:19]))\n  }\n  if (k == 20) {\n    return(sort(arr[1:20]))",
  "\n    if (k > len(arr)) {\n        return(list())\n    }\n    if (k == 1) {\n \
    \       return(sort(arr))\n    }\n    if (k == len(arr)) {\n        return(arr)\n\
    \    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k\
    \ == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n    if (k == 4) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4]))\n    }\n    if (k == 5) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n    }\n    if (k ==\
    \ 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  \
    \  }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k == 9) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n    if (k\
    \ == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n    }\n    ", "\n  if (k > length(arr))\
    \ {\n    return(NULL)\n  }\n  if (k == 1) {\n    return(sort(arr))\n  }\n  if\
    \ (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  if (k == 3) {\n    return(c(arr[1],\
    \ arr[2], arr[3]))\n  }\n  if (k == 4) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4]))\n  }\n  if (k == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5]))\n  }\n  if (k == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6]))\n  }\n  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7]))\n  }\n  if (k == 8) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n  }\n  if (k == 9)\
    \ {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n  }\n  if (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n  }\n  if (k == 11) {\n \
    \   return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9],\
    \ arr[10], arr[11]))\n  }\n  if (k == 12) {\n    return(c(arr[1], arr[2", "\n\
    \  if (k > length(arr)) {\n    return(NULL)\n  }\n  \n  arr <- arr[order(arr)]\n\
    \  \n  if (k == 1) {\n    return(arr[1])\n  }\n  \n  if (k == 2) {\n    return(c(arr[1],\
    \ arr[2]))\n  }\n  \n  return(arr[1:k])\n}\n", "\n  if (k > length(arr)) {\n \
    \   return(NULL)\n  }\n  if (k == 1) {\n    return(sort(arr))\n  }\n  \n  # Sort\
    \ arr in decreasing order\n  arr <- arr[order(arr, decreasing = TRUE)]\n  \n \
    \ # Get the first k elements\n  first_k <- arr[1:k]\n  \n  # Get the last k elements\n\
    \  last_k <- arr[length(arr) - k + 1:length(arr)]\n  \n  # Get the first k elements\
    \ and the last k elements\n  first_k_last_k <- c(first_k, last_k)\n  \n  # Sort\
    \ first_k_last_k in increasing order\n  first_k_last_k <- first_k_last_k[order(first_k_last_k,\
    \ decreasing = FALSE)]\n  \n  # Get the first k elements and the last k elements\n\
    \  first_k_last_k <- first_k_last_k[1:k]\n  \n  # Return the first k elements\
    \ and the last k elements\n  return(first_k_last_k)\n}\n", "\n  if (k > length(arr))\
    \ {\n    return(NULL)\n  }\n  \n  if (k == 1) {\n    return(sort(arr))\n  }\n\
    \  \n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  \n  if (k == 3) {\n\
    \    return(c(arr[1], arr[2], arr[3]))\n  }\n  \n  if (k == 4) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4]))\n  }\n  \n  if (k == 5) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n  }\n  \n  if (k == 6) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6]))\n  }\n  \n  if (k == 7) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n  }\n  \n  if (k == 8) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n\
    \  }\n  \n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9]))\n  }\n  \n  if (k == 10) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n\
    \  }\n  \n  if (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n  }", "\n    if (k > length(arr))\
    \ {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n\
    \    }\n    if (k == 2) {\n        return(sort(arr[1:2]))\n    }\n    if (k ==\
    \ 3) {\n        return(sort(arr[1:3]))\n    }\n    if (k == 4) {\n        return(sort(arr[1:4]))\n\
    \    }\n    if (k == 5) {\n        return(sort(arr[1:5]))\n    }\n    if (k ==\
    \ 6) {\n        return(sort(arr[1:6]))\n    }\n    if (k == 7) {\n        return(sort(arr[1:7]))\n\
    \    }\n    if (k == 8) {\n        return(sort(arr[1:8]))\n    }\n    if (k ==\
    \ 9) {\n        return(sort(arr[1:9]))\n    }\n    if (k == 10) {\n        return(sort(arr[1:10]))\n\
    \    }\n    if (k == 11) {\n        return(sort(arr[1:11]))\n    }\n    if (k\
    \ == 12) {\n        return(sort(arr[1:12]))\n    }\n    if (k == 13) {\n     \
    \   return(sort(arr[1:13]))\n    }\n    if (k == 14) {\n        return(sort(arr[1:14]))\n\
    \    }\n    if (k == 15) {\n        return(sort(arr[1:15]))\n    }\n    if (k\
    \ == 16) {\n        return(sort(arr[1:16]))\n    }\n    if (k == 17) {\n     \
    \   return(sort(arr[1:17]))\n    }\n    if (k == 18) {\n        return(sort(arr[1:18]))\n\
    \    }\n    if (k == 19) {\n        return(sort(arr[1:19]))\n    }\n    if (k\
    \ == 20) {\n        return(sort(arr[1:20]))", "\n    if (k > len(arr)) {\n   \
    \     return(NULL)\n    }\n    \n    if (k == 1) {\n        return(arr[1])\n \
    \   }\n    \n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n   \
    \ \n    if (k == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n    \n\
    \    if (k == 4) {\n        return(c(arr[1], arr[2], arr[3], arr[4]))\n    }\n\
    \    \n    if (k == 5) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n\
    \    }\n    \n    if (k == 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6]))\n    }\n    \n    if (k == 7) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7]))\n    }\n    \n    if (k == 8) {\n \
    \       return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n\
    \    }\n    \n    if (k == 9) {\n        return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8], arr[9]))\n    }\n    \n    if (k == 10) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9], arr[10]))\n    }\n    \n    if (k == 11) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \    }", "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  if (k == 1) {\n\
    \    return(sort(arr))\n  }\n  if (k == 2) {\n    return(sort(arr[1:2]))\n  }\n\
    \  if (k == 3) {\n    return(sort(arr[1:3]))\n  }\n  if (k == 4) {\n    return(sort(arr[1:4]))\n\
    \  }\n  if (k == 5) {\n    return(sort(arr[1:5]))\n  }\n  if (k == 6) {\n    return(sort(arr[1:6]))\n\
    \  }\n  if (k == 7) {\n    return(sort(arr[1:7]))\n  }\n  if (k == 8) {\n    return(sort(arr[1:8]))\n\
    \  }\n  if (k == 9) {\n    return(sort(arr[1:9]))\n  }\n  if (k == 10) {\n   \
    \ return(sort(arr[1:10]))\n  }\n  if (k == 11) {\n    return(sort(arr[1:11]))\n\
    \  }\n  if (k == 12) {\n    return(sort(arr[1:12]))\n  }\n  if (k == 13) {\n \
    \   return(sort(arr[1:13]))\n  }\n  if (k == 14) {\n    return(sort(arr[1:14]))\n\
    \  }\n  if (k == 15) {\n    return(sort(arr[1:15]))\n  }\n  if (k == 16) {\n \
    \   return(sort(arr[1:16]))\n  }\n  if (k == 17) {\n    return(sort(arr[1:17]))\n\
    \  }\n  if (k == 18) {\n    return(sort(arr[1:18]))\n  }\n  if (k == 19) {\n \
    \   return(sort(arr[1:19]))\n  }\n  if (k == 20) {\n    return(sort(arr[1:20]))",
  "\n  if (k > length(arr)) {\n    return(list())\n  }\n  if (k == 1) {\n    return(sort(arr))\n\
    \  }\n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  if (k == 3) {\n \
    \   return(c(arr[1], arr[2], arr[3]))\n  }\n  if (k == 4) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4]))\n  }\n  if (k == 5) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n  }\n  if (k == 6) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6]))\n  }\n  if (k == 7) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n  }\n  if (k == 8) {\n   \
    \ return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n\
    \  }\n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9]))\n  }\n  if (k == 10) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n  }\n  if\
    \ (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n  }\n  if (k == 12) {\n    return(c(arr[1],\
    \ arr[2", "\n    if (k > length(arr)) {\n        return(NULL)\n    }\n    if (k\
    \ == 1) {\n        return(sort(arr))\n    }\n    if (k == 2) {\n        return(c(arr[1],\
    \ arr[2]))\n    }\n    if (k == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n\
    \    }\n    if (k == 4) {\n        return(c(arr[1], arr[2], arr[3], arr[4]))\n\
    \    }\n    if (k == 5) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n\
    \    }\n    if (k == 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6]))\n    }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k ==\
    \ 9) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n \
    \   if (k == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n    \
    \    return(c(arr[1], arr[2", "\n  if (k > len(arr)) {\n    return(NULL)\n  }\n\
    \  if (k == 1) {\n    return(sort(arr))\n  }\n  if (k == len(arr)) {\n    return(arr)\n\
    \  }\n  if (k == 2) {\n    return(sort(arr[1:2]))\n  }\n  if (k == 3) {\n    return(sort(arr[1:3]))\n\
    \  }\n  if (k == 4) {\n    return(sort(arr[1:4]))\n  }\n  if (k == 5) {\n    return(sort(arr[1:5]))\n\
    \  }\n  if (k == 6) {\n    return(sort(arr[1:6]))\n  }\n  if (k == 7) {\n    return(sort(arr[1:7]))\n\
    \  }\n  if (k == 8) {\n    return(sort(arr[1:8]))\n  }\n  if (k == 9) {\n    return(sort(arr[1:9]))\n\
    \  }\n  if (k == 10) {\n    return(sort(arr[1:10]))\n  }\n  if (k == 11) {\n \
    \   return(sort(arr[1:11]))\n  }\n  if (k == 12) {\n    return(sort(arr[1:12]))\n\
    \  }\n  if (k == 13) {\n    return(sort(arr[1:13]))\n  }\n  if (k == 14) {\n \
    \   return(sort(arr[1:14]))\n  }\n  if (k == 15) {\n    return(sort(arr[1:15]))\n\
    \  }\n  if (k == 16) {\n    return(sort(arr[1:16]))\n  }\n  if (k == 17) {\n \
    \   return(sort(arr[1:17]))\n  }\n  if (k == 18) {\n    return(sort(arr[1:18]))\n\
    \  }\n  if (k == 19) {\n    return(sort(arr[1:19]))\n  }\n  ", "\n  arr <- arr[order(arr)]\n\
    \  return(arr[seq_len(k)])\n}\n", "\n    if (k > length(arr)) {\n        return(NULL)\n\
    \    }\n    if (k == 1) {\n        return(sort(arr))\n    }\n    if (k == 2) {\n\
    \        return(c(arr[1], arr[2]))\n    }\n    if (k == 3) {\n        return(c(arr[1],\
    \ arr[2], arr[3]))\n    }\n    if (k == 4) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4]))\n    }\n    if (k == 5) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n    }\n    if (k == 6) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6]))\n    }\n    if (k == 7) {\n       \
    \ return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n    }\n \
    \   if (k == 8) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8]))\n    }\n    if (k == 9) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n    }\n    if (k ==\
    \ 10) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10]))\n    }\n    if (k == 11) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \    }\n    if (k == 12) {\n        return(c(arr[1], arr[2", "\n  if (k > len(arr))\
    \ {\n    return(NULL)\n  }\n  \n  arr <- arr[order(arr)]\n  \n  if (k == 1) {\n\
    \    return(arr[1])\n  }\n  \n  if (k == 2) {\n    return(arr[1:2])\n  }\n  \n\
    \  if (k == 3) {\n    return(arr[1:3])\n  }\n  \n  if (k == 4) {\n    return(arr[1:4])\n\
    \  }\n  \n  if (k == 5) {\n    return(arr[1:5])\n  }\n  \n  if (k == 6) {\n  \
    \  return(arr[1:6])\n  }\n  \n  if (k == 7) {\n    return(arr[1:7])\n  }\n  \n\
    \  if (k == 8) {\n    return(arr[1:8])\n  }\n  \n  if (k == 9) {\n    return(arr[1:9])\n\
    \  }\n  \n  if (k == 10) {\n    return(arr[1:10])\n  }\n  \n  if (k == 11) {\n\
    \    return(arr[1:11])\n  }\n  \n  if (k == 12) {\n    return(arr[1:12])\n  }\n\
    \  \n  if (k == 13) {\n    return(arr[1:13])\n  }\n  \n  if (k == 14) {\n    return(arr[1:14])\n\
    \  }\n  \n  if (k == 15) {\n    return(arr[1:15])\n  }\n  \n  if (k == 16) {\n\
    \    return(arr[1:16])\n  }\n  \n  if (k == 17) {\n    return(arr[1:17])\n  }\n\
    \  \n  if (k == 18) {\n    return(arr[1:18])\n  }\n  \n  if (k == 19) {\n    return(arr[1:19])\n\
    \  }\n  \n  if (k == 20) {\n    return(arr[1:20])\n  }\n  ", "\n  if (k == 1)\
    \ {\n    return(sort(arr))\n  }\n  if (k > len(arr)) {\n    return(sort(arr))\n\
    \  }\n  if (k == len(arr)) {\n    return(sort(arr))\n  }\n  if (k == 2) {\n  \
    \  return(sort(arr[1:2]))\n  }\n  if (k == 3) {\n    return(sort(arr[1:3]))\n\
    \  }\n  if (k == 4) {\n    return(sort(arr[1:4]))\n  }\n  if (k == 5) {\n    return(sort(arr[1:5]))\n\
    \  }\n  if (k == 6) {\n    return(sort(arr[1:6]))\n  }\n  if (k == 7) {\n    return(sort(arr[1:7]))\n\
    \  }\n  if (k == 8) {\n    return(sort(arr[1:8]))\n  }\n  if (k == 9) {\n    return(sort(arr[1:9]))\n\
    \  }\n  if (k == 10) {\n    return(sort(arr[1:10]))\n  }\n  if (k == 11) {\n \
    \   return(sort(arr[1:11]))\n  }\n  if (k == 12) {\n    return(sort(arr[1:12]))\n\
    \  }\n  if (k == 13) {\n    return(sort(arr[1:13]))\n  }\n  if (k == 14) {\n \
    \   return(sort(arr[1:14]))\n  }\n  if (k == 15) {\n    return(sort(arr[1:15]))\n\
    \  }\n  if (k == 16) {\n    return(sort(arr[1:16]))\n  }\n  if (k == 17) {\n \
    \   return(sort(arr[1:17]))\n  }\n  if (k == 18) {\n    return(sort(arr[1:18]))\n\
    \  }\n  if (k == 19) {\n    return(sort(arr[1:19]))\n", "\n  arr <- arr[order(arr)]\n\
    \  if (k == 1) {\n    return(arr[1])\n  }\n  if (k == 2) {\n    return(arr[1:2])\n\
    \  }\n  if (k == 3) {\n    return(arr[1:3])\n  }\n  if (k == 4) {\n    return(arr[1:4])\n\
    \  }\n  if (k == 5) {\n    return(arr[1:5])\n  }\n  if (k == 6) {\n    return(arr[1:6])\n\
    \  }\n  if (k == 7) {\n    return(arr[1:7])\n  }\n  if (k == 8) {\n    return(arr[1:8])\n\
    \  }\n  if (k == 9) {\n    return(arr[1:9])\n  }\n  if (k == 10) {\n    return(arr[1:10])\n\
    \  }\n  if (k == 11) {\n    return(arr[1:11])\n  }\n  if (k == 12) {\n    return(arr[1:12])\n\
    \  }\n  if (k == 13) {\n    return(arr[1:13])\n  }\n  if (k == 14) {\n    return(arr[1:14])\n\
    \  }\n  if (k == 15) {\n    return(arr[1:15])\n  }\n  if (k == 16) {\n    return(arr[1:16])\n\
    \  }\n  if (k == 17) {\n    return(arr[1:17])\n  }\n  if (k == 18) {\n    return(arr[1:18])\n\
    \  }\n  if (k == 19) {\n    return(arr[1:19])\n  }\n  if (k == 20) {\n    return(arr[1:20])\n\
    \  }\n  if (k == 21) {\n    return(arr[1:21])\n  }\n  if (k == 22) {\n    return(arr[1:22])\n\
    \  }\n  if (k == 23) {\n    return(arr[1:23])\n", "\n  if (k > length(arr)) {\n\
    \    return(NULL)\n  }\n  \n  if (k == 1) {\n    return(sort(arr))\n  }\n  \n\
    \  if (k == 2) {\n    return(sort(arr[1:2]))\n  }\n  \n  if (k == 3) {\n    return(sort(arr[1:3]))\n\
    \  }\n  \n  if (k == 4) {\n    return(sort(arr[1:4]))\n  }\n  \n  if (k == 5)\
    \ {\n    return(sort(arr[1:5]))\n  }\n  \n  if (k == 6) {\n    return(sort(arr[1:6]))\n\
    \  }\n  \n  if (k == 7) {\n    return(sort(arr[1:7]))\n  }\n  \n  if (k == 8)\
    \ {\n    return(sort(arr[1:8]))\n  }\n  \n  if (k == 9) {\n    return(sort(arr[1:9]))\n\
    \  }\n  \n  if (k == 10) {\n    return(sort(arr[1:10]))\n  }\n  \n  if (k == 11)\
    \ {\n    return(sort(arr[1:11]))\n  }\n  \n  if (k == 12) {\n    return(sort(arr[1:12]))\n\
    \  }\n  \n  if (k == 13) {\n    return(sort(arr[1:13]))\n  }\n  \n  if (k == 14)\
    \ {\n    return(sort(arr[1:14]))\n  }\n  \n  if (k == 15) {\n    return(sort(arr[1:15]))\n\
    \  }\n  \n  if (k == 16) {\n    return(sort(arr[1:16]))\n  }\n  \n  if (k == 17)\
    \ {\n    return(sort(arr[1:17]))\n  }\n  \n  if (k == 18) {\n    return(sort(arr[1:18]))\n\
    \  }\n  \n  if (k == 19) {", "\n  arr <- arr[order(arr)]\n  if (k == 1) {\n  \
    \  return(arr[1])\n  }\n  if (k == 2) {\n    return(arr[1:2])\n  }\n  if (k >\
    \ 2) {\n    return(arr[1:k])\n  }\n}\n", "\n  if (k > length(arr)) {\n    return(NULL)\n\
    \  }\n  if (k == 1) {\n    return(sort(arr))\n  }\n  max <- max(arr[1:k])\n  max_index\
    \ <- which(arr == max)\n  return(arr[max_index] + arr[max_index+1:k])\n}\n", "\n\
    \  if (k > length(arr)) {\n    return(NULL)\n  }\n  \n  arr <- arr[order(arr)]\n\
    \  \n  if (k == 1) {\n    return(arr[1])\n  }\n  \n  return(arr[1:k])\n}\n", "\n\
    \    if (k > length(arr)) {\n        return(NULL)\n    }\n    \n    if (k == 1)\
    \ {\n        return(sort(arr))\n    }\n    \n    if (k == 2) {\n        return(sort(arr[1:2]))\n\
    \    }\n    \n    if (k == 3) {\n        return(sort(arr[1:3]))\n    }\n    \n\
    \    if (k == 4) {\n        return(sort(arr[1:4]))\n    }\n    \n    if (k ==\
    \ 5) {\n        return(sort(arr[1:5]))\n    }\n    \n    if (k == 6) {\n     \
    \   return(sort(arr[1:6]))\n    }\n    \n    if (k == 7) {\n        return(sort(arr[1:7]))\n\
    \    }\n    \n    if (k == 8) {\n        return(sort(arr[1:8]))\n    }\n    \n\
    \    if (k == 9) {\n        return(sort(arr[1:9]))\n    }\n    \n    if (k ==\
    \ 10) {\n        return(sort(arr[1:10]))\n    }\n    \n    if (k == 11) {\n  \
    \      return(sort(arr[1:11]))\n    }\n    \n    if (k == 12) {\n        return(sort(arr[1:12]))\n\
    \    }\n    \n    if (k == 13) {\n        return(sort(arr[1:13]))\n    }\n   \
    \ \n    if (k == 14) {\n        return(sort(arr[1:14]))\n    }\n    \n    if (k\
    \ == 15) {\n        return(sort(arr[1:15]))\n    }\n    \n    if (k == 16) {\n\
    \        return(sort(arr[1:16]))\n    }\n    \n    if (k == 17) {\n        return(sort(arr[1:17]))\n\
    \    }\n    \n    if (k == 18) {\n        return(sort(arr[1:18]))\n    }\n   \
    \ \n    if (k == 19) {", "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n\
    \  \n  if (k == 1) {\n    return(sort(arr))\n  }\n  \n  max <- arr[1]\n  for (i\
    \ in 2:k) {\n    if (arr[i] > max) {\n      max <- arr[i]\n    }\n  }\n  \n  return(sort(arr[1:k]))\n\
    }\n", "\n  arr <- arr[order(arr)]\n  if (k > length(arr)) {\n    return(arr)\n\
    \  } else {\n    return(arr[1:k])\n  }\n}\n", "\n    if (k > length(arr)) {\n\
    \        return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n \
    \   }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k\
    \ == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n    if (k == 4) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4]))\n    }\n    if (k == 5) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n    }\n    if (k ==\
    \ 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  \
    \  }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k == 9) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n    if (k\
    \ == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n        return(c(arr[1],\
    \ arr[2", "\n    if (k > len(arr)) {\n        return(NULL)\n    }\n    if (k ==\
    \ 1) {\n        return(arr[1])\n    }\n    if (k == 2) {\n        return(c(arr[1],\
    \ arr[2]))\n    }\n    if (k == len(arr)) {\n        return(arr)\n    }\n    if\
    \ (arr[k] > arr[k - 1]) {\n        return(arr[k])\n    }\n    if (arr[k] < arr[k\
    \ - 1]) {\n        return(arr[k - 1])\n    }\n    if (arr[k] == arr[k - 1]) {\n\
    \        return(c(arr[k], arr[k - 1]))\n    }\n}\n", "\n  arr <- arr[order(arr)]\n\
    \  if (k == 1) {\n    return(arr)\n  }\n  \n  if (k > length(arr)) {\n    return(arr)\n\
    \  }\n  \n  return(arr[1:k])\n}\n\nprint(maximum(c(-3, -4, 5), 3))\nprint(maximum(c(4,\
    \ -4, 4), 2))\nprint(maximum(c(-3, 2, 1, 2, -1, -2, 1), 1))\n", "\n    if (k >\
    \ length(arr)) {\n        return(NULL)\n    }\n    \n    if (k == 1) {\n     \
    \   return(sort(arr))\n    }\n    \n    if (k == 2) {\n        return(sort(arr[1:2]))\n\
    \    }\n    \n    if (k == 3) {\n        return(sort(arr[1:3]))\n    }\n    \n\
    \    if (k == 4) {\n        return(sort(arr[1:4]))\n    }\n    \n    if (k ==\
    \ 5) {\n        return(sort(arr[1:5]))\n    }\n    \n    if (k == 6) {\n     \
    \   return(sort(arr[1:6]))\n    }\n    \n    if (k == 7) {\n        return(sort(arr[1:7]))\n\
    \    }\n    \n    if (k == 8) {\n        return(sort(arr[1:8]))\n    }\n    \n\
    \    if (k == 9) {\n        return(sort(arr[1:9]))\n    }\n    \n    if (k ==\
    \ 10) {\n        return(sort(arr[1:10]))\n    }\n    \n    if (k == 11) {\n  \
    \      return(sort(arr[1:11]))\n    }\n    \n    if (k == 12) {\n        return(sort(arr[1:12]))\n\
    \    }\n    \n    if (k == 13) {\n        return(sort(arr[1:13]))\n    }\n   \
    \ \n    if (k == 14) {\n        return(sort(arr[1:14]))\n    }\n    \n    if (k\
    \ == 15) {\n        return(sort(arr[1:15]))\n    }\n    \n    if (k == 16) {\n\
    \        return(sort(arr[1:16]))\n    }\n    \n    if (k == 17) {\n        return(sort(arr[1:17]))\n\
    \    }\n    \n    if (k == 18) {\n        return(sort(arr[1:18]))\n    }\n   \
    \ \n    if (k == 19) {", "\n    if (k > len(arr)) {\n        return(NULL)\n  \
    \  }\n    if (k == 1) {\n        return(sort(arr))\n    }\n    if (k == 2) {\n\
    \        return(c(arr[1], arr[2]))\n    }\n    if (k == 3) {\n        return(c(arr[1],\
    \ arr[2], arr[3]))\n    }\n    if (k == 4) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4]))\n    }\n    if (k == 5) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n    }\n    if (k == 6) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6]))\n    }\n    if (k == 7) {\n       \
    \ return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n    }\n \
    \   if (k == 8) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8]))\n    }\n    if (k == 9) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n    }\n    if (k ==\
    \ 10) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10]))\n    }\n    if (k == 11) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \    }\n    if (k == 12) {\n        return(c(arr[1], arr[2", "\n    if (k > length(arr))\
    \ {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n\
    \    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k\
    \ == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n    if (k == 4) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4]))\n    }\n    if (k == 5) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n    }\n    if (k ==\
    \ 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  \
    \  }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k == 9) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n    if (k\
    \ == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n        return(c(arr[1],\
    \ arr[2", "\n  if (k > length(arr)) {\n    return(list())\n  }\n  if (k == 1)\
    \ {\n    return(sort(arr))\n  }\n  if (k == 2) {\n    return(sort(arr[1:2]))\n\
    \  }\n  if (k == 3) {\n    return(sort(arr[1:3]))\n  }\n  if (k == 4) {\n    return(sort(arr[1:4]))\n\
    \  }\n  if (k == 5) {\n    return(sort(arr[1:5]))\n  }\n  if (k == 6) {\n    return(sort(arr[1:6]))\n\
    \  }\n  if (k == 7) {\n    return(sort(arr[1:7]))\n  }\n  if (k == 8) {\n    return(sort(arr[1:8]))\n\
    \  }\n  if (k == 9) {\n    return(sort(arr[1:9]))\n  }\n  if (k == 10) {\n   \
    \ return(sort(arr[1:10]))\n  }\n  if (k == 11) {\n    return(sort(arr[1:11]))\n\
    \  }\n  if (k == 12) {\n    return(sort(arr[1:12]))\n  }\n  if (k == 13) {\n \
    \   return(sort(arr[1:13]))\n  }\n  if (k == 14) {\n    return(sort(arr[1:14]))\n\
    \  }\n  if (k == 15) {\n    return(sort(arr[1:15]))\n  }\n  if (k == 16) {\n \
    \   return(sort(arr[1:16]))\n  }\n  if (k == 17) {\n    return(sort(arr[1:17]))\n\
    \  }\n  if (k == 18) {\n    return(sort(arr[1:18]))\n  }\n  if (k == 19) {\n \
    \   return(sort(arr[1:19]))\n  }\n  if (k == 20) {\n    return(sort(arr[1:20]))",
  "\n    if (k > length(arr)) {\n        return(NULL)\n    }\n    if (k == 1) {\n\
    \        return(sort(arr))\n    }\n    if (k == 2) {\n        return(sort(arr[-1:1]))\n\
    \    }\n    if (k == 3) {\n        return(sort(arr[-2:1]))\n    }\n    if (k ==\
    \ 4) {\n        return(sort(arr[-3:1]))\n    }\n    if (k == 5) {\n        return(sort(arr[-4:1]))\n\
    \    }\n    if (k == 6) {\n        return(sort(arr[-5:1]))\n    }\n    if (k ==\
    \ 7) {\n        return(sort(arr[-6:1]))\n    }\n    if (k == 8) {\n        return(sort(arr[-7:1]))\n\
    \    }\n    if (k == 9) {\n        return(sort(arr[-8:1]))\n    }\n    if (k ==\
    \ 10) {\n        return(sort(arr[-9:1]))\n    }\n    if (k == 11) {\n        return(sort(arr[-10:1]))\n\
    \    }\n    if (k == 12) {\n        return(sort(arr[-11:1]))\n    }\n    if (k\
    \ == 13) {\n        return(sort(arr[-12:1]))\n    }\n    if (k == 14) {\n    \
    \    return(sort(arr[-13:1]))\n    }\n    if (k == 15) {\n        return(sort(arr[-14:1]))\n\
    \    }\n    if (k == 16) {\n        return(sort(arr[-15:1]))\n    }\n    if (k\
    \ == 17) {\n        return(sort(arr[-16:1]))\n    }\n    if (k == 18) {\n    \
    \    return(sort(arr[-17:1]))\n    }\n    if (k == 19) {\n        return(sort(arr[-18:1]))\n\
    \    }\n    if (", "\n    if (k > length(arr)) {\n        return(NULL)\n    }\n\
    \    if (k == 1) {\n        return(sort(arr))\n    }\n    if (k == 2) {\n    \
    \    return(sort(arr[1:2]))\n    }\n    if (k == 3) {\n        return(sort(arr[1:3]))\n\
    \    }\n    if (k == 4) {\n        return(sort(arr[1:4]))\n    }\n    if (k ==\
    \ 5) {\n        return(sort(arr[1:5]))\n    }\n    if (k == 6) {\n        return(sort(arr[1:6]))\n\
    \    }\n    if (k == 7) {\n        return(sort(arr[1:7]))\n    }\n    if (k ==\
    \ 8) {\n        return(sort(arr[1:8]))\n    }\n    if (k == 9) {\n        return(sort(arr[1:9]))\n\
    \    }\n    if (k == 10) {\n        return(sort(arr[1:10]))\n    }\n    if (k\
    \ == 11) {\n        return(sort(arr[1:11]))\n    }\n    if (k == 12) {\n     \
    \   return(sort(arr[1:12]))\n    }\n    if (k == 13) {\n        return(sort(arr[1:13]))\n\
    \    }\n    if (k == 14) {\n        return(sort(arr[1:14]))\n    }\n    if (k\
    \ == 15) {\n        return(sort(arr[1:15]))\n    }\n    if (k == 16) {\n     \
    \   return(sort(arr[1:16]))\n    }\n    if (k == 17) {\n        return(sort(arr[1:17]))\n\
    \    }\n    if (k == 18) {\n        return(sort(arr[1:18]))\n    }\n    if (k\
    \ == 19) {\n        return(sort(arr[1:19]))\n    }\n    if (k == 20) {\n     \
    \   return(sort(arr[1:20]))", "\n  if (k > length(arr)) {\n    return(NULL)\n\
    \  }\n  if (k == 1) {\n    return(arr[1])\n  }\n  if (k == 2) {\n    return(c(arr[1],\
    \ arr[2]))\n  }\n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n\
    \  if (k == 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  if (k\
    \ == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  }\n  if (k\
    \ == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  }\n\
    \  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7]))\n  }\n  if (k == 8) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8]))\n  }\n  if (k == 9) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  }\n  if\
    \ (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10]))\n  }\n  if (k == 11) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \  }\n  if (k == 12) {\n    return(c(arr[1], arr[2", "\n  if (k > length(arr))\
    \ {\n    return(NULL)\n  }\n  \n  if (k == 1) {\n    return(sort(arr))\n  }\n\
    \  \n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  \n  if (k == 3) {\n\
    \    return(c(arr[1], arr[2], arr[3]))\n  }\n  \n  if (k == 4) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4]))\n  }\n  \n  if (k == 5) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n  }\n  \n  if (k == 6) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6]))\n  }\n  \n  if (k == 7) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n  }\n  \n  if (k == 8) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n\
    \  }\n  \n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9]))\n  }\n  \n  if (k == 10) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n\
    \  }\n  \n  if (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n  }", "\n  if (k > length(arr))\
    \ {\n    return(NULL)\n  }\n  \n  if (k == 1) {\n    return(sort(arr))\n  }\n\
    \  \n  max <- max(arr[1:k])\n  \n  if (max == arr[1]) {\n    return(arr[1:k])\n\
    \  }\n  \n  if (max == arr[k]) {\n    return(arr[1:k])\n  }\n  \n  return(c(arr[1],\
    \ arr[k]))\n}\n\nprint(maximum(c(-3, -4, 5), 3))\nprint(maximum(c(4, -4, 4), 2))\n\
    print(maximum(c(-3, 2, 1, 2, -1, -2, 1), 1))\n", "\n  if (k > length(arr)) {\n\
    \    return(NULL)\n  }\n  if (k == 1) {\n    return(arr[1])\n  }\n  if (k == 2)\
    \ {\n    return(c(arr[1], arr[2]))\n  }\n  if (k == 3) {\n    return(c(arr[1],\
    \ arr[2], arr[3]))\n  }\n  if (k == 4) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4]))\n  }\n  if (k == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5]))\n  }\n  if (k == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6]))\n  }\n  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7]))\n  }\n  if (k == 8) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n  }\n  if (k == 9)\
    \ {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n  }\n  if (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n  }\n  if (k == 11) {\n \
    \   return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9],\
    \ arr[10], arr[11]))\n  }\n  if (k == 12) {\n    return(c(arr[1], arr[2", "\n\
    \  if (k > length(arr)) {\n    return(list())\n  }\n  if (k == 1) {\n    return(sort(arr))\n\
    \  }\n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  if (k == 3) {\n \
    \   return(c(arr[1], arr[2], arr[3]))\n  }\n  if (k == 4) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4]))\n  }\n  if (k == 5) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n  }\n  if (k == 6) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6]))\n  }\n  if (k == 7) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n  }\n  if (k == 8) {\n   \
    \ return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n\
    \  }\n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9]))\n  }\n  if (k == 10) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n  }\n  if\
    \ (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n  }\n  if (k == 12) {\n    return(c(arr[1],\
    \ arr[2", "\n    if (k == 1) {\n        return(sort(arr))\n    }\n    if (k ==\
    \ 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k == 3) {\n        return(c(arr[1],\
    \ arr[2], arr[3]))\n    }\n    if (k == 4) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4]))\n    }\n    if (k == 5) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n    }\n    if (k == 6) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6]))\n    }\n    if (k == 7) {\n       \
    \ return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n    }\n \
    \   if (k == 8) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8]))\n    }\n    if (k == 9) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n    }\n    if (k ==\
    \ 10) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10]))\n    }\n    if (k == 11) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \    }\n    if (k == 12) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7", "\n    if (k > len(arr)) {\n        return(NULL)\n    }\n  \
    \  if (k == 1) {\n        return(arr[1])\n    }\n    if (k == 2) {\n        return(c(arr[1],\
    \ arr[2]))\n    }\n    if (k == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n\
    \    }\n    if (k == 4) {\n        return(c(arr[1], arr[2], arr[3], arr[4]))\n\
    \    }\n    if (k == 5) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n\
    \    }\n    if (k == 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6]))\n    }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k ==\
    \ 9) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n \
    \   if (k == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n    \
    \    return(c(arr[1], arr[2", "\n  if (k > length(arr)) {\n    return(NULL)\n\
    \  }\n  \n  arr <- arr[order(arr)]\n  \n  if (k == 1) {\n    return(arr[1])\n\
    \  }\n  \n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  \n  if (k ==\
    \ 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n  \n  if (k == 4) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4]))\n  }\n  \n  if (k == 5) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n  }\n  \n  if (k == 6) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6]))\n  }\n  \n  if (k == 7) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n  }\n  \n  if (k == 8) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n\
    \  }\n  \n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9]))\n  }\n  \n  if (k == 10) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n\
    \  }\n  \n  if (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9],", "\n  if (k > length(arr)) {\n    return(list())\n\
    \  }\n  if (k == 1) {\n    return(sort(arr))\n  }\n  if (k == 2) {\n    return(c(arr[1],\
    \ arr[2]))\n  }\n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n\
    \  if (k == 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  if (k\
    \ == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  }\n  if (k\
    \ == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  }\n\
    \  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7]))\n  }\n  if (k == 8) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8]))\n  }\n  if (k == 9) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  }\n  if\
    \ (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10]))\n  }\n  if (k == 11) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \  }\n  if (k == 12) {\n    return(c(arr[1], arr[2", "\n  if (k > length(arr))\
    \ {\n    return(NULL)\n  }\n  if (k == 1) {\n    return(sort(arr))\n  }\n  if\
    \ (k == 2) {\n    return(sort(arr[1:2]))\n  }\n  if (k == 3) {\n    return(sort(arr[1:3]))\n\
    \  }\n  if (k == 4) {\n    return(sort(arr[1:4]))\n  }\n  if (k == 5) {\n    return(sort(arr[1:5]))\n\
    \  }\n  if (k == 6) {\n    return(sort(arr[1:6]))\n  }\n  if (k == 7) {\n    return(sort(arr[1:7]))\n\
    \  }\n  if (k == 8) {\n    return(sort(arr[1:8]))\n  }\n  if (k == 9) {\n    return(sort(arr[1:9]))\n\
    \  }\n  if (k == 10) {\n    return(sort(arr[1:10]))\n  }\n  if (k == 11) {\n \
    \   return(sort(arr[1:11]))\n  }\n  if (k == 12) {\n    return(sort(arr[1:12]))\n\
    \  }\n  if (k == 13) {\n    return(sort(arr[1:13]))\n  }\n  if (k == 14) {\n \
    \   return(sort(arr[1:14]))\n  }\n  if (k == 15) {\n    return(sort(arr[1:15]))\n\
    \  }\n  if (k == 16) {\n    return(sort(arr[1:16]))\n  }\n  if (k == 17) {\n \
    \   return(sort(arr[1:17]))\n  }\n  if (k == 18) {\n    return(sort(arr[1:18]))\n\
    \  }\n  if (k == 19) {\n    return(sort(arr[1:19]))\n  }\n  if (k == 20) {\n \
    \   return(sort(arr[1:20]))", "\n  if (k > length(arr)) {\n    return(NULL)\n\
    \  }\n  if (k == 1) {\n    return(sort(arr))\n  }\n  if (k == 2) {\n    return(sort(arr[1:2]))\n\
    \  }\n  if (k == 3) {\n    return(sort(arr[1:3]))\n  }\n  if (k == 4) {\n    return(sort(arr[1:4]))\n\
    \  }\n  if (k == 5) {\n    return(sort(arr[1:5]))\n  }\n  if (k == 6) {\n    return(sort(arr[1:6]))\n\
    \  }\n  if (k == 7) {\n    return(sort(arr[1:7]))\n  }\n  if (k == 8) {\n    return(sort(arr[1:8]))\n\
    \  }\n  if (k == 9) {\n    return(sort(arr[1:9]))\n  }\n  if (k == 10) {\n   \
    \ return(sort(arr[1:10]))\n  }\n  if (k == 11) {\n    return(sort(arr[1:11]))\n\
    \  }\n  if (k == 12) {\n    return(sort(arr[1:12]))\n  }\n  if (k == 13) {\n \
    \   return(sort(arr[1:13]))\n  }\n  if (k == 14) {\n    return(sort(arr[1:14]))\n\
    \  }\n  if (k == 15) {\n    return(sort(arr[1:15]))\n  }\n  if (k == 16) {\n \
    \   return(sort(arr[1:16]))\n  }\n  if (k == 17) {\n    return(sort(arr[1:17]))\n\
    \  }\n  if (k == 18) {\n    return(sort(arr[1:18]))\n  }\n  if (k == 19) {\n \
    \   return(sort(arr[1:19]))\n  }\n  if (k == 20) {\n    return(sort(arr[1:20]))",
  "\n    if (k > len(arr)) {\n        return(list())\n    }\n    if (k == 1) {\n \
    \       return(sort(arr))\n    }\n    if (k == 2) {\n        return(sort(arr[-1]))\n\
    \    }\n    if (k == 3) {\n        return(sort(arr[-2]))\n    }\n    if (k ==\
    \ 4) {\n        return(sort(arr[-3]))\n    }\n    if (k == 5) {\n        return(sort(arr[-4]))\n\
    \    }\n    if (k == 6) {\n        return(sort(arr[-5]))\n    }\n    if (k ==\
    \ 7) {\n        return(sort(arr[-6]))\n    }\n    if (k == 8) {\n        return(sort(arr[-7]))\n\
    \    }\n    if (k == 9) {\n        return(sort(arr[-8]))\n    }\n    if (k ==\
    \ 10) {\n        return(sort(arr[-9]))\n    }\n    if (k == 11) {\n        return(sort(arr[-10]))\n\
    \    }\n    if (k == 12) {\n        return(sort(arr[-11]))\n    }\n    if (k ==\
    \ 13) {\n        return(sort(arr[-12]))\n    }\n    if (k == 14) {\n        return(sort(arr[-13]))\n\
    \    }\n    if (k == 15) {\n        return(sort(arr[-14]))\n    }\n    if (k ==\
    \ 16) {\n        return(sort(arr[-15]))\n    }\n    if (k == 17) {\n        return(sort(arr[-16]))\n\
    \    }\n    if (k == 18) {\n        return(sort(arr[-17]))\n    }\n    if (k ==\
    \ 19) {\n        return(sort(arr[-18]))\n    }\n    if (k == 20) {\n        return(sort(arr[-19]))\n\
    \    }\n    if (k == 21) {\n        return(sort(arr", "\n    if (k > length(arr))\
    \ {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(arr[1])\n\
    \    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k\
    \ == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n    if (k == 4) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4]))\n    }\n    if (k == 5) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n    }\n    if (k ==\
    \ 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  \
    \  }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k == 9) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n    if (k\
    \ == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n        return(c(arr[1],\
    \ arr[2", "\n    if (k > len(arr)) {\n        return(list())\n    }\n    if (k\
    \ == 1) {\n        return(arr[1])\n    }\n    if (k == 2) {\n        return(c(arr[1],\
    \ arr[2]))\n    }\n    if (k == len(arr)) {\n        return(arr)\n    }\n    max\
    \ <- arr[1]\n    for (i in 2:k) {\n        if (arr[i] > max) {\n            max\
    \ <- arr[i]\n        }\n    }\n    return(arr[1:k])\n}\n", "\n    if (k > length(arr))\
    \ {\n        return(NULL)\n    }\n    \n    if (k == 1) {\n        return(arr[1])\n\
    \    }\n    \n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n  \
    \  \n    if (k == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n   \
    \ \n    if (k == 4) {\n        return(c(arr[1], arr[2], arr[3], arr[4]))\n   \
    \ }\n    \n    if (k == 5) {\n        return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5]))\n    }\n    \n    if (k == 6) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6]))\n    }\n    \n    if (k == 7) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n    }\n    \n    if (k ==\
    \ 8) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8]))\n    }\n    \n    if (k == 9) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n    }\n    \n    if (k ==\
    \ 10) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10]))\n    }\n    \n    if (k == 11) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \    }", "\n    if (k > length(arr)) {\n        return(NULL)\n    }\n    if (k\
    \ == 1) {\n        return(sort(arr))\n    }\n    if (k == 2) {\n        return(c(arr[1],\
    \ arr[2]))\n    }\n    if (k == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n\
    \    }\n    if (k == 4) {\n        return(c(arr[1], arr[2], arr[3], arr[4]))\n\
    \    }\n    if (k == 5) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n\
    \    }\n    if (k == 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6]))\n    }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k ==\
    \ 9) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n \
    \   if (k == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n    \
    \    return(c(arr[1], arr[2", "\n    if (k > length(arr)) {\n        return(NULL)\n\
    \    }\n    \n    if (k == 1) {\n        return(sort(arr))\n    }\n    \n    if\
    \ (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    \n    if (k == 3)\
    \ {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n    \n    if (k == 4) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4]))\n    }\n    \n    if (k ==\
    \ 5) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n    }\n   \
    \ \n    if (k == 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6]))\n    }\n    \n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7]))\n    }\n    \n    if (k == 8) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    \n    if\
    \ (k == 9) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9]))\n    }\n    \n    if (k == 10) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n\
    \    }\n    \n    if (k == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n    }", "\n  if\
    \ (k > length(arr)) {\n    return(NULL)\n  }\n  \n  if (k == 1) {\n    return(sort(arr))\n\
    \  }\n  \n  if (k == 2) {\n    return(sort(arr[-1]))\n  }\n  \n  if (k == 3) {\n\
    \    return(sort(arr[-2]))\n  }\n  \n  if (k == 4) {\n    return(sort(arr[-3]))\n\
    \  }\n  \n  if (k == 5) {\n    return(sort(arr[-4]))\n  }\n  \n  if (k == 6) {\n\
    \    return(sort(arr[-5]))\n  }\n  \n  if (k == 7) {\n    return(sort(arr[-6]))\n\
    \  }\n  \n  if (k == 8) {\n    return(sort(arr[-7]))\n  }\n  \n  if (k == 9) {\n\
    \    return(sort(arr[-8]))\n  }\n  \n  if (k == 10) {\n    return(sort(arr[-9]))\n\
    \  }\n  \n  if (k == 11) {\n    return(sort(arr[-10]))\n  }\n  \n  if (k == 12)\
    \ {\n    return(sort(arr[-11]))\n  }\n  \n  if (k == 13) {\n    return(sort(arr[-12]))\n\
    \  }\n  \n  if (k == 14) {\n    return(sort(arr[-13]))\n  }\n  \n  if (k == 15)\
    \ {\n    return(sort(arr[-14]))\n  }\n  \n  if (k == 16) {\n    return(sort(arr[-15]))\n\
    \  }\n  \n  if (k == 17) {\n    return(sort(arr[-16]))\n  }\n  \n  if (k == 18)\
    \ {\n    return(sort(arr[-17]))\n  }\n  \n  if (k == 19) {\n    return(sort(arr[-18]))\n\
    \  }\n  ", "\n  arr <- arr[order(arr)]\n  if (k == 1) return(arr)\n  if (k ==\
    \ 2) return(c(arr[1], arr[2]))\n  if (k == 3) return(c(arr[1], arr[2], arr[3]))\n\
    \  if (k == 4) return(c(arr[1], arr[2], arr[3], arr[4]))\n  if (k == 5) return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5]))\n  if (k == 6) return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6]))\n  if (k == 7) return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7]))\n  if (k == 8) return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8]))\n  if (k == 9) return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  if (k == 10) return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n\
    \  if (k == 11) return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n  if (k == 12) return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11], arr[12]))\n\
    \  if (k == 13) return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7",
  "\n    if (k > len(arr)) {\n        return(NULL)\n    }\n    if (k == 1) {\n   \
    \     return(arr[1])\n    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n\
    \    }\n    if (k == len(arr)) {\n        return(arr)\n    }\n    if (arr[k] >\
    \ arr[k - 1]) {\n        return(arr[k])\n    }\n    if (arr[k] < arr[k - 1]) {\n\
    \        return(arr[k - 1])\n    }\n    if (arr[k] == arr[k - 1]) {\n        return(c(arr[k],\
    \ arr[k - 1]))\n    }\n}\n", "\n  if (k > len(arr)) {\n    return(list())\n  }\n\
    \  if (k == 1) {\n    return(sort(arr))\n  }\n  if (k == 2) {\n    return(c(arr[1],\
    \ arr[2]))\n  }\n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n\
    \  if (k == 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  if (k\
    \ == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  }\n  if (k\
    \ == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  }\n\
    \  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7]))\n  }\n  if (k == 8) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8]))\n  }\n  if (k == 9) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  }\n  if\
    \ (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10]))\n  }\n  if (k == 11) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \  }\n  if (k == 12) {\n    return(c(arr[1], arr[2", "\n  if (k > len(arr)) {\n\
    \    return(NULL)\n  }\n  if (k == 1) {\n    return(sort(arr))\n  }\n  if (k ==\
    \ 2) {\n    return(c(arr[1], arr[2]))\n  }\n  if (k == 3) {\n    return(c(arr[1],\
    \ arr[2], arr[3]))\n  }\n  if (k == 4) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4]))\n  }\n  if (k == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5]))\n  }\n  if (k == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6]))\n  }\n  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7]))\n  }\n  if (k == 8) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n  }\n  if (k == 9)\
    \ {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n  }\n  if (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n  }\n  if (k == 11) {\n \
    \   return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9],\
    \ arr[10], arr[11]))\n  }\n  if (k == 12) {\n    return(c(arr[1], arr[2", "\n\
    \  arr <- arr[order(arr)]\n  return(arr[seq_len(k)])\n}\n", "\n  if (k > length(arr))\
    \ {\n    return(NULL)\n  }\n  \n  if (k == 1) {\n    return(sort(arr))\n  }\n\
    \  \n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  \n  if (k == 3) {\n\
    \    return(c(arr[1], arr[2], arr[3]))\n  }\n  \n  if (k == 4) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4]))\n  }\n  \n  if (k == 5) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n  }\n  \n  if (k == 6) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6]))\n  }\n  \n  if (k == 7) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n  }\n  \n  if (k == 8) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n\
    \  }\n  \n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9]))\n  }\n  \n  if (k == 10) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n\
    \  }\n  \n  if (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n  }", "\n    if (k == 1)\
    \ {\n        return(sort(arr))\n    }\n    if (k == 2) {\n        return(sort(arr[1:2]))\n\
    \    }\n    if (k == 3) {\n        return(sort(arr[1:3]))\n    }\n    if (k ==\
    \ 4) {\n        return(sort(arr[1:4]))\n    }\n    if (k == 5) {\n        return(sort(arr[1:5]))\n\
    \    }\n    if (k == 6) {\n        return(sort(arr[1:6]))\n    }\n    if (k ==\
    \ 7) {\n        return(sort(arr[1:7]))\n    }\n    if (k == 8) {\n        return(sort(arr[1:8]))\n\
    \    }\n    if (k == 9) {\n        return(sort(arr[1:9]))\n    }\n    if (k ==\
    \ 10) {\n        return(sort(arr[1:10]))\n    }\n    if (k == 11) {\n        return(sort(arr[1:11]))\n\
    \    }\n    if (k == 12) {\n        return(sort(arr[1:12]))\n    }\n    if (k\
    \ == 13) {\n        return(sort(arr[1:13]))\n    }\n    if (k == 14) {\n     \
    \   return(sort(arr[1:14]))\n    }\n    if (k == 15) {\n        return(sort(arr[1:15]))\n\
    \    }\n    if (k == 16) {\n        return(sort(arr[1:16]))\n    }\n    if (k\
    \ == 17) {\n        return(sort(arr[1:17]))\n    }\n    if (k == 18) {\n     \
    \   return(sort(arr[1:18]))\n    }\n    if (k == 19) {\n        return(sort(arr[1:19]))\n\
    \    }\n    if (k == 20) {\n        return(sort(arr[1:20]))\n    }\n    if (k\
    \ == 21) {\n        return(sort(arr[", "\n  if (k > length(arr)) {\n    return(NULL)\n\
    \  }\n  \n  if (k == 1) {\n    return(arr[1])\n  }\n  \n  if (k == 2) {\n    return(c(arr[1],\
    \ arr[2]))\n  }\n  \n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n\
    \  }\n  \n  if (k == 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n\
    \  \n  if (k == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n\
    \  }\n  \n  if (k == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6]))\n  }\n  \n  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7]))\n  }\n  \n  if (k == 8) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n  }\n  \n  if (k == 9) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n  }\n  \n  if (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n  }\n  \n  if (k == 11) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9], arr[10], arr[11]))\n  }", "\n  if (k > length(arr)) {\n    return(NULL)\n\
    \  }\n  \n  arr <- arr[order(arr)]\n  \n  if (k == 1) {\n    return(arr[1])\n\
    \  }\n  \n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  \n  return(arr[1:k])\n\
    }\n", "\n    if (k > length(arr)) {\n        return(NULL)\n    }\n    if (k ==\
    \ 1) {\n        return(sort(arr))\n    }\n    if (k == 2) {\n        return(c(arr[1],\
    \ arr[2]))\n    }\n    if (k == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n\
    \    }\n    if (k == 4) {\n        return(c(arr[1], arr[2], arr[3], arr[4]))\n\
    \    }\n    if (k == 5) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n\
    \    }\n    if (k == 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6]))\n    }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k ==\
    \ 9) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n \
    \   if (k == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n    \
    \    return(c(arr[1], arr[2", "\n  arr <- arr[order(arr)]\n  return(arr[1:k])\n\
    }\n", "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  if (k == 1) {\n  \
    \  return(sort(arr))\n  }\n  if (k == 2) {\n    return(sort(arr[1:2]))\n  }\n\
    \  if (k == 3) {\n    return(sort(arr[1:3]))\n  }\n  if (k == 4) {\n    return(sort(arr[1:4]))\n\
    \  }\n  if (k == 5) {\n    return(sort(arr[1:5]))\n  }\n  if (k == 6) {\n    return(sort(arr[1:6]))\n\
    \  }\n  if (k == 7) {\n    return(sort(arr[1:7]))\n  }\n  if (k == 8) {\n    return(sort(arr[1:8]))\n\
    \  }\n  if (k == 9) {\n    return(sort(arr[1:9]))\n  }\n  if (k == 10) {\n   \
    \ return(sort(arr[1:10]))\n  }\n  if (k == 11) {\n    return(sort(arr[1:11]))\n\
    \  }\n  if (k == 12) {\n    return(sort(arr[1:12]))\n  }\n  if (k == 13) {\n \
    \   return(sort(arr[1:13]))\n  }\n  if (k == 14) {\n    return(sort(arr[1:14]))\n\
    \  }\n  if (k == 15) {\n    return(sort(arr[1:15]))\n  }\n  if (k == 16) {\n \
    \   return(sort(arr[1:16]))\n  }\n  if (k == 17) {\n    return(sort(arr[1:17]))\n\
    \  }\n  if (k == 18) {\n    return(sort(arr[1:18]))\n  }\n  if (k == 19) {\n \
    \   return(sort(arr[1:19]))\n  }\n  if (k == 20) {\n    return(sort(arr[1:20]))",
  "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  \n  if (k == 1) {\n    return(sort(arr))\n\
    \  }\n  \n  max <- arr[1]\n  max_index <- 1\n  \n  for (i in 2:length(arr)) {\n\
    \    if (arr[i] > max) {\n      max <- arr[i]\n      max_index <- i\n    }\n \
    \ }\n  \n  if (k == max_index) {\n    return(sort(arr[1:max_index]))\n  }\n  \n\
    \  return(sort(arr[1:max_index]))\n}\n", "\n    if (k > len(arr)) {\n        return(list())\n\
    \    }\n    if (k == 1) {\n        return(sort(arr))\n    }\n    if (k == 2) {\n\
    \        return(c(arr[1], arr[2]))\n    }\n    if (k == len(arr)) {\n        return(sort(arr))\n\
    \    }\n    if (arr[k] > arr[k - 1]) {\n        return(sort(arr[1:k]))\n    }\n\
    \    if (arr[k] < arr[k - 1]) {\n        return(sort(arr[1:k - 1]))\n    }\n \
    \   if (arr[k] == arr[k - 1]) {\n        return(sort(arr[1:k - 1]))\n    }\n}\n",
  "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  if (k == 1) {\n    return(arr[1])\n\
    \  }\n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  if (k == 3) {\n \
    \   return(c(arr[1], arr[2], arr[3]))\n  }\n  if (k == 4) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4]))\n  }\n  if (k == 5) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n  }\n  if (k == 6) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6]))\n  }\n  if (k == 7) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n  }\n  if (k == 8) {\n   \
    \ return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n\
    \  }\n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9]))\n  }\n  if (k == 10) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n  }\n  if\
    \ (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n  }\n  if (k == 12) {\n    return(c(arr[1],\
    \ arr[2", "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  if (k == 1) {\n\
    \    return(sort(arr))\n  }\n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n\
    \  }\n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n  if (k ==\
    \ 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  if (k == 5) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  }\n  if (k == 6) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  }\n  if (k ==\
    \ 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n\
    \  }\n  if (k == 8) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8]))\n  }\n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  }\n  if (k == 10) {\n  \
    \  return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9],\
    \ arr[10]))\n  }\n  if (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n  }\n  if (k ==\
    \ 12) {\n    return(c(arr[1], arr[2", "\n    if (k > len(arr)) {\n        return(NULL)\n\
    \    }\n    if (k == 1) {\n        return(arr[1])\n    }\n    if (k == 2) {\n\
    \        return(c(arr[1], arr[2]))\n    }\n    if (k == 3) {\n        return(c(arr[1],\
    \ arr[2], arr[3]))\n    }\n    if (k == 4) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4]))\n    }\n    if (k == 5) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n    }\n    if (k == 6) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6]))\n    }\n    if (k == 7) {\n       \
    \ return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n    }\n \
    \   if (k == 8) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8]))\n    }\n    if (k == 9) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n    }\n    if (k ==\
    \ 10) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10]))\n    }\n    if (k == 11) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \    }\n    if (k == 12) {\n        return(c(arr[1], arr[2", "\n  if (k > length(arr))\
    \ {\n    return(NULL)\n  }\n  if (k == 1) {\n    return(sort(arr))\n  }\n  max\
    \ <- max(arr[1:k])\n  return(arr[which(arr == max)])\n}\n", "\n    if (k > len(arr))\
    \ {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n\
    \    }\n    if (k == 2) {\n        return(sort(arr[1:2]))\n    }\n    if (k ==\
    \ 3) {\n        return(sort(arr[1:3]))\n    }\n    if (k == 4) {\n        return(sort(arr[1:4]))\n\
    \    }\n    if (k == 5) {\n        return(sort(arr[1:5]))\n    }\n    if (k ==\
    \ 6) {\n        return(sort(arr[1:6]))\n    }\n    if (k == 7) {\n        return(sort(arr[1:7]))\n\
    \    }\n    if (k == 8) {\n        return(sort(arr[1:8]))\n    }\n    if (k ==\
    \ 9) {\n        return(sort(arr[1:9]))\n    }\n    if (k == 10) {\n        return(sort(arr[1:10]))\n\
    \    }\n    if (k == 11) {\n        return(sort(arr[1:11]))\n    }\n    if (k\
    \ == 12) {\n        return(sort(arr[1:12]))\n    }\n    if (k == 13) {\n     \
    \   return(sort(arr[1:13]))\n    }\n    if (k == 14) {\n        return(sort(arr[1:14]))\n\
    \    }\n    if (k == 15) {\n        return(sort(arr[1:15]))\n    }\n    if (k\
    \ == 16) {\n        return(sort(arr[1:16]))\n    }\n    if (k == 17) {\n     \
    \   return(sort(arr[1:17]))\n    }\n    if (k == 18) {\n        return(sort(arr[1:18]))\n\
    \    }\n    if (k == 19) {\n        return(sort(arr[1:19]))\n    }\n    if (k\
    \ == 20) {\n        return(sort(arr[1:20]))", "\n  if (k == 1) {\n    return(sort(arr))\n\
    \  }\n  if (k > len(arr)) {\n    return(sort(arr))\n  }\n  if (k == len(arr))\
    \ {\n    return(sort(arr))\n  }\n  if (k == 2) {\n    return(sort(arr))\n  }\n\
    \  if (k == 3) {\n    return(sort(arr))\n  }\n  if (k == 4) {\n    return(sort(arr))\n\
    \  }\n  if (k == 5) {\n    return(sort(arr))\n  }\n  if (k == 6) {\n    return(sort(arr))\n\
    \  }\n  if (k == 7) {\n    return(sort(arr))\n  }\n  if (k == 8) {\n    return(sort(arr))\n\
    \  }\n  if (k == 9) {\n    return(sort(arr))\n  }\n  if (k == 10) {\n    return(sort(arr))\n\
    \  }\n  if (k == 11) {\n    return(sort(arr))\n  }\n  if (k == 12) {\n    return(sort(arr))\n\
    \  }\n  if (k == 13) {\n    return(sort(arr))\n  }\n  if (k == 14) {\n    return(sort(arr))\n\
    \  }\n  if (k == 15) {\n    return(sort(arr))\n  }\n  if (k == 16) {\n    return(sort(arr))\n\
    \  }\n  if (k == 17) {\n    return(sort(arr))\n  }\n  if (k == 18) {\n    return(sort(arr))\n\
    \  }\n  if (k == 19) {\n    return(sort(arr))\n  }\n  if (k == 20) {\n    return(sort(arr))\n\
    \  }\n  if (k == 21) {\n    return(sort(arr))\n  }\n  if (k == 22) {\n    return(sort(arr))\n\
    \  }\n  if (k == 23) {\n    return(sort(arr))\n  }\n  if (k == 24)", "\n    if\
    \ (k > len(arr)) {\n        return(list())\n    }\n    if (k == 1) {\n       \
    \ return(sort(arr))\n    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n\
    \    }\n    if (k == len(arr)) {\n        return(sort(arr))\n    }\n    \n   \
    \ max_arr <- arr[1:k]\n    for (i in 2:k) {\n        max_arr <- c(max_arr, arr[i])\n\
    \    }\n    return(sort(max_arr))\n}\n\nprint(maximum(c(-3, -4, 5), 3))\nprint(maximum(c(4,\
    \ -4, 4), 2))\nprint(maximum(c(-3, 2, 1, 2, -1, -2, 1), 1))\n", "\n    if (k >\
    \ length(arr)) {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n\
    \    }\n    if (k == 2) {\n        return(sort(arr[1:2]))\n    }\n    if (k ==\
    \ 3) {\n        return(sort(arr[1:3]))\n    }\n    if (k == 4) {\n        return(sort(arr[1:4]))\n\
    \    }\n    if (k == 5) {\n        return(sort(arr[1:5]))\n    }\n    if (k ==\
    \ 6) {\n        return(sort(arr[1:6]))\n    }\n    if (k == 7) {\n        return(sort(arr[1:7]))\n\
    \    }\n    if (k == 8) {\n        return(sort(arr[1:8]))\n    }\n    if (k ==\
    \ 9) {\n        return(sort(arr[1:9]))\n    }\n    if (k == 10) {\n        return(sort(arr[1:10]))\n\
    \    }\n    if (k == 11) {\n        return(sort(arr[1:11]))\n    }\n    if (k\
    \ == 12) {\n        return(sort(arr[1:12]))\n    }\n    if (k == 13) {\n     \
    \   return(sort(arr[1:13]))\n    }\n    if (k == 14) {\n        return(sort(arr[1:14]))\n\
    \    }\n    if (k == 15) {\n        return(sort(arr[1:15]))\n    }\n    if (k\
    \ == 16) {\n        return(sort(arr[1:16]))\n    }\n    if (k == 17) {\n     \
    \   return(sort(arr[1:17]))\n    }\n    if (k == 18) {\n        return(sort(arr[1:18]))\n\
    \    }\n    if (k == 19) {\n        return(sort(arr[1:19]))\n    }\n    if (k\
    \ == 20) {\n        return(sort(arr[1:20]))", "\n  if (k > length(arr)) {\n  \
    \  return(NULL)\n  }\n  if (k == 1) {\n    return(sort(arr))\n  }\n  max <- arr[1]\n\
    \  for (i in 2:k) {\n    if (arr[i] > max) {\n      max <- arr[i]\n    }\n  }\n\
    \  return(sort(arr[1:k]))\n}\n", "\n  arr <- arr[order(arr)]\n  if (k > length(arr))\
    \ {\n    return(arr)\n  }\n  return(arr[1:k])\n}\n", "\n  if (k > length(arr))\
    \ {\n    return(NULL)\n  }\n  \n  if (k == 1) {\n    return(sort(arr))\n  }\n\
    \  \n  max <- arr[1]\n  \n  for (i in 2:k) {\n    if (arr[i] > max) {\n      max\
    \ <- arr[i]\n    }\n  }\n  \n  return(sort(arr[1:k]))\n}\n\nprint(maximum(c(-3,\
    \ -4, 5), 3))\nprint(maximum(c(4, -4, 4), 2))\nprint(maximum(c(-3, 2, 1, 2, -1,\
    \ -2, 1), 1))\n", "\n  if (k > length(arr)) {\n    return(list())\n  }\n  if (k\
    \ == 1) {\n    return(sort(arr))\n  }\n  if (k == 2) {\n    return(sort(arr[-1]))\n\
    \  }\n  if (k == 3) {\n    return(sort(arr[-2]))\n  }\n  if (k == 4) {\n    return(sort(arr[-3]))\n\
    \  }\n  if (k == 5) {\n    return(sort(arr[-4]))\n  }\n  if (k == 6) {\n    return(sort(arr[-5]))\n\
    \  }\n  if (k == 7) {\n    return(sort(arr[-6]))\n  }\n  if (k == 8) {\n    return(sort(arr[-7]))\n\
    \  }\n  if (k == 9) {\n    return(sort(arr[-8]))\n  }\n  if (k == 10) {\n    return(sort(arr[-9]))\n\
    \  }\n  if (k == 11) {\n    return(sort(arr[-10]))\n  }\n  if (k == 12) {\n  \
    \  return(sort(arr[-11]))\n  }\n  if (k == 13) {\n    return(sort(arr[-12]))\n\
    \  }\n  if (k == 14) {\n    return(sort(arr[-13]))\n  }\n  if (k == 15) {\n  \
    \  return(sort(arr[-14]))\n  }\n  if (k == 16) {\n    return(sort(arr[-15]))\n\
    \  }\n  if (k == 17) {\n    return(sort(arr[-16]))\n  }\n  if (k == 18) {\n  \
    \  return(sort(arr[-17]))\n  }\n  if (k == 19) {\n    return(sort(arr[-18]))\n\
    \  }\n  if (k == 20) {\n    return(sort(arr[-19]))\n  }\n  if (k == 21) {\n  \
    \  return(sort(arr", "\n    if (k > len(arr)) {\n        return(NULL)\n    }\n\
    \    if (k == 1) {\n        return(sort(arr))\n    }\n    if (k == 2) {\n    \
    \    return(sort(arr[1:2]))\n    }\n    if (k == 3) {\n        return(sort(arr[1:3]))\n\
    \    }\n    if (k == 4) {\n        return(sort(arr[1:4]))\n    }\n    if (k ==\
    \ 5) {\n        return(sort(arr[1:5]))\n    }\n    if (k == 6) {\n        return(sort(arr[1:6]))\n\
    \    }\n    if (k == 7) {\n        return(sort(arr[1:7]))\n    }\n    if (k ==\
    \ 8) {\n        return(sort(arr[1:8]))\n    }\n    if (k == 9) {\n        return(sort(arr[1:9]))\n\
    \    }\n    if (k == 10) {\n        return(sort(arr[1:10]))\n    }\n    if (k\
    \ == 11) {\n        return(sort(arr[1:11]))\n    }\n    if (k == 12) {\n     \
    \   return(sort(arr[1:12]))\n    }\n    if (k == 13) {\n        return(sort(arr[1:13]))\n\
    \    }\n    if (k == 14) {\n        return(sort(arr[1:14]))\n    }\n    if (k\
    \ == 15) {\n        return(sort(arr[1:15]))\n    }\n    if (k == 16) {\n     \
    \   return(sort(arr[1:16]))\n    }\n    if (k == 17) {\n        return(sort(arr[1:17]))\n\
    \    }\n    if (k == 18) {\n        return(sort(arr[1:18]))\n    }\n    if (k\
    \ == 19) {\n        return(sort(arr[1:19]))\n    }\n    if (k == 20) {\n     \
    \   return(sort(arr[1:20]))", "\n    if (k > length(arr)) {\n        return(NULL)\n\
    \    }\n    if (k == 1) {\n        return(arr[1])\n    }\n    if (k == 2) {\n\
    \        return(c(arr[1], arr[2]))\n    }\n    if (k == 3) {\n        return(c(arr[1],\
    \ arr[2], arr[3]))\n    }\n    if (k == 4) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4]))\n    }\n    if (k == 5) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n    }\n    if (k == 6) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6]))\n    }\n    if (k == 7) {\n       \
    \ return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n    }\n \
    \   if (k == 8) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8]))\n    }\n    if (k == 9) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n    }\n    if (k ==\
    \ 10) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10]))\n    }\n    if (k == 11) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \    }\n    if (k == 12) {\n        return(c(arr[1], arr[2", "\n    if (k > length(arr))\
    \ {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(arr[1])\n\
    \    }\n    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k\
    \ == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n    }\n    if (k == 4) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4]))\n    }\n    if (k == 5) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n    }\n    if (k ==\
    \ 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  \
    \  }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k == 9) {\n\
    \        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n    if (k\
    \ == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n        return(c(arr[1],\
    \ arr[2", "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  \n  if (k == 1)\
    \ {\n    return(sort(arr))\n  }\n  \n  if (k == 2) {\n    return(sort(arr)[1:2])\n\
    \  }\n  \n  if (k == 3) {\n    return(sort(arr)[1:3])\n  }\n  \n  if (k == 4)\
    \ {\n    return(sort(arr)[1:4])\n  }\n  \n  if (k == 5) {\n    return(sort(arr)[1:5])\n\
    \  }\n  \n  if (k == 6) {\n    return(sort(arr)[1:6])\n  }\n  \n  if (k == 7)\
    \ {\n    return(sort(arr)[1:7])\n  }\n  \n  if (k == 8) {\n    return(sort(arr)[1:8])\n\
    \  }\n  \n  if (k == 9) {\n    return(sort(arr)[1:9])\n  }\n  \n  if (k == 10)\
    \ {\n    return(sort(arr)[1:10])\n  }\n  \n  if (k == 11) {\n    return(sort(arr)[1:11])\n\
    \  }\n  \n  if (k == 12) {\n    return(sort(arr)[1:12])\n  }\n  \n  if (k == 13)\
    \ {\n    return(sort(arr)[1:13])\n  }\n  \n  if (k == 14) {\n    return(sort(arr)[1:14])\n\
    \  }\n  \n  if (k == 15) {\n    return(sort(arr)[1:15])\n  }\n  \n  if (k == 16)\
    \ {\n    return(sort(arr)[1:16])\n  }\n  \n  if (k == 17) {\n    return(sort(arr)[1:17])\n\
    \  }\n  \n  if (k == 18) {\n    return(sort(arr)[1:18])\n  }\n  \n  if (k == 19)\
    \ {\n    return(sort(arr)[1:19])\n  }\n  ", "\n    if (k > length(arr)) {\n  \
    \      return(list())\n    }\n    if (k == 1) {\n        return(sort(arr))\n \
    \   }\n    if (k == 2) {\n        return(sort(arr)[-2:])\n    }\n    if (k ==\
    \ 3) {\n        return(sort(arr)[-3:])\n    }\n    if (k == 4) {\n        return(sort(arr)[-4:])\n\
    \    }\n    if (k == 5) {\n        return(sort(arr)[-5:])\n    }\n    if (k ==\
    \ 6) {\n        return(sort(arr)[-6:])\n    }\n    if (k == 7) {\n        return(sort(arr)[-7:])\n\
    \    }\n    if (k == 8) {\n        return(sort(arr)[-8:])\n    }\n    if (k ==\
    \ 9) {\n        return(sort(arr)[-9:])\n    }\n    if (k == 10) {\n        return(sort(arr)[-10:])\n\
    \    }\n    if (k == 11) {\n        return(sort(arr)[-11:])\n    }\n    if (k\
    \ == 12) {\n        return(sort(arr)[-12:])\n    }\n    if (k == 13) {\n     \
    \   return(sort(arr)[-13:])\n    }\n    if (k == 14) {\n        return(sort(arr)[-14:])\n\
    \    }\n    if (k == 15) {\n        return(sort(arr)[-15:])\n    }\n    if (k\
    \ == 16) {\n        return(sort(arr)[-16:])\n    }\n    if (k == 17) {\n     \
    \   return(sort(arr)[-17:])\n    }\n    if (k == 18) {\n        return(sort(arr)[-18:])\n\
    \    }\n    if (k == 19) {\n        return(sort(arr)[-19:])\n    }\n    if (k\
    \ == 20) {\n        return(sort(arr)[-20:])\n    }\n    if (k == 21) {\n     \
    \   return(sort(arr", "\n  arr <- arr[order(arr)]\n  return(arr[1:k])\n}\n", "\n\
    \  if (k > length(arr)) {\n    return(NULL)\n  }\n  \n  if (k == 1) {\n    return(sort(arr))\n\
    \  }\n  \n  max <- arr[1]\n  max_index <- 1\n  \n  for (i in 2:k) {\n    if (arr[i]\
    \ > max) {\n      max <- arr[i]\n      max_index <- i\n    }\n  }\n  \n  return(sort(arr[1:max_index]))\n\
    }\n\nprint(maximum(c(-3, -4, 5), 3))\nprint(maximum(c(4, -4, 4), 2))\nprint(maximum(c(-3,\
    \ 2, 1, 2, -1, -2, 1), 1))\n", "\n  if (k > length(arr)) {\n    return(NULL)\n\
    \  }\n  if (k == 1) {\n    return(sort(arr))\n  }\n  if (k == 2) {\n    return(c(arr[1],\
    \ arr[2]))\n  }\n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n\
    \  if (k == 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  if (k\
    \ == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  }\n  if (k\
    \ == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n  }\n\
    \  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7]))\n  }\n  if (k == 8) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8]))\n  }\n  if (k == 9) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  }\n  if\
    \ (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10]))\n  }\n  if (k == 11) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \  }\n  if (k == 12) {\n    return(c(arr[1], arr[2", "\n    if (k > length(arr))\
    \ {\n        return(NULL)\n    }\n    if (k == 1) {\n        return(sort(arr))\n\
    \    }\n    if (k == 2) {\n        return(sort(arr[1:2]))\n    }\n    if (k ==\
    \ 3) {\n        return(sort(arr[1:3]))\n    }\n    if (k == 4) {\n        return(sort(arr[1:4]))\n\
    \    }\n    if (k == 5) {\n        return(sort(arr[1:5]))\n    }\n    if (k ==\
    \ 6) {\n        return(sort(arr[1:6]))\n    }\n    if (k == 7) {\n        return(sort(arr[1:7]))\n\
    \    }\n    if (k == 8) {\n        return(sort(arr[1:8]))\n    }\n    if (k ==\
    \ 9) {\n        return(sort(arr[1:9]))\n    }\n    if (k == 10) {\n        return(sort(arr[1:10]))\n\
    \    }\n    if (k == 11) {\n        return(sort(arr[1:11]))\n    }\n    if (k\
    \ == 12) {\n        return(sort(arr[1:12]))\n    }\n    if (k == 13) {\n     \
    \   return(sort(arr[1:13]))\n    }\n    if (k == 14) {\n        return(sort(arr[1:14]))\n\
    \    }\n    if (k == 15) {\n        return(sort(arr[1:15]))\n    }\n    if (k\
    \ == 16) {\n        return(sort(arr[1:16]))\n    }\n    if (k == 17) {\n     \
    \   return(sort(arr[1:17]))\n    }\n    if (k == 18) {\n        return(sort(arr[1:18]))\n\
    \    }\n    if (k == 19) {\n        return(sort(arr[1:19]))\n    }\n    if (k\
    \ == 20) {\n        return(sort(arr[1:20]))", "\n    if (k > len(arr)) {\n   \
    \     return(NULL)\n    }\n    if (k == 1) {\n        return(arr[1])\n    }\n\
    \    if (k == 2) {\n        return(c(arr[1], arr[2]))\n    }\n    if (k == len(arr))\
    \ {\n        return(arr)\n    }\n    \n    # find the maximum k numbers\n    max_k\
    \ <- max(arr[1:k])\n    \n    # find the index of the maximum k numbers\n    max_k_index\
    \ <- which(arr == max_k)\n    \n    # sort the arr\n    arr <- arr[max_k_index]\n\
    \    arr <- arr[order(arr)]\n    \n    # return the sorted arr\n    return(arr[1:k])\n\
    }\n", "\n    if (k > len(arr)) {\n        return(NULL)\n    }\n    if (k == 1)\
    \ {\n        return(arr[1])\n    }\n    if (k == 2) {\n        return(c(arr[1],\
    \ arr[2]))\n    }\n    if (k == len(arr)) {\n        return(arr)\n    }\n    if\
    \ (arr[k] > arr[k - 1]) {\n        return(arr[k])\n    }\n    if (arr[k] < arr[k\
    \ - 1]) {\n        return(arr[k - 1])\n    }\n    if (arr[k] == arr[k - 1]) {\n\
    \        return(c(arr[k], arr[k - 1]))\n    }\n}\n", "\n  if (k > len(arr)) {\n\
    \    return(NULL)\n  }\n  if (k == 1) {\n    return(arr[1])\n  }\n  if (k == 2)\
    \ {\n    return(c(arr[1], arr[2]))\n  }\n  if (k == 3) {\n    return(c(arr[1],\
    \ arr[2], arr[3]))\n  }\n  if (k == 4) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4]))\n  }\n  if (k == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5]))\n  }\n  if (k == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6]))\n  }\n  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7]))\n  }\n  if (k == 8) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n  }\n  if (k == 9)\
    \ {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n  }\n  if (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n  }\n  if (k == 11) {\n \
    \   return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9],\
    \ arr[10], arr[11]))\n  }\n  if (k == 12) {\n    return(c(arr[1], arr[2", "\n\
    \  if (k > length(arr)) {\n    return(NULL)\n  }\n  \n  arr <- arr[order(arr)]\n\
    \  \n  if (k == 1) {\n    return(arr[1])\n  }\n  \n  if (k == 2) {\n    return(c(arr[1],\
    \ arr[2]))\n  }\n  \n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n\
    \  }\n  \n  if (k == 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n\
    \  \n  if (k == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n\
    \  }\n  \n  if (k == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6]))\n  }\n  \n  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7]))\n  }\n  \n  if (k == 8) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n  }\n  \n  if (k == 9) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9]))\n  }\n  \n  if (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n  }\n  \n  if (k == 11) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8],\
    \ arr[9],", "\n    if (k > length(arr)) {\n        return(NULL)\n    }\n    if\
    \ (k == 1) {\n        return(sort(arr))\n    }\n    if (k == 2) {\n        return(c(arr[1],\
    \ arr[2]))\n    }\n    if (k == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n\
    \    }\n    if (k == 4) {\n        return(c(arr[1], arr[2], arr[3], arr[4]))\n\
    \    }\n    if (k == 5) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n\
    \    }\n    if (k == 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6]))\n    }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k ==\
    \ 9) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n \
    \   if (k == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n    \
    \    return(c(arr[1], arr[2", "\n    if (k > length(arr)) {\n        return(NULL)\n\
    \    }\n    if (k == 1) {\n        return(sort(arr))\n    }\n    if (k == 2) {\n\
    \        return(sort(arr[1:2]))\n    }\n    if (k == 3) {\n        return(sort(arr[1:3]))\n\
    \    }\n    if (k == 4) {\n        return(sort(arr[1:4]))\n    }\n    if (k ==\
    \ 5) {\n        return(sort(arr[1:5]))\n    }\n    if (k == 6) {\n        return(sort(arr[1:6]))\n\
    \    }\n    if (k == 7) {\n        return(sort(arr[1:7]))\n    }\n    if (k ==\
    \ 8) {\n        return(sort(arr[1:8]))\n    }\n    if (k == 9) {\n        return(sort(arr[1:9]))\n\
    \    }\n    if (k == 10) {\n        return(sort(arr[1:10]))\n    }\n    if (k\
    \ == 11) {\n        return(sort(arr[1:11]))\n    }\n    if (k == 12) {\n     \
    \   return(sort(arr[1:12]))\n    }\n    if (k == 13) {\n        return(sort(arr[1:13]))\n\
    \    }\n    if (k == 14) {\n        return(sort(arr[1:14]))\n    }\n    if (k\
    \ == 15) {\n        return(sort(arr[1:15]))\n    }\n    if (k == 16) {\n     \
    \   return(sort(arr[1:16]))\n    }\n    if (k == 17) {\n        return(sort(arr[1:17]))\n\
    \    }\n    if (k == 18) {\n        return(sort(arr[1:18]))\n    }\n    if (k\
    \ == 19) {\n        return(sort(arr[1:19]))\n    }\n    if (k == 20) {\n     \
    \   return(sort(arr[1:20]))", "\n  if (k > len(arr)) {\n    return(list())\n \
    \ }\n  if (k == 1) {\n    return(sort(arr))\n  }\n  if (k == len(arr)) {\n   \
    \ return(arr)\n  }\n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  if\
    \ (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n  if (k == 4) {\n  \
    \  return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  if (k == 5) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5]))\n  }\n  if (k == 6) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6]))\n  }\n  if (k == 7) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n  }\n  if (k == 8) {\n   \
    \ return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n\
    \  }\n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9]))\n  }\n  if (k == 10) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n  }\n  if\
    \ (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n  }\n  ", "\n  if (k > length(arr)) {\n\
    \    return(NULL)\n  }\n  \n  if (k == 1) {\n    return(sort(arr))\n  }\n  \n\
    \  if (k == 2) {\n    return(sort(arr[-1]))\n  }\n  \n  if (k == 3) {\n    return(sort(arr[-1]))\n\
    \  }\n  \n  if (k == 4) {\n    return(sort(arr[-1]))\n  }\n  \n  if (k == 5) {\n\
    \    return(sort(arr[-1]))\n  }\n  \n  if (k == 6) {\n    return(sort(arr[-1]))\n\
    \  }\n  \n  if (k == 7) {\n    return(sort(arr[-1]))\n  }\n  \n  if (k == 8) {\n\
    \    return(sort(arr[-1]))\n  }\n  \n  if (k == 9) {\n    return(sort(arr[-1]))\n\
    \  }\n  \n  if (k == 10) {\n    return(sort(arr[-1]))\n  }\n  \n  if (k == 11)\
    \ {\n    return(sort(arr[-1]))\n  }\n  \n  if (k == 12) {\n    return(sort(arr[-1]))\n\
    \  }\n  \n  if (k == 13) {\n    return(sort(arr[-1]))\n  }\n  \n  if (k == 14)\
    \ {\n    return(sort(arr[-1]))\n  }\n  \n  if (k == 15) {\n    return(sort(arr[-1]))\n\
    \  }\n  \n  if (k == 16) {\n    return(sort(arr[-1]))\n  }\n  \n  if (k == 17)\
    \ {\n    return(sort(arr[-1]))\n  }\n  \n  if (k == 18) {\n    return(sort(arr[-1]))\n\
    \  }\n  \n  if (k == 19) {\n    return(sort(arr[-1]))\n  }\n  ", "\n  if (k >\
    \ length(arr)) {\n    return(list())\n  }\n  if (k == 1) {\n    return(sort(arr))\n\
    \  }\n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  if (k == 3) {\n \
    \   return(c(arr[1], arr[2], arr[3]))\n  }\n  if (k == 4) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4]))\n  }\n  if (k == 5) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n  }\n  if (k == 6) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6]))\n  }\n  if (k == 7) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n  }\n  if (k == 8) {\n   \
    \ return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n\
    \  }\n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9]))\n  }\n  if (k == 10) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n  }\n  if\
    \ (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9], arr[10], arr[11]))\n  }\n  if (k == 12) {\n    return(c(arr[1],\
    \ arr[2", "\n  if (k > length(arr)) {\n    return(NULL)\n  }\n  \n  if (k == 1)\
    \ {\n    return(sort(arr))\n  }\n  \n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n\
    \  }\n  \n  if (k == 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n  \n  if\
    \ (k == 4) {\n    return(c(arr[1], arr[2], arr[3], arr[4]))\n  }\n  \n  if (k\
    \ == 5) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n  }\n  \n  if\
    \ (k == 6) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]))\n\
    \  }\n  \n  if (k == 7) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7]))\n  }\n  \n  if (k == 8) {\n    return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8]))\n  }\n  \n  if (k == 9) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]))\n  }\n  \n\
    \  if (k == 10) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9], arr[10]))\n  }\n  \n  if (k == 11) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]))\n\
    \  }", "\n    if (k > length(arr)) {\n        return(NULL)\n    }\n    if (k ==\
    \ 1) {\n        return(arr[1])\n    }\n    if (k == 2) {\n        return(c(arr[1],\
    \ arr[2]))\n    }\n    if (k == 3) {\n        return(c(arr[1], arr[2], arr[3]))\n\
    \    }\n    if (k == 4) {\n        return(c(arr[1], arr[2], arr[3], arr[4]))\n\
    \    }\n    if (k == 5) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5]))\n\
    \    }\n    if (k == 6) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6]))\n    }\n    if (k == 7) {\n        return(c(arr[1], arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7]))\n    }\n    if (k == 8) {\n        return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n    }\n    if (k ==\
    \ 9) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9]))\n    }\n    if (k == 10) {\n        return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n    }\n \
    \   if (k == 11) {\n        return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6],\
    \ arr[7], arr[8], arr[9], arr[10], arr[11]))\n    }\n    if (k == 12) {\n    \
    \    return(c(arr[1], arr[2", "\n  if (k > length(arr)) {\n    return(NULL)\n\
    \  }\n  \n  arr <- arr[order(arr)]\n  \n  if (k == 1) {\n    return(arr[1])\n\
    \  }\n  \n  if (k == 2) {\n    return(c(arr[1], arr[2]))\n  }\n  \n  if (k ==\
    \ 3) {\n    return(c(arr[1], arr[2], arr[3]))\n  }\n  \n  if (k == 4) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4]))\n  }\n  \n  if (k == 5) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5]))\n  }\n  \n  if (k == 6) {\n    return(c(arr[1], arr[2],\
    \ arr[3], arr[4], arr[5], arr[6]))\n  }\n  \n  if (k == 7) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]))\n  }\n  \n  if (k == 8) {\n\
    \    return(c(arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]))\n\
    \  }\n  \n  if (k == 9) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9]))\n  }\n  \n  if (k == 10) {\n    return(c(arr[1],\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]))\n\
    \  }\n  \n  if (k == 11) {\n    return(c(arr[1], arr[2], arr[3], arr[4], arr[5],\
    \ arr[6], arr[7], arr[8], arr[9],"]
stop_tokens:
- "\n#"
- "\n```"

name: HumanEval_36_fizz_buzz
language: pl
prompt: "# Return the number of times the digit 7 appears in integers less than n\
  \ which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
  # 2\n# >>> fizz_buzz(79)\n# 3\nsub fizz_buzz {\n    my($n) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fizz_buzz;\n\
  \        if(eq_deeply($candidate->(50),0)) {\n        print \"ok!\" }else{\n   \
  \     exit 1;\n        }\n        if(eq_deeply($candidate->(78),2)) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(79),3))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100),3))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(200),6))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4000),192))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10000),639))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100000),8026))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $count;\n    for (11 .. $n) {\n        $count++ if /7/ && !($_\
    \ % 11) && !($_ % 13);\n    }\n    return $count;\n}", "    my $count = 0;\n \
    \   for (my $i = 0; $i < $n; $i++) {\n        if (($i % 11 == 0 || $i % 13 ==\
    \ 0) && $i =~ /7/) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my $cnt = 0;\n    for (my $i = 1; $i < $n; $i++) {\n        if ($i %\
    \ 11 == 0 || $i % 13 == 0) {\n            my $s = $i;\n            while ($s)\
    \ {\n                if ($s % 10 == 7) {\n                    $cnt++;\n      \
    \          }\n                $s /= 10;\n            }\n        }\n    }\n   \
    \ return $cnt;\n}", "    my $count = 0;\n    while ($n >= 11) {\n        if ($n\
    \ % 11 == 0) {\n            $count += count_7($n);\n        }\n        if ($n\
    \ % 13 == 0) {\n            $count += count_7($n);\n        }\n        $n -= 1;\n\
    \    }\n    return $count;\n}", "    my $res = 0;\n    foreach (1..$n-1) {\n \
    \       $res++ if ($_ % 11 == 0 || $_ % 13 == 0) && ($_ % 10 == 7);\n    }\n \
    \   return $res;\n}", "    my $count = 0;\n    for (my $i = 1; $i < $n; $i++)\
    \ {\n        $count++ if ($i % 11 == 0 || $i % 13 == 0) && ($i % 10 == 7);\n \
    \   }\n    return $count;\n}", "    return 0 if($n <= 70);\n    my $divisible_by_11\
    \ = int($n / 11);\n    my $divisible_by_13 = int($n / 13);\n    my $divisible_by_143\
    \ = int($n / 143);\n    my $count = 0;\n    my $x = 70;\n    while($x <= $n) {\n\
    \        $count++ if($x =~ /7/);\n        $x += 11;\n    }\n    $x = 91;\n   \
    \ while($x <= $n) {\n        $count++ if($x =~ /7/);\n        $x += 13;\n    }\n\
    \    $x = 1001;\n    while($x <= $n) {\n        $count++ if($x =~ /7/);\n    \
    \    $x += 143;\n    }\n    return $count;\n}", "    my $count = 0;\n    for (my\
    \ $i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n    \
    \        if ($i % 10 == 7) {\n                $count++;\n            }\n     \
    \       $i = int($i / 10);\n            while ($i > 0) {\n                if ($i\
    \ % 10 == 7) {\n                    $count++;\n                }\n           \
    \     $i = int($i / 10);\n            }\n        }\n    }\n    return $count;\n\
    }", "    return grep{ $_ % 11 == 0 || $_ % 13 == 0}\n            grep{ $_ =~ /7/\
    \ }\n            1..($n-1);\n}", "    my $count = 0;\n    while($n > 0) {\n  \
    \      if($n % 11 == 0 || $n % 13 == 0) {\n            while($n > 0) {\n     \
    \           if($n % 10 == 7) {\n                    $count++;\n              \
    \  }\n                $n /= 10;\n            }\n        }\n        $n--;\n   \
    \ }\n    return $count;\n}", "    my $count = 0;\n    for my $i (1..$n-1) {\n\
    \        next unless $i % 11 == 0 or $i % 13 == 0;\n        while ($i) {\n   \
    \         $count++ if $i % 10 == 7;\n            $i /= 10;\n        }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    for (my $i = 1; $i < $n; $i++)\
    \ {\n        if (($i % 11 == 0) || ($i % 13 == 0)) {\n            my $digits =\
    \ $i;\n            while ($digits > 0) {\n                if ($digits % 10 ==\
    \ 7) {\n                    $count++;\n                }\n                $digits\
    \ = int($digits / 10);\n            }\n        }\n    }\n    return $count;\n}",
  "    my $num_7s = 0;\n    for my $i (1..$n) {\n        if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n            my $digits = digit_list($i);\n            for my $j\
    \ (0..$#$digits) {\n                $num_7s++ if $digits->[$j] == 7;\n       \
    \     }\n        }\n    }\n    return $num_7s;\n}", "    my $count = 0;\n    for\
    \ my $i (1..$n-1) {\n        next unless ($i % 11 == 0 || $i % 13 == 0);\n   \
    \     my $num = $i;\n        while ($num > 0) {\n            if ($num % 10 ==\
    \ 7) {\n                $count++;\n            }\n            $num = int($num\
    \ / 10);\n        }\n    }\n    return $count;\n}", "    # Put your code here\n\
    \    my $count=0;\n    foreach my $i (1..$n-1) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            my $num = $i;\n            while ($num>0) {\n \
    \               my $last = $num % 10;\n                if ($last == 7) {\n   \
    \                 $count++;\n                }\n                $num = $num /\
    \ 10;\n            }\n        }\n    }\n    return $count;\n}\n1;", "    my $result\
    \ = 0;\n    my $start = 0;\n    my $end = 0;\n    my $i = 0;\n    my $m = 0;\n\
    \    my $mid = 0;\n    #print \"Argument: $n\\n\";\n    if($n < 11 || $n > 13\
    \ && $n < 22 || $n > 26 && $n < 33 || $n > 39 && $n < 44 || $n > 49 && $n < 56\
    \ || $n > 62 && $n < 66 || $n > 69 && $n < 77 || $n > 82 && $n < 88 || $n > 89\
    \ && $n < 99) {\n        #print \"One digit\\n\";\n        return 1;\n    } elsif($n\
    \ >= 99 && $n <= 1000) {\n        #print \"Three digit\\n\";\n        $start =\
    \ $n;\n        $end = $n;\n        $mid = $n;\n        while($start >= 99 && $end\
    \ <= 1000) {\n            #print \"start: $start end: $end\\n\";\n           \
    \ $i = 0;\n            $m = 0;\n            while($i < 3) {\n                #print\
    \ \"mid: $mid\\n\";\n                if($mid % 10 == 7) {\n                  \
    \  $m = 1;\n                    last;\n                }\n                $mid\
    \ = int($mid / 10);\n                $i++;\n            }\n            $result\
    \ += $m;\n            $start--;\n            $end++;\n            $mid = $start;\n\
    \        }\n        #print \"Result: $result\\n\";\n        return $result;\n\
    \    } elsif($n >= 1000 && $n <= 10000) {\n        #print \"Four digit\\n\";\n\
    \        $start = $n;\n        $end = $n;\n        $mid = $n;\n        while($start\
    \ >= 1000 && $end <= 10000) {\n            #print \"start: $start end: $end\\\
    n\";\n            $i = 0;\n            $m = 0;\n            while($i < 4) {\n\
    \                #print \"mid: $mid\\n\";\n                if($mid % 10 == 7)\
    \ {\n                    $m = 1;\n                    last;\n", "    my $count\
    \ = 0;\n    for my $x (0..$n) {\n        next if $x % 11 && $x % 13;\n       \
    \ $count++ while $x =~ /7/g;\n    }\n    return $count;\n}", "    my $count =\
    \ 0;\n    for (my $i = 0; $i < $n; $i++) {\n        next if ($i % 11 and $i %\
    \ 13);\n        $count++ if $i =~ /7/;\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    foreach my $i (1..$n-1) {\n        if ($i % 11 == 0 or $i %\
    \ 13 == 0) {\n            my $j = $i;\n            while ($j > 0) {\n        \
    \        if ($j % 10 == 7) {\n                    $count++;\n                }\n\
    \                $j = int($j / 10);\n            }\n        }\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    for my $i (1..$n-1) {\n        my $res\
    \ = $i%11;\n        my $res1 = $i%13;\n        if($res == 0 || $res1 == 0) {\n\
    \            my $str = $i;\n            $count += $str =~ tr/7//;\n        }\n\
    \    }\n    return $count;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_66_digitSum
language: pl
prompt: "# Task\n# Write a function that takes a string as input and returns the sum\
  \ of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\") =>\
  \ 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"helloE\"\
  ) => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\nsub digitSum\
  \ {\n    my($s) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
  \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n \
  \       exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
  \    if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n \
  \       if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"You arE\
  \ Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
  \ }\n}\n\ntesthumaneval();"
completions: ["    my $total;\n    $total += ord($_) for (split //, $s);\n    return\
    \ $total;\n}", "    my $sum = 0;\n    for (split //, $s) {\n        $sum += ord($_)\
    \ if ord($_) > 64 && ord($_) < 91;\n    }\n    return $sum;\n}", "    my $sum\
    \ = 0;\n    map { $sum += ord } grep { /[A-Z]/ } split //, $s;\n    return $sum;\n\
    }", "    my $res = 0;\n    while($s =~ m/[A-Z]/g){\n        $res = $res + ord($&);\n\
    \    }\n    return $res;\n}\nprint digitSum(\"\");\nprint \"\\n\";\nprint digitSum(\"\
    abAB\");\nprint \"\\n\";\nprint digitSum(\"abcCd\");\nprint \"\\n\";\nprint digitSum(\"\
    helloE\");\nprint \"\\n\";\nprint digitSum(\"woArBld\");\nprint \"\\n\";\nprint\
    \ digitSum(\"aAaaaXa\");\nprint \"\\n\";", "    my $l = length($s);\n    my $sum\
    \ = 0;\n    for(my $i = 0; $i < $l; $i++) {\n        my $v = ord(substr($s, $i,\
    \ 1));\n        if($v > 64 && $v < 91) {\n            $sum += $v;\n        }\n\
    \    }\n    return $sum;\n}", "    my $sum = 0;\n    for (0..length($s)-1) {\n\
    \        $sum += ord(substr($s, $_, 1)) if substr($s, $_, 1) =~ /[A-Z]/;\n   \
    \ }\n    return $sum;\n}", "    my $sum = 0;\n    $sum += ord($_) foreach (split\
    \ '', uc $s);\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split //,\
    \ $s) {\n        $sum += ord($c) if $c =~ /[[:upper:]]/;\n    }\n    return $sum;\n\
    }", "    my $sum = 0;\n    for my $c (split //, $s) {\n      $sum += ord($c) if\
    \ ord($c) >= 65 && ord($c) <= 90;\n    }\n    return $sum;\n}", "    my $sum =\
    \ 0;\n    foreach my $c (split(\"\", $s)) {\n        $sum += ord($c) if ord($c)\
    \ >= 65 && ord($c) <= 90;\n    }\n    return $sum;\n}", "    my $sum = 0;\n  \
    \  for my $c (split(//, $s)) {\n        my $n = ord($c);\n        if ($n >= 65\
    \ && $n <= 90) {\n            $sum += $n;\n        }\n    }\n    return $sum;\n\
    }", "    my @c = split //, $s;\n    my $sum = 0;\n    for my $c (@c) {\n     \
    \   my $v = ord($c);\n        $sum += $v if $v >= 65 && $v <= 90;\n    }\n   \
    \ return $sum;\n}", "    my $sum = 0;\n    foreach my $char (split(//, $s)) {\n\
    \        $sum += ord($char) if ord($char) >= 65 && ord($char) <= 90;\n    }\n\
    \    return $sum;\n}", "    return sum((map { ord($_) } split //, $s), 0);\n}",
  "    my $sum = 0;\n    foreach my $char (split(\"\", $s)) {\n        $sum += ord($char)\
    \ if (ord($char) > 64 && ord($char) < 91);\n    }\n    return $sum;\n}", "   \
    \ $s =~ tr/[a-z]//d;\n    $s =~ tr/[0-9]//cd;\n    return $s;\n}", "    my $sum\
    \ = 0;\n    for my $char (split(//, $s)) {\n        $sum += ord($char) if $char\
    \ =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    # Good Luck!\n    $s =~ s/[^A-Z]//g;\n\
    \    my $sum = 0;\n    map {$sum += ord($_)} split(//, $s);\n    return $sum;\n\
    }", "    $s =~ tr/a-z/A-Z/;\n    my $sum = 0;\n    foreach (split //, $s) {\n\
    \        $sum += ord($_) if ($_ =~ /[A-Z]/);\n    }\n    return $sum;\n}", " \
    \   my $sum = 0;\n    for (my $i = 0; $i < length($s); $i++) {\n        my $c\
    \ = substr($s, $i, 1);\n        if ($c =~ /[A-Z]/) {\n            $sum += ord($c);\n\
    \        }\n    }\n    return $sum;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

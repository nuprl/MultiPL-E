language: pl
name: HumanEval_103_rounded_avg
results:
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    my $rounded_avg\
    \ = sprintf(\"%b\", int(($n + $m) / 2));\n    return \"0b$rounded_avg\";\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    if ($n > $m) {\n        return\
    \ -1;\n    }\n    my $sum = 0;\n    for (my $i = $n; $i <= $m; $i++) {\n     \
    \   $sum += $i;\n    }\n    my $avg = int($sum / ($m - $n + 1) + 0.5);\n    return\
    \ sprintf(\"0b%b\", $avg);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!
  timestamp: 1659821130
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    my $average\
    \ = ($n + $m) / 2;\n    return \"0b\" . sprintf(\"%b\", int($average));\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    my $sum\
    \ = 0;\n    foreach my $num ($n..$m) {\n        $sum += $num;\n    }\n    my $avg\
    \ = int($sum / ($m - $n + 1) + 0.5);\n    return sprintf(\"0b%b\", $avg);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    my $sum\
    \ = 0;\n    foreach my $i ($n..$m) {\n        $sum += $i;\n    }\n    my $avg\
    \ = $sum / ($m - $n + 1);\n    return \"0b\" . sprintf(\"%b\", int($avg + 0.5));\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return $n > $m ? -1 : sprintf \"\
    0b%b\", int(($n + $m) / 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n   \
    \ my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"\
    0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"0b1111001010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $total = 0;\n    my $count =\
    \ 0;\n    if ($n > $m) {\n        return -1;\n    }\n    for my $i ($n..$m) {\n\
    \        $total += $i;\n        $count++;\n    }\n    my $avg = int($total / $count);\n\
    \    return sprintf(\"0b%b\", $avg);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821222
- exit_code: 0
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    my $average\
    \ = sprintf(\"%.0f\", ($n + $m) / 2);\n    sprintf(\"0b%b\", $average);\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    return\
    \ sprintf '0b%b', int(($n + $m) / 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821223
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    return\
    \ sprintf(\"0b%b\", int(($n + $m) / 2));\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $diff = $m - $n;\n    my $avg\
    \ = $n + int($diff / 2);\n    return -1 if $diff < 0;\n    return '0b' . sprintf('%b',\
    \ $avg);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    if ($n > $m) {\n        return -1;\n    }\n    return sprintf \"0b%b\", $avg;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    my $avg\
    \ = int (($n + $m) / 2);\n    return sprintf \"0b%b\", $avg;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821222
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $ret;\n    return -1 if $n >\
    \ $m;\n    for ($ret = 0; $n <= $m; $n++) {\n        $ret += $n;\n    }\n    $ret\
    \ = int($ret / ($m - $n + 1) + 0.5);\n    return sprintf('0b%b', $ret);\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: 'Illegal division by zero at /tmp/tmp9os0azy6.pl line 17.

    '
  stdout: ''
  timestamp: 1659821222
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    if ($n > $m) { return -1 }\n  \
    \  my $total = 0;\n    while ($n <= $m) {\n        $total += $n;\n        $n++;\n\
    \    }\n    return sprintf(\"0b%b\", int($total / ($m - $n + 1)));\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: 'Illegal division by zero at /tmp/tmpgwvjb2vf.pl line 18.

    '
  stdout: ''
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    $n > $m ? return -1 : return -1\
    \ if !$n || !$m;\n    my $sum = $n + $m;\n    my $num = $m - $n + 1;\n    return\
    \ \"0b\" . sprintf(\"%b\",int($sum/$num + 0.5));\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    $n > $m and return -1;\n    sprintf(\"\
    0b%b\", int(($n + $m) / 2));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"\
    0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"0b1111001010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    my $avg\
    \ = $n;\n    for ($n..$m) {\n        $avg += $_;\n    }\n    $avg = sprintf(\"\
    %d\", $avg / ($m - $n + 1));\n    return \"0b\" . sprintf(\"%b\", $avg);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821223
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    $n > $m and return -1;\n    my\
    \ $avg = int(($n + $m) / 2);\n    return \"0b\" . unpack('B*', pack('C', $avg));\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821222
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    my $avg\
    \ = int(($n + $m) / 2);\n    return sprintf(\"0b%b\", $avg);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821130

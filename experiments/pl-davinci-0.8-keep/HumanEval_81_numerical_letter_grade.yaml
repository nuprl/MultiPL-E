name: HumanEval_81_numerical_letter_grade
language: pl
prompt: "# It is the last week of the semester and the teacher has to give the grades\n\
  # to students. The teacher has been making her own algorithm for grading.\n# The\
  \ only problem is, she has lost the code she used for grading.\n# She has given\
  \ you a list of GPAs for some students and you have to write \n# a function that\
  \ can output a list of letter grades using the following table:\n# GPA       | \
  \   Letter grade\n# 4.0                A+\n# > 3.7                A \n# > 3.3  \
  \              A- \n# > 3.0                B+\n# > 2.7                B \n# > 2.3\
  \                B-\n# > 2.0                C+\n# > 1.7                C\n# > 1.3\
  \                C-\n# > 1.0                D+ \n# > 0.7                D \n# >\
  \ 0.0                D-\n# 0.0                E\n# Example:\n# grade_equation([4.0,\
  \ 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\nsub numerical_letter_grade\
  \ {\n    my($grades) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&numerical_letter_grade;\n\
  \        if(eq_deeply($candidate->([4.0, 3, 1.7, 2, 3.5]),[\"A+\", \"B\", \"C-\"\
  , \"C\", \"A-\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->([1.2]),[\"D+\"])) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([0.5]),[\"D-\"]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([0.0]),[\"\
  E\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
  \ 0.3, 1.5, 2.8, 3.3]),[\"D\", \"D-\", \"C-\", \"B\", \"B+\"])) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([0.0,\
  \ 0.7]),[\"E\", \"D-\"])) {\n        print \"ok!\" }else{\n        exit 1;\n   \
  \     }\n}\n\ntesthumaneval();"
completions: ["    my @out_grades;\n    for (@$grades) {\n        my $test_grade =\
    \ $_;\n        if ($test_grade >= 4.0) {\n            push @out_grades, 'A+';\n\
    \        } elsif ($test_grade >= 3.7) {\n            push @out_grades, 'A';\n\
    \        } elsif ($test_grade >= 3.3) {\n            push @out_grades, 'A-';\n\
    \        } elsif ($test_grade >= 3.0) {\n            push @out_grades, 'B+';\n\
    \        } elsif ($test_grade >= 2.7) {\n            push @out_grades, 'B';\n\
    \        } elsif ($test_grade >= 2.3) {\n            push @out_grades, 'B-';\n\
    \        } elsif ($test_grade >= 2.0) {\n            push @out_grades, 'C+';\n\
    \        } elsif ($test_grade >= 1.7) {\n            push @out_grades, 'C';\n\
    \        } elsif ($test_grade >= 1.3) {\n            push @out_grades, 'C-';\n\
    \        } elsif ($test_grade >= 1.0) {\n            push @out_grades, 'D+';\n\
    \        } elsif ($test_grade >= 0.7) {\n            push @out_grades, 'D';\n\
    \        } elsif ($test_grade >= 0.0) {\n            push @out_grades, 'D-';\n\
    \        } else {\n            push @out_grades, 'E';\n        }\n    }\n    return\
    \ @out_grades;\n}\nprint \"Problem 13: \", join(', ', numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5])), \"\\n\";", "    my @answer;\n    for my $grade(@$grades)\
    \ {\n        my $grade_name;\n        given($grade) {\n            when($_ >=\
    \ 4.0) {\n                $grade_name = 'A+';\n            }\n            when($_\
    \ >= 3.7) {\n                $grade_name = 'A';\n            }\n            when($_\
    \ >= 3.3) {\n                $grade_name = 'A-';\n            }\n            when($_\
    \ >= 3.0) {\n                $grade_name = 'B+';\n            }\n            when($_\
    \ >= 2.7) {\n                $grade_name = 'B';\n            }\n            when($_\
    \ >= 2.3) {\n                $grade_name = 'B-';\n            }\n            when($_\
    \ >= 2.0) {\n                $grade_name = 'C+';\n            }\n            when($_\
    \ >= 1.7) {\n                $grade_name = 'C';\n            }\n            when($_\
    \ >= 1.3) {\n                $grade_name = 'C-';\n            }\n            when($_\
    \ >= 1.0) {\n                $grade_name = 'D+';\n            }\n            when($_\
    \ >= 0.7) {\n                $grade_name = 'D';\n            }\n            when($_\
    \ >= 0.0) {\n                $grade_name = 'D-';\n            }\n            default\
    \ {\n                $grade_name = 'E';\n            }\n        }\n        push\
    \ @answer, $grade_name;\n    }\n    return \\@answer;\n}", "    my @output = ();\n\
    \    foreach my $g (@$grades) {\n        my $letter = 'E';\n        if ($g > 4.0)\
    \ {\n            $letter = 'A+';\n        } elsif ($g > 3.7) {\n            $letter\
    \ = 'A';\n        } elsif ($g > 3.3) {\n            $letter = 'A-';\n        }\
    \ elsif ($g > 3.0) {\n            $letter = 'B+';\n        } elsif ($g > 2.7)\
    \ {\n            $letter = 'B';\n        } elsif ($g > 2.3) {\n            $letter\
    \ = 'B-';\n        } elsif ($g > 2.0) {\n            $letter = 'C+';\n       \
    \ } elsif ($g > 1.7) {\n            $letter = 'C';\n        } elsif ($g > 1.3)\
    \ {\n            $letter = 'C-';\n        } elsif ($g > 1.0) {\n            $letter\
    \ = 'D+';\n        } elsif ($g > 0.7) {\n            $letter = 'D';\n        }\
    \ elsif ($g > 0.0) {\n            $letter = 'D-';\n        }\n        push @output,\
    \ $letter;\n    }\n    return \\@output;\n}", "    my @grades = @$grades;\n  \
    \  my @letter_grades;\n    foreach my $grade (@grades) {\n        if ($grade >=\
    \ 4.0) {\n            push @letter_grades, 'A+';\n        } elsif ($grade >= 3.7)\
    \ {\n            push @letter_grades, 'A';\n        } elsif ($grade >= 3.3) {\n\
    \            push @letter_grades, 'A-';\n        } elsif ($grade >= 3.0) {\n \
    \           push @letter_grades, 'B+';\n        } elsif ($grade >= 2.7) {\n  \
    \          push @letter_grades, 'B';\n        } elsif ($grade >= 2.3) {\n    \
    \        push @letter_grades, 'B-';\n        } elsif ($grade >= 2.0) {\n     \
    \       push @letter_grades, 'C+';\n        } elsif ($grade >= 1.7) {\n      \
    \      push @letter_grades, 'C';\n        } elsif ($grade >= 1.3) {\n        \
    \    push @letter_grades, 'C-';\n        } elsif ($grade >= 1.0) {\n         \
    \   push @letter_grades, 'D+';\n        } elsif ($grade >= 0.7) {\n          \
    \  push @letter_grades, 'D';\n        } elsif ($grade >= 0.0) {\n            push\
    \ @letter_grades, 'D-';\n        } else {\n            push @letter_grades, 'E';\n\
    \        }\n    }\n    return @letter_grades;\n}", "    my @grade_letters = ();\n\
    \    for my $grade (@$grades) {\n        if ($grade >= 4.0) {\n            push\
    \ @grade_letters, 'A+';\n        } elsif ($grade >= 3.7) {\n            push @grade_letters,\
    \ 'A';\n        } elsif ($grade >= 3.3) {\n            push @grade_letters, 'A-';\n\
    \        } elsif ($grade >= 3.0) {\n            push @grade_letters, 'B+';\n \
    \       } elsif ($grade >= 2.7) {\n            push @grade_letters, 'B';\n   \
    \     } elsif ($grade >= 2.3) {\n            push @grade_letters, 'B-';\n    \
    \    } elsif ($grade >= 2.0) {\n            push @grade_letters, 'C+';\n     \
    \   } elsif ($grade >= 1.7) {\n            push @grade_letters, 'C';\n       \
    \ } elsif ($grade >= 1.3) {\n            push @grade_letters, 'C-';\n        }\
    \ elsif ($grade >= 1.0) {\n            push @grade_letters, 'D+';\n        } elsif\
    \ ($grade >= 0.7) {\n            push @grade_letters, 'D';\n        } elsif ($grade\
    \ >= 0.0) {\n            push @grade_letters, 'D-';\n        } else {\n      \
    \      push @grade_letters, 'E';\n        }\n    }\n    return \\@grade_letters;\n\
    }", "    my @grades = @$grades;\n    my @return = ();\n    foreach my $grade (@grades)\
    \ {\n        # A+\n        if($grade >= 4.0) {\n            push(@return, 'A+');\n\
    \        } elsif($grade >= 3.7) {\n            push(@return, 'A');\n        }\
    \ elsif($grade >= 3.3) {\n            push(@return, 'A-');\n        } elsif($grade\
    \ >= 3.0) {\n            push(@return, 'B+');\n        } elsif($grade >= 2.7)\
    \ {\n            push(@return, 'B');\n        } elsif($grade >= 2.3) {\n     \
    \       push(@return, 'B-');\n        } elsif($grade >= 2.0) {\n            push(@return,\
    \ 'C+');\n        } elsif($grade >= 1.7) {\n            push(@return, 'C');\n\
    \        } elsif($grade >= 1.3) {\n            push(@return, 'C-');\n        }\
    \ elsif($grade >= 1.0) {\n            push(@return, 'D+');\n        } elsif($grade\
    \ >= 0.7) {\n            push(@return, 'D');\n        } elsif($grade >= 0.0) {\n\
    \            push(@return, 'D-');\n        } else {\n            push(@return,\
    \ 'E');\n        }\n    }\n    return @return;\n}", "    my @letter_grades;\n\
    \    for my $grade(@$grades) {\n        my $letter;\n        if($grade == 4.0)\
    \ {\n            $letter = 'A+';\n        } elsif($grade >= 3.7) {\n         \
    \   $letter = 'A';\n        } elsif($grade >= 3.3) {\n            $letter = 'A-';\n\
    \        } elsif($grade >= 3.0) {\n            $letter = 'B+';\n        } elsif($grade\
    \ >= 2.7) {\n            $letter = 'B';\n        } elsif($grade >= 2.3) {\n  \
    \          $letter = 'B-';\n        } elsif($grade >= 2.0) {\n            $letter\
    \ = 'C+';\n        } elsif($grade >= 1.7) {\n            $letter = 'C';\n    \
    \    } elsif($grade >= 1.3) {\n            $letter = 'C-';\n        } elsif($grade\
    \ >= 1.0) {\n            $letter = 'D+';\n        } elsif($grade >= 0.7) {\n \
    \           $letter = 'D';\n        } elsif($grade > 0.0) {\n            $letter\
    \ = 'D-';\n        } else {\n            $letter = 'E';\n        }\n        push\
    \ @letter_grades, $letter;\n    }\n    return \\@letter_grades;\n}", "    my $grade\
    \ = shift @$grades;\n    my $r = \"\";\n    if ( $grade > 3.7 ){\n        $r =\
    \ \"A+\";\n    }\n    elsif ( $grade > 3.3 ){\n        $r = \"A\";\n    }\n  \
    \  elsif ( $grade > 3.0 ){\n        $r = \"A-\";\n    }\n    elsif ( $grade >\
    \ 2.7 ){\n        $r = \"B+\";\n    }\n    elsif ( $grade > 2.3 ){\n        $r\
    \ = \"B\";\n    }\n    elsif ( $grade > 2.0 ){\n        $r = \"B-\";\n    }\n\
    \    elsif ( $grade > 1.7 ){\n        $r = \"C+\";\n    }\n    elsif ( $grade\
    \ > 1.3 ){\n        $r = \"C\";\n    }\n    elsif ( $grade > 1.0 ){\n        $r\
    \ = \"C-\";\n    }\n    elsif ( $grade > 0.7 ){\n        $r = \"D+\";\n    }\n\
    \    elsif ( $grade > 0.0 ){\n        $r = \"D\";\n    }\n    elsif ( $grade >\
    \ -0.1 ){\n        $r = \"D-\";\n    }\n    else {\n        $r = \"E\";\n    }\n\
    \    return $r;\n}", "    my @result = ();\n    foreach my $grade (@$grades) {\n\
    \tpush @result, grade_to_letter($grade);\n    }\n    return @result;\n}", "  \
    \  my @result = ();\n    foreach my $grade (@$grades) {\n        if    ($grade\
    \ >= 4.0) { push @result, 'A+'; }\n        elsif ($grade >= 3.7) { push @result,\
    \ 'A'; }\n        elsif ($grade >= 3.3) { push @result, 'A-'; }\n        elsif\
    \ ($grade >= 3.0) { push @result, 'B+'; }\n        elsif ($grade >= 2.7) { push\
    \ @result, 'B'; }\n        elsif ($grade >= 2.3) { push @result, 'B-'; }\n   \
    \     elsif ($grade >= 2.0) { push @result, 'C+'; }\n        elsif ($grade >=\
    \ 1.7) { push @result, 'C'; }\n        elsif ($grade >= 1.3) { push @result, 'C-';\
    \ }\n        elsif ($grade >= 1.0) { push @result, 'D+'; }\n        elsif ($grade\
    \ >= 0.7) { push @result, 'D'; }\n        elsif ($grade >= 0.0) { push @result,\
    \ 'D-'; }\n        else                  { push @result, 'E'; }\n    }\n    return\
    \ \\@result;\n}", "    my @out;\n    foreach (@$grades) {\n        if($_ >= 4.0)\
    \ {\n            push @out, 'A+';\n        }\n        elsif($_ >= 3.7) {\n   \
    \         push @out, 'A';\n        }\n        elsif($_ >= 3.3) {\n           \
    \ push @out, 'A-';\n        }\n        elsif($_ >= 3.0) {\n            push @out,\
    \ 'B+';\n        }\n        elsif($_ >= 2.7) {\n            push @out, 'B';\n\
    \        }\n        elsif($_ >= 2.3) {\n            push @out, 'B-';\n       \
    \ }\n        elsif($_ >= 2.0) {\n            push @out, 'C+';\n        }\n   \
    \     elsif($_ >= 1.7) {\n            push @out, 'C';\n        }\n        elsif($_\
    \ >= 1.3) {\n            push @out, 'C-';\n        }\n        elsif($_ >= 1.0)\
    \ {\n            push @out, 'D+';\n        }\n        elsif($_ >= 0.7) {\n   \
    \         push @out, 'D';\n        }\n        elsif($_ >= 0.0) {\n           \
    \ push @out, 'D-';\n        }\n        else {\n            push @out, 'E';\n \
    \       }\n    }\n    return \\@out;\n}", "    my @grades = @$grades;\n    my\
    \ @grades_in_letters;\n    for my $grade (@grades) {\n        if($grade < 0.7)\
    \ {\n            push @grades_in_letters, 'E';\n        }\n        elsif($grade\
    \ < 1.0) {\n            push @grades_in_letters, 'D-';\n        }\n        elsif($grade\
    \ < 1.3) {\n            push @grades_in_letters, 'D';\n        }\n        elsif($grade\
    \ < 1.7) {\n            push @grades_in_letters, 'D+';\n        }\n        elsif($grade\
    \ < 2.0) {\n            push @grades_in_letters, 'C-';\n        }\n        elsif($grade\
    \ < 2.3) {\n            push @grades_in_letters, 'C';\n        }\n        elsif($grade\
    \ < 2.7) {\n            push @grades_in_letters, 'C+';\n        }\n        elsif($grade\
    \ < 3.0) {\n            push @grades_in_letters, 'B-';\n        }\n        elsif($grade\
    \ < 3.3) {\n            push @grades_in_letters, 'B';\n        }\n        elsif($grade\
    \ < 3.7) {\n            push @grades_in_letters, 'B+';\n        }\n        elsif($grade\
    \ < 4.0) {\n            push @grades_in_letters, 'A-';\n        }\n        else\
    \ {\n            push @grades_in_letters, 'A+';\n        }\n    }\n    return\
    \ \\@grades_in_letters;\n}", "    my @new_letter_grades;\n    for my $grade (@$grades)\
    \ {\n        if ($grade >= 4.0) {\n            push @new_letter_grades, 'A+';\n\
    \        } elsif ($grade >= 3.7) {\n            push @new_letter_grades, 'A';\n\
    \        } elsif ($grade >= 3.3) {\n            push @new_letter_grades, 'A-';\n\
    \        } elsif ($grade >= 3.0) {\n            push @new_letter_grades, 'B+';\n\
    \        } elsif ($grade >= 2.7) {\n            push @new_letter_grades, 'B';\n\
    \        } elsif ($grade >= 2.3) {\n            push @new_letter_grades, 'B-';\n\
    \        } elsif ($grade >= 2.0) {\n            push @new_letter_grades, 'C+';\n\
    \        } elsif ($grade >= 1.7) {\n            push @new_letter_grades, 'C';\n\
    \        } elsif ($grade >= 1.3) {\n            push @new_letter_grades, 'C-';\n\
    \        } elsif ($grade >= 1.0) {\n            push @new_letter_grades, 'D+';\n\
    \        } elsif ($grade >= 0.7) {\n            push @new_letter_grades, 'D';\n\
    \        } elsif ($grade >= 0.0) {\n            push @new_letter_grades, 'D-';\n\
    \        } else {\n            push @new_letter_grades, 'E';\n        }\n    }\n\
    \    return \\@new_letter_grades;\n}", "    # your code here\n    my @arr = @$grades;\n\
    \    my @result;\n    foreach my $num (@arr) {\n        if($num >= 4.0) {\n  \
    \          push @result, \"A+\";\n        }\n        elsif($num >= 3.7) {\n  \
    \          push @result, \"A\";\n        }\n        elsif($num >= 3.3) {\n   \
    \         push @result, \"A-\";\n        }\n        elsif($num >= 3.0) {\n   \
    \         push @result, \"B+\";\n        }\n        elsif($num >= 2.7) {\n   \
    \         push @result, \"B\";\n        }\n        elsif($num >= 2.3) {\n    \
    \        push @result, \"B-\";\n        }\n        elsif($num >= 2.0) {\n    \
    \        push @result, \"C+\";\n        }\n        elsif($num >= 1.7) {\n    \
    \        push @result, \"C\";\n        }\n        elsif($num >= 1.3) {\n     \
    \       push @result, \"C-\";\n        }\n        elsif($num >= 1.0) {\n     \
    \       push @result, \"D+\";\n        }\n        elsif($num >= 0.7) {\n     \
    \       push @result, \"D\";\n        }\n        elsif($num >= 0.0) {\n      \
    \      push @result, \"D-\";\n        }\n        else {\n            push @result,\
    \ \"E\";\n        }\n    }\n    return @result;\n}", "    my @new_grades;\n  \
    \  for my $grade (@$grades) {\n        push @new_grades, letter_grade($grade);\n\
    \    }\n    return @new_grades;\n}", "    my @return_grades;\n    my $grade;\n\
    \    foreach $grade (@$grades) {\n        if ($grade >= 4.0) {\n            push\
    \ @return_grades, 'A+';\n        } elsif ($grade >= 3.7) {\n            push @return_grades,\
    \ 'A';\n        } elsif ($grade >= 3.3) {\n            push @return_grades, 'A-';\n\
    \        } elsif ($grade >= 3.0) {\n            push @return_grades, 'B+';\n \
    \       } elsif ($grade >= 2.7) {\n            push @return_grades, 'B';\n   \
    \     } elsif ($grade >= 2.3) {\n            push @return_grades, 'B-';\n    \
    \    } elsif ($grade >= 2.0) {\n            push @return_grades, 'C+';\n     \
    \   } elsif ($grade >= 1.7) {\n            push @return_grades, 'C';\n       \
    \ } elsif ($grade >= 1.3) {\n            push @return_grades, 'C-';\n        }\
    \ elsif ($grade >= 1.0) {\n            push @return_grades, 'D+';\n        } elsif\
    \ ($grade >= 0.7) {\n            push @return_grades, 'D';\n        } elsif ($grade\
    \ >= 0.0) {\n            push @return_grades, 'D-';\n        } else {\n      \
    \      push @return_grades, 'E';\n        }\n    }\n    return @return_grades;\n\
    }", "    my @lettergrades = ();\n    for my $g (@$grades) {\n        if ($g >\
    \ 4.0) {\n            push @lettergrades, 'A+';\n        } elsif ($g > 3.7) {\n\
    \            push @lettergrades, 'A';\n        } elsif ($g > 3.3) {\n        \
    \    push @lettergrades, 'A-';\n        } elsif ($g > 3.0) {\n            push\
    \ @lettergrades, 'B+';\n        } elsif ($g > 2.7) {\n            push @lettergrades,\
    \ 'B';\n        } elsif ($g > 2.3) {\n            push @lettergrades, 'B-';\n\
    \        } elsif ($g > 2.0) {\n            push @lettergrades, 'C+';\n       \
    \ } elsif ($g > 1.7) {\n            push @lettergrades, 'C';\n        } elsif\
    \ ($g > 1.3) {\n            push @lettergrades, 'C-';\n        } elsif ($g > 1.0)\
    \ {\n            push @lettergrades, 'D+';\n        } elsif ($g > 0.7) {\n   \
    \         push @lettergrades, 'D';\n        } elsif ($g > 0.0) {\n           \
    \ push @lettergrades, 'D-';\n        } else {\n            push @lettergrades,\
    \ 'E';\n        }\n    }\n    return @lettergrades;\n}", "    my @result = ();\n\
    \    foreach my $grade (@$grades) {\n        if($grade >= 4.0) {\n           \
    \ push @result, 'A+';\n        }\n        elsif($grade >= 3.7) {\n           \
    \ push @result, 'A';\n        }\n        elsif($grade >= 3.3) {\n            push\
    \ @result, 'A-';\n        }\n        elsif($grade >= 3.0) {\n            push\
    \ @result, 'B+';\n        }\n        elsif($grade >= 2.7) {\n            push\
    \ @result, 'B';\n        }\n        elsif($grade >= 2.3) {\n            push @result,\
    \ 'B-';\n        }\n        elsif($grade >= 2.0) {\n            push @result,\
    \ 'C+';\n        }\n        elsif($grade >= 1.7) {\n            push @result,\
    \ 'C';\n        }\n        elsif($grade >= 1.3) {\n            push @result, 'C-';\n\
    \        }\n        elsif($grade >= 1.0) {\n            push @result, 'D+';\n\
    \        }\n        elsif($grade >= 0.7) {\n            push @result, 'D';\n \
    \       }\n        elsif($grade >= 0.0) {\n            push @result, 'D-';\n \
    \       }\n        else {\n            push @result, 'E';\n        }\n    }\n\
    \    return \\@result;\n}", "    my $max = max @$grades;\n    my $min = min @$grades;\n\
    \    my $range = $max - $min;\n    my $step = $range / 10;\n    my $result = [];\n\
    \    for my $grade (@$grades) {\n        my $index = ($grade - $min) / $step;\n\
    \        push @$result, qw(E D- D D+ C- C C+ B- B B+ A- A A+)[$index];\n    }\n\
    \    return $result;\n}", "    my @letters = ();\n    for (@$grades) {\n     \
    \   my $grade = $_;\n        my $letter = '';\n        if ($grade == 4.0) {\n\
    \            $letter = 'A+';\n        } elsif ($grade > 3.7) {\n            $letter\
    \ = 'A';\n        } elsif ($grade > 3.3) {\n            $letter = 'A-';\n    \
    \    } elsif ($grade > 3.0) {\n            $letter = 'B+';\n        } elsif ($grade\
    \ > 2.7) {\n            $letter = 'B';\n        } elsif ($grade > 2.3) {\n   \
    \         $letter = 'B-';\n        } elsif ($grade > 2.0) {\n            $letter\
    \ = 'C+';\n        } elsif ($grade > 1.7) {\n            $letter = 'C';\n    \
    \    } elsif ($grade > 1.3) {\n            $letter = 'C-';\n        } elsif ($grade\
    \ > 1.0) {\n            $letter = 'D+';\n        } elsif ($grade > 0.7) {\n  \
    \          $letter = 'D';\n        } elsif ($grade > 0.0) {\n            $letter\
    \ = 'D-';\n        } else {\n            $letter = 'E';\n        }\n        push\
    \ @letters, $letter;\n    }\n    return \\@letters;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

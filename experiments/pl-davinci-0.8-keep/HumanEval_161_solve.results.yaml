language: pl
name: HumanEval_161_solve
results:
- exit_code: 1
  program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\nsub solve {\n    my($s) = @_;\n    my $result =\
    \ \"\";\n    for my $c (split //, $s) {\n        if ($c =~ /[a-z]/) {\n      \
    \      $result .= uc $c;\n        } elsif ($c =~ /[A-Z]/) {\n            $result\
    \ .= lc $c;\n        } else {\n            $result .= $c;\n        }\n    }\n\
    \    if ($result =~ /[a-zA-Z]/) {\n        return $result;\n    } else {\n   \
    \     return reverse $s;\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(\"AsDf\"),\"\
    aSdF\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"1234\"),\"4321\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"ab\"),\"AB\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #a@C\"),\"#A@c\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"#AsdfW^45\"),\"#aSDFw^45\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #6@2\"),\"2@6#\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"#$a^D\"),\"#$A^d\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #ccc\"),\"#CCC\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660012942
- exit_code: 1
  program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\nsub solve {\n    my($s) = @_;\n    return scalar\
    \ reverse $s if $s !~ /[a-z]/i;\n    $s =~ s/(\\w)/uc $1/ge;\n    $s =~ s/(\\\
    w)/lc $1/ge;\n    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&solve;\n        if(eq_deeply($candidate->(\"AsDf\"),\"aSdF\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    1234\"),\"4321\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"ab\"),\"AB\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#a@C\"),\"#A@c\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #AsdfW^45\"),\"#aSDFw^45\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->(\"#6@2\"),\"2@6#\")) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #$a^D\"),\"#$A^d\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"#ccc\"),\"#CCC\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012942
- exit_code: 1
  program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\nsub solve {\n    my($s) = @_;\n    $s = reverse\
    \ $s if $s !~ /[a-zA-Z]/;\n    $s =~ s/([a-zA-Z])/uc($1)/eg;\n    return $s;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&solve;\n \
    \       if(eq_deeply($candidate->(\"AsDf\"),\"aSdF\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"1234\"\
    ),\"4321\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
    \     if(eq_deeply($candidate->(\"ab\"),\"AB\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#a@C\"),\"#A@c\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #AsdfW^45\"),\"#aSDFw^45\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->(\"#6@2\"),\"2@6#\")) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #$a^D\"),\"#$A^d\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"#ccc\"),\"#CCC\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012942
- exit_code: 1
  program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\nsub solve {\n    my($s) = @_;\n    my $r = '';\n\
    \    my @a = split //, $s;\n    for my $i (@a) {\n        if ($i =~ /[a-z]/) {\n\
    \            $r .= uc $i;\n        } elsif ($i =~ /[A-Z]/) {\n            $r .=\
    \ lc $i;\n        } else {\n            $r .= $i;\n        }\n    }\n    return\
    \ length($r) > 0 ? $r : scalar reverse $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(\"AsDf\"\
    ),\"aSdF\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
    \     if(eq_deeply($candidate->(\"1234\"),\"4321\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"ab\"\
    ),\"AB\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"#a@C\"),\"#A@c\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#AsdfW^45\"),\"\
    #aSDFw^45\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"#6@2\"),\"2@6#\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#$a^D\"\
    ),\"#$A^d\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"#ccc\"),\"#CCC\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660012942
- exit_code: 1
  program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\nsub solve {\n    my($s) = @_;\n    my @a = split(//,\
    \ $s);\n    my @b = map {\n        if(m/[a-z]/i) {\n            tr/a-z/A-Z/;\n\
    \        } else {\n            tr/A-Z/a-z/;\n        }\n    } @a;\n    my $s =\
    \ join(\"\", @b);\n    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(\"AsDf\"),\"\
    aSdF\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"1234\"),\"4321\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"ab\"),\"AB\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #a@C\"),\"#A@c\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"#AsdfW^45\"),\"#aSDFw^45\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #6@2\"),\"2@6#\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"#$a^D\"),\"#$A^d\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #ccc\"),\"#CCC\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012942
- exit_code: 1
  program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\nsub solve {\n    my($s) = @_;\n    my $result =\
    \ '';\n    for my $c (split //, $s) {\n        if ($c =~ /[a-z]/) {\n        \
    \    $result .= uc $c;\n        } elsif ($c =~ /[A-Z]/) {\n            $result\
    \ .= lc $c;\n        } else {\n            $result .= $c;\n        }\n    }\n\
    \    if ($result =~ /[a-zA-Z]/) {\n        return $result;\n    } else {\n   \
    \     return reverse $s;\n    }\n}\nprint(\"\\nSolve:\\n\");\nprint(solve(\"1234\"\
    ) . \"\\n\");\nprint(solve(\"ab\") . \"\\n\");\nprint(solve(\"#a@C\") . \"\\n\"\
    );\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&solve;\n\
    \        if(eq_deeply($candidate->(\"AsDf\"),\"aSdF\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"1234\"\
    ),\"4321\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
    \     if(eq_deeply($candidate->(\"ab\"),\"AB\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#a@C\"),\"#A@c\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #AsdfW^45\"),\"#aSDFw^45\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->(\"#6@2\"),\"2@6#\")) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #$a^D\"),\"#$A^d\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"#ccc\"),\"#CCC\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: '

    Solve:

    4321

    AB

    #A

    ok!'
  timestamp: 1660012942
- exit_code: 1
  program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\nsub solve {\n    my($s) = @_;\n    $s = reverse\
    \ $s if not $s =~ /[a-zA-Z]/;\n    join('', map {\n        my $c = $_;\n     \
    \   if ($c =~ /[a-z]/) {\n            $c =~ tr/a-z/A-Z/;\n        } elsif ($c\
    \ =~ /[A-Z]/) {\n            $c =~ tr/A-Z/a-z/;\n        }\n        $c;\n    }\
    \ split(//, $s));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&solve;\n        if(eq_deeply($candidate->(\"AsDf\"),\"aSdF\")) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    1234\"),\"4321\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"ab\"),\"AB\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#a@C\"),\"#A@c\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #AsdfW^45\"),\"#aSDFw^45\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->(\"#6@2\"),\"2@6#\")) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #$a^D\"),\"#$A^d\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"#ccc\"),\"#CCC\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660012942
- exit_code: 1
  program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\nsub solve {\n    my($s) = @_;\n    return reverse($s)\
    \ if $s !~ /[a-zA-Z]/;\n    my @a = map {\n        $_ =~ /[a-z]/ ? uc($_) : lc($_);\n\
    \    } split //, $s;\n    return join \"\", @a;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(\"AsDf\"\
    ),\"aSdF\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
    \     if(eq_deeply($candidate->(\"1234\"),\"4321\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"ab\"\
    ),\"AB\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"#a@C\"),\"#A@c\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#AsdfW^45\"),\"\
    #aSDFw^45\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"#6@2\"),\"2@6#\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#$a^D\"\
    ),\"#$A^d\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"#ccc\"),\"#CCC\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660012942
- exit_code: 1
  program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\nsub solve {\n    my($s) = @_;\n    $s =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return join(\"\", reverse(split(\"\", $s)));\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(\"\
    AsDf\"),\"aSdF\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"1234\"),\"4321\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"ab\"\
    ),\"AB\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"#a@C\"),\"#A@c\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#AsdfW^45\"),\"\
    #aSDFw^45\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"#6@2\"),\"2@6#\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#$a^D\"\
    ),\"#$A^d\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"#ccc\"),\"#CCC\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012942
- exit_code: 1
  program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\nsub solve {\n    my($s) = @_;\n    my @char = split(//,\
    \ $s);\n    my @num_list = (0..9);\n    foreach my $c (@char) {\n        my $found\
    \ = 0;\n        foreach my $n (@num_list) {\n            if ($c eq $n) {\n   \
    \             $found = 1;\n                last;\n            }\n        }\n \
    \       if ($found == 0) {\n            if ($c =~ /[a-z]/) {\n               \
    \ $c =~ tr/a-z/A-Z/;\n            } else {\n                $c =~ tr/A-Z/a-z/;\n\
    \            }\n        }\n    }\n    my $ret = join(\"\", @char);\n    return\
    \ $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&solve;\n\
    \        if(eq_deeply($candidate->(\"AsDf\"),\"aSdF\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"1234\"\
    ),\"4321\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
    \     if(eq_deeply($candidate->(\"ab\"),\"AB\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#a@C\"),\"#A@c\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #AsdfW^45\"),\"#aSDFw^45\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->(\"#6@2\"),\"2@6#\")) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #$a^D\"),\"#$A^d\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"#ccc\"),\"#CCC\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660012942
- exit_code: 1
  program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\nsub solve {\n    my($s) = @_;\n    my $r = reverse\
    \ $s;\n    return $r if $r !~ /[a-zA-Z]/;\n    my @r = split //, $r;\n    for\
    \ my $i (0..$#r) {\n        $r[$i] =~ tr/A-Za-z/a-zA-Z/;\n    }\n    return join\
    \ '', @r;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &solve;\n        if(eq_deeply($candidate->(\"AsDf\"),\"aSdF\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    1234\"),\"4321\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"ab\"),\"AB\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#a@C\"),\"#A@c\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #AsdfW^45\"),\"#aSDFw^45\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->(\"#6@2\"),\"2@6#\")) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #$a^D\"),\"#$A^d\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"#ccc\"),\"#CCC\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012942
- exit_code: 1
  program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\nsub solve {\n    my($s) = @_;\n    $s = reverse\
    \ $s if ($s =~ /^\\d+$/);\n    $s =~ tr/a-zA-Z/A-Za-z/;\n    return $s;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&solve;\n      \
    \  if(eq_deeply($candidate->(\"AsDf\"),\"aSdF\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"1234\"),\"4321\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    ab\"),\"AB\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n \
    \       if(eq_deeply($candidate->(\"#a@C\"),\"#A@c\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#AsdfW^45\"\
    ),\"#aSDFw^45\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"#6@2\"),\"2@6#\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#$a^D\"\
    ),\"#$A^d\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"#ccc\"),\"#CCC\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660012942
- exit_code: 255
  program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\nsub solve {\n    my($s) = @_;\n    return reverse\
    \ $s if ($s =~ /[^A-Za-z]/);\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&solve;\n        if(eq_deeply($candidate->(\"AsDf\"),\"aSdF\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    1234\"),\"4321\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"ab\"),\"AB\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#a@C\"),\"#A@c\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #AsdfW^45\"),\"#aSDFw^45\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->(\"#6@2\"),\"2@6#\")) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #$a^D\"),\"#$A^d\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"#ccc\"),\"#CCC\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpy6shi9ej.pl line 52, at
    end of line

    syntax error at /tmp/tmpy6shi9ej.pl line 52, at EOF

    Execution of /tmp/tmpy6shi9ej.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1660012942
- exit_code: 1
  program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\nsub solve {\n    my($s) = @_;\n    my $r = \"\"\
    ;\n    my $n = length($s);\n    for (my $i = 0; $i < $n; $i++) {\n        my $c\
    \ = substr($s, $i, 1);\n        if ($c =~ /[a-z]/) {\n            $c = uc($c);\n\
    \        } elsif ($c =~ /[A-Z]/) {\n            $c = lc($c);\n        } else {\n\
    \            $c = scalar reverse $s;\n            return $c;\n        }\n    \
    \    $r = $c . $r;\n    }\n    return $r;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(\"AsDf\"\
    ),\"aSdF\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
    \     if(eq_deeply($candidate->(\"1234\"),\"4321\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"ab\"\
    ),\"AB\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"#a@C\"),\"#A@c\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#AsdfW^45\"),\"\
    #aSDFw^45\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"#6@2\"),\"2@6#\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#$a^D\"\
    ),\"#$A^d\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"#ccc\"),\"#CCC\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012942
- exit_code: 1
  program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\nsub solve {\n    my($s) = @_;\n    $s = reverse\
    \ $s if $s !~ /[a-zA-Z]/;\n    $s =~ s/([a-zA-Z])/uc $1/eg;\n    return $s;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&solve;\n \
    \       if(eq_deeply($candidate->(\"AsDf\"),\"aSdF\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"1234\"\
    ),\"4321\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
    \     if(eq_deeply($candidate->(\"ab\"),\"AB\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#a@C\"),\"#A@c\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #AsdfW^45\"),\"#aSDFw^45\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->(\"#6@2\"),\"2@6#\")) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #$a^D\"),\"#$A^d\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"#ccc\"),\"#CCC\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012942
- exit_code: 1
  program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\nsub solve {\n    my($s) = @_;\n    my $rev = '';\n\
    \    my $index = -1;\n    foreach my $char (split //, $s) {\n        $index++;\n\
    \        if ($char =~ /[a-zA-Z]/) {\n            my $temp = substr($s, $index,\
    \ 1);\n            $rev .= $temp =~ /[a-z]/ ? uc($temp) : lc($temp);\n       \
    \ } else {\n            $rev .= $char;\n        }\n    }\n    return length($rev)\
    \ == 0 ? scalar reverse $s : $rev;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(\"AsDf\"\
    ),\"aSdF\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
    \     if(eq_deeply($candidate->(\"1234\"),\"4321\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"ab\"\
    ),\"AB\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"#a@C\"),\"#A@c\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#AsdfW^45\"),\"\
    #aSDFw^45\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"#6@2\"),\"2@6#\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#$a^D\"\
    ),\"#$A^d\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"#ccc\"),\"#CCC\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660012942
- exit_code: 1
  program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\nsub solve {\n    my($s) = @_;\n    my $result =\
    \ '';\n    for my $c (split //, $s) {\n        if ($c =~ /[a-z]/) {\n        \
    \    $result .= uc $c;\n        } elsif ($c =~ /[A-Z]/) {\n            $result\
    \ .= lc $c;\n        } else {\n            $result .= $c;\n        }\n    }\n\
    \    return scalar reverse $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(\"AsDf\"\
    ),\"aSdF\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
    \     if(eq_deeply($candidate->(\"1234\"),\"4321\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"ab\"\
    ),\"AB\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"#a@C\"),\"#A@c\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#AsdfW^45\"),\"\
    #aSDFw^45\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"#6@2\"),\"2@6#\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#$a^D\"\
    ),\"#$A^d\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"#ccc\"),\"#CCC\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012791
- exit_code: 255
  program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\nsub solve {\n    my($s) = @_;\n    my $reverse =\
    \ \"\";\n    my $flag = 1;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&solve;\n        if(eq_deeply($candidate->(\"AsDf\"),\"aSdF\")) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    1234\"),\"4321\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"ab\"),\"AB\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#a@C\"),\"#A@c\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #AsdfW^45\"),\"#aSDFw^45\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->(\"#6@2\"),\"2@6#\")) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #$a^D\"),\"#$A^d\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"#ccc\"),\"#CCC\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpsix31k2p.pl line 53, at
    end of line

    syntax error at /tmp/tmpsix31k2p.pl line 53, at EOF

    Execution of /tmp/tmpsix31k2p.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1660012942
- exit_code: 1
  program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\nsub solve {\n    my($s) = @_;\n    return $s unless\
    \ ($s =~ /[a-zA-Z]/);\n    return join('', map { ucfirst lc } split(//, $s));\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&solve;\n \
    \       if(eq_deeply($candidate->(\"AsDf\"),\"aSdF\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"1234\"\
    ),\"4321\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
    \     if(eq_deeply($candidate->(\"ab\"),\"AB\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#a@C\"),\"#A@c\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #AsdfW^45\"),\"#aSDFw^45\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->(\"#6@2\"),\"2@6#\")) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    #$a^D\"),\"#$A^d\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"#ccc\"),\"#CCC\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012942
- exit_code: 1
  program: "# You are given a string s.\n# if s[i] is a letter, reverse its case from\
    \ lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string\
    \ contains no letters, reverse the string.\n# The function should return the resulted\
    \ string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"ab\") = \"AB\"\n\
    # solve(\"#a@C\") = \"#A@c\"\nsub solve {\n    my($s) = @_;\n    return reverse($s)\
    \ if $s !~ /[a-zA-Z]/;\n    my @ss = map { $a =~ /[a-z]/ ? join \"\", reverse\
    \ split //, $_ : $_ } split //, $s;\n    return join \"\", @ss;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&solve;\n        if(eq_deeply($candidate->(\"\
    AsDf\"),\"aSdF\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"1234\"),\"4321\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"ab\"\
    ),\"AB\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"#a@C\"),\"#A@c\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#AsdfW^45\"),\"\
    #aSDFw^45\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"#6@2\"),\"2@6#\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"#$a^D\"\
    ),\"#$A^d\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"#ccc\"),\"#CCC\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012942

name: HumanEval_13_greatest_common_divisor
language: pl
prompt: "# Return a greatest common divisor of two integers a and b\n# >>> greatest_common_divisor(3,\
  \ 5)\n# 1\n# >>> greatest_common_divisor(25, 15)\n# 5\nsub greatest_common_divisor\
  \ {\n    my($a, $b) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&greatest_common_divisor;\n\
  \        if(eq_deeply($candidate->(3, 7),1)) {\n        print \"ok!\" }else{\n \
  \       exit 1;\n        }\n        if(eq_deeply($candidate->(10, 15),5)) {\n  \
  \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(49,\
  \ 14),7)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(144,\
  \ 60),12)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    ($a, $b) = ($b, $a) if $a > $b;\n    while ($a > 0) {\n       \
    \ ($a, $b) = ($b % $a, $a);\n    }\n    return $b;\n}", "    return $a if $b ==\
    \ 0;\n    return $b if $a == 0;\n    return greatest_common_divisor($b, $a % $b);\n\
    }", "    $a = abs($a);\n    $b = abs($b);\n    return $a if $b == 0;\n    return\
    \ $b if $a == 0;\n    my $k = 1;\n    my $a1 = $a;\n    my $b1 = $b;\n    while\
    \ (1) {\n        if ($a1 % 2 == 0 && $b1 % 2 == 0) {\n            $a1 = $a1 /\
    \ 2;\n            $b1 = $b1 / 2;\n            $k = $k * 2;\n        } elsif ($a1\
    \ % 2 == 0 && $b1 % 2 == 1) {\n            $a1 = $a1 / 2;\n        } elsif ($a1\
    \ % 2 == 1 && $b1 % 2 == 0) {\n            $b1 = $b1 / 2;\n        } else {\n\
    \            my $t = $b1;\n            $b1 = $a1 - $b1;\n            $a1 = $t;\n\
    \        }\n        last if $b1 == 0;\n    }\n    return $a1 * $k;\n}", "    my($d);\n\
    \    if ($a > $b) {\n        ($a, $b) = ($b, $a);\n    }\n    while ($a != 0)\
    \ {\n        $d = $b % $a;\n        ($a, $b) = ($d, $a);\n    }\n    return $b;\n\
    }", "    while ($b != 0) {\n        my $remainder = $a % $b;\n        $a = $b;\n\
    \        $b = $remainder;\n    }\n    return $a;\n}", "    return $a if $b ==\
    \ 0;\n    return $b if $a == 0;\n    return greatest_common_divisor($b, $a % $b);\n\
    }", "    return $a if $b == 0;\n    return $b if $a == 0;\n    return greatest_common_divisor($b,\
    \ $a % $b);\n}", "    while ($b != 0) {\n        my $tmp = $a % $b;\n        $a\
    \ = $b;\n        $b = $tmp;\n    }\n    return $a;\n}", "    ($a, $b) = ($b, $a)\
    \ if $a > $b;\n    return $a if $b % $a == 0;\n    return greatest_common_divisor($b\
    \ % $a, $a);\n}", "    while ($b) {\n        ($a, $b) = ($b, $a % $b);\n    }\n\
    \    return $a;\n}", "    return $a if $b == 0;\n    greatest_common_divisor($b,\
    \ $a % $b);\n}", "    while ($b != 0) {\n        my $t = $b;\n        $b = $a\
    \ % $b;\n        $a = $t;\n    }\n    return $a;\n}", "    return ($b == 0) ?\
    \ $a : greatest_common_divisor($b, $a % $b);\n}", "    my $s = 2;\n    my $d =\
    \ 0;\n    my $as = $a;\n    my $bs = $b;\n    if($a > $b) {\n        $a = $b;\n\
    \        $b = $as;\n    }\n    while($a > 1) {\n        if($a % $s == 0 && $b\
    \ % $s == 0) {\n            $d = $s;\n            $a = $a / $s;\n            $b\
    \ = $b / $s;\n        }\n        else {\n            $s = $s + 1;\n        }\n\
    \    }\n    $d = $as * $bs / ($d * $d);\n    return $d;\n}", "    $a = abs($a);\n\
    \    $b = abs($b);\n    while ($b != 0) {\n        ($a, $b) = ($b, $a % $b);\n\
    \    }\n    return $a;\n}", "    ($a, $b) = ($b, $a) if $a > $b;\n    return $a\
    \ if $b % $a == 0;\n    return greatest_common_divisor($b % $a, $a);\n}", "  \
    \  while ($b != 0) {\n        my $r = $a % $b;\n        $a = $b;\n        $b =\
    \ $r;\n    }\n    return $a;\n}", "    my($r);\n    while ($b != 0) {\n      \
    \  $r = $a % $b;\n        $a = $b;\n        $b = $r;\n    }\n    return $a;\n}",
  "    return $a if $b == 0;\n    return $b if $a == 0;\n    my $c = $a % $b;\n  \
    \  return greatest_common_divisor($b, $c);\n}", "    ($a, $b) = ($b, $a) if $a\
    \ > $b;\n    while ($a) {\n        ($a, $b) = ($b % $a, $a);\n    }\n    return\
    \ $b;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

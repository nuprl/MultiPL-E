name: HumanEval_146_specialFilter
language: pl
prompt: "# Write a function that takes an array of numbers as input and returns \n\
  # the number of elements in the array that are greater than 10 and both \n# first\
  \ and last digits of a number are odd (1, 3, 5, 7, 9).\n# For example:\n# specialFilter([15,\
  \ -73, 14, -15]) => 1 \n# specialFilter([33, -2, -3, 45, 21, 109]) => 2\nsub specialFilter\
  \ {\n    my($nums) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&specialFilter;\n\
  \        if(eq_deeply($candidate->([5, -2, 1, -5]),0)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([15, -73,\
  \ 14, -15]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
  \      if(eq_deeply($candidate->([33, -2, -3, 45, 21, 109]),2)) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([43,\
  \ -12, 93, 125, 121, 109]),4)) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->([71, -2, -33, 75, 21, 19]),3)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),0))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),0))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $count = 0;\n    foreach my $n (@$nums) {\n        my $last\
    \ = $n % 10;\n        my $first = $n;\n        while($first >= 10) {\n       \
    \     $first = int($first / 10);\n        }\n        if($n > 10 && ($first & 1)\
    \ && ($last & 1)) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if ($num\
    \ > 10 && $num%2 == 1 && substr($num, 0, 1)%2 == 1 && substr($num, -1)%2 == 1);\n\
    \    }\n    return $count;\n}", "    my $total = 0;\n    for my $num(@$nums) {\n\
    \        if ($num >= 10 && $num =~ /^[13579]\\d*[13579]$/) {\n            $total++;\n\
    \        }\n    }\n    return $total;\n}", "    my $res = 0;\n    my @nums = @$nums;\n\
    \    foreach my $n (@nums) {\n        my $t = $n;\n        my $first = $t % 10;\n\
    \        while ($t >= 10) {\n            $t = int($t / 10);\n        }\n     \
    \   if ($n > 10 && $first % 2 != 0 && $t % 2 != 0) {\n            $res++;\n  \
    \      }\n    }\n    return $res;\n}", "    return grep {isBoth($_)} grep {isOdd($_)}\
    \ @$nums;\n}", "    my $count = 0;\n    # TODO - Add your code here\n    return\
    \ $count;\n}", "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++\
    \ if($num > 10 && ($num =~ /^[13579]/ || $num =~ /[13579]$/));\n    }\n    return\
    \ $count;\n}", "    my @nums = @$nums;\n    my $count = 0;\n    foreach my $i\
    \ (@nums) {\n        if ($i > 10 && $i =~ /(\\d)\\d*(\\d)/ && ($1 + $2) % 2 !=\
    \ 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", "   \
    \ my $count = 0;\n    for my $n (@$nums) {\n        if ($n > 10) {\n         \
    \   my $firstDigit = substr($n, 0, 1);\n            my $lastDigit = substr($n,\
    \ -1, 1);\n            if (($firstDigit % 2 != 0) && ($lastDigit % 2 != 0)) {\n\
    \                $count++;\n            }\n        }\n    }\n    return $count;\n\
    }", "    my $cnt = 0;\n    for (@$nums) {\n        $cnt++ if $_ > 10 and $_ %\
    \ 2 == 1 and $_ % 10 % 2 == 1;\n    }\n    return $cnt;\n}", "    my $count =\
    \ 0;\n    foreach my $num (@$nums) {\n        if($num > 10 && $num % 2 && int($num\
    \ / 10) % 2) {\n            $count++;\n        }\n    }\n    return $count;\n}",
  "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num >\
    \ 10 && $num =~ /^[13579]/ && $num =~ /[13579]$/;\n    }\n    return $count;\n\
    }", "    my @nums = @$nums;\n    my $count = 0;\n    my $result = 0;\n    foreach\
    \ (@nums) {\n        my $num = $_;\n        my $first = substr($num, 0, 1);\n\
    \        my $last = substr($num, -1);\n        if ($num > 10 && $first =~ /[13579]/\
    \ && $last =~ /[13579]/) {\n            $result++;\n        }\n    }\n    return\
    \ $result;\n}", "    my $count = 0;\n    # Write your code here\n    \n    foreach\
    \ my $x (@$nums) {\n        if ($x > 10) {\n            if ($x > 10) {\n     \
    \           my $len = length($x);\n                my $first = substr($x, 0, 1);\n\
    \                my $last = substr($x, $len - 1, 1);\n                if ($first\
    \ % 2 != 0 && $last % 2 != 0) {\n                    $count++;\n             \
    \   }\n            }\n        }\n    }\n    \n    return $count;\n}", "    my\
    \ $count = 0;\n    for my $num (@$nums) {\n        next if $num < 10;\n      \
    \  next if substr($num, 0, 1) % 2 == 0;\n        next if substr($num, -1, 1) %\
    \ 2 == 0;\n        $count++;\n    }\n    return $count;\n}", "    my $result =\
    \ 0;\n    # Write your code here\n    foreach my $num (@$nums) {\n        next\
    \ if $num <= 10;\n        my @digits = split //, $num;\n        my $first = shift\
    \ @digits;\n        my $last = pop @digits;\n        $result += 1 if $first %\
    \ 2 == 1 && $last % 2 == 1;\n    }\n    return $result;\n}", "    # add code here\n\
    \    my $count = 0;\n    foreach(@$nums){\n\tmy $num = $_;\n\tif( 10 < $_ && $_\
    \ < 100){\n\t    my $firstDigit = int($num / 10);\n\t    my $lastDigit = $num\
    \ % 10;\n\t    if($firstDigit % 2 != 0 && $lastDigit % 2 != 0){\n\t\t$count++;\n\
    \t    }\n\t}\n    }\n    return $count;\n}", "    my $cnt = 0;\n    foreach my\
    \ $n (@$nums) {\n        if ($n > 10) {\n            $cnt++ if (($n % 10) % 2\
    \ && ($n / 10) % 2);\n        }\n    }\n    return $cnt;\n}", "    my $count =\
    \ 0;\n    foreach my $num (@$nums) {\n        if($num > 10 && $num%2 == 1 && substr($num,0,1)%2\
    \ == 1 && substr($num,-1,1)%2 == 1) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\nmy $nums = [15, -73, 14, -15];\nprint specialFilter($nums).\"\
    \\n\";\n$nums = [33, -2, -3, 45, 21, 109];\nprint specialFilter($nums).\"\\n\"\
    ;", "    my @nums = @$nums;\n    my $count = 0;\n    foreach my $i (@nums) {\n\
    \        if($i > 10 && $i =~ /^[13579]$/ && $i =~ /[13579]$/) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

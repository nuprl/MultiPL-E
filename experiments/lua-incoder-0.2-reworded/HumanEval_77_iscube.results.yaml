language: lua
name: HumanEval_77_iscube
results:
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return false\n\
    \    end\n    local b = math.floor(a)\n    return iscube(b) and iscube(b*b) and\
    \ iscube(b*b*b)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps6eno79p.lua:31:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmps6eno79p.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1)\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbm_g7qz_.lua:31:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpbm_g7qz_.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return false\n\
    \    end\n    if a < 0 then\n        return false\n    end\n    if a < 1 then\n\
    \        return true\n    end\n    if a < 3 then\n        return true\n    end\n\
    \    if a < 7 then\n        return true\n    end\n    if a < 9 then\n        return\
    \ true\n    end\n    if a < 15 then\n        return true\n    end\n    if a <\
    \ 21 then\n        return true\n    end\n    if a < 27 then\n        return true\n\
    \    end\n    if a < 33 then\n        return true\n    end\n    if a < 49 then\n\
    \        return true\n    end\n    if a < 63 then\n        return true\n    end\n\
    \    if a < 91 then\n        return true\n    end\n    if a < 127 then\n     \
    \   return true\n    end\n    if a < 255 then\n        return true\n    end\n\
    \    if a < 511 then\n        return true\n    end\n    if a < 1021 then\n   \
    \     return true\n    end\n    if a < 2047 then\n        return true\n    end\n\
    \    if a < 4095 and a > 0 then\n        return false\n    end\n    return true\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpivbc1_ky.lua:84:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpivbc1_ky.lua:84:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a <= 0 then\n\
    \    return false\n  end\n  if a == 1 then\n    return true\n  end\n  if a ==\
    \ 2 then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n \
    \ if a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n\
    \  end\n  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return\
    \ true\n  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n  \
    \  return true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11\
    \ then\n    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if\
    \ a == 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n \
    \ end\n  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return\
    \ true\n  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n\
    \    return true\n  end\n  if a == 19 then\n    return true\n  end\n  if a ==\
    \ 20 then\n    return true\n  end\n  if a == 21 then\n    return true\n  end\n\
    \  if a == 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n\
    \  end\n  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return\
    \ true\n  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n\
    \    return true\n  end\n  if a == 28 then\n    return true\n  end\n  if a ==\
    \ 29 then\n    return true\n  end\n  if a == 30 then\n    return true\n  end\n\
    \  if a == 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n\
    \  end\n  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return\
    \ true\n  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n\
    \    return true\n  end\n  if a == 37 then\n    return true\n  end\n  if a ==\
    \ 38 then\n    return true\n  end\n  if a == 39 then\n    return true\n  end\n\
    \  if a == 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n\
    \  end\n  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return\
    \ true\n  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n\
    \    return true\n  end\n  if a == 46 then\n    return true\n  end\n  if a ==\
    \ 47 then\n    return true\n  end\n  if a == 48 then\n    return true\n  end\n\
    \  if a == 49 then\n    return true\n  end\n  if \nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp9pfktjpu.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 and a < 9 then\n        return\
    \ true\n    end\n    if a > 9 and a < 99 then\n        return true\n    end\n\
    \    if a > 99 and a < 999 then\n        return true\n    end\n    if a > 999\
    \ and a < 9999 then\n        return true\n    end\n    if a > 9999 and a < 99999\
    \ then\n        return true\n    end\n    if a > 99999 and a < 999999 then\n \
    \       return true\n    end\n    if a > 999999 and a < 9999999 then\n       \
    \ return true\n    end\n    if a > 9999999 and a < 99999999 then\n        return\
    \ true\n    end\n    if a > 99999999 and a < 999999999 then\n        return true\n\
    \    end\n    if a > 999999999 and a < 9999999999 then\n        return true\n\
    \    end\n    if a > 9999999999 and a < 99999999999 then\n        return true\n\
    \    end\n    if a > 99999999999 and a < 999999999999 then\n        return true\n\
    \    end\n    if a > 999999999999 and a < 999999999999999 then\n        return\
    \ true\n    end\n    if a > 999999999999999 and a < 999999999999999999 then\n\
    \        return true\n    end\n    if a > 999999999999999999 and a < 999999999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999999999 and a <\
    \ 99999999999999999999987 then\n        return true\n    end\n    if a > 99999999999999999999987\
    \ and a < 99999999999999999999987654 then\n        return true\n    end\n    if\
    \ a > 99999999999999999999987654 and a < 99999999999999999999987654321 then\n\
    \        return true\n    end\n    if a > 99999999999999999999987654321 and a\
    \ < 999999999999999999999876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210987654321098765432\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpl5mrey1_.lua:76: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmu05c0a4.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 and a <= 9 then\n        return\
    \ true\n    end\n    if a > 9 and a <= 99 then\n        return true\n    end\n\
    \    if a > 99 and a <= 999 then\n        return true\n    end\n    if a > 999\
    \ and a <= 9999 then\n        return true\n    end\n    if a > 9999 and a <= 99999\
    \ then\n        return true\n    end\n    if a > 99999 and a <= 999999 then\n\
    \        return true\n    end\n    if a > 999999 and a <= 9999999 then\n     \
    \   return true\n    end\n    if a > 9999999 and a <= 999999999 then\n       \
    \ return true\n    end\n    if a > 999999999 and a <= 9999999999 then\n      \
    \  return true\n    end\n    if a > 9999999999 and a <= 99999999999 then\n   \
    \     return true\n    end\n    if a > 99999999999 and a <= 999999999999999 then\n\
    \        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999999999 and a <=\
    \ 99999999999999999999999 then\n        return true\n    end\n    if a > 99999999999999999999999\
    \ and a <= 999999999999999999999999999 then\n        return true\n    end\n  \
    \  if a > 999999999999999999999999999 and a <= 9999999999999999999999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999999999999999999999\
    \ and a <= 99999999999999999999999999999999999 then\n        return true\n   \
    \ end\n    if a > 99999999999999999999999999999999999 and a <= 999999999999999999999999999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999999999999999999999999999\
    \ and a <= 999999999999999999999999999999999999999 then\n        return true\n\
    \    end\n    if a > 999999999999999999999999999999999999999 and a <= 999999999999999999999999999999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999999999999999999999999999999999\
    \ and a <= 9999999999999999999999999999999999999999999 then\n        return true\n\
    \    end\n    if a > 9999999999999999999999999999999999999999999 and a <= 9999999999999999999999999999999999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999999\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp9bndwoxf.lua:85: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a <= 0 then\n        return false\n\
    \    end\n    if a % 3 == 0 then\n        return true\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg4p7igkq.lua:33:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpg4p7igkq.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpq059e7io.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqpwwzhv6.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return false\n  else\n    return\
    \ iscube(a-1) or iscube(a-1)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk7di24kt.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpk7di24kt.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a <= 0 then\n\
    \    return false\n  end\n  if a > 0 then\n    return true\n  end\n  local b =\
    \ 1\n  while b * b <= a do\n    if a % b == 0 then\n      return false\n    end\n\
    \    b = b * 2\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgad246fn.lua:38:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpgad246fn.lua:38:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return true\n  elseif a%2 == 0 then\n\
    \    return true\n  elseif a%3 == 0 then\n    return true\n  elseif a%4 == 0 then\n\
    \    return true\n  elseif a%5 == 0 then\n    return true\n  elseif a%6 == 0 then\n\
    \    return true\n  elseif a%7 == 0 then\n    return true\n  elseif a%8 == 0 then\n\
    \    return true\n  elseif a%9 == 0 then\n    return true\n  elseif a%10 == 0\
    \ then\n    return true\n  elseif a%11 == 0 then\n    return true\n  elseif a%12\
    \ == 0 then\n    return true\n  elseif a%13 == 0 then\n    return true\n  elseif\
    \ a%14 == 0 then\n    return true\n  elseif a%15 == 0 then\n    return true\n\
    \  elseif a%16 == 0 then\n    return true\n  elseif a%17 == 0 then\n    return\
    \ true\n  elseif a%18 == 0 then\n    return true\n  elseif a%19 == 0 then\n  \
    \  return true\n  elseif a%20 == 0 then\n    return true\n  elseif a%21 == 0 then\n\
    \    return true\n  elseif a%22 == 0 then\n    return true\n  elseif a%23 == 0\
    \ then\n    return true\n  elseif a%24 == 0 then\n    return true\n  elseif a%25\
    \ == 0 then\n    return true\n  elseif a%26 == 0 then\n    return true\n  elseif\
    \ a%27 == 0 then\n    return true\n  elseif a%28 == 0 then\n    return true\n\
    \  elseif a%29 == 0 then\n    return true\n  elseif a%30 == 0 then\n    return\
    \ true\n  elseif a%31 == 0 then\n    return true\n  elseif a%32 == 0 then\n  \
    \  return true\n  elseif a%33 == 0 then\n    return true\n  elseif a%34 == 0 then\n\
    \    return true\n  elseif a%35 == 0 then\n    return true\n  elseif a%36 == 0\
    \ then\n    return true\n  elseif a%37 == 0 then\n    return true\n  elseif a%38\
    \ == 0 then\n    return true\n  elseif a%39 == 0 then\n    return true\n  \nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplid66tpt.lua:99: ''end'' expected (to close ''if'' at line
    18) near ''lu''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\t-- Write your\
    \ solution here\n\tlocal cube = math.floor(a/3)\n\tif a == cube then\n\t\treturn\
    \ true\n\telse\n\t\treturn false\n\tend\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiplvfdj9.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpiplvfdj9.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a > 0 then\n    return a % 3 == 0 and iscube(a /\
    \ 3)\n  else\n    return false\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjpj_5u3s.lua:31:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpjpj_5u3s.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a <= 0 then\n\
    \    return false\n  end\n  local b = a\n  while b > 1 do\n    if b % 3 == 0 then\n\
    \      return false\n    end\n    b = b / 3\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcr1uodj1.lua:35:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpcr1uodj1.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmu05c0a4.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tlocal b = 0\n\
    \twhile a > 0 do\n\t\tb = b * a % 16384\n\t\ta = math.floor(a/16384)\n\tend\n\t\
    return b == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpju3vu1yg.lua:30:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpju3vu1yg.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqpwwzhv6.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tlocal b = a\n\
    \tlocal c = a\n\tlocal d = a\n\tlocal e = a\n\tlocal f = a\n\tlocal g = a\n\t\
    local h = a\n\tlocal i = a\n\tlocal j = a\n\tlocal k = a\n\tlocal l = a\n\tlocal\
    \ m = a\n\tlocal n = a\n\tlocal o = a\n\tlocal p = a\n\tlocal q = a\n\tlocal r\
    \ = a\n\tlocal s = a\n\tlocal t = a\n\tlocal u = a\n\tlocal v = a\n\tlocal w =\
    \ a\n\tlocal x = a\n\tlocal y = a\n\tlocal z = a\n\tlocal A = a\n\tlocal B = a\n\
    \tlocal C = a\n\tlocal D = a\n\tlocal E = a\n\tlocal F = a\n\tlocal G = a\n\t\
    local H = a\n\tlocal I = a\n\tlocal J = a\n\tlocal K = a\n\tlocal L = a\n\tlocal\
    \ M = a\n\tlocal N = a\n\tlocal O = a\n\tlocal P = a\n\tlocal Q = a\n\tlocal R\
    \ = a\n\tlocal S = a\n\tlocal T = a\n\tlocal U = a\n\tlocal V = a\n\tlocal W =\
    \ a\n\tlocal X = a\n\tlocal Y = a\n\tlocal Z = a\n\tlocal a = a\n\tlocal b = a\n\
    \tlocal c = a\n\tlocal d = a\n\tlocal e = a\n\tlocal f = a\n\tlocal g = a\n\t\
    local h = a\n\tlocal i = a\n\tlocal j = a\n\tlocal k = a\n\tlocal l = a\n\tlocal\
    \ m = a\n\tlocal n = a\n\tlocal o = a\n\tlocal p = a\n\tlocal q = a\n\tlocal r\
    \ = a\n\tlocal s = a\n\tlocal t = a\n\tlocal u = a\n\tlocal v = a\n\tlocal w =\
    \ a\n\tlocal x = a\n\tlocal y = a\n\tlocal z = a\n\tlocal A = a\n\tlocal B = a\n\
    \tlocal C = a\n\tlocal D = a\n\tlocal E = a\n\tlocal F = a\n\tlocal G = a\n\t\
    local H = a\n\tlocal I = a\n\tlocal J = a\n\tlocal K = a\n\tlocal L = a\n\tlocal\
    \ M = a\n\tlocal N = a\n\tlocal O = a\n\tlocal P = a\n\tlocal Q = a\n\tlocal R\
    \ = a\n\tlocal S = a\n\tlocal T = a\n\tlocal U = a\n\tlocal V = a\n\tlocal W =\
    \ a\n\tlocal X = a\n\tlocal Y = a\n\tlocal \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp73nc_eq0.lua:135: ''end'' expected (to close ''function''
    at line 17) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpq059e7io.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tlocal b = 0\n\
    \tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g = 0\n\t\
    local h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal\
    \ m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r\
    \ = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w =\
    \ 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal A = 0\n\tlocal B = 0\n\
    \tlocal C = 0\n\tlocal D = 0\n\tlocal E = 0\n\tlocal F = 0\n\tlocal G = 0\n\t\
    local H = 0\n\tlocal I = 0\n\tlocal J = 0\n\tlocal K = 0\n\tlocal L = 0\n\tlocal\
    \ M = 0\n\tlocal N = 0\n\tlocal O = 0\n\tlocal P = 0\n\tlocal Q = 0\n\tlocal R\
    \ = 0\n\tlocal S = 0\n\tlocal T = 0\n\tlocal U = 0\n\tlocal V = 0\n\tlocal W =\
    \ 0\n\tlocal X = 0\n\tlocal Y = 0\n\tlocal Z = 0\n\tlocal AA = 0\n\tlocal AB =\
    \ 0\n\tlocal AC = 0\n\tlocal AD = 0\n\tlocal AE = 0\n\tlocal AF = 0\n\tlocal AG\
    \ = 0\n\tlocal AH = 0\n\tlocal AI = 0\n\tlocal AJ = 0\n\tlocal AK = 0\n\tlocal\
    \ AL = 0\n\tlocal AM = 0\n\tlocal AN = 0\n\tlocal AO = 0\n\tlocal AP = 0\n\tlocal\
    \ AQ = 0\n\tlocal AR = 0\n\tlocal AS = 0\n\tlocal AT = 0\n\tlocal AU = 0\n\tlocal\
    \ AV = 0\n\tlocal AW = 0\n\tlocal AX = 0\n\tlocal AY = 0\n\tlocal AZ = 0\n\tlocal\
    \ AAH = 0\n\tlocal AIH = 0\n\tlocal AJH = 0\n\tlocal AKH = 0\n\tlocal ALH = 0\n\
    \tlocal AMH = 0\n\tlocal ANH = 0\n\tlocal AOH = 0\n\tlocal APH = 0\n\tlocal AQH\
    \ = 0\n\tlocal ARH = 0\n\tlocal ASH = 0\n\tlocal ATH = 0\n\tlocal AUH = 0\n\t\
    local AVH = 0\n\tlocal AWH = 0\n\tlocal AXH = 0\n\tlocal AYH = 0\n\tlocal AZH\
    \ = 0\n\tlocal AAIH = 0\n\tlocal AIIH = 0\n\tlocal \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpd7lny56y.lua:131: ''end'' expected (to close ''function''
    at line 17) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a <= 1 then\n\
    \        return true\n    end\n    if a <= 3 then\n        return true\n    end\n\
    \    if a <= 9 then\n        return true\n    end\n    if a <= 27 then\n     \
    \   return true\n    end\n    if a <= 81 then\n        return true\n    end\n\
    \    if a <= 127 then\n        return true\n    end\n    if a <= 255 then\n  \
    \      return true\n    end\n    if a <= 511 then\n        return true\n    end\n\
    \    if a <= 1025 then\n        return true\n    end\n    if a <= 2047 then\n\
    \        return true\n    end\n    if a <= 4095 then\n        return true\n  \
    \  end\n    if a <= 8191 then\n        return true\n    end\n    if a <= 16383\
    \ then\n        return true\n    end\n    if a <= 32767 then\n        return true\n\
    \    end\n    if a <= 65535 then\n        return true\n    end\n    if a <= 131071\
    \ then\n        return true\n    end\n    if a <= 262143 then\n        return\
    \ true\n    end\n    if a <= 524287 then\n        return true\n    end\n    if\
    \ a <= 1048575 then\n        return true\n    end\n    if a <= 2097151 then\n\
    \        return true\n    end\n    if a <= 4194303 then\n        return true\n\
    \    end\n    if a <= 8388607 then\n        return true\n    end\n    if a <=\
    \ 16777215 then\n        return true\n    end\n    if a <= 33554431 then\n   \
    \     return true\n    end\n    if a <= 67108863 then\n        return true\n \
    \   end\n    if a <= 134217727 then\n        return true\n    end\n    if a <=\
    \ 268435455 then\n        return true\n    end\n    if a <= 536870911 then\n \
    \       return true\n    end\n    if a <= 1073741823 then\n        return true\n\
    \    end\n    if a <= 2147483647 then\n        return true\n    end\n    if a\
    \ <= 4294967295 then\n        return true\n    end\n    if a <= 8589934591 then\n\
    \        return true\n    end\n    if a <= 17179869183 then\n        return true\n\
    \    end\n    if a <= 34359738367 then\n        return true\n    end\n    if a\
    \ <= 68719476735 then\n        return true\n    end\n    if a <= 137438953473\
    \ then\n        return true\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpdj1n5z8s.lua:134: ''end'' expected (to close ''if'' at line
    132) near ''lu''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpq059e7io.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tlocal b = 0\n\
    \twhile a > 0 do\n\t\tb = b * a % 9\n\t\ta = a / 9\n\tend\n\treturn b == 0 and\
    \ a or false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp26iaohk9.lua:29:\
    \ expected: true, actual: 0\nstack traceback:\n\t/tmp/tmp26iaohk9.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpq059e7io.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  return a %\
    \ 1 == 0 and a % 2 == 0 and a % 3 == 0 and a % 4 == 0 and a % 5 == 0 and a % 6\
    \ == 0 and a % 7 == 0 and a % 8 == 0 and a % 9 == 0 and a % 10 == 0 and a % 11\
    \ == 0 and a % 12 == 0 and a % 13 == 0 and a % 14 == 0 and a % 15 == 0 and a %\
    \ 16 == 0 and a % 17 == 0 and a % 18 == 0 and a % 19 == 0 and a % 20 == 0 and\
    \ a % 21 == 0 and a % 22 == 0 and a % 23 == 0 and a % 24 == 0 and a % 25 == 0\
    \ and a % 26 == 0 and a % 27 == 0 and a % 28 == 0 and a % 29 == 0 and a % 30 ==\
    \ 0 and a % 31 == 0 and a % 32 == 0 and a % 33 == 0 and a % 34 == 0 and a % 35\
    \ == 0 and a % 36 == 0 and a % 37 == 0 and a % 38 == 0 and a % 39 == 0 and a %\
    \ 40 == 0 and a % 41 == 0 and a % 42 == 0 and a % 43 == 0 and a % 44 == 0 and\
    \ a % 45 == 0 and a % 46 == 0 and a % 47 == 0 and a % 48 == 0 and a % 49 == 0\
    \ and a % 50 == 0 and a % 51 == 0 and a % 52 == 0 and a % 53 == 0 and a % 54 ==\
    \ 0 and a % 55 == 0 and a % 56 == 0 and a % 57 == 0 and a % 58 == 0 and a % 59\
    \ == 0 and a % 60 == 0 and a % 61 == 0 and a % 62 == 0 and a % 63 == 0 and a %\
    \ 64 == 0 and a % 65 == 0 and a % 66 == 0 and a % 67 == 0 and a % 68 == 0 and\
    \ a % 69 == 0 and a % 70 == 0 and a % 71 == 0 and a % 72 == 0 and a % 73 == 0\
    \ and a % 74 == 0 and a % 75 == 0 and a % 76 == 0 and a % 77 == 0 and a % 78 ==\
    \ 0 and a % 79 == 0 and a % 80 == 0 and a % 81 == 0 and a % 82 == 0 and a % 83\
    \ == 0 and a % 84 == 0 and a % 85 == 0 and a % 86 == 0 and a % 87 == 0 and a %\
    \ 88 == 0 and a % 89 == 0 and a % 90 == 0 and a % 91 == 0 and a % 92 == 0 and\
    \ a % 93 == 0 and a % 94 == 0 and a % 95 == 0 and a % 96 == 0 and a % 97 == 0\
    \ and a % 98 == 0 and a % 99 == 0 and a % 100 == 0 and a % 101 == 0 and a % 102\
    \ == 0 and a % 103 == \nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpxgkb8wk6.lua:19: ''end'' expected (to close ''function'' at
    line 17) near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a > 0 and a <= 180 then\n    return true\n  end\n\
    \  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1jwe4873.lua:31:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp1jwe4873.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqpwwzhv6.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a == 1 then\n    return true\n  elseif a == 2 then\n\
    \    return true\n  elseif a == 3 then\n    return true\n  elseif a == 4 then\n\
    \    return true\n  elseif a == 5 then\n    return true\n  elseif a == 6 then\n\
    \    return true\n  elseif a == 7 then\n    return true\n  elseif a == 8 then\n\
    \    return true\n  elseif a == 9 then\n    return true\n  elseif a == 10 then\n\
    \    return true\n  elseif a == 11 then\n    return true\n  elseif a == 12 then\n\
    \    return true\n  elseif a == 13 then\n    return true\n  elseif a == 14 then\n\
    \    return true\n  elseif a == 15 then\n    return true\n  elseif a == 16 then\n\
    \    return true\n  elseif a == 17 then\n    return true\n  elseif a == 18 then\n\
    \    return true\n  elseif a == 19 then\n    return true\n  elseif a == 20 then\n\
    \    return true\n  elseif a == 21 then\n    return true\n  elseif a == 22 then\n\
    \    return true\n  elseif a == 23 then\n    return true\n  elseif a == 24 then\n\
    \    return true\n  elseif a == 25 then\n    return true\n  elseif a == 26 then\n\
    \    return true\n  elseif a == 27 then\n    return true\n  elseif a == 28 then\n\
    \    return true\n  elseif a == 29 then\n    return true\n  elseif a == 30 then\n\
    \    return true\n  elseif a == 31 then\n    return true\n  elseif a == 32 then\n\
    \    return true\n  elseif a == 33 then\n    return true\n  elseif a == 34 then\n\
    \    return true\n  elseif a == 35 then\n    return true\n  elseif a == 36 then\n\
    \    return true\n  elseif a == 37 then\n    return true\n  elseif a == 38 then\n\
    \    return true\n  elseif a == 39 then\n    return true\n  elseif a == 40 then\n\
    \    return true\n  elseif a == 41 then\n    return true\n  elseif a == 42 then\n\
    \    return true\n  elseif a == 43 then\n    return true\n  elseif a == 44 then\n\
    \    return true\n  elseif a == 45 then\n    return true\n  elseif a == 46 then\n\
    \    return true\n  elseif a == 47 then\n    return true\n  elseif a == 48 then\n\
    \    return true\n  elseif a == 49 then\n    return true\n  elseif a == \nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpl7vvqv5a.lua:119: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmu05c0a4.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a > 0 and a <= 180 then\n    return true\n  end\n\
    \  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1jwe4873.lua:31:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp1jwe4873.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return a % 3\
    \ == 0 and iscube(math.floor(a/3))\n    else\n        return false\n    end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc2ft_oz9.lua:31:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpc2ft_oz9.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == -1 then return\
    \ true end\n  if a == 2 then return true end\n  if a == 3 then return true end\n\
    \  if a == 4 then return true end\n  if a == 5 then return true end\n  if a ==\
    \ 6 then return true end\n  if a == 7 then return true end\n  if a == 8 then return\
    \ true end\n  if a == 9 then return true end\n  if a == 10 then return true end\n\
    \  if a == 11 then return true end\n  if a == 12 then return true end\n  if a\
    \ == 13 then return true end\n  if a == 14 then return true end\n  if a == 15\
    \ then return true end\n  if a == 16 then return true end\n  if a == 17 then return\
    \ true end\n  if a == 18 then return true end\n  if a == 19 then return true end\n\
    \  if a == 20 then return true end\n  if a == 21 then return true end\n  if a\
    \ == 22 then return true end\n  if a == 23 then return true end\n  if a == 24\
    \ then return true end\n  if a == 25 then return true end\n  if a == 26 then return\
    \ true end\n  if a == 27 then return true end\n  if a == 28 then return true end\n\
    \  if a == 29 then return true end\n  if a == 30 then return true end\n  if a\
    \ == 31 then return true end\n  if a == 32 then return true end\n  if a == 33\
    \ then return true end\n  if a == 34 then return true end\n  if a == 35 then return\
    \ true end\n  if a == 36 then return true end\n  if a == 37 then return true end\n\
    \  if a == 38 then return true end\n  if a == 39 then return true end\n  if a\
    \ == 40 then return true end\n  if a == 41 then return true end\n  if a == 42\
    \ then return true end\n  if a == 43 then return true end\n  if a == 44 then return\
    \ true end\n  if a == 45 then return true end\n  if a == 46 then return true end\n\
    \  if a == 47 then return true end\n  if a == 48 then return true end\n  if a\
    \ == 49 then return true end\n  if a == 50 then return true end\n  if a == 51\
    \ then return true end\n  if a == 52 then return true end\n  if a == 53 then return\
    \ true end\n  if a == 54 then return true end\n  if a == 55 then return true end\n\
    \  if a == 56 then return true end\n  if a == 57 then return true end\n  if a\
    \ == 58 then return true end\n  if a == 59 then return true end\n  if a == 60\
    \ then return \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpijmq8zjk.lua:80: ''end'' expected (to close ''if'' at line
    79) near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1)\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbm_g7qz_.lua:31:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpbm_g7qz_.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a > 0 then\n    if a % 3 == 0 then\n      return true\n\
    \    end\n    if a % 3 == 1 then\n      return true\n    end\n    if a % 3 ==\
    \ 2 then\n      return true\n    end\n  end\n  return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1cb1f3lo.lua:37:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp1cb1f3lo.lua:37:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a % 3 ==\
    \ 0 then\n        return true\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_m5tk8tk.lua:36:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp_m5tk8tk.lua:36:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpq059e7io.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tlocal cube\
    \ = 1\n\twhile a > 0 do\n\t\tif a % 3 == 0 then\n\t\t\tcube = cube + 1\n\t\tend\n\
    \t\ta = a/3\n\tend\n\treturn cube == 3\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjqovsztq.lua:31:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpjqovsztq.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then return false end\n    if a == 1 then return true end\n    if a == -1 then\
    \ return true end\n    if a == 2 then return true end\n    if a == 3 then return\
    \ true end\n    if a == 4 then return true end\n    if a == 5 then return true\
    \ end\n    if a == 6 then return true end\n    if a == 7 then return true end\n\
    \    if a == 8 then return true end\n    if a == 9 then return true end\n    if\
    \ a == 10 then return true end\n    if a == 11 then return true end\n    if a\
    \ == 12 then return true end\n    if a == 13 then return true end\n    if a ==\
    \ 14 then return true end\n    if a == 15 then return true end\n    if a == 16\
    \ then return true end\n    if a == 17 then return true end\n    if a == 18 then\
    \ return true end\n    if a == 19 then return true end\n    if a == 20 then return\
    \ true end\n    if a == 21 then return true end\n    if a == 22 then return true\
    \ end\n    if a == 23 then return true end\n    if a == 24 then return true end\n\
    \    if a == 25 then return true end\n    if a == 26 then return true end\n  \
    \  if a == 27 then return true end\n    if a == 28 then return true end\n    if\
    \ a == 29 then return true end\n    if a == 30 then return true end\n    if a\
    \ == 31 then return true end\n    if a == 32 then return true end\n    if a ==\
    \ 33 then return true end\n    if a == 34 then return true end\n    if a == 35\
    \ then return true end\n    if a == 36 then return true end\n    if a == 37 then\
    \ return true end\n    if a == 38 then return true end\n    if a == 39 then return\
    \ true end\n    if a == 40 then return true end\n    if a == 41 then return true\
    \ end\n    if a == 42 then return true end\n    if a == 43 then return true end\n\
    \    if a == 44 then return true end\n    if a == 45 then return true end\n  \
    \  if a == 46 then return true end\n    if a == 47 then return true end\n    if\
    \ a == 48 then return true end\n    if a == 49 then return true end\n    if a\
    \ == 50 then return true end\n    if a == 51 then return true end\n    if a ==\
    \ 52 then return true end\n    if a == 53 then return true end\n    if a == 54\
    \ then return true end\n    if a == 55 then return true end\n    if a == 56 then\
    \ return true end\n    if a == 57 then return true end\n    if a == 58 then return\
    \ true end\n    if a == 59 then return true end\n    if a == 60 then return \n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpav7lumc4.lua:80: ''end'' expected (to close ''if'' at line
    79) near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\t-- Write your\
    \ code here.\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal\
    \ f = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k\
    \ = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p =\
    \ 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\
    \tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\t\
    local count = 0\n\tlocal sum = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\
    \tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g = 0\n\tlocal h = 0\n\t\
    local i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal\
    \ n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s\
    \ = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x =\
    \ 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal count = 0\n\tlocal sum = 0\n\tlocal\
    \ a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f\
    \ = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k =\
    \ 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\
    \tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\t\
    local v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal\
    \ count = 0\n\tlocal sum = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\t\
    local d = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal\
    \ i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n\
    \ = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s =\
    \ 0\n\tlocal t = 0\n\tlocal \nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3a11_vh8.lua:137: ''end'' expected (to close ''function''
    at line 17) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a < 0 then\n    return false\n  end\n  if a > 180\
    \ then\n    return false\n  end\n  if a % 180 ~= 0 then\n    return false\n  end\n\
    \  if a % 180 ~= 0 then\n    return false\n  end\n  if a % 180 ~= 0 then\n   \
    \ return false\n  end\n  if a % 180 ~= 0 then\n    return false\n  end\n  if a\
    \ % 180 ~= 0 then\n    return false\n  end\n  if a % 180 ~= 0 then\n    return\
    \ false\n  end\n  if a % 180 ~= 0 then\n    return false\n  end\n  if a % 180\
    \ ~= 0 then\n    return false\n  end\n  if a % 180 ~= 0 then\n    return false\n\
    \  end\n  if a % 180 ~= 0 then\n    return false\n  end\n  if a % 180 ~= 0 then\n\
    \    return false\n  end\n  if a % 180 ~= 0 then\n    return false\n  end\n  if\
    \ a % 180 ~= 0 then\n    return false\n  end\n  if a % 180 ~= 0 then\n    return\
    \ false\n  end\n  if a % 180 ~= 0 then\n    return false\n  end\n  if a % 180\
    \ ~= 0 then\n    return false\n  end\n  if a % 180 ~= 0 then\n    return false\n\
    \  end\n  if a % 180 ~= 0 then\n    return false\n  end\n  if a % 180 ~= 0 then\n\
    \    return false\n  end\n  if a % 180 ~= 0 then\n    return false\n  end\n  if\
    \ a % 180 ~= 0 then\n    return false\n  end\n  if a % 180 ~= 0 then\n    return\
    \ false\n  end\n  if a % 180 ~= 0 then\n    return false\n  end\n  if a % 180\
    \ ~= 0 then\n    return false\n  end\n  if a % 180 ~= 0 then\n    return false\n\
    \  end\n  if a % 180 ~= 0 then\n    return false\n  end\n  if a % 180 ~= 0 then\n\
    \    return false\n  end\n  if a % 180 ~= 0 then\n    return false\n  end\n  if\
    \ a % 180 ~= 0 then\n    return false\n  end\n  if a % 180 ~= 0 then\n    return\
    \ false\n  end\n  if a % 180 ~= 0 then\n    return false\n  end\n  if a % 180\
    \ ~= 0 then\n    return false\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp0xgcb6up.lua:137: ''end'' expected (to close ''function''
    at line 17) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a % 3 ==\
    \ 0 then\n        return true\n    end\n    if a % 3 == 1 then\n        return\
    \ iscube(a/3)\n    end\n    if a % 3 == 2 then\n        return iscube(a/3) * iscube(a/3)\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq2m7uqlh.lua:42:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpq2m7uqlh.lua:42:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a < 0\
    \ then\n        return false\n    end\n    if a == 0 then\n        return true\n\
    \    end\n    if a > 0 then\n        return a == (math.floor(a/3) * 3)\n    end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf_8631d9.lua:32:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpf_8631d9.lua:32:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a <= 0 then\n    return false\n  end\n  if a > 180\
    \ then\n    return false\n  end\n  if a % 3 == 0 then\n    return true\n  end\n\
    \  if a % 3 == 1 then\n    return false\n  end\n  if a % 3 == 2 then\n    return\
    \ true\n  end\n  if a % 3 == 3 then\n    return false\n  end\n  if a % 3 == 4\
    \ then\n    return true\n  end\n  if a % 3 == 5 then\n    return false\n  end\n\
    \  if a % 3 == 6 then\n    return true\n  end\n  if a % 3 == 7 then\n    return\
    \ false\n  end\n  if a % 3 == 8 then\n    return true\n  end\n  if a % 3 == 9\
    \ then\n    return false\n  end\n  if a % 3 == 10 then\n    return true\n  end\n\
    \  if a % 3 == 11 then\n    return false\n  end\n  if a % 3 == 12 then\n    return\
    \ true\n  end\n  if a % 3 == 13 then\n    return false\n  end\n  if a % 3 == 14\
    \ then\n    return true\n  end\n  if a % 3 == 15 then\n    return false\n  end\n\
    \  if a % 3 == 16 then\n    return true\n  end\n  if a % 3 == 17 then\n    return\
    \ false\n  end\n  if a % 3 == 18 then\n    return true\n  end\n  if a % 3 == 19\
    \ then\n    return false\n  end\n  if a % 3 == 20 then\n    return true\n  end\n\
    \  if a % 3 == 21 then\n    return false\n  end\n  if a % 3 == 22 then\n    return\
    \ true\n  end\n  if a % 3 == 23 then\n    return false\n  end\n  if a % 3 == 24\
    \ then\n    return true\n  end\n  if a % 3 == 25 then\n    return false\n  end\n\
    \  if a % 3 == 26 then\n    return true\n  end\n  if a % 3 == 27 then\n    return\
    \ false\n  end\n  if a % 3 == 28 then\n    return true\n  end\n  if a % 3 == 29\
    \ then\n    return false\n  end\n  if a % 3 == 2 then\n    return true\n  end\n\
    \  if a % 3 == 30 then\n    return false\n  end\n  if a % 3 == 31 then\n    return\
    \ true\n  end\n  if a % 3 == 32 then\n    return false\n  end\n  if a % 3 == 33\
    \ then\n    return true\n  end\n  if a % 3 == 34 then\n    return false\n  end\n\
    \  if a % 3 == 35 then\n    return true\n  end\n  if a % 3 == 36 then\n    return\
    \ false\n  end\n  if a % 3 == 37 then\n    return true\n  end\n  if a % 3 == 38\
    \ then\n    return false\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpw9h06rlf.lua:146: ''end'' expected (to close ''if'' at line
    144) near ''lu''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  return a %\
    \ 1 == 0 and a % 3 == 0 and a % 5 == 0 and a % 7 == 0 and a % 9 == 0 and a % 11\
    \ == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp554h1u54.lua:24:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp554h1u54.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 and a <= 180 then\n       \
    \ return true\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpshmsqtmm.lua:31:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpshmsqtmm.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqpwwzhv6.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmu05c0a4.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a < 0 then\n\
    \    return false\n  end\n  if a == 0 then\n    return true\n  end\n  if a > 0\
    \ then\n    return true\n  end\n  if a < 1 then\n    return false\n  end\n  if\
    \ a > 1 then\n    return false\n  end\n  if a < 2 then\n    return true\n  end\n\
    \  if a > 2 then\n    return true\n  end\n  if a < 3 then\n    return false\n\
    \  end\n  if a > 3 then\n    return false\n  end\n  if a < 4 then\n    return\
    \ true\n  end\n  if a > 4 then\n    return true\n  end\n  if a < 5 then\n    return\
    \ false\n  end\n  if a > 5 then\n    return false\n  end\n  if a < 6 then\n  \
    \  return true\n  end\n  if a > 6 then\n    return true\n  end\n  if a < 7 then\n\
    \    return false\n  end\n  if a > 7 then\n    return false\n  end\n  if a < 8\
    \ then\n    return true\n  end\n  if a > 8 then\n    return true\n  end\n  if\
    \ a < 9 then\n    return false\n  end\n  if a > 9 then\n    return false\n  end\n\
    \  if a < 10 then\n    return true\n  end\n  if a > 10 then\n    return true\n\
    \  end\n  if a < 11 then\n    return false\n  end\n  if a > 11 then\n    return\
    \ false\n  end\n  if a < 12 then\n    return true\n  end\n  if a > 12 then\n \
    \   return true\n  end\n  if a < 13 then\n    return false\n  end\n  if a > 13\
    \ then\n    return false\n  end\n  if a < 14 then\n    return true\n  end\n  if\
    \ a > 14 then\n    return true\n  end\n  if a < 15 then\n    return false\n  end\n\
    \  if a > 15 then\n    return false\n  end\n  if a < 16 then\n    return true\n\
    \  end\n  if a > 16 then\n    return true\n  end\n  if a < 17 then\n    return\
    \ false\n  end\n  if a > 17 then\n    return false\n  end\n  if a < 18 then\n\
    \    return true\n  end\n  if a > 18 then\n    return true\n  end\n  if a < 19\
    \ then\n    return false\n  end\n  if a > 19 then\n    return false\n  end\n \
    \ if a < 20 then\n    return true\n  end\n  if a > 20 then\n    return true\n\
    \  end\n  if a < 21 then\n    return false\n  end\n  if a > 21 then\n    return\
    \ false\n  end\n  if a < 22 then\n    return true\n  end\n  if a > 22 then\n \
    \   return \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp85k5cypm.lua:158: ''end'' expected (to close ''if'' at line
    156) near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmu05c0a4.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpq059e7io.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpq059e7io.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmu05c0a4.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpq059e7io.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  return a %\
    \ 1 == 0 and a % 3 == 0 and a % 5 == 0 and a % 7 == 0 and a % 9 == 0\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzy2x7u4e.lua:24:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpzy2x7u4e.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmu05c0a4.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tlocal cube\
    \ = 1\n\twhile a > 0 do\n\t\tif a % 3 == 0 then\n\t\t\tcube = cube + 1\n\t\tend\n\
    \t\ta = a / 3\n\tend\n\treturn cube == 3\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp7z_cvui.lua:31:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpp7z_cvui.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a < 0 then\n    return false\n  end\n  if a % 3\
    \ == 0 then\n    return true\n  end\n  if a % 3 == 1 then\n    return iscube(a/3)\n\
    \  end\n  if a % 3 == 2 then\n    return iscube(a/3)\n  end\n  return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbh089o0t.lua:39:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpbh089o0t.lua:39:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a <= 0 then\n\
    \    return false\n  end\n  if a == 1 then\n    return true\n  end\n  if a ==\
    \ 2 then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n \
    \ if a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n\
    \  end\n  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return\
    \ true\n  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n  \
    \  return true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11\
    \ then\n    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if\
    \ a == 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n \
    \ end\n  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return\
    \ true\n  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n\
    \    return true\n  end\n  if a == 19 then\n    return true\n  end\n  if a ==\
    \ 20 then\n    return true\n  end\n  if a == 21 then\n    return true\n  end\n\
    \  if a == 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n\
    \  end\n  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return\
    \ true\n  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n\
    \    return true\n  end\n  if a == 28 then\n    return true\n  end\n  if a ==\
    \ 29 then\n    return true\n  end\n  if a == 30 then\n    return true\n  end\n\
    \  if a == 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n\
    \  end\n  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return\
    \ true\n  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n\
    \    return true\n  end\n  if a == 37 then\n    return true\n  end\n  if a ==\
    \ 38 then\n    return true\n  end\n  if a == 39 then\n    return true\n  end\n\
    \  if a == 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n\
    \  end\n  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return\
    \ true\n  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n\
    \    return true\n  end\n  if a == 46 then\n    return true\n  end\n  if a ==\
    \ 47 then\n    return true\n  end\n  if a == 48 then\n    return true\n  end\n\
    \  if a == 49 then\n    return true\n  end\n  if \nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp9pfktjpu.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpq059e7io.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a <= 1 then\n\
    \        return true\n    end\n    if a % 3 == 0 then\n        return true\n \
    \   end\n    if a % 3 == 1 then\n        return false\n    end\n    if a % 3 ==\
    \ 2 then\n        return true\n    end\n    if a % 3 == 4 then\n        return\
    \ false\n    end\n    if a % 3 == 5 then\n        return true\n    end\n    if\
    \ a % 3 == 6 then\n        return false\n    end\n    if a % 3 == 7 then\n   \
    \     return true\n    end\n    if a % 3 == 8 then\n        return false\n   \
    \ end\n    if a % 3 == 9 then\n        return true\n    end\n    if a % 3 == 10\
    \ then\n        return false\n    end\n    if a % 3 == 11 then\n        return\
    \ true\n    end\n    if a % 3 == 12 then\n        return false\n    end\n    if\
    \ a % 3 == 13 then\n        return true\n    end\n    if a % 3 == 14 then\n  \
    \      return false\n    end\n    if a % 3 == 15 then\n        return true\n \
    \   end\n    if a % 3 == 16 then\n        return false\n    end\n    if a % 3\
    \ == 17 then\n        return true\n    end\n    if a % 3 == 18 then\n        return\
    \ false\n    end\n    if a % 3 == 19 then\n        return true\n    end\n    if\
    \ a % 3 == 20 then\n        return false\n    end\n    if a % 3 == 21 then\n \
    \       return true\n    end\n    if a % 3 == 22 then\n        return false\n\
    \    end\n    if a % 3 == 23 then\n        return true\n    end\n    if a % 3\
    \ == 24 then\n        return false\n    end\n    if a % 3 == 25 then\n       \
    \ return true\n    end\n    if a % 3 == 26 then\n        return false\n    end\n\
    \    if a % 3 == 27 then\n        return true\n    end\n    if a % 3 == 28 then\n\
    \        return false\n    end\n    if a % 3 == 29 then\n        return true\n\
    \    end\n    if a % 3 == 3 then\n        return false\n    end\n    if a % 3\
    \ == 4 then\n        return true\n    end\n    if a % 3 == 5 then\n        return\
    \ false\n    end\n    if a % 3 == 6 then\n        return true\n    end\n    if\
    \ a % 3 == 7 then\n        return false\n    end\n    if a % 3 == 8 then\n   \
    \     return true\n    end\n    if a % 3 == 9 then\n        return false\n   \
    \ end\n    if a % 3 == 10 then\n        return true\n    end\n    if a % 3 ==\
    \ 11 then\n        return false\n    end\n    if a % 3 == 12 then\n        return\
    \ true\n    end\n\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpa_uyq_2c.lua:162: ''end'' expected (to close ''function''
    at line 17) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 and a <= 9 then\n        return\
    \ true\n    end\n    if a > 9 and a <= 99 then\n        return true\n    end\n\
    \    if a > 99 and a <= 999 then\n        return true\n    end\n    if a > 999\
    \ and a <= 9999 then\n        return true\n    end\n    if a > 9999 and a <= 99999\
    \ then\n        return true\n    end\n    if a > 99999 and a <= 999999 then\n\
    \        return true\n    end\n    if a > 999999 and a <= 9999999 then\n     \
    \   return true\n    end\n    if a > 9999999 and a <= 999999999 then\n       \
    \ return true\n    end\n    if a > 999999999 and a <= 99999999999 then\n     \
    \   return true\n    end\n    if a > 99999999999 and a <= 9999999999999 then\n\
    \        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp47dnwmjp.lua:100: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqpwwzhv6.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tif a == 0 then\n\
    \t\treturn true\n\telseif a%1 == 0 then\n\t\treturn false\n\telse\n\t\treturn\
    \ true\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmhhi1oqz.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpmhhi1oqz.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then return true end\n    if a == 1 then return true end\n    if a == 2 then\
    \ return true end\n    if a == 3 then return true end\n    if a == 4 then return\
    \ true end\n    if a == 5 then return true end\n    if a == 6 then return true\
    \ end\n    if a == 7 then return true end\n    if a == 8 then return true end\n\
    \    if a == 9 then return true end\n    if a == 10 then return true end\n   \
    \ if a == 11 then return true end\n    if a == 12 then return true end\n    if\
    \ a == 13 then return true end\n    if a == 14 then return true end\n    if a\
    \ == 15 then return true end\n    if a == 16 then return true end\n    if a ==\
    \ 17 then return true end\n    if a == 18 then return true end\n    if a == 19\
    \ then return true end\n    if a == 20 then return true end\n    if a == 21 then\
    \ return true end\n    if a == 22 then return true end\n    if a == 23 then return\
    \ true end\n    if a == 24 then return true end\n    if a == 25 then return true\
    \ end\n    if a == 26 then return true end\n    if a == 27 then return true end\n\
    \    if a == 28 then return true end\n    if a == 29 then return true end\n  \
    \  if a == 30 then return true end\n    if a == 31 then return true end\n    if\
    \ a == 32 then return true end\n    if a == 33 then return true end\n    if a\
    \ == 34 then return true end\n    if a == 35 then return true end\n    if a ==\
    \ 36 then return true end\n    if a == 37 then return true end\n    if a == 38\
    \ then return true end\n    if a == 39 then return true end\n    if a == 40 then\
    \ return true end\n    if a == 41 then return true end\n    if a == 42 then return\
    \ true end\n    if a == 43 then return true end\n    if a == 44 then return true\
    \ end\n    if a == 45 then return true end\n    if a == 46 then return true end\n\
    \    if a == 47 then return true end\n    if a == 48 then return true end\n  \
    \  if a == 49 then return true end\n    if a == 50 then return true end\n    if\
    \ a == 51 then return true end\n    if a == 52 then return true end\n    if a\
    \ == 53 then return true end\n    if a == 54 then return true end\n    if a ==\
    \ 55 then return true end\n    if a == 56 then return true end\n    if a == 57\
    \ then return true end\n    if a == 58 then return true end\n    if a == 59 then\
    \ return true end\n    if a == 60 then return true end\n    if a == 61 then \n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphrtyldey.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmu05c0a4.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a < 0 then\n    return false\n  end\n  if a > 180\
    \ then\n    return false\n  end\n  if a == 180 then\n    return true\n  end\n\
    \  if a == 360 then\n    return true\n  end\n  if a == 720 then\n    return true\n\
    \  end\n  if a == 1440 then\n    return true\n  end\n  if a == 28800 then\n  \
    \  return true\n  end\n  if a == 57600 then\n    return true\n  end\n  if a ==\
    \ 115200 then\n    return true\n  end\n  if a == 230400 then\n    return true\n\
    \  end\n  if a == 345600 then\n    return true\n  end\n  if a == 563000 then\n\
    \    return true\n  end\n  if a == 786400 then\n    return true\n  end\n  if a\
    \ == 1152000 then\n    return true\n  end\n  if a == 2304000 then\n    return\
    \ true\n  end\n  if a == 3456000 then\n    return true\n  end\n  if a == 5630000\
    \ then\n    return true\n  end\n  if a == 7864000 then\n    return true\n  end\n\
    \  if a == 1152000 then\n    return true\n  end\n  if a == 2304000 then\n    return\
    \ true\n  end\n  if a == 3456000 then\n    return true\n  end\n  if a == 5630000\
    \ then\n    return true\n  end\n  if a == 7864000 then\n    return true\n  end\n\
    \  if a == 1152000 then\n    return true\n  end\n  if a == 2304000 then\n    return\
    \ true\n  end\n  if a == 3456000 then\n    return true\n  end\n  if a == 5630000\
    \ then\n    return true\n  end\n  if a == 7864000 then\n    return true\n  end\n\
    \  if a == 1152000 then\n    return true\n  end\n  if a == 2304000 then\n    return\
    \ true\n  end\n  if a == 3456000 then\n    return true\n  end\n  if a == 5630000\
    \ then\n    return true\n  end\n  if a == 7864000 then\n    return true\n  end\n\
    \  if a == 1152000 then\n    return true\n  end\n  if a == 2304000 then\n    return\
    \ true\n  end\n  if a == 3456000 then\n    return true\n  end\n  if a == 5630000\
    \ then\n    return true\n  end\n  if a == 7864000 then\n    return true\n  end\n\
    \  if a == 1152000 then\n    return true\n  end\n  if a == 2304000 then\n    return\
    \ true\n  end\n  if a == 3456000 then\n    return true\n  end\n  if a == 5630000\
    \ then\n    return true\n  end\n  if a == 7864000 then\n    return true\n  end\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplzs5vuls.lua:164: ''end'' expected (to close ''function''
    at line 17) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then return false end\n    if a == 1 then return true end\n    if a == 2 then\
    \ return true end\n    if a == 3 then return true end\n    if a == 4 then return\
    \ true end\n    if a == 5 then return true end\n    if a == 6 then return true\
    \ end\n    if a == 7 then return true end\n    if a == 8 then return true end\n\
    \    if a == 9 then return true end\n    if a == 10 then return true end\n   \
    \ if a == 11 then return true end\n    if a == 12 then return true end\n    if\
    \ a == 13 then return true end\n    if a == 14 then return true end\n    if a\
    \ == 15 then return true end\n    if a == 16 then return true end\n    if a ==\
    \ 17 then return true end\n    if a == 18 then return true end\n    if a == 19\
    \ then return true end\n    if a == 20 then return true end\n    if a == 21 then\
    \ return true end\n    if a == 22 then return true end\n    if a == 23 then return\
    \ true end\n    if a == 24 then return true end\n    if a == 25 then return true\
    \ end\n    if a == 26 then return true end\n    if a == 27 then return true end\n\
    \    if a == 28 then return true end\n    if a == 29 then return true end\n  \
    \  if a == 30 then return true end\n    if a == 31 then return true end\n    if\
    \ a == 32 then return true end\n    if a == 33 then return true end\n    if a\
    \ == 34 then return true end\n    if a == 35 then return true end\n    if a ==\
    \ 36 then return true end\n    if a == 37 then return true end\n    if a == 38\
    \ then return true end\n    if a == 39 then return true end\n    if a == 40 then\
    \ return true end\n    if a == 41 then return true end\n    if a == 42 then return\
    \ true end\n    if a == 43 then return true end\n    if a == 44 then return true\
    \ end\n    if a == 45 then return true end\n    if a == 46 then return true end\n\
    \    if a == 47 then return true end\n    if a == 48 then return true end\n  \
    \  if a == 49 then return true end\n    if a == 50 then return true end\n    if\
    \ a == 51 then return true end\n    if a == 52 then return true end\n    if a\
    \ == 53 then return true end\n    if a == 54 then return true end\n    if a ==\
    \ 55 then return true end\n    if a == 56 then return true end\n    if a == 57\
    \ then return true end\n    if a == 58 then return true end\n    if a == 59 then\
    \ return true end\n    if a == 60 then return true end\n    if a == 61 then \n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpy_r1f6ve.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a == 1 then\n    return true\n  elseif a == 2 then\n\
    \    return true\n  elseif a == 3 then\n    return true\n  elseif a == 4 then\n\
    \    return true\n  elseif a == 5 then\n    return true\n  elseif a == 6 then\n\
    \    return true\n  elseif a == 7 then\n    return true\n  elseif a == 8 then\n\
    \    return true\n  elseif a == 9 then\n    return true\n  elseif a == 10 then\n\
    \    return true\n  elseif a == 11 then\n    return true\n  elseif a == 12 then\n\
    \    return true\n  elseif a == 13 then\n    return true\n  elseif a == 14 then\n\
    \    return true\n  elseif a == 15 then\n    return true\n  elseif a == 16 then\n\
    \    return true\n  elseif a == 17 then\n    return true\n  elseif a == 18 then\n\
    \    return true\n  elseif a == 19 then\n    return true\n  elseif a == 20 then\n\
    \    return true\n  elseif a == 21 then\n    return true\n  elseif a == 22 then\n\
    \    return true\n  elseif a == 23 then\n    return true\n  elseif a == 24 then\n\
    \    return true\n  elseif a == 25 then\n    return true\n  elseif a == 26 then\n\
    \    return true\n  elseif a == 27 then\n    return true\n  elseif a == 28 then\n\
    \    return true\n  elseif a == 29 then\n    return true\n  elseif a == 30 then\n\
    \    return true\n  elseif a == 31 then\n    return true\n  elseif a == 32 then\n\
    \    return true\n  elseif a == 33 then\n    return true\n  elseif a == 34 then\n\
    \    return true\n  elseif a == 35 then\n    return true\n  elseif a == 36 then\n\
    \    return true\n  elseif a == 37 then\n    return true\n  elseif a == 38 then\n\
    \    return true\n  elseif a == 39 then\n    return true\n  elseif a == 40 then\n\
    \    return true\n  elseif a == 41 then\n    return true\n  elseif a == 42 then\n\
    \    return true\n  elseif a == 43 then\n    return true\n  elseif a == 44 then\n\
    \    return true\n  elseif a == 45 then\n    return true\n  elseif a == 46 then\n\
    \    return true\n  elseif a == 47 then\n    return true\n  elseif a == 48 then\n\
    \    return true\n  elseif a == 49 then\n    return true\n  elseif a == \nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpl7vvqv5a.lua:119: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tif a == 0 then\n\
    \t\treturn true\n\telseif a == 1 then\n\t\treturn true\n\telseif a == -1 then\n\
    \t\treturn true\n\telseif a == 2 then\n\t\treturn true\n\telseif a == -2 then\n\
    \t\treturn true\n\telseif a == 3 then\n\t\treturn true\n\telseif a == -3 then\n\
    \t\treturn true\n\telseif a == 4 then\n\t\treturn true\n\telseif a == -4 then\n\
    \t\treturn true\n\telseif a == 5 then\n\t\treturn true\n\telseif a == -5 then\n\
    \t\treturn true\n\telseif a == 6 then\n\t\treturn true\n\telseif a == -6 then\n\
    \t\treturn true\n\telseif a == 7 then\n\t\treturn true\n\telseif a == -7 then\n\
    \t\treturn true\n\telseif a == 8 then\n\t\treturn true\n\telseif a == -8 then\n\
    \t\treturn true\n\telseif a == 9 then\n\t\treturn true\n\telseif a == -9 then\n\
    \t\treturn true\n\telseif a == 10 then\n\t\treturn true\n\telseif a == -10 then\n\
    \t\treturn true\n\telseif a == 11 then\n\t\treturn true\n\telseif a == -11 then\n\
    \t\treturn true\n\telseif a == 12 then\n\t\treturn true\n\telseif a == -12 then\n\
    \t\treturn true\n\telseif a == 13 then\n\t\treturn true\n\telseif a == -13 then\n\
    \t\treturn true\n\telseif a == 14 then\n\t\treturn true\n\telseif a == -14 then\n\
    \t\treturn true\n\telseif a == 15 then\n\t\treturn true\n\telseif a == -15 then\n\
    \t\treturn true\n\telseif a == 16 then\n\t\treturn true\n\telseif a == -16 then\n\
    \t\treturn true\n\telseif a == 17 then\n\t\treturn true\n\telseif a == -17 then\n\
    \t\treturn true\n\telseif a == 18 then\n\t\treturn true\n\telseif a == -18 then\n\
    \t\treturn true\n\telseif a == 19 then\n\t\treturn true\n\telseif a == -19 then\n\
    \t\treturn true\n\telseif a == 20 then\n\t\treturn true\n\telseif a == -20 then\n\
    \t\treturn true\n\telseif a == 21 then\n\t\treturn true\n\telseif a == -21 then\n\
    \t\treturn true\n\telseif a == 22 then\n\t\treturn true\n\telseif a == -22 then\n\
    \t\treturn true\n\telseif a == 23 then\n\t\treturn true\n\telseif a == -23 then\n\
    \t\treturn true\n\telseif a == 24 then\n\t\treturn true\n\telseif a == -24 then\n\
    \t\treturn true\n\t\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp0i4q47an.lua:117: ''end'' expected (to close ''if'' at line
    18) near ''lu''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a < 0\
    \ then\n        return false\n    end\n    if a == 0 then\n        return true\n\
    \    end\n    if a > 0 then\n        return iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1)\n    end\n    return false\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjvnsqje3.lua:34:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpjvnsqje3.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1)\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbm_g7qz_.lua:31:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpbm_g7qz_.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  else\n    return false\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv2zbxhlc.lua:28:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpv2zbxhlc.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then return false end\n    if a == 1 then return true end\n    if a == 2 then\
    \ return true end\n    if a == 3 then return true end\n    if a == 4 then return\
    \ true end\n    if a == 5 then return true end\n    if a == 6 then return true\
    \ end\n    if a == 7 then return true end\n    if a == 8 then return true end\n\
    \    if a == 9 then return true end\n    if a == 10 then return true end\n   \
    \ if a == 11 then return true end\n    if a == 12 then return true end\n    if\
    \ a == 13 then return true end\n    if a == 14 then return true end\n    if a\
    \ == 15 then return true end\n    if a == 16 then return true end\n    if a ==\
    \ 17 then return true end\n    if a == 18 then return true end\n    if a == 19\
    \ then return true end\n    if a == 20 then return true end\n    if a == 21 then\
    \ return true end\n    if a == 22 then return true end\n    if a == 23 then return\
    \ true end\n    if a == 24 then return true end\n    if a == 25 then return true\
    \ end\n    if a == 26 then return true end\n    if a == 27 then return true end\n\
    \    if a == 28 then return true end\n    if a == 29 then return true end\n  \
    \  if a == 30 then return true end\n    if a == 31 then return true end\n    if\
    \ a == 32 then return true end\n    if a == 33 then return true end\n    if a\
    \ == 34 then return true end\n    if a == 35 then return true end\n    if a ==\
    \ 36 then return true end\n    if a == 37 then return true end\n    if a == 38\
    \ then return true end\n    if a == 39 then return true end\n    if a == 40 then\
    \ return true end\n    if a == 41 then return true end\n    if a == 42 then return\
    \ true end\n    if a == 43 then return true end\n    if a == 44 then return true\
    \ end\n    if a == 45 then return true end\n    if a == 46 then return true end\n\
    \    if a == 47 then return true end\n    if a == 48 then return true end\n  \
    \  if a == 49 then return true end\n    if a == 50 then return true end\n    if\
    \ a == 51 then return true end\n    if a == 52 then return true end\n    if a\
    \ == 53 then return true end\n    if a == 54 then return true end\n    if a ==\
    \ 55 then return true end\n    if a == 56 then return true end\n    if a == 57\
    \ then return true end\n    if a == 58 then return true end\n    if a == 59 then\
    \ return true end\n    if a == 60 then return true end\n    if a == 61 then \n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpy_r1f6ve.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 and a <= 180 then\n       \
    \ return true\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpshmsqtmm.lua:31:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpshmsqtmm.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a == 1 then\n    return true\n  elseif a == 2 then\n\
    \    return true\n  elseif a == 3 then\n    return true\n  elseif a == 4 then\n\
    \    return true\n  elseif a == 5 then\n    return true\n  elseif a == 6 then\n\
    \    return true\n  elseif a == 7 then\n    return true\n  elseif a == 8 then\n\
    \    return true\n  elseif a == 9 then\n    return true\n  elseif a == 10 then\n\
    \    return true\n  elseif a == 11 then\n    return true\n  elseif a == 12 then\n\
    \    return true\n  elseif a == 13 then\n    return true\n  elseif a == 14 then\n\
    \    return true\n  elseif a == 15 then\n    return true\n  elseif a == 16 then\n\
    \    return true\n  elseif a == 17 then\n    return true\n  elseif a == 18 then\n\
    \    return true\n  elseif a == 19 then\n    return true\n  elseif a == 20 then\n\
    \    return true\n  elseif a == 21 then\n    return true\n  elseif a == 22 then\n\
    \    return true\n  elseif a == 23 then\n    return true\n  elseif a == 24 then\n\
    \    return true\n  elseif a == 25 then\n    return true\n  elseif a == 26 then\n\
    \    return true\n  elseif a == 27 then\n    return true\n  elseif a == 28 then\n\
    \    return true\n  elseif a == 29 then\n    return true\n  elseif a == 30 then\n\
    \    return true\n  elseif a == 31 then\n    return true\n  elseif a == 32 then\n\
    \    return true\n  elseif a == 33 then\n    return true\n  elseif a == 34 then\n\
    \    return true\n  elseif a == 35 then\n    return true\n  elseif a == 36 then\n\
    \    return true\n  elseif a == 37 then\n    return true\n  elseif a == 38 then\n\
    \    return true\n  elseif a == 39 then\n    return true\n  elseif a == 40 then\n\
    \    return true\n  elseif a == 41 then\n    return true\n  elseif a == 42 then\n\
    \    return true\n  elseif a == 43 then\n    return true\n  elseif a == 44 then\n\
    \    return true\n  elseif a == 45 then\n    return true\n  elseif a == 46 then\n\
    \    return true\n  elseif a == 47 then\n    return true\n  elseif a == 48 then\n\
    \    return true\n  elseif a == 49 then\n    return true\n  elseif a == \nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpl7vvqv5a.lua:119: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then return false end\n    if a > 0 then\n        if a % 2 == 0 then return\
    \ false end\n        if a % 3 == 0 then return false end\n        if a % 5 ==\
    \ 0 then return false end\n        if a % 7 == 0 then return false end\n    end\n\
    \    return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsydtdr76.lua:34:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpsydtdr76.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpq059e7io.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then return false end\n    if a > 0 then\n        if a % 3 == 0 and a % 5 ==\
    \ 0 then return true end\n        if a % 3 == 0 then return true end\n       \
    \ if a % 5 == 0 then return true end\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzfdzoyhp.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpzfdzoyhp.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpq059e7io.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a < 0 then\n    return false\n  end\n  if a > 180\
    \ then\n    return false\n  end\n  if a == 180 then\n    return true\n  end\n\
    \  if a == 360 then\n    return true\n  end\n  if a == 720 then\n    return true\n\
    \  end\n  if a == 1440 then\n    return true\n  end\n  if a == 28800 then\n  \
    \  return true\n  end\n  if a == 432000 then\n    return true\n  end\n  if a ==\
    \ 86400 then\n    return true\n  end\n  if a == 604800 then\n    return true\n\
    \  end\n  if a == 1209600 then\n    return true\n  end\n  if a == 25552000 then\n\
    \    return true\n  end\n  if a == 51456000 then\n    return true\n  end\n  if\
    \ a == 77760000 then\n    return true\n  end\n  if a == 15552000 then\n    return\
    \ true\n  end\n  if a == 31536000 then\n    return true\n  end\n  if a == 63072000\
    \ then\n    return true\n  end\n  if a == 126144000 then\n    return true\n  end\n\
    \  if a == 241888000 then\n    return true\n  end\n  if a == 587296000 then\n\
    \    return true\n  end\n  if a == 120544000 then\n    return true\n  end\n  if\
    \ a == 25168000 then\n    return true\n  end\n  if a == 51456000 then\n    return\
    \ true\n  end\n  if a == 77760000 then\n    return true\n  end\n  if a == 15552000\
    \ then\n    return true\n  end\n  if a == 31536000 then\n    return true\n  end\n\
    \  if a == 63072000 then\n    return true\n  end\n  if a == 126144000 then\n \
    \   return true\n  end\n  if a == 241888000 then\n    return true\n  end\n  if\
    \ a == 587296000 then\n    return true\n  end\n  if a == 120544000 then\n    return\
    \ true\n  end\n  if a == 25168000 then\n    return true\n  end\n  if a == 51456000\
    \ then\n    return true\n  end\n  if a == 77760000 then\n    return true\n  end\n\
    \  if a == 15552000 then\n    return true\n  end\n  if a == 31536000 then\n  \
    \  return true\n  end\n  if a == 63072000 then\n    return true\n  end\n  if a\
    \ == 126144000 then\n    return true\n  end\n  if a == 241888000 then\n    return\
    \ true\n  end\n  if a == 587296000 then\n    return true\n  end\n  if a == 120544000\
    \ then\n    return true\n\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp0viwixa_.lua:144: ''end'' expected (to close ''if'' at line
    141) near ''lu''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tlocal b = 1\n\
    \twhile b < a do\n\t\tif a % b == 0 then\n\t\t\treturn false\n\t\tend\n\t\tb =\
    \ b * 3 + 1\n\tend\n\treturn true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpumf4katk.lua:34:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpumf4katk.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a < 0 then\n\
    \    return false\n  end\n  if a == 0 then\n    return true\n  end\n  if a > 0\
    \ then\n    return true\n  end\n  if a % 2 == 0 then\n    return false\n  end\n\
    \  if a % 3 == 0 then\n    return true\n  end\n  if a % 4 == 0 then\n    return\
    \ false\n  end\n  if a % 5 == 0 then\n    return true\n  end\n  if a % 6 == 0\
    \ then\n    return false\n  end\n  if a % 7 == 0 then\n    return true\n  end\n\
    \  if a % 8 == 0 then\n    return false\n  end\n  if a % 9 == 0 then\n    return\
    \ true\n  end\n  if a % 10 == 0 then\n    return false\n  end\n  if a % 11 ==\
    \ 0 then\n    return true\n  end\n  if a % 12 == 0 then\n    return false\n  end\n\
    \  if a % 13 == 0 then\n    return true\n  end\n  if a % 14 == 0 then\n    return\
    \ false\n  end\n  if a % 15 == 0 then\n    return true\n  end\n  if a % 16 ==\
    \ 0 then\n    return false\n  end\n  if a % 17 == 0 then\n    return true\n  end\n\
    \  if a % 18 == 0 then\n    return false\n  end\n  if a % 19 == 0 then\n    return\
    \ true\n  end\n  if a % 20 == 0 then\n    return false\n  end\n  if a % 21 ==\
    \ 0 then\n    return true\n  end\n  if a % 22 == 0 then\n    return false\n  end\n\
    \  if a % 23 == 0 then\n    return true\n  end\n  if a % 24 == 0 then\n    return\
    \ false\n  end\n  if a % 25 == 0 then\n    return true\n  end\n  if a % 26 ==\
    \ 0 then\n    return false\n  end\n  if a % 27 == 0 then\n    return true\n  end\n\
    \  if a % 28 == 0 then\n    return false\n  end\n  if a % 29 == 0 then\n    return\
    \ true\n  end\n  if a % 30 == 0 then\n    return false\n  end\n  if a % 31 ==\
    \ 0 then\n    return true\n  end\n  if a % 32 == 0 then\n    return false\n  end\n\
    \  if a % 33 == 0 then\n    return true\n  end\n  if a % 34 == 0 then\n    return\
    \ false\n  end\n  if a % 35 == 0 then\n    return true\n  end\n  if a % 36 ==\
    \ 0 then\n    return false\n  end\n  if a % 37 == 0 then\n    return true\n  end\n\
    \  if a % 38 == 0 then\n    return false\n  end\n  if \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpc_isghj5.lua:139: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a < 0 then\n    return false\n  end\n  if a > 180\
    \ then\n    return false\n  end\n  if a % 180 ~= 0 then\n    return false\n  end\n\
    \  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuzk_8bj_.lua:36:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpuzk_8bj_.lua:36:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then return false end\n    if a == 1 then return true end\n    if a == 2 then\
    \ return true end\n    if a == 3 then return true end\n    if a == 4 then return\
    \ true end\n    if a == 5 then return true end\n    if a == 6 then return true\
    \ end\n    if a == 7 then return true end\n    if a == 8 then return true end\n\
    \    if a == 9 then return true end\n    if a == 10 then return true end\n   \
    \ if a == 11 then return true end\n    if a == 12 then return true end\n    if\
    \ a == 13 then return true end\n    if a == 14 then return true end\n    if a\
    \ == 15 then return true end\n    if a == 16 then return true end\n    if a ==\
    \ 17 then return true end\n    if a == 18 then return true end\n    if a == 19\
    \ then return true end\n    if a == 20 then return true end\n    if a == 21 then\
    \ return true end\n    if a == 22 then return true end\n    if a == 23 then return\
    \ true end\n    if a == 24 then return true end\n    if a == 25 then return true\
    \ end\n    if a == 26 then return true end\n    if a == 27 then return true end\n\
    \    if a == 28 then return true end\n    if a == 29 then return true end\n  \
    \  if a == 30 then return true end\n    if a == 31 then return true end\n    if\
    \ a == 32 then return true end\n    if a == 33 then return true end\n    if a\
    \ == 34 then return true end\n    if a == 35 then return true end\n    if a ==\
    \ 36 then return true end\n    if a == 37 then return true end\n    if a == 38\
    \ then return true end\n    if a == 39 then return true end\n    if a == 40 then\
    \ return true end\n    if a == 41 then return true end\n    if a == 42 then return\
    \ true end\n    if a == 43 then return true end\n    if a == 44 then return true\
    \ end\n    if a == 45 then return true end\n    if a == 46 then return true end\n\
    \    if a == 47 then return true end\n    if a == 48 then return true end\n  \
    \  if a == 49 then return true end\n    if a == 50 then return true end\n    if\
    \ a == 51 then return true end\n    if a == 52 then return true end\n    if a\
    \ == 53 then return true end\n    if a == 54 then return true end\n    if a ==\
    \ 55 then return true end\n    if a == 56 then return true end\n    if a == 57\
    \ then return true end\n    if a == 58 then return true end\n    if a == 59 then\
    \ return true end\n    if a == 60 then return true end\n    if a == 61 then \n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpy_r1f6ve.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a < 0\
    \ then\n        return false\n    end\n    if a == 0 then\n        return true\n\
    \    end\n    if a > 0 then\n        return true\n    end\n    if a < 1 then\n\
    \        return false\n    end\n    if a < 3 then\n        return true\n    end\n\
    \    if a < 9 then\n        return true\n    end\n    if a < 27 then\n       \
    \ return true\n    end\n    if a < 81 then\n        return true\n    end\n   \
    \ if a < 123 then\n        return true\n    end\n    if a < 167 then\n       \
    \ return true\n    end\n    if a < 203 then\n        return true\n    end\n  \
    \  if a < 255 then\n        return true\n    end\n    if a < 409 then\n      \
    \  return true\n    end\n    if a < 655 then\n        return true\n    end\n \
    \   if a < 8191 then\n        return true\n    end\n    if a < 12289 then\n  \
    \      return true\n    end\n    if a < 16383 then\n        return true\n    end\n\
    \    if a < 20419 then\n        return true\n    end\n    if a < 26347 then\n\
    \        return true\n    end\n    if a < 40869 then\n        return true\n  \
    \  end\n    if a < 52487 then\n        return true\n    end\n    if a < 65519\
    \ then\n        return true\n    end\n    if a < 81919 then\n        return true\n\
    \    end\n    if a < 122891 then\n        return true\n    end\n    if a < 163839\
    \ then\n        return true\n    end\n    if a < 204191 then\n        return true\n\
    \    end\n    if a < 263471 then\n        return true\n    end\n    if a < 408691\
    \ then\n        return true\n    end\n    if a < 524871 then\n        return true\n\
    \    end\n    if a < 655191 then\n        return true\n    end\n    if a < 819191\
    \ then\n        return true\n    end\n    if a < 1228919 then\n        return\
    \ true\n    end\n    if a < 1638391 then\n        return true\n    end\n    if\
    \ a < 2041919 then\n        return true\n    end\n    if a < 2634719 then\n  \
    \      return true\n    end\n    if a < 4086919 then\n        return true\n  \
    \  end\n    if a < 5248719 then\n        return true\n    end\n    if a < 6551919\
    \ then\n        return true\n    end\n    if a < 8191919 then\n        return\
    \ true\n    end\n    if a < 12289289 then\n        return true\n    end\n    if\
    \ a < 16383919 then\n        return true\n    end\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppt46bqfy.lua:155: ''end'' expected (to close ''function''
    at line 17) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpq059e7io.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\t-- Write your\
    \ solution here\n\tlocal cube = math.floor(a/3)\n\tif a == cube then\n\t\treturn\
    \ true\n\telse\n\t\treturn false\n\tend\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiplvfdj9.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpiplvfdj9.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\t-- Write your\
    \ solution here\n\treturn true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgpasag4g.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpgpasag4g.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a > 0 then\n    if a % 2 == 0 then\n      if a % 3 ==\
    \ 0 then\n        if a % 5 == 0 then\n          return true\n        end\n   \
    \   end\n    end\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg2ivofl8.lua:34:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpg2ivofl8.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then return true end\n    if a == 1 then return true end\n    if a == 2 then\
    \ return true end\n    if a == 3 then return true end\n    if a == 4 then return\
    \ true end\n    if a == 5 then return true end\n    if a == 6 then return true\
    \ end\n    if a == 7 then return true end\n    if a == 8 then return true end\n\
    \    if a == 9 then return true end\n    if a == 10 then return true end\n   \
    \ if a == 11 then return true end\n    if a == 12 then return true end\n    if\
    \ a == 13 then return true end\n    if a == 14 then return true end\n    if a\
    \ == 15 then return true end\n    if a == 16 then return true end\n    if a ==\
    \ 17 then return true end\n    if a == 18 then return true end\n    if a == 19\
    \ then return true end\n    if a == 20 then return true end\n    if a == 21 then\
    \ return true end\n    if a == 22 then return true end\n    if a == 23 then return\
    \ true end\n    if a == 24 then return true end\n    if a == 25 then return true\
    \ end\n    if a == 26 then return true end\n    if a == 27 then return true end\n\
    \    if a == 28 then return true end\n    if a == 29 then return true end\n  \
    \  if a == 30 then return true end\n    if a == 31 then return true end\n    if\
    \ a == 32 then return true end\n    if a == 33 then return true end\n    if a\
    \ == 34 then return true end\n    if a == 35 then return true end\n    if a ==\
    \ 36 then return true end\n    if a == 37 then return true end\n    if a == 38\
    \ then return true end\n    if a == 39 then return true end\n    if a == 40 then\
    \ return true end\n    if a == 41 then return true end\n    if a == 42 then return\
    \ true end\n    if a == 43 then return true end\n    if a == 44 then return true\
    \ end\n    if a == 45 then return true end\n    if a == 46 then return true end\n\
    \    if a == 47 then return true end\n    if a == 48 then return true end\n  \
    \  if a == 49 then return true end\n    if a == 50 then return true end\n    if\
    \ a == 51 then return true end\n    if a == 52 then return true end\n    if a\
    \ == 53 then return true end\n    if a == 54 then return true end\n    if a ==\
    \ 55 then return true end\n    if a == 56 then return true end\n    if a == 57\
    \ then return true end\n    if a == 58 then return true end\n    if a == 59 then\
    \ return true end\n    if a == 60 then return true end\n    if a == 61 then \n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphrtyldey.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqpwwzhv6.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a == 1 then\n    return true\n  elseif a == 2 then\n\
    \    return true\n  elseif a == 3 then\n    return true\n  elseif a == 4 then\n\
    \    return true\n  elseif a == 5 then\n    return true\n  elseif a == 6 then\n\
    \    return true\n  elseif a == 7 then\n    return true\n  elseif a == 8 then\n\
    \    return true\n  elseif a == 9 then\n    return true\n  elseif a == 10 then\n\
    \    return true\n  elseif a == 11 then\n    return true\n  elseif a == 12 then\n\
    \    return true\n  elseif a == 13 then\n    return true\n  elseif a == 14 then\n\
    \    return true\n  elseif a == 15 then\n    return true\n  elseif a == 16 then\n\
    \    return true\n  elseif a == 17 then\n    return true\n  elseif a == 18 then\n\
    \    return true\n  elseif a == 19 then\n    return true\n  elseif a == 20 then\n\
    \    return true\n  elseif a == 21 then\n    return true\n  elseif a == 22 then\n\
    \    return true\n  elseif a == 23 then\n    return true\n  elseif a == 24 then\n\
    \    return true\n  elseif a == 25 then\n    return true\n  elseif a == 26 then\n\
    \    return true\n  elseif a == 27 then\n    return true\n  elseif a == 28 then\n\
    \    return true\n  elseif a == 29 then\n    return true\n  elseif a == 30 then\n\
    \    return true\n  elseif a == 31 then\n    return true\n  elseif a == 32 then\n\
    \    return true\n  elseif a == 33 then\n    return true\n  elseif a == 34 then\n\
    \    return true\n  elseif a == 35 then\n    return true\n  elseif a == 36 then\n\
    \    return true\n  elseif a == 37 then\n    return true\n  elseif a == 38 then\n\
    \    return true\n  elseif a == 39 then\n    return true\n  elseif a == 40 then\n\
    \    return true\n  elseif a == 41 then\n    return true\n  elseif a == 42 then\n\
    \    return true\n  elseif a == 43 then\n    return true\n  elseif a == 44 then\n\
    \    return true\n  elseif a == 45 then\n    return true\n  elseif a == 46 then\n\
    \    return true\n  elseif a == 47 then\n    return true\n  elseif a == 48 then\n\
    \    return true\n  elseif a == 49 then\n    return true\n  elseif a == \nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpl7vvqv5a.lua:119: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a < 0 then\n    return false\n  end\n  if a > 180\
    \ then\n    return false\n  end\n  if a % 3 == 0 then\n    return true\n  end\n\
    \  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfoqnpmun.lua:36:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpfoqnpmun.lua:36:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tlocal b = 1\n\
    \twhile b < a do\n\t\tif a % b == 0 then\n\t\t\treturn false\n\t\tend\n\t\tb =\
    \ b * 3 + 1\n\tend\n\treturn true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpumf4katk.lua:34:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpumf4katk.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmu05c0a4.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  return a %\
    \ 1 == 0 and a % 3 == 0 and a % 5 == 0 and a % 7 == 0 and a % 9 == 0\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzy2x7u4e.lua:24:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpzy2x7u4e.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return iscube(a-1)\
    \ and iscube(a-1*a) and iscube(a-1*a*a)\n    end\n    return false\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn7p3584i.lua:32:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpn7p3584i.lua:32:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqpwwzhv6.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\t-- Write your\
    \ solution here\n\tlocal b = 1\n\twhile b < a do\n\t\tif a % b == 0 then\n\t\t\
    \treturn false\n\t\tend\n\t\tb = b * 3 + 1\n\tend\n\treturn true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxt9vf0g3.lua:35:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpxt9vf0g3.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a > 0 then\n    return false\n  end\n  if a < 0\
    \ then\n    return true\n  end\n  if a < 1 then\n    return false\n  end\n  if\
    \ a % 1 == 0 then\n    return false\n  end\n  local b = a\n  while b > 1 do\n\
    \    if b % 2 == 0 then\n      return false\n    end\n    b = b / 2\n  end\n \
    \ return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp30djegal.lua:46:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp30djegal.lua:46:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  return a >=\
    \ 0 and a % 1 == 0 and a <= 180 and a % 3 == 0\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfne85j_i.lua:24:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpfne85j_i.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 and a <= 9 then\n        return\
    \ true\n    end\n    if a > 9 and a <= 99 then\n        return true\n    end\n\
    \    if a > 99 and a <= 999 then\n        return true\n    end\n    if a > 999\
    \ and a <= 9999 then\n        return true\n    end\n    if a > 9999 and a <= 99999\
    \ then\n        return true\n    end\n    if a > 99999 and a <= 999999 then\n\
    \        return true\n    end\n    if a > 999999 and a <= 9999999 then\n     \
    \   return true\n    end\n    if a > 9999999 and a <= 999999999 then\n       \
    \ return true\n    end\n    if a > 999999999 and a <= 99999999999 then\n     \
    \   return true\n    end\n    if a > 99999999999 and a <= 9999999999999 then\n\
    \        return true\n    end\n    if a > 9999999999999 and a <= 10000000000000\
    \ then\n        return true\n    end\n    if a > 10000000000000 and a <= 1000000000000000\
    \ then\n        return true\n    end\n    if a > 1000000000000000 and a <= 100000000000000000\
    \ then\n        return true\n    end\n    if a > 100000000000000000 and a <= 1000000000000000000\
    \ then\n        return true\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf1lwyt_s.lua:70:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpf1lwyt_s.lua:70:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tif a == 0 then\n\
    \t\treturn true\n\telseif a == 1 then\n\t\treturn true\n\telseif a == 2 then\n\
    \t\treturn true\n\telseif a == 3 then\n\t\treturn true\n\telseif a == 4 then\n\
    \t\treturn true\n\telseif a == 5 then\n\t\treturn true\n\telseif a == 6 then\n\
    \t\treturn true\n\telseif a == 7 then\n\t\treturn true\n\telseif a == 8 then\n\
    \t\treturn true\n\telseif a == 9 then\n\t\treturn true\n\telseif a == 10 then\n\
    \t\treturn true\n\telseif a == 11 then\n\t\treturn true\n\telseif a == 12 then\n\
    \t\treturn true\n\telseif a == 13 then\n\t\treturn true\n\telseif a == 14 then\n\
    \t\treturn true\n\telseif a == 15 then\n\t\treturn true\n\telseif a == 16 then\n\
    \t\treturn true\n\telseif a == 17 then\n\t\treturn true\n\telseif a == 18 then\n\
    \t\treturn true\n\telseif a == 19 then\n\t\treturn true\n\telseif a == 20 then\n\
    \t\treturn true\n\telseif a == 21 then\n\t\treturn true\n\telseif a == 22 then\n\
    \t\treturn true\n\telseif a == 23 then\n\t\treturn true\n\telseif a == 24 then\n\
    \t\treturn true\n\telseif a == 25 then\n\t\treturn true\n\telseif a == 26 then\n\
    \t\treturn true\n\telseif a == 27 then\n\t\treturn true\n\telseif a == 28 then\n\
    \t\treturn true\n\telseif a == 29 then\n\t\treturn true\n\telseif a == 30 then\n\
    \t\treturn true\n\telseif a == 31 then\n\t\treturn true\n\telseif a == 32 then\n\
    \t\treturn true\n\telseif a == 33 then\n\t\treturn true\n\telseif a == 34 then\n\
    \t\treturn true\n\telseif a == 35 then\n\t\treturn true\n\telseif a == 36 then\n\
    \t\treturn true\n\telseif a == 37 then\n\t\treturn true\n\telseif a == 38 then\n\
    \t\treturn true\n\telseif a == 39 then\n\t\treturn true\n\telseif a == 40 then\n\
    \t\treturn true\n\telseif a == 41 then\n\t\treturn true\n\telseif a == 42 then\n\
    \t\treturn true\n\telseif a == 43 then\n\t\treturn true\n\telseif a == 44 then\n\
    \t\treturn true\n\telseif a == 45 then\n\t\treturn true\n\telseif a == 46 then\n\
    \t\treturn true\n\telseif a == 47 then\n\t\treturn true\n\telseif a == 48 then\n\
    \t\treturn true\n\telseif a == 49 then\n\t\treturn true\n\telseif a == \nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmbzp21mx.lua:119: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return false\n  elseif a%2 == 0\
    \ then\n    return iscube(a/2) or iscube(a*2)\n  elseif a%3 == 0 then\n    return\
    \ iscube(a/3) or iscube(a*3)\n  elseif a%4 == 0 then\n    return iscube(a/4) or\
    \ iscube(a*4)\n  elseif a%5 == 0 then\n    return iscube(a/5) or iscube(a*5)\n\
    \  elseif a%6 == 0 then\n    return iscube(a/6) or iscube(a*6)\n  elseif a%7 ==\
    \ 0 then\n    return iscube(a/7) or iscube(a*7)\n  elseif a%8 == 0 then\n    return\
    \ iscube(a/8) or iscube(a*8)\n  elseif a%9 == 0 then\n    return iscube(a/9) or\
    \ iscube(a*9)\n  elseif a%10 == 0 then\n    return iscube(a/10) or iscube(a*10)\n\
    \  elseif a%11 == 0 then\n    return iscube(a/11) or iscube(a*11)\n  elseif a%12\
    \ == 0 then\n    return iscube(a/12) or iscube(a*12)\n  elseif a%13 == 0 then\n\
    \    return iscube(a/13) or iscube(a*13)\n  elseif a%14 == 0 then\n    return\
    \ iscube(a/14) or iscube(a*14)\n  elseif a%15 == 0 then\n    return iscube(a/15)\
    \ or iscube(a*15)\n  elseif a%16 == 0 then\n    return iscube(a/16) or iscube(a*16)\n\
    \  elseif a%17 == 0 then\n    return iscube(a/17) or iscube(a*17)\n  elseif a%18\
    \ == 0 then\n    return iscube(a/18) or iscube(a*18)\n  elseif a%19 == 0 then\n\
    \    return iscube(a/19) or iscube(a*19)\n  elseif a%20 == 0 then\n    return\
    \ iscube(a/20) or iscube(a*20)\n  elseif a%21 == 0 then\n    return iscube(a/21)\
    \ or iscube(a*21)\n  elseif a%22 == 0 then\n    return iscube(a/22) or iscube(a*22)\n\
    \  elseif a%23 == 0 then\n    return \nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqllr9lfz.lua:66: ''end'' expected (to close ''if'' at line
    18) near ''=''

    '
  stdout: ''
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a == 1 then\n    return true\n  elseif a == 2 then\n\
    \    return true\n  elseif a == 3 then\n    return true\n  elseif a == 4 then\n\
    \    return true\n  elseif a == 5 then\n    return true\n  elseif a == 6 then\n\
    \    return true\n  elseif a == 7 then\n    return true\n  elseif a == 8 then\n\
    \    return true\n  elseif a == 9 then\n    return true\n  elseif a == 10 then\n\
    \    return true\n  elseif a == 11 then\n    return true\n  elseif a == 12 then\n\
    \    return true\n  elseif a == 13 then\n    return true\n  elseif a == 14 then\n\
    \    return true\n  elseif a == 15 then\n    return true\n  elseif a == 16 then\n\
    \    return true\n  elseif a == 17 then\n    return true\n  elseif a == 18 then\n\
    \    return true\n  elseif a == 19 then\n    return true\n  elseif a == 20 then\n\
    \    return true\n  elseif a == 21 then\n    return true\n  elseif a == 22 then\n\
    \    return true\n  elseif a == 23 then\n    return true\n  elseif a == 24 then\n\
    \    return true\n  elseif a == 25 then\n    return true\n  elseif a == 26 then\n\
    \    return true\n  elseif a == 27 then\n    return true\n  elseif a == 28 then\n\
    \    return true\n  elseif a == 29 then\n    return true\n  elseif a == 30 then\n\
    \    return true\n  elseif a == 31 then\n    return true\n  elseif a == 32 then\n\
    \    return true\n  elseif a == 33 then\n    return true\n  elseif a == 34 then\n\
    \    return true\n  elseif a == 35 then\n    return true\n  elseif a == 36 then\n\
    \    return true\n  elseif a == 37 then\n    return true\n  elseif a == 38 then\n\
    \    return true\n  elseif a == 39 then\n    return true\n  elseif a == 40 then\n\
    \    return true\n  elseif a == 41 then\n    return true\n  elseif a == 42 then\n\
    \    return true\n  elseif a == 43 then\n    return true\n  elseif a == 44 then\n\
    \    return true\n  elseif a == 45 then\n    return true\n  elseif a == 46 then\n\
    \    return true\n  elseif a == 47 then\n    return true\n  elseif a == 48 then\n\
    \    return true\n  elseif a == 49 then\n    return true\n  elseif a == \nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpl7vvqv5a.lua:119: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a > 0 and a <= 9 then\n    return true\n  end\n\
    \  if a > 9 and a <= 99 then\n    return true\n  end\n  if a > 99 and a <= 999\
    \ then\n    return true\n  end\n  if a > 999 and a <= 9999 then\n    return true\n\
    \  end\n  if a > 9999 and a <= 99999 then\n    return true\n  end\n  if a > 99999\
    \ and a <= 999999 then\n    return true\n  end\n  if a > 999999 and a <= 9999999\
    \ then\n    return true\n  end\n  if a > 9999999 and a <= 999999999 then\n   \
    \ return true\n  end\n  if a > 999999999 and a <= 9999999999 then\n    return\
    \ true\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp__hzh__r.lua:55:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp__hzh__r.lua:55:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a < 0 then\n\
    \    return false\n  elseif a == 0 then\n    return true\n  elseif math.floor(a)\
    \ == a then\n    return true\n  else\n    return false\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcqtv7j2r.lua:33:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpcqtv7j2r.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmu05c0a4.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  return a %\
    \ 1 == 0 and a % 2 == 0 and a % 3 == 0 and a % 4 == 0 and a % 5 == 0 and a % 6\
    \ == 0 and a % 7 == 0 and a % 8 == 0 and a % 9 == 0 and a % 10 == 0 and a % 11\
    \ == 0 and a % 12 == 0 and a % 13 == 0 and a % 14 == 0 and a % 15 == 0 and a %\
    \ 16 == 0 and a % 17 == 0 and a % 18 == 0 and a % 19 == 0 and a % 20 == 0 and\
    \ a % 21 == 0 and a % 22 == 0 and a % 23 == 0 and a % 24 == 0 and a % 25 == 0\
    \ and a % 26 == 0 and a % 27 == 0 and a % 28 == 0 and a % 29 == 0 and a % 30 ==\
    \ 0 and a % 31 == 0 and a % 32 == 0 and a % 33 == 0 and a % 34 == 0 and a % 35\
    \ == 0 and a % 36 == 0 and a % 37 == 0 and a % 38 == 0 and a % 39 == 0 and a %\
    \ 40 == 0 and a % 41 == 0 and a % 42 == 0 and a % 43 == 0 and a % 44 == 0 and\
    \ a % 45 == 0 and a % 46 == 0 and a % 47 == 0 and a % 48 == 0 and a % 49 == 0\
    \ and a % 50 == 0 and a % 51 == 0 and a % 52 == 0 and a % 53 == 0 and a % 54 ==\
    \ 0 and a % 55 == 0 and a % 56 == 0 and a % 57 == 0 and a % 58 == 0 and a % 59\
    \ == 0 and a % 60 == 0 and a % 61 == 0 and a % 62 == 0 and a % 63 == 0\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwayu36gb.lua:24:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpwayu36gb.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpq059e7io.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a > 0 and a < 9 then\n    return true\n  end\n \
    \ if a > 9 and a < 99 then\n    return true\n  end\n  if a > 99 and a < 999 then\n\
    \    return true\n  end\n  if a > 999 and a < 9999 then\n    return true\n  end\n\
    \  if a > 9999 and a < 99999 then\n    return true\n  end\n  if a > 99999 and\
    \ a < 999999 then\n    return true\n  end\n  if a > 999999 and a < 9999999 then\n\
    \    return true\n  end\n  if a > 9999999 and a < 99999999 then\n    return true\n\
    \  end\n  if a > 99999999 and a < 999999999 then\n    return true\n  end\n  if\
    \ a > 999999999 and a < 9999999999 then\n    return true\n  end\n  if a > 9999999999\
    \ and a < 99999999999 then\n    return true\n  end\n  if a > 99999999999 and a\
    \ < 999999999999 then\n    return true\n  end\n  if a > 999999999999 and a < 9999999999999\
    \ then\n    return true\n  end\n  if a > 9999999999999 and a < 999999999999999\
    \ then\n    return true\n  end\n  if a > 999999999999999 and a < 999999999999999999\
    \ then\n    return true\n  end\n  if a > 999999999999999999 and a < 9999999999999\
    \ then\n    return true\n  end\n  if a > 9999999999999 and a < 999999999999999\
    \ then\n    return true\n  end\n  if a > 999999999999999 and a < 999999999999999999\
    \ then\n    return true\n  end\n  if a > 999999999999999999 and a < 9999999999999\
    \ then\n    return true\n  end\n  if a > 9999999999999 and a < 999999999999999\
    \ then\n    return true\n  end\n  if a > 999999999999999 and a < 999999999999999999\
    \ then\n    return true\n  end\n  if a > 999999999999999999 and a < 9999999999999\
    \ then\n    return true\n  end\n  if a > 9999999999999 and a < 999999999999999\
    \ then\n    return true\n  end\n  if a > 999999999999999 and a < 999999999999999999\
    \ then\n    return true\n  end\n  if a > 999999999999999999 and a < 9999999999999\
    \ then\n    return true\n  end\n  if a > 9999999999999 and a < 999999999999999\
    \ then\n    return true\n  end\n  if a > 999999999999999 and a < 999999999999999999\
    \ then\n    return true\n\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpxsvvzkix.lua:102: ''end'' expected (to close ''if'' at line
    99) near ''lu''

    '
  stdout: ''
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a <= 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a % 3 ==\
    \ 0 then\n        return true\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprz2uz6sx.lua:36:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmprz2uz6sx.lua:36:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return true\n  elseif a%2 == 0 then\n\
    \    return true\n  elseif a%3 == 0 then\n    return true\n  elseif a%4 == 0 then\n\
    \    return true\n  elseif a%5 == 0 then\n    return true\n  elseif a%6 == 0 then\n\
    \    return true\n  elseif a%7 == 0 then\n    return true\n  elseif a%8 == 0 then\n\
    \    return true\n  elseif a%9 == 0 then\n    return true\n  elseif a%10 == 0\
    \ then\n    return true\n  elseif a%11 == 0 then\n    return true\n  elseif a%12\
    \ == 0 then\n    return true\n  elseif a%13 == 0 then\n    return true\n  elseif\
    \ a%14 == 0 then\n    return true\n  elseif a%15 == 0 then\n    return true\n\
    \  elseif a%16 == 0 then\n    return true\n  elseif a%17 == 0 then\n    return\
    \ true\n  elseif a%18 == 0 then\n    return true\n  elseif a%19 == 0 then\n  \
    \  return true\n  elseif a%20 == 0 then\n    return true\n  elseif a%21 == 0 then\n\
    \    return true\n  elseif a%22 == 0 then\n    return true\n  elseif a%23 == 0\
    \ then\n    return true\n  elseif a%24 == 0 then\n    return true\n  elseif a%25\
    \ == 0 then\n    return true\n  elseif a%26 == 0 then\n    return true\n  elseif\
    \ a%27 == 0 then\n    return true\n  elseif a%28 == 0 then\n    return true\n\
    \  elseif a%29 == 0 then\n    return true\n  elseif a%30 == 0 then\n    return\
    \ true\n  elseif a%31 == 0 then\n    return true\n  elseif a%32 == 0 then\n  \
    \  return true\n  elseif a%33 == 0 then\n    return true\n  elseif a%34 == 0 then\n\
    \    return true\n  elseif a%35 == 0 then\n    return true\n  elseif a%36 == 0\
    \ then\n    return true\n  elseif a%37 == 0 then\n    return true\n  elseif a%38\
    \ == 0 then\n    return true\n  elseif a%39 == 0 then\n    return true\n  \nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplid66tpt.lua:99: ''end'' expected (to close ''if'' at line
    18) near ''lu''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a <= 0 then\n\
    \    return false\n  end\n  if a % 3 == 0 then\n    return true\n  end\n  if a\
    \ % 5 == 0 then\n    return true\n  end\n  if a % 7 == 0 then\n    return true\n\
    \  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplut35vbq.lua:36:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmplut35vbq.lua:36:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a > 0 then\n    return false\n  end\n  if a < 0\
    \ then\n    return true\n  end\n  if a < 1 then\n    return false\n  end\n  if\
    \ a % 2 == 0 then\n    return false\n  end\n  if a % 3 == 0 then\n    return true\n\
    \  end\n  if a % 4 == 0 then\n    return false\n  end\n  if a % 5 == 0 then\n\
    \    return true\n  end\n  if a % 6 == 0 then\n    return false\n  end\n  if a\
    \ % 7 == 0 then\n    return true\n  end\n  if a % 8 == 0 then\n    return false\n\
    \  end\n  if a % 9 == 0 then\n    return true\n  end\n  if a % 10 == 0 then\n\
    \    return false\n  end\n  if a % 11 == 0 then\n    return true\n  end\n  if\
    \ a % 12 == 0 then\n    return false\n  end\n  if a % 13 == 0 then\n    return\
    \ true\n  end\n  if a % 14 == 0 then\n    return false\n  end\n  if a % 15 ==\
    \ 0 then\n    return true\n  end\n  if a % 16 == 0 then\n    return false\n  end\n\
    \  if a % 17 == 0 then\n    return true\n  end\n  if a % 18 == 0 then\n    return\
    \ false\n  end\n  if a % 19 == 0 then\n    return true\n  end\n  if a % 20 ==\
    \ 0 then\n    return false\n  end\n  if a % 21 == 0 then\n    return true\n  end\n\
    \  if a % 22 == 0 then\n    return false\n  end\n  if a % 23 == 0 then\n    return\
    \ true\n  end\n  if a % 24 == 0 then\n    return false\n  end\n  if a % 25 ==\
    \ 0 then\n    return true\n  end\n  if a % 26 == 0 then\n    return false\n  end\n\
    \  if a % 27 == 0 then\n    return true\n  end\n  if a % 28 == 0 then\n    return\
    \ false\n  end\n  if a % 29 == 0 then\n    return true\n  end\n  if a % 30 ==\
    \ 0 then\n    return false\n  end\n  if a % 31 == 0 then\n    return true\n  end\n\
    \  if a % 32 == 0 then\n    return false\n  end\n  if a % 33 == 0 then\n    return\
    \ true\n  end\n  if a % 34 == 0 then\n    return false\n  end\n  if a % 35 ==\
    \ 0 then\n    return true\n  end\n  if a % 36 == 0 then\n    return false\n  end\n\
    \  if a % 37 == 0 then\n    return true\n  end\n  if a % \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp50qs0ps3.lua:139: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpq059e7io.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmu05c0a4.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a > 0 then\n    return a == (a ^ 3) and (a % 6 ==\
    \ 0)\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpytyzm1_p.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpytyzm1_p.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpq059e7io.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpq059e7io.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return false\n  else\n    return\
    \ true\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdxsdbdpa.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpdxsdbdpa.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return true\n  elseif a%2 == 0 then\n\
    \    return true\n  elseif a%3 == 0 then\n    return true\n  elseif a%4 == 0 then\n\
    \    return true\n  elseif a%5 == 0 then\n    return true\n  elseif a%6 == 0 then\n\
    \    return true\n  elseif a%7 == 0 then\n    return true\n  elseif a%8 == 0 then\n\
    \    return true\n  elseif a%9 == 0 then\n    return true\n  elseif a%10 == 0\
    \ then\n    return true\n  elseif a%11 == 0 then\n    return true\n  elseif a%12\
    \ == 0 then\n    return true\n  elseif a%13 == 0 then\n    return true\n  elseif\
    \ a%14 == 0 then\n    return true\n  elseif a%15 == 0 then\n    return true\n\
    \  elseif a%16 == 0 then\n    return true\n  elseif a%17 == 0 then\n    return\
    \ true\n  elseif a%18 == 0 then\n    return true\n  elseif a%19 == 0 then\n  \
    \  return true\n  elseif a%20 == 0 then\n    return true\n  elseif a%21 == 0 then\n\
    \    return true\n  elseif a%22 == 0 then\n    return true\n  elseif a%23 == 0\
    \ then\n    return true\n  elseif a%24 == 0 then\n    return true\n  elseif a%25\
    \ == 0 then\n    return true\n  elseif a%26 == 0 then\n    return true\n  elseif\
    \ a%27 == 0 then\n    return true\n  elseif a%28 == 0 then\n    return true\n\
    \  elseif a%29 == 0 then\n    return true\n  elseif a%30 == 0 then\n    return\
    \ true\n  elseif a%31 == 0 then\n    return true\n  elseif a%32 == 0 then\n  \
    \  return true\n  elseif a%33 == 0 then\n    return true\n  elseif a%34 == 0 then\n\
    \    return true\n  elseif a%35 == 0 then\n    return true\n  elseif a%36 == 0\
    \ then\n    return true\n  elseif a%37 == 0 then\n    return true\n  elseif a%38\
    \ == 0 then\n    return true\n  elseif a%39 == 0 then\n    return true\n  \nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplid66tpt.lua:99: ''end'' expected (to close ''if'' at line
    18) near ''lu''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmu05c0a4.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a > 0 and a <= 180 then\n    return true\n  end\n\
    \  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1jwe4873.lua:31:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp1jwe4873.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmu05c0a4.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmu05c0a4.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqpwwzhv6.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return false\n\
    \    end\n    if a < 0 then\n        return true\n    end\n    if a < 1 then\n\
    \        return false\n    end\n    if a % 2 == 0 then\n        return false\n\
    \    end\n    if a % 3 == 0 then\n        return true\n    end\n    if a % 4 ==\
    \ 0 then\n        return false\n    end\n    if a % 5 == 0 then\n        return\
    \ true\n    end\n    if a % 6 == 0 then\n        return false\n    end\n    if\
    \ a % 7 == 0 then\n        return true\n    end\n    if a % 8 == 0 then\n    \
    \    return false\n    end\n    if a % 9 == 0 then\n        return true\n    end\n\
    \    if a % 10 == 0 then\n        return false\n    end\n    if a % 11 == 0 then\n\
    \        return true\n    end\n    if a % 12 == 0 then\n        return false\n\
    \    end\n    if a % 13 == 0 then\n        return true\n    end\n    if a % 14\
    \ == 0 then\n        return false\n    end\n    if a % 15 == 0 then\n        return\
    \ true\n    end\n    if a % 16 == 0 then\n        return false\n    end\n    if\
    \ a % 17 == 0 then\n        return true\n    end\n    if a % 18 == 0 then\n  \
    \      return false\n    end\n    if a % 19 == 0 then\n        return true\n \
    \   end\n    if a % 20 == 0 then\n        return false\n    end\n    if a % 21\
    \ == 0 then\n        return true\n    end\n    if a % 22 == 0 then\n        return\
    \ false\n    end\n    if a % 23 == 0 then\n        return true\n    end\n    if\
    \ a % 24 == 0 then\n        return false\n    end\n    if a % 25 == 0 then\n \
    \       return true\n    end\n    if a % 26 == 0 then\n        return false\n\
    \    end\n    if a % 27 == 0 then\n        return true\n    end\n    if a % 28\
    \ == 0 then\n        return false\n    end\n    if a % 29 == 0 then\n        return\
    \ true\n    end\n    if a % 30 == 0 then\n        return false\n    end\n    if\
    \ a % 31 == 0 then\n        return true\n    end\n    if a % 32 == 0 then\n  \
    \      return false\n    end\n    if a % 33 == 0 then\n        return true\n \
    \   end\n    if a % 34 == 0 then\n        return false\n    end\n    if a % 35\
    \ == 0 then\n        return true\n    end\n    if a % 36 == 0 then\n        return\
    \ false\n    end\n    if a % 37 == 0 then\n        return true\n    end\n    if\
    \ a % \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp_vha6ps8.lua:139: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpq059e7io.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\t-- Write your\
    \ code here.\n\treturn false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3mwnn8op.lua:25:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp3mwnn8op.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmu05c0a4.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a < 0 then\n\
    \    return false\n  end\n  if a <= 1 then\n    return true\n  end\n  if a <=\
    \ 3 then\n    return true\n  end\n  if a <= 9 then\n    return true\n  end\n \
    \ if a <= 27 then\n    return true\n  end\n  if a <= 81 then\n    return true\n\
    \  end\n  if a <= 127 then\n    return true\n  end\n  if a <= 255 then\n    return\
    \ true\n  end\n  if a <= 511 then\n    return true\n  end\n  if a <= 1025 then\n\
    \    return true\n  end\n  if a <= 2047 then\n    return true\n  end\n  if a <=\
    \ 4097 then\n    return true\n  end\n  if a <= 8191 then\n    return true\n  end\n\
    \  if a <= 16383 then\n    return true\n  end\n  if a <= 32767 then\n    return\
    \ true\n  end\n  if a <= 65535 then\n    return true\n  end\n  if a <= 131071\
    \ then\n    return true\n  end\n  if a <= 262143 then\n    return true\n  end\n\
    \  if a <= 524287 then\n    return true\n  end\n  if a <= 1048575 then\n    return\
    \ true\n  end\n  if a <= 2097151 then\n    return true\n  end\n  if a <= 4194303\
    \ then\n    return true\n  end\n  if a <= 8388607 then\n    return true\n  end\n\
    \  if a <= 16777215 then\n    return true\n  end\n  if a <= 33554431 then\n  \
    \  return true\n  end\n  if a <= 67108863 then\n    return true\n  end\n  if a\
    \ <= 134217727 then\n    return true\n  end\n  if a <= 268435455 then\n    return\
    \ true\n  end\n  if a <= 536870911 then\n    return true\n  end\n  if a <= 1073741823\
    \ then\n    return true\n  end\n  if a <= 2147483647 then\n    return true\n \
    \ end\n  if a <= 4294967295 then\n    return true\n  end\n  if a <= 8589934591\
    \ then\n    return true\n  end\n  if a <= 17179869183 then\n    return true\n\
    \  end\n  if a <= 34359738367 then\n    return true\n  end\n  if a <= 68719476735\
    \ then\n    return true\n  end\n  if a <= 137438953473 then\n    return true\n\
    \  end\n  if a <= 274877906973 then\n    return true\n  end\n  if a \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmr6bceeg.lua:133: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then return false end\n    if a == 1 then return true end\n    if a % 3 == 0\
    \ then return true end\n    if a % 5 == 0 then return true end\n    if a % 7 ==\
    \ 0 then return true end\n    return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptkl6cnw8.lua:31:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmptkl6cnw8.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a > 0 then\n    return false\n  end\n  if a < 0\
    \ then\n    return true\n  end\n  if a < 1 then\n    return false\n  end\n  if\
    \ a < 2 then\n    return true\n  end\n  if a < 3 then\n    return false\n  end\n\
    \  if a < 4 then\n    return true\n  end\n  if a < 5 then\n    return false\n\
    \  end\n  if a < 6 then\n    return true\n  end\n  if a < 7 then\n    return false\n\
    \  end\n  if a < 8 then\n    return true\n  end\n  if a < 9 then\n    return false\n\
    \  end\n  if a < 10 then\n    return true\n  end\n  if a < 11 then\n    return\
    \ false\n  end\n  if a < 12 then\n    return true\n  end\n  if a < 13 then\n \
    \   return false\n  end\n  if a < 14 then\n    return true\n  end\n  if a < 15\
    \ then\n    return false\n  end\n  if a < 16 then\n    return true\n  end\n  if\
    \ a < 17 then\n    return false\n  end\n  if a < 18 then\n    return true\n  end\n\
    \  if a < 19 then\n    return false\n  end\n  if a < 20 then\n    return true\n\
    \  end\n  if a < 21 then\n    return false\n  end\n  if a < 22 then\n    return\
    \ true\n  end\n  if a < 23 then\n    return false\n  end\n  if a < 24 then\n \
    \   return true\n  end\n  if a < 25 then\n    return false\n  end\n  if a < 26\
    \ then\n    return true\n  end\n  if a < 27 then\n    return false\n  end\n  if\
    \ a < 28 then\n    return true\n  end\n  if a < 29 then\n    return false\n  end\n\
    \  if a < 30 then\n    return true\n  end\n  if a < 31 then\n    return false\n\
    \  end\n  if a < 32 then\n    return true\n  end\n  if a < 33 then\n    return\
    \ false\n  end\n  if a < 34 then\n    return true\n  end\n  if a < 35 then\n \
    \   return false\n  end\n  if a < 36 then\n    return true\n  end\n  if a < 37\
    \ then\n    return false\n  end\n  if a < 38 then\n    return true\n  end\n  if\
    \ a < 39 then\n    return false\n  end\n  if a < 40 then\n    return true\n  end\n\
    \  if a < 41 then\n    return false\n  end\n  if a < 42 then\n    return true\n\
    \  end\n  if a < 43 then\n    return false\n  end\n  if \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpa4egpgyz.lua:157: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpq059e7io.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmu05c0a4.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\t-- Write your\
    \ code in Lua 5.1 here\n\tlocal b = 1\n\twhile b < a do\n\t\tif a % b == 0 then\n\
    \t\t\treturn false\n\t\tend\n\t\tb = b + 1\n\tend\n\treturn true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7rnc40a8.lua:35:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp7rnc40a8.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmu05c0a4.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then return true end\n    if a == 1 then return true end\n    if a == 2 then\
    \ return true end\n    if a == 3 then return true end\n    if a == 4 then return\
    \ true end\n    if a == 5 then return true end\n    if a == 6 then return true\
    \ end\n    if a == 7 then return true end\n    if a == 8 then return true end\n\
    \    if a == 9 then return true end\n    if a == 10 then return true end\n   \
    \ if a == 11 then return true end\n    if a == 12 then return true end\n    if\
    \ a == 13 then return true end\n    if a == 14 then return true end\n    if a\
    \ == 15 then return true end\n    if a == 16 then return true end\n    if a ==\
    \ 17 then return true end\n    if a == 18 then return true end\n    if a == 19\
    \ then return true end\n    if a == 20 then return true end\n    if a == 21 then\
    \ return true end\n    if a == 22 then return true end\n    if a == 23 then return\
    \ true end\n    if a == 24 then return true end\n    if a == 25 then return true\
    \ end\n    if a == 26 then return true end\n    if a == 27 then return true end\n\
    \    if a == 28 then return true end\n    if a == 29 then return true end\n  \
    \  if a == 30 then return true end\n    if a == 31 then return true end\n    if\
    \ a == 32 then return true end\n    if a == 33 then return true end\n    if a\
    \ == 34 then return true end\n    if a == 35 then return true end\n    if a ==\
    \ 36 then return true end\n    if a == 37 then return true end\n    if a == 38\
    \ then return true end\n    if a == 39 then return true end\n    if a == 40 then\
    \ return true end\n    if a == 41 then return true end\n    if a == 42 then return\
    \ true end\n    if a == 43 then return true end\n    if a == 44 then return true\
    \ end\n    if a == 45 then return true end\n    if a == 46 then return true end\n\
    \    if a == 47 then return true end\n    if a == 48 then return true end\n  \
    \  if a == 49 then return true end\n    if a == 50 then return true end\n    if\
    \ a == 51 then return true end\n    if a == 52 then return true end\n    if a\
    \ == 53 then return true end\n    if a == 54 then return true end\n    if a ==\
    \ 55 then return true end\n    if a == 56 then return true end\n    if a == 57\
    \ then return true end\n    if a == 58 then return true end\n    if a == 59 then\
    \ return true end\n    if a == 60 then return true end\n    if a == 61 then \n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphrtyldey.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a <= 0 then\n\
    \    return false\n  end\n  if a == 1 then\n    return true\n  end\n  if a ==\
    \ 2 then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n \
    \ if a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n\
    \  end\n  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return\
    \ true\n  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n  \
    \  return true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11\
    \ then\n    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if\
    \ a == 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n \
    \ end\n  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return\
    \ true\n  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n\
    \    return true\n  end\n  if a == 19 then\n    return true\n  end\n  if a ==\
    \ 20 then\n    return true\n  end\n  if a == 21 then\n    return true\n  end\n\
    \  if a == 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n\
    \  end\n  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return\
    \ true\n  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n\
    \    return true\n  end\n  if a == 28 then\n    return true\n  end\n  if a ==\
    \ 29 then\n    return true\n  end\n  if a == 30 then\n    return true\n  end\n\
    \  if a == 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n\
    \  end\n  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return\
    \ true\n  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n\
    \    return true\n  end\n  if a == 37 then\n    return true\n  end\n  if a ==\
    \ 38 then\n    return true\n  end\n  if a == 39 then\n    return true\n  end\n\
    \  if a == 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n\
    \  end\n  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return\
    \ true\n  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n\
    \    return true\n  end\n  if a == 46 then\n    return true\n  end\n  if a ==\
    \ 47 then\n    return true\n  end\n  if a == 48 then\n    return true\n  end\n\
    \  if a == 49 then\n    return true\n  end\n  if \nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp9pfktjpu.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  else\n    if a > 0 then\n      return (a % 4 == 0 and a %\
    \ 100 != 0 or a % 400 == 0)\n    else\n      return false\n    end\n  end\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpu85f_88w.lua:22: '')'' expected near ''!''

    '
  stdout: ''
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a > 0 then\n    return false\n  end\n  if a < 0\
    \ then\n    return false\n  end\n  if a < 1 then\n    return false\n  end\n  if\
    \ a % 1 == 0 then\n    return false\n  end\n  if a % 2 == 0 then\n    return true\n\
    \  end\n  if a % 3 == 0 then\n    return true\n  end\n  if a % 4 == 0 then\n \
    \   return true\n  end\n  if a % 5 == 0 then\n    return true\n  end\n  if a %\
    \ 6 == 0 then\n    return true\n  end\n  if a % 7 == 0 then\n    return true\n\
    \  end\n  if a % 8 == 0 then\n    return true\n  end\n  if a % 9 == 0 then\n \
    \   return true\n  end\n  if a % 10 == 0 then\n    return true\n  end\n  if a\
    \ % 11 == 0 then\n    return true\n  end\n  if a % 12 == 0 then\n    return true\n\
    \  end\n  if a % 13 == 0 then\n    return true\n  end\n  if a % 14 == 0 then\n\
    \    return true\n  end\n  if a % 15 == 0 then\n    return true\n  end\n  if a\
    \ % 16 == 0 then\n    return true\n  end\n  if a % 17 == 0 then\n    return true\n\
    \  end\n  if a % 18 == 0 then\n    return true\n  end\n  if a % 19 == 0 then\n\
    \    return true\n  end\n  if a % 20 == 0 then\n    return true\n  end\n  if a\
    \ % 21 == 0 then\n    return true\n  end\n  if a % 22 == 0 then\n    return true\n\
    \  end\n  if a % 23 == 0 then\n    return true\n  end\n  if a % 24 == 0 then\n\
    \    return true\n  end\n  if a % 25 == 0 then\n    return true\n  end\n  if a\
    \ % 26 == 0 then\n    return true\n  end\n  if a % 27 == 0 then\n    return true\n\
    \  end\n  if a % 28 == 0 then\n    return true\n  end\n  if a % 29 == 0 then\n\
    \    return true\n  end\n  if a % 30 == 0 then\n    return true\n  end\n  if a\
    \ % 31 == 0 then\n    return true\n  end\n  if a % 32 == 0 then\n    return true\n\
    \  end\n  if a % 33 == 0 then\n    return true\n  end\n  if a % 34 == 0 then\n\
    \    return true\n  end\n  if a % 35 == 0 then\n    return true\n  end\n  if a\
    \ % 36 == 0 then\n    return true\n  end\n  if a % 37\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp0jnaca47.lua:139: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\t-- Write your\
    \ code here.\n\treturn false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3mwnn8op.lua:25:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp3mwnn8op.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return false\n\
    \    end\n    if a < 0 then\n        return true\n    end\n    if a < 1 then\n\
    \        return false\n    end\n    if a % 2 == 0 then\n        return false\n\
    \    end\n    if a % 3 == 0 then\n        return true\n    end\n    if a % 4 ==\
    \ 0 then\n        return false\n    end\n    if a % 5 == 0 then\n        return\
    \ true\n    end\n    if a % 6 == 0 then\n        return false\n    end\n    if\
    \ a % 7 == 0 then\n        return true\n    end\n    if a % 8 == 0 then\n    \
    \    return false\n    end\n    if a % 9 == 0 then\n        return true\n    end\n\
    \    if a % 10 == 0 then\n        return false\n    end\n    if a % 11 == 0 then\n\
    \        return true\n    end\n    if a % 12 == 0 then\n        return false\n\
    \    end\n    if a % 13 == 0 then\n        return true\n    end\n    if a % 14\
    \ == 0 then\n        return false\n    end\n    if a % 15 == 0 then\n        return\
    \ true\n    end\n    if a % 16 == 0 then\n        return false\n    end\n    if\
    \ a % 17 == 0 then\n        return true\n    end\n    if a % 18 == 0 then\n  \
    \      return false\n    end\n    if a % 19 == 0 then\n        return true\n \
    \   end\n    if a % 20 == 0 then\n        return false\n    end\n    if a % 21\
    \ == 0 then\n        return true\n    end\n    if a % 22 == 0 then\n        return\
    \ false\n    end\n    if a % 23 == 0 then\n        return true\n    end\n    if\
    \ a % 24 == 0 then\n        return false\n    end\n    if a % 25 == 0 then\n \
    \       return true\n    end\n    if a % 26 == 0 then\n        return false\n\
    \    end\n    if a % 27 == 0 then\n        return true\n    end\n    if a % 28\
    \ == 0 then\n        return false\n    end\n    if a % 29 == 0 then\n        return\
    \ true\n    end\n    if a % 30 == 0 then\n        return false\n    end\n    if\
    \ a % 31 == 0 then\n        return true\n    end\n    if a % 32 == 0 then\n  \
    \      return false\n    end\n    if a % 33 == 0 then\n        return true\n \
    \   end\n    if a % 34 == 0 then\n        return false\n    end\n    if a % 35\
    \ == 0 then\n        return true\n    end\n    if a % 36 == 0 then\n        return\
    \ false\n    end\n    if a % 37 == 0 then\n        return true\n    end\n    if\
    \ a % \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp_vha6ps8.lua:139: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return false\n\
    \    end\n    if a < 0 then\n        return true\n    end\n    local b = a\n \
    \   while b > 1 do\n        if b % 3 == 0 then\n            return false\n   \
    \     end\n        local c = b\n        while c > 1 do\n            if c % 3 ==\
    \ 0 then\n                return false\n            end\n            local d =\
    \ c\n            while d > 1 do\n                if d % 3 == 0 then\n        \
    \            return false\n                end\n                local e = d\n\
    \                while e > 1 do\n                    if e % 3 == 0 then\n    \
    \                    return false\n                    end\n                 \
    \   local f = e\n                    while f > 1 do\n                        if\
    \ f % 3 == 0 then\n                            return false\n                \
    \        end\n                        local g = f\n                        while\
    \ g > 1 do\n                            if g % 3 == 0 then\n                 \
    \               return false\n                            end\n              \
    \              local h = g\n                            while h > 1 do\n     \
    \                           if h % 3 == 0 then\n                             \
    \       return false\n                                end\n                  \
    \              local i = h\n                                while i > 1 do\n \
    \                                   if i % 3 == 0 then\n                     \
    \                   return false\n                                    end\n  \
    \                                  local j = i\n                             \
    \       while j > 1 do\n                                        if j % 3 == 0\
    \ then\n                                            return false\n           \
    \                             end\n                                        local\
    \ k = j\n                                        while k > 1 do\n            \
    \                                if k % 3 == 0 then\n                        \
    \                        return false\n                                      \
    \      end\n                                            local l = k\n        \
    \                                    while l > 1 do\n                        \
    \                        if l % 3 == 0 then\n                                \
    \                    return false\n                                          \
    \      end\n                                                local m = l\n    \
    \                                            while m > 1 do\n                \
    \                                    if m % 3 == 0 then\n                    \
    \                                    return false\n                          \
    \                          end\n                                             \
    \       local n = m\n                                                    while\
    \ n > 1 do\n                                                        if n % 3 ==\
    \ 0 then\n                                                            return false\n\
    \                                                        end\n               \
    \                                         local o = n\n                      \
    \                                  while o > 1 do\n                          \
    \                                  if o % 3 == 0 then\n                      \
    \                                          return false\n                    \
    \                                        end\n                               \
    \                             local p = o\n                                  \
    \                          while p > 1 do\n                                  \
    \                              if p % 3 == 0 then\n                          \
    \                                          return false\n                    \
    \                                            end\n                           \
    \                                     local q = p\n                          \
    \                                      while q > 1 do\n                      \
    \                                              if q % 3 == 0 then\n          \
    \                                                                            \
    \  return false\n                                                            \
    \        end\n                                                               \
    \     local r = q\n                                                          \
    \          while r > 1 do\n                                                  \
    \                      if r % 3 == 0 then\n                                  \
    \                          return false\n                                    \
    \                                    end\n                                   \
    \                                     local s = r\n                          \
    \                                              while s > 1 do\n              \
    \                                                              if s % 3 == 0 then\n\
    \                                                                            \
    \    return false\n                                                          \
    \                  end\n                                                     \
    \                       local t = s\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphnalrz43.lua:132: ''end'' expected (to close ''while'' at
    line 113) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return false\n  else\n    return\
    \ iscube(a-1) or iscube(a-1)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk7di24kt.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpk7di24kt.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqpwwzhv6.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  return a %\
    \ 1 == 0 and a % 3 == 0 and a % 5 == 0 and a % 7 == 0 and a % 9 == 0 and a % 11\
    \ == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp554h1u54.lua:24:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp554h1u54.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a <= 0 then\n\
    \    return false\n  end\n  if a == 1 then\n    return true\n  end\n  if a ==\
    \ 2 then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n \
    \ if a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n\
    \  end\n  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return\
    \ true\n  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n  \
    \  return true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11\
    \ then\n    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if\
    \ a == 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n \
    \ end\n  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return\
    \ true\n  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n\
    \    return true\n  end\n  if a == 19 then\n    return true\n  end\n  if a ==\
    \ 20 then\n    return true\n  end\n  if a == 21 then\n    return true\n  end\n\
    \  if a == 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n\
    \  end\n  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return\
    \ true\n  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n\
    \    return true\n  end\n  if a == 28 then\n    return true\n  end\n  if a ==\
    \ 29 then\n    return true\n  end\n  if a == 30 then\n    return true\n  end\n\
    \  if a == 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n\
    \  end\n  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return\
    \ true\n  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n\
    \    return true\n  end\n  if a == 37 then\n    return true\n  end\n  if a ==\
    \ 38 then\n    return true\n  end\n  if a == 39 then\n    return true\n  end\n\
    \  if a == 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n\
    \  end\n  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return\
    \ true\n  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n\
    \    return true\n  end\n  if a == 46 then\n    return true\n  end\n  if a ==\
    \ 47 then\n    return true\n  end\n  if a == 48 then\n    return true\n  end\n\
    \  if a == 49 then\n    return true\n  end\n  if \nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp9pfktjpu.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqpwwzhv6.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a < 0 then\n\
    \    return false\n  end\n  if a == 0 then\n    return true\n  end\n  if a > 0\
    \ then\n    return true\n  end\n  if a <= 1 then\n    return false\n  end\n  if\
    \ a <= 3 then\n    return true\n  end\n  if a <= 9 then\n    return true\n  end\n\
    \  if a <= 27 then\n    return true\n  end\n  if a <= 49 then\n    return true\n\
    \  end\n  if a <= 81 then\n    return true\n  end\n  if a <= 127 then\n    return\
    \ true\n  end\n  if a <= 255 then\n    return true\n  end\n  if a <= 511 then\n\
    \    return true\n  end\n  if a <= 1025 then\n    return true\n  end\n  if a <=\
    \ 2049 then\n    return true\n  end\n  if a <= 4091 then\n    return true\n  end\n\
    \  if a <= 8191 then\n    return true\n  end\n  if a <= 16383 then\n    return\
    \ true\n  end\n  if a <= 32767 then\n    return true\n  end\n  if a <= 65535 then\n\
    \    return true\n  end\n  if a <= 131071 then\n    return true\n  end\n  if a\
    \ <= 262143 then\n    return true\n  end\n  if a <= 524287 then\n    return true\n\
    \  end\n  if a <= 1048575 then\n    return true\n  end\n  if a <= 2097151 then\n\
    \    return true\n  end\n  if a <= 4194303 then\n    return true\n  end\n  if\
    \ a <= 8388607 then\n    return true\n  end\n  if a <= 16777215 then\n    return\
    \ true\n  end\n  if a <= 33554431 then\n    return true\n  end\n  if a <= 67108863\
    \ then\n    return true\n  end\n  if a <= 134217727 then\n    return true\n  end\n\
    \  if a <= 268435455 then\n    return true\n  end\n  if a <= 536870911 then\n\
    \    return true\n  end\n  if a <= 1073741823 then\n    return true\n  end\n \
    \ if a <= 2147483647 then\n    return true\n  end\n  if a <= 4294967295 then\n\
    \    return true\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyi6tfvtr.lua:130:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpyi6tfvtr.lua:130:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        if a % 2 == 0\
    \ then\n            if a % 3 == 0 then\n                if a % 5 == 0 then\n \
    \                   if a % 7 == 0 then\n                        return true\n\
    \                    else\n                        return false\n            \
    \        end\n                else\n                    return false\n       \
    \         end\n            else\n                return false\n            end\n\
    \        else\n            return false\n        end\n    else\n        return\
    \ false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph8_8w7xo.lua:47:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmph8_8w7xo.lua:47:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return iscube(a-1)\
    \ and iscube(a-1*a) and iscube(a-1*a*a)\n    else\n        return false\n    end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa6oa4257.lua:33:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpa6oa4257.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqpwwzhv6.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a % 3 ==\
    \ 0 then\n        return true\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_m5tk8tk.lua:36:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp_m5tk8tk.lua:36:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\t-- Write your\
    \ solution here\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\t\
    local f = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal\
    \ k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p\
    \ = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u =\
    \ 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\
    \tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\t\
    local f = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal\
    \ k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p\
    \ = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u =\
    \ 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\
    \tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\t\
    local f = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal\
    \ k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p\
    \ = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u =\
    \ 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\
    \tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\t\
    local f = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal\
    \ k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p\
    \ = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u =\
    \ 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp58jbagih.lua:136: ''end'' expected (to close ''function''
    at line 17) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmu05c0a4.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\t-- Write your\
    \ code here.\n\treturn true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsyjd1rdi.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpsyjd1rdi.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a <= 0\
    \ then\n        return false\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a % 2 == 0 then\n        return false\n    end\n    if a % 3\
    \ == 0 then\n        return true\n    end\n    if a % 4 == 0 then\n        return\
    \ false\n    end\n    if a % 5 == 0 then\n        return true\n    end\n    if\
    \ a % 6 == 0 then\n        return false\n    end\n    if a % 7 == 0 then\n   \
    \     return true\n    end\n    if a % 8 == 0 then\n        return false\n   \
    \ end\n    if a % 9 == 0 then\n        return true\n    end\n    if a % 10 ==\
    \ 0 then\n        return false\n    end\n    if a % 11 == 0 then\n        return\
    \ true\n    end\n    if a % 12 == 0 then\n        return false\n    end\n    if\
    \ a % 13 == 0 then\n        return true\n    end\n    if a % 14 == 0 then\n  \
    \      return false\n    end\n    if a % 15 == 0 then\n        return true\n \
    \   end\n    if a % 16 == 0 then\n        return false\n    end\n    if a % 17\
    \ == 0 then\n        return true\n    end\n    if a % 18 == 0 then\n        return\
    \ false\n    end\n    if a % 19 == 0 then\n        return true\n    end\n    if\
    \ a % 20 == 0 then\n        return false\n    end\n    if a % 21 == 0 then\n \
    \       return true\n    end\n    if a % 22 == 0 then\n        return false\n\
    \    end\n    if a % 23 == 0 then\n        return true\n    end\n    if a % 24\
    \ == 0 then\n        return false\n    end\n    if a % 25 == 0 then\n        return\
    \ true\n    end\n    if a % 26 == 0 then\n        return false\n    end\n    if\
    \ a % 27 == 0 then\n        return true\n    end\n    if a % 28 == 0 then\n  \
    \      return false\n    end\n    if a % 29 == 0 then\n        return true\n \
    \   end\n    if a % 30 == 0 then\n        return false\n    end\n    if a % 31\
    \ == 0 then\n        return true\n    end\n    if a % 32 == 0 then\n        return\
    \ false\n    end\n    if a % 33 == 0 then\n        return true\n    end\n    if\
    \ a % 34 == 0 then\n        return false\n    end\n    if a % 35 == 0 then\n \
    \       return true\n    end\n    if a % 36 == 0 then\n        return false\n\
    \    end\n    if a % 37 == 0 then\n        return true\n    end\n    if a % 38\
    \ == 0 then\n        return false\n    end\n    if a % 39 == 0 then\n        return\
    \ true\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpo511w5m2.lua:152: ''end'' expected (to close ''function''
    at line 17) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a < 0 then\n\
    \    return false\n  end\n  if a == 0 then\n    return true\n  end\n  if a > 0\
    \ then\n    return true\n  end\n  if a < 1 then\n    return false\n  end\n  if\
    \ a > 1 then\n    return false\n  end\n  if a < 2 then\n    return true\n  end\n\
    \  if a > 2 then\n    return true\n  end\n  if a < 3 then\n    return false\n\
    \  end\n  if a > 3 then\n    return false\n  end\n  if a < 4 then\n    return\
    \ true\n  end\n  if a > 4 then\n    return true\n  end\n  if a < 5 then\n    return\
    \ false\n  end\n  if a > 5 then\n    return false\n  end\n  if a < 6 then\n  \
    \  return true\n  end\n  if a > 6 then\n    return true\n  end\n  if a < 7 then\n\
    \    return false\n  end\n  if a > 7 then\n    return false\n  end\n  if a < 8\
    \ then\n    return true\n  end\n  if a > 8 then\n    return true\n  end\n  if\
    \ a < 9 then\n    return false\n  end\n  if a > 9 then\n    return false\n  end\n\
    \  if a < 10 then\n    return true\n  end\n  if a > 10 then\n    return true\n\
    \  end\n  if a < 11 then\n    return false\n  end\n  if a > 11 then\n    return\
    \ false\n  end\n  if a < 12 then\n    return true\n  end\n  if a > 12 then\n \
    \   return true\n  end\n  if a < 13 then\n    return false\n  end\n  if a > 13\
    \ then\n    return false\n  end\n  if a < 14 then\n    return true\n  end\n  if\
    \ a > 14 then\n    return true\n  end\n  if a < 15 then\n    return false\n  end\n\
    \  if a > 15 then\n    return false\n  end\n  if a < 16 then\n    return true\n\
    \  end\n  if a > 16 then\n    return true\n  end\n  if a < 17 then\n    return\
    \ false\n  end\n  if a > 17 then\n    return false\n  end\n  if a < 18 then\n\
    \    return true\n  end\n  if a > 18 then\n    return true\n  end\n  if a < 19\
    \ then\n    return false\n  end\n  if a > 19 then\n    return false\n  end\n \
    \ if a < 20 then\n    return true\n  end\n  if a > 20 then\n    return true\n\
    \  end\n  if a < 21 then\n    return false\n  end\n  if a > 21 then\n    return\
    \ false\n  end\n  if a < 22 then\n    return true\n  end\n  if a > 22 then\n \
    \   return \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp85k5cypm.lua:158: ''end'' expected (to close ''if'' at line
    156) near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  return a %\
    \ 1 == 0 and a % 2 == 0 and a % 3 == 0 and a % 4 == 0 and a % 5 == 0 and a % 6\
    \ == 0 and a % 7 == 0 and a % 8 == 0 and a % 9 == 0 and a % 10 == 0 and a % 11\
    \ == 0 and a % 12 == 0 and a % 13 == 0 and a % 14 == 0 and a % 15 == 0 and a %\
    \ 16 == 0 and a % 17 == 0 and a % 18 == 0 and a % 19 == 0 and a % 20 == 0 and\
    \ a % 21 == 0 and a % 22 == 0 and a % 23 == 0 and a % 24 == 0 and a % 25 == 0\
    \ and a % 26 == 0 and a % 27 == 0 and a % 28 == 0 and a % 29 == 0 and a % 30 ==\
    \ 0 and a % 31 == 0 and a % 32 == 0 and a % 33 == 0 and a % 34 == 0 and a % 35\
    \ == 0 and a % 36 == 0 and a % 37 == 0 and a % 38 == 0 and a % 39 == 0 and a %\
    \ 40 == 0 and a % 41 == 0 and a % 42 == 0 and a % 43 == 0 and a % 44 == 0 and\
    \ a % 45 == 0 and a % 46 == 0 and a % 47 == 0 and a % 48 == 0 and a % 49 == 0\
    \ and a % 50 == 0 and a % 51 == 0 and a % 52 == 0 and a % 53 == 0 and a % 54 ==\
    \ 0 and a % 55 == 0 and a % 56 == 0 and a % 57 == 0 and a % 58 == 0 and a % 59\
    \ == 0 and a % 60 == 0 and a % 61 == 0 and a % 62 == 0 and a % 63 == 0 and a %\
    \ 64 == 0 and a % 65 == 0 and a % 66 == 0 and a % 67 == 0 and a % 68 == 0 and\
    \ a % 69 == 0 and a % 70 == 0 and a % 71 == 0 and a % 72 == 0 and a % 73 == 0\
    \ and a % 74 == 0 and a % 75 == 0 and a % 76 == 0 and a % 77 == 0 and a % 78 ==\
    \ 0 and a % 79 == 0 and a % 80 == 0 and a % 81 == 0 and a % 82 == 0 and a % 83\
    \ == 0 and a % 84 == 0 and a % 85 == 0 and a % 86 == 0 and a % 87 == 0 and a %\
    \ 88 == 0 and a % 89 == 0 and a % 90 == 0 and a % 91 == 0 and a % 92 == 0 and\
    \ a % 93 == 0 and a % 94 == 0 and a % 95 == 0 and a % 96 == 0 and a % 97 == 0\
    \ and a % 98 == 0 and a % 99 == 0 and a % 100 == 0 and a % 101 == 0 and a % 102\
    \ == 0 and a % 103 == \nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpxgkb8wk6.lua:19: ''end'' expected (to close ''function'' at
    line 17) near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a < 0 then\n\
    \    return false\n  end\n  if a == 0 then\n    return true\n  end\n  if a > 0\
    \ then\n    return iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp013212rl.lua:33:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp013212rl.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a == 180\
    \ then\n        return true\n    end\n    if a == 360 then\n        return true\n\
    \    end\n    if a == 720 then\n        return true\n    end\n    if a == 1440\
    \ then\n        return true\n    end\n    if a == 28800 then\n        return true\n\
    \    end\n    if a == 57600 then\n        return true\n    end\n    if a == 115200\
    \ then\n        return true\n    end\n    if a == 250000 then\n        return\
    \ true\n    end\n    if a == 52428800 then\n        return true\n    end\n   \
    \ if a == 104857600 then\n        return true\n    end\n    if a == 209715200\
    \ then\n        return true\n    end\n    if a == 4398046511104 then\n       \
    \ return true\n    end\n    if a == 67108861 then\n        return true\n    end\n\
    \    if a == 134217727 then\n        return true\n    end\n    if a == 268435455\
    \ then\n        return true\n    end\n    if a == 536870911 then\n        return\
    \ true\n    end\n    if a == 1073741823 then\n        return true\n    end\n \
    \   if a == 2147483647 then\n        return true\n    end\n    if a == 4294967295\
    \ then\n        return true\n    end\n    if a == 67108863 then\n        return\
    \ true\n    end\n    if a == 134217729 then\n        return true\n    end\n  \
    \  if a == 268435456 then\n        return true\n    end\n    if a == 536870912\
    \ then\n        return true\n    end\n    if a == 1073741824 then\n        return\
    \ true\n    end\n    if a == 2147483648 then\n        return true\n    end\n \
    \   if a == 4294967296 then\n        return true\n    end\n    if a == 67108864\
    \ then\n        return true\n    end\n    if a == 134217730 then\n        return\
    \ true\n    end\n    if a == 268435457 then\n        return true\n    end\n  \
    \  if a == 536870913 then\n        return true\n    end\n    if a == 1073741825\
    \ then\n        return true\n    end\n    if a == 2147483649 then\n        return\
    \ true\n    end\n    if a == 4294967297 then\n        return true\n    end\n \
    \   if a == 67108865 then\n        return true\n    end\n    if a == 134217731\
    \ then\n        return true\n    end\n    if a == 268435458 then\n        return\
    \ true\n    end\n    if a == 5368709\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpe9ayf8q5.lua:136: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a < 0\
    \ then\n        return false\n    end\n    if a == 0 then\n        return true\n\
    \    end\n    if a > 0 then\n        return iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqzvcdg_s.lua:26: '')'' expected (to close ''('' at line 25)
    near ''lu''

    '
  stdout: ''
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a > 0 and a <= 9 then\n    return true\n  end\n\
    \  if a > 9 and a <= 99 then\n    return true\n  end\n  if a > 99 and a <= 999\
    \ then\n    return true\n  end\n  if a > 999 and a <= 9999 then\n    return true\n\
    \  end\n  if a > 9999 and a <= 99999 then\n    return true\n  end\n  if a > 99999\
    \ and a <= 999999 then\n    return true\n  end\n  if a > 999999 and a <= 9999999\
    \ then\n    return true\n  end\n  if a > 9999999 and a <= 999999999 then\n   \
    \ return true\n  end\n  if a > 999999999 and a <= 9999999999 then\n    return\
    \ true\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp__hzh__r.lua:55:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp__hzh__r.lua:55:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750305
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpq059e7io.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp22vv0cgh.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750304
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns true \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a < 0 then\n\
    \    return false\n  end\n  if a == 0 then\n    return true\n  end\n  if a > 0\
    \ then\n    return true\n  end\n  if a <= 1 then\n    return false\n  end\n  if\
    \ a <= 3 then\n    return true\n  end\n  if a <= 9 then\n    return true\n  end\n\
    \  if a <= 27 then\n    return true\n  end\n  if a <= 49 then\n    return true\n\
    \  end\n  if a <= 81 then\n    return true\n  end\n  if a <= 127 then\n    return\
    \ true\n  end\n  if a <= 255 then\n    return true\n  end\n  if a <= 511 then\n\
    \    return true\n  end\n  if a <= 1025 then\n    return true\n  end\n  if a <=\
    \ 2049 then\n    return true\n  end\n  if a <= 4097 then\n    return true\n  end\n\
    \  if a <= 8191 then\n    return true\n  end\n  if a <= 16383 then\n    return\
    \ true\n  end\n  if a <= 32767 then\n    return true\n  end\n  if a <= 65535 then\n\
    \    return true\n  end\n  if a <= 131071 then\n    return true\n  end\n  if a\
    \ <= 262143 then\n    return true\n  end\n  if a <= 524287 then\n    return true\n\
    \  end\n  if a <= 1048575 then\n    return true\n  end\n  if a <= 2097151 then\n\
    \    return true\n  end\n  if a <= 4194303 then\n    return true\n  end\n  if\
    \ a <= 8388607 then\n    return true\n  end\n  if a <= 16777215 then\n    return\
    \ true\n  end\n  if a <= 33554431 then\n    return true\n  end\n  if a <= 67108863\
    \ then\n    return true\n  end\n  if a <= 134217727 then\n    return true\n  end\n\
    \  if a <= 268435455 then\n    return true\n  end\n  if a <= 536870911 then\n\
    \    return true\n  end\n  if a <= 1073741823 then\n    return true\n  end\n \
    \ if a <= 2147483647 then\n    return true\n  end\n  if a <= 4294967295 then\n\
    \    return true\n  end\n  if a <= 858993459 then\n    return true\n  end\n  if\
    \ a <= 1717986915 then\n    return true\n  end\n  if a <= 3435973833 then\n  \
    \  return true\n  end\n  if a <= 687194767 then\n    return true\n  end\n  if\
    \ a \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate =\
    \ iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpazerp8cy.lua:136: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659750305

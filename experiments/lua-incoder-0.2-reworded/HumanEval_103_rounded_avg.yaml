name: HumanEval_103_rounded_avg
language: lua
prompt: "-- You are given two positive integers n and m, and your task is to compute\
  \ the\n-- average of the integers from n through m (including n and m). \n-- Round\
  \ the answer to the nearest integer and convert that to binary.\n-- If n is greater\
  \ than m, return -1.\n-- Example:\n-- >>> rounded_avg(1, 5)\n-- '0b11'\n-- >>> rounded_avg(7,\
  \ 5)\n-- -1\n-- >>> rounded_avg(10, 20)\n-- '0b1111'\n-- >>> rounded_avg(20, 33)\n\
  -- '0b11010'\nlocal function rounded_avg(n, m)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rounded_avg\n\
  \    lu.assertEquals(candidate(1, 5), '0b11')\n    lu.assertEquals(candidate(7,\
  \ 13), '0b1010')\n    lu.assertEquals(candidate(964, 977), '0b1111001010')\n   \
  \ lu.assertEquals(candidate(996, 997), '0b1111100100')\n    lu.assertEquals(candidate(560,\
  \ 851), '0b1011000010')\n    lu.assertEquals(candidate(185, 546), '0b101101110')\n\
  \    lu.assertEquals(candidate(362, 496), '0b110101101')\n    lu.assertEquals(candidate(350,\
  \ 902), '0b1001110010')\n    lu.assertEquals(candidate(197, 233), '0b11010111')\n\
  \    lu.assertEquals(candidate(7, 5), -1)\n    lu.assertEquals(candidate(5, 1),\
  \ -1)\n    lu.assertEquals(candidate(5, 5), '0b101')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if m > n then\n    return -1\n  end\n  local sum = 0\n  local count\
    \ = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ tostring(sum / count)\nend", "  if m == 0 then\n    return -1\n  end\n  local\
    \ sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count\
    \ = count + 1\n  end\n  return string.format('0b%b', sum / count)\nend", "  if\
    \ n > m then\n    return -1\n  end\n  local sum = 0\n  for i = n, m do\n    sum\
    \ = sum + i\n  end\n  return tostring(sum / 2)\nend", "  if n > m then\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum =\
    \ sum + i\n    count = count + 1\n  end\n  return \"0b\" .. tostring(sum / count)\n\
    end", "  if m == 0 then\n    return -1\n  end\n  local sum = 0\n  for i = n, m\
    \ do\n    sum = sum + i\n  end\n  return math.floor(sum / 2)\nend", "  local nm\
    \ = math.floor(n/m)*m\n  if nm > m then\n    return -1\n  end\n  return string.format('0b%0*d',\
    \ math.ceil(nm/m), nm%m)\nend", "  local nn = math.floor(n)\n  local mm = math.floor(m)\n\
    \  if mm > n then\n    return -1\n  end\n  return string.format('0b%b', nn + (mm\
    \ - nn) * 0.5)\nend", "  local nm, m, nr, mr = n, m, 0, 0\n  while nm <= m do\n\
    \    nr, mr = nr, nm % 10 + mr\n    nm = math.floor(nm/10)\n  end\n  return nr\
    \ < mr ? -1 : nr\nend", "  if m > n then\n    return -1\n  end\n  local sum =\
    \ 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count\
    \ + 1\n  end\n  local avg = sum / count\n  return tostring(avg)\nend", "  if m\
    \ > n then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i\
    \ = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n\
    \  for i = n, m do\n    sum = sum + i\n  end\n  return '0b' .. string.char(sum\
    \ / 2)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  local avg = sum / count\n  local bin = string.format(\"%b\", avg)\n  return\
    \ bin\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  local avg = sum / count\n  local bin = string.format(\"%b\", avg)\n  return\
    \ bin\nend", "  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum =\
    \ sum + i\n    count = count + 1\n  end\n  if count > 0 then\n    return string.format('0b%b',\
    \ sum / count)\n  else\n    return -1\n  end\nend", "  if m == 0 then\n    return\
    \ -1\n  end\n  local nn = math.floor(n)\n  local mm = math.floor(m)\n  local sum\
    \ = 0\n  local count = 0\n  for i = nn,mm do\n    sum = sum + i\n    count = count\
    \ + 1\n  end\n  if count == 0 then\n    return -1\n  end\n  local result = sum\
    \ / count\n  return tostring(result)\nend", "  if m > n then\n    return -1\n\
    \  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum +\
    \ i\n    count = count + 1\n  end\n  return string.format('0b%b', sum / count)\n\
    end", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local count =\
    \ 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  local\
    \ avg = sum / count\n  local bin = string.format('%b', avg)\n  return bin\nend",
  "  if m == 0 then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return \"0b\"\
    \ .. tostring(sum / count)\nend", "  if m > n then\n    return -1\n  end\n  local\
    \ sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count\
    \ = count + 1\n  end\n  local avg = sum / count\n  return tostring(avg)\nend",
  "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  while\
    \ n <= m do\n    sum = sum + n\n    n = n + 1\n    count = count + 1\n  end\n\
    \  return '0b' .. tostring(sum / count)\nend", "  if m > n then\n    return -1\n\
    \  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum +\
    \ i\n    count = count + 1\n  end\n  return string.format('0b%b', sum / count)\n\
    end", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local count =\
    \ 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ \"0b\" .. tostring(sum / count)\nend", "  local nn = math.floor(n)\n  local\
    \ mm = math.floor(m)\n  if mm > n then\n    return -1\n  end\n  return string.format('0b%b',\
    \ nn * math.pow(2, mm))\nend", "  if m > n then\n    return -1\n  end\n  local\
    \ sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count\
    \ = count + 1\n  end\n  return \"0b\" .. tostring(sum / count)\nend", "  if n\
    \ > m then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i\
    \ = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return \"0b\"\
    \ .. tostring(sum / count)\nend", "  if m > n then\n    return -1\n  end\n  local\
    \ sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count\
    \ = count + 1\n  end\n  return string.format('0b%b', sum / count)\nend", "  if\
    \ m > n then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n\
    \  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count +\
    \ 1\n  end\n  return string.format('0b%b', sum / count)\nend", "  if m == 0 then\n\
    \    return -1\n  elseif n == m then\n    return tostring(n / 2)\n  else\n   \
    \ return tostring(n / 2) + tostring(m / 2)\n  end\nend", "  if n < m then\n  \
    \  return -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n \
    \   sum = sum + i\n    count = count + 1\n  end\n  return \"0b\" .. tostring(sum\
    \ / count)\nend", "  local nn = math.max(m, n)\n  local mm = math.max(m, n)\n\
    \  local nm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nm = math.max(m, n)", "  local nn = math.floor(n/2) + 1\n  if nn\
    \ > m then return -1 end\n  local mm = math.floor(m/2) + 1\n  local sum = 0\n\
    \  for i = nn,mm do\n    sum = sum + i\n  end\n  return '0b' .. tostring(sum)\n\
    end", "  if n > m then\n    return -1\n  end\n  local sum = 0\n  local count =\
    \ 0\n  while n > m do\n    sum = sum + n\n    n = n - 1\n    count = count + 1\n\
    \  end\n  sum = sum + m\n  return string.format('0b%b', sum / count)\nend", " \
    \ local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n   \
    \ count = count + 1\n  end\n  if count > 0 then\n    return string.format(\"0b%b\"\
    , sum / count)\n  else\n    return -1\n  end\nend", "  if m > n then\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum =\
    \ sum + i\n    count = count + 1\n  end\n  local avg = sum / count\n  local bin\
    \ = string.format('%b', avg)\n  return bin\nend", "  if m > n then\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum =\
    \ sum + i\n    count = count + 1\n  end\n  return string.format('0b%b', sum /\
    \ count)\nend", "  local nn = math.floor(n/2) + 1\n  local mm = math.floor(m/2)\
    \ + 1\n  if nn > m then return -1 end\n  return string.format('0b%b', nn * 2 +\
    \ mm)\nend", "  if m == 0 then\n    return -1\n  elseif n == m then\n    return\
    \ tostring(m)\n  else\n    return tostring(n + (m / 2))\n  end\nend", "  if m\
    \ > n then return -1 end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  return \"0b\" .. tostring(sum\
    \ / count)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  return string.format('0b%b', sum / count)\nend", "  if m > n then\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum =\
    \ sum + i\n    count = count + 1\n  end\n  return string.format('0b%b', sum /\
    \ count)\nend", "  if m == 0 then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  return string.format('0b%b', sum / count)\nend", "  local nm = math.min(n,\
    \ m)\n  local sum = 0\n  local count = 0\n  for i = n, nm do\n    sum = sum +\
    \ i\n    count = count + 1\n  end\n  if count > 0 then\n    return string.format(\"\
    0b%b\", sum / count)\n  else\n    return -1\n  end\nend", "  local n1 = math.floor(n)\n\
    \  local n2 = math.ceil(n)\n  local m1 = math.floor(m)\n  local m2 = math.ceil(m)\n\
    \  if n1 == m1 then\n    return n\n  elseif n2 == m2 then\n    return -1\n  else\n\
    \    return (n1 + n2 + 1) / 3\n  end\nend", "  if m > n then\n    return -1\n\
    \  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum +\
    \ i\n    count = count + 1\n  end\n  return string.format('0b%b', sum / count)\n\
    end", "  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum +\
    \ i\n    count = count + 1\n  end\n  if count > 0 then\n    return tostring(sum\
    \ / count)\n  else\n    return -1\n  end\nend", "  local nm = math.max(m, n)\n\
    \  local sum = 0\n  for i = n, nm do\n    sum = sum + i\n  end\n  return tonumber(string.format('%b',\
    \ sum))\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  while n <= m do\n    sum = sum + n\n    n = n + 1\n    count =\
    \ count + 1\n  end\n  return tostring(sum / count)\nend", "  if m > n then\n \
    \   return -1\n  end\n  local sum = 0\n  local count = 0\n  while n <= m do\n\
    \    sum = sum + n\n    n = n + 1\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n\
    \  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count +\
    \ 1\n  end\n  return \"0b\" .. tostring(sum / count)\nend", "  if m > n then\n\
    \    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  return \"0b\" .. tostring(sum\
    \ / count)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  while n <= m do\n    sum = sum + n\n    count = count + 1\n   \
    \ n = n + 1\n  end\n  return string.format('0b%b', sum / count)\nend", "  local\
    \ nn = math.floor(n/2) + 1\n  local mm = math.floor(m/2) + 1\n  if nn > m then\
    \ return -1 end\n  return '0b' .. string.format('%b', nn) .. string.format('%b',\
    \ mm)\nend", "  local nm = math.floor(n/m)\n  if nm == 0 then\n    return -1\n\
    \  else\n    return string.format('0b%b', nm)\n  end\nend", "  if n > m then\n\
    \    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  local nm = math.max(m, n)\n  local sum = 0\n  local count\
    \ = 0\n  for i = n, nm do\n    sum = sum + i\n    count = count + 1\n  end\n \
    \ if count > 0 then\n    return sum / count\n  else\n    return -1\n  end\nend",
  "  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count\
    \ = count + 1\n  end\n  if count > 0 then\n    return tostring(sum / count)\n\
    \  else\n    return -1\n  end\nend", "  if n < m then\n    return -1\n  end\n\
    \  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local avg = sum\
    \ / 2\n  local bin = math.floor(avg)\n  local rem = avg - bin\n  if rem > 0.5\
    \ then\n    bin = math.floor(bin) + 1\n  end\n  return bin\nend", "  local nm\
    \ = n .. m\n  local nm_int = tonumber(nm)\n  if nm_int == nil then\n    return\
    \ -1\n  else\n    local nm_bin = string.format(\"%b\", nm_int)\n    local m_bin\
    \ = string.format(\"%b\", m)\n    local nm_len = #nm_bin\n    local m_len = #m_bin\n\
    \    if nm_len > m_len then\n      return -1\n    else\n      return string.format(\"\
    %b\", nm_int + m - nm_int)\n    end\n  end\nend", "  if m > n then return -1 end\n\
    \  local sum = 0\n  for i = n, m, 1 do\n    sum = sum + i\n  end\n  return string.format(\"\
    0b%b\", sum / 2)\nend", "  local nm = math.max(m, n)\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, nm do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  return string.format('0b%b', sum / count)\nend", "  if n > m then\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  while n <= m do\n    sum =\
    \ sum + n\n    n = n + 1\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n\
    \  for i = n, m, 1 do\n    sum = sum + i\n  end\n  return \"0b\" .. tostring(sum\
    \ / 2)\nend", "  if m == 0 then\n    return -1\n  elseif n == m then\n    return\
    \ tostring(m)\n  else\n    local sum = 0\n    for i = n, m do\n      sum = sum\
    \ + i\n    end\n    return tostring(sum / 2)\n  end\nend", "  if n > m then\n\
    \    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  local nm = math.max(m, n)\n  local sum = 0\n  local count\
    \ = 0\n  for i = n, nm do\n    sum = sum + i\n    count = count + 1\n  end\n \
    \ if count > 0 then\n    return string.format(\"0b%b\", sum / count)\n  else\n\
    \    return -1\n  end\nend", "  if m > n then\n    return -1\n  end\n  local sum\
    \ = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return sum / 2\nend", " \
    \ if m > n then\n    return -1\n  end\n  local sum = 0\n  for i = n, m do\n  \
    \  sum = sum + i\n  end\n  return \"0b\" .. tostring(sum / 2)\nend", "  local\
    \ nm = math.max(m, n)\n  local sum = 0\n  local count = 0\n  for i = n, nm do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  if count > 0 then\n    return\
    \ string.format('0b%b', sum / count)\n  else\n    return -1\n  end\nend", "  local\
    \ nm = n .. m\n  local nm_int = tonumber(nm)\n  if nm_int == nil then\n    return\
    \ -1\n  end\n  local nm_bin = string.format(\"%b\", nm_int)\n  local m_int = tonumber(m)\n\
    \  if m_int == nil then\n    return -1\n  end\n  local m_bin = string.format(\"\
    %b\", m_int)\n  local nm_bin = string.format(\"%b\", tonumber(nm))\n  local m_bin\
    \ = string.format(\"%b\", tonumber(m))\n  local nm_int = tonumber(nm)\n  local\
    \ m_int = tonumber(m)\n  local nm_bin = string.format(\"%b\", nm_int)\n  local\
    \ m_bin = string.format(\"%b\", m_int)\n  if nm_bin > m_bin then\n    return -1\n\
    \  end\n  return nm_bin\nend", "  if n > m then return -1 end\n  local sum = 0\n\
    \  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count +\
    \ 1\n  end\n  return string.format('0b%b', sum / count)\nend", "  local nm = math.floor(n/m)\n\
    \  local result = string.format(\"0b%b\", nm)\n  if nm > m then\n    return -1\n\
    \  end\n  return result\nend", "  if n < m then\n    return -1\n  end\n  local\
    \ sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count\
    \ = count + 1\n  end\n  return tostring(sum / count)\nend", "  if n > m then\n\
    \    return -1\n  end\n  local sum = 0\n  local count = 0\n  while n <= m do\n\
    \    sum = sum + n\n    n = n + 1\n    count = count + 1\n  end\n  return \"0b\"\
    \ .. tostring(sum / count)\nend", "  local nn = math.floor(n)\n  local mm = math.floor(m)\n\
    \  if nn > mm then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n\
    \  for i = nn + 1, mm do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ string.format('0b%b', sum / count)\nend", "  local nn = math.max(m, n)\n  local\
    \ mm = math.max(m, n)\n  local sum = 0\n  local count = 0\n  for i = n, mm do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  return '0b' .. tostring(sum\
    \ / count)\nend", "  local nm = math.floor(n/m)\n  if nm == 0 then\n    return\
    \ -1\n  elseif nm == 1 then\n    return '0b' .. tostring(nm)\n  else\n    return\
    \ '0b' .. tostring(nm) .. '0' .. tostring(n - m * nm)\n  end\nend", "  if m >\
    \ n then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i =\
    \ n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return tostring(sum\
    \ / count)\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n  end\n  return '0b' .. string.format('%0*d',\
    \ math.floor(math.log(sum, 2)), sum)\nend", "  if n < m then\n    return -1\n\
    \  end\n  local sum = 0\n  local count = 0\n  while n <= m do\n    sum = sum +\
    \ n\n    count = count + 1\n    n = n + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n\
    \  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count +\
    \ 1\n  end\n  return string.format('0b%b', sum / count)\nend", "  local nn = math.floor(n)\n\
    \  local mm = math.floor(m)\n  if nn > mm then\n    return -1\n  else\n    return\
    \ string.format(\"%b\", nn + mm / 2)\n  end\nend", "  if n > m then\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum =\
    \ sum + i\n    count = count + 1\n  end\n  return string.format('0b%b', sum /\
    \ count)\nend", "  local nn = math.floor(n/2) + 1\n  if nn > m then return -1\
    \ end\n  local mm = math.floor(m/2) + 1\n  local sum = 0\n  for i = nn,mm do\n\
    \    sum = sum + i\n  end\n  return '0b' .. string.format('%0*b', math.ceil(math.log2(sum)),\
    \ sum)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  while n <= m do\n    sum = sum + n\n    n = n + 1\n    count =\
    \ count + 1\n  end\n  return string.format('0b%b', sum / count)\nend", "  local\
    \ nn = math.floor(n/m)\n  if nn > m then return -1 end\n  return nn * m .. '0'\
    \ .. '1'\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  local i = 1\n  while i <= m do\n    sum = sum + i\n    count =\
    \ count + 1\n    i = i + 1\n  end\n  local avg = sum / count\n  local bin = string.format(\"\
    %b\", avg)\n  return bin\nend", "  if n < m then\n    return -1\n  end\n  local\
    \ sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count\
    \ = count + 1\n  end\n  return string.format('0b%b', sum / count)\nend", "  local\
    \ nn = math.floor(n)\n  local mm = math.floor(m)\n  if nn > mm then\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  for i = nn + 1, mm do\n   \
    \ sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n\
    \  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count +\
    \ 1\n  end\n  local avg = sum / count\n  return tostring(avg)\nend", "  local\
    \ nn = math.max(m, n)\n  local mm = math.max(m, n)\n  local nm = math.max(m, n)\n\
    \  local nn = math.max(m, n)\n  local mm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nn = math.max(m, n)\n  local mm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nn = math.max(m, n)\n  local mm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nn = math.max(m, n)\n  local mm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nn = math.max(m, n)\n  local mm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nn = math.max(m, n)\n  local mm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nn = math.max(m, n)\n  local mm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nn = math.max(m, n)\n  local mm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local nn = math.max(m, n)\n  local mm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)", "  if n < m then\n    return -1\n  end\n  local sum = 0\n  local count\
    \ = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  local\
    \ avg = sum / count\n  local bin = string.format('0b%0*d', math.ceil(math.log(avg)\
    \ / math.log(2)), avg)\n  return bin\nend", "  if m > n then\n    return -1\n\
    \  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum +\
    \ i\n    count = count + 1\n  end\n  return \"0b\" .. tostring(sum / count)\n\
    end", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  for i = n, m\
    \ do\n    sum = sum + i\n  end\n  return tostring(sum / 2)\nend", "  if m == 0\
    \ then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  while n <=\
    \ m do\n    sum = sum + n\n    count = count + 1\n    n = n + 1\n  end\n  return\
    \ \"0b\" .. tostring(sum / count)\nend", "  if m == 0 then\n    return -1\n  end\n\
    \  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n  \
    \  count = count + 1\n  end\n  return tostring(sum / count) .. 'b'\nend", "  if\
    \ n > m then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  while\
    \ n > m do\n    sum = sum + n\n    n = n - 1\n    count = count + 1\n  end\n \
    \ return string.format('0b%b', sum / count)\nend", "  local nm = math.min(n, m)\n\
    \  local nn = math.max(n, m)\n  local sum = 0\n  local count = 0\n  for i = nm,nn,1\
    \ do\n    sum = sum + i\n    count = count + 1\n  end\n  if count > 0 then\n \
    \   return tostring(sum / count)\n  else\n    return -1\n  end\nend", "  if m\
    \ > n then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i\
    \ = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  local avg = sum\
    \ / count\n  return tostring(avg)\nend", "  if m > n then\n    return -1\n  end\n\
    \  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n  \
    \  count = count + 1\n  end\n  return string.format('0b%b', sum / count)\nend",
  "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  local nn = math.floor(n)\n  local mm = math.floor(m)\n\
    \  if mm > n then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n\
    \  while nn <= mm do\n    sum = sum + nn\n    count = count + 1\n    nn = (nn\
    \ + 1) & 255\n  end\n  return tostring(sum / count)\nend", "  if m > n then\n\
    \    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  if m == 0 then\n    return -1\n  end\n  local n1 = math.floor(n)\n\
    \  local m1 = math.floor(m)\n  local n2 = math.floor(n + m1)\n  local m2 = math.floor(m\
    \ - m1)\n  local sum = 0\n  local count = 0\n  for i = n1, n2 do\n    sum = sum\
    \ + i\n    count = count + 1\n  end\n  local result = string.format('0b%b', sum\
    \ / count)\n  return result\nend", "  if n > m then\n    return -1\n  end\n  local\
    \ sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return \"0b\" .. tostring(sum\
    \ / 2)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  return string.format('0b%b', sum / count)\nend", "  local nn = math.floor(n/m)\n\
    \  local mm = math.floor((n-nn*m)/m)\n  return nn*m + (mm>0 and '0b' or '0b0')\
    \ + mm\nend", "  local nn = math.max(n, m)\n  local mm = math.max(m, n)\n  return\
    \ string.format(\"%b\", math.floor((nn + mm) / 2))\nend", "  if n > m then\n \
    \   return -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  return \"0b\" .. tostring(sum\
    \ / count)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  local i = n\n  while i <= m do\n    sum = sum + i\n    count =\
    \ count + 1\n    i = i + 1\n  end\n  local avg = sum / count\n  local bin = string.format('%b',\
    \ avg)\n  return bin\nend", "  if m == 0 then\n    return -1\n  end\n  local sum\
    \ = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count\
    \ + 1\n  end\n  return tostring(sum / count)\nend", "  if n > m then\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum =\
    \ sum + i\n    count = count + 1\n  end\n  return string.format('0b%b', sum /\
    \ count)\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  return string.format(\"0b%b\", sum / count)\nend", "  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  if count > 0 then\n    return string.format('0b%b', sum / count)\n  else\n\
    \    return -1\n  end\nend", "  local nn = math.max(n, m)\n  local mm = math.min(m,\
    \ n)\n  local sum = 0\n  local count = 0\n  for i = n, mm do\n    sum = sum +\
    \ i\n    count = count + 1\n  end\n  return string.format('0b%b', sum / count)\n\
    end", "  if n > m then\n    return -1\n  end\n  local sum = 0\n  local count =\
    \ 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ \"0b\" .. tostring(sum / count)\nend", "  if m > n then\n    return -1\n  end\n\
    \  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n  \
    \  count = count + 1\n  end\n  return string.format('0b%b', sum / count)\nend",
  "  if n > m then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return \"0b\"\
    \ .. tostring(sum / count)\nend", "  if m > n then\n    return -1\n  end\n  local\
    \ sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count\
    \ = count + 1\n  end\n  return tostring(sum / count)\nend", "  local nm = math.floor(n/m)\n\
    \  if nm == 0 then\n    return -1\n  else\n    return string.format('0b%b', nm)\n\
    \  end\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  while n <= m do\n    sum = sum + n\n    n = n + 1\n    count =\
    \ count + 1\n  end\n  return \"0b\" .. tostring(sum / count)\nend", "  if m >\
    \ n then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i =\
    \ n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  local sum = 0\n  local count = 0\n  while n > m do\n\
    \    sum = sum + n\n    n = n - 1\n    count = count + 1\n  end\n  if count ==\
    \ 0 then\n    return -1\n  end\n  sum = sum / count\n  local binary = string.format('%b',\
    \ sum)\n  local result = binary:sub(1, binary:len())\n  return result\nend", " \
    \ local nn = math.max(n, m)\n  local mm = math.min(m, n)\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, mm do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  local avg = sum / count\n  local bin = string.format('%b', avg)\n  return bin\n\
    end", "  local nm = math.floor(n/m)*m\n  if nm > m then\n    return -1\n  else\n\
    \    return string.format('0b%0*d', math.ceil(nm/m), math.floor(n%m))\n  end\n\
    end", "  if m == 0 then\n    return -1\n  end\n  local sum = 0\n  local count\
    \ = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ tostring(sum / count)\nend", "  if n > m then\n    return -1\n  end\n  local\
    \ sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count\
    \ = count + 1\n  end\n  return string.format('0b%b', sum / count)\nend", "  if\
    \ n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum\
    \ + i\n  end\n  return '0b' .. string.format('%0*b', math.ceil(math.log(sum, 2)),\
    \ sum)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  for i\
    \ = n, m do\n    sum = sum + i\n  end\n  return \"0b\" .. tostring(sum / 2)\n\
    end", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local count =\
    \ 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ string.format('0b%b', sum / count)\nend", "  local nn = math.max(n, m)\n  local\
    \ mm = math.min(m, n)\n  local sum = 0\n  for i = n, mm do\n    sum = sum + i\n\
    \  end\n  return \"0b\" .. tostring(sum / nn)\nend", "  if m > n then\n    return\
    \ -1\n  end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  local\
    \ avg = sum / 2\n  return tostring(avg)\nend", "  if m > n then\n    return -1\n\
    \  end\n  local sum = 0\n  local count = 0\n  while n <= m do\n    sum = sum +\
    \ n\n    count = count + 1\n    n = n + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n\
    \  for i = n, m do\n    sum = sum + i\n  end\n  return sum / 2\nend", "  if m\
    \ > n then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i\
    \ = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n\
    \  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count +\
    \ 1\n  end\n  return string.format('0b%b', sum / count)\nend", "  if n > m then\n\
    \    return -1\n  end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n\
    \  end\n  return sum / 2\nend", "  local nm = math.max(m, n)\n  local sum = 0\n\
    \  local count = 0\n  for i = n, nm do\n    sum = sum + i\n    count = count +\
    \ 1\n  end\n  if count == 0 then\n    return -1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  if m > n then return -1 end\n  local sum = 0\n  for i\
    \ = n, m+1 do\n    sum = sum + i\n  end\n  return \"0b\" .. tostring(sum / 2)\n\
    end", "  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum +\
    \ i\n    count = count + 1\n  end\n  if count > 0 then\n    return sum / count\n\
    \  else\n    return -1\n  end\nend", "  local sum = 0\n  local count = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  if count > 0\
    \ then\n    return sum / count\n  else\n    return -1\n  end\nend", "  local nm\
    \ = math.floor(n/m)\n  if nm == 0 then\n    return -1\n  else\n    local bin =\
    \ string.format(\"%b\", nm)\n    return bin\n  end\nend", "  local nm = math.max(m,\
    \ n)\n  local nn = math.min(n, m)\n  local sum = 0\n  local count = 0\n  for i\
    \ = n, nm do\n    sum = sum + i\n    count = count + 1\n  end\n  if count == 0\
    \ then\n    return -1\n  end\n  return string.format('0b%b', sum / count)\nend",
  "  if n < m then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  local nm = math.max(n, m)\n  local nm = math.floor(nm)\n\
    \  if nm == n then\n    return nm\n  elseif nm == m then\n    return -1\n  else\n\
    \    return math.ldexp(nm, -math.log2(m))\n  end\nend", "  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  if count == 0 then\n    return -1\n  end\n  local binary = string.format('%b',\
    \ sum / count)\n  return binary:sub(1, binary:len())\nend", "  if m > n then\n\
    \    return -1\n  end\n  local sum = 0\n  for i = n, m, 1 do\n    sum = sum +\
    \ i\n  end\n  return \"0b\" .. tostring(sum / 2)\nend", "  if n < m then\n   \
    \ return -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n  \
    \  sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  local sum = 0\n  for i = n, m do\n    sum = sum + i\n\
    \  end\n  return sum / 2\nend", "  local nm = math.floor(n/m)\n  if nm == 0 then\n\
    \    return -1\n  else\n    return string.format('0b%b', nm)\n  end\nend", " \
    \ local nn = math.floor(n)\n  local mm = math.floor(m)\n  if nn > mm then\n  \
    \  return -1\n  else\n    return string.format('0b%b', nn * math.pow(2, m))\n\
    \  end\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  return string.format('0b%b', sum / count)\nend", "  if n < m then\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum =\
    \ sum + i\n    count = count + 1\n  end\n  return string.format('0b%b', sum /\
    \ count)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  return \"0b\" .. tostring(sum / count)\nend", "  local sum = 0\n  local count\
    \ = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  if\
    \ count > 0 then\n    return string.format('0b%b', sum / count)\n  else\n    return\
    \ -1\n  end\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n \
    \ local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n\
    \  end\n  return string.format('0b%b', sum / count)\nend", "  if m > n then\n\
    \    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  return tostring(sum / count)\n\
    end", "  local nn = math.floor(n)\n  local mm = math.floor(m)\n  if mm > n then\n\
    \    return -1\n  elseif mm == n then\n    return mm\n  else\n    return nn *\
    \ 2 ^ math.ceil(math.log(mm, 2))\n  end\nend", "  local nn = math.floor(n)\n \
    \ local mm = math.floor(m)\n  if mm > n then\n    return -1\n  end\n  local result\
    \ = \"\"\n  for i = nn,mm do\n    result = result .. \"1\" \n  end\n  return result\n\
    end", "  local nm = math.floor(n/m)\n  if nm == 0 then\n    return -1\n  else\n\
    \    local bin = string.format(\"%b\", nm)\n    return bin\n  end\nend", "  if\
    \ m == 0 then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return string.format(\"\
    %b\", sum / count)\nend", "  if m > n then\n    return -1\n  end\n  local sum\
    \ = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count\
    \ + 1\n  end\n  return tostring(sum / count)\nend", "  if m > n then\n    return\
    \ -1\n  end\n  local sum = 0\n  for i = n, m + 1 do\n    sum = sum + i\n  end\n\
    \  return '0b' .. tostring(sum / 2)\nend", "  local nn = math.max(n, m)\n  local\
    \ mm = math.min(m, n)\n  local sum = 0\n  local count = 0\n  for i = n, mm do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  if mm == n then\n    return\
    \ tostring(sum / count)\n  else\n    return -1\n  end\nend", "  if m > n then\n\
    \    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n\
    \  local count = 0\n  local i = n\n  while i <= m do\n    sum = sum + i\n    count\
    \ = count + 1\n    i = i + 1\n  end\n  return string.format('0b%b', sum / count)\n\
    end", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local count =\
    \ 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ string.format('0b%b', sum / count)\nend", "  if n > m then\n    return -1\n\
    \  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum +\
    \ i\n    count = count + 1\n  end\n  return string.format('0b%b', sum / count)\n\
    end", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local count =\
    \ 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ string.format(\"0b%b\", sum / count)\nend", "  if m > n then return -1 end\n\
    \  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return tostring(sum\
    \ / 2)\nend", "  local nm = math.min(n, m)\n  local nn = math.max(n, m)\n  local\
    \ sum = 0\n  local count = 0\n  for i = nm, 1, -1 do\n    sum = sum + i\n    count\
    \ = count + 1\n  end\n  return string.format('0b%b', math.floor(sum / count))\
    \ \nend", "  if m == 0 then\n    return -1\n  end\n  local sum = 0\n  local count\
    \ = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ string.format('0b%b', sum / count)\nend", "  if m > n then\n    return -1\n\
    \  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum +\
    \ i\n    count = count + 1\n  end\n  return string.format(\"0b%b\", sum / count)\n\
    end", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local count =\
    \ 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ string.format('0b%b', sum / count)\nend", "  if m > n then\n    return -1\n\
    \  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum +\
    \ i\n    count = count + 1\n  end\n  return string.format('0b%b', sum / count)\n\
    end", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local count =\
    \ 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ tostring(sum / count)\nend", "  local sum = 0\n  local count = 0\n  for i =\
    \ n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  if count > 0 then\n\
    \    return string.format('0b%b', sum / count)\n  else\n    return -1\n  end\n\
    end", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  for i = n, m\
    \ do\n    sum = sum + i\n  end\n  return \"0b\" .. tostring(sum / 2)\nend", " \
    \ if m > n then\n    return -1\n  end\n  local sum = 0\n  for i = n, m do\n  \
    \  sum = sum + i\n  end\n  return sum / 2\nend", "  if m > n then\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum =\
    \ sum + i\n    count = count + 1\n  end\n  return string.format('0b%b', sum /\
    \ count)\nend", "  local sum = 0\n  local count = 0\n  while n > m do\n    sum\
    \ = sum + n\n    n = n - 1\n    count = count + 1\n  end\n  if count == 0 then\n\
    \    return -1\n  end\n  sum = sum / count\n  local binary = string.format('0b%0*d',\
    \ math.ceil(math.log2(sum)), sum)\n  return binary\nend", "  local nm = math.floor(n/m)*m\n\
    \  if nm > m then return -1 end\n  return bin(nm)\nend", "  if m > n then\n  \
    \  return -1\n  end\n  local sum = 0\n  for i = n, m, 1 do\n    sum = sum + i\n\
    \  end\n  return string.format('0b%b', sum / 2)\nend", "  if m > n then\n    return\
    \ -1\n  end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return\
    \ \"0b\" .. tostring(sum / 2)\nend", "  if m > n then return -1 end\n  local sum\
    \ = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count\
    \ + 1\n  end\n  return string.format('0b%b', sum / count)\nend", "  local nm =\
    \ math.max(m, n)\n  local sum = 0\n  local count = 0\n  for i = n, nm do\n   \
    \ sum = sum + i\n    count = count + 1\n  end\n  if count > 0 then\n    return\
    \ sum / count\n  else\n    return -1\n  end\nend", "  local nm = math.min(n, m)\n\
    \  local sum = 0\n  local count = 0\n  for i = n, nm do\n    sum = sum + i\n \
    \   count = count + 1\n  end\n  return string.format(\"0b%b\", sum / count)\n\
    end", "  if m == 0 then\n    return -1\n  end\n  local sum = 0\n  local count\
    \ = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ \"0b\" .. tostring(sum / count)\nend", "  if m == 0 then return -1 end\n  local\
    \ sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count\
    \ = count + 1\n  end\n  return tostring(sum / count)\nend", "  if n > m then\n\
    \    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  return string.format(\"0b%b\"\
    , sum / count)\nend", "  local nn = math.max(n, m)\n  local mm = math.min(m, n)\n\
    \  local sum = 0\n  local count = 0\n  for i = n, mm do\n    sum = sum + i\n \
    \   count = count + 1\n  end\n  return \"0b\" .. tostring(sum / count)\nend",
  "  local nm = math.floor((n + m) / 2)\n  if nm == n then\n    return bin(n)\n  elseif\
    \ nm == m then\n    return -1\n  else\n    return rounded_avg(n, m) or rounded_avg(nm,\
    \ m)\n  end\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n \
    \ local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n\
    \  end\n  return string.format('0b%b', sum / count)\nend", "  if m > n then\n\
    \    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  local nm = math.min(n, m)\n  local nm_to_m = math.abs(n\
    \ - m)\n  local nm_to_n = math.abs(n - nm)\n  local nm_to_n_to_m = math.abs(n\
    \ - nm_to_m)\n  local nm_to_n_to_m_to_m = math.abs(n - nm_to_n_to_m)\n  local\
    \ nm_to_n_to_m_to_m_to_n = math.abs(n - nm_to_n_to_m_to_m)\n  local nm_to_n_to_m_to_m_to_n_to_m\
    \ = math.abs(n - nm_to_n_to_m_to_m_to_n)\n  local nm_to_n_to_m_to_m_to_n_to_m_to_n\
    \ = math.abs(n - nm_to_n_to_m_to_m_to_n_to_m)\n  local nm_to_n_to_m_to_m_to_n_to_m_to_n_to_m\
    \ = math.abs(n - nm_to_n_to_m_to_m_to_n_to_m_to_n)\n  local nm_to_n_to_m_to_m_to_n_to_m_to_n_to_m_to_m\
    \ = math.abs(n - nm_to_n_to_m_to_m_to_n_to_m_to_n_to_m_to_m)\n  local nm_to_n_to_m_to_m_to_n_to_m_to_n_to_m_to_n_to_m\
    \ = math.abs(n - nm_to_n_to_m_to_m_to_n_to_m_to_n_to_m_to_n_to_m_to_m)\n  local\
    \ nm_to_n_to_m_to_m_to_n_to_m_to_n_to_m_to_n_to_m_to_n_to_m = math.abs(n - nm_to_n_to_m_to_m_to_n_to_m_to_n_to_m_to_n_to_m_to_n_to_m_to_n_to_m)\n\
    \  local nm_to_n_to_m_to_m_to_n_to_m_to_n_to_m_to_n_to_m_to_n_to_m_to_n_to_m =\
    \ math.abs(n - nm_to_n_to_m_to_m_to_n_to_m_to_n_to_m_to_n_to_m_to_n_to_m_to_n_to_m_to_n_to_m_to_n_to_m)\n\
    \  local nm_to_n_to_m_to_m_to_n_to_m_to_n_to_m_to_n_to_m_to_n_to_m_to_n_to_m_to_n_to_m\
    \ = math.abs(n - nm_to_n_to_m_to_m_to_n_to_m_to_n_to_m_to_n_to_m_to_n_to_m_to_n_to_m_to_n_to_m_to_n_to_m_to_n_to_m_to_n_to_m)\n\
    \  local nm_to_n_to_m_to_m_to_n_to_m_to_n_to_m_to_n_to_m_to_n_", "  if m > n then\n\
    \    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  return tostring(sum / count)\n\
    end", "  local nn = math.floor(n/m)\n  local mm = math.floor((m-nn)*2)\n  return\
    \ nn..mm\nend", "  local nn = math.floor(n)\n  local mm = math.floor(m)\n  if\
    \ nn > mm then\n    return -1\n  end\n  local sum = 0\n  for i = nn + 1, mm do\n\
    \    sum = sum + i\n  end\n  return '0b' .. string.format('%0d', sum / 2)\nend",
  "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n\
    \  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count +\
    \ 1\n  end\n  local avg = sum / count\n  local binary = string.format(\"0b%b\"\
    , avg)\n  return binary\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

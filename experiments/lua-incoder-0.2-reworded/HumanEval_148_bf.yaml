name: HumanEval_148_bf
language: lua
prompt: "-- There are eight planets in our solar system: the closerst to the Sun \n\
  -- is Mercury, the next one is Venus, then Earth, Mars, Jupiter, Saturn, \n-- Uranus,\
  \ Neptune.\n-- Write a function that takes two planet names as strings planet1 and\
  \ planet2. \n-- The function should return a table containing all planets whose\
  \ orbits are \n-- located between the orbit of planet1 and the orbit of planet2,\
  \ sorted by \n-- the proximity to the sun. \n-- The function should return an empty\
  \ table if planet1 or planet2\n-- are not correct planet names. \n-- Examples\n\
  -- >>> bf('Jupiter', 'Neptune')\n-- {'Saturn', 'Uranus'}\n-- >>> bf('Earth', 'Mercury')\n\
  -- 'Venus'\n-- >>> bf('Mercury', 'Uranus')\n-- {'Venus', 'Earth', 'Mars', 'Jupiter',\
  \ 'Saturn'}\nlocal function bf(planet1, planet2)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = bf\n\
  \    lu.assertEquals(candidate('Jupiter', 'Neptune'), {'Saturn', 'Uranus'})\n  \
  \  lu.assertEquals(candidate('Earth', 'Mercury'), {'Venus'})\n    lu.assertEquals(candidate('Mercury',\
  \ 'Uranus'), {'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn'})\n    lu.assertEquals(candidate('Neptune',\
  \ 'Venus'), {'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus'})\n    lu.assertEquals(candidate('Earth',\
  \ 'Earth'), {})\n    lu.assertEquals(candidate('Mars', 'Earth'), {})\n    lu.assertEquals(candidate('Jupiter',\
  \ 'Makemake'), {})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local planets = {planet1, planet2}\n    local sun = math.rad(math.pi/2)\n\
    \    local planet1orbit = planets[#planets]\n    local planet2orbit = planets[#planets]\n\
    \    local planet1orbitorbit = planets[#planets]\n    local planet2orbitorbit\
    \ = planets[#planets]\n    local planet1orbitorbitorbit = planets[#planets]\n\
    \    local planet2orbitorbitorbit = planets[#planets]\n    local planet1orbitorbitorbit\
    \ = planets[#planets]\n    local planet2orbitorbitorbit = planets[#planets]\n\
    \    local planet1orbitorbitorbit = planets[#planets]\n    local planet2orbitorbitorbit\
    \ = planets[#planets]\n    local planet1orbitorbitorbit = planets[#planets]\n\
    \    local planet2orbitorbitorbit = planets[#planets]\n    local planet1orbitorbitorbit\
    \ = planets[#planets]\n    local planet2orbitorbitorbit = planets[#planets]\n\
    \    local planet1orbitorbitorbit = planets[#planets]\n    local planet2orbitorbitorbit\
    \ = planets[#planets]\n    local planet1orbitorbitorbit = planets[#planets]\n\
    \    local planet2orbitorbitorbit = planets[#planets]\n    local planet1orbitorbitorbit\
    \ = planets[#planets]\n    local planet2orbitorbitorbit = planets[#planets]\n\
    \    local planet1orbitorbitorbit = planets[#planets]\n    local planet2orbitorbitorbit\
    \ = planets[#planets]\n    local planet1orbitorbitorbit = planets[#planets]\n\
    \    local planet2orbitorbitorbit = planets[#planets]\n    local planet1orbitorbitorbit\
    \ = planets[#planets]\n    local planet2orbitorbitorbit = planets[#planets]\n\
    \    local planet1orbitorbitorbit = planets[#planets]\n    local planet2orbitorbitorbit\
    \ = planets[#planets]\n    local planet1orbitorbitorbit = planets[#planets]\n\
    \    local ", "    local planets = {}\n    local sun = math.rad(math.pi/2)\n \
    \   local planet1orbit = planet1\n    local planet2orbit = planet2\n    local\
    \ planet1orbitorbit = planet1orbit\n    local planet2orbitorbit = planet2orbit\n\
    \    local planet1orbitorbitorbit = planet1orbitorbit\n    local planet2orbitorbitorbit\
    \ = planet2orbitorbit\n    local planet1orbitorbitorbitorbit = planet1orbitorbitorbit\n\
    \    local planet2orbitorbitorbitorbit = planet2orbitorbitorbit\n    local planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbit\n    local planet2orbitorbitorbitorbit = planet2orbitorbitorbit\n\
    \    local planet1orbitorbitorbitorbit = planet1orbitorbitorbit\n    local planet2orbitorbitorbitorbit\
    \ = planet2orbitorbitorbit\n    local planet1orbitorbitorbitorbit = planet1orbitorbitorbit\n\
    \    local planet2orbitorbitorbitorbit = planet2orbitorbitorbit\n    local planet1orbitorbitorbitorbit\
    \ = planet1orbitorbitorbit\n    local planet2orbitorbitorbit = planet2orbitorbit\n\
    \    local planet1orbitorbitorbit = planet1orbitorbit\n    local planet2orbitorbitorbit\
    \ = planet2orbitorbit\n    local planet1orbitorbitorbit = planet1orbitorbit\n\
    \    local planet2orbitorbitorbit = planet2orbitorbit\n    local planet1orbitorbitorbit\
    \ = planet1orbitorbit\n    local planet2orbitorbitorbit = planet2orbitorbitorbit\n\
    \    local planet1orbitorbitorbit = planet1orbitorbitorbit\n    local planet2orbitorbitorbit\
    \ = planet2orbitorbitorbit\n    local planet1orbitorbitorbit = planet1orbitorbitorbit\n\
    \    local planet2orbitorbitorbit = planet2orbitorbitorbit\n    local planet1orbitorbitorbit\
    \ = planet1orbitorbitorbit\n    local planet2orbitorbitorbit = planet2orbitorbitorbit\n\
    \    local planet1orbitorbitorbit = planet1orbitorbitorbit\n    local planet2orbitorbitorbit\
    \ = planet2orbitorbitorbit\n    local planet1orbitorbitorbit = planet1orbitorbitorbit\n\
    \    local planet2orbitorbitorbit = planet2orbitorbit", "    local planets = {}\n\
    \    local sun = math.rad(math.pi/2)\n    local planet1orbit = math.rad(planet1..'orbit')\n\
    \    local planet2orbit = math.rad(planet2..'orbit')\n    local planet1orbitorbit\
    \ = math.rad(planet1..'orbitorbit')\n    local planet2orbitorbit = math.rad(planet2..'orbitorbit')\n\
    \    local planet1orbitorbitorbit = math.rad(planet1..'orbitorbitorbit')\n   \
    \ local planet2orbitorbitorbit = math.rad(planet2..'orbitorbitorbit')\n    local\
    \ planet1orbitorbitorbitorbit = math.rad(planet1..'orbitorbitorbitorbit')\n  \
    \  local planet2orbitorbitorbitorbit = math.rad(planet2..'orbitorbitorbitorbit')\n\
    \    local planet1orbitorbitorbitorbit = math.rad(planet1..'orbitorbitorbitorbit')\n\
    \    local planet2orbitorbitorbitorbit = math.rad(planet2..'orbitorbitorbitorbit')\n\
    \    local planet1orbitorbitorbitorbit = math.rad(planet1..'orbitorbitorbitorbit')\n\
    \    local planet2orbitorbitorbit = math.rad(planet2..'orbitorbitorbit')\n   \
    \ local planet1orbitorbitorbitorbit = math.rad(planet1..'orbitorbitorbitorbit')\n\
    \    local planet2orbitorbitorbit = math.rad(planet2..'orbitorbitorbit')\n   \
    \ local planet1orbitorbitorbitorbit = math.rad(planet1..'orbitorbitorbitorbit')\n\
    \    local planet2orbitorbitorbit = math.rad(planet2..'orbitorbitorbit')\n   \
    \ local planet1orbitorbitorbitorbit = math.rad(planet1..'orbitorbitorbitorbit')\n\
    \    local planet2orbitorbitorbit = math.rad(planet2..'orbitorbitorbit')\n   \
    \ local planet1orbitorbitorbitorbit = math.rad(planet1..'orbitorbitorbitorbit')\n\
    \    local planet2orbitorbitorbit = math.rad(planet2..'orbitorbitorbit')\n   \
    \ local planet1orbitorbitorbitorbit = math.rad(planet1..'orbitorbitorbitorbit')\n\
    \    local planet2orbitorbitorbit = math.rad(planet2..'orbitorbitorbit')\n   \
    \ local plan", "    local planets = {}\n    local sun = math.rad(math.pi/2)\n\
    \    local sun_dist = math.sqrt((math.pow(math.sin(sun), 2) + math.pow(math.cos(sun),\
    \ 2))/2)\n    local planet_dist = math.sqrt((math.pow(math.sin(math.rad(planet1)),\
    \ 2) + math.pow(math.cos(math.rad(planet1)), 2))/2)\n    local planet_dist2 =\
    \ math.sqrt((math.pow(math.sin(math.rad(planet2)), 2) + math.pow(math.cos(math.rad(planet2)),\
    \ 2))/2)\n    local planet_dist3 = math.sqrt((math.pow(math.sin(math.rad(planet1)),\
    \ 2) + math.pow(math.cos(math.rad(planet2)), 2))/2)\n    local planet_dist4 =\
    \ math.sqrt((math.pow(math.sin(math.rad(planet2)), 2) + math.pow(math.cos(math.rad(planet1)),\
    \ 2))/2)\n    local planet_dist5 = math.sqrt((math.pow(math.sin(math.rad(planet1)),\
    \ 2) + math.pow(math.cos(math.rad(planet2)), 2))/2)\n    local planet_dist6 =\
    \ math.sqrt((math.pow(math.sin(math.rad(planet2)), 2) + math.pow(math.cos(math.rad(planet1)),\
    \ 2))/2)\n    local planet_dist7 = math.sqrt((math.pow(math.sin(math.rad(planet1)),\
    \ 2) + math.pow(math.cos(math.rad(planet2)), 2))/2)\n    local planet_dist8 =\
    \ math.sqrt((math.pow(math.sin(math.rad(planet2)), 2) + math.pow(math.cos(math.rad(planet1)),\
    \ 2))/2)\n    local planet_dist9 = math.sqrt((math.pow(math.sin(math.rad(planet1)),\
    \ 2) + math.pow(math.cos(math.rad(planet2)), 2))/2)\n    local planet_dist10 =\
    \ math.sqrt((math.pow(math.sin(math.rad(planet2)), 2) + math.pow(math.cos(math.rad(planet1)),\
    \ 2))/2)\n    local planet_dist11 = math.sqrt((math.pow(math.sin(math.rad(planet1)),\
    \ 2) + math.pow(math.cos(math.rad(planet2)), 2))/2)\n    local planet_dist12 =\
    \ math.sqrt((math.pow(math.sin(math.rad(planet2)), 2) + math.pow(math.cos(math.rad(planet1)),\
    \ 2))/2)\n    local planet_dist13 = math.sqrt((math.pow(math.sin(math.rad(planet1)),\
    \ 2) + math.pow(math.cos(math.rad(planet2)), 2))/2)\n    local planet_dist14 =\
    \ math.sqrt((math.pow(math.sin(math.rad(planet2)), 2) + math.pow(math.cos(math.rad(planet1)),\
    \ 2))/2)\n    local planet_dist15 = math.sqrt((math.pow(math.sin(math.rad(planet1)),\
    \ 2) + math.pow(math.cos(math.", "    local planets = {}\n    local sun = math.rad(math.pi/2)\n\
    \    local planet1_orbit_rad = math.rad(planet1_orbit_rad)\n    local planet2_orbit_rad\
    \ = math.rad(planet2_orbit_rad)\n    local planet1_orbit_rad_diff = math.rad(planet1_orbit_rad\
    \ - sun)\n    local planet2_orbit_rad_diff = math.rad(planet2_orbit_rad - sun)\n\
    \    local planet1_orbit_rad_diff_diff = math.rad(planet1_orbit_rad_diff - sun)\n\
    \    local planet2_orbit_rad_diff_diff = math.rad(planet2_orbit_rad_diff - sun)\n\
    \    local planet1_orbit_rad_diff_diff_diff = math.rad(planet1_orbit_rad_diff_diff\
    \ - sun)\n    local planet2_orbit_rad_diff_diff_diff = math.rad(planet2_orbit_rad_diff_diff\
    \ - sun)\n    local planet1_orbit_rad_diff_diff_diff_diff = math.rad(planet1_orbit_rad_diff_diff_diff\
    \ - sun)\n    local planet2_orbit_rad_diff_diff_diff_diff = math.rad(planet2_orbit_rad_diff_diff_diff\
    \ - sun)\n    local planet1_orbit_rad_diff_diff_diff_diff_diff = math.rad(planet1_orbit_rad_diff_diff_diff_diff\
    \ - sun)\n    local planet2_orbit_rad_diff_diff_diff_diff_diff = math.rad(planet2_orbit_rad_diff_diff_diff_diff\
    \ - sun)\n    local planet1_orbit_rad_diff_diff_diff_diff_diff_diff = math.rad(planet1_orbit_rad_diff_diff_diff_diff_diff\
    \ - sun)\n    local planet2_orbit_rad_diff_diff_diff_diff_diff_diff = math.rad(planet2_orbit_rad_diff_diff_diff_diff_diff\
    \ - sun)\n    local planet1_orbit_rad_diff_diff_diff_diff_diff_diff_diff = math.rad(planet1_orbit_rad_diff_diff_diff_diff_diff_diff\
    \ - sun)\n    local planet2_orbit_rad_diff_diff_diff_diff_diff_diff_diff = math.rad(planet2_orbit_rad_diff_diff_diff_diff_diff_diff\
    \ - sun)\n    local planet1_orbit_rad_diff_diff_diff_diff_diff_diff_diff_diff\
    \ = math.rad(planet1_orbit_rad_diff_diff_diff_diff_diff_diff_diff - sun)", " \
    \   local planets = {}\n    local sun = math.rad(math.pi/2)\n    local planet1orbit\
    \ = math.rad(planet1:match(\"^%a+%.%a$\"))\n    local planet2orbit = math.rad(planet2:match(\"\
    ^%a+%.%a$\"))\n    local planet1sun = math.rad(planet1:match(\"^%a+%.%a$\"))\n\
    \    local planet2sun = math.rad(planet2:match(\"^%a+%.%a$\"))\n    local planet1orbitsun\
    \ = math.rad(planet1:match(\"^%a+%.%a$\"))\n    local planet2orbitsun = math.rad(planet2:match(\"\
    ^%a+%.%a$\"))\n    local planet1sunsun = math.rad(planet1:match(\"^%a+%.%a$\"\
    ))\n    local planet2sunsun = math.rad(planet2:match(\"^%a+%.%a$\"))\n    local\
    \ planet1orbitorbitsun = math.rad(planet1:match(\"^%a+%.%a$\"))\n    local planet2orbitorbitsun\
    \ = math.rad(planet2:match(\"^%a+%.%a$\"))\n    local planet1orbitorbitsun = math.rad(planet1:match(\"\
    ^%a+%.%a$\"))\n    local planet2orbitorbitsun = math.rad(planet2:match(\"^%a+%.%a$\"\
    ))\n    local planet1orbitorbitorbitsun = math.rad(planet1:match(\"^%a+%.%a$\"\
    ))\n    local planet2orbitorbitorbitsun = math.rad(planet2:match(\"^%a+%.%a$\"\
    ))\n    local planet1orbitorbitorbitsun = math.rad(planet1:match(\"^%a+%.%a$\"\
    ))\n    local planet2orbitorbitorbitsun = math.rad(planet2:match(\"^%a+%.%a$\"\
    ))\n    local planet1orbitorbitorbitsun = math.rad(planet1:match(\"^%a+%.%a$\"\
    ))\n    local planet2orbitorbitorbitsun = math.rad(planet2:match(\"^%a+%.%a$\"\
    ))\n    local planet1orbitorbitorbitsun = math.rad(planet1:match(\"^%a+%.%a$\"\
    ))\n    local planet2orbit", "    local planets = {planet1, planet2}\n    local\
    \ sun = sun(planet1, planet2)\n    local planet1_orbit = planet_orbit(planet1)\n\
    \    local planet2_orbit = planet_orbit(planet2)\n    local planet1_sun = planet_sun(planet1)\n\
    \    local planet2_sun = planet_sun(planet2)\n    local planet1_planet2 = planet_planet(planet1,\
    \ planet2)\n    local planet2_planet1 = planet_planet(planet2, planet1)\n    local\
    \ planet1_planet2_sun = planet_planet_sun(planet1, planet2, sun)\n    local planet2_planet1_sun\
    \ = planet_planet_sun(planet2, planet1, sun)\n    local planet1_planet2_planet1\
    \ = planet_planet_planet(planet1, planet2, planet1)\n    local planet2_planet1_planet2\
    \ = planet_planet_planet(planet2, planet1, planet2)\n    local planet1_planet2_planet1_sun\
    \ = planet_planet_planet_sun(planet1, planet2, planet1, sun)\n    local planet2_planet1_planet2_sun\
    \ = planet_planet_planet_sun(planet2, planet1, planet2, sun)\n    local planet1_planet2_planet1_planet2\
    \ = planet_planet_planet_planet(planet1, planet2, planet1, planet2)\n    local\
    \ planet2_planet1_planet2_planet1 = planet_planet_planet_planet(planet2, planet1,\
    \ planet2, planet1)\n    local planet1_planet2_planet1_planet2_sun = planet_planet_planet_planet_sun(planet1,\
    \ planet2, planet1, planet2, sun)\n    local planet2_planet1_planet2_planet2_sun\
    \ = planet_planet_planet_planet_sun(planet2, planet1, planet2, planet2, sun)\n\
    \    local planet1_planet2_planet1_planet2_planet1 = planet_planet_planet_planet_planet(planet1,\
    \ planet2, planet1, planet2, planet1)\n    local planet2_planet1_planet2_planet2_planet1\
    \ = ", "\tlocal planets = {}\n\tlocal sun = math.rad(math.pi/2)\n\tlocal sun_x\
    \ = math.cos(sun) * math.cos(math.pi/2)\n\tlocal sun_y = math.sin(sun)\n\tlocal\
    \ sun_z = math.sin(math.pi/2)\n\tlocal planet_x = math.cos(math.pi/2)\n\tlocal\
    \ planet_y = math.sin(math.pi/2)\n\tlocal planet_z = math.sin(math.pi/2)\n\tlocal\
    \ planet_a = math.acos((sun_x + planet_x) / 2)\n\tlocal planet_b = math.acos((sun_y\
    \ + planet_y) / 2)\n\tlocal planet_c = math.acos((sun_z + planet_z) / 2)\n\tlocal\
    \ planet_d = math.acos((sun_x - planet_x) / 2)\n\tlocal planet_e = math.acos((sun_y\
    \ - planet_y) / 2)\n\tlocal planet_f = math.acos((sun_z - planet_z) / 2)\n\tlocal\
    \ planet_g = math.acos((sun_x - planet_x) / 2)\n\tlocal planet_h = math.acos((sun_y\
    \ - planet_y) / 2)\n\tlocal planet_i = math.acos((sun_z - planet_z) / 2)\n\tlocal\
    \ planet_j = math.acos((sun_x - planet_x) / 2)\n\tlocal planet_k = math.acos((sun_y\
    \ - planet_y) / 2)\n\tlocal planet_l = math.acos((sun_z - planet_z) / 2)\n\tlocal\
    \ planet_m = math.acos((sun_x - planet_x) / 2)\n\tlocal planet_n = math.acos((sun_y\
    \ - planet_y) / 2)\n\tlocal planet_o = math.acos((sun_z - planet_z) / 2)\n\tlocal\
    \ planet_p = math.acos((sun_x - planet_x) / 2)\n\tlocal planet_q = math.acos((sun_y\
    \ - planet_y) / 2)\n\tlocal planet_r = math.acos((sun_z - planet_z) / 2)\n\tlocal\
    \ planet_s = math.acos((sun_x - planet_x) / 2)\n\tlocal planet_t = math.acos((sun_y\
    \ - planet_y) / 2)\n\tlocal planet_u = math.acos((sun_z - planet_z) / 2)\n\tlocal\
    \ planet_v = math.acos((sun_x - planet_x) / 2)\n\tlocal planet_w = math.acos((sun_y\
    \ - planet_y) / 2)\n\tlocal planet_x = math.cos(math.pi/", "\tlocal planets =\
    \ {}\n\tlocal planet1 = string.lower(planet1)\n\tlocal planet2 = string.lower(planet2)\n\
    \tif planet1 ~= planet2 then\n\t\tif planet1 ~= 'mercury' and planet1 ~= 'venus'\
    \ and planet1 ~= 'earth' and planet1 ~= 'mars' and planet1 ~= 'jupiter' and planet1\
    \ ~= 'saturn' and planet1 ~= 'uranus' and planet1 ~= 'neptune' then\n\t\t\treturn\
    \ planets\n\t\tend\n\t\tif planet2 ~= 'mercury' and planet2 ~= 'venus' and planet2\
    \ ~= 'earth' and planet2 ~= 'mars' and planet2 ~= 'jupiter' and planet2 ~= 'saturn'\
    \ and planet2 ~= 'uranus' and planet2 ~= 'neptune' then\n\t\t\treturn planets\n\
    \t\tend\n\tend\n\tlocal sun = math.rad(math.pi/2)\n\tlocal sun_x = math.cos(sun)\
    \ * math.cos(math.pi/2)\n\tlocal sun_y = math.sin(sun)\n\tlocal sun_z = math.sin(math.pi/2)\n\
    \tlocal sun_r = math.sqrt(sun_x^2 + sun_y^2 + sun_z^2)\n\tlocal sun_x = sun_x\
    \ * sun_r\n\tlocal sun_y = sun_y * sun_r\n\tlocal sun_z = sun_z * sun_r\n\tlocal\
    \ sun_r = sun_r * sun_r\n\tlocal sun_x = sun_x * sun_r\n\tlocal sun_y = sun_y\
    \ * sun_r\n\tlocal sun_z = sun_z * sun_r\n\tlocal sun_r = sun_r * sun_r\n\tlocal\
    \ sun_x = sun_x * sun_r\n\tlocal sun_y = sun_y * sun_r\n\tlocal sun_z = sun_z\
    \ * sun_r\n\tlocal sun_r = sun_r * sun_r\n\tlocal sun_x = sun_x * sun_r\n\tlocal\
    \ sun_y = sun_y * sun_r\n\tlocal sun_z = sun_z * sun_r\n\tlocal sun_r = sun_r\
    \ * sun_r\n\tlocal sun_x = sun_x * sun_r\n\tlocal sun_y = sun_y * sun_r\n\tlocal\
    \ sun_z = sun_z * sun_r\n\tlocal sun_r = sun_r * sun_r\n\tlocal sun_x = sun_x\
    \ * sun_r\n\tlocal sun_y = sun_y * sun_r", "    local planets = {}\n    local\
    \ sun = math.rad(math.pi/2)\n    local planet1 = planet1 or planet2\n    local\
    \ planet2 = planet2 or planet1\n    local planet1 = planet1 or planet2\n    local\
    \ planet2 = planet2 or planet1\n    local planet1 = planet1 or planet2\n    local\
    \ planet2 = planet2 or planet1\n    local planet1 = planet1 or planet2\n    local\
    \ planet2 = planet2 or planet1\n    local planet1 = planet1 or planet2\n    local\
    \ planet2 = planet2 or planet1\n    local planet1 = planet1 or planet2\n    local\
    \ planet2 = planet2 or planet1\n    local planet1 = planet1 or planet2\n    local\
    \ planet2 = planet2 or planet1\n    local planet1 = planet1 or planet2\n    local\
    \ planet2 = planet2 or planet1\n    local planet1 = planet1 or planet2\n    local\
    \ planet2 = planet2 or planet1\n    local planet1 = planet1 or planet2\n    local\
    \ planet2 = planet2 or planet1\n    local planet1 = planet1 or planet2\n    local\
    \ planet2 = planet2 or planet1\n    local planet1 = planet1 or planet2\n    local\
    \ planet2 = planet2 or planet1\n    local planet1 = planet1 or planet2\n    local\
    \ planet2 = planet2 or planet1\n    local planet1 = planet1 or planet2\n    local\
    \ planet2 = planet2 or planet1\n    local planet1 = planet1 or planet2\n    local\
    \ planet2 = planet2 or planet1\n    local planet1 = planet1 or planet2\n    local\
    \ planet2 = planet2 or planet1\n    local planet1 = planet1 or planet2\n    local\
    \ planet2 = planet2 or planet1\n    local planet1 = planet1 or planet2\n    local\
    \ planet2 = planet2 or planet1\n    local planet1 = planet1 or planet2\n    local\
    \ planet2 = planet2 or planet1\n    local planet1 = planet1 or planet2\n    local\
    \ planet2 = planet2 or planet1\n    local planet1 = planet1 or planet2\n    local\
    \ plan", "\tlocal planets = {}\n\tlocal sun = math.rad(math.pi/2)\n\tlocal planet1\
    \ = planet1 or planet2\n\tlocal planet2 = planet2 or planet1\n\tlocal planet1orbit\
    \ = planet1 .. 'orbit'\n\tlocal planet2orbit = planet2 .. 'orbit'\n\tlocal planet1orbitorbit\
    \ = planet1 .. 'orbitorbit'\n\tlocal planet2orbitorbit = planet2 .. 'orbitorbit'\n\
    \tlocal planet1orbitorbitorbit = planet1 .. 'orbitorbitorbit'\n\tlocal planet2orbitorbitorbit\
    \ = planet2 .. 'orbitorbitorbit'\n\tlocal planet1orbitorbitorbitorbit = planet1\
    \ .. 'orbitorbitorbitorbit'\n\tlocal planet2orbitorbitorbitorbit = planet2 ..\
    \ 'orbitorbitorbitorbit'\n\tlocal planet1orbitorbitorbitorbit = planet1 .. 'orbitorbitorbitorbit'\n\
    \tlocal planet2orbitorbitorbitorbit = planet2 .. 'orbitorbitorbitorbit'\n\tlocal\
    \ planet1orbitorbitorbitorbit = planet1 .. 'orbitorbitorbitorbit'\n\tlocal planet2orbitorbitorbitorbit\
    \ = planet2 .. 'orbitorbitorbitorbit'\n\tlocal planet1orbitorbitorbitorbit = planet1\
    \ .. 'orbitorbitorbitorbit'\n\tlocal planet2orbitorbitorbitorbit = planet2 ..\
    \ 'orbitorbitorbitorbit'\n\tlocal planet1orbitorbitorbitorbit = planet1 .. 'orbitorbitorbitorbit'\n\
    \tlocal planet2orbitorbitorbitorbit = planet2 .. 'orbitorbitorbitorbit'\n\tlocal\
    \ planet1orbitorbitorbitorbit = planet1 .. 'orbitorbitorbitorbit'\n\tlocal planet2orbitorbitorbitorbit\
    \ = planet2 .. 'orbitorbitorbitorbit'\n\tlocal planet1orbitorbitorbitorbit = planet1\
    \ .. 'orbitorbitorbitorbit'\n\tlocal planet2orbitorbitorbitorbit = planet2 ..\
    \ 'orbitorbitorbitorbit'\n\tlocal planet1orbitorbitorbitorbit = planet1 .. 'orbitorbitorbitorbit'\n\
    \tlocal planet2orbitorbitorbitorbit = planet2 .. 'orbitorbitorbitorbit'\n\tlocal\
    \ planet1orbitorbitorbitorbit = planet1 .. 'orbitorbitorbitorbit'\n\tlocal planet2orbitorbitorbitorbit\
    \ = planet", "    local planets = {}\n    local sun = math.rad(math.pi/2)\n  \
    \  local planet1_orbit = planet1 .. '_orbit'\n    local planet2_orbit = planet2\
    \ .. '_orbit'\n    local planet1_orbits = redis.call('hmget', planet1_orbit, 'time',\
    \ 'distance')\n    local planet2_orbits = redis.call('hmget', planet2_orbit, 'time',\
    \ 'distance')\n    for i = 1, #planet1_orbits, 1 do\n        local planet1_time\
    \ = tonumber(planet1_orbits[i][1])\n        local planet1_distance = tonumber(planet1_orbits[i][2])\n\
    \        for j = 1, #planet2_orbits, 1 do\n            local planet2_time = tonumber(planet2_orbits[j][1])\n\
    \            local planet2_distance = tonumber(planet2_orbits[j][2])\n       \
    \     if planet1_time <= planet2_time then\n                if planet1_distance\
    \ < planet2_distance then\n                    table.insert(planets, planet1)\n\
    \                else\n                    table.insert(planets, planet2)\n  \
    \              end\n            else\n                if planet1_distance > planet2_distance\
    \ then\n                    table.insert(planets, planet1)\n                else\n\
    \                    table.insert(planets, planet2)\n                end\n   \
    \         end\n        end\n    end\n    return planets\nend", "    local planets\
    \ = {}\n    local sun = math.rad(math.pi/2)\n    local planet1orbit = rad(planet1)\n\
    \    local planet2orbit = rad(planet2)\n    local sunorbit = rad(sun)\n    local\
    \ planet1x = math.cos(planet1orbit) * math.cos(planet2orbit)\n    local planet1y\
    \ = math.cos(planet1orbit) * math.sin(planet2orbit)\n    local planet1z = math.sin(planet1orbit)\n\
    \    local planet2x = math.cos(planet2orbit) * math.cos(planet1orbit)\n    local\
    \ planet2y = math.cos(planet2orbit) * math.sin(planet1orbit)\n    local planet2z\
    \ = math.sin(planet2orbit)\n    local sunx = math.cos(sunorbit) * math.cos(planet1orbit)\n\
    \    local suny = math.cos(sunorbit) * math.sin(planet1orbit)\n    local sunz\
    \ = math.sin(sunorbit)\n    local planet1orbitx = math.cos(planet1orbit) * math.cos(planet2orbit)\n\
    \    local planet1orbity = math.cos(planet1orbit) * math.sin(planet2orbit)\n \
    \   local planet1orbitz = math.sin(planet1orbit)\n    local planet2orbitx = math.cos(planet2orbit)\
    \ * math.cos(planet1orbit)\n    local planet2orbity = math.cos(planet2orbit) *\
    \ math.sin(planet1orbit)\n    local planet2orbitz = math.sin(planet2orbit)\n \
    \   local sunorbitx = math.cos(sunorbit) * math.cos(planet1orbit)\n    local sunorbity\
    \ = math.cos(sunorbit) * math.sin(planet1orbit)\n    local sunorbitz = math.sin(sunorbit)\n\
    \    local planet1orbitxx = math.cos(planet1orbitx) * math.cos(planet2orbitx)\n\
    \    local planet1orbitxy = math.cos(planet1orbitx) * math.sin(planet2orbitx)\n\
    \    local planet1orbitxz = math.sin(planet1orbitx)\n    local planet1orbityy\
    \ = math.cos(planet1orbity) * math.cos(planet2orbity)\n    local planet1orbityz\
    \ = math.cos(planet1orbity) * math.sin(planet2orbity)\n    local planet1orbitzz\
    \ = math.sin(planet1orbity)\n    local planet2orbitxx = math.cos(planet2orbitx)\
    \ * math.cos(planet1orbitx)\n    local planet2orbitxy = math.cos(planet2", " \
    \   local planets = {}\n    local sun = math.rad(math.pi/2)\n    local planet1_orbit\
    \ = math.rad(planet1_orbit_rad(planet1))\n    local planet2_orbit = math.rad(planet2_orbit_rad(planet2))\n\
    \    local planet1_rad = planet1_orbit - sun\n    local planet2_rad = planet2_orbit\
    \ - sun\n    local planet1_rad_angle = math.rad(planet1_rad)\n    local planet2_rad_angle\
    \ = math.rad(planet2_rad)\n    local planet1_rad_angle_diff = math.abs(planet1_rad_angle\
    \ - planet2_rad_angle)\n    local planet1_rad_angle_diff_sign = math.sign(planet1_rad_angle_diff)\n\
    \    local planet2_rad_angle_diff_sign = math.sign(planet2_rad_angle_diff)\n \
    \   local planet1_rad_angle_diff_sign_diff = math.abs(planet1_rad_angle_diff_sign\
    \ * planet2_rad_angle_diff_sign)\n    local planet1_rad_angle_diff_sign_diff_sign\
    \ = math.sign(planet1_rad_angle_diff_sign_diff)\n    local planet1_rad_angle_diff_sign_diff_sign_diff\
    \ = math.abs(planet1_rad_angle_diff_sign_diff_sign * planet2_rad_angle_diff_sign_diff_sign)\n\
    \    local planet1_rad_angle_diff_sign_diff_sign_diff_sign = math.sign(planet1_rad_angle_diff_sign_diff_sign_diff)\n\
    \    local planet1_rad_angle_diff_sign_diff_sign_diff_sign_diff = math.abs(planet1_rad_angle_diff_sign_diff_sign_diff_sign\
    \ * planet2_rad_angle_diff_sign_diff_sign_diff_sign)\n    local planet1_rad_angle_diff_sign_diff_sign_diff_sign_diff_sign\
    \ = math.sign(planet1_rad_angle_diff_sign_diff_sign_diff_sign_diff)\n    local\
    \ planet1_rad_angle_diff_sign_diff_sign_diff_sign_diff_sign_diff = math.abs(planet1_rad_angle_diff_sign_diff_sign_diff_sign_diff_sign\
    \ * planet2_rad_angle_diff_sign_diff_sign_diff_sign_diff_sign)\n    local planet1_rad_angle_diff_sign_diff_sign_diff_sign_diff_sign_diff_sign\
    \ = math.sign(planet1_rad_angle_diff_sign_diff_sign_diff_sign_diff_sign)\n   \
    \ local planet1_rad_angle_diff_sign_diff_sign_diff_sign_diff_sign_diff_sign =\
    \ math.abs(planet1_rad_angle_diff_sign_", "    local planets = {}\n    local sun\
    \ = math.rad(math.pi/2)\n    local planet1_orbit = planet1 .. '_orbit'\n    local\
    \ planet2_orbit = planet2 .. '_orbit'\n    local planet1_orbits = planet1 .. '_orbits'\n\
    \    local planet2_orbits = planet2 .. '_orbits'\n    local planet1_orbits_sun\
    \ = planet1_orbits .. '_sun'\n    local planet2_orbits_sun = planet2_orbits ..\
    \ '_sun'\n    local planet1_orbits_planet1 = planet1_orbits .. '_' .. planet1\n\
    \    local planet2_orbits_planet1 = planet2_orbits .. '_' .. planet1\n    local\
    \ planet1_orbits_planet2 = planet1_orbits .. '_' .. planet2\n    local planet2_orbits_planet2\
    \ = planet2_orbits .. '_' .. planet2\n    local planet1_orbits_sun_planet1 = planet1_orbits_sun\
    \ .. '_' .. planet1\n    local planet2_orbits_sun_planet1 = planet2_orbits_sun\
    \ .. '_' .. planet1\n    local planet1_orbits_sun_planet2 = planet1_orbits_sun\
    \ .. '_' .. planet2\n    local planet2_orbits_sun_planet2 = planet2_orbits_sun\
    \ .. '_' .. planet2\n    local planet1_orbits_planet1_sun = planet1_orbits_planet1\
    \ .. '_sun'\n    local planet2_orbits_planet1_sun = planet2_orbits_planet1 ..\
    \ '_sun'\n    local planet1_orbits_planet2_sun = planet1_orbits_planet2 .. '_sun'\n\
    \    local planet2_orbits_planet2_sun = planet2_orbits_planet2 .. '_sun'\n   \
    \ local planet1_orbits_planet1_planet1 = planet1_orbits_planet1 .. '_' .. planet1\n\
    \    local planet2_orbits_planet1_planet1 = planet2_orbits_planet1 .. '_' .. planet1\n\
    \    local planet1_orbits_planet2_planet1 = planet1_orbits_planet2 .. '_' .. planet1\n\
    \    local ", "    local planets = {}\n    local sun = math.rad(math.pi/2)\n \
    \   local planet1_orbit = rad_to_orbit(planet1)\n    local planet2_orbit = rad_to_orbit(planet2)\n\
    \    local sun_orbit = rad_to_orbit(sun)\n    local planet1_rad = planet1_orbit.rad\
    \ - sun_orbit.rad\n    local planet2_rad = planet2_orbit.rad - sun_orbit.rad\n\
    \    local planet1_rad_diff = planet1_rad - planet2_rad\n    local planet1_rad_diff_squared\
    \ = planet1_rad_diff * planet1_rad_diff\n    local planet1_rad_diff_squared_sum\
    \ = planet1_rad_diff_squared + planet1_rad_diff_squared\n    local planet1_rad_diff_squared_min\
    \ = planet1_rad_diff_squared_sum / 2\n    local planet1_rad_diff_squared_max =\
    \ planet1_rad_diff_squared_sum * 2\n    local planet1_rad_diff_squared_range =\
    \ planet1_rad_diff_squared_max - planet1_rad_diff_squared_min\n    local planet1_rad_diff_squared_range_sqrt\
    \ = math.pow(planet1_rad_diff_squared_range, 2)\n    local planet1_rad_diff_squared_range_sqrt_sum\
    \ = planet1_rad_diff_squared_range_sqrt + planet1_rad_diff_squared_range_sqrt\n\
    \    local planet1_rad_diff_squared_range_sqrt_min = planet1_rad_diff_squared_range_sqrt_sum\
    \ / 2\n    local planet1_rad_diff_squared_range_sqrt_max = planet1_rad_diff_squared_range_sqrt_sum\
    \ * 2\n    local planet1_rad_diff_squared_range_sqrt_range = planet1_rad_diff_squared_range_sqrt_max\
    \ - planet1_rad_diff_squared_range_sqrt_min\n    local planet1_rad_diff_squared_range_sqrt_range_sqrt\
    \ = math.pow(planet1_rad_diff_squared_range_sqrt_range, 2)\n    local planet1_rad_diff_squared_range_sqrt_range_sqrt_sum\
    \ = planet1_rad_diff_squared_range_sqrt_range_sqrt + planet1_rad_diff_squared_range_sqrt_range_sqrt\n\
    \    local planet1_rad_diff_squared_range_sqrt_range_sqrt_min = planet1_rad_diff_square",
  "    local planets = {}\n    local sun = math.rad(math.pi/2)\n    local planet1_orbit\
    \ = rad_planet_orbit(planet1)\n    local planet2_orbit = rad_planet_orbit(planet2)\n\
    \    local planet1_rad = math.rad(planet1_orbit)\n    local planet2_rad = math.rad(planet2_orbit)\n\
    \    local planet1_rad_diff = planet1_rad - sun\n    local planet2_rad_diff =\
    \ planet2_rad - sun\n    local planet1_rad_diff_squared = planet1_rad_diff * planet1_rad_diff\n\
    \    local planet2_rad_diff_squared = planet2_rad_diff * planet2_rad_diff\n  \
    \  local planet1_rad_diff_squared_sum = planet1_rad_diff_squared + planet2_rad_diff_squared\n\
    \    local planet2_rad_diff_squared_sum = planet1_rad_diff_squared + planet2_rad_diff_squared\n\
    \    local planet1_rad_diff_squared_product = planet1_rad_diff_squared * planet2_rad_diff_squared\n\
    \    local planet2_rad_diff_squared_product = planet1_rad_diff_squared * planet2_rad_diff_squared\n\
    \    local planet1_rad_diff_squared_product_sum = planet1_rad_diff_squared_product\
    \ + planet2_rad_diff_squared_product\n    local planet2_rad_diff_squared_product_sum\
    \ = planet1_rad_diff_squared_product + planet2_rad_diff_squared_product\n    local\
    \ planet1_rad_diff_squared_product_product = planet1_rad_diff_squared_product\
    \ * planet2_rad_diff_squared_product\n    local planet2_rad_diff_squared_product_product\
    \ = planet1_rad_diff_squared_product * planet2_rad_diff_squared_product\n    local\
    \ planet1_rad_diff_squared_product_product_sum = planet1_rad_diff_squared_product_product\
    \ + planet2_rad_diff_squared_product_product\n    local planet2_rad_diff_squared_product_product_sum\
    \ = planet1_rad_diff_squared_product_product + planet2_rad_diff_squared_product_product\n\
    \    local planet1_rad_diff_squared_product_product_product = planet1_rad_diff_squared_product_product\
    \ * planet2_ra", "    local planets = {}\n    local sun = math.rad(math.pi/2)\n\
    \    local sun_distance = math.sqrt((math.pow(planet1.x,2)+math.pow(planet1.y,2))^2+(math.pow(planet1.z,2)+math.pow(planet1.r,2))^2)\n\
    \    local sun_radius = math.pow(math.pow(planet1.r,2)+math.pow(planet1.z,2),0.5)\n\
    \    local sun_radius = math.pow(sun_radius,0.5)\n    local sun_distance = math.pow(sun_distance,0.5)\n\
    \    local sun_radius = math.pow(sun_radius,0.5)\n    local sun_distance = math.pow(sun_distance,0.5)\n\
    \    local sun_distance = math.pow(sun_distance,0.5)\n    local sun_distance =\
    \ math.pow(sun_distance,0.5)\n    local sun_distance = math.pow(sun_distance,0.5)\n\
    \    local sun_distance = math.pow(sun_distance,0.5)\n    local sun_distance =\
    \ math.pow(sun_distance,0.5)\n    local sun_distance = math.pow(sun_distance,0.5)\n\
    \    local sun_distance = math.pow(sun_distance,0.5)\n    local sun_distance =\
    \ math.pow(sun_distance,0.5)\n    local sun_distance = math.pow(sun_distance,0.5)\n\
    \    local sun_distance = math.pow(sun_distance,0.5)\n    local sun_distance =\
    \ math.pow(sun_distance,0.5)\n    local sun_distance = math.pow(sun_distance,0.5)\n\
    \    local sun_distance = math.pow(sun_distance,0.5)\n    local sun_distance =\
    \ math.pow(sun_distance,0.5)\n    local sun_distance = math.pow(sun_distance,0.5)\n\
    \    local sun_distance = math.pow(sun_distance,0.5)\n    local sun_distance =\
    \ math.pow(sun_distance,0.5)\n    local sun_distance = math.pow(sun_distance,0.5)\n\
    \    local sun_distance = math.pow(sun_distance,0.5)\n    local sun_distance =\
    \ math.pow(sun_distance,0.5)\n    local sun_distance = math.pow(sun_distance,0.5)\n\
    \    local sun_distance = math.pow(sun_distance,0.5)\n    local sun_distance =\
    \ math.pow(sun_distance,0.5)\n    local sun_distance = math.pow(sun_distance,0.5)\n\
    \    local sun_distance = math.pow(sun_distance,0.5)\n    local sun_distance =\
    \ math.pow(sun_distance,0.5)\n    local sun_distance = math.pow(sun_distance,0.5)\n\
    \    local sun_distance = math.pow(sun_distance,0.5)\n    local sun_distance =\
    \ math.pow(sun_distance,0.5)", "    local planets = {}\n    local sun = math.rad(math.pi/2)\n\
    \    local planet1_orbit = planet1 .. '_orbit'\n    local planet2_orbit = planet2\
    \ .. '_orbit'\n    local planet1_orbits = planet1_orbit .. 's'\n    local planet2_orbits\
    \ = planet2_orbit .. 's'\n    local planet1_orbits_sun = planet1_orbits .. '_sun'\n\
    \    local planet2_orbits_sun = planet2_orbits .. '_sun'\n    local planet1_orbits_planet1\
    \ = planet1_orbits .. '_' .. planet1\n    local planet2_orbits_planet1 = planet2_orbits\
    \ .. '_' .. planet1\n    local planet1_orbits_planet2 = planet1_orbits .. '_'\
    \ .. planet2\n    local planet2_orbits_planet2 = planet2_orbits .. '_' .. planet2\n\
    \    local planet1_orbits_planet1_sun = planet1_orbits_planet1 .. '_sun'\n   \
    \ local planet2_orbits_planet1_sun = planet2_orbits_planet1 .. '_sun'\n    local\
    \ planet1_orbits_planet2_sun = planet1_orbits_planet2 .. '_sun'\n    local planet2_orbits_planet2_sun\
    \ = planet2_orbits_planet2 .. '_sun'\n    local planet1_orbits_planet1_planet1\
    \ = planet1_orbits_planet1 .. '_' .. planet1\n    local planet2_orbits_planet1_planet1\
    \ = planet2_orbits_planet1 .. '_' .. planet1\n    local planet1_orbits_planet2_planet1\
    \ = planet1_orbits_planet2 .. '_' .. planet1\n    local planet2_orbits_planet2_planet1\
    \ = planet2_orbits_planet2 .. '_' .. planet1\n    local planet1_orbits_planet1_planet2\
    \ = planet1_orbits_planet1 .. '_' .. planet2\n    local planet2_orbits_planet1_planet2\
    \ = planet2_orbits_planet1 .. '_' .. planet2\n    local planet1_orbits_planet2_planet2\
    \ = planet1_orbits_planet2 ", "    local planets = {}\n    local sun = math.rad(math.pi/2)\n\
    \    local planet1_orbit = planet1 .. '_orbit'\n    local planet2_orbit = planet2\
    \ .. '_orbit'\n    local planet1_orbit_sun = planet1_orbit .. '_sun'\n    local\
    \ planet2_orbit_sun = planet2_orbit .. '_sun'\n    local planet1_orbit_planet1\
    \ = planet1_orbit .. '_planet1'\n    local planet2_orbit_planet1 = planet2_orbit\
    \ .. '_planet1'\n    local planet1_orbit_planet2 = planet1_orbit .. '_planet2'\n\
    \    local planet2_orbit_planet2 = planet2_orbit .. '_planet2'\n    local planet1_orbit_planet3\
    \ = planet1_orbit .. '_planet3'\n    local planet2_orbit_planet3 = planet2_orbit\
    \ .. '_planet3'\n    local planet1_orbit_planet4 = planet1_orbit .. '_planet4'\n\
    \    local planet2_orbit_planet4 = planet2_orbit .. '_planet4'\n    local planet1_orbit_planet5\
    \ = planet1_orbit .. '_planet5'\n    local planet2_orbit_planet5 = planet2_orbit\
    \ .. '_planet5'\n    local planet1_orbit_planet6 = planet1_orbit .. '_planet6'\n\
    \    local planet2_orbit_planet6 = planet2_orbit .. '_planet6'\n    local planet1_orbit_planet7\
    \ = planet1_orbit .. '_planet7'\n    local planet2_orbit_planet7 = planet2_orbit\
    \ .. '_planet7'\n    local planet1_orbit_planet8 = planet1_orbit .. '_planet8'\n\
    \    local planet2_orbit_planet8 = planet2_orbit .. '_planet8'\n    local planet1_orbit_planet9\
    \ = planet1_orbit .. '_planet9'\n    local planet2_orbit_planet9 = planet2_orbit\
    \ .. '_planet9'\n    local planet1_orbit_planet10 = planet1_orbit .. '_planet10'\n\
    \    local planet2_orbit_planet10 = plan"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

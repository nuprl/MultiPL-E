language: lua
name: HumanEval_152_compare
results:
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfav3j3np.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpfav3j3np.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpfav3j3np.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfav3j3np.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpfav3j3np.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpfav3j3np.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff == 0 then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvbape82y.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpvbape82y.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpvbape82y.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if score == nil\
    \ then\n      results[i] = guess\n    else\n      results[i] = abs(guess - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp17fc3hqg.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp17fc3hqg.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmp17fc3hqg.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp303ge6aa.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp303ge6aa.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp303ge6aa.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    local difference\
    \ = scores[i] - guess[i]\n    if difference > 0 then\n      results[i] = difference\n\
    \    else\n      results[i] = -difference\n    end\n  end\n  return results\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5ocomkks.lua:36:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 5, 1}\nstack traceback:\n\
    \t/tmp/tmp5ocomkks.lua:36: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ - guess[i]\n  end\n  local result = {}\n  for i = 1, #guess do\n    result[i]\
    \ = abs(scores[i] - guess[i])\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9h0ji06o.lua:23:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp9h0ji06o.lua:23:\
    \ in function 'candidate'\n\t/tmp/tmp9h0ji06o.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    local score\
    \ = scores[i]\n    if score == 0 then\n      results[i] = 0\n    else\n      results[i]\
    \ = math.abs(score - guess[i])\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3tijvq52.lua:36:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 5, 1}\nstack traceback:\n\
    \t/tmp/tmp3tijvq52.lua:36: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp303ge6aa.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp303ge6aa.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp303ge6aa.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      result[i] = 0\n    else\n      result[i] = abs(guess - score)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoqrmg4mn.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpoqrmg4mn.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpoqrmg4mn.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local diff = {}\n  for i = 1, #guess do\n\
    \    local score = game[i]\n    local guess = guess[i]\n    if score == 0 then\n\
    \      diff[i] = guess\n    else\n      diff[i] = abs(guess - score)\n    end\n\
    \  end\n  return diff\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprblzoyqu.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmprblzoyqu.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmprblzoyqu.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    results[i]\
    \ = scores[i] - guess[i]\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdh6q86de.lua:31:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 5, 1}\nstack traceback:\n\
    \t/tmp/tmpdh6q86de.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      results[i] = 0\n    else\n      results[i] = math.abs(guess - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local gameLen = #game\n  local guessLen\
    \ = #guess\n  local results = {}\n  for i = 1, guessLen do\n    local diff = 0\n\
    \    for j = 1, gameLen do\n      if game[j] == guess[i] then\n        diff =\
    \ diff + 1\n      end\n    end\n    if diff == gameLen then\n      results[i]\
    \ = 0\n    else\n      results[i] = abs(guess[i] - game[i])\n    end\n  end\n\
    \  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjk_hcnmy.lua:27:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpjk_hcnmy.lua:27:\
    \ in function 'candidate'\n\t/tmp/tmpjk_hcnmy.lua:36: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  local scores = {}\n\
    \  for i = 1, #game do\n    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n\
    \    result[i] = abs(guess[i] - scores[i])\n  end\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfjqh6rkb.lua:20:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpfjqh6rkb.lua:20:\
    \ in function 'candidate'\n\t/tmp/tmpfjqh6rkb.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local diff = {}\n  for i = 1, #guess do\n\
    \    local score = game[i]\n    local guess = guess[i]\n    diff[i] = abs(guess\
    \ - score)\n  end\n  return diff\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk1tnsipq.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpk1tnsipq.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpk1tnsipq.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp303ge6aa.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp303ge6aa.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp303ge6aa.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      result[i] = 0\n    else\n      result[i] = abs(guess - score)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoqrmg4mn.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpoqrmg4mn.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpoqrmg4mn.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local diff = {}\n    for i = 1, #guess\
    \ do\n        diff[i] = abs(guess[i] - game[i])\n    end\n    return diff\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjz739es3.lua:16:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpjz739es3.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpjz739es3.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp303ge6aa.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp303ge6aa.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp303ge6aa.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = 0\n    for j = 1, #game do\n      if guesses[i] == game[j]\
    \ then\n        score = score + 1\n      end\n    end\n    if score == #game then\n\
    \      results[i] = 0\n    else\n      results[i] = abs(guesses[i] - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpd__vpj8p.lua:33:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpd__vpj8p.lua:33:\
    \ in function 'candidate'\n\t/tmp/tmpd__vpj8p.lua:42: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    local score\
    \ = scores[i]\n    if score == 0 then\n      results[i] = 0\n    else\n      results[i]\
    \ = abs(score - guess[i])\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppk9wn3qj.lua:27:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmppk9wn3qj.lua:27:\
    \ in function 'candidate'\n\t/tmp/tmppk9wn3qj.lua:36: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    local score\
    \ = scores[i]\n    if score == 0 then\n      results[i] = 0\n    else\n      results[i]\
    \ = score - guess[i]\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmwewe5ak.lua:36:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 5, 1}\nstack traceback:\n\
    \t/tmp/tmpmwewe5ak.lua:36: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i]\n    end\n    for i = 1, #guess do\n       \
    \ scores[i] = scores[i] + guess[i]\n    end\n    local results = {}\n    for i\
    \ = 1, #guess do\n        local score = scores[i]\n        if score == 0 then\n\
    \            results[i] = 0\n        else\n            results[i] = abs(score\
    \ - guess[i])\n        end\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1fug16tk.lua:27:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp1fug16tk.lua:27:\
    \ in function 'candidate'\n\t/tmp/tmp1fug16tk.lua:36: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local gameLen = #game\n  local guessLen\
    \ = #guess\n  local result = {gameLen}\n  for i = 1, guessLen do\n    local diff\
    \ = abs(game[gameLen - guessLen + i] - guess[i])\n    if diff == 0 then\n    \
    \  result[i] = 0\n    else\n      result[i] = diff\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyv4hak4p.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpyv4hak4p.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpyv4hak4p.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if guess == score then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbmncbdxq.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpbmncbdxq.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpbmncbdxq.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local result = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ guess == score then\n            result[i] = 0\n        else\n            result[i]\
    \ = abs(guess - score)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpao0rbepa.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpao0rbepa.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpao0rbepa.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      result[i] = 0\n    else\n      result[i] = abs(guess - score)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoqrmg4mn.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpoqrmg4mn.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpoqrmg4mn.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    local score\
    \ = scores[i]\n    if score == 0 then\n      results[i] = 0\n    else\n      results[i]\
    \ = math.abs(score - guess[i])\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3tijvq52.lua:36:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 5, 1}\nstack traceback:\n\
    \t/tmp/tmp3tijvq52.lua:36: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if guess == score then\n      result[i] = 0\n    else\n\
    \      result[i] = diff\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkawmv1er.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpkawmv1er.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpkawmv1er.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local diffs = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            diffs[#diffs\
    \ + 1] = diff\n        end\n    end\n    return diffs\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkhbrvz7e.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpkhbrvz7e.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpkhbrvz7e.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if score == guess\
    \ then\n      results[i] = 0\n    else\n      results[i] = abs(score - guess)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp766omqid.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp766omqid.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmp766omqid.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #guess\
    \ do\n    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess\
    \ do\n    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = scores[i]\n    local guess = guesses[i]\n    if guess\
    \ == score then\n      results[i] = 0\n    else\n      results[i] = abs(guess\
    \ - score)\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp758fm4b3.lua:29:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp758fm4b3.lua:29:\
    \ in function 'candidate'\n\t/tmp/tmp758fm4b3.lua:38: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local scores = {}\n    local guesses\
    \ = {}\n    for i = 1, #game do\n        scores[i] = game[i]\n        guesses[i]\
    \ = guess[i]\n    end\n    local diffs = {}\n    for i = 1, #guess do\n      \
    \  local diff = guesses[i] - scores[i]\n        if diff > 0 then\n           \
    \ diffs[i] = diff\n        else\n            diffs[i] = -diff\n        end\n \
    \   end\n    return diffs\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp303ge6aa.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp303ge6aa.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp303ge6aa.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local gameScores = {}\n  local guessScores\
    \ = {}\n  for i = 1, #game do\n    gameScores[#gameScores + 1] = game[i]\n  end\n\
    \  for i = 1, #guess do\n    guessScores[#guessScores + 1] = guess[i]\n  end\n\
    \  local results = {}\n  for i = 1, #gameScores do\n    local diff = guessScores[i]\
    \ - gameScores[i]\n    if diff > 0 then\n      results[i] = diff\n    else\n \
    \     results[i] = -diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local diff = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == nil then\n            diff[i] = guess\n        elseif guess == nil\
    \ then\n            diff[i] = score\n        else\n            diff[i] = abs(score\
    \ - guess)\n        end\n    end\n    return diff\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaqilddka.lua:23:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpaqilddka.lua:23:\
    \ in function 'candidate'\n\t/tmp/tmpaqilddka.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      results[i] = 0\n    else\n      results[i] = abs(guess - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjyb1vvso.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpjyb1vvso.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpjyb1vvso.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if score == 0\
    \ then\n      result[i] = 0\n    else\n      result[i] = abs(guess - score)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpobi3augo.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpobi3augo.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpobi3augo.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if score == guess\
    \ then\n      result[i] = 0\n    else\n      result[i] = abs(score - guess)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_52nkfwm.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp_52nkfwm.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmp_52nkfwm.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = 0\n    for j = 1, #game do\n      if scores[j] == guesses[i]\
    \ then\n        score = score + 1\n      end\n    end\n    if score == #game then\n\
    \      results[i] = 0\n    else\n      results[i] = abs(guesses[i] - scores[i])\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy8q0ynu1.lua:33:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpy8q0ynu1.lua:33:\
    \ in function 'candidate'\n\t/tmp/tmpy8q0ynu1.lua:42: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp303ge6aa.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp303ge6aa.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp303ge6aa.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      result[i] = 0\n    else\n      result[i] = abs(guess - score)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoqrmg4mn.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpoqrmg4mn.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpoqrmg4mn.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  local index = 1\n\
    \  local score = 0\n  local maxScore = game:max()\n  local maxGuess = guess:max()\n\
    \  local maxIndex = game:max()\n  for i = 1, maxIndex do\n    score = score +\
    \ game[i]\n    if guess == game[i] then\n      results[index] = 0\n    else\n\
    \      results[index] = abs(guess - score)\n    end\n    index = index + 1\n \
    \ end\n  for i = 1, maxIndex do\n    if results[i] == 0 then\n      results[i]\
    \ = abs(guess - score)\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcjp93j4x.lua:17:\
    \ attempt to call method 'max' (a nil value)\nstack traceback:\n\t/tmp/tmpcjp93j4x.lua:17:\
    \ in function 'candidate'\n\t/tmp/tmpcjp93j4x.lua:40: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff == 0 then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvbape82y.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpvbape82y.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpvbape82y.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff ~= 0 then\n      results[i] = diff\n    end\n  end\n\
    \  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0ba4hn53.lua:29:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {5=-3, 6=-3}\nstack traceback:\n\t/tmp/tmp0ba4hn53.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  local guesses = {}\n\
    \  local score = 0\n  local guess = 0\n  for i = 1, #game do\n    scores[i] =\
    \ game[i]\n    guesses[i] = guess[i]\n  end\n  for i = 1, #guess do\n    score\
    \ = score + abs(guess[i]-scores[i])\n  end\n  for i = 1, #guess do\n    guess\
    \ = guess + abs(guess[i]-scores[i])\n  end\n  return guess, score\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplxj53qy1.lua:20:\
    \ attempt to index local 'guess' (a number value)\nstack traceback:\n\t/tmp/tmplxj53qy1.lua:20:\
    \ in function 'candidate'\n\t/tmp/tmplxj53qy1.lua:34: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local gameLen = #game\n    local guessLen\
    \ = #guess\n    local result = {}\n    for i = 1, guessLen do\n        local diff\
    \ = game[gameLen - guessLen + i] - guess[i]\n        if diff > 0 then\n      \
    \      result[i] = diff\n        else\n            result[i] = -diff\n       \
    \ end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local diff = {}\n  for i = 1, #guess do\n\
    \    local score = game[i]\n    local guess = guess[i]\n    local diff = guess\
    \ - score\n    if diff > 0 then\n      diff = -diff\n    end\n    diff[i] = diff\n\
    \  end\n  return diff\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptetzl4d_.lua:22:\
    \ attempt to index local 'diff' (a number value)\nstack traceback:\n\t/tmp/tmptetzl4d_.lua:22:\
    \ in function 'candidate'\n\t/tmp/tmptetzl4d_.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  local maxScore =\
    \ game[1]\n  local maxGuess = guess[1]\n  local maxScoreIndex = #game\n  local\
    \ maxGuessIndex = #guess\n  for i = 1, maxGuessIndex do\n    local score = game[i]\n\
    \    local guess = guess[i]\n    if maxScore < score then\n      maxScore = score\n\
    \      maxScoreIndex = i\n    end\n    if maxGuess < guess then\n      maxGuess\
    \ = guess\n      maxGuessIndex = i\n    end\n  end\n  local maxScoreDiff = maxScore\
    \ - maxGuess\n  for i = 1, maxGuessIndex do\n    local score = game[i]\n    local\
    \ guess = guess[i]\n    local scoreDiff = score - guess\n    if scoreDiff ~= 0\
    \ then\n      results[i] = scoreDiff\n    end\n  end\n  return results\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb6vojf5s.lua:46:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {}\nstack traceback:\n\t/tmp/tmpb6vojf5s.lua:46:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff > 0 then\n      results[i] = diff\n    else\n   \
    \   results[i] = -diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp303ge6aa.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp303ge6aa.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp303ge6aa.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local diff = {}\n  for i = 1, #guess do\n\
    \    local score = game[i]\n    local guess = guess[i]\n    local diff = guess\
    \ - score\n    if diff > 0 then\n      diff = -diff\n    end\n    diff[i] = diff\n\
    \  end\n  return diff\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptetzl4d_.lua:22:\
    \ attempt to index local 'diff' (a number value)\nstack traceback:\n\t/tmp/tmptetzl4d_.lua:22:\
    \ in function 'candidate'\n\t/tmp/tmptetzl4d_.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local diffs = {}\n  for i = 1, #guess do\n    diffs[i]\
    \ = scores[i] - guess[i]\n  end\n  return diffs\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpczed47k8.lua:31:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 5, 1}\nstack traceback:\n\
    \t/tmp/tmpczed47k8.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local result = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == 0 then\n            result[i] = guess\n        else\n            result[i]\
    \ = abs(guess - score)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa0pkhjp6.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpa0pkhjp6.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpa0pkhjp6.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  local index = 1\n\
    \  for i = 1, #game do\n    local score = game[i]\n    local guess = guess[i]\n\
    \    if guess == score then\n      results[index] = 0\n    else\n      results[index]\
    \ = abs(guess - score)\n    end\n    index = index + 1\n  end\n  return results\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc1prmmt0.lua:22:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpc1prmmt0.lua:22:\
    \ in function 'candidate'\n\t/tmp/tmpc1prmmt0.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local gameScores = {}\n  for i = 1, #game\
    \ do\n    gameScores[game[i]] = gameScores.get(game[i], 0) + 1\n  end\n  local\
    \ guesses = {}\n  for i = 1, #guess do\n    guesses[guess[i]] = guesses.get(guess[i],\
    \ 0) + 1\n  end\n  local results = {}\n  for i = 1, #guess do\n    local score\
    \ = gameScores[guess[i]]\n    local guess = guess[i]\n    if guess == score then\n\
    \      results[i] = 0\n    else\n      results[i] = math.abs(guess - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9f_6xgkc.lua:16:\
    \ attempt to call field 'get' (a nil value)\nstack traceback:\n\t/tmp/tmp9f_6xgkc.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmp9f_6xgkc.lua:38: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff > 0 then\n      results[i] = diff\n    else\n   \
    \   results[i] = -diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    results[i]\
    \ = abs(scores[i] - guess[i])\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpd1mwzzs7.lua:23:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpd1mwzzs7.lua:23:\
    \ in function 'candidate'\n\t/tmp/tmpd1mwzzs7.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  local scores = {}\n\
    \  local guesses = {}\n  for i = 1, #game do\n    scores[i] = game[i]\n    guesses[i]\
    \ = guess[i]\n  end\n  for i = 1, #guess do\n    local score = scores[i]\n   \
    \ local guess = guesses[i]\n    local diff = 0\n    if score == 0 then\n     \
    \ diff = 0\n    else\n      diff = math.abs(guess - score)\n    end\n    result[i]\
    \ = diff\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      result[i] = 0\n    else\n      result[i] = abs(guess - score)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoqrmg4mn.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpoqrmg4mn.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpoqrmg4mn.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    local score\
    \ = scores[i]\n    if score > 0 then\n      results[i] = score\n    else\n   \
    \   results[i] = abs(score - guess[i])\n    end\n  end\n  return results\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmps3fd9um7.lua:27:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmps3fd9um7.lua:27:\
    \ in function 'candidate'\n\t/tmp/tmps3fd9um7.lua:36: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  local guesses = {}\n\
    \  local i = 0\n  for _, score in ipairs(game) do\n    scores[i] = score\n   \
    \ guesses[i] = guess[i]\n    i = i + 1\n  end\n  local correct = 0\n  for i =\
    \ 1, #guess do\n    if guesses[i] == scores[i] then\n      correct = correct +\
    \ 1\n    end\n  end\n  local diff = {}\n  for i = 1, #guess do\n    diff[i] =\
    \ abs(guesses[i] - scores[i])\n  end\n  return diff\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprj1ckpt7.lua:30:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmprj1ckpt7.lua:30:\
    \ in function 'candidate'\n\t/tmp/tmprj1ckpt7.lua:38: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local gameScores = {}\n  for i = 1, #game\
    \ do\n    gameScores[#gameScores+1] = game[i]\n  end\n  local guessScores = {}\n\
    \  for i = 1, #guess do\n    guessScores[#guessScores+1] = guess[i]\n  end\n \
    \ local results = {}\n  for i = 1, #guessScores do\n    local scoreDiff = guessScores[i]\
    \ - gameScores[i]\n    if scoreDiff ~= 0 then\n      results[#results+1] = scoreDiff\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0n034gzb.lua:35:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {-3, -3}\nstack traceback:\n\t/tmp/tmp0n034gzb.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      results[i] = 0\n    else\n      results[i] = abs(guess - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjyb1vvso.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpjyb1vvso.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpjyb1vvso.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ - guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    local difference\
    \ = scores[i] - guess[i]\n    if difference > 0 then\n      results[i] = difference\n\
    \    else\n      results[i] = -difference\n    end\n  end\n  return results\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdbt7slsg.lua:36:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 1, 5}\nstack traceback:\n\
    \t/tmp/tmpdbt7slsg.lua:36: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local scores = {}\n    local guesses\
    \ = {}\n    for i = 1, #game do\n        scores[i] = game[i]\n        guesses[i]\
    \ = guess[i]\n    end\n    local maxScore = scores[1]\n    local maxGuess = guesses[1]\n\
    \    for i = 2, #scores do\n        if scores[i] > maxScore then\n           \
    \ maxScore = scores[i]\n        end\n        if guesses[i] > maxGuess then\n \
    \           maxGuess = guesses[i]\n        end\n    end\n    local results = {}\n\
    \    for i = 1, #scores do\n        local diff = maxScore - scores[i]\n      \
    \  if diff > 0 then\n            results[i] = diff\n        else\n           \
    \ results[i] = abs(maxGuess - guesses[i])\n        end\n    end\n    return results\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdw_j7p8c.lua:36:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpdw_j7p8c.lua:36:\
    \ in function 'candidate'\n\t/tmp/tmpdw_j7p8c.lua:45: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff > 0 then\n      results[i] = diff\n    else\n   \
    \   results[i] = -diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff > 0 then\n      results[i] = diff\n    else\n   \
    \   results[i] = -diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff == 0 then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvbape82y.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpvbape82y.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpvbape82y.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local diff = {}\n  for i = 1, #guess do\n\
    \    diff[i] = abs(guess[i] - game[i])\n  end\n  return diff\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmjjost34.lua:16:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpmjjost34.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpmjjost34.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp303ge6aa.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp303ge6aa.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp303ge6aa.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ - guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    results[i]\
    \ = scores[i]\n  end\n  for i = 1, #game do\n    results[i] = results[i] - game[i]\n\
    \  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu7f4wwto.lua:34:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {-1, -2, -3, -4, -2, 2}\nstack traceback:\n\
    \t/tmp/tmpu7f4wwto.lua:34: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp303ge6aa.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp303ge6aa.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp303ge6aa.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  local guesses = {}\n\
    \  for i = 1, #game do\n    scores[i] = game[i]\n    guesses[i] = guess[i]\n \
    \ end\n  local results = {}\n  for i = 1, #guess do\n    local score = 0\n   \
    \ for j = 1, #scores do\n      if guesses[i] == scores[j] then\n        score\
    \ = score + 1\n      end\n    end\n    if score == #scores then\n      results[i]\
    \ = 0\n    else\n      results[i] = abs(guesses[i] - scores[score])\n    end\n\
    \  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp86khe938.lua:31:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp86khe938.lua:31:\
    \ in function 'candidate'\n\t/tmp/tmp86khe938.lua:40: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local result = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == 0 then\n            result[i] = 0\n        elseif guess == 0 then\n\
    \            result[i] = score\n        else\n            result[i] = abs(guess\
    \ - score)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxklrwksv.lua:23:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpxklrwksv.lua:23:\
    \ in function 'candidate'\n\t/tmp/tmpxklrwksv.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff > 0 then\n      results[i] = diff\n    else\n   \
    \   results[i] = -diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    local difference\
    \ = scores[i] - guess[i]\n    if difference > 0 then\n      results[i] = difference\n\
    \    else\n      results[i] = -difference\n    end\n  end\n  return results\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5ocomkks.lua:36:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 5, 1}\nstack traceback:\n\
    \t/tmp/tmp5ocomkks.lua:36: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff == 0 then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvbape82y.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpvbape82y.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpvbape82y.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp303ge6aa.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp303ge6aa.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp303ge6aa.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local result = {}\n    for i = 1, #guess\
    \ do\n        local diff = abs(guess[i] - game[i])\n        if diff > result[i]\
    \ then\n            result[i] = diff\n        end\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfkgfih_6.lua:16:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpfkgfih_6.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpfkgfih_6.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local diff = {}\n  for i = 1, #guess do\n\
    \    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      diff[i] = 0\n    else\n      diff[i] = abs(guess - score)\n    end\n\
    \  end\n  return diff\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1_cynccn.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp1_cynccn.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmp1_cynccn.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i]\n    end\n    for i = 1, #guess do\n       \
    \ scores[i] = scores[i] + guess[i]\n    end\n    local results = {}\n    for i\
    \ = 1, #guess do\n        local difference = scores[i] - guess[i]\n        if\
    \ difference < 0 then\n            difference = difference * -1\n        end\n\
    \        results[i] = difference\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprhl17v9o.lua:35:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 5, 1}\nstack traceback:\n\
    \t/tmp/tmprhl17v9o.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i]\n    end\n    for i = 1, #guess do\n       \
    \ scores[i] = scores[i] - guess[i]\n    end\n    local results = {}\n    for i\
    \ = 1, #guess do\n        local score = scores[i]\n        if score == 0 then\n\
    \            results[i] = 0\n        else\n            results[i] = abs(score\
    \ - guess[i])\n        end\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6se_guaj.lua:27:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp6se_guaj.lua:27:\
    \ in function 'candidate'\n\t/tmp/tmp6se_guaj.lua:36: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    local score\
    \ = scores[i]\n    if score == 0 then\n      results[i] = 0\n    else\n      results[i]\
    \ = abs(score - guess[i])\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppk9wn3qj.lua:27:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmppk9wn3qj.lua:27:\
    \ in function 'candidate'\n\t/tmp/tmppk9wn3qj.lua:36: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff > 0 then\n      results[i] = diff\n    elseif diff\
    \ < 0 then\n      results[i] = -diff\n    else\n      results[i] = 0\n    end\n\
    \  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = 0\n    for j = 1, #game do\n      if guesses[j] == game[j]\
    \ then\n        score = score + 1\n      end\n    end\n    if score == #game then\n\
    \      results[i] = 0\n    else\n      results[i] = abs(guesses[i] - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf8b9li11.lua:33:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpf8b9li11.lua:33:\
    \ in function 'candidate'\n\t/tmp/tmpf8b9li11.lua:42: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      result[i] = 0\n    else\n      result[i] = abs(guess - score)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoqrmg4mn.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpoqrmg4mn.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpoqrmg4mn.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff > 0 then\n      results[i] = diff\n    else\n   \
    \   results[i] = -diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      result[i] = 0\n    else\n      result[i] = abs(guess - score)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoqrmg4mn.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpoqrmg4mn.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpoqrmg4mn.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ 0\n    if score == guess then\n      diff = 0\n    else\n      diff = math.abs(score\
    \ - guess)\n    end\n    results[i] = diff\n  end\n  return results\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == guess then\n            results[i] = 0\n        else\n            results[i]\
    \ = abs(guess - score)\n        end\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo9_7q2xb.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpo9_7q2xb.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpo9_7q2xb.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local result = {}\n  for i = 1, #guess do\n    result[i]\
    \ = abs(scores[i] - guess[i])\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpeiecjsyf.lua:23:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpeiecjsyf.lua:23:\
    \ in function 'candidate'\n\t/tmp/tmpeiecjsyf.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      result[i] = 0\n    else\n      result[i] = abs(guess - score)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoqrmg4mn.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpoqrmg4mn.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpoqrmg4mn.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      results[i] = 0\n    else\n      results[i] = abs(guess - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjyb1vvso.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpjyb1vvso.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpjyb1vvso.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff ~= 0 then\n      results[i] = diff\n    end\n  end\n\
    \  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0ba4hn53.lua:29:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {5=-3, 6=-3}\nstack traceback:\n\t/tmp/tmp0ba4hn53.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guesses\
    \ do\n    local score = 0\n    for j = 1, #scores do\n      if guesses[i] == scores[j]\
    \ then\n        score = score + 1\n      end\n    end\n    if score == #scores\
    \ then\n      results[i] = 0\n    else\n      results[i] = abs(guesses[i] - scores[score])\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf0jqgv8e.lua:33:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpf0jqgv8e.lua:33:\
    \ in function 'candidate'\n\t/tmp/tmpf0jqgv8e.lua:42: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ 0\n    if guess == score then\n      diff = 0\n    else\n      diff = math.abs(guess\
    \ - score)\n    end\n    result[i] = diff\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = 0\n    for j = 1, #game do\n      if game[j] == guess[i]\
    \ then\n        score = score + 1\n      end\n    end\n    if score == #game then\n\
    \      result[i] = 0\n    else\n      result[i] = abs(guess[i] - score)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5l405zsg.lua:25:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp5l405zsg.lua:25:\
    \ in function 'candidate'\n\t/tmp/tmp5l405zsg.lua:34: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local diff = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == guess then\n            diff[i] = 0\n        else\n            diff[i]\
    \ = abs(guess - score)\n        end\n    end\n    return diff\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk5395_4c.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpk5395_4c.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpk5395_4c.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = scores[i]\n    local guess = guesses[i]\n    local result =\
    \ math.abs(guess - score)\n    if result == 0 then\n      results[i] = 0\n   \
    \ else\n      results[i] = result\n    end\n  end\n  return results\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfav3j3np.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpfav3j3np.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpfav3j3np.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff == 0 then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvbape82y.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpvbape82y.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpvbape82y.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ - guess[i]\n  end\n  return scores\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp303ge6aa.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp303ge6aa.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp303ge6aa.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  local guesses = {}\n\
    \  for i = 1, #game do\n    scores[i] = game[i]\n    guesses[i] = guess[i]\n \
    \ end\n  local correct = #guesses == #scores\n  local results = {}\n  for i =\
    \ 1, #guesses do\n    local diff = abs(guesses[i] - scores[i])\n    if correct\
    \ then\n      results[i] = 0\n    else\n      results[i] = diff\n    end\n  end\n\
    \  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfu92adhw.lua:23:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpfu92adhw.lua:23:\
    \ in function 'candidate'\n\t/tmp/tmpfu92adhw.lua:36: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if guess == score then\n            results[i]\
    \ = 0\n        else\n            results[i] = diff\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprlusbmmj.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmprlusbmmj.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmprlusbmmj.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local gameLength = #game\n    local guessLength\
    \ = #guess\n    local results = {}\n    for i = 1, guessLength do\n        local\
    \ result = game[gameLength - 1 - i]\n        local guess = guess[i]\n        results[i]\
    \ = result\n    end\n    for i = 1, guessLength do\n        local result = guess[guessLength\
    \ - 1 - i]\n        local game = game[i]\n        results[i] = result\n    end\n\
    \    return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmg14hm43.lua:33:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {4, 3, 2, 1}\nstack traceback:\n\t/tmp/tmpmg14hm43.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp303ge6aa.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp303ge6aa.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp303ge6aa.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ - guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    local difference\
    \ = scores[i] - guess[i]\n    if difference > 0 then\n      results[i] = difference\n\
    \    else\n      results[i] = -difference\n    end\n  end\n  return results\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdbt7slsg.lua:36:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 1, 5}\nstack traceback:\n\
    \t/tmp/tmpdbt7slsg.lua:36: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff > 0 then\n      results[i] = diff\n    else\n   \
    \   results[i] = -diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff > 0 then\n      results[i] = diff\n    else\n   \
    \   results[i] = -diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp303ge6aa.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp303ge6aa.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp303ge6aa.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if score == 0\
    \ then\n      result[i] = guess\n    else\n      result[i] = abs(guess - score)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1tvj4cbl.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp1tvj4cbl.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmp1tvj4cbl.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      result[i] = 0\n    else\n      result[i] = abs(guess - score)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoqrmg4mn.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpoqrmg4mn.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpoqrmg4mn.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ guess == score then\n            results[i] = 0\n        else\n            results[i]\
    \ = math.abs(guess - score)\n        end\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local difference\
    \ = abs(guess - score)\n    if guess == score then\n      difference = 0\n   \
    \ end\n    result[i] = difference\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpplakvpka.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpplakvpka.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpplakvpka.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guesses\
    \ do\n    local score = 0\n    for j = 1, #scores do\n      if guesses[i] == scores[j]\
    \ then\n        score = score + 1\n      end\n    end\n    if score == #scores\
    \ then\n      results[i] = 0\n    else\n      results[i] = abs(guesses[i] - scores[score])\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf0jqgv8e.lua:33:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpf0jqgv8e.lua:33:\
    \ in function 'candidate'\n\t/tmp/tmpf0jqgv8e.lua:42: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = 0\n    for j = 1, #game do\n      if guesses[j] == game[j]\
    \ then\n        score = score + 1\n      end\n    end\n    if score == #game then\n\
    \      results[i] = 0\n    else\n      results[i] = abs(guesses[i] - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf8b9li11.lua:33:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpf8b9li11.lua:33:\
    \ in function 'candidate'\n\t/tmp/tmpf8b9li11.lua:42: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local scores = {}\n    local guesses\
    \ = {}\n    for i = 1, #game do\n        scores[i] = game[i]\n        guesses[i]\
    \ = guess[i]\n    end\n    local diffs = {}\n    for i = 1, #guess do\n      \
    \  local diff = guesses[i] - scores[i]\n        if diff > 0 then\n           \
    \ diffs[i] = diff\n        else\n            diffs[i] = -diff\n        end\n \
    \   end\n    return diffs\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if score == guess\
    \ then\n      results[i] = 0\n    else\n      results[i] = math.abs(guess - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if score == 0\
    \ then\n      result[i] = 0\n    else\n      result[i] = abs(guess - score)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpobi3augo.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpobi3augo.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpobi3augo.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ guess == score then\n            results[i] = 0\n        else\n            results[i]\
    \ = abs(guess - score)\n        end\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpggs7o4au.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpggs7o4au.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpggs7o4au.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local diff = {}\n  for i = 1, #guess do\n\
    \    local score = game[i]\n    local guess = guess[i]\n    local diff = 0\n \
    \   if guess == score then\n      diff = 0\n    else\n      diff = math.abs(guess\
    \ - score)\n    end\n    diff[i] = diff\n  end\n  return diff\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5s578ykg.lua:24:\
    \ attempt to index local 'diff' (a number value)\nstack traceback:\n\t/tmp/tmp5s578ykg.lua:24:\
    \ in function 'candidate'\n\t/tmp/tmp5s578ykg.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if guess == score then\n      result[i] = 0\n    else\n\
    \      result[i] = diff\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkawmv1er.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpkawmv1er.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpkawmv1er.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    local score\
    \ = scores[i]\n    if score > 0 then\n      local diff = score - guess[i]\n  \
    \    if diff > 0 then\n        results[i] = diff\n      else\n        results[i]\
    \ = -diff\n      end\n    else\n      results[i] = 0\n    end\n  end\n  return\
    \ results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbbrcmzly.lua:41:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 5, 0}\nstack traceback:\n\
    \t/tmp/tmpbbrcmzly.lua:41: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local gameScores = {}\n  for i = 1, #game\
    \ do\n    gameScores[game[i]] = gameScores.get(game[i], 0) + 1\n  end\n  local\
    \ guesses = {}\n  for i = 1, #guess do\n    guesses[guess[i]] = guesses[guess[i]]\
    \ or 0\n    guesses[guess[i]]++\n  end\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = gameScores[guess[i]]\n    if score == 0 then\n      results[i]\
    \ = 0\n    else\n      results[i] = abs(score - guesses[guess[i]])\n    end\n\
    \  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpv99eyffd.lua:21: ''='' expected near ''+''

    '
  stdout: ''
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff > 0 then\n      results[i] = diff\n    else\n   \
    \   results[i] = -diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if guess == score then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbmncbdxq.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpbmncbdxq.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpbmncbdxq.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local diffs = {}\n  for i = 1, #guess do\n    diffs[i]\
    \ = abs(guess[i] - scores[i])\n  end\n  return diffs\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9v84c9gi.lua:23:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp9v84c9gi.lua:23:\
    \ in function 'candidate'\n\t/tmp/tmp9v84c9gi.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp303ge6aa.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp303ge6aa.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp303ge6aa.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if score == 0\
    \ then\n      results[i] = 0\n    else\n      results[i] = math.abs(guess - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff == 0 then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvbape82y.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpvbape82y.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpvbape82y.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff > 0 then\n      results[i] = diff\n    else\n   \
    \   results[i] = -diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guesses\
    \ do\n    local score = scores[i]\n    local guess = guesses[i]\n    if guess\
    \ == score then\n      results[i] = 0\n    else\n      results[i] = abs(guess\
    \ - score)\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpit4w3x4n.lua:29:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpit4w3x4n.lua:29:\
    \ in function 'candidate'\n\t/tmp/tmpit4w3x4n.lua:38: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff > 0 then\n      results[i] = diff\n    else\n   \
    \   results[i] = abs(diff)\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmporjhqpzi.lua:22:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmporjhqpzi.lua:22:\
    \ in function 'candidate'\n\t/tmp/tmporjhqpzi.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local gameScores = {}\n  local guessScores\
    \ = {}\n  for i = 1, #game do\n    gameScores[game[i]] = gameScores[game[i]] or\
    \ 0\n    guessScores[guess[i]] = guessScores[guess[i]] or 0\n    gameScores[game[i]]\
    \ = gameScores[game[i]] + 1\n    guessScores[guess[i]] = guessScores[guess[i]]\
    \ + 1\n  end\n  for i = 1, #guess do\n    gameScores[guess[i]] = gameScores[guess[i]]\
    \ + 1\n  end\n  local results = {}\n  for i = 1, #guess do\n    local difference\
    \ = abs(guessScores[guess[i]] - gameScores[guess[i]])\n    if difference == 0\
    \ then\n      results[i] = 0\n    else\n      results[i] = difference\n    end\n\
    \  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmmleifo2.lua:23:\
    \ attempt to perform arithmetic on field '?' (a nil value)\nstack traceback:\n\
    \t/tmp/tmpmmleifo2.lua:23: in function 'candidate'\n\t/tmp/tmpmmleifo2.lua:40:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #guess\
    \ do\n        scores[i] = game[guess[i]]\n    end\n    local correct = #scores\
    \ == #guess\n    local results = {}\n    for i = 1, #guess do\n        local diff\
    \ = abs(guess[i] - scores[i])\n        if correct then\n            results[i]\
    \ = 0\n        else\n            results[i] = diff\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp49htj0ne.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp49htj0ne.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmp49htj0ne.lua:34: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local diff = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == 0 then\n            diff[i] = guess\n        else\n            diff[i]\
    \ = abs(guess - score)\n        end\n    end\n    return diff\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp349ij0p_.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp349ij0p_.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmp349ij0p_.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = 0\n    for j = 1, #game do\n      if scores[j] == guesses[i]\
    \ then\n        score = score + 1\n      end\n    end\n    if score == #game then\n\
    \      results[i] = 0\n    else\n      results[i] = abs(guesses[i] - scores[i])\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy8q0ynu1.lua:33:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpy8q0ynu1.lua:33:\
    \ in function 'candidate'\n\t/tmp/tmpy8q0ynu1.lua:42: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff > 0 then\n      results[i] = diff\n    else\n   \
    \   results[i] = -diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp303ge6aa.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp303ge6aa.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp303ge6aa.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = scores[i]\n    local guess = guesses[i]\n    local diff = abs(guess\
    \ - score)\n    if guess == score then\n      results[i] = 0\n    else\n     \
    \ results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpt5s7nd6s.lua:26:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpt5s7nd6s.lua:26:\
    \ in function 'candidate'\n\t/tmp/tmpt5s7nd6s.lua:39: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == guess then\n            results[i] = 0\n        else\n            results[i]\
    \ = math.abs(score - guess)\n        end\n    end\n    return results\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff > 0 then\n      results[i] = diff\n    else\n   \
    \   results[i] = -diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = 0\n    for j = 1, #game do\n      if scores[j] == guesses[i]\
    \ then\n        score = score + 1\n      end\n    end\n    if score == #game then\n\
    \      results[i] = 0\n    else\n      results[i] = abs(guesses[i] - scores[i])\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy8q0ynu1.lua:33:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpy8q0ynu1.lua:33:\
    \ in function 'candidate'\n\t/tmp/tmpy8q0ynu1.lua:42: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = scores[i]\n    local guess = guesses[i]\n    if guess == score\
    \ then\n      results[i] = 0\n    else\n      results[i] = abs(guess - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpixen70l3.lua:29:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpixen70l3.lua:29:\
    \ in function 'candidate'\n\t/tmp/tmpixen70l3.lua:38: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      result[i] = 0\n    else\n      result[i] = abs(guess - score)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoqrmg4mn.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpoqrmg4mn.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpoqrmg4mn.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp303ge6aa.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp303ge6aa.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp303ge6aa.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if guess == score then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbmncbdxq.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpbmncbdxq.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpbmncbdxq.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff ~= 0 then\n      results[i] = diff\n    end\n  end\n\
    \  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1aat0tlh.lua:29:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {5=-3, 6=-3}\nstack traceback:\n\t/tmp/tmp1aat0tlh.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local scores = {}\n    local guesses\
    \ = {}\n    for i = 1, #game do\n        scores[i] = game[i]\n        guesses[i]\
    \ = guess[i]\n    end\n    local correct = 0\n    for i = 1, #guess do\n     \
    \   if guesses[i] == scores[i] then\n            correct = correct + 1\n     \
    \   end\n    end\n    local diffs = {}\n    for i = 1, #guess do\n        diffs[i]\
    \ = abs(guesses[i] - scores[i])\n    end\n    return diffs\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpilumfhqm.lua:28:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpilumfhqm.lua:28:\
    \ in function 'candidate'\n\t/tmp/tmpilumfhqm.lua:36: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp303ge6aa.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp303ge6aa.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp303ge6aa.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  local i = 1\n  while\
    \ i <= #guess do\n    local score = game[i]\n    local guess = guess[i]\n    if\
    \ guess == score then\n      result[i] = 0\n    else\n      result[i] = abs(guess\
    \ - score)\n    end\n    i = i + 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpao5phkrl.lua:22:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpao5phkrl.lua:22:\
    \ in function 'candidate'\n\t/tmp/tmpao5phkrl.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfav3j3np.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpfav3j3np.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpfav3j3np.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      result[i] = 0\n    else\n      result[i] = abs(guess - score)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoqrmg4mn.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpoqrmg4mn.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpoqrmg4mn.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #guess\
    \ do\n    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess\
    \ do\n    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = 0\n    for j = 1, #game do\n      if guesses[j] == game[j]\
    \ then\n        score = score + 1\n      end\n    end\n    if score == #game then\n\
    \      results[i] = 0\n    else\n      results[i] = abs(guesses[i] - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp916em_na.lua:33:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp916em_na.lua:33:\
    \ in function 'candidate'\n\t/tmp/tmp916em_na.lua:42: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp303ge6aa.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp303ge6aa.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp303ge6aa.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      result[i] = 0\n    else\n      result[i] = abs(guess - score)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoqrmg4mn.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpoqrmg4mn.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpoqrmg4mn.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local diff = {}\n  for i = 1, #guess do\n\
    \    local score = game[i]\n    local guess = guess[i]\n    local diff = guess\
    \ - score\n    if diff > 0 then\n      diff = -diff\n    end\n    diff[i] = diff\n\
    \  end\n  return diff\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptetzl4d_.lua:22:\
    \ attempt to index local 'diff' (a number value)\nstack traceback:\n\t/tmp/tmptetzl4d_.lua:22:\
    \ in function 'candidate'\n\t/tmp/tmptetzl4d_.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      result[i] = 0\n    else\n      result[i] = abs(guess - score)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoqrmg4mn.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpoqrmg4mn.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpoqrmg4mn.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = 0\n    for j = 1, #game do\n      if game[j] == guess[i] then\n\
    \        score = score + 1\n      end\n    end\n    if score == #game then\n \
    \     results[i] = 0\n    else\n      results[i] = abs(guess[i] - score)\n   \
    \ end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfexvyvdx.lua:33:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpfexvyvdx.lua:33:\
    \ in function 'candidate'\n\t/tmp/tmpfexvyvdx.lua:42: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i]\n    end\n    local guesses = {}\n    for i\
    \ = 1, #guess do\n        guesses[i] = guess[i]\n    end\n    local results =\
    \ {}\n    for i = 1, #guess do\n        local score = scores[i]\n        local\
    \ guess = guesses[i]\n        if score == 0 then\n            results[i] = guess\n\
    \        else\n            results[i] = abs(guess - score)\n        end\n    end\n\
    \    return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzlmjgc7z.lua:29:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpzlmjgc7z.lua:29:\
    \ in function 'candidate'\n\t/tmp/tmpzlmjgc7z.lua:38: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local results = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ diff = abs(guess - score)\n        if diff > 0 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfav3j3np.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpfav3j3np.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpfav3j3np.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      result[i] = 0\n    else\n      result[i] = abs(guess - score)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoqrmg4mn.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpoqrmg4mn.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpoqrmg4mn.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    local score\
    \ = scores[i]\n    if score == 0 then\n      results[i] = 0\n    else\n      results[i]\
    \ = score - abs(guess[i] - score)\n    end\n  end\n  return results\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkji3e5ja.lua:27:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpkji3e5ja.lua:27:\
    \ in function 'candidate'\n\t/tmp/tmpkji3e5ja.lua:36: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      results[i] = 0\n    else\n      results[i] = math.abs(guess - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = scores[i]\n    local guess = guesses[i]\n    if guess == score\
    \ then\n      results[i] = 0\n    else\n      results[i] = abs(guess - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpixen70l3.lua:29:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpixen70l3.lua:29:\
    \ in function 'candidate'\n\t/tmp/tmpixen70l3.lua:38: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #guess\
    \ do\n    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess\
    \ do\n    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = scores[i]\n    local guess = guesses[i]\n    if guess\
    \ == score then\n      results[i] = 0\n    else\n      results[i] = abs(guess\
    \ - score)\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp758fm4b3.lua:29:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp758fm4b3.lua:29:\
    \ in function 'candidate'\n\t/tmp/tmp758fm4b3.lua:38: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local result = {}\n    for i = 1, #guess\
    \ do\n        result[i] = abs(guess[i] - game[i])\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgbelqnjt.lua:16:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpgbelqnjt.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpgbelqnjt.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local diffs = {}\n  for i = 1, #guesses do\n\
    \    diffs[i] = abs(guesses[i] - scores[i])\n  end\n  return diffs\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyo0_gu3m.lua:24:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpyo0_gu3m.lua:24:\
    \ in function 'candidate'\n\t/tmp/tmpyo0_gu3m.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp303ge6aa.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp303ge6aa.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp303ge6aa.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local diffs = {}\n  for i = 1, #guess do\n\
    \    local score = game[i]\n    local guess = guess[i]\n    local diff = guess\
    \ - score\n    diffs[i] = diff\n  end\n  return diffs\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9ic3c648.lua:27:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {0, 0, 0, 0, -3, -3}\nstack traceback:\n\
    \t/tmp/tmp9ic3c648.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff == 0 then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvbape82y.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpvbape82y.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpvbape82y.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff == 0 then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvbape82y.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpvbape82y.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpvbape82y.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff > 0 then\n      results[i] = diff\n    else\n   \
    \   results[i] = -diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      results[i] = 0\n    else\n      results[i] = math.abs(guess - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff ~= 0 then\n      results[i] = diff\n    end\n  end\n\
    \  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0ba4hn53.lua:29:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {5=-3, 6=-3}\nstack traceback:\n\t/tmp/tmp0ba4hn53.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #guess\
    \ do\n    scores[i] = game[guess[i]]\n  end\n  local correct = #guess == 0\n \
    \ local diffs = {}\n  for i = 1, #guess do\n    local diff = scores[i] - guess\n\
    \    if diff ~= 0 then\n      diffs[i] = diff\n      correct = correct and diff\
    \ == 0\n    end\n  end\n  return diffs, correct\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxzibq5sf.lua:21:\
    \ attempt to perform arithmetic on local 'guess' (a table value)\nstack traceback:\n\
    \t/tmp/tmpxzibq5sf.lua:21: in function 'candidate'\n\t/tmp/tmpxzibq5sf.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if guess == score then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbmncbdxq.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpbmncbdxq.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpbmncbdxq.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #guess\
    \ do\n    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess\
    \ do\n    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = scores[i]\n    local guess = guesses[i]\n    if guess\
    \ == score then\n      results[i] = 0\n    else\n      results[i] = abs(guess\
    \ - score)\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp758fm4b3.lua:29:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp758fm4b3.lua:29:\
    \ in function 'candidate'\n\t/tmp/tmp758fm4b3.lua:38: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if guess == score then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbmncbdxq.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpbmncbdxq.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpbmncbdxq.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if diff > 0 then\n      results[i] = diff\n    else\n\
    \      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp303ge6aa.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp303ge6aa.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp303ge6aa.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #guess\
    \ do\n    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess\
    \ do\n    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = 0\n    for j = 1, #game do\n      if game[j] == guess[i]\
    \ then\n        score = score + 1\n      end\n    end\n    if score == #guess\
    \ then\n      results[i] = 0\n    else\n      results[i] = abs(score - #guess)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1o56m67f.lua:33:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp1o56m67f.lua:33:\
    \ in function 'candidate'\n\t/tmp/tmp1o56m67f.lua:42: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess do\n\
    \    guesses[i] = guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n\
    \    local score = 0\n    for j = 1, #game do\n      if guesses[j] == game[j]\
    \ then\n        score = score + 1\n      end\n    end\n    if score == #game then\n\
    \      results[i] = 0\n    else\n      results[i] = abs(guesses[i] - score)\n\
    \    end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf8b9li11.lua:33:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpf8b9li11.lua:33:\
    \ in function 'candidate'\n\t/tmp/tmpf8b9li11.lua:42: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ - guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    results[i]\
    \ = scores[i]\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = 0\n    for j = 1, #game do\n      if game[j] == guess[i]\
    \ then\n        score = score + 1\n      end\n    end\n    if score == #game then\n\
    \      result[i] = 0\n    else\n      result[i] = abs(guess[i] - score)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5l405zsg.lua:25:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp5l405zsg.lua:25:\
    \ in function 'candidate'\n\t/tmp/tmp5l405zsg.lua:34: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  local guesses = {}\n\
    \  for i = 1, #game do\n    scores[i] = game[i]\n    guesses[i] = guess[i]\n \
    \ end\n  local correct = 0\n  for i = 1, #guess do\n    local score = scores[i]\n\
    \    local guess = guesses[i]\n    if guess == score then\n      correct = correct\
    \ + 1\n    end\n  end\n  local diffs = {}\n  for i = 1, #guess do\n    local score\
    \ = scores[i]\n    local guess = guesses[i]\n    diffs[i] = abs(guess - score)\n\
    \  end\n  return diffs\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzm74nu7h.lua:32:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpzm74nu7h.lua:32:\
    \ in function 'candidate'\n\t/tmp/tmpzm74nu7h.lua:40: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local result = {}\n    for i = 1, #guess\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        if\
    \ score == 0 then\n            result[i] = guess\n        else\n            result[i]\
    \ = abs(guess - score)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa0pkhjp6.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpa0pkhjp6.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpa0pkhjp6.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #guess\
    \ do\n    scores[i] = game[i]\n  end\n  local guesses = {}\n  for i = 1, #guess\
    \ do\n    guesses[i] = guess[i]\n  end\n  local correct = 0\n  for i = 1, #guess\
    \ do\n    if guesses[i] == scores[i] then\n      correct = correct + 1\n    end\n\
    \  end\n  local errors = {}\n  for i = 1, #guess do\n    if guesses[i] > scores[i]\
    \ then\n      errors[i] = guesses[i] - scores[i]\n    elseif guesses[i] < scores[i]\
    \ then\n      errors[i] = scores[i] - guesses[i]\n    end\n  end\n  local results\
    \ = {}\n  for i = 1, #guess do\n    if errors[i] ~= 0 then\n      results[i] =\
    \ errors[i]\n    else\n      results[i] = 0\n    end\n  end\n  return results\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp57pho56o.lua:50:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {5=3, 6=3}\nstack traceback:\n\t/tmp/tmp57pho56o.lua:50:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local scores = {}\n    local guesses\
    \ = {}\n    for i = 1, #game do\n        scores[i] = game[i]\n        guesses[i]\
    \ = guess[i]\n    end\n    local results = {}\n    for i = 1, #guess do\n    \
    \    local score = 0\n        for j = 1, #scores do\n            if guesses[i]\
    \ == scores[j] then\n                score = score + 1\n            end\n    \
    \    end\n        if score == #scores then\n            results[i] = 0\n     \
    \   else\n            results[i] = abs(guesses[i] - scores[score])\n        end\n\
    \    end\n    return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz26sub60.lua:31:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpz26sub60.lua:31:\
    \ in function 'candidate'\n\t/tmp/tmpz26sub60.lua:40: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i]\n    end\n    for i = 1, #guess do\n       \
    \ scores[i] = scores[i] - guess[i]\n    end\n    return scores\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff > 0 then\n      results[i] = diff\n    else\n   \
    \   results[i] = -diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = scores[i]\
    \ + guess[i]\n  end\n  local results = {}\n  for i = 1, #guess do\n    local diff\
    \ = scores[i] - guess[i]\n    if diff ~= 0 then\n      results[i] = diff\n   \
    \ end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph77gax8k.lua:34:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 5, 1}\nstack traceback:\n\
    \t/tmp/tmph77gax8k.lua:34: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  local scores = {}\n\
    \  local i = 0\n  for k, v in pairs(game) do\n    scores[i] = v\n    i = i + 1\n\
    \  end\n  for k, v in pairs(guess) do\n    local j = 0\n    for k2, v2 in pairs(scores)\
    \ do\n      if v == v2 then\n        results[j] = results[j] + 1\n      else\n\
    \        results[j] = results[j] + abs(v - v2)\n      end\n      j = j + 1\n \
    \   end\n  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmph01jov9t.lua:27:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmph01jov9t.lua:27:\
    \ in function 'candidate'\n\t/tmp/tmph01jov9t.lua:38: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #game\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ abs(guess - score)\n    if guess == score then\n      results[i] = 0\n    else\n\
    \      results[i] = diff\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4vcnfgd6.lua:18:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmp4vcnfgd6.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp4vcnfgd6.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local gameScores = game:map(function(score)\n\
    \    return score[1]\n  end)\n  local guessScores = guess:map(function(score)\n\
    \    return score[1]\n  end)\n  local results = {}\n  for i = 1, #guess do\n \
    \   local gameScore = gameScores[i]\n    local guessScore = guessScores[i]\n \
    \   if gameScore == guessScore then\n      results[i] = 0\n    else\n      results[i]\
    \ = abs(guessScore - gameScore)\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpghamze1d.lua:14:\
    \ attempt to call method 'map' (a nil value)\nstack traceback:\n\t/tmp/tmpghamze1d.lua:14:\
    \ in function 'candidate'\n\t/tmp/tmpghamze1d.lua:36: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n    local scores = {}\n    for i = 1, #game\
    \ do\n        scores[i] = game[i]\n    end\n    local guesses = {}\n    for i\
    \ = 1, #guess do\n        guesses[i] = guess[i]\n    end\n    local results =\
    \ {}\n    for i = 1, #guess do\n        local score = 0\n        for j = 1, #game\
    \ do\n            if guesses[i] == game[j] then\n                score = score\
    \ + 1\n            end\n        end\n        if score == #game then\n        \
    \    results[i] = 0\n        else\n            results[i] = abs(guesses[i] - score)\n\
    \        end\n    end\n    return results\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpu1p8hvoa.lua:33:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpu1p8hvoa.lua:33:\
    \ in function 'candidate'\n\t/tmp/tmpu1p8hvoa.lua:42: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local results = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    local diff =\
    \ guess - score\n    if diff ~= 0 then\n      results[i] = diff\n    end\n  end\n\
    \  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0ba4hn53.lua:29:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {5=-3, 6=-3}\nstack traceback:\n\t/tmp/tmp0ba4hn53.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750373
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two tables of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return a table of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\n-- >>>\
    \ compare({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2})\n-- {0, 0, 0, 0, 3, 3}\n--\
    \ >>> compare({0, 5, 0, 0, 0, 4}, {4, 1, 1, 0, 0, -2})\n-- {4, 4, 1, 0, 0, 6}\n\
    local function compare(game, guess)\n  local result = {}\n  for i = 1, #guess\
    \ do\n    local score = game[i]\n    local guess = guess[i]\n    if guess == score\
    \ then\n      result[i] = 0\n    else\n      result[i] = abs(guess - score)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoqrmg4mn.lua:21:\
    \ attempt to call global 'abs' (a nil value)\nstack traceback:\n\t/tmp/tmpoqrmg4mn.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpoqrmg4mn.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750373

name: HumanEval_43_pairs_sum_to_zero
language: lua
prompt: "-- pairs_sum_to_zero takes a table of integers as an input.\n-- it returns\
  \ true if there are two distinct elements in the table that\n-- sum to zero, and\
  \ false otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
  \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
  \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
  -- false\nlocal function pairs_sum_to_zero(l)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pairs_sum_to_zero\n\
  \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
  \ 3, -2, 1}), false)\n    lu.assertEquals(candidate({1, 2, 3, 7}), false)\n    lu.assertEquals(candidate({2,\
  \ 4, -5, 3, 5, 7}), true)\n    lu.assertEquals(candidate({1}), false)\n    lu.assertEquals(candidate({-3,\
  \ 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 31}),\
  \ true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}), false)\n    lu.assertEquals(candidate({-3,\
  \ 9, -1, 4, 2, 31}), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local zero = {}\n  local one = {}\n  for i, v in ipairs(l) do\n \
    \   if v == 0 then\n      zero[i] = true\n    elseif v == 1 then\n      one[i]\
    \ = true\n    end\n  end\n  return #one == 0 and #zero == 0\nend", "  local zeros\
    \ = {}\n  for k, v in pairs(l) do\n    if v == 0 then\n      table.insert(zeros,\
    \ k)\n    end\n  end\n  return #zeros == 2\nend", "  local pairs = {}\n  for k,\
    \ v in pairs(l) do\n    table.insert(pairs, {k, v, 0})\n  end\n  table.sort(pairs,\
    \ function(a, b) return a[2] > b[2] end)\n  local i = 1\n  local j = 1\n  while\
    \ i <= #pairs do\n    local k = pairs[i][1]\n    local v = pairs[i][2]\n    if\
    \ v == 0 then\n      if j > i then\n        pairs[j] = nil\n      end\n      j\
    \ = j + 1\n    else\n      pairs[j][2] = pairs[j][2] + v\n      if pairs[j][2]\
    \ > 0 then\n        pairs[j][3] = pairs[j][3] - v\n      end\n    end\n    i =\
    \ i + 1\n  end\n  local pair = pairs[i]\n  if pair and pair[3] ~= 0 then\n   \
    \ return false\n  end\n  return true\nend", "  local sum = 0\n  for _, v in pairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local pairs = pairs(l)\n\
    \  local sum = 0\n  for _, v in pairs do\n    sum = sum + v\n  end\n  return sum\
    \ == 0\nend", "  local zero = 0\n  local pairs = {}\n  for i, v in ipairs(l) do\n\
    \    pairs[i] = v\n    zero = zero + v\n  end\n  local pairs_sorted = pairs.sorted()\n\
    \  local last_pair = pairs_sorted[1]\n  for i, v in pairs_sorted do\n    if v\
    \ == 0 then\n      return false\n    end\n    if v == last_pair then\n      return\
    \ false\n    end\n    last_pair = v\n  end\n  return true\nend", "  local sum\
    \ = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\n\
    end", "  local sum = 0\n  for k, v in pairs(l) do\n    sum = sum + v\n  end\n\
    \  return sum == 0\nend", "  local zero = 0\n  local pairs = {}\n  for k, v in\
    \ pairs(l) do\n    pairs[k] = v + zero\n  end\n  local zeros = setmetatable({},\
    \ {__mode = \"kv\"})\n  zeros[zero] = true\n  for k, v in pairs(pairs) do\n  \
    \  if zeros[k] then\n      return false\n    end\n    zeros[k] = true\n  end\n\
    \  return true\nend", "  local zero = 0\n  local pairs = {}\n  for i, v in ipairs(l)\
    \ do\n    pairs[i] = v + zero\n  end\n  for i, v in ipairs(pairs) do\n    if v\
    \ == zero then\n      return false\n    end\n  end\n  return true\nend", "  local\
    \ zero = 0\n  local pairs = {}\n  for i = 1, #l do\n    local v = l[i]\n    pairs[v]\
    \ = true\n    zero = zero + v\n  end\n  for i = 1, #pairs do\n    if pairs[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local zero\
    \ = 0\n  local zeroes = {}\n  for k, v in pairs(l) do\n    zero = zero + v\n \
    \   table.insert(zeroes, zero)\n  end\n  local zeroes_list = table.concat(zeroes,\
    \ \",\")\n  local zeroes_string = string.format(\"{%s}\", zeroes_list)\n  return\
    \ zeroes_string == \"{0,}\" or zeroes_string == \"{0}\"\nend", "  local zero =\
    \ 0\n  local one = 1\n  local two = 2\n  local three = 3\n  local four = 4\n \
    \ local five = 5\n  local six = 6\n  local seven = 7\n  local eight = 8\n  local\
    \ nine = 9\n  local ten = 10\n  local eleven = 11\n  local twelve = 12\n  local\
    \ thirteen = 13\n  local fourteen = 14\n  local fifteen = 15\n  local sixteen\
    \ = 16\n  local seventeen = 17\n  local eighteen = 18\n  local nineteen = 19\n\
    \  local twenty = 20\n  local thirty = 21\n  local forty = 22\n  local fifty =\
    \ 23\n  local sixty = 24\n  local seventy = 25\n  local eighty = 26\n  local ninety\
    \ = 27\n  local hundred = 28\n  local thousand = 29\n  local million = 30\n  local\
    \ billion = 31\n  local trillion = 32\n  local quadrillion = 33\n  local quintillion\
    \ = 34\n  local sextillion = 35\n  local septillion = 36\n  local octillion =\
    \ 37\n  local nonillion = 38\n  local decillion = 39\n  local undecillion = 40\n\
    \  local duodecillion = 41\n  local tredecillion = 42\n  local quattuordecillion\
    \ = 43\n  local quindecillion = 44\n  local sexdecillion = 45\n  local septendecillion\
    \ = 46\n  local octodecillion = 47\n  local novemdecillion = 48\n  local vigintillion\
    \ = 49\n  local unvigintillion = 50\n  local duovigintillion = 51\n  local trevigintillion\
    \ = 52\n  local quattuorvigintillion = 53\n  local quinvigintillion = 54\n  local\
    \ sexvigintillion = 55\n  local septenvigintillion = 56\n  local octovigintillion\
    \ = 57\n  local novemvigintillion = 58\n  local vigintillions = 59\n  local unvigintillions\
    \ = 60\n  local duovigintillions = 61\n  local trevigintillions = 62\n  local\
    \ qu", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n\
    \  return sum == 0\nend", "  local zero = {}\n  for i = 1, #l do\n    zero[i]\
    \ = 0\n  end\n  for i = 1, #l do\n    local v = l[i]\n    if v > 0 then\n    \
    \  zero[#zero + 1] = v\n    end\n  end\n  for i = 1, #zero do\n    if zero[i]\
    \ ~= 0 then\n      return false\n    end\n  end\n  return true\nend", "  local\
    \ sum = 0\n  for k, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum ==\
    \ 0\nend", "  local zero = {}\n  for k, v in pairs(l) do\n    zero[k] = v\n  end\n\
    \  local zeros = {}\n  for k, v in pairs(zero) do\n    zeros[k] = v\n  end\n \
    \ local zeros_set = setmetatable({}, {__mode = \"v\"})\n  for k, v in pairs(zeros)\
    \ do\n    zeros_set[k] = v\n  end\n  local zeros_set_size = #zeros_set\n  local\
    \ zeros_set_sorted = table.sort(zeros_set)\n  local zeros_set_sorted_size = #zeros_set_sorted\n\
    \  local zeros_set_sorted_size = zeros_set_sorted_size - 1\n  local zeros_set_sorted_last\
    \ = zeros_set_sorted[zeros_set_sorted_size]\n  local zeros_set_sorted_last_key\
    \ = zeros_set_sorted[zeros_set_sorted_size - 1]\n  local zeros_set_sorted_last_value\
    \ = zeros_set_sorted[zeros_set_sorted_size - 2]\n  local zeros_set_sorted_last_key_value\
    \ = zeros_set_sorted[zeros_set_sorted_size - 1]\n  local zeros_set_sorted_last_key_value\
    \ = zeros_set_sorted[zeros_set_sorted_size - 2]\n  local zeros_set_sorted_last_key_value\
    \ = zeros_set_sorted[zeros_set_sorted_size - 1]\n  local zeros_set_sorted_last_key_value\
    \ = zeros_set_sorted[zeros_set_sorted_size - 2]\n  local zeros_set_sorted_last_key_value\
    \ = zeros_set_sorted[zeros_set_sorted_size - 1]\n  local zeros_set_sorted_last_key_value\
    \ = zeros_set_sorted[zeros_set_sorted_size - 2]\n  local zeros_set_sorted_last_key_value\
    \ = zeros_set_sorted[zeros_set_sorted_size - 1]\n  local zeros_set_sorted_last_key_value\
    \ = zeros_set_sorted[zeros_set_sorted_size - 2]\n  local zeros_set_sorted_last_key_value\
    \ = zeros_set_sorted[zeros_set_sorted_size - 1]\n  local zeros_set_sorted_last_key_value\
    \ = zeros_set_sorted[zeros_set_sorted_size - 2]\n  local zeros_set_sorted_last_key_value\
    \ = zeros_set_sorted[zeros_set_sorted_size - 1]\n  local zeros_set_sorted_last_key_value\
    \ = zeros_set_sorted[zeros_set_sorted_size - 2]\n  local zeros_set_sorted_last_key_value\
    \ = zeros_set_sorted[zeros_set_sorted_size - 1]\n  local zeros_set_sorted_last_key_value\
    \ = zeros_set_sorted[zeros_set_sorted_size - 2]\n  local zeros_set_sorted_last_key_value\
    \ = zeros_set_sorted[zeros_set_sorted_size - 1]\n  local zeros_set_sorted_last_key_value\
    \ = zeros_set_", "  local zero = 0\n  local pairs = {}\n  for k, v in pairs(l)\
    \ do\n    pairs[k] = v + zero\n  end\n  for k, v in pairs(pairs) do\n    if v\
    \ == zero then\n      return true\n    end\n  end\n  return false\nend", "  local\
    \ zeros = {}\n  for i = 1, #l do\n    zeros[i] = 0\n  end\n  for i = 1, #l do\n\
    \    for j = 1, #l do\n      if l[i] + l[j] == 0 then\n        zeros[i] = true\n\
    \        zeros[j] = true\n      end\n    end\n  end\n  return #zeros == 0\nend",
  "  local zero = {}\n  local pairs = {}\n  for k, v in pairs(l) do\n    if v == 0\
    \ then\n      table.insert(zero, k)\n    else\n      table.insert(pairs, {k, v})\n\
    \    end\n  end\n  local count = 0\n  for _, v in pairs(zero) do\n    count =\
    \ count + 1\n  end\n  if count == 1 then\n    return true\n  end\n  return false\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_48_is_palindrome
language: lua
prompt: "-- Checks if given string is a palindrome\n-- >>> is_palindrome('')\n-- true\n\
  -- >>> is_palindrome('aba')\n-- true\n-- >>> is_palindrome('aaaaa')\n-- true\n--\
  \ >>> is_palindrome('zbcd')\n-- false\nlocal function is_palindrome(text)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_palindrome\n\
  \    lu.assertEquals(candidate(''), true)\n    lu.assertEquals(candidate('aba'),\
  \ true)\n    lu.assertEquals(candidate('aaaaa'), true)\n    lu.assertEquals(candidate('zbcd'),\
  \ false)\n    lu.assertEquals(candidate('xywyx'), true)\n    lu.assertEquals(candidate('xywyz'),\
  \ false)\n    lu.assertEquals(candidate('xywzx'), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j]\
    \ then\n      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return\
    \ true\nend", "  local i, j = 1, #text\n  while i < j do\n    if text[i] ~= text[j]\
    \ then\n      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return\
    \ true\nend", "  local text = text:lower()\n  local i, j = text:len(), text:len()\n\
    \  while i ~= 0 do\n    if text:sub(i, i) ~= text:sub(j, j) then\n      return\
    \ false\n    end\n    i, j = i - 1, j - 1\n  end\n  return true\nend", "  local\
    \ i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n      return\
    \ false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\nend", " \
    \ local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n \
    \     return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i < j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local function reverse(text)\n    local reversed = \"\"\n    for i =\
    \ #text, 1, -1 do\n      reversed = reversed .. text[i]\n    end\n    return reversed\n\
    \  end\n  return reverse(text) == text\nend", "  local i, j = 1, #text\n  while\
    \ i <= j do\n    if text[i] ~= text[j] then\n      return false\n    end\n   \
    \ i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local i, j = 1, #text\n\
    \  while i < j do\n    if text[i] ~= text[j] then\n      return false\n    end\n\
    \    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local function reverse(text)\n\
    \    local reversed = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed\
    \ .. text:sub(i, i)\n    end\n    return reversed\n  end\n  return reverse(text)\
    \ == text\nend", "  local function reverse(text)\n    local reversed = \"\"\n\
    \    for i = #text, 1, -1 do\n      reversed = reversed .. text[i]\n    end\n\
    \    return reversed\n  end\n  local function is_palindrome_helper(text, start,\
    \ end)\n    if start > end then\n      return true\n    end\n    if text[start]\
    \ ~= text[end] then\n      return false\n    end\n    return is_palindrome_helper(text,\
    \ start + 1, end - 1)\n  end\n  return is_palindrome_helper(text, 1, #text - 1)\n\
    end", "  local function reverse(text)\n    local reversed = \"\"\n    for i =\
    \ #text, 1, -1 do\n      reversed = reversed .. text[i]\n    end\n    return reversed\n\
    \  end\n  return reverse(text) == text\nend", "  text = text:lower()\n  local\
    \ i, j = text:len(), text:len()\n  while i > 0 and j > 0 do\n    if text:sub(i,\
    \ i) == text:sub(j, j) then\n      i = i - 1\n      j = j - 1\n    else\n    \
    \  return false\n    end\n  end\n  return true\nend", "  local function reverse(text)\n\
    \    local result = \"\"\n    for i = #text, 1, -1 do\n      result = result ..\
    \ text:sub(i, i)\n    end\n    return result\n  end\n  return reverse(text) ==\
    \ text\nend", "  local i, j = 1, #text\n  while i < j do\n    if text[i] ~= text[j]\
    \ then\n      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return\
    \ true\nend", "  local i, j = 1, #text\n  while i < j do\n    if text[i] ~= text[j]\
    \ then\n      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return\
    \ true\nend", "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j]\
    \ then\n      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return\
    \ true\nend", "  local function reverse(text)\n    local reversed = \"\"\n   \
    \ for i = #text, 1, -1 do\n      reversed = reversed .. text:sub(i, i)\n    end\n\
    \    return reversed\n  end\n  return reverse(text) == text\nend", "  local function\
    \ reverse(text)\n    local reversed = {}\n    for i = #text, 1, -1 do\n      table.insert(reversed,\
    \ text:sub(i, i))\n    end\n    return table.concat(reversed)\n  end\n  return\
    \ reverse(text) == text\nend", "  local i, j = 1, #text\n  while i < j do\n  \
    \  if text[i] ~= text[j] then\n      return false\n    end\n    i = i + 1\n  \
    \  j = j - 1\n  end\n  return true\nend", "  local i, j = 1, #text\n  while i\
    \ < j do\n    if text[i] ~= text[j] then\n      return false\n    end\n    i =\
    \ i + 1\n    j = j - 1\n  end\n  return true\nend", "  local i, j = 1, #text\n\
    \  while i <= j do\n    if text[i] ~= text[j] then\n      return false\n    end\n\
    \    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local i, j = 1,\
    \ #text\n  while i < j do\n    if text[i] ~= text[j] then\n      return false\n\
    \    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local function\
    \ reverse(text)\n    local i, j = 1, #text\n    while i <= j do\n      local tmp\
    \ = text[i]\n      text[i] = text[j]\n      text[j] = tmp\n      i = i + 1\n \
    \     j = j - 1\n    end\n    return text\n  end\n  local function is_palindrome_helper(text,\
    \ start, end)\n    if start > end then\n      return true\n    end\n    if start\
    \ == end then\n      return text[start] == text[start]\n    end\n    return is_palindrome_helper(text,\
    \ start + 1, end - 1)\n  end\n  return is_palindrome_helper(text, 1, #text - 1)\n\
    end", "  local i, j = 1, #text\n  while i < j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  text = text:lower()\n  local i, j = text:len(), text:len()\n  while i\
    \ > 0 and j > 0 do\n    if text:sub(i, i) == text:sub(j, j) then\n      i = i\
    \ - 1\n      j = j - 1\n    else\n      return false\n    end\n  end\n  return\
    \ true\nend", "  local i, j = 1, #text\n  while i < j do\n    if text[i] ~= text[j]\
    \ then\n      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return\
    \ true\nend", "  local i, j = 1, #text\n  while i < j do\n    if text[i] ~= text[j]\
    \ then\n      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return\
    \ true\nend", "  local function reverse(text)\n    local reversed = \"\"\n   \
    \ for i = #text, 1, -1 do\n      reversed = reversed .. text:sub(i, i)\n    end\n\
    \    return reversed\n  end\n  return reverse(text) == text\nend", "  text = text:lower()\n\
    \  local i, j = text:len(), text:len()\n  while i > 0 and j > 0 do\n    if text:sub(i,\
    \ i) == text:sub(j, j) then\n      i = i - 1\n      j = j - 1\n    else\n    \
    \  return false\n    end\n  end\n  return true\nend", "  local i, j = 1, #text\n\
    \  while i < j do\n    if text[i] ~= text[j] then\n      return false\n    end\n\
    \    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local i, j = 1,\
    \ #text\n  while i < j do\n    if text[i] ~= text[j] then\n      return false\n\
    \    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local text\
    \ = text:lower()\n  local i, j = text:len(), text:len()\n  while i ~= 0 do\n \
    \   if text:sub(i, i) ~= text:sub(j, j) then\n      return false\n    end\n  \
    \  i = i - 1\n    j = j - 1\n  end\n  return true\nend", "  local i, j = 1, #text\n\
    \  while i < j do\n    if text[i] ~= text[j] then\n      return false\n    end\n\
    \    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local i, j = 1,\
    \ #text\n  while i < j do\n    if text[i] ~= text[j] then\n      return false\n\
    \    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local function\
    \ reverse(text)\n    local i, j = 1, #text\n    while i > 0 do\n      local temp\
    \ = text[i]\n      text[i] = text[j]\n      text[j] = temp\n      i = i - 1\n\
    \      j = j - 1\n    end\n    return text\n  end\n  return reverse(text) == text\n\
    end", "  local function reverse(text)\n    local reversed = \"\"\n    for i =\
    \ #text, 1, -1 do\n      reversed = reversed .. text:sub(i, i)\n    end\n    return\
    \ reversed\n  end\n  return reverse(text) == text\nend", "  local text = text:lower()\n\
    \  local i = text:len()\n  while i ~= 0 do\n    if text:sub(i, i) ~= text:sub(i-1,\
    \ i-1) then\n      return false\n    end\n    i = i - 1\n  end\n  return true\n\
    end", "  local function reverse(text)\n    local reversed = \"\"\n    for i =\
    \ #text, 1, -1 do\n      reversed = reversed .. text:sub(i, i)\n    end\n    return\
    \ reversed\n  end\n  return reverse(text) == text\nend", "  text = text:lower()\n\
    \  local i = 0\n  local j = text:len()\n  while i < j do\n    if text:sub(i, i)\
    \ ~= text:sub(j, j) then\n      return false\n    end\n    i = i + 1\n    j =\
    \ j - 1\n  end\n  return true\nend", "  text = text:lower()\n  local i, j = text:len(),\
    \ text:len()\n  while i > 0 and j > 0 and text:sub(i, i) == text:sub(j, j) do\n\
    \    i = i - 1\n    j = j - 1\n  end\n  return i == 0 and j == 0\nend", "  local\
    \ i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n      return\
    \ false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\nend", " \
    \ text = text:lower()\n  local i, j = text:len(), text:len()\n  while i > 0 and\
    \ j > 0 do\n    if text:sub(i, i) ~= text:sub(j, j) then\n      return false\n\
    \    end\n    i = i - 1\n    j = j - 1\n  end\n  return true\nend", "  local text\
    \ = text:lower()\n  local length = text:len()\n  if length == 0 then\n    return\
    \ true\n  end\n  local first\n  local last\n  for i = 1, length / 2 do\n    local\
    \ first_char = text:sub(i, i)\n    local last_char = text:sub(i + 1, i + 1)\n\
    \    if first_char == last_char then\n      first = i\n      last = i\n      break\n\
    \    end\n  end\n  if first == last then\n    return true\n  end\n  return false\n\
    end", "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  text = text:lower()\n  local i, j = text:len(), text:len()\n  while i\
    \ ~= 0 do\n    if text:sub(i, i) ~= text:sub(j, j) then\n      return false\n\
    \    end\n    i = i - 1\n    j = j - 1\n  end\n  return true\nend", "  local i,\
    \ j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n      return\
    \ false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\nend", " \
    \ local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n \
    \     return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local text = text:lower()\n  local i, j = text:len(), text:len()\n  while\
    \ i > 0 and j > 0 do\n    if text:sub(i, i) ~= text:sub(j, j) then\n      return\
    \ false\n    end\n    i = i - 1\n    j = j - 1\n  end\n  return true\nend", " \
    \ local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n \
    \     return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i < j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i < j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "    local i, j = 1, #text\n    while i <= j do\n        if text[i] ~= text[j]\
    \ then\n            return false\n        end\n        i = i + 1\n        j =\
    \ j - 1\n    end\n    return true\nend", "  text = text:lower()\n  local i, j\
    \ = text:len(), text:len()\n  while i > 0 and j > 0 do\n    if text:sub(i, i)\
    \ ~= text:sub(j, j) then\n      return false\n    end\n    i, j = i - 1, j - 1\n\
    \  end\n  return true\nend", "  local function reverse(text)\n    local reversed\
    \ = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed .. text:sub(i,\
    \ i)\n    end\n    return reversed\n  end\n  return reverse(text) == text\nend",
  "  text = text:lower()\n  local i, j = text:len(), text:len()\n  while i > 0 and\
    \ j > 0 do\n    if text:sub(i, i) == text:sub(j, j) then\n      i = i - 1\n  \
    \    j = j - 1\n    else\n      return false\n    end\n  end\n  return true\n\
    end", "    local i, j = 1, #text\n    while i < j do\n        if text[i] ~= text[j]\
    \ then\n            return false\n        end\n        i = i + 1\n        j =\
    \ j - 1\n    end\n    return true\nend", "  local i, j = 1, #text\n  while i <=\
    \ j do\n    if text[i] ~= text[j] then\n      return false\n    end\n    i = i\
    \ + 1\n    j = j - 1\n  end\n  return true\nend", "  local function reverse(text)\n\
    \    local reversed = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed\
    \ .. text[i]\n    end\n    return reversed\n  end\n  return reverse(text) == text\n\
    end", "    local i, j = 1, #text\n    while i <= j do\n        if text[i] ~= text[j]\
    \ then\n            return false\n        end\n        i = i + 1\n        j =\
    \ j - 1\n    end\n    return true\nend", "  local reversed = text:reverse()\n\
    \  return text == reversed\nend", "  local function reverse(text)\n    local i,\
    \ j = 1, #text\n    while i <= j do\n      local temp = text[i]\n      text[i]\
    \ = text[j]\n      text[j] = temp\n      i = i + 1\n      j = j - 1\n    end\n\
    \    return text\n  end\n  local result = reverse(text)\n  return text == result\n\
    end", "  local i, j = 1, #text\n  while i < j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local reversed = text:reverse()\n  return text == reversed\nend", " \
    \ local function reverse(text)\n    local reversed = \"\"\n    for i = #text,\
    \ 1, -1 do\n      reversed = reversed .. text:sub(i, i)\n    end\n    return reversed\n\
    \  end\n  return reverse(text) == text\nend", "  local i, j = 1, #text\n  while\
    \ i <= j do\n    if text[i] ~= text[j] then\n      return false\n    end\n   \
    \ i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local function reverse(text)\n\
    \    local reversed = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed\
    \ .. text:sub(i, i)\n    end\n    return reversed\n  end\n  return reverse(text)\
    \ == text\nend", "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~=\
    \ text[j] then\n      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n\
    \  return true\nend", "  local i, j = 1, #text\n  while i <= j do\n    if text[i]\
    \ ~= text[j] then\n      return false\n    end\n    i = i + 1\n    j = j - 1\n\
    \  end\n  return true\nend", "  local reversed_text = text:reverse()\n  return\
    \ text == reversed_text\nend", "  local function reverse(text)\n    local reversed\
    \ = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed .. text:sub(i,\
    \ i)\n    end\n    return reversed\n  end\n  return reverse(text) == text\nend",
  "  local function reverse(text)\n    local reversed = \"\"\n    for i = #text, 1,\
    \ -1 do\n      reversed = reversed .. text:sub(i, i)\n    end\n    return reversed\n\
    \  end\n  return reverse(text) == text\nend", "  local i, j = 1, #text\n  while\
    \ i < j do\n    if text[i] ~= text[j] then\n      return false\n    end\n    i\
    \ = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local reversed = text:reverse()\n\
    \  return text == reversed\nend", "  local i, j = 1, #text\n  while i < j do\n\
    \    if text[i] ~= text[j] then\n      return false\n    end\n    i = i + 1\n\
    \    j = j - 1\n  end\n  return true\nend", "  local i, j = 1, #text\n  while\
    \ i <= j do\n    if text[i] ~= text[j] then\n      return false\n    end\n   \
    \ i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local i, j = 1, #text\n\
    \  while i < j do\n    if text[i] ~= text[j] then\n      return false\n    end\n\
    \    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local i, j = 1,\
    \ #text\n  while i <= j do\n    if text[i] ~= text[j] then\n      return false\n\
    \    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  text =\
    \ text:lower()\n  local i, j = text:len(), text:len()\n  while i > 0 and j > 0\
    \ do\n    if text:sub(i, i) ~= text:sub(j, j) then\n      return false\n    end\n\
    \    i, j = i - 1, j - 1\n  end\n  return true\nend", "  local i, j = 1, #text\n\
    \  while i < j do\n    if text[i] ~= text[j] then\n      return false\n    end\n\
    \    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "    local i, j = 1,\
    \ #text\n    while i < j do\n        if text[i] ~= text[j] then\n            return\
    \ false\n        end\n        i = i + 1\n        j = j - 1\n    end\n    return\
    \ true\nend", "  text = text:lower()\n  local i, j = text:len(), text:len()\n\
    \  while i ~= 0 do\n    if text:sub(i, i) ~= text:sub(j, j) then\n      return\
    \ false\n    end\n    i = i - 1\n    j = j - 1\n  end\n  return true\nend", " \
    \ local i, j = 1, #text\n  while i < j do\n    if text[i] ~= text[j] then\n  \
    \    return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i < j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  text = text:lower()\n  local i, j = text:len(), text:len()\n  while i\
    \ ~= 0 do\n    if text:sub(i, i) ~= text:sub(j, j) then\n      return false\n\
    \    end\n    i, j = i - 1, j - 1\n  end\n  return true\nend", "  local function\
    \ reverse(text)\n    local reversed = \"\"\n    for i = #text, 1, -1 do\n    \
    \  reversed = reversed .. text[i]\n    end\n    return reversed\n  end\n  return\
    \ reverse(text) == text\nend", "  local text = text:lower()\n  local len = text:len()\n\
    \  local i = 0\n  local j = len - 1\n  while i <= j and text:sub(i, i + 1) ~=\
    \ text:sub(j, j + 1) do\n    i = i + 1\n    j = j - 1\n  end\n  return i == j\n\
    end", "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  text = text:lower()\n  local i, j = text:len(), text:len()\n  while i\
    \ ~= 0 do\n    if text:sub(i, i) ~= text:sub(j, j) then\n      return false\n\
    \    end\n    i = i - 1\n    j = j - 1\n  end\n  return true\nend", "  text =\
    \ text:lower()\n  local i = 0\n  local j = text:len()\n  while i < j do\n    if\
    \ text:sub(i, i) ~= text:sub(j, j) then\n      return false\n    end\n    i =\
    \ i + 1\n    j = j - 1\n  end\n  return true\nend", "  local reversed = text:reverse()\n\
    \  return text == reversed\nend", "  local text = text:lower()\n  local i, j =\
    \ text:len(), 1\n  while i < j do\n    if text:sub(i, i) ~= text:sub(j, j) then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "    local i, j = 1, #text\n    while i < j do\n        if text[i] ~= text[j]\
    \ then\n            return false\n        end\n        i = i + 1\n        j =\
    \ j - 1\n    end\n    return true\nend", "  local function reverse(text)\n   \
    \ local reversed = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed\
    \ .. text:sub(i, i)\n    end\n    return reversed\n  end\n  return reverse(text)\
    \ == text\nend", "  local function reverse(text)\n    local reversed = \"\"\n\
    \    for i = #text, 1, -1 do\n      reversed = reversed .. text:sub(i, i)\n  \
    \  end\n    return reversed\n  end\n  return reverse(text) == text\nend", "  text\
    \ = text:lower()\n  local i, j = text:len(), text:len()\n  while i > 0 and j >\
    \ 0 do\n    if text:sub(i, i) ~= text:sub(j, j) then\n      return false\n   \
    \ end\n    i, j = i - 1, j - 1\n  end\n  return true\nend", "  local function\
    \ reverse(text)\n    local reversed = \"\"\n    for i = #text, 1, -1 do\n    \
    \  reversed = reversed .. text:sub(i, i)\n    end\n    return reversed\n  end\n\
    \  return reverse(text) == text\nend", "  local i, j = 1, #text\n  while i <=\
    \ j do\n    if text[i] ~= text[j] then\n      return false\n    end\n    i = i\
    \ + 1\n    j = j - 1\n  end\n  return true\nend", "  local i, j = 1, #text\n \
    \ while i <= j do\n    if text[i] ~= text[j] then\n      return false\n    end\n\
    \    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local function reverse(text)\n\
    \    local reversed = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed\
    \ .. text:sub(i, i)\n    end\n    return reversed\n  end\n  return reverse(text)\
    \ == text\nend", "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~=\
    \ text[j] then\n      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n\
    \  return true\nend", "  local i, j = 1, #text\n  while i < j do\n    if text[i]\
    \ ~= text[j] then\n      return false\n    end\n    i = i + 1\n    j = j - 1\n\
    \  end\n  return true\nend", "  local i, j = 1, #text\n  while i < j do\n    if\
    \ text[i] ~= text[j] then\n      return false\n    end\n    i = i + 1\n    j =\
    \ j - 1\n  end\n  return true\nend", "  local i, j = 1, #text\n  while i <= j\
    \ do\n    if text[i] ~= text[j] then\n      return false\n    end\n    i = i +\
    \ 1\n    j = j - 1\n  end\n  return true\nend", "  local function reverse(text)\n\
    \    local i, j = 1, #text\n    while i < j do\n      local tmp = text[i]\n  \
    \    text[i] = text[j]\n      text[j] = tmp\n      i = i + 1\n      j = j - 1\n\
    \    end\n    return text\n  end\n  return reverse(text) == text\nend", "  local\
    \ i, j = 1, #text\n  while i < j do\n    if text[i] ~= text[j] then\n      return\
    \ false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\nend", " \
    \ local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n \
    \     return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i < j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "    local i, j = 1, #text\n    while i <= j do\n        if text[i] ~= text[j]\
    \ then\n            return false\n        end\n        i = i + 1\n        j =\
    \ j - 1\n    end\n    return true\nend", "  local i, j = 1, #text\n  while i <=\
    \ j do\n    if text[i] ~= text[j] then\n      return false\n    end\n    i = i\
    \ + 1\n    j = j - 1\n  end\n  return true\nend", "  local i, j = 1, #text\n \
    \ while i <= j do\n    if text[i] ~= text[j] then\n      return false\n    end\n\
    \    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  text = text:lower()\n\
    \  local i, j = text:len(), 1\n  while i ~= 0 do\n    if text:sub(i, i) ~= text:sub(j,\
    \ j) then\n      return false\n    end\n    i = i - 1\n    j = j + 1\n  end\n\
    \  return true\nend", "  local i, j = 1, #text\n  while i < j do\n    if text[i]\
    \ ~= text[j] then\n      return false\n    end\n    i = i + 1\n    j = j - 1\n\
    \  end\n  return true\nend", "  local function reverse(text)\n    local reversed\
    \ = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed .. text:sub(i,\
    \ i)\n    end\n    return reversed\n  end\n  return reverse(text) == text\nend",
  "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n  \
    \    return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local function reverse(text)\n    local reversed = \"\"\n    for i =\
    \ #text, 1, -1 do\n      reversed = reversed .. text:sub(i, i)\n    end\n    return\
    \ reversed\n  end\n  return reverse(text) == text\nend", "  local i, j = 1, #text\n\
    \  while i <= j do\n    if text[i] ~= text[j] then\n      return false\n    end\n\
    \    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local function reverse(text)\n\
    \    local result = \"\"\n    for i = #text, 1, -1 do\n      result = result ..\
    \ text[i]\n    end\n    return result\n  end\n  return reverse(text) == text\n\
    end", "  text = text:lower()\n  local i, j = text:len(), text:len()\n  while i\
    \ ~= 0 do\n    if text:sub(i, i) ~= text:sub(j, j) then\n      return false\n\
    \    end\n    i, j = i - 1, j - 1\n  end\n  return true\nend", "  local text =\
    \ text:lower()\n  local i, j = text:len(), text:len()\n  while i > 0 and j > 0\
    \ do\n    if text:sub(i, i) ~= text:sub(j, j) then\n      return false\n    end\n\
    \    i = i - 1\n    j = j - 1\n  end\n  return true\nend", "  text = text:lower()\n\
    \  local i, j = text:len(), text:len()\n  while i ~= 0 do\n    if text:sub(i,\
    \ i) ~= text:sub(j, j) then\n      return false\n    end\n    i, j = i - 1, j\
    \ - 1\n  end\n  return true\nend", "  local i, j = 1, #text\n  while i <= j do\n\
    \    if text[i] ~= text[j] then\n      return false\n    end\n    i = i + 1\n\
    \    j = j - 1\n  end\n  return true\nend", "  local i, j = 1, #text\n  while\
    \ i < j do\n    if text[i] ~= text[j] then\n      return false\n    end\n    i\
    \ = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local i, j = 1, #text\n\
    \  while i < j do\n    if text[i] ~= text[j] then\n      return false\n    end\n\
    \    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local i, j = 1,\
    \ #text\n  while i <= j do\n    if text[i] ~= text[j] then\n      return false\n\
    \    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local i,\
    \ j = 1, #text\n  while i < j do\n    if text[i] ~= text[j] then\n      return\
    \ false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\nend", " \
    \ local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n \
    \     return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i < j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "    local i, j = 1, #text\n    while i <= j do\n        if text[i] ~= text[j]\
    \ then\n            return false\n        end\n        i = i + 1\n        j =\
    \ j - 1\n    end\n    return true\nend", "  text = text:lower()\n  local i, j\
    \ = text:len(), text:len()\n  while i ~= 0 do\n    if text:sub(i, i) ~= text:sub(j,\
    \ j) then\n      return false\n    end\n    i = i - 1\n    j = j - 1\n  end\n\
    \  return true\nend", "  local function reverse(text)\n    local reversed = \"\
    \"\n    for i = #text, 1, -1 do\n      reversed = reversed..text[i]\n    end\n\
    \    return reversed\n  end\n  return reverse(text) == text\nend", "  local function\
    \ reverse(text)\n    local reversed = \"\"\n    for i = #text, 1, -1 do\n    \
    \  reversed = reversed .. text:sub(i, i)\n    end\n    return reversed\n  end\n\
    \  return reverse(text) == text\nend", "    local i, j = 1, #text\n    while i\
    \ < j do\n        if text[i] ~= text[j] then\n            return false\n     \
    \   end\n        i = i + 1\n        j = j - 1\n    end\n    return true\nend",
  "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n  \
    \    return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local function reverse(text)\n    local i, j = 1, #text\n    while i\
    \ < j do\n      local tmp = text[i]\n      text[i] = text[j]\n      text[j] =\
    \ tmp\n      i = i + 1\n      j = j - 1\n    end\n    return text\n  end\n  return\
    \ reverse(text) == text\nend", "  text = text:lower()\n  local i, j = text:len(),\
    \ text:len()\n  while i ~= 0 do\n    if text:sub(i, i) ~= text:sub(j, j) then\n\
    \      return false\n    end\n    i = i - 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local text = text:lower()\n  local length = text:len()\n  if length ==\
    \ 0 then\n    return true\n  end\n  local half = length / 2\n  for i = 1, half\
    \ do\n    if text:sub(i, i) ~= text:sub((length - i - 1), (length - i - 1)) then\n\
    \      return false\n    end\n  end\n  return true\nend", "  text = text:lower()\n\
    \  local i, j = text:len(), text:len()\n  while i ~= 0 do\n    if text:sub(i,\
    \ i) ~= text:sub(j, j) then\n      return false\n    end\n    i, j = i - 1, j\
    \ - 1\n  end\n  return true\nend", "  local function reverse(text)\n    local\
    \ i, j = 1, #text\n    while i < j do\n      local tmp = text[i]\n      text[i]\
    \ = text[j]\n      text[j] = tmp\n      i = i + 1\n      j = j - 1\n    end\n\
    \    return text\n  end\n  return reverse(text) == text\nend", "  text = text:lower()\n\
    \  local i, j = text:len(), text:len()\n  while i ~= 0 do\n    if text:sub(i,\
    \ i) ~= text:sub(j, j) then\n      return false\n    end\n    i = i - 1\n    j\
    \ = j - 1\n  end\n  return true\nend", "  local text = text:lower()\n  local i,\
    \ j = text:len(), text:len()\n  while i > 0 and j > 0 do\n    if text:sub(i, i)\
    \ ~= text:sub(j, j) then\n      return false\n    end\n    i = i - 1\n    j =\
    \ j - 1\n  end\n  return true\nend", "  local i, j = 1, #text\n  while i <= j\
    \ do\n    if text[i] ~= text[j] then\n      return false\n    end\n    i = i +\
    \ 1\n    j = j - 1\n  end\n  return true\nend", "  text = text:lower()\n  local\
    \ i = 0\n  local j = text:len()\n  while i < j do\n    if text:sub(i, i) ~= text:sub(j,\
    \ j) then\n      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n\
    \  return true\nend", "  local i, j = 1, #text\n  while i <= j do\n    if text[i]\
    \ ~= text[j] then\n      return false\n    end\n    i = i + 1\n    j = j - 1\n\
    \  end\n  return true\nend", "  local function reverse(text)\n    local reversed\
    \ = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed .. text:sub(i,\
    \ i)\n    end\n    return reversed\n  end\n  return reverse(text) == text\nend",
  "  local i, j = 1, #text\n  while i < j do\n    if text[i] ~= text[j] then\n   \
    \   return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i < j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local reversed = text:reverse()\n  return text == reversed\nend", " \
    \ local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n \
    \     return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local function reverse(text)\n    local reversed = \"\"\n    for i =\
    \ #text, 1, -1 do\n      reversed = reversed .. text[i]\n    end\n    return reversed\n\
    \  end\n  local function is_palindrome_helper(text, start, end)\n    if start\
    \ > end then\n      return true\n    end\n    if start == end then\n      return\
    \ text[start] == text[start] and is_palindrome_helper(text, start + 1, end - 1)\n\
    \    end\n    return text[start] == text[end] and is_palindrome_helper(text, start\
    \ + 1, end - 1)\n  end\n  return is_palindrome_helper(text, 1, #text - 1)\nend",
  "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n  \
    \    return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local i, j = 1, #text\n  while i < j do\n    if text[i] ~= text[j] then\n\
    \      return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local function reverse(text)\n    local reversed = \"\"\n    for i =\
    \ #text, 1, -1 do\n      reversed = reversed .. text:sub(i, i)\n    end\n    return\
    \ reversed\n  end\n  return reverse(text) == text\nend", "  local i, j = 1, #text\n\
    \  while i < j do\n    if text[i] ~= text[j] then\n      return false\n    end\n\
    \    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  text = text:lower()\n\
    \  local i, j = text:len(), text:len()\n  while i ~= 0 do\n    if text:sub(i,\
    \ i) ~= text:sub(j, j) then\n      return false\n    end\n    i = i - 1\n    j\
    \ = j - 1\n  end\n  return true\nend", "  local i, j = 1, #text\n  while i < j\
    \ do\n    if text[i] ~= text[j] then\n      return false\n    end\n    i = i +\
    \ 1\n    j = j - 1\n  end\n  return true\nend", "    local i, j = 1, #text\n \
    \   while i < j do\n        if text[i] ~= text[j] then\n            return false\n\
    \        end\n        i = i + 1\n        j = j - 1\n    end\n    return true\n\
    end", "  local reversed = text:reverse()\n  return text == reversed\nend", " \
    \ text = text:lower()\n  local i, j = text:len(), text:len()\n  while i > 0 and\
    \ j > 0 do\n    if text:sub(i, i) ~= text:sub(j, j) then\n      return false\n\
    \    end\n    i = i - 1\n    j = j - 1\n  end\n  return true\nend", "  local i,\
    \ j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n      return\
    \ false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\nend", " \
    \ local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n \
    \     return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local function reverse(text)\n    local reversed = \"\"\n    for i =\
    \ #text, 1, -1 do\n      reversed = reversed .. text:sub(i, i)\n    end\n    return\
    \ reversed\n  end\n  return reverse(text) == text\nend", "  text = text:lower()\n\
    \  local i, j = text:len(), text:len()\n  while i > 0 and j > 0 do\n    if text:sub(i,\
    \ i) ~= text:sub(j, j) then\n      return false\n    end\n    i = i - 1\n    j\
    \ = j - 1\n  end\n  return true\nend", "  local i, j = 1, #text\n  while i < j\
    \ do\n    if text[i] ~= text[j] then\n      return false\n    end\n    i = i +\
    \ 1\n    j = j - 1\n  end\n  return true\nend", "  local function reverse(text)\n\
    \    local reversed = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed\
    \ .. text:sub(i, i)\n    end\n    return reversed\n  end\n  return reverse(text)\
    \ == text\nend", "  local function reverse(text)\n    local result = \"\"\n  \
    \  for i = #text, 1, -1 do\n      result = result .. text:sub(i, i)\n    end\n\
    \    return result\n  end\n  return reverse(text) == text\nend", "  local i, j\
    \ = 1, #text\n  while i < j do\n    if text[i] ~= text[j] then\n      return false\n\
    \    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local function\
    \ reverse(text)\n    local i, j = 1, #text\n    while i < j do\n      local tmp\
    \ = text[i]\n      text[i] = text[j]\n      text[j] = tmp\n      i = i + 1\n \
    \     j = j - 1\n    end\n    return text\n  end\n  return reverse(text) == text\n\
    end", "  local function reverse(text)\n    local reversed = \"\"\n    for i =\
    \ #text, 1, -1 do\n      reversed = reversed .. text:sub(i, i)\n    end\n    return\
    \ reversed\n  end\n  return reverse(text) == text\nend", "  local i, j = 1, #text\n\
    \  while i < j do\n    if text[i] ~= text[j] then\n      return false\n    end\n\
    \    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local function reverse(text)\n\
    \    local reversed = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed\
    \ .. text[i]\n    end\n    return reversed\n  end\n  return reverse(text) == text\n\
    end", "    local i, j = 1, #text\n    while i <= j do\n        if text[i] ~= text[j]\
    \ then\n            return false\n        end\n        i = i + 1\n        j =\
    \ j - 1\n    end\n    return true\nend", "  local i, j = 1, #text\n  while i <\
    \ j do\n    if text[i] ~= text[j] then\n      return false\n    end\n    i = i\
    \ + 1\n    j = j - 1\n  end\n  return true\nend", "  local function reverse(text)\n\
    \    local i, j = 1, #text\n    while i < j do\n      local tmp = text[i]\n  \
    \    text[i] = text[j]\n      text[j] = tmp\n      i = i + 1\n      j = j - 1\n\
    \    end\n    return text\n  end\n  local text = text:lower()\n  local i, j =\
    \ 1, #text\n  while i < j do\n    if text[i] ~= text[j] then\n      return false\n\
    \    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local i,\
    \ j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n      return\
    \ false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\nend", " \
    \ local reversed_text = text:reverse()\n  return text == reversed_text\nend",
  "  local i, j = 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n  \
    \    return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local text = text:lower()\n  local i, j = text:len(), text:len()\n  while\
    \ i ~= 0 do\n    if text:sub(i, i) ~= text:sub(j, j) then\n      return false\n\
    \    end\n    i = i - 1\n    j = j - 1\n  end\n  return true\nend", "  local function\
    \ reverse(text)\n    local reversed = \"\"\n    for i = #text, 1, -1 do\n    \
    \  reversed = reversed .. text[i]\n    end\n    return reversed\n  end\n  local\
    \ function is_palindrome_helper(text, start, end)\n    if start > end then\n \
    \     return true\n    end\n    if start == end then\n      return text[start]\
    \ == text[start]\n    end\n    return is_palindrome_helper(text, start + 1, end\
    \ - 1) and\n      is_palindrome_helper(text, start + 1, end - 1) and\n      text[start]\
    \ == text[end] and\n      reverse(text) == reverse(text)\n  end\n  return is_palindrome_helper(text,\
    \ 1, #text)\nend", "  text = text:lower()\n  local i, j = text:len(), text:len()\n\
    \  while i > 0 and j > 0 do\n    if text:sub(i, i) ~= text:sub(j, j) then\n  \
    \    return false\n    end\n    i = i - 1\n    j = j - 1\n  end\n  return true\n\
    end", "  local function reverse(text)\n    local reversed = \"\"\n    for i =\
    \ #text, 1, -1 do\n      reversed = reversed .. text:sub(i, i)\n    end\n    return\
    \ reversed\n  end\n  return reverse(text) == text\nend", "  local i, j = 1, #text\n\
    \  while i < j do\n    if text[i] ~= text[j] then\n      return false\n    end\n\
    \    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local i, j = 1,\
    \ #text\n  while i <= j do\n    if text[i] ~= text[j] then\n      return false\n\
    \    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local function\
    \ reverse(text)\n    local reversed = \"\"\n    for i = #text, 1, -1 do\n    \
    \  reversed = reversed .. text:sub(i, i)\n    end\n    return reversed\n  end\n\
    \  return reverse(text) == text\nend", "  local i, j = 1, #text\n  while i <=\
    \ j do\n    if text[i] ~= text[j] then\n      return false\n    end\n    i = i\
    \ + 1\n    j = j - 1\n  end\n  return true\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

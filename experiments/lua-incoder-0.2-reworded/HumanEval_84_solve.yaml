name: HumanEval_84_solve
language: lua
prompt: "-- Given a positive integer N, return the total sum of its digits in binary.\n\
  -- Example\n-- >>> solve(1000)\n-- '1'\n-- >>> solve(150)\n-- '110'\n-- >>> solve(147)\n\
  -- '1100'\n-- Variables:\n-- @N integer\n-- Constraints: 0 \u2264 N \u2264 10000.\n\
  -- Output:\n-- a string of binary number\nlocal function solve(N)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = solve\n\
  \    lu.assertEquals(candidate(1000), '1')\n    lu.assertEquals(candidate(150),\
  \ '110')\n    lu.assertEquals(candidate(147), '1100')\n    lu.assertEquals(candidate(333),\
  \ '1001')\n    lu.assertEquals(candidate(963), '10010')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local s = ''\n  local n = 1\n  while n <= N do\n    local m = math.floor(math.log(n,\
    \ 2))\n    s = s .. string.format('%d', math.floor(n/math.pow(2,m)))\n    n =\
    \ n*2\n  end\n  return s\nend", "  local s = ''\n  local i = 1\n  while i <= N\
    \ do\n    local t = math.floor((N / i) * 2)\n    s = s .. string.format('%0*d',\
    \ t, i)\n    i = i + 1\n  end\n  return s\nend", "  local sum = 0\n  local i =\
    \ 1\n  while i <= N do\n    sum = sum + math.floor((N % i) / 2)\n    i = i + 1\n\
    \  end\n  return sum\nend", "    local s = ''\n    while N > 0 do\n        local\
    \ t = math.floor(math.log2(N))\n        s = s .. tostring(math.pow(2, t))\n  \
    \      N = math.floor(N / math.pow(2, t))\n    end\n    return s\nend", "  local\
    \ s = ''\n  local i = 1\n  while i <= N do\n    local t = math.floor((N - i) /\
    \ 2)\n    s = s .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1'\
    \ .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0'\
    \ .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1'\
    \ .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0'\
    \ .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1'\
    \ .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0'\
    \ .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1'\
    \ .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0'\
    \ .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1'\
    \ .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0'\
    \ .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1'\
    \ .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0'\
    \ .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1'\
    \ .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0'\
    \ .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '1' .. '0' .. '", "  local s =\
    \ ''\n  while N > 0 do\n    local t = math.floor(math.log2(N))\n    s = s .. string.char(N\
    \ % (2 ^ t))\n    N = N / 2 ^ t\n  end\n  return s\nend", "  local sum = 0\n \
    \ local i = 1\n  while i <= N do\n    sum = sum + math.floor((N % i) / 2)\n  \
    \  i = i + 1\n  end\n  return sum\nend", "  local s = ''\n  while N > 0 do\n \
    \   local digit = math.floor(math.log2(N))\n    s = s .. tostring(digit)\n   \
    \ N = math.floor(N / 2)\n  end\n  return s\nend", "  local s = ''\n  local i =\
    \ 1\n  while i <= N do\n    local t = math.floor((N % i) / 2)\n    s = s .. '1'\
    \ .. t\n    N = N - t\n    i = i + 1\n  end\n  return s\nend", "  local result\
    \ = ''\n  local remainder = N % 2\n  local sum = 0\n  while N > 0 do\n    sum\
    \ = sum + N % 2\n    N = N / 2\n  end\n  result = result .. tostring(sum)\n  if\
    \ remainder == 1 then\n    result = result .. '0'\n  end\n  return result\nend",
  "  local sum = 0\n  local i = 1\n  while i <= N do\n    sum = sum + math.floor((N\
    \ % i) / 2)\n    i = i + 1\n  end\n  return sum\nend", "  local s = ''\n  while\
    \ N > 0 do\n    local t = math.floor(math.log2(N))\n    s = s .. tostring(N %\
    \ 2^(t - 1))\n    N = N / 2^(t - 1)\n  end\n  return s\nend", "  local s = ''\n\
    \  while N > 0 do\n    local digit = math.floor(math.log2(N))\n    s = string.format('%s%d',\
    \ s, digit)\n    N = N - math.pow(10, digit)\n  end\n  return s\nend", "    local\
    \ s = ''\n    local i = 0\n    while i < N do\n        local t = math.floor(math.pow(10,\
    \ i) * N)\n        s = s .. tostring(t % 2)\n        i = i + 1\n    end\n    return\
    \ s\nend", "  local s = ''\n  local n = 1\n  while n > 0 do\n    local m = math.floor(math.log(n,\
    \ 2))\n    s = s .. string.sub(tostring(N), m, m)\n    n = math.floor((N - m)\
    \ / 2)\n  end\n  return s\nend", "  local sum = 0\n  local i = 1\n  while i <=\
    \ N do\n    sum = sum + math.floor((N % i) / 2)\n    i = i + 1\n  end\n  return\
    \ sum\nend", "  local result = ''\n  local remainder = 0\n  while N > 0 do\n \
    \   remainder = N % 2\n    N = N / 2\n    result = string.format('%s%d', result,\
    \ remainder)\n  end\n  return result\nend", "  local s = ''\n  local n = 0\n \
    \ while N > 0 do\n    local digit = math.floor(math.log2(N))\n    local bin =\
    \ string.sub(tostring(N), digit, digit+1)\n    s = s .. bin\n    N = N / 2\n \
    \   n = n + 1\n  end\n  return s\nend", "    local s = ''\n    local carry = 0\n\
    \    local digit = 0\n    while N ~= 0 do\n        digit = N % 2\n        N =\
    \ N / 2\n        if digit == 1 then\n            s = s .. '1'\n        else\n\
    \            s = s .. '0'\n        end\n        carry = digit + carry\n    end\n\
    \    if carry > 0 then\n        s = s .. '1'\n    end\n    return s\nend", " \
    \   local ans = \"\"\n    for i = 1, N do\n        local bin = dec2bin(i)\n  \
    \      local sum = 0\n        for j = 1, #bin do\n            sum = sum + bin:sub(1,\
    \ j):byte()\n        end\n        ans = ans .. sum\n    end\n    return ans\n\
    end", "    local s = ''\n    local i = 1\n    while i <= N do\n        if N %\
    \ i == 0 then\n            s = s .. '1'\n            N = N / i\n        else\n\
    \            s = s .. '0'\n        end\n        i = i + 1\n    end\n    return\
    \ s\nend", "  local result = ''\n  local digits = math.floor(math.log10(N))\n\
    \  local power = math.pow(10, digits)\n  local sum = 0\n  local remainder\n  while\
    \ N > 0 do\n    sum = sum + math.floor((N % power) / power)\n    N = math.floor(N\
    \ / power)\n  end\n  remainder = math.floor(N / power)\n  if remainder > 0 then\n\
    \    sum = sum + remainder\n  end\n  result = result .. tostring(sum)\n  return\
    \ result\nend", "  -- Base case\n  if N == 0 then\n    return '0'\n  end", " \
    \   local result = ''\n    local digits = math.floor(math.log(N)/math.log(2))\n\
    \    for i = 1, digits do\n        local digit = math.floor((N % math.pow(2,i))/math.pow(2,i-1))\n\
    \        result = result .. digit\n    end\n    return result\nend", "    local\
    \ result = ''\n    local remainder = 0\n    local sum = 0\n    while N > 0 do\n\
    \        remainder = N % 2\n        sum = sum + remainder\n        N = N / 2\n\
    \    end\n    if sum > 0 then\n        result = result .. '1' .. tostring(sum)\n\
    \    end\n    return result\nend", "  local s = ''\n  while N > 0 do\n    local\
    \ t = math.floor(math.log2(N))\n    s = s .. string.char(N % (2 ^ t))\n    N =\
    \ N / (2 ^ t)\n  end\n  return s\nend", "    local s = ''\n    while N > 0 do\n\
    \        local t = math.floor(math.log2(N))\n        s = s .. '1' .. math.floor((N\
    \ / 2 ** t) % 2)\n        N = math.floor((N / 2 ** t) / 2)\n    end\n    return\
    \ s\nend", "    local s = ''\n    local i = 1\n    while i <= N do\n        local\
    \ t = math.floor((N / i) * 2)\n        s = s .. string.format('%d', t)\n     \
    \   i = i + 1\n    end\n    return s\nend", "    local s = ''\n    local i = 1\n\
    \    while i <= N do\n        local t = math.floor((N % i) / 2)\n        s = s\
    \ .. string.format('%d', t)\n        i = i + 1\n    end\n    return s\nend", " \
    \ local s = ''\n  local i = 1\n  while i <= N do\n    s = s .. tostring(math.floor((N\
    \ / i) * 2)) .. '1'\n    i = i * 2\n  end\n  return s\nend", "  local sum = 0\n\
    \  local i = 1\n  while i <= N do\n    sum = sum + math.floor((N % i) / 2)\n \
    \   i = i + 1\n  end\n  return sum\nend", "  local sum = 0\n  local result = \"\
    \"\n  repeat\n    sum = sum + math.floor((math.log2(N) + 1))\n    result = result\
    \ .. \"1\" .. tostring(sum)\n    N = N / 2\n  until N == 0\n  return result\n\
    end", "  local s = ''\n  local i = 1\n  while i <= N do\n    s = s .. tostring(math.floor((N\
    \ % i) / i))\n    i = i + 1\n  end\n  return s\nend", "  -- Base case\n  if N\
    \ == 0 then\n    return '0'\n  end", "  local s = ''\n  local n = 1\n  while n\
    \ <= N do\n    local m = math.floor(math.log(n, 2))\n    s = s .. string.format('%d',\
    \ math.floor(n/math.pow(2,m)))\n    n = math.floor(n/math.pow(2,m))\n  end\n \
    \ return s\nend", "  -- Base case\n  if N == 0 then\n    return '0'\n  end\n \
    \ -- Recursive case\n  local digits = math.floor(math.log(N, 2))\n  local result\
    \ = solve(N / math.pow(10, digits))\n  -- Add the last digit\n  result = result\
    \ .. '1' .. math.floor(N % math.pow(10, digits))\n  return result\nend", "  local\
    \ result = ''\n  local digits = math.floor(math.log(N)/math.log(2))\n  for i =\
    \ 1, digits do\n    local digit = math.floor((N % math.pow(2,i))/math.pow(2,i-1))\n\
    \    local binary = tostring(digit)\n    local remainder = math.floor(N / math.pow(2,i))\n\
    \    if remainder > 0 then\n      binary = binary .. tostring(remainder)\n   \
    \ end\n    result = result .. binary\n  end\n  return result\nend", "    local\
    \ s = ''\n    while N > 0 do\n        local n = math.floor(N / 2)\n        s =\
    \ s .. '1' if n % 2 == 0 else '0'\n        N = N - n\n    end\n    return s\n\
    end", "  local s = ''\n  local i = 1\n  while i <= N do\n    local t = math.floor((N\
    \ - i) / 2)\n    s = s .. '1' .. '0' .. s\n    i = i + t\n  end\n  return s\n\
    end", "  local s = ''\n  local i = 1\n  while i <= N do\n    local t = math.floor(math.log(i)\
    \ / math.log(2))\n    s = s .. string.format('%d', math.floor(i/math.pow(2, t)))\n\
    \    i = math.floor(i/math.pow(2, t) + 1)\n  end\n  return s\nend", "    local\
    \ s = ''\n    local n = 1\n    while n > 0 do\n        if N % 2 == 0 then\n  \
    \          s = s .. '1'\n            N = N / 2\n        else\n            s =\
    \ s .. '0'\n            N = N / 2\n        end\n        n = n + 1\n    end\n \
    \   return s\nend", "    local s = ''\n    local n = 1\n    while n > 0 do\n \
    \       if N % 2 == 1 then\n            s = s .. '1'\n            N = N / 2\n\
    \        else\n            s = s .. '0'\n            N = N / 2\n        end\n\
    \        n = n + 1\n    end\n    return s\nend", "  local s = ''\n  while N >\
    \ 0 do\n    local digit = math.floor(math.log2(N))\n    s = s .. tostring(digit)\n\
    \    N = math.floor(N / 2)\n  end\n  return s\nend", "  local result = ''\n  local\
    \ digits = math.floor(math.log(N) / math.log(2))\n  local power = math.pow(2,digits)\n\
    \  local sum = 0\n  while N > 0 do\n    sum = sum + math.floor((N % power) / power)\n\
    \    N = math.floor(N/power)\n  end\n  result = result .. tostring(sum)\n  return\
    \ result\nend", "  local s = ''\n  while N > 0 do\n    local t = math.floor(math.log2(N))\n\
    \    s = s .. '1' .. math.floor((N - math.pow(2, t)) / (math.pow(2, t)))\n   \
    \ N = math.pow(2, t)\n  end\n  return s\nend", "    local s = ''\n    local n\
    \ = 1\n    while n <= N do\n        local m = math.floor(n/2)\n        s = s ..\
    \ '1' if n % 2 == 0 else '0'\n        n = m\n    end\n    return s\nend", "  --\
    \ base case\n  if N == 0 then\n    return '0'\n  end\n  -- recursive case\n  local\
    \ digits = math.floor(math.log(N) / math.log(2))\n  local result = solve(N - math.pow(N,\
    \ digits))\n  -- append the digit\n  result = result .. '1' .. math.floor(N /\
    \ math.pow(10, digits))\n  return result\nend", "    local sum = 0\n    local\
    \ n = 0\n    while N > 0 do\n        sum = sum + math.floor((N % 2) / 2)\n   \
    \     N = math.floor(N / 2)\n        n = n + 1\n    end\n    return sum\nend",
  "    local s = ''\n    while N > 0 do\n        local t = math.floor(math.log2(N))\n\
    \        s = s .. tostring(2^t)\n        N = N - 2^t\n    end\n    return s\n\
    end", "    local s = ''\n    while N > 0 do\n        local n = math.floor(N /\
    \ 2)\n        s = s .. '1' if n >= 1 else '0'\n        N = N - n\n    end\n  \
    \  return s\nend", "  local s = ''\n  local n = 0\n  while N > 0 do\n    local\
    \ m = math.floor(math.log2(N))\n    s = s .. string.sub('0', m, m)\n    N = N\
    \ / 2\n    n = n + 1\n  end\n  return s\nend", "  local result = ''\n  local digits\
    \ = math.floor(math.log(N) / math.log(2))\n  local power = math.pow(2,digits)\n\
    \  local sum = 0\n  while N > 0 do\n    sum = sum + math.floor((N % power) / power)\n\
    \    N = math.floor(N/power)\n  end\n  result = result .. tostring(sum)\n  return\
    \ result\nend", "    local result = ''\n    local i = 1\n    while i <= N do\n\
    \        result = result .. tostring(math.floor((N % i) / i))\n        i = i +\
    \ 1\n    end\n    return result\nend", "  local s = ''\n  local t = math.floor(math.log(N)/math.log(2))\n\
    \  while t > 0 do\n    s = s .. tostring(N % 2)\n    N = N/2\n    t = t-1\n  end\n\
    \  return s\nend", "  local s = ''\n  local i = 1\n  while i <= N do\n    local\
    \ t = math.floor((N % i) / 2)\n    s = s .. t\n    N = N - t * i\n    i = i +\
    \ 1\n  end\n  return s\nend", "  local result = ''\n  local remainder = 0\n  local\
    \ sum = 0\n  while N > 0 do\n    sum = sum + math.floor((N % 2) / 2)\n    N =\
    \ math.floor(N / 2)\n  end\n  result = result .. tostring(sum)\n  while N > 0\
    \ do\n    remainder = math.floor((N % 2) / 2)\n    result = result .. tostring(remainder)\n\
    \    N = math.floor(N / 2)\n  end\n  return result\nend", "    local ans = \"\"\
    \n    local i = 1\n    while i <= N do\n        local digit = math.floor(math.log(i)\
    \ / math.log(2))\n        ans = ans .. \"1\" .. math.abs(digit - math.floor(digit))\n\
    \        i = i * 2\n    end\n    return ans\nend", "    local s = ''\n    while\
    \ N > 0 do\n        local t = math.floor(math.log2(N))\n        s = s .. '1' ..\
    \ math.floor((N / 2 ** t) % 2)\n        N = N / 2 ** t\n    end\n    return s\n\
    end", "  local s = ''\n  local i = 1\n  while i <= N do\n    local t = math.floor(i/10)\n\
    \    s = s .. t\n    i = i - t*10\n  end\n  return s\nend", "    local s = ''\n\
    \    local n = 1\n    while n > 0 do\n        local m = math.floor(math.log(n,\
    \ 2))\n        s = s .. string.format('%d', math.floor(n/math.pow(2, m)))\n  \
    \      n = math.floor(n/math.pow(2, m))\n    end\n    return s\nend", "    local\
    \ s = ''\n    while N > 0 do\n        local n = math.floor(math.log2(N))\n   \
    \     s = s .. string.sub(tostring(n), 1, 1)\n        N = N / 2\n    end\n   \
    \ return s\nend", "    local s = ''\n    local t = N\n    while t > 0 do\n   \
    \     local digit = math.floor(t/10)\n        s = string.format('%s%d%s', s, digit,\
    \ s)\n        t = t - 10*digit\n    end\n    return s\nend", "    local s = ''\n\
    \    local i = 1\n    while i <= N do\n        local t = math.floor((N / i) *\
    \ 2)\n        s = s .. tostring(t % 2)\n        i = i + 1\n    end\n    return\
    \ s\nend", "  local s = ''\n  local i = 1\n  while i <= N do\n    local t = math.floor((N\
    \ / i) * 2)\n    s = s .. string.format('%d', t)\n    i = i + 1\n  end\n  return\
    \ s\nend", "  local s = ''\n  local n = 0\n  while N > 0 do\n    local m = math.floor(math.log2(N))\n\
    \    local digit = math.floor(N / math.pow(2, m))\n    N = N - digit*math.pow(2,\
    \ m)\n    s = s .. digit\n    n = n + digit\n  end\n  return s .. '0'\nend", " \
    \ local sum = 0\n  local digits = math.floor(math.log(N)/math.log(2))\n  for i\
    \ = 1, digits do\n    sum = sum + math.floor((N % math.pow(2,i))/math.pow(2,i))\n\
    \  end\n  return sum\nend", "    local sum = 0\n    while N > 0 do\n        sum\
    \ = sum + N % 2\n        N = N / 2\n    end\n    return sum\nend", "  local sum\
    \ = 0\n  local num = 0\n  while N > 0 do\n    sum = sum + math.floor((N % 10)\
    \ * math.pow(2, num))\n    N = math.floor(N / 10)\n    num = num + 1\n  end\n\
    \  return sum\nend", "  local ans = ''\n  local sum = 0\n  while N > 0 do\n  \
    \  sum = sum + math.floor((N % 10) * 2)\n    N = math.floor(N/10)\n  end\n  ans\
    \ = ans .. sum\n  return ans\nend", "  local s = ''\n  while N > 0 do\n    local\
    \ digit = math.floor(math.log2(N))\n    s = s .. string.char(digit)\n    N = math.floor(N\
    \ / 2)\n  end\n  return s\nend", "  local s = ''\n  local t = N\n  while t > 0\
    \ do\n    local m = math.floor(t / 2)\n    s = string.format('%s%d%s', s, m, solve(m))\n\
    \    t = t % 2\n  end\n  return s\nend", "  local result = ''\n  local N1 = N\
    \ / 2\n  local N2 = N % 2\n  local N3 = N / 10\n  local N4 = N % 10\n  local N5\
    \ = N / 100\n  local N6 = N % 100\n  local N7 = N / 1000\n  local N8 = N % 1000\n\
    \  local N9 = N / 10000\n  local N10 = N % 10000\n  local N11 = N / 100000\n \
    \ local N12 = N % 100000\n  local N13 = N / 1000000\n  local N14 = N % 1000000\n\
    \  local N15 = N / 10000000\n  local N16 = N % 10000000\n  local N17 = N / 100000000\n\
    \  local N18 = N % 100000000\n  local N19 = N / 1000000000\n  local N20 = N %\
    \ 1000000000\n  local N21 = N / 10000000000\n  local N22 = N % 10000000000\n \
    \ local N23 = N / 100000000000\n  local N24 = N % 100000000000\n  local N25 =\
    \ N / 1000000000000\n  local N26 = N % 1000000000000\n  local N27 = N / 10000000000000\n\
    \  local N28 = N % 10000000000000\n  local N29 = N / 100000000000000\n  local\
    \ N30 = N % 100000000000000\n  local N31 = N / 1000000000000000\n  local N32 =\
    \ N % 1000000000000000\n  local N33 = N / 10000000000000000\n  local N34 = N %\
    \ 10000000000000000\n  local N35 = N / 100000000000000000\n  local N36 = N % 100000000000000000\n\
    \  local N37 = N / 1000000000000000000\n  local N38 = N % 1000000000000000000\n\
    \  local N39 = N / 10000000000000000000\n  local N40 = N % 10000000000000000000\n\
    \  local N41 = N / 100000000000000000000\n  local N42 = N % 100000000000000000000\n\
    \  local N43 = N / 1000000000000000000000\n  local N44 = N % 1000000000000000000000\n\
    \  local N45 = N / 10000000000000000000000\n  local N46 = N % 10000000000000000000000\n\
    \  local N47 = N / 100000000000000000000000\n  local N48 = N % 100000000000000000000000\n\
    \  local N49 = N / 1000000000000000000000000\n  local N50 = N % 1000000000000000000000000\n\
    \  local N51 = N / ", "    local s = ''\n    local n = 1\n    while n > 0 do\n\
    \        local m = math.floor(math.log(n, 2))\n        s = s .. string.format('%d',\
    \ math.floor(n/math.pow(2, m)))\n        n = math.floor(n/math.pow(2, m))\n  \
    \  end\n    return s\nend", "    local s = ''\n    while N > 0 do\n        local\
    \ t = math.floor(math.log2(N))\n        s = s .. tostring(2^t)\n        N = N\
    \ - 2^t\n    end\n    return s\nend", "    local result = ''\n    local n = 0\n\
    \    while N > 0 do\n        local digit = math.floor(N / 2)\n        N = N -\
    \ digit\n        result = digit .. result\n    end\n    return result\nend", " \
    \ local s = ''\n  while N > 0 do\n    local digit = math.floor(math.log2(N))\n\
    \    s = s .. string.char(digit)\n    N = math.floor(N / 2)\n  end\n  return s\n\
    end", "    local s = ''\n    local n = 1\n    while n > 0 do\n        if N % 2\
    \ == 0 then\n            s = s .. '1'\n            N = N / 2\n        else\n \
    \           s = s .. '0'\n            N = N / 2\n        end\n        n = n +\
    \ 1\n    end\n    return s\nend", "  local s = ''\n  while N > 0 do\n    local\
    \ t = math.floor(math.log2(N))\n    s = s .. string.sub('0', t, t)\n    N = N\
    \ - math.pow(2, t)\n  end\n  return s\nend", "  local s = ''\n  local n = 1\n\
    \  while n > 0 do\n    local m = math.floor(math.log(n, 2))\n    s = s .. string.format('%d',\
    \ math.floor(n/math.pow(2,m)))\n    n = math.floor(n/math.pow(2,m))\n  end\n \
    \ return s\nend", "  local sum = 0\n  local i = 1\n  while i <= N do\n    sum\
    \ = sum + math.floor((N % i) / 2)\n    i = i + 1\n  end\n  return sum\nend", " \
    \   local ans = ''\n    local sum = 0\n    while N > 0 do\n        sum = sum +\
    \ N % 2\n        N = N / 2\n    end\n    ans = ans .. tostring(sum)\n    return\
    \ ans\nend", "  local s = ''\n  local t = N\n  while t > 0 do\n    local digit\
    \ = t % 2\n    s = string.format('%s%d%s', s, digit, s)\n    t = math.floor(t\
    \ / 2)\n  end\n  return s\nend", "    local sum = 0\n    while N > 0 do\n    \
    \    sum = sum + math.floor((N % 2) / 2)\n        N = math.floor(N / 2)\n    end\n\
    \    return sum\nend", "    local s = ''\n    local t = N\n    while t > 0 do\n\
    \        local m = math.floor(t / 2)\n        s = string.format('%s%d', s, m)\n\
    \        t = t - m * 2\n    end\n    return s\nend", "  local s = ''\n  local\
    \ n = 0\n  while N > 0 do\n    local m = math.floor(math.log(N) / math.log(2))\n\
    \    s = s .. string.sub(N,1,m) .. '1'\n    N = N - m * math.log(2)\n    n = n\
    \ + 1\n  end\n  return s\nend", "  local s = ''\n  local t = N\n  while t > 0\
    \ do\n    local r = math.floor(t/2)\n    s = s .. string.format('%d', r) .. '0'\n\
    \    t = r\n  end\n  return s\nend", "  local s = ''\n  local i = 1\n  while i\
    \ <= N do\n    local t = math.floor(math.log(i) / math.log(2))\n    s = s .. string.format('%d',\
    \ math.floor(i/2**t))\n    i = i * 2**t\n  end\n  return s\nend", "    local ans\
    \ = \"\"\n    local sum = 0\n    while N > 0 do\n        sum = sum + math.floor((N\
    \ % 10) * 2)\n        N = math.floor(N/10)\n    end\n    ans = ans .. math.floor(sum\
    \ / 2)\n    return ans\nend", "    local s = ''\n    local i = 1\n    while i\
    \ <= N do\n        local t = math.floor((N % i) / 2)\n        s = s .. t\n   \
    \     i = i + 1\n    end\n    return s\nend", "    local s = ''\n    local t =\
    \ N\n    while t > 0 do\n        local remainder = math.floor(t/2)\n        s\
    \ = string.format('%s%d', s, remainder)\n        t = t - remainder*2\n    end\n\
    \    return s\nend", "  local s = ''\n  local n = 0\n  while N > 0 do\n    local\
    \ m = math.floor(math.log2(N))\n    s = s .. string.format('%d', math.pow(2, m))\n\
    \    N = math.floor(N / math.pow(2, m))\n    n = n + 1\n  end\n  return s\nend",
  "    local s = ''\n    local t = 1\n    local i = 1\n    while i <= N do\n     \
    \   if N % i == 0 then\n            s = s .. t\n            N = N / i\n      \
    \      t = 1\n        else\n            t = t * 2\n        end\n        i = i\
    \ + 1\n    end\n    return s\nend", "    local sum = 0\n    local i = 0\n    local\
    \ result = ''\n    while N > 0 do\n        sum = sum + math.floor((N % 10) * 2)\n\
    \        N = math.floor(N / 10)\n        i = i + 1\n        if i == 8 then\n \
    \           result = result .. '1'\n            i = 0\n        end\n    end\n\
    \    if i == 0 then\n        result = result .. '0'\n    end\n    return result\n\
    end", "  local sum = 0\n  local i = 1\n  while i <= N do\n    sum = sum + math.floor((N\
    \ % i) / 2)\n    i = i + 1\n  end\n  return sum\nend", "  local sum = 0\n  local\
    \ i = 1\n  while i <= N do\n    sum = sum + math.floor((N % i) / 2)\n    i = i\
    \ + 1\n  end\n  return sum\nend", "  local sum = 0\n  local i = 1\n  while i <=\
    \ N do\n    sum = sum + math.floor((N % i) / 2)\n    i = i + 1\n  end\n  return\
    \ sum\nend", "  local s = ''\n  local i = 1\n  while i <= N do\n    local t =\
    \ math.floor((N % i) / 2)\n    s = s .. t\n    N = N - t * i\n    i = i + 1\n\
    \  end\n  return s\nend", "    local s = ''\n    while N > 0 do\n        local\
    \ remainder = N % 2\n        N = N / 2\n        s = string.format('%s%s', s, remainder)\n\
    \    end\n    return s\nend", "  local s = ''\n  local n = 1\n  while n > 0 do\n\
    \    local m = math.floor(math.log(n, 2))\n    s = s .. string.format('%d', math.floor(n/math.pow(2,m)))\n\
    \    n = math.floor(n/math.pow(2,m))\n  end\n  return s\nend", "  local s = ''\n\
    \  local i = 1\n  while i <= N do\n    local t = math.floor(i/10)\n    s = s ..\
    \ t\n    i = i%10\n  end\n  return s\nend", "  local s = ''\n  local i = 1\n \
    \ while i <= N do\n    local t = math.floor((N % i) / 2)\n    s = s .. '1' ..\
    \ t .. '0'\n    N = N - t\n    i = i + 1\n  end\n  return s\nend", "  local s\
    \ = ''\n  local i = 0\n  while i < N do\n    i = i + 1\n    s = s .. tostring(N\
    \ % 2)\n    N = N / 2\n  end\n  return s\nend", "    local sum = 0\n    for i\
    \ = 1, N do\n        sum = sum + math.floor((N % 10) * (math.pow(2, i)))\n   \
    \     N = math.floor(N / 10)\n    end\n    return sum\nend", "    local s = ''\n\
    \    local t = N\n    while t > 0 do\n        local m = math.floor(t/10)\n   \
    \     s = string.format('%s%d', s, m)\n        t = t - m * 10\n    end\n    return\
    \ s\nend", "    local s = ''\n    while N > 0 do\n        local t = math.floor(math.log2(N))\n\
    \        s = s .. '1' .. math.floor((N - math.pow(2, t)) / math.pow(2, t))\n \
    \       N = math.pow(2, t)\n    end\n    return s\nend", "  local s = ''\n  local\
    \ carry = 0\n  local digit = 0\n  while N > 0 do\n    digit = N % 2\n    N = N\
    \ / 2\n    s = string.format('%s%d%s', s, digit, carry and '1' or '')\n    carry\
    \ = digit and 1 or 0\n  end\n  return s\nend", "    local sum = 0\n    local i\
    \ = 1\n    while i <= N do\n        sum = sum + math.floor((N % i) / 2)\n    \
    \    i = i + 1\n    end\n    return sum\nend", "    local sum = 0\n    while N\
    \ > 0 do\n        sum = sum + math.floor((N % 10) * 2)\n        N = math.floor(N\
    \ / 10)\n    end\n    return sum\nend", "    local s = ''\n    while N > 0 do\n\
    \        local t = math.floor(math.log2(N))\n        s = s .. string.sub('0',\
    \ t, t)\n        N = N / 2\n    end\n    return s\nend", "    local s = ''\n \
    \   local n = 1\n    while n > 0 do\n        if N <= n then\n            s = s\
    \ .. '1'\n            N = N - n\n        else\n            s = s .. '0'\n    \
    \        N = N - n\n        end\n        n = n + 1\n    end\n    return s\nend",
  "  local sum = 0\n  local n = 0\n  while N > 0 do\n    sum = sum + math.floor((N\
    \ % 10) * math.pow(2, n))\n    N = math.floor(N / 10)\n    n = n + 1\n  end\n\
    \  return sum\nend", "  local result = ''\n  local remainder = N\n  while remainder\
    \ > 0 do\n    local digit = remainder % 2\n    remainder = remainder / 2\n   \
    \ result = digit .. result\n  end\n  return result\nend", "    local sum = 0\n\
    \    local i = 0\n    while N > 0 do\n        sum = sum + math.floor((N % 10)\
    \ * math.pow(2, i))\n        i = i + 1\n        N = math.floor(N / 10)\n    end\n\
    \    return sum\nend", "    local s = ''\n    local t = math.floor(math.log2(N))\n\
    \    local i = 0\n    while i <= t do\n        s = s .. tostring(N % (2 ** i))\n\
    \        i = i + 1\n    end\n    return s\nend", "  local result = ''\n  local\
    \ carry = 0\n  local digit = 0\n  local i = 0\n  while i < N do\n    digit = N\
    \ % 2\n    N = N / 2\n    if digit == 1 then\n      result = result .. '1'\n \
    \   else\n      result = result .. '0'\n    end\n    carry = digit + carry\n \
    \   i = i + 1\n  end\n  if carry > 0 then\n    result = result .. '1'\n  end\n\
    \  return result\nend", "    local s = ''\n    while N > 0 do\n        local n\
    \ = math.floor(N / 2)\n        s = s .. string.format('%d', n)\n        N = N\
    \ - n\n    end\n    return s\nend", "  local s = ''\n  while N > 0 do\n    local\
    \ digit = math.floor(N / 2)\n    s = string.format('%s%d', s, digit)\n    N =\
    \ N - digit\n  end\n  return s\nend", "  -- Base case\n  if N == 0 then\n    return\
    \ \"0\"\n  end\n  -- Recursive case\n  local binary = \"\"\n  local remainder\
    \ = N\n  while remainder > 0 do\n    local digit = remainder % 2\n    remainder\
    \ = remainder / 2\n    binary = binary .. digit\n  end\n  return binary\nend",
  "  local s = ''\n  while N > 0 do\n    local n = math.floor(N / 2)\n    s = s ..\
    \ string.format('%d', n)\n    N = N - n\n  end\n  return s\nend", "  local s =\
    \ ''\n  while N > 0 do\n    local t = math.floor(math.log2(N))\n    s = s .. tostring(N\
    \ % 2^(t - 1))\n    N = N / 2^(t - 1)\n  end\n  return s\nend", "    local s =\
    \ ''\n    local n = 1\n    while n <= N do\n        local m = math.floor(math.log(n,\
    \ 2))\n        s = s .. '0' .. math.floor(n/math.pow(2,m))\n        n = math.floor(n/math.pow(2,m))\n\
    \    end\n    return s\nend", "  local s = ''\n  while N > 0 do\n    local digit\
    \ = math.floor(math.log2(N))\n    s = s .. tostring(digit)\n    N = N - math.pow(2,digit)\n\
    \  end\n  return s\nend", "    local s = ''\n    local i = 1\n    while i <= N\
    \ do\n        local t = math.floor((N % i) / 2)\n        s = s .. '1' .. t ..\
    \ '0'\n        i = i + 1\n    end\n    return s\nend", "  local s = ''\n  while\
    \ N > 0 do\n    local remainder = N % 2\n    N = N / 2\n    s = string.format('%s%d',\
    \ s, remainder)\n  end\n  return s\nend", "  local s = ''\n  while N > 0 do\n\
    \    local t = math.floor(math.log2(N))\n    s = s .. string.sub('0', t, t)\n\
    \    N = N - math.pow(2, t)\n  end\n  return s\nend", "    local sum = 0\n   \
    \ local i = 0\n    while i < N do\n        sum = sum + math.floor((N % 10) * math.pow(2,\
    \ i))\n        i = i + 1\n    end\n    return sum\nend", "  local result = ''\n\
    \  local carry = 0\n  local digit = 0\n  local N1 = N\n  while N1 ~= 0 do\n  \
    \  digit = N1 % 10\n    carry = digit + carry\n    N1 = N1 / 10\n  end\n  if carry\
    \ > 0 then\n    result = result .. carry .. '1'\n  end\n  return result\nend",
  "  -- Base case\n  if N == 1 then\n    return '1'\n  end", "    local s = ''\n \
    \   local i = 1\n    while i <= N do\n        local t = math.floor((N - i) / 2)\n\
    \        s = s .. '1' .. '0' .. s\n        i = t\n    end\n    return s\nend",
  "    local s = ''\n    local i = 1\n    while i <= N do\n        local t = math.floor((N\
    \ / i) * 2)\n        s = s .. string.format('%d', t)\n        i = i + 1\n    end\n\
    \    return s\nend", "    local s = ''\n    local n = 0\n    while N ~= 0 do\n\
    \        local t = N % 2\n        s = string.format('%s%d', s, t)\n        N =\
    \ N / 2\n        n = n + 1\n    end\n    return s\nend", "  -- Base case\n  if\
    \ N == 0 then\n    return '0'\n  end", "  local s = ''\n  local t = N\n  while\
    \ t > 0 do\n    local digit = math.floor(t/10)\n    s = string.format('%s%d%s',\
    \ s, digit, s)\n    t = t % 10\n  end\n  return s\nend", "  local s = ''\n  local\
    \ carry = 0\n  local digit\n  for i = 1, N do\n    digit = math.floor((N % 10)\
    \ + carry)\n    carry = digit / 2\n    s = string.format('%s%d', s, digit)\n \
    \   N = N - digit\n  end\n  if carry > 0 then\n    s = string.format('%s%d', s,\
    \ carry)\n  end\n  return s\nend", "    local s = ''\n    while N > 0 do\n   \
    \     local remainder = N % 2\n        N = N / 2\n        s = string.format('%s%d',\
    \ s, remainder)\n    end\n    return s\nend", "    local s = ''\n    local i =\
    \ 0\n    while N > 0 do\n        local t = math.floor(math.log2(N))\n        s\
    \ = s .. '1' if t > i else '0' .. s\n        i = t\n        N = math.floor(N/2)\n\
    \    end\n    return s\nend", "  local ans = \"\"\n  local sum = 0\n  local i\
    \ = 1\n  while i <= N do\n    sum = sum + math.floor((N % i) / 2)\n    i = i +\
    \ 1\n  end\n  ans = ans .. sum\n  return ans\nend", "  local s = ''\n  while N\
    \ > 0 do\n    local t = math.floor(math.log2(N))\n    s = s .. '1' .. math.floor((N\
    \ - math.pow(2, t)) / (math.pow(2, t)))\n    N = math.pow(2, t)\n  end\n  return\
    \ s\nend", "    local s = ''\n    local carry = 0\n    for i = 1, N do\n     \
    \   local digit = math.floor((N % 10) + 0.5)\n        s = string.format('%s%d%s',\
    \ s, digit, carry > 0 and '1' or '')\n        N = N - digit\n        carry = math.floor((N\
    \ % 10) + 0.5)\n    end\n    return s\nend", "  local sum = 0\n  local i = 1\n\
    \  while i <= N do\n    sum = sum + math.floor((N % i) / 2)\n    i = i + 1\n \
    \ end\n  return sum\nend", "  local s = ''\n  while N > 0 do\n    local digit\
    \ = math.floor(N / 2)\n    s = string.format('%s%d%s', s, digit, N % 2 == 0 and\
    \ '1' or '0')\n    N = math.floor(N / 2)\n  end\n  return s\nend", "  local result\
    \ = ''\n  local N1 = N % 2\n  local N2 = N / 2\n  local N3 = N / 3\n  local N4\
    \ = N / 4\n  local N5 = N / 5\n  local N6 = N / 6\n  local N7 = N / 7\n  local\
    \ N8 = N / 8\n  local N9 = N / 9\n  local N10 = N / 10\n  local N11 = N / 11\n\
    \  local N12 = N / 12\n  local N13 = N / 13\n  local N14 = N / 14\n  local N15\
    \ = N / 15\n  local N16 = N / 16\n  local N17 = N / 17\n  local N18 = N / 18\n\
    \  local N19 = N / 19\n  local N20 = N / 20\n  local N21 = N / 21\n  local N22\
    \ = N / 22\n  local N23 = N / 23\n  local N24 = N / 24\n  local N25 = N / 25\n\
    \  local N26 = N / 26\n  local N27 = N / 27\n  local N28 = N / 28\n  local N29\
    \ = N / 29\n  local N30 = N / 30\n  local N31 = N / 31\n  local N32 = N / 32\n\
    \  local N33 = N / 33\n  local N34 = N / 34\n  local N35 = N / 35\n  local N36\
    \ = N / 36\n  local N37 = N / 37\n  local N38 = N / 38\n  local N39 = N / 39\n\
    \  local N40 = N / 40\n  local N41 = N / 41\n  local N42 = N / 42\n  local N43\
    \ = N / 43\n  local N44 = N / 44\n  local N45 = N / 45\n  local N46 = N / 46\n\
    \  local N47 = N / 47\n  local N48 = N / 48\n  local N49 = N / 49\n  local N50\
    \ = N / 50\n  local N51 = N / 51;\n  local N52 = N / 52;\n  local N53 = N / 53;\n\
    \  local N54 = N / 54;\n  local N55 = N / 55;\n  local N56 = N / 56;\n  local\
    \ N57 = N / 57;\n  ", "  local s = ''\n  while N > 0 do\n    local digit = math.floor(math.log2(N))\n\
    \    s = s .. tostring(digit)\n    N = N - math.pow(2,digit)\n  end\n  return\
    \ s\nend", "  local sum = 0\n  local n = N\n  while n ~= 0 do\n    sum = sum +\
    \ math.floor(n/2)\n    n = math.floor(n/2)\n  end\n  return sum\nend", "    local\
    \ s = ''\n    while N > 0 do\n        local t = math.floor(N / 2)\n        s =\
    \ s .. tostring(t % 2) .. '1'\n        N = t\n    end\n    return s\nend", " \
    \   local s = ''\n    local i = 1\n    while i <= N do\n        local t = math.floor(math.log(i)\
    \ / math.log(2))\n        s = s .. string.format('%d', math.floor(i/2))\n    \
    \    i = math.floor(i/2)\n        if t > 0 then\n            s = s .. string.format('%d',\
    \ math.floor(i/2))\n        end\n    end\n    return s\nend", "  local result\
    \ = ''\n  local sum = 0\n  local i = 1\n  while i <= N do\n    sum = sum + math.floor((N\
    \ % i) / 2)\n    i = i + 1\n  end\n  if sum > 0 then\n    result = result .. '1'\
    \ .. math.floor(sum)\n  end\n  return result\nend", "  -- Base case\n  if N ==\
    \ 0 then\n    return '0'\n  end\n  -- Recursive case\n  local digits = math.floor(math.log(N,\
    \ 2)) + 1\n  local result = {}\n  for i = 1, digits do\n    local digit = math.floor(N/math.pow(2,\
    \ i))\n    table.insert(result, digit)\n  end\n  return table.concat(result)\n\
    end", "    local sum = 0\n    local i = 1\n    while i <= N do\n        sum =\
    \ sum + math.floor(i/10)\n        i = math.floor(i/10)\n    end\n    return sum\n\
    end", "    local sum = 0\n    while N > 0 do\n        sum = sum + math.floor((N\
    \ % 2) / 2)\n        N = math.floor(N / 2)\n    end\n    return sum\nend", " \
    \   local s = ''\n    local i = 0\n    while N > 0 do\n        local t = math.floor(N\
    \ / 2)\n        s = s .. tostring(t % 2) .. tostring(t)\n        N = math.floor(N\
    \ / 2)\n        i = i + 1\n    end\n    return s\nend", "  local s = ''\n  local\
    \ i = 1\n  while i <= N do\n    local t = math.floor((N / i) * 2)\n    s = s ..\
    \ tostring(t % 2)\n    i = i + 1\n  end\n  return s\nend", "  local s = ''\n \
    \ while N > 0 do\n    local t = math.floor(math.log2(N))\n    s = s .. tostring(N\
    \ % 2^(t - 1))\n    N = N / 2^(t - 1)\n  end\n  return s\nend", "  local s = ''\n\
    \  while N > 0 do\n    local t = math.floor(math.log2(N))\n    s = s .. tostring(N\
    \ % 2) and tostring(t % 2) or tostring(t)\n    N = math.floor(N / 2)\n  end\n\
    \  return s\nend", "    local s = ''\n    local i = 1\n    while i <= N do\n \
    \       local t = math.floor((N / i) * 2)\n        s = s .. tostring(t % 2)\n\
    \        i = i + 1\n    end\n    return s\nend", "  local sum = 0\n  local n =\
    \ 0\n  while N > 0 do\n    sum = sum + math.floor((N % 10) * math.pow(2, n))\n\
    \    N = math.floor(N / 10)\n    n = n + 1\n  end\n  return sum\nend", "  local\
    \ s = ''\n  local t = 1\n  while N > 0 do\n    local m = math.floor(math.log2(N))\n\
    \    s = s .. string.format('%d', t % 2)\n    t = t / 2\n    N = N / 2\n  end\n\
    \  return s\nend", "    local s = ''\n    while N > 0 do\n        local t = math.floor(math.log2(N))\n\
    \        s = s .. string.format('%0*d', t, N)\n        N = N / 2\n    end\n  \
    \  return s\nend", "  local s = ''\n  local t = N\n  while t > 0 do\n    local\
    \ digit = math.floor(t/10)\n    s = string.format('%s%s', s, digit)\n    t = t\
    \ % 10\n  end\n  return s\nend", "  local s = ''\n  local i = 1\n  while i <=\
    \ N do\n    local t = math.floor(math.log(i) / math.log(2))\n    s = s .. string.format('%d',\
    \ math.floor(i/2))\n    i = i * 2^(t - 1)\n  end\n  return s\nend", "    local\
    \ ans = \"\"\n    local sum = 0\n    for i = 1, N do\n        sum = sum + math.floor((N\
    \ % 10) * math.pow(2, i))\n    end\n    ans = ans .. sum\n    return ans\nend",
  "    local s = ''\n    local t = N\n    while t > 0 do\n        local m = math.floor(t\
    \ / 2)\n        s = string.format('%s%d', s, m)\n        t = t - m * 2\n    end\n\
    \    return s\nend", "    local sum = 0\n    local i = 1\n    while i <= N do\n\
    \        sum = sum + math.floor((N % i) / 2)\n        i = i + 1\n    end\n   \
    \ return sum\nend", "  local s = ''\n  local i = 1\n  while i <= N do\n    local\
    \ t = math.floor((N - i) / 2)\n    s = s .. tostring(t % 2) .. tostring(t)\n \
    \   i = i + 1\n  end\n  return s\nend", "    local s = ''\n    local carry = 0\n\
    \    for i = 1, N do\n        local digit = math.floor((N - i) / 2)\n        local\
    \ remainder = N - i - digit\n        if remainder > 0 then\n            digit\
    \ = digit + 1\n        end\n        s = s .. tostring(digit)\n        if remainder\
    \ > 0 then\n            carry = 1\n        end\n    end\n    if carry > 0 then\n\
    \        s = s .. tostring(carry)\n    end\n    return s\nend", "  local s = ''\n\
    \  local carry = 0\n  local digit = 0\n  while N > 0 do\n    digit = N % 2\n \
    \   N = N / 2\n    if digit == 1 then\n      s = s .. '1'\n      carry = 1\n \
    \   else\n      s = s .. '0'\n      carry = 0\n    end\n  end\n  if carry == 1\
    \ then\n    s = s .. '1'\n  end\n  return s\nend", "    local sum = 0\n    local\
    \ i = N\n    while i > 0 do\n        sum = sum + math.floor(i/10)\n        i =\
    \ i%10\n    end\n    return sum\nend", "  local s = ''\n  local n = 1\n  while\
    \ n <= N do\n    local t = math.floor(n/10)\n    s = s .. tostring(t % 2) .. tostring(t/2)\
    \ .. '1'\n    n = math.floor(n/10)\n  end\n  return s\nend", "    local result\
    \ = ''\n    local n = 1\n    while n > 0 do\n        local remainder = N % 2\n\
    \        N = N / 2\n        result = string.format('%s%d', result, remainder)\n\
    \        n = n + 1\n    end\n    return result\nend", "    local ans = \"\"\n\
    \    local sum = 0\n    while N > 0 do\n        sum = sum + N % 2\n        N =\
    \ N / 2\n    end\n    ans = ans .. tostring(sum)\n    return ans\nend", "    local\
    \ ans = ''\n    local sum = 0\n    while N > 0 do\n        sum = sum + math.floor((N\
    \ % 10) * 2)\n        N = math.floor(N / 10)\n    end\n    ans = ans .. tostring(sum)\n\
    \    return ans\nend", "  local s = ''\n  local i = 1\n  while i <= N do\n   \
    \ local t = math.floor((N % i) / 2)\n    s = s .. t\n    N = N - t * i\n    i\
    \ = i + 1\n  end\n  return s\nend", "    local s = ''\n    while N > 0 do\n  \
    \      local remain = math.floor(N / 2)\n        s = string.format('%s%d%s', s,\
    \ remain, solve(remain - 1))\n        N = N - remain\n    end\n    return s\n\
    end", "    local s = ''\n    local carry = 0\n    local digit = 0\n    while N\
    \ > 0 do\n        digit = N % 2\n        N = N / 2\n        s = string.format('%s%d%s',\
    \ s, digit, carry and '1' or '')\n        carry = digit and 1 or 0\n    end\n\
    \    return s\nend", "  -- Base case\n  if N == 1 then\n    return '1'\n  end",
  "    local sum = 0\n    local i = 1\n    while i <= N do\n        sum = sum + math.floor((N\
    \ % i) / 2)\n        i = i + 1\n    end\n    return sum\nend", "  local s = ''\n\
    \  while N > 0 do\n    local t = math.floor(math.log2(N))\n    s = s .. '1' ..\
    \ math.floor((N / 2 ** t) % 2)\n    N = math.floor((N / 2 ** t) / 2)\n  end\n\
    \  return s\nend", "  local sum = 0\n  while N > 0 do\n    sum = sum + math.floor((N\
    \ % 2) / 2)\n    N = math.floor(N / 2)\n  end\n  return sum\nend", "  local s\
    \ = ''\n  local i = 1\n  while i <= N do\n    local t = math.floor(math.log(i)\
    \ / math.log(2))\n    s = s .. string.format('%d', math.floor(i/math.pow(2, t)))\n\
    \    i = i * 2\n  end\n  return s\nend", "  local s = ''\n  while N > 0 do\n \
    \   local digit = math.floor(math.log2(N))\n    s = string.format('%s%d', s, digit)\n\
    \    N = N - math.pow(10, digit)\n  end\n  return s\nend", "    local s = ''\n\
    \    local carry = 0\n    for i = 1, N do\n        local bin = string.format('%010b',\
    \ N % 2)\n        N = N / 2\n        if N == 0 then\n            s = s .. bin\n\
    \        else\n            local bin = string.format('%010b', N % 2)\n       \
    \     N = N / 2\n            s = s .. bin\n            carry = carry + bin\n \
    \       end\n    end\n    if carry > 0 then\n        s = s .. carry\n    end\n\
    \    return s\nend", "  local sum = 0\n  while N > 0 do\n    sum = sum + math.floor((N\
    \ % 2) / 2)\n    N = math.floor(N / 2)\n  end\n  return sum\nend", "    local\
    \ result = ''\n    local carry = 0\n    local digit = 0\n    local i = 0\n   \
    \ while i < N do\n        digit = N % 2\n        N = N / 2\n        carry = digit\
    \ + carry\n        i = i + 1\n    end\n    if carry > 0 then\n        result =\
    \ result .. carry .. '1'\n    end\n    return result\nend", "    local sum = 0\n\
    \    while N > 0 do\n        sum = sum + math.floor((N % 10) * 2)\n        N =\
    \ math.floor(N / 10)\n    end\n    return sum\nend", "    local s = ''\n    while\
    \ N > 0 do\n        local t = math.floor(N / 2)\n        s = s .. '1' if t > 0\
    \ else '0'\n        N = t\n    end\n    return s\nend", "  local s = ''\n  local\
    \ carry = 0\n  local digit\n  for i = 1, N do\n    digit = math.floor((N - i)\
    \ / 2)\n    carry = math.floor((N - i) % 2)\n    s = s .. tostring(digit) .. tostring(carry)\n\
    \  end\n  return s\nend", "    local s = ''\n    local i = 1\n    while i <= N\
    \ do\n        local t = math.floor((N / i) * 2)\n        s = s .. tostring(t)\
    \ .. '0'\n        i = i + 1\n    end\n    return s\nend", "    local result =\
    \ ''\n    local i = 1\n    while i <= N do\n        local remainder = N % 2\n\
    \        N = N / 2\n        result = result .. remainder\n    end\n    return\
    \ result\nend", "    local sum = 0\n    local i = 1\n    while i <= N do\n   \
    \     sum = sum + math.floor((N % i) / 2)\n        i = i + 1\n    end\n    return\
    \ sum\nend", "    local s = ''\n    local i = 1\n    while i <= N do\n       \
    \ local t = math.floor((N - i) / 2)\n        s = s .. tostring(t % 2) + tostring(t\
    \ / 2)\n        i = i + 1\n    end\n    return s\nend", "  local s = ''\n  while\
    \ N > 0 do\n    local n = math.floor(N / 2)\n    s = s .. string.format('%d',\
    \ n)\n    N = N - n\n  end\n  return s\nend", "    local s = ''\n    local i =\
    \ 1\n    while i <= N do\n        local t = math.floor((N % i) / 2)\n        s\
    \ = s .. t\n        i = i + 1\n    end\n    return s\nend", "  -- Base case\n\
    \  if N == 1 then\n    return '1'\n  end", "    local s = ''\n    local n = 1\n\
    \    while n > 0 do\n        if N % 2 == 0 then\n            s = s .. '1'\n  \
    \          N = N / 2\n        else\n            s = s .. '0'\n            N =\
    \ N / 2\n        end\n        n = n + 1\n    end\n    return s\nend", "    local\
    \ s = ''\n    while N > 0 do\n        local t = math.floor(N / 2)\n        s =\
    \ s .. tostring(t % 2) .. '1'\n        N = t\n    end\n    return s\nend", " \
    \   local s = ''\n    local carry = 0\n    local i = 0\n    while i < N do\n \
    \       local digit = math.floor(math.pow(10, i) * N / math.pow(10, i + 1))\n\
    \        local bin = string.format('%010b', digit)\n        local sum = 0\n  \
    \      for j = 1, 10 do\n            sum = sum + bin:sub(1, j):byte()\n      \
    \  end\n        if sum > 1 then\n            carry = 1\n        end\n        s\
    \ = s .. string.format('%010b', sum)\n        i = i + 1\n    end\n    if carry\
    \ > 0 then\n        s = s .. string.format('%010b', carry)\n    end\n    return\
    \ s\nend", "  -- Base case\n  if N == 0 then\n    return '0'\n  end\n  -- Recursive\
    \ case\n  local binary = solve(N / 2)\n  -- Add the last digit\n  binary = binary\
    \ .. tostring(N % 2)\n  return binary\nend", "    local s = ''\n    while N >\
    \ 0 do\n        local n = math.floor(N / 2)\n        s = string.format('%s%d%s',\
    \ s, n, n % 2 == 0 and '1' or '0')\n        N = N - n\n    end\n    return s\n\
    end", "    local s = ''\n    while N > 0 do\n        local n = math.floor(N /\
    \ 2)\n        s = string.format('%s%d%s', s, n + 1, n % 2 and '1' or '0')\n  \
    \      N = N - n\n    end\n    return s\nend", "  local ans = ''\n  local sum\
    \ = 0\n  local i = N\n  while i > 0 do\n    sum = sum + math.floor(i/10)\n   \
    \ i = i%10\n    ans = ans .. '1'\n  end\n  return ans .. '0'\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

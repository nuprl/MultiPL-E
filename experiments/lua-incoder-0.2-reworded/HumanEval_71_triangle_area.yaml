name: HumanEval_71_triangle_area
language: lua
prompt: "-- Given the lengths of the three sides of a triangle. Return the area of\n\
  -- the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n-- Otherwise return -1\n-- Three sides make a valid triangle when the sum of\
  \ any two sides is greater \n-- than the third side.\n-- Example:\n-- >>> triangle_area(3,\
  \ 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\nlocal function triangle_area(a,\
  \ b, c)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
  \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
  \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
  \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
  \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
  \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\tlocal s = a + b + c\n\tif s > a then return -1 end\n\tif s > b then\
    \ return -1 end\n\tif s > c then return -1 end\n\treturn (s - a) * (s - b) * (s\
    \ - c)\nend", "  if a + b > c then\n    return -1\n  elseif a + c > b then\n \
    \   return -1\n  elseif b + c > a then\n    return -1\n  else\n    return math.sqrt(math.pow(a,\
    \ 2) + math.pow(b, 2) + math.pow(c, 2))\n  end\nend", "\tlocal s = (a+b+c)/2\n\
    \tif s > a+b and s > b+c and s > c+a then\n\t\treturn s\n\telse\n\t\treturn -1\n\
    \tend\nend", "\tlocal s = a + b + c\n\tif s > a then return s end\n\tif s > b\
    \ then return s end\n\tif s > c then return s end\n\treturn -1\nend", "\tlocal\
    \ s = a + b + c\n\tif s <= 0 then\n\t\treturn -1\n\telseif s == 1 then\n\t\treturn\
    \ a * b\n\telseif s == 2 then\n\t\treturn a * b * c\n\telseif s == 3 then\n\t\t\
    return a * b * c * c\n\telseif s == 4 then\n\t\treturn a * b * c * c * c\n\telseif\
    \ s == 5 then\n\t\treturn a * b * c * c * c * c\n\telseif s == 6 then\n\t\treturn\
    \ a * b * c * c * c * c * c\n\telseif s == 7 then\n\t\treturn a * b * c * c *\
    \ c * c * c * c\n\telseif s == 8 then\n\t\treturn a * b * c * c * c * c * c *\
    \ c * c\n\telseif s == 9 then\n\t\treturn a * b * c * c * c * c * c * c * c *\
    \ c\n\telseif s == 10 then\n\t\treturn a * b * c * c * c * c * c * c * c * c *\
    \ c\n\telse\n\t\treturn -1\n\tend\nend", "\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn math.sqrt(s * (s - a) * (s - b) * (s - c))\nend", "\tlocal s = a + b\
    \ + c\n\tif s > a then return s end\n\tif s > b then return s end\n\tif s > c\
    \ then return s end\n\treturn -1\nend", "\tif a + b > c then return c else return\
    \ a + b - c end\nend", "\tlocal s = a + b + c\n\tif s > a then return -1 end\n\
    \tif s > b then return -1 end\n\tif s > c then return -1 end\n\treturn math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\nend", "\tlocal s = a + b + c\n\tif s == 0 then\n\
    \t\treturn -1\n\tend\n\tlocal t = math.sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \treturn math.round(t * 100) / 100\nend", "\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend", "\tlocal s = a + b + c\n\tif s <= a or s <= b or s <= c then\
    \ return -1 end\n\treturn (s - a) * (s - b) * (s - c) / (a + b + c)\nend", "\t\
    local s = a + b + c\n\tif s > a then return s end\n\tif s > b then return s end\n\
    \tif s > c then return s end\n\treturn -1\nend", "    local s = a + b + c\n  \
    \  if s <= 0 then\n        return -1\n    end\n    local t = math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c))\n    if t > 0 then\n        return math.round(t *\
    \ 100) / 100\n    else\n        return -1\n    end\nend", "  if a + b > c then\
    \ return -1 end\n  if a + c > b then return -1 end\n  if b + c > a then return\
    \ -1 end\n  return ((a + b) * (b + c)) / (2.0 * c)\nend", "\tlocal s = (a+b+c)/2\n\
    \tif s >= a and s >= b and s >= c then\n\t\treturn s\n\telse\n\t\treturn -1\n\t\
    end\nend", "\tlocal s = a + b + c\n\tif s > a then return s end\n\tif s > b then\
    \ return s end\n\tif s > c then return s end\n\treturn -1\nend", "\tif a + b >\
    \ c then\n\t\treturn math.round(math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c,\
    \ 2)), 2)\n\telseif a + c > b then\n\t\treturn math.round(math.sqrt(math.pow(a,\
    \ 2) + math.pow(b, 2) + math.pow(c, 2)), 2)\n\telseif b + c > a then\n\t\treturn\
    \ math.round(math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)), 2)\n\
    \telse\n\t\treturn -1\n\tend\nend", "\tlocal s = a + b + c\n\tif s > a then return\
    \ -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\treturn\
    \ math.sqrt(s * (s - a) * (s - b) * (s - c))\nend", "\tlocal s = (a+b+c)/2\n\t\
    if s > a+b and s > b+c then\n\t\treturn s\n\telse\n\t\treturn -1\n\tend\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

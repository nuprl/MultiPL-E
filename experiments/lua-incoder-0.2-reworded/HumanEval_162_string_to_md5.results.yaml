language: lua
name: HumanEval_162_string_to_md5
results:
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5sum = ngx.md5(text)\n  return\
    \ md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7yh7kl_z.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp7yh7kl_z.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7yh7kl_z.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  local md5sum\n    local md5sum_hex\n    local md5sum_base64\n    local md5sum_base64_hex\n\
    \    local md5sum_base64_utf8\n    local md5sum_base64_utf8_hex\n    local md5sum_base64_utf8_unicode\n\
    \    local md5sum_base64_utf8_unicode_hex\n    local md5sum_base64_utf8_unicode_b64\n\
    \    local md5sum_base64_utf8_unicode_b64_hex\n    local md5sum_base64_utf8_unicode_b64_utf8\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_hex\n    local md5sum_base64_utf8_unicode_b64_utf8_unicode\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_hex\n    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_hex\n    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_hex\n    local\
    \ md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode\n    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_hex\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_hex\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8_hex\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_hex\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_hex\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8_\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmhshkf06.lua:46: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprt0numnu.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmprt0numnu.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmprt0numnu.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= nil then\n    return md5\n  end\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp798u71qv.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp798u71qv.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp798u71qv.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text ~= '' then\n    md5 = ngx.md5(text)\n  else\n    md5 = ''\n \
    \ end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzsao62i3.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpzsao62i3.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzsao62i3.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local hash = ngx.md5(text)\n\
    \    if hash == ngx.null then\n        return nil\n    end\n    return hash\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqfr0_p1g.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpqfr0_p1g.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpqfr0_p1g.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc2azkewp.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpc2azkewp.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpc2azkewp.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpopcyc03o.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc2azkewp.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpc2azkewp.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpc2azkewp.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5\n  md5 = ngx.md5(text)\n\
    \  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0m_dfazg.lua:10:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp0m_dfazg.lua:10:\
    \ in function 'candidate'\n\t/tmp/tmp0m_dfazg.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= '' then\n    return md5\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp98i_6tsc.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp98i_6tsc.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp98i_6tsc.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc2azkewp.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpc2azkewp.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpc2azkewp.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= '' then\n    return md5\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp98i_6tsc.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp98i_6tsc.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp98i_6tsc.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5()\n  md5:update(text)\n\
    \  return md5:final()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4bvpehki.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp4bvpehki.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp4bvpehki.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  end\n  return md5\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8q6kvl_c.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp8q6kvl_c.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp8q6kvl_c.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5sum = \"\"\n  for i = 1,\
    \ #text do\n    md5sum = md5sum..string.char(torch.hash(\"md5\", text:sub(i,i)))\n\
    \  end\n  return md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3nvubmvh.lua:11:\
    \ attempt to index global 'torch' (a nil value)\nstack traceback:\n\t/tmp/tmp3nvubmvh.lua:11:\
    \ in function 'candidate'\n\t/tmp/tmp3nvubmvh.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjhqgf5h7.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpjhqgf5h7.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpjhqgf5h7.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: -1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5sum, err = io.open(\"/dev/urandom\"\
    , \"r\")\n  if md5sum == nil then\n    return nil\n  end\n  local md5 = md5sum:read(\"\
    *all\")\n  md5sum:close()\n  return md5\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750408
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= '' then\n    return md5:sub(1, 32)\n  end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpiqbabnn3.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpiqbabnn3.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpiqbabnn3.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf4z3k1oa.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpf4z3k1oa.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpf4z3k1oa.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then return nil end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp99hyr8nt.lua:7:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp99hyr8nt.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp99hyr8nt.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local hash = ngx.md5(text)\n\
    \    return hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpr69f0gaf.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpr69f0gaf.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpr69f0gaf.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  end\n  return md5\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8q6kvl_c.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp8q6kvl_c.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp8q6kvl_c.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() == 0 then\n    return nil\n  end\n  local function hash_byte(byte)\n\
    \    local h = byte\n    for i = 1, 8 do\n      h = h .. string.char(byte:byte(i))\n\
    \    end\n    return h\n  end\n  local function hash_word(word)\n    local h\n\
    \    for i = 1, 16 do\n      h = h .. hash_byte(word:byte(i))\n    end\n    return\
    \ h\n  end\n  local function hash_line(line)\n    local h\n    for i = 1, 16 do\n\
    \      h = h .. hash_byte(line:byte(i))\n    end\n    return h\n  end\n  local\
    \ function hash_text(text)\n    local h\n    for i = 1, 16 do\n      h = h ..\
    \ hash_byte(text:byte(i))\n    end\n    return h\n  end\n  local function hash_text(text)\n\
    \    local h\n    for i = 1, 16 do\n      h = h .. hash_byte(text:byte(i))\n \
    \   end\n    return h\n  end\n  local function hash_text(text)\n    local h\n\
    \    for i = 1, 16 do\n      h = h .. hash_byte(text:byte(i))\n    end\n    return\
    \ h\n  end\n  local function hash_text(text)\n    local h\n    for i = 1, 16 do\n\
    \      h = h .. hash_byte(text:byte(i))\n    end\n    return h\n  end\n  local\
    \ function hash_text(text)\n    local h\n    for i = 1, 16 do\n      h = h ..\
    \ hash_byte(text:byte(i))\n    end\n    return h\n  end\n  local function hash_text(text)\n\
    \    local h\n    for i = 1, 16 do\n      h = h .. hash_byte(text:byte(i))\n \
    \   end\n    return h\n  end\n  local function hash_text(text)\n    local h\n\
    \    for i = 1, 16 do\n      h = h .. hash_byte(text:byte(i))\n    end\n    return\
    \ h\n  end\n  local function hash_text(text)\n    local h\n    for i = 1, 16 do\n\
    \      h = h .. hash_byte(text:byte(i))\n    end\n    return h\n  end\n  local\
    \ function hash_text(text)\n    local h\n    for i = 1, 16 do\n      h = h ..\
    \ hash_byte(text:byte(i))\n    end\n    return h\n  end\n  local function hash_text(text)\n\
    \    local h\n    for i = 1, 16 do\n      h = h .. hash_byte(text:byte(i))\n \
    \   end\n    return h\n  end\n  local function hash_text(text)\n    local h\n\
    \    for i = 1, 16 do\n      h = h .. hash_byte\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpirbb7t1s.lua:115: ''end'' expected (to close ''for'' at line
    103) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: -1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then return end\n  local md5sum, err = io.open(\"/dev/urandom\"\
    , \"r\")\n  if md5sum == nil then return nil end\n  local md5sum_bytes = md5sum:read(\"\
    *all\")\n  md5sum:close()\n  return tostring(md5sum_bytes)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750408
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text == nil then\n    return nil\n  elseif text:len() == 0 then\n\
    \    return nil\n  else\n    md5 = ngx.md5(text)\n  end\n  return md5\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7bourbzl.lua:12:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp7bourbzl.lua:12:\
    \ in function 'candidate'\n\t/tmp/tmp7bourbzl.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjhqgf5h7.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpjhqgf5h7.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpjhqgf5h7.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  return md5:sub(1, md5:len()-1)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3h8ybb50.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp3h8ybb50.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp3h8ybb50.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5sum, err = io.open(\"/dev/urandom\", \"r\").read(16)\n  if md5sum == nil\
    \ then\n    return nil, err\n  end\n  local md5 = string.format(\"%x\", md5sum)\n\
    \  return md5, nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmph8sj06kb.lua:6:\
    \ bad argument #1 to 'read' (FILE* expected, got number)\nstack traceback:\n\t\
    /tmp/tmph8sj06kb.lua:6: in function 'candidate'\n\t/tmp/tmph8sj06kb.lua:17: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf4z3k1oa.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpf4z3k1oa.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpf4z3k1oa.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjhqgf5h7.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpjhqgf5h7.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpjhqgf5h7.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= nil then\n    return md5\n  else\n    return\
    \ nil\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpr_a7_wlp.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpr_a7_wlp.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpr_a7_wlp.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5sum\n  local md5\n  local\
    \ i\n  md5sum = \"\"\n  md5 = nil\n  i = #text\n  while i do\n    md5 = md5 or\
    \ md5.new()\n    local c = text:sub(i, i)\n    md5:update(c)\n    i = i - 1\n\
    \  end\n  return md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxf4sv8a9.lua:16:\
    \ attempt to index local 'md5' (a nil value)\nstack traceback:\n\t/tmp/tmpxf4sv8a9.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpxf4sv8a9.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf6ryb0q6.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpf6ryb0q6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpf6ryb0q6.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5ub1e2k5.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp5ub1e2k5.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp5ub1e2k5.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5sum\n  if text:len() > 0 then\n    md5sum = ngx.md5(text)\n  else\n    md5sum\
    \ = \"\"\n  end\n  return md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2yjbigdx.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp2yjbigdx.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2yjbigdx.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= nil then\n    return md5\n  end\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp798u71qv.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp798u71qv.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp798u71qv.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text == nil then\n    return nil\n  end\n  local md5_hash = md5.new()\n\
    \  md5_hash:update(text)\n  md5_hash = md5_hash:digest()\n  return md5_hash\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpg1q8usck.lua:10:\
    \ attempt to index local 'md5' (a nil value)\nstack traceback:\n\t/tmp/tmpg1q8usck.lua:10:\
    \ in function 'candidate'\n\t/tmp/tmpg1q8usck.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5()\n\
    \    md5:update(text)\n    return md5:final()\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0zrm36rl.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp0zrm36rl.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp0zrm36rl.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjhqgf5h7.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpjhqgf5h7.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpjhqgf5h7.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjhqgf5h7.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpjhqgf5h7.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpjhqgf5h7.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then return end\n  local md5 = ngx.md5()\n  md5:update(text)\n \
    \ return md5:final()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaab_qzzy.lua:7:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpaab_qzzy.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpaab_qzzy.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf6ryb0q6.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpf6ryb0q6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpf6ryb0q6.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjhqgf5h7.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpjhqgf5h7.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpjhqgf5h7.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc2azkewp.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpc2azkewp.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpc2azkewp.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5ub1e2k5.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp5ub1e2k5.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp5ub1e2k5.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp19s7_fho.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp19s7_fho.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp19s7_fho.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc2azkewp.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpc2azkewp.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpc2azkewp.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5hash = ngx.md5(text)\n \
    \ return md5hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpilcrdf7y.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpilcrdf7y.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpilcrdf7y.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,32)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdn_mi_6_.lua:7:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpdn_mi_6_.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpdn_mi_6_.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  else\n    md5 = '00000000000000000000000000000000'\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp20vkeo1x.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp20vkeo1x.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp20vkeo1x.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5sum\n  local md5sum_hex\n\
    \  local md5sum_base64\n  local md5sum_base64_hex\n  local md5sum_base64_utf8\n\
    \  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_unicode\n  local md5sum_base64_utf8_unicode_hex\n\
    \  local md5sum_base64_utf8_unicode_b64\n  local md5sum_base64_utf8_unicode_b64_hex\n\
    \  local md5sum_base64_utf8_unicode_b64_utf8\n  local md5sum_base64_utf8_unicode_b64_utf8_hex\n\
    \  local md5sum_base64_utf8_unicode_b64_utf8_unicode\n  local md5sum_base64_utf8_unicode_b64_utf8_unicode_hex\n\
    \  local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64\n  local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_hex\n\
    \  local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8\n  local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_hex\n\
    \  local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode\n  local\
    \ md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_hex\n  local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64\n\
    \  local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_hex\n\
    \  local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8\n\
    \  local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8_hex\n\
    \  local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode\n\
    \  local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_hex\n\
    \  local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64\n\
    \  local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_hex\n\
    \  local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8\n\
    \  local md5sum_base64_utf8_unicode_b64_\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpwga0sm2c.lua:49: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5()\n  local len = #text\n  local i = 1\n  while i <= len do\n \
    \   md5:update(ngx.encode_base64(ngx.md5(text)))\n    i = i + 1\n  end\n  return\
    \ md5:final()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpd5vk5wpm.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpd5vk5wpm.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpd5vk5wpm.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp19s7_fho.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp19s7_fho.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp19s7_fho.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= nil then\n    return md5:sub(1, 32)\n  end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6l1x0szy.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp6l1x0szy.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp6l1x0szy.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then return end\n  local md5 = ngx.md5()\n  md5:update(text)\n \
    \ return md5:final()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaab_qzzy.lua:7:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpaab_qzzy.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpaab_qzzy.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjhqgf5h7.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpjhqgf5h7.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpjhqgf5h7.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf4z3k1oa.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpf4z3k1oa.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpf4z3k1oa.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc2azkewp.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpc2azkewp.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpc2azkewp.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  local md5\n    local md5_hash = ngx.md5(text)\n    if md5_hash then\n     \
    \   md5 = md5_hash:sub(1, md5_hash:len()-1)\n    end\n    return md5\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgzhaz7fp.lua:7:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpgzhaz7fp.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpgzhaz7fp.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  end\n  return md5\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8q6kvl_c.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp8q6kvl_c.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp8q6kvl_c.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text == nil then\n    return nil\n  else\n    md5 = ngx.md5(text)\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpno7ldgmi.lua:10:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpno7ldgmi.lua:10:\
    \ in function 'candidate'\n\t/tmp/tmpno7ldgmi.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local hash = ngx.md5(text)\n\
    \    if hash ~= nil then\n        return hash\n    end\n    return nil\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpha7xrwrp.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpha7xrwrp.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpha7xrwrp.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then return nil end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp99hyr8nt.lua:7:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp99hyr8nt.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp99hyr8nt.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5hash = ngx.md5(text)\n \
    \ return md5hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpilcrdf7y.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpilcrdf7y.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpilcrdf7y.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjhqgf5h7.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpjhqgf5h7.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpjhqgf5h7.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprt0numnu.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmprt0numnu.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmprt0numnu.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= nil then\n    return md5:sub(1, md5:len())\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsyi_4pxu.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpsyi_4pxu.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpsyi_4pxu.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local hash = ngx.md5(text)\n\
    \    return hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpr69f0gaf.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpr69f0gaf.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpr69f0gaf.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5()\n  local len = #text\n  if len == 0 then\n    return nil\n \
    \ end\n  md5:reset('md5')\n  md5:update(text)\n  return md5:final()\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqjrmn8f7.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpqjrmn8f7.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpqjrmn8f7.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text ~= '' then\n    md5 = ngx.md5(text)\n  end\n  return md5\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpylrwy_02.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpylrwy_02.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpylrwy_02.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text ~= '' then\n    md5 = ngx.md5(text)\n  end\n  return md5\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpylrwy_02.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpylrwy_02.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpylrwy_02.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text == nil then\n    return nil\n  end\n  md5 = ngx.md5(text)\n \
    \ return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqtlh9hq7.lua:10:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpqtlh9hq7.lua:10:\
    \ in function 'candidate'\n\t/tmp/tmpqtlh9hq7.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf4z3k1oa.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpf4z3k1oa.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpf4z3k1oa.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: -1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5sum, err = io.open(\"/dev/urandom\", \"rb\")\n  if err then\n    return nil\n\
    \  end\n  local md5 = md5sum:read(\"*all\")\n  md5sum:close()\n  return md5\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750409
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5sum\n  local md5_hash =\
    \ ngx.md5()\n  local text_len = #text\n  local text_md5 = md5_hash:update(text)\n\
    \  md5sum = md5_hash:final()\n  return md5sum\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0ekwwqyn.lua:10:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp0ekwwqyn.lua:10:\
    \ in function 'candidate'\n\t/tmp/tmp0ekwwqyn.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5()\n  local len = #text\n  local i = 1\n  while i <= len do\n \
    \   md5:update(ngx.encode_base64(text..i))\n    i = i + 1\n  end\n  return md5:final()\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpce3b0t1q.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpce3b0t1q.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpce3b0t1q.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  local md5 = ngx.md5(text)\n    if md5 ~= nil then\n        return md5:sub(1,\
    \ 16)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpephv95w5.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpephv95w5.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpephv95w5.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf4z3k1oa.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpf4z3k1oa.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpf4z3k1oa.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  end\n  return md5\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8q6kvl_c.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp8q6kvl_c.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp8q6kvl_c.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjhqgf5h7.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpjhqgf5h7.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpjhqgf5h7.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  else\n    md5 = ''\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9npob9s3.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp9npob9s3.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp9npob9s3.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc2azkewp.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpc2azkewp.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpc2azkewp.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  else\n    md5 = ''\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9npob9s3.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp9npob9s3.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp9npob9s3.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5sum, err = io.open(\"/dev/urandom\", \"r\").read(\"*all\")\n  if md5sum ==\
    \ nil then\n    md5sum, err = io.open(\"/dev/random\", \"r\").read(\"*all\")\n\
    \  end\n  if md5sum == nil then\n    return nil\n  end\n  local md5sum = md5sum:gsub(\"\
    \\r\\n\", \"\\n\")\n  local md5sum = md5sum:gsub(\"\\r\", \"\\n\")\n  local md5sum\
    \ = md5sum:gsub(\"\\n\", \"\\r\\n\")\n  local md5sum = md5sum:gsub(\"\\r\\r\"\
    , \"\\r\\n\")\n  local md5sum = md5sum:gsub(\"\\r\\r\\n\", \"\\r\\n\")\n  local\
    \ md5sum = md5sum:gsub(\"\\r\\n\\r\", \"\\r\\n\")\n  local md5sum = md5sum:gsub(\"\
    \\r\\n\\r\\n\", \"\\r\\n\")\n  local md5sum = md5sum:gsub(\"\\r\\n\\r\\n\", \"\
    \\r\\n\")\n  local md5sum = md5sum:gsub(\"\\r\\n\\r\\n\", \"\\r\\n\")\n  local\
    \ md5sum = md5sum:gsub(\"\\r\\n\\r\\n\", \"\\r\\n\")\n  local md5sum = md5sum:gsub(\"\
    \\r\\n\\r\\n\", \"\\r\\n\")\n  local md5sum = md5sum:gsub(\"\\r\\n\\r\\n\", \"\
    \\r\\n\")\n  local md5sum = md5sum:gsub(\"\\r\\n\\r\\n\", \"\\r\\n\")\n  local\
    \ md5sum = md5sum:gsub(\"\\r\\n\\r\\n\", \"\\r\\n\")\n  local md5sum = md5sum:gsub(\"\
    \\r\\n\\r\\n\", \"\\r\\n\")\n  local md5sum = md5sum:gsub(\"\\r\\n\\r\\n\", \"\
    \\r\\n\")\n  local md5sum = md5sum:gsub(\"\\r\\n\\r\\n\", \"\\r\\n\")\n  local\
    \ md5sum = md5sum:gsub(\"\\r\\n\\r\\n\", \"\\r\\n\")\n  local md5sum = md5sum:gsub(\"\
    \\r\\n\\r\\n\", \"\\r\\n\")\n  local md5sum = md5sum:gsub(\"\\r\\n\\r\\n\", \"\
    \\r\\n\")\n  local md5sum = md5sum:gsub(\"\\r\\n\\r\\n\", \"\\r\\n\")\n  local\
    \ md5sum = md5sum:gsub(\"\\r\\n\\r\\n\", \"\\r\\n\")\n  local md5sum = md5sum:gsub(\"\
    \\r\\n\\r\\n\", \"\\r\\n\")\n  local md5sum = md5sum:gsub(\"\\r\\n\\r\\n\", \"\
    \\r\\n\")\n  local md5sum = md5sum:gsub(\"\\r\\n\\r\\n\", \"\\r\\n\")\n  local\
    \ md5sum = md5sum:gsub(\"\\r\\n\\r\\n\", \"\\r\\n\")\n  local md5sum = md5sum:gsub(\"\
    \\r\\n\\r\\n\", \"\\r\\n\")\n  local md5sum = md5sum:gsub(\"\\r\\n\\r\\n\", \"\
    \\r\\n\")\n  local md5sum = md5sum:\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3ilb5ut4.lua:42: function arguments expected near ''=''

    '
  stdout: ''
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  end\n  return md5\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8q6kvl_c.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp8q6kvl_c.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp8q6kvl_c.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjhqgf5h7.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpjhqgf5h7.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpjhqgf5h7.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5()\n  md5:update(text)\n  return md5:final()\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3a_z1hcb.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp3a_z1hcb.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp3a_z1hcb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf4z3k1oa.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpf4z3k1oa.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpf4z3k1oa.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprt0numnu.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmprt0numnu.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmprt0numnu.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5sum = ngx.md5(text)\n  return\
    \ md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7yh7kl_z.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp7yh7kl_z.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7yh7kl_z.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5ub1e2k5.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp5ub1e2k5.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp5ub1e2k5.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjhqgf5h7.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpjhqgf5h7.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpjhqgf5h7.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprt0numnu.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmprt0numnu.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmprt0numnu.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprt0numnu.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmprt0numnu.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmprt0numnu.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf4z3k1oa.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpf4z3k1oa.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpf4z3k1oa.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= nil then\n    return md5:sub(1, 8)\n  else\n\
    \    return nil\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1b60kcsk.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp1b60kcsk.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp1b60kcsk.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= '' then\n    return md5\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp98i_6tsc.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp98i_6tsc.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp98i_6tsc.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  local md5 = ngx.md5(text)\n    if md5 ~= nil then\n        return md5\n   \
    \ end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjr4guxg5.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpjr4guxg5.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpjr4guxg5.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpopcyc03o.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  else\n    md5 = ''\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9npob9s3.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp9npob9s3.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp9npob9s3.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  end\n  return md5\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8q6kvl_c.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp8q6kvl_c.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp8q6kvl_c.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjhqgf5h7.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpjhqgf5h7.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpjhqgf5h7.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprt0numnu.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmprt0numnu.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmprt0numnu.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5sum, err = io.open(\"/dev/urandom\"\
    , \"r\")\n  if err then\n    return nil\n  end\n  local md5, err = io.open(md5sum,\
    \ \"w\")\n  if err then\n    io.close(md5sum)\n    return nil\n  end\n  local\
    \ n, err = io.write(md5, text)\n  if err then\n    io.close(md5sum)\n    io.close(md5)\n\
    \    return nil\n  end\n  io.close(md5sum)\n  io.close(md5)\n  return md5sum:read(\"\
    *all\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphz8qixzb.lua:13:\
    \ bad argument #1 to 'open' (string expected, got userdata)\nstack traceback:\n\
    \t/tmp/tmphz8qixzb.lua:13: in function 'candidate'\n\t/tmp/tmphz8qixzb.lua:32:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf4z3k1oa.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpf4z3k1oa.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpf4z3k1oa.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc2azkewp.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpc2azkewp.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpc2azkewp.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= nil then\n    return md5:sub(1, 32)\n  end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6l1x0szy.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp6l1x0szy.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp6l1x0szy.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf4z3k1oa.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpf4z3k1oa.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpf4z3k1oa.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  else\n    md5 = ''\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9npob9s3.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp9npob9s3.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp9npob9s3.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5()\n  md5:update(text)\n\
    \  return md5:final()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4bvpehki.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp4bvpehki.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp4bvpehki.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc2azkewp.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpc2azkewp.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpc2azkewp.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  local md5_hash = ngx.md5(text)\n  if md5_hash == ngx.null then\n    return\
    \ nil\n  else\n    md5 = string.sub(md5_hash, 1, 8)\n  end\n  return md5\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpydb7bpm2.lua:7:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpydb7bpm2.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpydb7bpm2.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= nil then\n    return md5:sub(1, md5:len())\n\
    \  else\n    return nil\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8k_b_7qk.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp8k_b_7qk.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp8k_b_7qk.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5sum\n  if text == nil then\n    return nil\n  end\n  md5sum = ngx.md5(text)\n\
    \  return md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpuv24jup7.lua:10:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpuv24jup7.lua:10:\
    \ in function 'candidate'\n\t/tmp/tmpuv24jup7.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= ngx.null then\n    return md5:sub(1, 32)\n\
    \  else\n    return nil\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjmmvbhue.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpjmmvbhue.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpjmmvbhue.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjhqgf5h7.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpjhqgf5h7.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpjhqgf5h7.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5ub1e2k5.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp5ub1e2k5.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp5ub1e2k5.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= nil then\n    return md5:sub(1, 32)\n  else\n\
    \    return nil\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprp3vv3ms.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmprp3vv3ms.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmprp3vv3ms.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: -1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5sum, err = io.open(\"/dev/urandom\"\
    , \"rb\")\n  if md5sum == nil then\n    return nil\n  end\n  local md5sum_bytes\
    \ = md5sum:read(\"*a\")\n  md5sum:close()\n  return md5sum_bytes\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750409
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5sum = \"\"\n  for i = 1,\
    \ #text do\n    local c = text:sub(i, i)\n    md5sum = md5sum..string_to_hex(c)\n\
    \  end\n  return md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpeu77a0e6.lua:12:\
    \ attempt to call global 'string_to_hex' (a nil value)\nstack traceback:\n\t/tmp/tmpeu77a0e6.lua:12:\
    \ in function 'candidate'\n\t/tmp/tmpeu77a0e6.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  end\n  return md5\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8q6kvl_c.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp8q6kvl_c.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp8q6kvl_c.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text ~= '' then\n    md5 = ngx.md5(text)\n  end\n  return md5\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpylrwy_02.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpylrwy_02.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpylrwy_02.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5()\n  md5:update(text)\n  return md5:final()\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3a_z1hcb.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp3a_z1hcb.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp3a_z1hcb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5\n  local md5_hash = ngx.md5(text)\n\
    \  if md5_hash == ngx.null then\n    return nil\n  end\n  md5 = string.sub(md5_hash,\
    \ 1, 8)\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwi0d5qvh.lua:10:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpwi0d5qvh.lua:10:\
    \ in function 'candidate'\n\t/tmp/tmpwi0d5qvh.lua:21: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= nil then\n    return md5:sub(1, md5:len())\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsyi_4pxu.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpsyi_4pxu.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpsyi_4pxu.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc2azkewp.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpc2azkewp.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpc2azkewp.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjhqgf5h7.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpjhqgf5h7.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpjhqgf5h7.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5()\n  md5:update(text)\n  return md5:final()\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3a_z1hcb.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp3a_z1hcb.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp3a_z1hcb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjhqgf5h7.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpjhqgf5h7.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpjhqgf5h7.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text == nil then\n    return nil\n  else\n    local md5_hash = ngx.md5(text)\n\
    \    md5 = string.sub(md5_hash, 1, 8)\n  end\n  return md5\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprumakkcx.lua:10:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmprumakkcx.lua:10:\
    \ in function 'candidate'\n\t/tmp/tmprumakkcx.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5sum, err = io.open(\"/dev/urandom\", \"rb\")\n  if err then\n    return nil\n\
    \  end\n  local md5 = assert(io.read(md5sum))\n  io.close(md5sum)\n  return md5\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa4s5zycu.lua:10:\
    \ bad argument #1 to 'read' (invalid option)\nstack traceback:\n\t/tmp/tmpa4s5zycu.lua:10:\
    \ in function 'candidate'\n\t/tmp/tmpa4s5zycu.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5sum\n  local md5sum_bytes\n\
    \  local md5sum_hex\n  local md5sum_hex_chars\n  local md5sum_hex_char_index\n\
    \  local md5sum_hex_char_index2\n  local md5sum_hex_char_index3\n  local md5sum_hex_char_index4\n\
    \  local md5sum_hex_char_index5\n  local md5sum_hex_char_index6\n  local md5sum_hex_char_index7\n\
    \  local md5sum_hex_char_index8\n  local md5sum_hex_char_index9\n  local md5sum_hex_char_index10\n\
    \  local md5sum_hex_char_index11\n  local md5sum_hex_char_index12\n  local md5sum_hex_char_index13\n\
    \  local md5sum_hex_char_index14\n  local md5sum_hex_char_index15\n  local md5sum_hex_char_index16\n\
    \  local md5sum_hex_char_index17\n  local md5sum_hex_char_index18\n  local md5sum_hex_char_index19\n\
    \  local md5sum_hex_char_index20\n  local md5sum_hex_char_index21\n  local md5sum_hex_char_index22\n\
    \  local md5sum_hex_char_index23\n  local md5sum_hex_char_index24\n  local md5sum_hex_char_index25\n\
    \  local md5sum_hex_char_index26\n  local md5sum_hex_char_index27\n  local md5sum_hex_char_index28\n\
    \  local md5sum_hex_char_index29\n  local md5sum_hex_char_index30\n  local md5sum_hex_char_index31\n\
    \  local md5sum_hex_char_index32\n  local md5sum_hex_char_index33\n  local md5sum_hex_char_index34\n\
    \  local md5sum_hex_char_index35\n  local md5sum_hex_char_index36\n  local md5sum_hex_char_index37\n\
    \  local md5sum_hex_char_index38\n  local md5sum_hex_char_index39\n  local md5sum_hex_char_index40\n\
    \  local md5sum_hex_char_index41\n  local md5sum_hex_char_index42\n  local md5sum_hex_char_index43\n\
    \  local md5sum_hex_char_index44\n  local md5sum_hex_char_index45\n  local md5sum_hex_char_index46\n\
    \  local md5sum_hex_char_index47\n  local md5sum_hex_char_index48\n  local md5sum_hex_char_index49\n\
    \  local md5sum_hex_char_index50\n  local md5sum_hex_char_index51\n  local md5sum_hex_char_index52\n\
    \  local md5sum_hex_char_index\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp4xufipfc.lua:76: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjhqgf5h7.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpjhqgf5h7.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpjhqgf5h7.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpopcyc03o.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5sum = \"\"\n  if text ~= \"\" then\n    md5sum = ngx.md5(text)\n  end\n \
    \ return md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpem7jp6_5.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpem7jp6_5.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpem7jp6_5.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjhqgf5h7.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpjhqgf5h7.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpjhqgf5h7.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text ~= '' then\n    md5 = ngx.md5(text)\n  else\n    md5 = ''\n \
    \ end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzsao62i3.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpzsao62i3.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzsao62i3.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5sum, err = ngx.md5(text)\n\
    \  if md5sum == nil then\n    return nil\n  end\n  return md5sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaca4ky7c.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpaca4ky7c.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpaca4ky7c.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5()\n  md5:update(text)\n\
    \  return md5:final()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4bvpehki.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp4bvpehki.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp4bvpehki.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf4z3k1oa.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpf4z3k1oa.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpf4z3k1oa.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5sum, err = io.open(\"/dev/urandom\", \"r\").read(16)\n  if md5sum == nil\
    \ then\n    return nil, err\n  end\n  local md5 = md5sum:sub(1, 16)\n  return\
    \ md5, nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj_scx899.lua:6:\
    \ bad argument #1 to 'read' (FILE* expected, got number)\nstack traceback:\n\t\
    /tmp/tmpj_scx899.lua:6: in function 'candidate'\n\t/tmp/tmpj_scx899.lua:17: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= ngx.null then\n    return md5:sub(1, 16)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3qok017i.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp3qok017i.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp3qok017i.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf4z3k1oa.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpf4z3k1oa.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpf4z3k1oa.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjhqgf5h7.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpjhqgf5h7.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpjhqgf5h7.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len()-1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpx7yi6aod.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpx7yi6aod.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpx7yi6aod.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  local md5\n    local md5_hash = ngx.md5(text)\n    if md5_hash ~= nil then\n\
    \        md5 = md5_hash\n    end\n    return md5\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1mzm3ciw.lua:7:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp1mzm3ciw.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp1mzm3ciw.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5\n  md5 = ngx.md5(text)\n\
    \  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0m_dfazg.lua:10:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp0m_dfazg.lua:10:\
    \ in function 'candidate'\n\t/tmp/tmp0m_dfazg.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= '' then\n    return md5\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp98i_6tsc.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp98i_6tsc.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp98i_6tsc.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp19s7_fho.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp19s7_fho.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp19s7_fho.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf4z3k1oa.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpf4z3k1oa.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpf4z3k1oa.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() == 0 then\n    return nil\n  end\n  md5 = ngx.md5(text)\n\
    \  return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppeuirh1p.lua:10:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmppeuirh1p.lua:10:\
    \ in function 'candidate'\n\t/tmp/tmppeuirh1p.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf6ryb0q6.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpf6ryb0q6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpf6ryb0q6.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: -1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5sum, err = io.open(\"/dev/urandom\", \"rb\")\n  if err then\n    return nil\n\
    \  end\n  local md5sum_bytes = md5sum:read(\"*a\")\n  md5sum:close()\n  return\
    \ md5sum_bytes\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750409
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5()\n\
    \    md5:update(text)\n    return md5:final()\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0zrm36rl.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp0zrm36rl.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp0zrm36rl.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf4z3k1oa.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpf4z3k1oa.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpf4z3k1oa.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403

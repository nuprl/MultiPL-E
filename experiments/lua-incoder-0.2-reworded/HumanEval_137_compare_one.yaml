name: HumanEval_137_compare_one
language: lua
prompt: "-- Create a function that takes integers, floats, or strings representing\n\
  -- real numbers, and returns the larger variable in its given variable type.\n--\
  \ Return None if the values are equal.\n-- Note: If a real number is represented\
  \ as a string, the floating point might be . or ,\n-- >>> compare_one(1, 2.5)\n\
  -- 2.5\n-- >>> compare_one(1, '2,3')\n-- '2,3'\n-- >>> compare_one('5,1', '6')\n\
  -- '6'\n-- >>> compare_one('1', 1)\n-- None\nlocal function compare_one(a, b)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare_one\n\
  \    lu.assertEquals(candidate(1, 2), 2)\n    lu.assertEquals(candidate(1, 2.5),\
  \ 2.5)\n    lu.assertEquals(candidate(2, 3), 3)\n    lu.assertEquals(candidate(5,\
  \ 6), 6)\n    lu.assertEquals(candidate(1, '2,3'), '2,3')\n    lu.assertEquals(candidate('5,1',\
  \ '6'), '6')\n    lu.assertEquals(candidate('1', '2'), '2')\n    lu.assertEquals(candidate('1',\
  \ 1), None)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if type(a) == 'number' and type(b) == 'number' then\n    if a > b\
    \ then\n      return a\n    elseif a < b then\n      return b\n    else\n    \
    \  return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n\
    \    if a > b then\n      return a\n    elseif a < b then\n      return b\n  \
    \  else\n      return nil\n    end\n  elseif type(a) == 'table' and type(b) ==\
    \ 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return a\n    end\n  elseif\
    \ type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n      return\
    \ a\n    elseif b > a then\n      return b\n    else\n      return a\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return a\n    else\n      return\
    \ b\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and\
    \ type(b) == 'number' then\n    if a > b then\n      return a\n    elseif b >\
    \ a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return nil\n    end\n  end\n  return\
    \ nil\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return b\n    elseif b > a then\n      return a\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return\
    \ compare_one(a.z, b.z)\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'number' then\n    if tonumber(a) > tonumber(b) then\n\
    \      return a\n    elseif tonumber(b) > tonumber(a) then\n      return b\n \
    \   else\n      return nil\n    end\n  elseif type(a) == 'number' and type(b)\
    \ == 'string' then\n    if tonumber(a) > tonumber(b) then\n      return b\n  \
    \  elseif tonumber(b) > tonumber(a) then\n      return a\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'string' then\n   \
    \ if compare_one(a.x, b) and compare_one(a.y, b) then\n      return compare_one(a.z,\
    \ b)\n    else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'table' then\n    if compare_one(a, b) and compare_one(a, b) then\n     \
    \ return compare_one(a, b) \n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    end\n  end\n  return nil\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if math.abs(a - b) < 1e-15 then\n\
    \      return a\n    else\n      return b\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a:find(b) then\n      return a\n    else\n\
    \      return b\n    end\n  else\n    return nil\n  end\nend", "  if type(a) ==\
    \ 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n \
    \   elseif b > a then\n      return b\n    else\n      return nil\n    end\n \
    \ elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return nil\n   \
    \ end\n  elseif type(a) == 'string' and type(b) == 'number' then\n    if tonumber(a)\
    \ > b then\n      return a\n    elseif tonumber(b) > a then\n      return b\n\
    \    else\n      return nil\n    end\n  elseif type(a) == 'number' and type(b)\
    \ == 'string' then\n    if tonumber(a) > b then\n      return a\n    elseif tonumber(b)\
    \ > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'string' then\n    if compare_one(a.x, b) then\n \
    \     return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'table'\
    \ then\n    if compare_one(a, b) then\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    end\n  else\n    return nil\n  end\nend", " \
    \ if type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n  \
    \    return a\n    else\n      return b\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a == b then\n      return a\n    else\n\
    \      return b\n    end\n  else\n    return a\n  end\nend", "  if type(a) ==\
    \ 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n \
    \   elseif b > a then\n      return b\n    else\n      return nil\n    end\n \
    \ elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return b\n    elseif b > a then\n      return a\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return compare_one(a.z,\
    \ b.z)\n    else\n      return nil\n    end\n  elseif type(a) == 'userdata' and\
    \ type(b) == 'userdata' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  else\n  \
    \  return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a == b then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a == b then\n      return a\n    else\n      return b\n    end\n  else\n   \
    \ return a\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n\
    \    if math.abs(a - b) < 1e-10 then\n      return a\n    end\n  end\n  if type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a ~= b then\n      return a\n\
    \    end\n  end\n  if type(a) == 'table' and type(b) == 'table' then\n    if #a\
    \ ~= #b then\n      return a\n    end\n    for i = 1, #a do\n      local a_value\
    \ = a[i]\n      local b_value = b[i]\n      if not compare_one(a_value,b_value)\
    \ then\n        return a_value\n      end\n    end\n  end\n  return nil\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return\
    \ nil\n    end\n  end\n  return nil\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif a < b then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return b\n    elseif\
    \ a < b then\n      return a\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    else\n      return compare_one(a.z, b.z)\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) ~= 'number' or type(b)\
    \ ~= 'number' then\n    return nil\n  end\n  if a == b then\n    return a\n  elseif\
    \ type(a) == 'number' and type(b) == 'string' then\n    return b\n  elseif type(b)\
    \ == 'number' and type(a) == 'string' then\n    return a\n  else\n    return nil\n\
    \  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return a\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return a\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return a\n    else\n      return b\n    end\n  else\n    return nil\n \
    \ end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif a < b then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif a < b then\n      return\
    \ b\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ ~= type(b) then return end\n  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then return b end\n    if a < b then return a end\n  elseif\
    \ type(a) == 'string' and type(b) == 'string' then\n    if a ~= b then return\
    \ b end\n  else\n    return a\n  end\n  return nil\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return b\n    elseif\
    \ a < b then\n      return a\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return b\n\
    \    elseif a < b then\n      return a\n    else\n      return nil\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    end\n  else\n    return nil\n  end\nend", " \
    \ if type(a) == 'number' and type(b) == 'number' then\n    if math.abs(a - b)\
    \ < 1e-15 then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a ~= b then\n      return b\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) ~= type(b) then return\
    \ nil end\n  local a_str = tostring(a)\n  local b_str = tostring(b)\n  if a_str\
    \ == b_str then return b end\n  if a_str == '.' then return b end\n  if b_str\
    \ == '.' then return a end\n  if a_str == ',' then return b end\n  if b_str ==\
    \ ',' then return a end\n  return a\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  else\n  \
    \  return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  else\n    return nil\n\
    \  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return b\n    elseif a < b then\n      return a\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return b\n    elseif a < b then\n      return\
    \ a\n    else\n      return nil\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) == nil then\n      return nil\n\
    \    end\n    if compare_one(a.y, b.y) == nil then\n      return nil\n    end\n\
    \    if compare_one(a.z, b.z) == nil then\n      return nil\n    end\n    return\
    \ compare_one(a.w, b.w)\n  else\n    return nil\n  end\nend", "  if type(a) ==\
    \ 'number' and type(b) == 'number' then\n    if a == b then\n      return a\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a == b then\n      return a\n    else\n      return b\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  else\n  \
    \  return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return a\n    else\n      return b\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n\
    \      return a\n    else\n      return b\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if a == b then\n      return a\n    else\n\
    \      return b\n    end\n  else\n    return nil\n  end\nend", "  if type(a) ==\
    \ 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n \
    \   elseif a < b then\n      return b\n    else\n      return nil\n    end\n \
    \ elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif a < b then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return nil\n   \
    \ end\n  end\n  return nil\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a > b then\n      return b\n    elseif b > a then\n\
    \      return a\n    else\n      return nil\n    end\n  else\n    return nil\n\
    \  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return b\n    elseif a < b then\n      return a\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return b\n    elseif a < b then\n      return\
    \ a\n    else\n      return nil\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) == nil then\n      return nil\n\
    \    elseif compare_one(a.y, b.y) == nil then\n      return nil\n    else\n  \
    \    return compare_one(a.z, b.z)\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'number' then\n    if tonumber(a) > tonumber(b) then\n      return b\n  \
    \  elseif tonumber(a) < tonumber(b) then\n      return a\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'number' and type(b) == 'string' then\n  \
    \  if tonumber(a) > tonumber(b) then\n      return b\n    elseif tonumber(a) <\
    \ tonumber(b) then\n      return a\n    else\n      return nil\n    end\n  elseif\
    \ type(a) == 'table' and type(b) == 'string' then\n    if compare_one(a.x, b)\
    \ == nil then\n      return nil\n    elseif compare_one(a.y, b) == nil then\n\
    \      return nil\n    else\n      return compare_one(a.z, b)\n    end\n  elseif\
    \ type(a) == 'string' and type(b) == 'table' then\n    if compare_one(a, b) ==\
    \ nil then\n      return nil\n    elseif compare_one(b, a) == nil then\n     \
    \ return nil\n    else\n      return compare_one(a.x, b.x)\n    end\n  elseif\
    \ type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x)\
    \ == nil then\n      return nil\n    elseif compare_one(a.y, b.y) == nil then\n\
    \      return nil\n    else\n      return compare_one(a.z, b.z)\n    end\n  elseif\
    \ type(a) == 'table' and type(b) == 'number' then\n    if compare_one(a.x, b)\
    \ == nil then\n      return nil\n    elseif compare_one(a.y, b) == nil then\n\
    \      return nil\n    else\n      return compare_one(a.z, b)\n    end\n  elseif\
    \ type(a) == 'number' and type(b) == 'table' then\n    if compare_one(a, b) ==\
    \ nil then\n      return nil\n    elseif compare_one(b, a) == nil then\n     \
    \ return nil\n    else\n", "  if type(a) == 'number' and type(b) == 'number' then\n\
    \    if a > b then\n      return a\n    elseif b > a then\n      return b\n  \
    \  else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) ~= 'number' or type(b)\
    \ ~= 'number' then\n    return nil\n  end\n  if a == b then\n    return a\n  elseif\
    \ type(a) == 'number' and type(b) == 'string' then\n    return b\n  elseif type(b)\
    \ == 'number' and type(a) == 'string' then\n    return a\n  else\n    return nil\n\
    \  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif a < b then\n      return b\n    else\n\
    \      return a\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return b\n    elseif a < b then\n      return\
    \ a\n    else\n      return a\n    end\n  else\n    return a\n  end\nend", " \
    \ if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n   \
    \   return a\n    elseif b > a then\n      return b\n    else\n      return a\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return a\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n\
    \    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return a\n\
    \    else\n      return b\n    end\n  else\n    return a\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a ~= b then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if #a ~= #b then\n      return b\n    else\n\
    \      for i, v in ipairs(a) do\n        if compare_one(v, b[i]) ~= nil then\n\
    \          return b\n        end\n      end\n      return nil\n    end\n  else\n\
    \    return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return a\n    else\n      return b\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n\
    \      return a\n    else\n      return b\n    end\n  else\n    return nil\n \
    \ end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return b\n    elseif b > a then\n      return\
    \ a\n    else\n      return nil\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a == b then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a == b then\n      return a\n    elseif a:find(',') ~= -1 and b:find(',')\
    \ ~= -1 then\n      local a_ = a:gsub(',', '.')\n      local b_ = b:gsub(',',\
    \ '.')\n      if a_ == b_ then\n        return a\n      else\n        return b\n\
    \      end\n    else\n      return b\n    end\n  else\n    return b\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return\
    \ nil\n    end\n  end\n  return nil\nend", "  if type(a) ~= type(b) then return\
    \ nil end\n  if type(a) == 'number' then\n    if a > b then return b end\n   \
    \ if a == b then return nil end\n  end\n  if type(a) == 'string' then\n    if\
    \ a:match('%.') then\n      if a:match('%.') then\n        if a:match('%.') then\n\
    \          local a, b, c = a:match('(%d+)(%d+)(%d+)')\n          if b == c and\
    \ a:match('%d+') then\n            return a\n          end\n        end\n    \
    \  else\n        local a, b, c = a:match('(%d+)(%d+)(%d+)')\n        if b == c\
    \ and a:match('%d+') then\n          return a\n        end\n      end\n    end\n\
    \  end\n  return nil\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return a\n    else\n      return b\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n\
    \      return a\n    else\n      return b\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if a == b then\n      return a\n    else\n\
    \      return b\n    end\n  else\n    return nil\n  end\nend", "  if type(a) ==\
    \ 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n \
    \   elseif b > a then\n      return b\n    else\n      return nil\n    end\n \
    \ elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return compare_one(a.z,\
    \ b.z)\n    else\n      return nil\n    end\n  elseif type(a) == 'string' and\
    \ type(b) == 'number' then\n    if tonumber(a) > tonumber(b) then\n      return\
    \ a\n    elseif tonumber(b) > tonumber(a) then\n      return b\n    else\n   \
    \   return nil\n    end\n  elseif type(a) == 'number' and type(b) == 'string'\
    \ then\n    if tonumber(a) > tonumber(b) then\n      return a\n    elseif tonumber(b)\
    \ > tonumber(a) then\n      return b\n    else\n      return nil\n    end\n  elseif\
    \ type(a) == 'table' and type(b) == 'string' then\n    if compare_one(a.x, b)\
    \ and compare_one(a.y, b) then\n      return compare_one(a.z, b)\n    else\n \
    \     return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'table'\
    \ then\n    if compare_one(a, b) and compare_one(a, b) then\n      return compare_one(a,\
    \ b) \n    else\n      return nil\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return compare_one(a.z, b.z)\n    else\n      return nil\n    end\n  else\n\
    \    return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return a\n    else\n      return b\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n\
    \      return a\n    else\n      return b\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if #a == #b then\n      for i = 1, #a do\n\
    \        if compare_one(a[i], b[i]) then\n          return a\n        end\n  \
    \    end\n      return b\n    else\n      return b\n    end\n  else\n    return\
    \ b\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n   \
    \ if a > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return b\n    elseif b > a then\n      return\
    \ a\n    else\n      return nil\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return nil\n    end\n  end\n  return nil\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return b\n    elseif\
    \ b > a then\n      return a\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    end\n  end\n  return nil\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return a\n    end\n  elseif\
    \ type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n      return\
    \ a\n    elseif b > a then\n      return b\n    else\n      return a\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return a\n    else\n      return\
    \ b\n    end\n  else\n    return nil\n  end\nend", "  if type(a) ~= type(b) then\n\
    \    return nil\n  end\n  if type(a) == 'string' then\n    a = a:gsub(',', '.')\n\
    \    b = b:gsub(',', '.')\n  end\n  if a == b then\n    return nil\n  end\n  if\
    \ a > b then\n    return a\n  end\n  return b\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a == b then\n      return a\n    end\n\
    \  end\n  if type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n\
    \      return a\n    end\n  end\n  if type(a) == 'table' and type(b) == 'table'\
    \ then\n    if #a == #b then\n      for i, v in ipairs(a) do\n        if compare_one(v,\
    \ b[i]) then\n          return v\n        end\n      end\n    end\n  end\n  return\
    \ nil\nend", "  if type(a) ~= 'number' or type(b) ~= 'number' then\n    return\
    \ nil\n  end\n  if a == b then\n    return a\n  elseif type(a) == 'number' and\
    \ type(b) == 'string' then\n    return a\n  elseif type(b) == 'number' and type(a)\
    \ == 'string' then\n    return b\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ ~= type(b) then return nil end\n  if type(a) == 'string' then\n    a = a:gsub(',',\
    \ '.')\n    b = b:gsub(',', '.')\n  end\n  if a == b then return nil end\n  if\
    \ a > b then return b end\n  return a\nend", "  if type(a) ~= type(b) then return\
    \ end\n  if type(a) == 'string' then\n    a = a:gsub(',', '.')\n    b = b:gsub(',',\
    \ '.')\n  end\n  if a == b then return end\n  if a > b then return b end\n  return\
    \ a\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a ==\
    \ b then\n      return a\n    elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n      local a_real = tonumber(a)\n      local b_real = tonumber(b)\n \
    \     if a_real and b_real then\n        if a_real > b_real then\n          return\
    \ a\n        elseif a_real < b_real then\n          return b\n        else\n \
    \         return 'equal'\n        end\n      else\n        return 'equal'\n  \
    \    end\n    else\n      return 'equal'\n    end\n  else\n    return 'equal'\n\
    \  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return b\n    elseif a < b then\n      return a\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return b\n    elseif a < b then\n      return\
    \ a\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n   \
    \   return a\n    else\n      return b\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a == b then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n\
    \    if a == b then\n      return a\n    else\n      return b\n    end\n  else\n\
    \    return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return a\n    else\n      return b\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n\
    \      return a\n    else\n      return b\n    end\n  else\n    return nil\n \
    \ end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ == b then\n      return a\n    elseif math.abs(a - b) < 1e-10 then\n      return\
    \ a\n    else\n      return b\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a == b then\n      return a\n    elseif a:sub(1, 1)\
    \ == b:sub(1, 1) then\n      return a\n    else\n      return b\n    end\n  else\n\
    \    return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return a\n    else\n      return b\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n\
    \      return a\n    else\n      return b\n    end\n  else\n    return nil\n \
    \ end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif a < b then\n      return b\n    else\n\
    \      return a\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif a < b then\n      return\
    \ b\n    else\n      return a\n    end\n  else\n    return a\n  end\nend", " \
    \ if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n   \
    \   return a\n    elseif a < b then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return b\n    elseif a < b then\n      return a\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if math.abs(a - b) < 1e-10 then\n      return\
    \ a\n    else\n      return b\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a == b then\n      return a\n    else\n      return\
    \ b\n    end\n  else\n    return nil\n  end\nend", "  if type(a) ~= type(b) then\
    \ return end\n  if type(a) == 'number' then\n    if a < b then return b end\n\
    \    if a == b then return end\n  end\n  if type(a) == 'string' then\n    if a:match('%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return\
    \ nil\n    end\n  end\n  return nil\nend", "  if type(a) ~= type(b) then return\
    \ nil end\n  if type(a) == 'number' then\n    if a > b then return b end\n   \
    \ if a == b then return nil end\n  end\n  if type(a) == 'string' then\n    if\
    \ a ~= b then return b end\n  end\n  return a\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return compare_one(a.z, b.z)\n  \
    \  else\n      return nil\n    end\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n      return\
    \ a\n    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return nil\n   \
    \ end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    end\n  else\n    return nil\n  end\nend", " \
    \ if type(a) ~= 'number' or type(b) ~= 'number' then\n    return nil\n  end\n\
    \  if a == b then\n    return a\n  elseif type(a) == 'number' and type(b) == 'string'\
    \ then\n    return b\n  elseif type(b) == 'number' and type(a) == 'string' then\n\
    \    return a\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ a < b then\n      return b\n    else\n      return a\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif a < b then\n      return b\n    else\n      return a\n    end\n  else\n\
    \    return a\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if math.abs(a) == math.abs(b) then\n      return a\n    else\n   \
    \   return b\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n\
    \    if a == '.' and b == ',' then\n      return b\n    elseif b == '.' and a\
    \ == ',' then\n      return a\n    elseif a == ',' and b == ',' then\n      return\
    \ a\n    else\n      return b\n    end\n  else\n    return a\n  end\nend", " \
    \ if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n   \
    \   return b\n    elseif a < b then\n      return a\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return b\n    elseif a < b then\n      return a\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if math.abs(a - b) < 1e-10 then\n      return\
    \ a\n    end\n  end\n  if type(a) == 'string' and type(b) == 'string' then\n \
    \   if a == '.' or b == '.' then\n      return a\n    end\n    if a == ',' or\
    \ b == ',' then\n      return b\n    end\n  end\n  if type(a) == 'table' and type(b)\
    \ == 'table' then\n    if #a == #b then\n      for i = 1, #a do\n        if compare_one(a[i],\
    \ b[i]) then\n          return a\n        end\n      end\n    end\n  end\n  return\
    \ nil\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return b\n    elseif b > a then\n      return\
    \ a\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if math.abs(a - b) < 1e-10 then\n\
    \      return a\n    end\n  end\n  if type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a == '.' or b == '.' then\n      return a\n    end\n    if a ==\
    \ '' and b == '' then\n      return a\n    end\n    if a == '' and b == '' then\n\
    \      return b\n    end\n    if a == '.' and b == '.' then\n      return b\n\
    \    end\n  end\n  if type(a) == 'table' and type(b) == 'table' then\n    if #a\
    \ == #b then\n      for i = 1, #a do\n        if compare_one(a[i], b[i]) == nil\
    \ then\n          return nil\n        end\n      end\n      return nil\n    end\n\
    \  end\n  return nil\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return a\n    else\n      return b\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n\
    \      return a\n    else\n      return b\n    end\n  else\n    return nil\n \
    \ end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return nil\n    end\n  end\n  return nil\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return compare_one(a.z, b.z)\n  \
    \  else\n      return nil\n    end\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) ~= 'number' or type(b) ~= 'number' then\n    return nil\n  end\n  if\
    \ a == b then\n    return nil\n  end\n  if a > b then\n    return a\n  end\n \
    \ return b\nend", "  if type(a) == 'number' and type(b) == 'number' then\n   \
    \ if a == b then\n      return a\n    elseif math.abs(a - b) < 1e-15 then\n  \
    \    return a\n    else\n      return b\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a == b then\n      return a\n    elseif\
    \ a:find(',') ~= nil then\n      local a_array = a:split(',')\n      local b_array\
    \ = b:split(',')\n      if a_array[1] == b_array[1] then\n        return compare_one(a_array[2],\
    \ b_array[2])\n      else\n        return compare_one(a_array[1], b_array[1])\n\
    \      end\n    elseif a:find('.') ~= nil then\n      local a_array = a:split('.')\n\
    \      local b_array = b:split('.')\n      if a_array[1] == b_array[1] then\n\
    \        return compare_one(a_array[2], b_array[2])\n      else\n        return\
    \ compare_one(a_array[1], b_array[1])\n      end\n    else\n      return compare_one(a,\
    \ b)\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ a == b then\n      return a\n    elseif a[1] == b[1] then\n      return compare_one(a[2],\
    \ b[2])\n    else\n      return compare_one(a[1], b[1])\n    end\n  else\n   \
    \ return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n\
    \    if a > b then\n      return a\n    elseif b > a then\n      return b\n  \
    \  else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a ~= b then\n      return a\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if math.abs(a - b) < 1e-10 then\n      return a\n    end\n\
    \  end\n  if type(a) == 'string' and type(b) == 'string' then\n    if a == '.'\
    \ and b == '.' then\n      return a\n    end\n    if a == '.' and b == ',' then\n\
    \      return b\n    end\n    if a == ',' and b == '.' then\n      return b\n\
    \    end\n  end\n  return nil\nend", "  if type(a) ~= type(b) then return nil\
    \ end\n  if type(a) == 'number' then\n    if a == b then return nil end\n    if\
    \ a < b then return b end\n    return a\n  elseif type(a) == 'string' then\n \
    \   if a:find(b) ~= nil then return b end\n    if a:find(b) ~= nil then return\
    \ a end\n    return nil\n  elseif type(a) == 'table' then\n    if a[1] == b[1]\
    \ then return compare_one(a[2], b[2]) end\n    if a[1] < b[1] then return b[2]\
    \ end\n    return a[2]\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  else\n  \
    \  return nil\n  end\nend", "  if type(a) ~= type(b) then return end\n  if type(a)\
    \ == 'number' then\n    if a < b then return b end\n    if a == b then return\
    \ b end\n  end\n  if type(a) == 'string' then\n    if a:match('%.') then\n   \
    \   if a:match('%d+') then\n        a = tonumber(a)\n      elseif a:match('%f+')\
    \ then\n        a = tonumber(a, 16)\n      elseif a:match('%w+') then\n      \
    \  a = tonumber(a:sub(1, -1))\n      elseif a:match('%w+%.') then\n        a =\
    \ tonumber(a:sub(1, -1), 16)\n      elseif a:match('%w+%d+') then\n        a =\
    \ tonumber(a:sub(1, -1), 16)\n      elseif a:match('%w+%d+%.') then\n        a\
    \ = tonumber(a:sub(1, -1), 16, 16)\n      end\n    end\n    if a:match('%d+')\
    \ then\n      a = tonumber(a)\n    end\n    if a:match('%f+') then\n      a =\
    \ tonumber(a, 16)\n    end\n    if a:match('%w+') then\n      a = tonumber(a:sub(1,\
    \ -1))\n    end\n    if a:match('%w+%.') then\n      a = tonumber(a:sub(1, -1),\
    \ 16)\n    end\n    if a:match('%w+%d+') then\n      a = tonumber(a:sub(1, -1),\
    \ 16)\n    end\n    if a:match('%w+%d+%.') then\n      a = tonumber(a:sub(1, -1),\
    \ 16, 16)\n    end\n  end\n  return a\nend", "  if type(a) ~= 'number' or type(b)\
    \ ~= 'number' then\n    return nil\n  end\n  if a == b then\n    return a\n  elseif\
    \ type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n      return\
    \ a\n    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a ~= b then\n      return a\n    else\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return a\n    end\n  elseif\
    \ type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n      return\
    \ a\n    elseif b > a then\n      return b\n    else\n      return a\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'string' and type(b) == 'number' then\n    if\
    \ tonumber(a) > tonumber(b) then\n      return a\n    elseif tonumber(b) > tonumber(a)\
    \ then\n      return b\n    else\n      return a\n    end\n  elseif type(a) ==\
    \ 'number' and type(b) == 'string' then\n    if tonumber(a) > tonumber(b) then\n\
    \      return a\n    elseif tonumber(b) > tonumber(a) then\n      return b\n \
    \   else\n      return a\n    end\n  elseif type(a) == 'table' and type(b) ==\
    \ 'string' then\n    if compare_one(a.x, b) then\n      return a\n    else\n \
    \     return b\n    end\n  elseif type(a) == 'string' and type(b) == 'table' then\n\
    \    if compare_one(a, b) then\n      return a\n    else\n      return b\n   \
    \ end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    end\n  end\n  return nil\nend", "  if type(a)\
    \ ~= type(b) then\n    return nil\n  end\n  if type(a) == 'number' then\n    if\
    \ a < b then\n      return a\n    else\n      return b\n    end\n  else\n    if\
    \ a ~= b then\n      return a\n    end\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return b\n\
    \    elseif b > a then\n      return a\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return compare_one(a.z, b.z)\n  \
    \  else\n      return nil\n    end\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n     \
    \ return a\n    else\n      return b\n    end\n  elseif type(a) == 'string' and\
    \ type(b) == 'string' then\n    if a == b then\n      return a\n    else\n   \
    \   return b\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return b\n\
    \    elseif b > a then\n      return a\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return nil\n    end\n  else\n   \
    \ return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n\
    \    if a == b then\n      return a\n    else\n      return b\n    end\n  elseif\
    \ type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n     \
    \ return a\n    else\n      return b\n    end\n  elseif type(a) == 'table' and\
    \ type(b) == 'table' then\n    if a == b then\n      return a\n    else\n    \
    \  return b\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return nil\n    end\n  end\n  return\
    \ nil\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return a\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return a\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return compare_one(a.z, b.z)\n    else\n      return compare_one(a.x, b.x)\
    \ or compare_one(a.y, b.y)\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'number' then\n    if tonumber(a) > tonumber(b) then\n      return a\n  \
    \  elseif tonumber(b) > tonumber(a) then\n      return b\n    else\n      return\
    \ a\n    end\n  elseif type(a) == 'number' and type(b) == 'string' then\n    if\
    \ tonumber(a) > tonumber(b) then\n      return a\n    elseif tonumber(b) > tonumber(a)\
    \ then\n      return b\n    else\n      return a\n    end\n  elseif type(a) ==\
    \ 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return compare_one(a.x,\
    \ b.x) or compare_one(a.y, b.y)\n    end\n  else\n    return a\n  end\nend", " \
    \ if type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n  \
    \    return a\n    elseif math.abs(a - b) < 1e-10 then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a == b then\n      return a\n    elseif a:sub(1, 1) == b:sub(1,\
    \ 1) then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if a:len() == b:len() then\n   \
    \   for i, v in ipairs(a) do\n        if compare_one(v, b[i]) then\n         \
    \ return v\n        end\n      end\n    else\n      return nil\n    end\n  else\n\
    \    return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    end\n  end\n  return nil\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return nil\n   \
    \ end\n  end\n  return nil\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if math.abs(a - b) < 1e-10 then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a:sub(1, 1) == '\"' and b:sub(1, 1) == '\"' then\n      local a_str = a:sub(2)\n\
    \      local b_str = b:sub(2)\n      if a_str == b_str then\n        return compare_one(a_str,\
    \ b_str)\n      else\n        return compare_one(a_str, tostring(b_str))\n   \
    \   end\n    else\n      if a == b then\n        return a\n      else\n      \
    \  return b\n      end\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if #a == #b then\n      for i = 1, #a do\n        if compare_one(a[i],\
    \ b[i]) then\n          return a\n        end\n      end\n      return b\n   \
    \ else\n      return b\n    end\n  elseif type(a) == 'table' and type(b) == 'number'\
    \ then\n    return compare_one(a, tostring(b))\n  else\n    return b\n  end\n\
    end", "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n\
    \      return a\n    elseif a < b then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n  \
    \  if a ~= b then\n      return a\n    else\n      return nil\n    end\n  else\n\
    \    return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return a\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return a\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'number' then\n    if tonumber(a) > tonumber(b) then\n\
    \      return a\n    else\n      return b\n    end\n  elseif type(a) == 'number'\
    \ and type(b) == 'string' then\n    if tonumber(a) > tonumber(b) then\n      return\
    \ a\n    else\n      return b\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'string' then\n    if compare_one(a.x, b) then\n      return a\n    else\n\
    \      return b\n    end\n  else\n    return a\n  end\nend", "  if type(a) ==\
    \ 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n \
    \   elseif b > a then\n      return b\n    else\n      return nil\n    end\n \
    \ elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return nil\n   \
    \ end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return a\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return a\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return a\n    else\n      return b\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n \
    \   if a > b then\n      return a\n    elseif b > a then\n      return b\n   \
    \ else\n      return a\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return b\n    elseif b > a then\n      return\
    \ a\n    else\n      return a\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return a\n    else\n      return b\n    end\n  else\n    return nil\n \
    \ end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return a\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return b\n    elseif b > a then\n      return\
    \ a\n    else\n      return a\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return a\n    end\n  end\n  return nil\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return compare_one(a.z, b.z)\n  \
    \  else\n      return nil\n    end\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n      return\
    \ a\n    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return nil\n   \
    \ end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a ~= b then\n      return a\n    else\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a == b then\n      return a\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a == b then\n      return a\n    else\n      return b\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a == b then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a == b then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if a == b then\n      return a\n\
    \    else\n      return b\n    end\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n      return\
    \ a\n    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return compare_one(a.z,\
    \ b.z)\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return b\n    elseif b > a then\n      return a\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return\
    \ nil\n    end\n  end\n  return nil\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'table' and type(b) == 'number' then\n    if compare_one(a.x,\
    \ b) then\n      return compare_one(a.y, b)\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'number' and type(b) == 'table' then\n    if compare_one(a,\
    \ b) then\n      return compare_one(a, b)\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'table' then\n    if compare_one(a,\
    \ b) then\n      return compare_one(a, b)\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'string' then\n    if compare_one(a.x,\
    \ b) then\n      return compare_one(a.y, b)\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'number' and type(b) == 'string' then\n    if compare_one(a,\
    \ b) then\n      return compare_one(a, b)\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if compare_one(a,\
    \ b) then\n      return compare_one(a, b)\n    else\n      return nil\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a == b then\n      return a\n    else\n      return b\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ == b then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if a == b then\n      return a\n\
    \    else\n      return b\n    end\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n     \
    \ return a\n    else\n      return b\n    end\n  elseif type(a) == 'string' and\
    \ type(b) == 'string' then\n    if a == b then\n      return a\n    else\n   \
    \   return b\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n\
    \    if a == b then\n      return a\n    else\n      return b\n    end\n  else\n\
    \    return nil\n  end\nend", "  if type(a) ~= type(b) then\n    return nil\n\
    \  end\n  if type(a) == 'number' then\n    if a < b then\n      return a\n   \
    \ else\n      return b\n    end\n  else\n    if a ~= b then\n      return a\n\
    \    end\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n\
    \    if a > b then\n      return a\n    elseif b > a then\n      return b\n  \
    \  else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a == b then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a == b then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if #a == #b then\n      for i, v\
    \ in ipairs(a) do\n        if compare_one(v, b[i]) then\n          return v\n\
    \        end\n      end\n    else\n      return nil\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n \
    \   if a > b then\n      return a\n    elseif b > a then\n      return b\n   \
    \ else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a ~= b then\n      return a\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a == b then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a == b then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if a == b then\n      return a\n\
    \    else\n      return b\n    end\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n     \
    \ return a\n    elseif math.abs(a - b) < 1e-9 then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a == b then\n      return a\n    elseif a:sub(1,1) == '-' and b:sub(1,1)\
    \ == '-' then\n      return compare_one(a:sub(2,2), b:sub(2,2))\n    elseif a:sub(1,1)\
    \ == '-' and b:sub(1,1) ~= '-' then\n      return compare_one(a:sub(1,1), b)\n\
    \    elseif a:sub(1,1) ~= '-' and b:sub(1,1) == '-' then\n      return compare_one(a,\
    \ b:sub(2,2))\n    elseif a:sub(1,1) ~= '-' and b:sub(1,1) ~= '-' then\n     \
    \ return compare_one(a:sub(1,1), b:sub(1,1))\n    elseif a:sub(1,1) == '-' and\
    \ b:sub(1,1) ~= '-' then\n      return compare_one(a:sub(2,2), b)\n    elseif\
    \ a:sub(1,1) ~= '-' and b:sub(1,1) == '-' then\n      return compare_one(a, b)\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'table' and type(b) ==\
    \ 'table' then\n    if a == b then\n      return a\n    elseif a:sub(1,1) == '-'\
    \ and b:sub(1,1) == '-' then\n      return compare_one(a:sub(2,2), b:sub(2,2))\n\
    \    elseif a:sub(1,1) == '-' and b:sub(1,1) ~= '-' then\n      return compare_one(a:sub(1,1),\
    \ b)\n    elseif a:sub(1,1) ~= '-' and b:sub(1,1) == '-' then\n      return compare_one(a,\
    \ b:sub(2,2))\n    elseif a:sub(1,1) ~= '-' and b:sub(1,1) ~= '-' then\n     \
    \ return compare_one(a:sub(1,1), b:sub(1,1))\n    elseif a:sub(1,1) == '-' and\
    \ b:sub(1,1) ~= '-' then\n      return compare_one(a:sub(2,2), b)\n    elseif\
    \ a:sub(1,1) ~= '-' and b:sub(1,1) == '-' then\n      return compare_one(a, b)\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'number' then\n    if a:sub(1,1) == '-' and math.abs(b) < 1e-9 then\n      return\
    \ a\n    else\n      return b\n    end\n  elseif type(a) == 'number' and type(b)\
    \ == 'string' then\n    if a:sub(1,1) == '", "  if type(a) ~= 'number' or type(b)\
    \ ~= 'number' then\n    return nil\n  end\n  if a == b then\n    return a\n  elseif\
    \ type(a) == 'number' and type(b) == 'string' then\n    return b\n  elseif type(b)\
    \ == 'number' and type(a) == 'string' then\n    return a\n  else\n    return nil\n\
    \  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return a\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return a\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return a\n    else\n      return b\n    end\n  else\n    return nil\n \
    \ end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return nil\n    end\n  end\n  return nil\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return a\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return b\n\
    \    elseif b > a then\n      return a\n    else\n      return a\n    end\n  elseif\
    \ type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x)\
    \ and compare_one(a.y, b.y) then\n      return a\n    else\n      return b\n \
    \   end\n  else\n    return nil\n  end\nend", "  if type(a) ~= type(b) then return\
    \ nil end\n  if type(a) == 'number' then\n    if a > b then return b end\n   \
    \ if a == b then return nil end\n  end\n  if type(a) == 'string' then\n    if\
    \ a:match('%.') then\n      if a:match('%.') then\n        if a:match('%.') then\n\
    \          return compare_one(a:match('%.'):rep(-1), b:match('%.'):rep(-1))\n\
    \        end\n      else\n        return compare_one(a:match('%[%]'):rep(-1),\
    \ b:match('%[%]'):rep(-1))\n      end\n    end\n  end\n  return a\nend", "  if\
    \ type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n      return\
    \ a\n    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return compare_one(a.z,\
    \ b.z)\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return b\n    elseif b > a then\n      return a\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return\
    \ compare_one(a.z, b.z)\n    else\n      return nil\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n \
    \   if a > b then\n      return a\n    elseif b > a then\n      return b\n   \
    \ else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'number' then\n    if tonumber(a)\
    \ > tonumber(b) then\n      return a\n    elseif tonumber(b) > tonumber(a) then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'number'\
    \ and type(b) == 'string' then\n    if tonumber(a) > tonumber(b) then\n      return\
    \ a\n    elseif tonumber(b) > tonumber(a) then\n      return b\n    else\n   \
    \   return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'string' then\n\
    \    if compare_one(a.x, b) and compare_one(a.y, b) then\n      return compare_one(a.z,\
    \ b)\n    else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'table' then\n    if compare_one(a, b) and compare_one(a, b) then\n     \
    \ return compare_one(a, b) \n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) ~= type(b) then return\
    \ nil end\n  if type(a) == 'number' then\n    if a > b then return b end\n   \
    \ if a == b then return nil end\n  end\n  if type(a) == 'string' then\n    if\
    \ a ~= b then return b end\n  end\n  return a\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a == b then\n      return a\n    elseif math.abs(a - b)\
    \ < 1e-9 then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a == b then\n      return a\n\
    \    elseif a:sub(1, -1) == b:sub(1, -1) then\n      return a\n    else\n    \
    \  return b\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n\
    \    if a:size() == b:size() then\n      for i = 1, a:size() do\n        if compare_one(a[i],\
    \ b[i]) then\n          return a\n        end\n      end\n      return b\n   \
    \ else\n      return nil\n    end\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n      return\
    \ a\n    elseif b > a then\n      return b\n    else\n      return a\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ a\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'string' and type(b) == 'number'\
    \ then\n    if tonumber(a) > tonumber(b) then\n      return a\n    else\n    \
    \  return b\n    end\n  elseif type(a) == 'number' and type(b) == 'string' then\n\
    \    if tonumber(a) > tonumber(b) then\n      return a\n    else\n      return\
    \ b\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and\
    \ type(b) == 'number' then\n    if a > b then\n      return a\n    elseif b >\
    \ a then\n      return b\n    else\n      return a\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return a\n    end\n  elseif\
    \ type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x)\
    \ and compare_one(a.y, b.y) then\n      return a\n    else\n      return b\n \
    \   end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  else\n  \
    \  return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return a\n    else\n      return b\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n\
    \      return a\n    elseif a:find(',') ~= -1 and b:find(',') ~= -1 then\n   \
    \   return b\n    else\n      return a\n    end\n  else\n    return a\n  end\n\
    end", "  if type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n\
    \      return a\n    else\n      return b\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a == b then\n      return a\n    else\n\
    \      return b\n    end\n  else\n    return a\n  end\nend", "  if type(a) ==\
    \ 'number' and type(b) == 'number' then\n    if math.abs(a - b) < 1e-10 then\n\
    \      return a\n    else\n      return b\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a == '.' or b == '.' then\n      return\
    \ a\n    else\n      return b\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if #a ~= #b then\n      return b\n    else\n      for i\
    \ = 1, #a do\n        if compare_one(a[i], b[i]) then\n          return b\n  \
    \      end\n      end\n      return a\n    end\n  else\n    return nil\n  end\n\
    end", "  if type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n\
    \      return a\n    else\n      return b\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a == b then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n\
    \    if #a == #b then\n      for i = 1, #a do\n        if compare_one(a[i], b[i])\
    \ then\n          return a\n        end\n      end\n      return b\n    else\n\
    \      return b\n    end\n  else\n    return b\n  end\nend", "  if type(a) ==\
    \ 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n \
    \   elseif b > a then\n      return b\n    else\n      return nil\n    end\n \
    \ elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return nil\n   \
    \ end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return b\n    elseif\
    \ b > a then\n      return a\n    else\n      return nil\n    end\n  else\n  \
    \  return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return a\n    else\n      return b\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n\
    \      return a\n    else\n      return b\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if #a == #b then\n      for i, v in ipairs(a)\
    \ do\n        if compare_one(v, b[i]) then\n          return v\n        end\n\
    \      end\n      return nil\n    else\n      return nil\n    end\n  else\n  \
    \  return nil\n  end\nend", "  if type(a) ~= 'number' or type(b) ~= 'number' then\n\
    \    return nil\n  end\n  if a == b then\n    return a\n  elseif type(a) == 'number'\
    \ and type(b) == 'string' then\n    return b\n  elseif type(b) == 'number' and\
    \ type(a) == 'string' then\n    return a\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n   \
    \   return a\n    else\n      return b\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a == b then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n\
    \    if #a == #b then\n      for i = 1, #a do\n        if compare_one(a[i], b[i])\
    \ == nil then\n          return nil\n        end\n      end\n      return a\n\
    \    else\n      return nil\n    end\n  else\n    return nil\n  end\nend", " \
    \ if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n   \
    \   return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return\
    \ compare_one(a.z, b.z)\n    else\n      return nil\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n \
    \   if a > b then\n      return a\n    elseif b > a then\n      return b\n   \
    \ else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    else\n      return compare_one(a.x, b.x) or\
    \ compare_one(a.y, b.y)\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return a\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return a\n    end\n  elseif\
    \ type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x)\
    \ and compare_one(a.y, b.y) then\n      return a\n    else\n      return b\n \
    \   end\n  else\n    return a\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return a\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return b\n    elseif\
    \ b > a then\n      return a\n    else\n      return a\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return a\n    else\n      return b\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n \
    \   if a > b then\n      return a\n    elseif b > a then\n      return b\n   \
    \ else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  else\n    return nil\n \
    \ end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if math.abs(a\
    \ - b) < 1e-15 then return end\n    return a\n  elseif type(a) == 'string' and\
    \ type(b) == 'string' then\n    if a == b then return end\n    if a == '.' or\
    \ b == '.' then return end\n    if a == '-' or b == '-' then return end\n    if\
    \ a == '+' or b == '+' then return end\n    if a == '*' or b == '*' then return\
    \ end\n    if a == '/' or b == '/' then return end\n    if a == '%' or b == '%'\
    \ then return end\n    if a == '^' or b == '^' then return end\n    if a == '~'\
    \ or b == '~' then return end\n    if a == '<' or b == '<' then return end\n \
    \   if a == '>' or b == '>' then return end\n    if a == '=' or b == '=' then\
    \ return end\n    if a == '!' or b == '!' then return end\n    if a == '&' or\
    \ b == '&' then return end\n    if a == '|' or b == '|' then return end\n    if\
    \ a == '{' or b == '{' then return end\n    if a == '}' or b == '}' then return\
    \ end\n    if a == '[' or b == ']' then return end\n    if a == '(' or b == ')'\
    \ then return end\n    if a == '%' or b == '%' then return end\n    if a == '+'\
    \ or b == '+' then return end\n    if a == '-' or b == '-' then return end\n \
    \   if a == '*' or b == '*' then return end\n    if a == '/' or b == '/' then\
    \ return end\n    if a == '^' or b == '^' then return end\n    if a == '~' or\
    \ b == '~' then return end\n    if a == '<' or b == '<' then return end\n    if\
    \ a == '>' or b == '>' then return end\n    if a == '=' or b == '=' then return\
    \ end\n    if a == '!' or b == '!' then return end\n    if a == '&' or b == '&'\
    \ then return end\n    if a == '|' or b == '|' then return end\n    if a == '{'\
    \ or b == '{' then return end\n    if a == '}' or b == '}' then return end\n \
    \   if a == '[' or b == ']' then return end\n    if a == '(' or b == ')' then\
    \ return end\n    if a == '%' or b == '%' then return ", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a ~= b then\n      return a\n\
    \    else\n      return nil\n    end\n  else\n    return nil\n  end\nend", " \
    \ if type(a) == 'number' and type(b) == 'number' then\n    if math.abs(a - b)\
    \ < 1e-10 then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a == b then\n      return a\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'table' and type(b) ==\
    \ 'table' then\n    if #a == #b then\n      for i = 1, #a do\n        if compare_one(a[i],\
    \ b[i]) then\n          return a\n        end\n      end\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return a\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return a\n    end\n  elseif\
    \ type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x)\
    \ and compare_one(a.y, b.y) then\n      return a\n    else\n      return b\n \
    \   end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a ~= b then\n      return b\n    else\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return b\n    elseif b > a then\n      return a\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return compare_one(a.z,\
    \ b.z)\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n   \
    \   return a\n    else\n      return b\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a == b then\n      return a\n    else\n\
    \      return b\n    end\n  else\n    return a\n  end\nend", "  if type(a) ==\
    \ 'number' and type(b) == 'number' then\n    if a == b then\n      return a\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a == b then\n      return a\n    else\n      return b\n\
    \    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if #a ==\
    \ #b then\n      for i = 1, #a do\n        if compare_one(a[i], b[i]) then\n \
    \         return a\n        end\n      end\n      return b\n    else\n      return\
    \ b\n    end\n  else\n    return b\n  end\nend", "  if type(a) == 'number' and\
    \ type(b) == 'number' then\n    if a > b then\n      return b\n    elseif a <\
    \ b then\n      return a\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return b\n\
    \    elseif a < b then\n      return a\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) == nil then\n      return nil\n    elseif compare_one(a.y, b.y) == nil\
    \ then\n      return nil\n    else\n      return compare_one(a.z, b.z)\n    end\n\
    \  elseif type(a) == 'function' and type(b) == 'function' then\n    if compare_one(a.x,\
    \ b.x) == nil then\n      return nil\n    elseif compare_one(a.y, b.y) == nil\
    \ then\n      return nil\n    else\n      return compare_one(a.z, b.z)\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return b\n    elseif\
    \ b > a then\n      return a\n    else\n      return nil\n    end\n  else\n  \
    \  return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return a\n    else\n      return b\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n\
    \      return a\n    else\n      return b\n    end\n  else\n    return nil\n \
    \ end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return a\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return a\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return a\n    else\n      return b\n    end\n  else\n    return nil\n \
    \ end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return b\n    elseif b > a then\n      return\
    \ a\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return\
    \ nil\n    end\n  end\n  return nil\nend", "  if type(a) ~= type(b) then return\
    \ nil end\n  if type(a) == 'number' then\n    if a > b then return b end\n   \
    \ if a == b then return nil end\n  end\n  if type(a) == 'string' then\n    if\
    \ a ~= b then return b end\n  end\n  return a\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a ~= b then\n      return a\n\
    \    else\n      return nil\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if #a == #b then\n      for i = 1, #a do\n        if compare_one(a[i],\
    \ b[i]) == nil then\n          return nil\n        end\n      end\n      return\
    \ a\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return\
    \ nil\n    end\n  end\n  return nil\nend", "  if type(a) ~= 'number' or type(b)\
    \ ~= 'number' then\n    return nil\n  end\n  if a == b then\n    return a\n  end\n\
    \  if a > b then\n    return a\n  end\n  return b\nend", "  if type(a) ~= type(b)\
    \ then return nil end\n  if type(a) == 'number' then\n    if a > b then return\
    \ b end\n    if a == b then return nil end\n  end\n  if type(a) == 'string' then\n\
    \    if a ~= b then return b end\n  end\n  return a\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a == b then\n      return a\n    elseif\
    \ type(a) == 'string' and type(b) == 'string' then\n      if a == b then\n   \
    \     return a\n      elseif a:find(',') ~= nil then\n        return a\n     \
    \ else\n        return b\n      end\n    elseif a:find(',') ~= nil then\n    \
    \  return a\n    else\n      return b\n    end\n  elseif type(a) == 'string' and\
    \ type(b) == 'string' then\n    if a:find(',') ~= nil then\n      return a\n \
    \   else\n      return b\n    end\n  elseif type(a) == 'table' and type(b) ==\
    \ 'table' then\n    if #a == #b then\n      for i = 1, #a do\n        if compare_one(a[i],\
    \ b[i]) then\n          return a\n        end\n      end\n      return b\n   \
    \ else\n      return nil\n    end\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) ~= type(b) then\n    return nil\n  end\n  if type(a) == 'number' then\n\
    \    if a > b then\n      return a\n    elseif a < b then\n      return b\n  \
    \  else\n      return nil\n    end\n  elseif type(a) == 'string' then\n    if\
    \ a:match('%d*') then\n      local n = tonumber(a:match('%d*'))\n      if n then\n\
    \        if b == n then\n          return nil\n        else\n          return\
    \ n\n        end\n      end\n    end\n    if a:match('%f*') then\n      local\
    \ n = tonumber(a:match('%f*'))\n      if n then\n        if b == n then\n    \
    \      return nil\n        else\n          return n\n        end\n      end\n\
    \    end\n    if a:match('%w+') then\n      local n = a:match('%w+')\n      if\
    \ n then\n        if b == n then\n          return nil\n        else\n       \
    \   return n\n        end\n      end\n    end\n  end\n  return nil\nend", "  if\
    \ type(a) == 'number' and type(b) == 'number' then\n    if math.abs(a) > math.abs(b)\
    \ then\n      return b\n    else\n      return a\n    end\n  elseif type(a) ==\
    \ 'string' and type(b) == 'string' then\n    if a ~= b then\n      return b\n\
    \    else\n      return a\n    end\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n      return\
    \ a\n    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return nil\n   \
    \ end\n  else\n    return nil\n  end\nend", "  if type(a) ~= type(b) then return\
    \ end\n  if type(a) == 'number' then\n    if a < b then return b end\n    if a\
    \ > b then return a end\n  elseif type(a) == 'string' then\n    if a:match('%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d*%d",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return\
    \ nil\n    end\n  elseif type(a) == 'string' and type(b) == 'number' then\n  \
    \  if tonumber(a) > tonumber(b) then\n      return a\n    elseif tonumber(b) >\
    \ tonumber(a) then\n      return b\n    else\n      return nil\n    end\n  elseif\
    \ type(a) == 'number' and type(b) == 'string' then\n    if tonumber(a) > tonumber(b)\
    \ then\n      return a\n    elseif tonumber(b) > tonumber(a) then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'string' then\n    if compare_one(a.x, b) and compare_one(a.y, b) then\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'table'\
    \ then\n    if compare_one(a, b) and compare_one(a, b) then\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a == b then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a == b then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if a == b then\n      return a\n\
    \    else\n      return b\n    end\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) ~= type(b) then return nil end\n  if a == b then return nil end\n  if\
    \ type(a) == 'number' and type(b) == 'number' then\n    if math.abs(a - b) < 1e-10\
    \ then return nil end\n  end\n  if type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a ~= b then return nil end\n  end\n  return a\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a == b then\n      return a\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a == b then\n      return a\n    else\n      return b\n\
    \    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if a ==\
    \ b then\n      return a\n    else\n      return b\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n \
    \   if a > b then\n      return a\n    elseif b > a then\n      return b\n   \
    \ else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    end\n  end\n  return nil\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if math.abs(a - b) < 1e-15 then\
    \ return end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a == '.' or b == '.' then return end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if #a == #b then return end\n  else\n    return nil\n \
    \ end\n  return b\nend", "  if type(a) == 'number' and type(b) == 'number' then\n\
    \    if a > b then\n      return a\n    elseif b > a then\n      return b\n  \
    \  else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  else\n    return nil\n \
    \ end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if math.abs(a\
    \ - b) < 1e-10 then\n      return a\n    else\n      return b\n    end\n  elseif\
    \ type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n     \
    \ return a\n    else\n      return b\n    end\n  else\n    return nil\n  end\n\
    end", "  if type(a) == 'number' and type(b) == 'number' then\n    if math.abs(a\
    \ - b) < 1e-10 then\n      return a\n    else\n      return b\n    end\n  elseif\
    \ type(a) == 'string' and type(b) == 'string' then\n    if a:sub(1, 1) == '\"\
    ' and b:sub(1, 1) == '\"' then\n      local a_str = a:sub(2, -2)\n      local\
    \ b_str = b:sub(2, -2)\n      if a_str == b_str then\n        return a\n     \
    \ else\n        return b\n      end\n    elseif a:sub(1, 1) == '\"' and b:sub(1,\
    \ 1) ~= '\"'\n    or a:sub(1, 1) ~= '\"'\n    or b:sub(1, 1) == '\"' then\n  \
    \    local a_str = a:sub(1, -2)\n      local b_str = b:sub(1, -2)\n      if a_str\
    \ == b_str then\n        return a\n      else\n        return b\n      end\n \
    \   else\n      if a == b then\n        return a\n      else\n        return b\n\
    \      end\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n\
    \    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return a\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'table' and type(b) ==\
    \ 'number' then\n    if compare_one(a.x, b) then\n      return a\n    else\n \
    \     return b\n    end\n  elseif type(a) == 'number' and type(b) == 'table' then\n\
    \    if compare_one(a, b) then\n      return a\n    else\n      return b\n   \
    \ end\n  elseif type(a) == 'string' and type(b) == 'table' then\n    if compare_one(a,\
    \ b) then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'string' then\n    if compare_one(a.x, b) then\n \
    \     return a\n    else\n      return b\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'number' then\n    if compare_one(a.x, b) then\n \
    \     return a\n    else\n      return b\n    end\n  elseif type(a) == 'number'\
    \ and type(b) == 'table' then\n    if compare_one(a, b) then\n      return a\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'table' then\n    if compare_one(a, b) then\n      return a\n    else\n    \
    \  return ", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ == b then\n      return a\n    elseif math.abs(a - b) < 1e-15 then\n      return\
    \ a\n    else\n      return b\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a == b then\n      return a\n    elseif a:sub(1, -1)\
    \ == b:sub(1, -1) then\n      return a\n    else\n      return b\n    end\n  elseif\
    \ type(a) == 'table' and type(b) == 'table' then\n    if a == b then\n      return\
    \ a\n    elseif #a == #b then\n      local i = 1\n      local j = 1\n      while\
    \ i <= #a and j <= #b do\n        if a[i] ~= b[j] then\n          return b[j]\n\
    \        end\n        i = i + 1\n        j = j + 1\n      end\n      return a[1]\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a == b then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a == b then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if a == b then\n      return a\n\
    \    else\n      return b\n    end\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n     \
    \ return a\n    elseif math.abs(a - b) < 1e-10 then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a == b then\n      return a\n    elseif a:sub(1, 1) == ',' and\
    \ b:sub(1, 1) == '-' then\n      return a\n    elseif a:sub(1, 1) == '-' and b:sub(1,\
    \ 1) == ',' then\n      return b\n    elseif a:sub(1, 1) == ',' and b:sub(1, 1)\
    \ == '.' then\n      return a\n    elseif a:sub(1, 1) == '-' and b:sub(1, 1) ==\
    \ '.' then\n      return b\n    elseif a:sub(1, 1) == '-' and b:sub(1, 1) == '-'\
    \ then\n      return a\n    elseif a:sub(1, 1) == ',' and b:sub(1, 1) == '-' then\n\
    \      return a\n    elseif a:sub(1, 1) == '-' and b:sub(1, 1) == ',' then\n \
    \     return b\n    elseif a:sub(1, 1) == ',' and b:sub(1, 1) == '.' then\n  \
    \    return a\n    elseif a:sub(1, 1) == '-' and b:sub(1, 1) == '.' then\n   \
    \   return b\n    elseif a:sub(1, 1) == '-' and b:sub(1, 1) == '-' then\n    \
    \  return a\n    elseif a:sub(1, 1) == ',' and b:sub(1, 1) == '-' then\n     \
    \ return a\n    elseif a:sub(1, 1) == '-' and b:sub(1, 1) == ',' then\n      return\
    \ b\n    elseif a:sub(1, 1) == ',' and b:sub(1, 1) == '.' then\n      return a\n\
    \    elseif a:sub(1, 1) == '-' and b:sub(1, 1) == '.' then\n      return b\n \
    \   elseif a:sub(1, 1) == '-' and b:sub(1, 1) == '-' then\n      return a\n  \
    \  elseif a:sub(1, 1) == ',' and b:sub(1, 1) == '-' then\n      return a\n   \
    \ elseif a:sub(1, 1) == '-' and b:sub(1, 1) == ',' then\n      return b\n    elseif\
    \ a:sub(1, 1) == ',' and b:sub(1, 1) == '.' then\n      return a\n    elseif a:sub(1,\
    \ 1) == '-' and b:sub(1, 1) == '.' then\n      return b\n    elseif a:sub(1, 1)\
    \ == '-' and b:sub(1, 1) == '-' then\n      return a\n    elseif a:sub(1, 1) ==\
    \ ',' and b:sub(1, 1) == '-' then\n      return a\n    elseif a:sub(1, 1) == '-'\
    \ and b:sub(1, 1) == ',' then\n      return b\n    elseif a:sub(1, 1) == ',",
  "  if type(a) ~= type(b) then return nil end\n  if type(a) == 'number' then\n  \
    \  if a < b then return b end\n    if a > b then return a end\n  elseif type(a)\
    \ == 'string' then\n    if a:match('%.') then\n      if a:match('%d') then\n \
    \       if a:match('%d%d') then\n          if a:match('%d%d%d') then\n       \
    \     if a:match('%d%d%d%d') then\n              if a:match('%d%d%d%d%d') then\n\
    \                if a:match('%d%d%d%d%d%d') then\n                  return a\n\
    \                end\n              end\n            end\n          end\n    \
    \    end\n      end\n    end\n  end\n  return nil\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return nil\n    end\n  end\n  return\
    \ nil\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return compare_one(a.z, b.z)\n    else\n      return nil\n    end\n  else\n\
    \    return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if math.abs(a - b) < 1e-10 then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a == '.' or b == '.' then\n      return a\n    else\n      return b\n    end\n\
    \  else\n    return nil\n  end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

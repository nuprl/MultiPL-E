name: HumanEval_106_f
language: lua
prompt: "-- Implement the function f that takes n as a parameter,\n-- and returns\
  \ a table of size n, such that the value of the element at index i is the factorial\
  \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
  \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
  \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal function\
  \ f(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = f\n\
  \    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
  \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
  \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local factorial = {}\n  for i = 1, n do\n    factorial[i] = 1\n \
    \   for j = 1, i do\n      factorial[i] = factorial[i] * j\n    end\n  end\n \
    \ return factorial\nend", "  local factorial = {}\n  for i = 1, n do\n    factorial[i]\
    \ = i * factorial[i - 1]\n  end\n  return factorial\nend", "  local factorial\
    \ = {}\n  for i = 1, n do\n    factorial[i] = 1\n    for j = 1, i do\n      factorial[i]\
    \ *= j\n    end\n  end\n  return factorial\nend", "  local factorial = {}\n  for\
    \ i = 1, n do\n    factorial[i] = 1\n    for j = 1, i do\n      factorial[i] =\
    \ factorial[i] * j\n    end\n  end\n  return factorial\nend", "  local factorials\
    \ = {}\n  for i = 1, n do\n    factorials[i] = 1\n    for j = 1, i do\n      factorials[i]\
    \ = factorials[i] * j\n    end\n  end\n  return factorials\nend", "  local factorial\
    \ = {}\n  for i = 1, n do\n    factorial[i] = i * factorial[i - 1]\n  end\n  return\
    \ factorial\nend", "  local factorial = {}\n  for i = 1, n do\n    factorial[i]\
    \ = 1\n    for j = 1, i do\n      factorial[i] *= j\n    end\n  end\n  return\
    \ factorial\nend", "    local factorial = {}\n    for i = 1, n do\n        factorial[i]\
    \ = 1\n        for j = 1, i do\n            factorial[i] = factorial[i] * j\n\
    \        end\n    end\n    return factorial\nend", "  local factorial = {}\n \
    \ for i = 1, n do\n    factorial[i] = 1\n    for j = 1, i do\n      factorial[i]\
    \ *= j\n    end\n  end\n  return factorial\nend", "    local factorial = {}\n\
    \    for i = 1, n do\n        factorial[i] = 1\n        for j = 1, i do\n    \
    \        factorial[i] = factorial[i] * j\n        end\n    end\n    return factorial\n\
    end", "  local factorial = {}\n  for i = 1, n do\n    factorial[i] = 1\n    for\
    \ j = 1, i do\n      factorial[i] = factorial[i] * j\n    end\n  end\n  return\
    \ factorial\nend", "  local factorial = {}\n  for i = 1, n do\n    factorial[i]\
    \ = 1\n    for j = 1, i do\n      factorial[i] = factorial[i] * j\n    end\n \
    \ end\n  return factorial\nend", "  local factorials = {}\n  for i = 1, n do\n\
    \    factorials[i] = 1\n    for j = 1, i do\n      factorials[i] = factorials[i]\
    \ * j\n    end\n  end\n  return factorials\nend", "  local factorial = {}\n  for\
    \ i = 1, n do\n    factorial[i] = 1\n    for j = 1, i do\n      factorial[i] *=\
    \ j\n    end\n  end\n  return factorial\nend", "  local factorial = {}\n  for\
    \ i = 1, n do\n    factorial[i] = 1\n    for j = 1, i do\n      factorial[i] *=\
    \ j\n    end\n  end\n  return factorial\nend", "    local factorials = {}\n  \
    \  for i = 1, n do\n        factorials[i] = 1\n    end\n    for i = 2, n do\n\
    \        factorials[i] = factorials[i-1] * i\n    end\n    return factorials\n\
    end", "  local factorials = {}\n  for i = 1, n do\n    factorials[i] = 1\n   \
    \ for j = 1, i do\n      factorials[i] *= j\n    end\n  end\n  return factorials\n\
    end", "  local factorial = {}\n  for i = 1, n do\n    factorial[i] = 1\n    for\
    \ j = 1, i do\n      factorial[i] *= j\n    end\n  end\n  return factorial\nend",
  "    local factorial = {}\n    for i = 1, n do\n        factorial[i] = 1\n    end\n\
    \    for i = 2, n do\n        factorial[i] = factorial[i] * i\n    end\n    return\
    \ factorial\nend", "  local factorial = {}\n  for i = 1, n do\n    factorial[i]\
    \ = 1\n    for j = 1, i do\n      factorial[i] = factorial[i] * j\n    end\n \
    \ end\n  return factorial\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

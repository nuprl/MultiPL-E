name: HumanEval_117_select_words
language: lua
prompt: "-- Given a string s and a natural number n, you have been tasked to implement\
  \ \n-- a function that returns a table of all words from string s that contain exactly\
  \ \n-- n consonants, in order these words appear in the string s.\n-- If the string\
  \ s is empty then the function should return an empty table.\n-- Note: you may assume\
  \ the input string contains only letters and spaces.\n-- Examples:\n-- >>> select_words('Mary\
  \ had a little lamb', 4)\n-- {'little'}\n-- >>> select_words('Mary had a little\
  \ lamb', 3)\n-- {'Mary', 'lamb'}\n-- >>> select_words('simple white space', 2)\n\
  -- {}\n-- >>> select_words('Hello world', 4)\n-- {'world'}\n-- >>> select_words('Uncle\
  \ sam', 3)\n-- {'Uncle'}\nlocal function select_words(s, n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = select_words\n\
  \    lu.assertEquals(candidate('Mary had a little lamb', 4), {'little'})\n    lu.assertEquals(candidate('Mary\
  \ had a little lamb', 3), {'Mary', 'lamb'})\n    lu.assertEquals(candidate('simple\
  \ white space', 2), {})\n    lu.assertEquals(candidate('Hello world', 4), {'world'})\n\
  \    lu.assertEquals(candidate('Uncle sam', 3), {'Uncle'})\n    lu.assertEquals(candidate('',\
  \ 4), {})\n    lu.assertEquals(candidate('a b c d e f', 1), {'b', 'c', 'd', 'f'})\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["  -- Your code here\n  local t = {}\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ == string.sub(s,i,i) and string.sub(s,i,i) == string.sub(s,i,i) then\n     \
    \ table.insert(t, string.sub(s,1,i))\n    end\n  end\n  return t\nend", "  --\
    \ Write your code here.\n  local table = {}\n  local i = 0\n  while i <= #s do\n\
    \    if string.sub(s,i,i+n) == string.sub(s,i,i+n) then\n      table.insert(table,string.sub(s,i,i+n))\n\
    \    end\n    i = i+1\n  end\n  return table\nend", "  -- Write your code here.\n\
    \  local t = {}\n  for i = 1, #s do\n    if string.sub(s,i,i) == ' ' then\n  \
    \    table.insert(t, string.sub(s,1,i))\n    else\n      local count = 0\n   \
    \   for j = 1, #s do\n        if string.sub(s,i,j) == string.sub(s,i,j) then\n\
    \          count = count + 1\n        end\n      end\n      if count == n then\n\
    \        table.insert(t, string.sub(s,1,i))\n      end\n    end\n  end\n  return\
    \ t\nend", "  local t = {}\n  local i = 0\n  while i <= #s do\n    local c = s[i]\n\
    \    if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n      i\
    \ = i + 1\n    elseif c == 'y' then\n      i = i + 1\n      while i <= #s do\n\
    \        local c2 = s[i]\n        if c2 == 'a' or c2 == 'e' or c2 == 'i' or c2\
    \ == 'o' or c2 == 'u' then\n          i = i + 1\n        elseif c2 == 'y' then\n\
    \          i = i + 1\n        else\n          table.insert(t, string.sub(s, 1,\
    \ i))\n          break\n        end\n      end\n    elseif c == 'n' then\n   \
    \   i = i + 1\n      while i <= #s do\n        local c2 = s[i]\n        if c2\
    \ == 'a' or c2 == 'e' or c2 == 'i' or c2 == 'o' or c2 == 'u' then\n          i\
    \ = i + 1\n        elseif c2 == 'n' then\n          i = i + 1\n        else\n\
    \          table.insert(t, string.sub(s, 1, i))\n          break\n        end\n\
    \      end\n    elseif c == 't' then\n      i = i + 1\n      while i <= #s do\n\
    \        local c2 = s[i]\n        if c2 == 'a' or c2 == 'e' or c2 == 'i' or c2\
    \ == 'o' or c2 == 'u' then\n          i = i + 1\n        elseif c2 == 't' then\n\
    \          i = i + 1\n        else\n          table.insert(t, string.sub(s, 1,\
    \ i))\n          break\n        end\n      end\n    elseif c == 's' then\n   \
    \   i = i + 1\n      while i <= #s do\n        local c2 = s[i]\n        if c2\
    \ == 'a' or c2 == 'e' or c2 == 'i' or c2 == 'o' or c2 == 'u' then\n          i\
    \ = i + 1\n        elseif c2 == 's' then\n          i = i + 1\n        else\n\
    \          table.insert(t, string.sub(s, 1, i))\n          break\n        end\n\
    \      end\n    elseif c == 'h' then\n      i = i + 1\n      while i <= #s do\n\
    \        local c2 = s[i]\n        if c2 == 'a' or c2 == 'e' or c2 == 'i' or c2\
    \ == 'o' or c2 == 'u' then\n          i = i + 1\n        elseif c2 == 'h' then\n\
    \          i = i + 1\n        else\n          table.insert(t, string.sub(s, 1,\
    \ i))\n          break\n        end\n      end\n    elseif c == 'w' then\n   \
    \   i = i + 1\n      while i <= #s do\n        local c2 = s[i]\n        if c2\
    \ == 'a' or c2 == 'e' or c2 == 'i' or c2 == 'o' or c2 == 'u' ", "  -- Your code\
    \ here\n  local table = {}\n  local i = 1\n  while i <= #s do\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if ", "  local\
    \ t = {}\n  local i = 0\n  while i <= #s do\n    local c = s[i]\n    if c == 'a'\
    \ or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n      i = i + 1\n    elseif\
    \ c == 'y' then\n      i = i + 1\n      while i <= #s do\n        local c2 = s[i]\n\
    \        if c2 == 'a' or c2 == 'e' or c2 == 'i' or c2 == 'o' or c2 == 'u' then\n\
    \          i = i + 1\n        elseif c2 == 'y' then\n          i = i + 1\n   \
    \     else\n          table.insert(t, string.sub(s, i, i + 1))\n          i =\
    \ i + 1\n        end\n      end\n    elseif c == 'n' then\n      i = i + 1\n \
    \     while i <= #s do\n        local c2 = s[i]\n        if c2 == 'a' or c2 ==\
    \ 'e' or c2 == 'i' or c2 == 'o' or c2 == 'u' then\n          i = i + 1\n     \
    \   elseif c2 == 'n' then\n          i = i + 1\n        else\n          table.insert(t,\
    \ string.sub(s, i, i + 1))\n          i = i + 1\n        end\n      end\n    else\n\
    \      table.insert(t, string.sub(s, i, i + 1))\n      i = i + 1\n    end\n  end\n\
    \  if #t == n then\n    return t\n  else\n    return {}\n  end\nend", "  local\
    \ t = {}\n  local i = 1\n  while i <= #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ .. string.sub(s,i,i) then\n      table.insert(t, string.sub(s,i,i))\n      i\
    \ = i + 1\n    else\n      if i == n then\n        break\n      else\n       \
    \ i = i + 1\n      end\n    end\n  end\n  return t\nend", "  local t = {}\n  for\
    \ w in string.gmatch(s, '%w+') do\n    if string.find(s, string.sub(w,1,n-1))\
    \ then\n      table.insert(t, w)\n    end\n  end\n  return t\nend", "  -- Your\
    \ code here\n  local t = {}\n  for i = 1, #s do\n    if string.sub(s, i, i+n)\
    \ == string.sub(s, 1, n) then\n      table.insert(t, string.sub(s, 1, n))\n  \
    \  end\n  end\n  return t\nend", "  local t = {}\n  local i = 0\n  while i <=\
    \ #s do\n    if string.sub(s,i,i+n) == string.sub(s,i,i+n) then\n      table.insert(t,\
    \ string.sub(s,i,i+n))\n    end\n    i = i + 1\n  end\n  return t\nend", "   \
    \ local t = {}\n    for w in string.gmatch(s, '%S+') do\n        local count =\
    \ 0\n        for c in w:gmatch('%[bcdfghjklmnpqrstvwxyz]') do\n            count\
    \ = count + 1\n        end\n        if count == n then\n            t[#t + 1]\
    \ = w\n        end\n    end\n    return t\nend", "\tlocal t = {}\n\tlocal i =\
    \ 1\n\twhile i <= #s do\n\t\tlocal c = s[i]\n\t\tif c == 'a' or c == 'e' or c\
    \ == 'i' or c == 'o' or c == 'u' then\n\t\t\ti = i + 1\n\t\telseif c == 'y' then\n\
    \t\t\ti = i + 1\n\t\t\twhile i <= #s do\n\t\t\t\tlocal c = s[i]\n\t\t\t\tif c\
    \ == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n\t\t\t\t\ti = i\
    \ + 1\n\t\t\t\telseif c == 'y' then\n\t\t\t\t\ti = i + 1\n\t\t\t\t\twhile i <=\
    \ #s do\n\t\t\t\t\t\tlocal c = s[i]\n\t\t\t\t\t\tif c == 'a' or c == 'e' or c\
    \ == 'i' or c == 'o' or c == 'u' then\n\t\t\t\t\t\t\ti = i + 1\n\t\t\t\t\t\telse\n\
    \t\t\t\t\t\t\ttable.insert(t, s)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tend\n\t\t\t\
    \t\tend\n\t\t\t\telse\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\telse\n\t\t\
    \ttable.insert(t, s)\n\t\t\tbreak\n\t\tend\n\tend\n\treturn t\nend", "  -- Your\
    \ code here\n  local t = {}\n  local i = 1\n  while i <= #s do\n    if string.sub(s,\
    \ i, i+n) == string.sub(s, 1, n) then\n      table.insert(t, string.sub(s, 1,\
    \ n))\n      i = i + n\n    else\n      i = i + 1\n    end\n  end\n  return t\n\
    end", "  -- Write your code here\n  local t = {}\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ == ' ' then\n      table.insert(t, string.sub(s,1,i))\n    else\n      table.insert(t,\
    \ string.sub(s,i,i))\n    end\n  end\n  if #t == n then\n    return t\n  else\n\
    \    return {}\n  end\nend", "  local t = {}\n  for w in string.gmatch(s, '%S+')\
    \ do\n    if string.sub(w,1,n) == string.sub(w,1,n-1) then\n      table.insert(t,\
    \ w)\n    end\n  end\n  return t\nend", "    local t = {}\n    for w in string.gmatch(s,\
    \ '%S+') do\n        local count = 0\n        for c in w:gmatch('%S') do\n   \
    \         count = count + 1\n            if count == n then\n                table.insert(t,\
    \ w)\n            end\n        end\n    end\n    return t\nend", "\tlocal t =\
    \ {}\n\tlocal i = 0\n\twhile i <= #s do\n\t\tlocal c = s[i]\n\t\tif c == 'a' or\
    \ c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n\t\t\ti = i + 1\n\t\telseif\
    \ c == 'y' then\n\t\t\ti = i + 1\n\t\t\twhile i <= #s do\n\t\t\t\tlocal c = s[i]\n\
    \t\t\t\tif c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n\t\t\
    \t\t\ti = i + 1\n\t\t\t\telse\n\t\t\t\t\ttable.insert(t, s)\n\t\t\t\t\tbreak\n\
    \t\t\t\tend\n\t\t\tend\n\t\telse\n\t\t\ttable.insert(t, s)\n\t\t\tbreak\n\t\t\
    end\n\tend\n\treturn t\nend", "  local t = {}\n  local i = 1\n  while i <= #s\
    \ do\n    if string.sub(s, i, i+n) == string.sub(s, 1, n) then\n      table.insert(t,\
    \ string.sub(s, 1, n))\n      i = i + n\n    end\n    i = i + 1\n  end\n  return\
    \ t\nend", "  -- Write your solution here\n  local t = {}\n  for i = 1, #s do\n\
    \    if string.sub(s, i, i+n) == string.sub(s, 1, n) then\n      table.insert(t,\
    \ string.sub(s, 1, i))\n    end\n  end\n  return t\nend", "  -- Your code here\n\
    \  local t = {}\n  for i = 1, #s do\n    if string.sub(s,i,i) == \" \" then\n\
    \      table.insert(t, string.sub(s,1,i))\n    else\n      if string.sub(s,i,i)\
    \ == \" \" then\n        table.insert(t, string.sub(s,1,i))\n      else\n    \
    \    if string.sub(s,i,i) == \" \" then\n          table.insert(t, string.sub(s,1,i))\n\
    \        else\n          if string.sub(s,i,i) == \" \" then\n            table.insert(t,\
    \ string.sub(s,1,i))\n          else\n            if string.sub(s,i,i) == \" \"\
    \ then\n              table.insert(t, string.sub(s,1,i))\n            else\n \
    \             if string.sub(s,i,i) == \" \" then\n                table.insert(t,\
    \ string.sub(s,1,i))\n              else\n                if string.sub(s,i,i)\
    \ == \" \" then\n                  table.insert(t, string.sub(s,1,i))\n      \
    \          else\n                  if string.sub(s,i,i) == \" \" then\n      \
    \              table.insert(t, string.sub(s,1,i))\n                  else\n  \
    \                  if string.sub(s,i,i) == \" \" then\n                      table.insert(t,\
    \ string.sub(s,1,i))\n                    else\n                      if string.sub(s,i,i)\
    \ == \" \" then\n                        table.insert(t, string.sub(s,1,i))\n\
    \                      else\n                        if string.sub(s,i,i) == \"\
    \ \" then\n                          table.insert(t, string.sub(s,1,i))\n    \
    \                    else\n                          if string.sub(s,i,i) == \"\
    \ \" then\n                            table.insert(t, string.sub(s,1,i))\n  \
    \                        else\n                            if string.sub(s,i,i)\
    \ == \" \" then\n                              table.insert(t, string.sub(s,1,i))\n\
    \                            else\n                              if string.sub(s,i,i)\
    \ == \" \" then\n                                table.insert(t, string.sub(s,1,i))\n\
    \                              else\n                                if string.sub(s,i,i)\
    \ == \" \" then\n                                  table.insert(t, string.sub(s,1,i))\n\
    \                                else\n                                  if string.sub(s,i,i)\
    \ == \" \" then\n                                    table.insert(t, string.sub(s,1,i))\n\
    \                                  else\n                                    if\
    \ string.sub(s,i,i) == \" \" then\n                                      table.insert(t,\
    \ string.sub(s,1,i))\n                                    else\n             \
    \                         if string.sub(s,i,i) == \" \" then\n               \
    \                         table.insert(t, string.sub(s,1,i))\n               \
    \                       else\n                                        if string.sub(s,i,i)\
    \ == \" \" then\n                                          table.insert(t, string.sub(s,1,i))\n\
    \                                        else\n                              \
    \            if string.sub(s,i,i) == \" \" then\n                            \
    \                table.insert(t, string.sub(s,1,i))\n                        \
    \                  else\n                                            if string.sub(s,i,"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

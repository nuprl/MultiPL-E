name: HumanEval_117_select_words
language: lua
prompt: "-- Given a string s and a natural number n, you have been tasked to implement\
  \ \n-- a function that returns a table of all words from string s that contain exactly\
  \ \n-- n consonants, in order these words appear in the string s.\n-- If the string\
  \ s is empty then the function should return an empty table.\n-- Note: you may assume\
  \ the input string contains only letters and spaces.\n-- Examples:\n-- >>> select_words('Mary\
  \ had a little lamb', 4)\n-- {'little'}\n-- >>> select_words('Mary had a little\
  \ lamb', 3)\n-- {'Mary', 'lamb'}\n-- >>> select_words('simple white space', 2)\n\
  -- {}\n-- >>> select_words('Hello world', 4)\n-- {'world'}\n-- >>> select_words('Uncle\
  \ sam', 3)\n-- {'Uncle'}\nlocal function select_words(s, n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = select_words\n\
  \    lu.assertEquals(candidate('Mary had a little lamb', 4), {'little'})\n    lu.assertEquals(candidate('Mary\
  \ had a little lamb', 3), {'Mary', 'lamb'})\n    lu.assertEquals(candidate('simple\
  \ white space', 2), {})\n    lu.assertEquals(candidate('Hello world', 4), {'world'})\n\
  \    lu.assertEquals(candidate('Uncle sam', 3), {'Uncle'})\n    lu.assertEquals(candidate('',\
  \ 4), {})\n    lu.assertEquals(candidate('a b c d e f', 1), {'b', 'c', 'd', 'f'})\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["  -- Your code here\n  local t = {}\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ == string.sub(s,i,i) and string.sub(s,i,i) == string.sub(s,i,i) then\n     \
    \ table.insert(t, string.sub(s,1,i))\n    end\n  end\n  return t\nend", "  --\
    \ Write your code here.\n  local table = {}\n  local i = 0\n  while i <= #s do\n\
    \    if string.sub(s,i,i+n) == string.sub(s,i,i+n) then\n      table.insert(table,string.sub(s,i,i+n))\n\
    \    end\n    i = i+1\n  end\n  return table\nend", "  -- Write your code here.\n\
    \  local t = {}\n  for i = 1, #s do\n    if string.sub(s,i,i) == ' ' then\n  \
    \    table.insert(t, string.sub(s,1,i))\n    else\n      local count = 0\n   \
    \   for j = 1, #s do\n        if string.sub(s,i,j) == string.sub(s,i,j) then\n\
    \          count = count + 1\n        end\n      end\n      if count == n then\n\
    \        table.insert(t, string.sub(s,1,i))\n      end\n    end\n  end\n  return\
    \ t\nend", "  local t = {}\n  local i = 0\n  while i <= #s do\n    local c = s[i]\n\
    \    if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n      i\
    \ = i + 1\n    elseif c == 'y' then\n      i = i + 1\n      while i <= #s do\n\
    \        local c2 = s[i]\n        if c2 == 'a' or c2 == 'e' or c2 == 'i' or c2\
    \ == 'o' or c2 == 'u' then\n          i = i + 1\n        elseif c2 == 'y' then\n\
    \          i = i + 1\n        else\n          table.insert(t, string.sub(s, 1,\
    \ i))\n          break\n        end\n      end\n    elseif c == 'n' then\n   \
    \   i = i + 1\n      while i <= #s do\n        local c2 = s[i]\n        if c2\
    \ == 'a' or c2 == 'e' or c2 == 'i' or c2 == 'o' or c2 == 'u' then\n          i\
    \ = i + 1\n        elseif c2 == 'n' then\n          i = i + 1\n        else\n\
    \          table.insert(t, string.sub(s, 1, i))\n          break\n        end\n\
    \      end\n    elseif c == 't' then\n      i = i + 1\n      while i <= #s do\n\
    \        local c2 = s[i]\n        if c2 == 'a' or c2 == 'e' or c2 == 'i' or c2\
    \ == 'o' or c2 == 'u' then\n          i = i + 1\n        elseif c2 == 't' then\n\
    \          i = i + 1\n        else\n          table.insert(t, string.sub(s, 1,\
    \ i))\n          break\n        end\n      end\n    elseif c == 's' then\n   \
    \   i = i + 1\n      while i <= #s do\n        local c2 = s[i]\n        if c2\
    \ == 'a' or c2 == 'e' or c2 == 'i' or c2 == 'o' or c2 == 'u' then\n          i\
    \ = i + 1\n        elseif c2 == 's' then\n          i = i + 1\n        else\n\
    \          table.insert(t, string.sub(s, 1, i))\n          break\n        end\n\
    \      end\n    elseif c == 'h' then\n      i = i + 1\n      while i <= #s do\n\
    \        local c2 = s[i]\n        if c2 == 'a' or c2 == 'e' or c2 == 'i' or c2\
    \ == 'o' or c2 == 'u' then\n          i = i + 1\n        elseif c2 == 'h' then\n\
    \          i = i + 1\n        else\n          table.insert(t, string.sub(s, 1,\
    \ i))\n          break\n        end\n      end\n    elseif c == 'w' then\n   \
    \   i = i + 1\n      while i <= #s do\n        local c2 = s[i]\n        if c2\
    \ == 'a' or c2 == 'e' or c2 == 'i' or c2 == 'o' or c2 == 'u' ", "  -- Your code\
    \ here\n  local table = {}\n  local i = 1\n  while i <= #s do\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \"\" then\n      i = i + 1\n      continue\n    end\n    if string.sub(s,i,i)\
    \ == \" \" then\n      i = i + 1\n      continue\n    end\n    if ", "  local\
    \ t = {}\n  local i = 0\n  while i <= #s do\n    local c = s[i]\n    if c == 'a'\
    \ or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n      i = i + 1\n    elseif\
    \ c == 'y' then\n      i = i + 1\n      while i <= #s do\n        local c2 = s[i]\n\
    \        if c2 == 'a' or c2 == 'e' or c2 == 'i' or c2 == 'o' or c2 == 'u' then\n\
    \          i = i + 1\n        elseif c2 == 'y' then\n          i = i + 1\n   \
    \     else\n          table.insert(t, string.sub(s, i, i + 1))\n          i =\
    \ i + 1\n        end\n      end\n    elseif c == 'n' then\n      i = i + 1\n \
    \     while i <= #s do\n        local c2 = s[i]\n        if c2 == 'a' or c2 ==\
    \ 'e' or c2 == 'i' or c2 == 'o' or c2 == 'u' then\n          i = i + 1\n     \
    \   elseif c2 == 'n' then\n          i = i + 1\n        else\n          table.insert(t,\
    \ string.sub(s, i, i + 1))\n          i = i + 1\n        end\n      end\n    else\n\
    \      table.insert(t, string.sub(s, i, i + 1))\n      i = i + 1\n    end\n  end\n\
    \  if #t == n then\n    return t\n  else\n    return {}\n  end\nend", "  local\
    \ t = {}\n  local i = 1\n  while i <= #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ .. string.sub(s,i,i) then\n      table.insert(t, string.sub(s,i,i))\n      i\
    \ = i + 1\n    else\n      if i == n then\n        break\n      else\n       \
    \ i = i + 1\n      end\n    end\n  end\n  return t\nend", "  local t = {}\n  for\
    \ w in string.gmatch(s, '%w+') do\n    if string.find(s, string.sub(w,1,n-1))\
    \ then\n      table.insert(t, w)\n    end\n  end\n  return t\nend", "  -- Your\
    \ code here\n  local t = {}\n  for i = 1, #s do\n    if string.sub(s, i, i+n)\
    \ == string.sub(s, 1, n) then\n      table.insert(t, string.sub(s, 1, n))\n  \
    \  end\n  end\n  return t\nend", "  local t = {}\n  local i = 0\n  while i <=\
    \ #s do\n    if string.sub(s,i,i+n) == string.sub(s,i,i+n) then\n      table.insert(t,\
    \ string.sub(s,i,i+n))\n    end\n    i = i + 1\n  end\n  return t\nend", "   \
    \ local t = {}\n    for w in string.gmatch(s, '%S+') do\n        local count =\
    \ 0\n        for c in w:gmatch('%[bcdfghjklmnpqrstvwxyz]') do\n            count\
    \ = count + 1\n        end\n        if count == n then\n            t[#t + 1]\
    \ = w\n        end\n    end\n    return t\nend", "\tlocal t = {}\n\tlocal i =\
    \ 1\n\twhile i <= #s do\n\t\tlocal c = s[i]\n\t\tif c == 'a' or c == 'e' or c\
    \ == 'i' or c == 'o' or c == 'u' then\n\t\t\ti = i + 1\n\t\telseif c == 'y' then\n\
    \t\t\ti = i + 1\n\t\t\twhile i <= #s do\n\t\t\t\tlocal c = s[i]\n\t\t\t\tif c\
    \ == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n\t\t\t\t\ti = i\
    \ + 1\n\t\t\t\telseif c == 'y' then\n\t\t\t\t\ti = i + 1\n\t\t\t\t\twhile i <=\
    \ #s do\n\t\t\t\t\t\tlocal c = s[i]\n\t\t\t\t\t\tif c == 'a' or c == 'e' or c\
    \ == 'i' or c == 'o' or c == 'u' then\n\t\t\t\t\t\t\ti = i + 1\n\t\t\t\t\t\telse\n\
    \t\t\t\t\t\t\ttable.insert(t, s)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tend\n\t\t\t\
    \t\tend\n\t\t\t\telse\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\telse\n\t\t\
    \ttable.insert(t, s)\n\t\t\tbreak\n\t\tend\n\tend\n\treturn t\nend", "  -- Your\
    \ code here\n  local t = {}\n  local i = 1\n  while i <= #s do\n    if string.sub(s,\
    \ i, i+n) == string.sub(s, 1, n) then\n      table.insert(t, string.sub(s, 1,\
    \ n))\n      i = i + n\n    else\n      i = i + 1\n    end\n  end\n  return t\n\
    end", "  -- Write your code here\n  local t = {}\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ == ' ' then\n      table.insert(t, string.sub(s,1,i))\n    else\n      table.insert(t,\
    \ string.sub(s,i,i))\n    end\n  end\n  if #t == n then\n    return t\n  else\n\
    \    return {}\n  end\nend", "  local t = {}\n  for w in string.gmatch(s, '%S+')\
    \ do\n    if string.sub(w,1,n) == string.sub(w,1,n-1) then\n      table.insert(t,\
    \ w)\n    end\n  end\n  return t\nend", "    local t = {}\n    for w in string.gmatch(s,\
    \ '%S+') do\n        local count = 0\n        for c in w:gmatch('%S') do\n   \
    \         count = count + 1\n            if count == n then\n                table.insert(t,\
    \ w)\n            end\n        end\n    end\n    return t\nend", "\tlocal t =\
    \ {}\n\tlocal i = 0\n\twhile i <= #s do\n\t\tlocal c = s[i]\n\t\tif c == 'a' or\
    \ c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n\t\t\ti = i + 1\n\t\telseif\
    \ c == 'y' then\n\t\t\ti = i + 1\n\t\t\twhile i <= #s do\n\t\t\t\tlocal c = s[i]\n\
    \t\t\t\tif c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n\t\t\
    \t\t\ti = i + 1\n\t\t\t\telse\n\t\t\t\t\ttable.insert(t, s)\n\t\t\t\t\tbreak\n\
    \t\t\t\tend\n\t\t\tend\n\t\telse\n\t\t\ttable.insert(t, s)\n\t\t\tbreak\n\t\t\
    end\n\tend\n\treturn t\nend", "  local t = {}\n  local i = 1\n  while i <= #s\
    \ do\n    if string.sub(s, i, i+n) == string.sub(s, 1, n) then\n      table.insert(t,\
    \ string.sub(s, 1, n))\n      i = i + n\n    end\n    i = i + 1\n  end\n  return\
    \ t\nend", "  -- Write your solution here\n  local t = {}\n  for i = 1, #s do\n\
    \    if string.sub(s, i, i+n) == string.sub(s, 1, n) then\n      table.insert(t,\
    \ string.sub(s, 1, i))\n    end\n  end\n  return t\nend", "  -- Your code here\n\
    \  local t = {}\n  for i = 1, #s do\n    if string.sub(s,i,i) == \" \" then\n\
    \      table.insert(t, string.sub(s,1,i))\n    else\n      if string.sub(s,i,i)\
    \ == \" \" then\n        table.insert(t, string.sub(s,1,i))\n      else\n    \
    \    if string.sub(s,i,i) == \" \" then\n          table.insert(t, string.sub(s,1,i))\n\
    \        else\n          if string.sub(s,i,i) == \" \" then\n            table.insert(t,\
    \ string.sub(s,1,i))\n          else\n            if string.sub(s,i,i) == \" \"\
    \ then\n              table.insert(t, string.sub(s,1,i))\n            else\n \
    \             if string.sub(s,i,i) == \" \" then\n                table.insert(t,\
    \ string.sub(s,1,i))\n              else\n                if string.sub(s,i,i)\
    \ == \" \" then\n                  table.insert(t, string.sub(s,1,i))\n      \
    \          else\n                  if string.sub(s,i,i) == \" \" then\n      \
    \              table.insert(t, string.sub(s,1,i))\n                  else\n  \
    \                  if string.sub(s,i,i) == \" \" then\n                      table.insert(t,\
    \ string.sub(s,1,i))\n                    else\n                      if string.sub(s,i,i)\
    \ == \" \" then\n                        table.insert(t, string.sub(s,1,i))\n\
    \                      else\n                        if string.sub(s,i,i) == \"\
    \ \" then\n                          table.insert(t, string.sub(s,1,i))\n    \
    \                    else\n                          if string.sub(s,i,i) == \"\
    \ \" then\n                            table.insert(t, string.sub(s,1,i))\n  \
    \                        else\n                            if string.sub(s,i,i)\
    \ == \" \" then\n                              table.insert(t, string.sub(s,1,i))\n\
    \                            else\n                              if string.sub(s,i,i)\
    \ == \" \" then\n                                table.insert(t, string.sub(s,1,i))\n\
    \                              else\n                                if string.sub(s,i,i)\
    \ == \" \" then\n                                  table.insert(t, string.sub(s,1,i))\n\
    \                                else\n                                  if string.sub(s,i,i)\
    \ == \" \" then\n                                    table.insert(t, string.sub(s,1,i))\n\
    \                                  else\n                                    if\
    \ string.sub(s,i,i) == \" \" then\n                                      table.insert(t,\
    \ string.sub(s,1,i))\n                                    else\n             \
    \                         if string.sub(s,i,i) == \" \" then\n               \
    \                         table.insert(t, string.sub(s,1,i))\n               \
    \                       else\n                                        if string.sub(s,i,i)\
    \ == \" \" then\n                                          table.insert(t, string.sub(s,1,i))\n\
    \                                        else\n                              \
    \            if string.sub(s,i,i) == \" \" then\n                            \
    \                table.insert(t, string.sub(s,1,i))\n                        \
    \                  else\n                                            if string.sub(s,i,",
  "  local t = {}\n  for w in string.gmatch(s, '%w+') do\n    if string.find(s, string.sub(w,1,n-1))\
    \ then\n      table.insert(t, w)\n    end\n  end\n  return t\nend", "  -- Write\
    \ your code here\n  local t = {}\n  local i = 0\n  while i <= #s do\n    if string.sub(s,i,i)\
    \ == string.sub(s,i,i) .. string.sub(s,i,i) then\n      i = i + 1\n    else\n\
    \      table.insert(t,string.sub(s,i,i))\n      i = i + 1\n    end\n  end\n  if\
    \ #t == n then\n    return t\n  else\n    return {}\n  end\nend", "    local t\
    \ = {}\n    for w in string.gmatch(s, '%w+') do\n        if string.sub(w,1,n)\
    \ == string.sub(w,n+1,n+1) then\n            t[#t+1] = w\n        end\n    end\n\
    \    return t\nend", "\tlocal t = {}\n\tlocal i = 0\n\twhile i <= #s do\n\t\t\
    local c = s[i]\n\t\tif c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u'\
    \ then\n\t\t\ti = i + 1\n\t\telseif c == 'y' then\n\t\t\ti = i + 1\n\t\t\twhile\
    \ i <= #s and s[i] ~= 'y' do\n\t\t\t\ti = i + 1\n\t\t\tend\n\t\telseif c == 's'\
    \ then\n\t\t\ti = i + 1\n\t\t\twhile i <= #s and s[i] ~= 's' do\n\t\t\t\ti = i\
    \ + 1\n\t\t\tend\n\t\telseif c == 't' then\n\t\t\ti = i + 1\n\t\t\twhile i <=\
    \ #s and s[i] ~= 't' do\n\t\t\t\ti = i + 1\n\t\t\tend\n\t\telseif c == 'h' then\n\
    \t\t\ti = i + 1\n\t\t\twhile i <= #s and s[i] ~= 'h' do\n\t\t\t\ti = i + 1\n\t\
    \t\tend\n\t\telseif c == 'l' then\n\t\t\ti = i + 1\n\t\t\twhile i <= #s and s[i]\
    \ ~= 'l' do\n\t\t\t\ti = i + 1\n\t\t\tend\n\t\telseif c == 'w' then\n\t\t\ti =\
    \ i + 1\n\t\t\twhile i <= #s and s[i] ~= 'w' do\n\t\t\t\ti = i + 1\n\t\t\tend\n\
    \t\telseif c == 'd' then\n\t\t\ti = i + 1\n\t\t\twhile i <= #s and s[i] ~= 'd'\
    \ do\n\t\t\t\ti = i + 1\n\t\t\tend\n\t\telseif c == 'n' then\n\t\t\ti = i + 1\n\
    \t\t\twhile i <= #s and s[i] ~= 'n' do\n\t\t\t\ti = i + 1\n\t\t\tend\n\t\telseif\
    \ c == 'a' then\n\t\t\ti = i + 1\n\t\t\twhile i <= #s and s[i] ~= 'a' do\n\t\t\
    \t\ti = i + 1\n\t\t\tend\n\t\telseif c == 'm' then\n\t\t\ti = i + 1\n\t\t\twhile\
    \ i <= #s and s[i] ~= 'm' do\n\t\t\t\ti = i + 1\n\t\t\tend\n\t\telseif c == 'p'\
    \ then\n\t\t\ti = i + 1\n\t\t\twhile i <= #s and s[i] ~= 'p' do\n\t\t\t\ti = i\
    \ + 1\n\t\t\tend\n\t\telseif c == 'l' then\n\t\t\ti = i + 1\n\t\t\twhile i <=\
    \ #s and s[i] ~= 'l' do\n\t\t\t\ti = i + 1\n\t\t\tend\n\t\telseif c == 'e' then\n\
    \t\t\ti = i + 1\n\t\t\twhile i <= #s and s[i] ~= 'e' do\n\t\t\t\ti = i + 1\n\t\
    \t\tend\n\t\telseif c == 'r' then\n\t\t\ti = i + 1\n\t\t\twhile i <= #s and s[i]\
    \ ~= 'r' do\n\t\t\t\ti = i + 1\n\t\t\tend\n\t\telseif c == 'c' then\n\t\t\ti =\
    \ i + 1\n\t\t\twhile i <= #s and ", "\tlocal t = {}\n\tfor w in string.gmatch(s,\
    \ '%w+') do\n\t\tif string.find(s, string.sub(w,1,n), 1) then\n\t\t\ttable.insert(t,\
    \ w)\n\t\tend\n\tend\n\treturn t\nend", "    local t = {}\n    local i = 0\n \
    \   while i <= #s do\n        local c = s[i]\n        if c == 'a' or c == 'e'\
    \ or c == 'i' or c == 'o' or c == 'u' then\n            i = i + 1\n        elseif\
    \ c == 'y' then\n            i = i + 1\n        elseif c == 's' then\n       \
    \     i = i + 1\n        elseif c == 'h' then\n            i = i + 1\n       \
    \ elseif c == 'l' then\n            i = i + 1\n        elseif c == 'd' then\n\
    \            i = i + 1\n        elseif c == 't' then\n            i = i + 1\n\
    \        elseif c == 'n' then\n            i = i + 1\n        elseif c == 'g'\
    \ then\n            i = i + 1\n        elseif c == 'f' then\n            i = i\
    \ + 1\n        elseif c == 'p' then\n            i = i + 1\n        elseif c ==\
    \ 'v' then\n            i = i + 1\n        elseif c == 'b' then\n            i\
    \ = i + 1\n        elseif c == 'r' then\n            i = i + 1\n        elseif\
    \ c == 'q' then\n            i = i + 1\n        elseif c == 'z' then\n       \
    \     i = i + 1\n        elseif c == 'c' then\n            i = i + 1\n       \
    \ elseif c == 'm' then\n            i = i + 1\n        elseif c == 'k' then\n\
    \            i = i + 1\n        elseif c == 'j' then\n            i = i + 1\n\
    \        elseif c == 'q' then\n            i = i + 1\n        elseif c == 'p'\
    \ then\n            i = i + 1\n        elseif c == 'z' then\n            i = i\
    \ + 1\n        elseif c == 'y' then\n            i = i + 1\n        elseif c ==\
    \ 'x' then\n            i = i + 1\n        elseif c == 'w' then\n            i\
    \ = i + 1\n        elseif c == 'v' then\n            i = i + 1\n        elseif\
    \ c == 'u' then\n            i = i + 1\n        elseif c == 't' then\n       \
    \     i = i + 1\n        elseif c == 'r' then\n            i = i + 1\n       \
    \ elseif c == 'q' then\n            i = i + 1\n        elseif c == 'p' then\n\
    \            i = i + 1\n        elseif c == 'z' then\n            i = i + 1\n\
    \        elseif c == 'y' then\n            i = i + 1\n        elseif c == 'x'\
    \ then\n            i = i + 1\n        elseif c == 'w' then\n            i = i\
    \ + 1\n        elseif c == 'v' then\n            i = i + 1\n        elseif c ==\
    \ 'u' then\n            i = i + 1\n        elseif c == 't' then\n            i\
    \ = i + 1\n        elseif c == 'r' then\n            i = ", "\tlocal t = {}\n\t\
    local i = 1\n\twhile i <= #s do\n\t\tlocal c = s[i]\n\t\tif c == 'a' or c == 'e'\
    \ or c == 'i' or c == 'o' or c == 'u' then\n\t\t\ti = i + 1\n\t\telseif c == 'y'\
    \ then\n\t\t\ti = i + 1\n\t\telseif c == 's' then\n\t\t\ti = i + 1\n\t\telseif\
    \ c == 'h' then\n\t\t\ti = i + 1\n\t\telseif c == 'l' then\n\t\t\ti = i + 1\n\t\
    \telseif c == 'd' then\n\t\t\ti = i + 1\n\t\telseif c == 'n' then\n\t\t\ti = i\
    \ + 1\n\t\telseif c == 'w' then\n\t\t\ti = i + 1\n\t\telseif c == 'r' then\n\t\
    \t\ti = i + 1\n\t\telseif c == 't' then\n\t\t\ti = i + 1\n\t\telseif c == 'g'\
    \ then\n\t\t\ti = i + 1\n\t\telseif c == 'b' then\n\t\t\ti = i + 1\n\t\telseif\
    \ c == 'v' then\n\t\t\ti = i + 1\n\t\telseif c == 'm' then\n\t\t\ti = i + 1\n\t\
    \telseif c == 'k' then\n\t\t\ti = i + 1\n\t\telseif c == 'j' then\n\t\t\ti = i\
    \ + 1\n\t\telseif c == 'q' then\n\t\t\ti = i + 1\n\t\telseif c == 'p' then\n\t\
    \t\ti = i + 1\n\t\telseif c == 'o' then\n\t\t\ti = i + 1\n\t\telseif c == 'f'\
    \ then\n\t\t\ti = i + 1\n\t\telseif c == 'a' then\n\t\t\ti = i + 1\n\t\telseif\
    \ c == 'z' then\n\t\t\ti = i + 1\n\t\telseif c == 'c' then\n\t\t\ti = i + 1\n\t\
    \telseif c == 'v' then\n\t\t\ti = i + 1\n\t\telseif c == 'b' then\n\t\t\ti = i\
    \ + 1\n\t\telseif c == 'n' then\n\t\t\ti = i + 1\n\t\telseif c == 'm' then\n\t\
    \t\ti = i + 1\n\t\telseif c == 's' then\n\t\t\ti = i + 1\n\t\telseif c == 'h'\
    \ then\n\t\t\ti = i + 1\n\t\telseif c == 'r' then\n\t\t\ti = i + 1\n\t\telseif\
    \ c == 't' then\n\t\t\ti = i + 1\n\t\telseif c == 'g' then\n\t\t\ti = i + 1\n\t\
    \telseif c == 'b' then\n\t\t\ti = i + 1\n\t\telseif c == 'v' then\n\t\t\ti = i\
    \ + 1\n\t\telseif c == 'm' then\n\t\t\ti = i + 1\n\t\telseif c == 'k' then\n\t\
    \t\ti = i + 1\n\t\telseif c == 'j' then\n\t\t\t", "  -- Your code here\nend",
  "    local t = {}\n    for w in string.gmatch(s, '%w+') do\n        local count\
    \ = 0\n        for c in string.gsub(w, '[^' .. string.letters .. ']') do\n   \
    \         count = count + 1\n        end\n        if count == n then\n       \
    \     t[#t + 1] = w\n        end\n    end\n    return t\nend", "\tlocal t = {}\n\
    \tlocal i = 1\n\twhile i <= #s do\n\t\tif string.sub(s, i, i+n) == string.sub(s,\
    \ 1, n) then\n\t\t\ttable.insert(t, string.sub(s, 1, n))\n\t\tend\n\t\ti = i +\
    \ 1\n\tend\n\treturn t\nend", "  local t = {}\n  for w in string.gmatch(s, '%w+')\
    \ do\n    if string.sub(w,1,n) == string.sub(s, 1, n) then\n      table.insert(t,\
    \ w)\n    end\n  end\n  return t\nend", "  local t = {}\n  local i = 1\n  while\
    \ i <= #s do\n    local c = string.sub(s,i,i)\n    if c == 'a' or c == 'e' or\
    \ c == 'i' or c == 'o' or c == 'u' then\n      i = i + 1\n    elseif c == 'y'\
    \ then\n      i = i + 1\n      while i <= #s and string.sub(s,i,i) ~= 'a' do\n\
    \        i = i + 1\n      end\n    elseif c == 's' then\n      i = i + 1\n   \
    \   while i <= #s and string.sub(s,i,i) ~= 'e' do\n        i = i + 1\n      end\n\
    \    elseif c == 'h' then\n      i = i + 1\n      while i <= #s and string.sub(s,i,i)\
    \ ~= 'i' do\n        i = i + 1\n      end\n    elseif c == 'l' then\n      i =\
    \ i + 1\n      while i <= #s and string.sub(s,i,i) ~= 'o' do\n        i = i +\
    \ 1\n      end\n    elseif c == 'w' then\n      i = i + 1\n      while i <= #s\
    \ and string.sub(s,i,i) ~= 'u' do\n        i = i + 1\n      end\n    elseif c\
    \ == 'c' then\n      i = i + 1\n      while i <= #s and string.sub(s,i,i) ~= 'y'\
    \ do\n        i = i + 1\n      end\n    elseif c == 'm' then\n      i = i + 1\n\
    \      while i <= #s and string.sub(s,i,i) ~= 's' do\n        i = i + 1\n    \
    \  end\n    elseif c == 't' then\n      i = i + 1\n      while i <= #s and string.sub(s,i,i)\
    \ ~= 'h' do\n        i = i + 1\n      end\n    elseif c == 'r' then\n      i =\
    \ i + 1\n      while i <= #s and string.sub(s,i,i) ~= 'l' do\n        i = i +\
    \ 1\n      end\n    elseif c == 'f' then\n      i = i + 1\n      while i <= #s\
    \ and string.sub(s,i,i) ~= 'w' do\n        i = i + 1\n      end\n    elseif c\
    \ == 'b' then\n      i = i + 1\n      while i <= #s and string.sub(s,i,i) ~= 'c'\
    \ do\n        i = i + 1\n      end\n    elseif c == 'd' then\n      i = i + 1\n\
    \      while i <= #s and string.sub(s,i,i) ~= 'm' do\n        i = i + 1\n    \
    \  end\n    elseif c == 'g' then\n      i = i + 1\n      while i <= #s and string.sub(s,i,i)\
    \ ~= 't' do\n        i = i + 1\n      end\n    elseif c == 'p' then\n      i =\
    \ i + 1\n      while i <= #s and string.sub(", "  local t = {}\n  local i = 0\n\
    \  while i <= #s do\n    if string.sub(s,i,i+n) == string.sub(s,i,i+n) then\n\
    \      table.insert(t, string.sub(s,i,i+n))\n    end\n    i = i + 1\n  end\n \
    \ return t\nend", "    local t = {}\n    for w in string.gmatch(s, '%w+') do\n\
    \        table.insert(t, w)\n    end\n    local count = 0\n    for w in t do\n\
    \        if string.find(s, w, 1, n) then\n            count = count + 1\n    \
    \    end\n    end\n    if count == n then\n        return t\n    end\n    return\
    \ {}\nend", "  local t = {}\n  local i = 0\n  while i <= #s do\n    if string.sub(s,\
    \ i, i+n) == string.sub(s, 'a', i-1) then\n      table.insert(t, string.sub(s,\
    \ 'a', i))\n    end\n    i = i + 1\n  end\n  return t\nend", "    local t = {}\n\
    \    for w in string.gmatch(s, '%a') do\n        if string.find(w, string.letters(n))\
    \ then\n            t[#t + 1] = w\n        end\n    end\n    return t\nend", " \
    \ -- Base case\n  if s == '' then\n    return {}\n  end", "  local t = {}\n  local\
    \ i = 1\n  while i <= #s do\n    if string.sub(s,i,i+n) == string.sub(s,1,n) then\n\
    \      table.insert(t, string.sub(s,1,n))\n    end\n    i = i + 1\n  end\n  return\
    \ t\nend", "  local t = {}\n  local i = 0\n  while i <= #s do\n    local c = s[i]\n\
    \    if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n      i\
    \ = i + 1\n    elseif c == 'y' then\n      i = i + 1\n      while i <= #s and\
    \ s[i] ~= 'y' do\n        i = i + 1\n      end\n    elseif c == 's' then\n   \
    \   i = i + 1\n      while i <= #s and s[i] ~= 's' do\n        i = i + 1\n   \
    \   end\n    elseif c == 't' then\n      i = i + 1\n      while i <= #s and s[i]\
    \ ~= 't' do\n        i = i + 1\n      end\n    elseif c == 'h' then\n      i =\
    \ i + 1\n      while i <= #s and s[i] ~= 'h' do\n        i = i + 1\n      end\n\
    \    elseif c == 'l' then\n      i = i + 1\n      while i <= #s and s[i] ~= 'l'\
    \ do\n        i = i + 1\n      end\n    elseif c == 'd' then\n      i = i + 1\n\
    \      while i <= #s and s[i] ~= 'd' do\n        i = i + 1\n      end\n    elseif\
    \ c == 'w' then\n      i = i + 1\n      while i <= #s and s[i] ~= 'w' do\n   \
    \     i = i + 1\n      end\n    elseif c == 'n' then\n      i = i + 1\n      while\
    \ i <= #s and s[i] ~= 'n' do\n        i = i + 1\n      end\n    elseif c == 'r'\
    \ then\n      i = i + 1\n      while i <= #s and s[i] ~= 'r' do\n        i = i\
    \ + 1\n      end\n    elseif c == 'a' then\n      i = i + 1\n      while i <=\
    \ #s and s[i] ~= 'a' do\n        i = i + 1\n      end\n    elseif c == 'm' then\n\
    \      i = i + 1\n      while i <= #s and s[i] ~= 'm' do\n        i = i + 1\n\
    \      end\n    elseif c == 'p' then\n      i = i + 1\n      while i <= #s and\
    \ s[i] ~= 'p' do\n        i = i + 1\n      end\n    elseif c == 'l' then\n   \
    \   i = i + 1\n      while i <= #s and s[i] ~= 'l' do\n        i = i + 1\n   \
    \   end\n    elseif c == 'e' then\n      i = i + 1\n      while i <= #s and s[i]\
    \ ~= 'e' do\n        i = i + 1\n      end\n    elseif c == 'c' then\n      i =\
    \ i + 1\n      while i <= #s and s[i] ~= 'c' do\n        i = i + 1\n      end\n\
    \    elseif c == 'h' then\n      i = i + 1\n      while i <= #", "  local t =\
    \ {}\n  local i = 0\n  while i <= #s do\n    if string.sub(s,i,i) ~= ' ' then\n\
    \      if string.sub(s,i,i) ~= 'a' and string.sub(s,i,i) ~= 'e' and string.sub(s,i,i)\
    \ ~= 'i' and string.sub(s,i,i) ~= 'o' and string.sub(s,i,i) ~= 'u' then\n    \
    \    table.insert(t, string.sub(s,i,i))\n      end\n    end\n    i = i + 1\n \
    \ end\n  if #t == n then\n    return t\n  else\n    return {}\n  end\nend", " \
    \ -- Write your code here\n  local t = {}\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ == \" \" then\n      table.insert(t, string.sub(s,1,i))\n    else\n      if\
    \ string.sub(s,i,i) == \" \" then\n        table.insert(t, string.sub(s,1,i))\n\
    \      else\n        local count = 0\n        for j = 1, #s do\n          if string.sub(s,i,i)\
    \ == string.sub(s,j,j) then\n            count = count + 1\n          end\n  \
    \      end\n        if count == n then\n          table.insert(t, string.sub(s,1,i))\n\
    \        end\n      end\n    end\n  end\n  return t\nend", "  local t = {}\n \
    \ for w in string.gmatch(s, '%w+') do\n    table.insert(t, w)\n  end\n  table.sort(t)\n\
    \  local count = 0\n  for _, w in ipairs(t) do\n    if string.sub(w,1,n) == string.sub(w,n+1,n)\
    \ then\n      count = count + 1\n    end\n  end\n  if count == n then\n    return\
    \ t\n  else\n    return {}\n  end\nend", "  local t = {}\n  local i = 0\n  while\
    \ i <= #s do\n    local c = s[i]\n    if c ~= ' ' and c ~= '-' and c ~= '!' and\
    \ c ~= '?' and c ~= '!' and c ~= '?' then\n      table.insert(t, c)\n    end\n\
    \    i = i + 1\n  end\n  if #t == n then\n    return t\n  end\n  return {}\nend",
  "    local t = {}\n    for w in string.gmatch(s, '%a') do\n        if string.find(w,\
    \ string.char(97,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255}\n\
    \            then\n                table.insert(t, w)\n            end\n     \
    \   end\n    end\n    return t\nend", "    local t = {}\n    for w in string.gmatch(s,\
    \ '%w+') do\n        table.insert(t, w)\n    end\n    table.sort(t)\n    if #t\
    \ < n then\n        return {}\n    end\n    return t\nend", "  local t = {}\n\
    \  local i = 0\n  while i <= #s do\n    if string.sub(s,i,i+n) == \"\" then\n\
    \      break\n    end\n    t[#t+1] = string.sub(s,i,i+n)\n    i = i + n\n  end\n\
    \  return t\nend", "  local t = {}\n  for w in string.gmatch(s, '%S+') do\n  \
    \  table.insert(t, w)\n  end\n  if #t < n then\n    return {}\n  else\n    return\
    \ t\n  end\nend", "  local t = {}\n  for w in string.gmatch(s, '%S+') do\n   \
    \ if string.find(w, string.letters(n)) then\n      table.insert(t, w)\n    end\n\
    \  end\n  return t\nend", "  -- Your code here\n  local t = {}\n  for i = 1, #s\
    \ do\n    if string.sub(s,i,i) == \" \" then\n      table.insert(t, string.sub(s,1,i))\n\
    \      table.insert(t, string.sub(s,i+1,#s))\n    else\n      table.insert(t,\
    \ string.sub(s,i,i))\n    end\n  end\n  return t\nend", "  -- Write your code\
    \ here\n  local t = {}\n  local i = 0\n  while i <= #s do\n    if string.sub(s,i,i+n)\
    \ == \"\" then\n      table.insert(t, string.sub(s,i,i+n))\n    end\n    i = i+1\n\
    \  end\n  return t\nend", "  local t = {}\n  local i = 0\n  while i <= #s do\n\
    \    local c = s[i]\n    if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c\
    \ == 'u' then\n      i = i + 1\n    else\n      if #t < n then\n        t[#t+1]\
    \ = s[i]\n      else\n        return t\n      end\n    end\n  end\n  return t\n\
    end", "  -- Your code here\n  local t = {}\n  local count = 0\n  for i = 1, #s\
    \ do\n    if string.sub(s,i,i) == ' ' then\n      count = count + 1\n      if\
    \ count == n then\n        t[#t+1] = string.sub(s,1,i)\n      end\n    end\n \
    \ end\n  return t\nend", "  -- Write your code here\n  local t = {}\n  for i =\
    \ 1, #s do\n    if string.sub(s,i,i) == ' ' then\n      table.insert(t, string.sub(s,1,i))\n\
    \      table.insert(t, string.sub(s,i+1,#s))\n    else\n      table.insert(t,\
    \ string.sub(s,i,i))\n    end\n  end\n  if #t == n then\n    return t\n  else\n\
    \    return {}\n  end\nend", "  local t = {}\n  local i = 0\n  while i < #s do\n\
    \    if string.sub(s, i, i+n) == string.sub(s,1,n) then\n      table.insert(t,\
    \ string.sub(s,i+1,i+n))\n    end\n    i = i + 1\n  end\n  return t\nend", "\t\
    local t = {}\n\tlocal i = 0\n\twhile i <= #s do\n\t\tif string.sub(s, i, i+n)\
    \ == string.sub(s, 'a', i-1) then\n\t\t\ttable.insert(t, string.sub(s, 'a', i))\n\
    \t\tend\n\t\ti = i + 1\n\tend\n\treturn t\nend", "  local t = {}\n  local i =\
    \ 0\n  while i <= #s do\n    local c = s[i]\n    if c == 'a' or c == 'e' or c\
    \ == 'i' or c == 'o' or c == 'u' then\n      i = i + 1\n    elseif c == 'y' then\n\
    \      i = i + 1\n      while i <= #s do\n        local c2 = s[i]\n        if\
    \ c2 == 'a' or c2 == 'e' or c2 == 'i' or c2 == 'o' or c2 == 'u' then\n       \
    \   i = i + 1\n        elseif c2 == 'y' then\n          i = i + 1\n        else\n\
    \          table.insert(t, string.sub(s, 1, i))\n          i = i + 1\n       \
    \ end\n      end\n    elseif c == 'n' then\n      i = i + 1\n      while i <=\
    \ #s do\n        local c2 = s[i]\n        if c2 == 'a' or c2 == 'e' or c2 == 'i'\
    \ or c2 == 'o' or c2 == 'u' then\n          i = i + 1\n        elseif c2 == 'n'\
    \ then\n          i = i + 1\n        else\n          table.insert(t, string.sub(s,\
    \ 1, i))\n          i = i + 1\n        end\n      end\n    elseif c == 's' then\n\
    \      i = i + 1\n      while i <= #s do\n        local c2 = s[i]\n        if\
    \ c2 == 'a' or c2 == 'e' or c2 == 'i' or c2 == 'o' or c2 == 'u' then\n       \
    \   i = i + 1\n        elseif c2 == 's' then\n          i = i + 1\n        else\n\
    \          table.insert(t, string.sub(s, 1, i))\n          i = i + 1\n       \
    \ end\n      end\n    elseif c == 't' then\n      i = i + 1\n      while i <=\
    \ #s do\n        local c2 = s[i]\n        if c2 == 'a' or c2 == 'e' or c2 == 'i'\
    \ or c2 == 'o' or c2 == 'u' then\n          i = i + 1\n        elseif c2 == 't'\
    \ then\n          i = i + 1\n        else\n          table.insert(t, string.sub(s,\
    \ 1, i))\n          i = i + 1\n        end\n      end\n    elseif c == 'h' or\
    \ c == 'e' or c == 'l' or c == 'l' or c == 'o' or c == 'w' then\n      i = i +\
    \ 1\n    elseif c == 'r' then\n      i = i + 1\n      while i <= #s do\n     \
    \   local c2 = s[i]\n        if c2 == 'a' or c2 == 'e' or c2 == 'i' or c2 == 'o'\
    \ or c2 == 'u' then\n          i = i + 1\n        elseif c2 == 'r' then\n    \
    \      i = i + 1\n        else\n          table.insert(t, string.sub(s, 1, i))\n\
    \          i = i + 1\n        end\n      end\n    elseif c == 'd' then\n      ",
  "  local t = {}\n  local i = 1\n  while i <= #s do\n    if string.sub(s, i, i+n)\
    \ == string.sub(s, 1, n) then\n      table.insert(t, string.sub(s, 1, n))\n  \
    \  end\n    i = i + 1\n  end\n  return t\nend", "  local t = {}\n  local i = 0\n\
    \  while i < #s do\n    local c = s[i]\n    if c == 'a' or c == 'e' or c == 'i'\
    \ or c == 'o' or c == 'u' then\n      i = i + 1\n    elseif c == 'y' then\n  \
    \    i = i + 1\n      while i < #s and s[i] ~= 'y' do\n        i = i + 1\n   \
    \   end\n    elseif c == 's' then\n      i = i + 1\n      while i < #s and s[i]\
    \ ~= 's' do\n        i = i + 1\n      end\n    elseif c == 't' then\n      i =\
    \ i + 1\n      while i < #s and s[i] ~= 't' do\n        i = i + 1\n      end\n\
    \    elseif c == 'h' then\n      i = i + 1\n      while i < #s and s[i] ~= 'h'\
    \ do\n        i = i + 1\n      end\n    elseif c == 'l' then\n      i = i + 1\n\
    \      while i < #s and s[i] ~= 'l' do\n        i = i + 1\n      end\n    elseif\
    \ c == 'd' then\n      i = i + 1\n      while i < #s and s[i] ~= 'd' do\n    \
    \    i = i + 1\n      end\n    elseif c == 'n' then\n      i = i + 1\n      while\
    \ i < #s and s[i] ~= 'n' do\n        i = i + 1\n      end\n    elseif c == 'w'\
    \ then\n      i = i + 1\n      while i < #s and s[i] ~= 'w' do\n        i = i\
    \ + 1\n      end\n    elseif c == 'r' then\n      i = i + 1\n      while i < #s\
    \ and s[i] ~= 'r' do\n        i = i + 1\n      end\n    elseif c == 'a' then\n\
    \      i = i + 1\n      while i < #s and s[i] ~= 'a' do\n        i = i + 1\n \
    \     end\n    elseif c == 'm' then\n      i = i + 1\n      while i < #s and s[i]\
    \ ~= 'm' do\n        i = i + 1\n      end\n    elseif c == 'p' then\n      i =\
    \ i + 1\n      while i < #s and s[i] ~= 'p' do\n        i = i + 1\n      end\n\
    \    elseif c == 'f' then\n      i = i + 1\n      while i < #s and s[i] ~= 'f'\
    \ do\n        i = i + 1\n      end\n    elseif c == 'v' then\n      i = i + 1\n\
    \      while i < #s and s[i] ~= 'v' do\n        i = i + 1\n      end\n    elseif\
    \ c == 'b' then\n      i = i + 1\n      while i < #s and s[i] ~= 'b' do\n    \
    \    i = i + 1\n      end\n    elseif c == 'c' then\n      i = i + 1\n      while\
    \ i < #", "  -- Write your solution here\n  local t = {}\n  local i = 1\n  while\
    \ i <= #s do\n    if string.sub(s, i, i+n) == string.sub(s, 1, n) then\n     \
    \ table.insert(t, string.sub(s, 1, n))\n    end\n    i = i + 1\n  end\n  return\
    \ t\nend", "  local t = {}\n  local i = 1\n  while i <= #s do\n    if string.sub(s,\
    \ i, i+n) == string.sub(s, 1, n) then\n      table.insert(t, string.sub(s, 1,\
    \ n))\n      i = i + 1\n    end\n    i = i + 1\n  end\n  return t\nend", "   \
    \ local t = {}\n    for w in string.gmatch(s, '%a') do\n        if string.find(w,\
    \ string.char(97,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255}\n\
    \            and string.len(w) == n then\n            t[#t+1] = w\n        end\n\
    \    end\n    return t\nend", "  local t = {}\n  for w in string.gmatch(s, '%w+')\
    \ do\n    table.insert(t, w)\n  end\n  table.sort(t)\n  if #t > n then\n    local\
    \ i = #t\n    while i ~= n do\n      table.remove(t, i)\n      i = #t\n    end\n\
    \  end\n  return t\nend", "  local t = {}\n  local i = 1\n  while i <= #s do\n\
    \    if string.sub(s, i, i+n) == string.sub(s, 1, n) then\n      table.insert(t,\
    \ string.sub(s, 1, n))\n    end\n    i = i + 1\n  end\n  return t\nend", "  local\
    \ t = {}\n  for w in string.gmatch(s, '%w+') do\n    table.insert(t, w)\n  end\n\
    \  table.sort(t)\n  local count = 0\n  for _, w in ipairs(t) do\n    if string.sub(w,\
    \ 1, n) == string.sub(w, n + 1, n) then\n      count = count + 1\n    end\n  end\n\
    \  if count == n then\n    return t\n  else\n    return {}\n  end\nend", "\tlocal\
    \ t = {}\n\tlocal i = 0\n\twhile i <= #s do\n\t\tif string.sub(s,i,i+n) == \"\"\
    \ then\n\t\t\tbreak\n\t\telse\n\t\t\tt[#t+1] = string.sub(s,i,i+n)\n\t\tend\n\t\
    \ti = i + 1\n\tend\n\treturn t\nend", "  local t = {}\n  local i = 0\n  while\
    \ i < #s do\n    if string.sub(s,i,i+n) == \"\" then\n      table.insert(t, string.sub(s,1,i))\n\
    \      i = i + 1\n    else\n      i = i + 1\n    end\n  end\n  return t\nend",
  "  -- Write your code here\n  local t = {}\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ == ' ' then\n      table.insert(t, string.sub(s,1,i))\n    else\n      table.insert(t,\
    \ string.sub(s,i,i))\n    end\n  end\n  table.sort(t)\n  if #t == n then\n   \
    \ return t\n  else\n    return {}\n  end\nend", "  local t = {}\n  local i = 0\n\
    \  while i <= #s do\n    if string.sub(s, i, i+n) == string.sub(s, 1, n) then\n\
    \      table.insert(t, string.sub(s, 1, n))\n      i = i + n\n    else\n     \
    \ i = i + 1\n    end\n  end\n  return t\nend", "  local t = {}\n  local i = 1\n\
    \  while i <= #s do\n    local c = s[i]\n    if c == 'a' or c == 'e' or c == 'i'\
    \ or c == 'o' or c == 'u' then\n      i = i + 1\n    elseif c == 'y' then\n  \
    \    i = i + 1\n      while i <= #s and s[i] ~= 'y' do\n        i = i + 1\n  \
    \    end\n    elseif c == 's' then\n      i = i + 1\n      while i <= #s and s[i]\
    \ ~= 's' do\n        i = i + 1\n      end\n    elseif c == 't' then\n      i =\
    \ i + 1\n      while i <= #s and s[i] ~= 't' do\n        i = i + 1\n      end\n\
    \    elseif c == 'h' then\n      i = i + 1\n      while i <= #s and s[i] ~= 'h'\
    \ do\n        i = i + 1\n      end\n    elseif c == 'l' then\n      i = i + 1\n\
    \      while i <= #s and s[i] ~= 'l' do\n        i = i + 1\n      end\n    elseif\
    \ c == 'w' then\n      i = i + 1\n      while i <= #s and s[i] ~= 'w' do\n   \
    \     i = i + 1\n      end\n    elseif c == 'd' then\n      i = i + 1\n      while\
    \ i <= #s and s[i] ~= 'd' do\n        i = i + 1\n      end\n    elseif c == 'n'\
    \ then\n      i = i + 1\n      while i <= #s and s[i] ~= 'n' do\n        i = i\
    \ + 1\n      end\n    elseif c == 'r' then\n      i = i + 1\n      while i <=\
    \ #s and s[i] ~= 'r' do\n        i = i + 1\n      end\n    elseif c == 'm' then\n\
    \      i = i + 1\n      while i <= #s and s[i] ~= 'm' do\n        i = i + 1\n\
    \      end\n    elseif c == 'a' then\n      i = i + 1\n      while i <= #s and\
    \ s[i] ~= 'a' do\n        i = i + 1\n      end\n    elseif c == 'e' then\n   \
    \   i = i + 1\n      while i <= #s and s[i] ~= 'e' do\n        i = i + 1\n   \
    \   end\n    elseif c == 'i' then\n      i = i + 1\n      while i <= #s and s[i]\
    \ ~= 'i' do\n        i = i + 1\n      end\n    elseif c == 'o' then\n      i =\
    \ i + 1\n      while i <= #s and s[i] ~= 'o' do\n        i = i + 1\n      end\n\
    \    elseif c == 'u' then\n      i = i + 1\n      while i <= #s and s[i] ~= 'u'\
    \ do\n        i = i + 1\n      end\n    elseif c == 'y' then\n      i = i + 1\n\
    \      while i <= ", "    local t = {}\n    for w in string.gmatch(s, '%w+') do\n\
    \        table.insert(t, w)\n    end\n    table.sort(t)\n    local count = 0\n\
    \    for _, w in ipairs(t) do\n        if string.sub(s, 1, n) == w then\n    \
    \        count = count + 1\n        end\n    end\n    if count == n then\n   \
    \     return t\n    end\n    return {}\nend", "  local t = {}\n  for w in string.gmatch(s,\
    \ '%a') do\n    if string.find(w, string.letters) then\n      table.insert(t,\
    \ w)\n    end\n  end\n  if #t > n then\n    return {}\n  end\n  return t\nend",
  "  local t = {}\n  local i = 0\n  while i <= #s do\n    local c = s[i]\n    if c\
    \ ~= ' ' and c ~= '-' and c ~= '!' and c ~= '?' and c ~= '!' and c ~= '?' then\n\
    \      table.insert(t, c)\n    end\n    i = i + 1\n  end\n  if #t == n then\n\
    \    return t\n  else\n    return {}\n  end\nend", "  local t = {}\n  for w in\
    \ string.gmatch(s, '%w+') do\n    if string.find(s, w .. '$', n) then\n      table.insert(t,\
    \ w)\n    end\n  end\n  return t\nend", "    local t = {}\n    local i = 1\n \
    \   while i <= #s do\n        local c = s[i]\n        if c ~= ' ' and c ~= '-'\
    \ and c ~= '!' and c ~= '?' and c ~= '(' and c ~= ')' and c ~= '[' and c ~= ']'\
    \ and c ~= '{' and c ~= '}' and c ~= '$' and c ~= '@' and c ~= '!' and c ~= '?'\
    \ and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-'\
    \ and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-'\
    \ and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-'\
    \ and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-'\
    \ and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-'\
    \ and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-'\
    \ and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-'\
    \ and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-'\
    \ and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-'\
    \ and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-'\
    \ and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-'\
    \ and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-'\
    \ and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-'\
    \ and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-' and c ~= '-'\
    \ and ", "  local t = {}\n  local i = 0\n  while i <= #s do\n    local c = s[i]\n\
    \    if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n      i\
    \ = i + 1\n    elseif c == 'n' then\n      if i == #s then\n        break\n  \
    \    else\n        i = i + 1\n      end\n    else\n      i = i + 1\n    end\n\
    \    if i == n then\n      table.insert(t, s)\n    end\n  end\n  return t\nend",
  "    local t = {}\n    for w in string.gmatch(s, '%w+') do\n        table.insert(t,\
    \ w)\n    end\n    table.sort(t)\n    if n == 1 then\n        return t\n    end\n\
    \    local n = 1\n    local m = #t\n    while n <= m do\n        local i = 1\n\
    \        while i <= n do\n            if t[i] == t[n] then\n                n\
    \ = n + 1\n            else\n                break\n            end\n        \
    \    i = i + 1\n        end\n        if n == m then\n            return t\n  \
    \      end\n    end\n    return {}\nend", "\t-- Write your code here\n\tlocal\
    \ t = {}\n\tfor i = 1, #s do\n\t\tif string.sub(s,i,i) == \" \" then\n\t\t\ttable.insert(t,\
    \ string.sub(s,1,i))\n\t\telse\n\t\t\ttable.insert(t, string.sub(s,i,i))\n\t\t\
    end\n\tend\n\tif #t == n then\n\t\treturn t\n\telse\n\t\treturn {}\n\tend\nend",
  "  local t = {}\n  local i = 0\n  while i <= #s do\n    if string.sub(s,i,i+n) ==\
    \ string.sub(s,i,i+n) then\n      table.insert(t, string.sub(s,i,i+n))\n     \
    \ i = i + n\n    end\n    i = i + 1\n  end\n  return t\nend", "\tlocal t = {}\n\
    \tfor w in string.gmatch(s, '%a') do\n\t\tif string.find(w, string.char(97,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255})\n\
    \t\t\tthen\n\t\t\t\ttable.insert(t, w)\n\t\t\tend\n\tend\n\treturn t\nend", " \
    \ -- Base case\n  if s == nil then\n    return {}\n  end", "  local t = {}\n \
    \ local i = 0\n  while i <= #s do\n    local c = s[i]\n    if c ~= ' ' and c ~=\
    \ '-' and c ~= '!' and c ~= '?' and c ~= '!' and c ~= '?' then\n      if #t <\
    \ n then\n        t[#t+1] = s[i]\n      else\n        break\n      end\n    end\n\
    \    i = i + 1\n  end\n  return t\nend", "  local t = {}\n  local i = 0\n  while\
    \ i < #s do\n    if string.sub(s,i,i+n) == string.sub(s,i,i+n) then\n      table.insert(t,\
    \ string.sub(s,i,i+n))\n      i = i + n\n    else\n      i = i + 1\n    end\n\
    \  end\n  return t\nend", "  -- Write your solution here\n  local t = {}\n  for\
    \ i = 1, #s do\n    if string.sub(s,i,i) == \" \" then\n      table.insert(t,\
    \ string.sub(s,1,i))\n      table.insert(t, string.sub(s,i+1,i+1))\n    else\n\
    \      table.insert(t, string.sub(s,i,i))\n    end\n  end\n  if #t == n then\n\
    \    return t\n  else\n    return {}\n  end\nend", "  local t = {}\n  for w in\
    \ string.gmatch(s, '%w+') do\n    local count = 0\n    for c in w do\n      if\
    \ string.sub(c, 1, 1) == string.sub(c, 1, 1) then\n        count = count + 1\n\
    \      end\n    end\n    if count == n then\n      table.insert(t, w)\n    end\n\
    \  end\n  return t\nend", "    local t = {}\n    for w in string.gmatch(s, '%w+')\
    \ do\n        table.insert(t, w)\n    end\n    table.sort(t)\n    local count\
    \ = 0\n    for _, w in ipairs(t) do\n        if string.find(w, string.sub(s, 1,\
    \ n)) then\n            count = count + 1\n        end\n    end\n    if count\
    \ == n then\n        return t\n    end\n    return {}\nend", "  local t = {}\n\
    \  for w in string.gmatch(s, '%w+') do\n    if string.find(s, w .. '$', 1, n)\
    \ then\n      table.insert(t, w)\n    end\n  end\n  return t\nend", "  local t\
    \ = {}\n  for w in string.gmatch(s, '%S+') do\n    if string.sub(w,1,n) == string.sub(w,1,n-1)\
    \ then\n      table.insert(t, w)\n    end\n  end\n  return t\nend", "  local t\
    \ = {}\n  local i = 1\n  while i <= #s do\n    if string.sub(s,i,i) ~= ' ' then\n\
    \      table.insert(t, string.sub(s,i,i))\n    end\n    i = i + 1\n  end\n  if\
    \ #t == n then\n    return t\n  else\n    return {}\n  end\nend", "  local t =\
    \ {}\n  for w in string.gmatch(s, '%S+') do\n    if string.sub(w,1,n) == string.sub(w,1,n-1)\
    \ then\n      table.insert(t, w)\n    end\n  end\n  return t\nend", "  local t\
    \ = {}\n  for w in string.gmatch(s, '%w+') do\n    if string.find(s, string.sub(w,1,n),\
    \ n) then\n      table.insert(t, w)\n    end\n  end\n  return t\nend", "  -- Your\
    \ code here\n  local t = {}\n  for i = 1, #s do\n    if string.sub(s,i,i) == '\
    \ ' then\n      table.insert(t, string.sub(s,1,i))\n    end\n  end\n  if #t ==\
    \ n then\n    return t\n  end\n  return {}\nend", "  local t = {}\n  local i =\
    \ 0\n  while i <= #s do\n    local c = s[i]\n    if c == 'a' or c == 'e' or c\
    \ == 'i' or c == 'o' or c == 'u' then\n      i = i + 1\n    elseif c == 'y' then\n\
    \      i = i + 1\n      while i <= #s and s[i] ~= 'y' do\n        i = i + 1\n\
    \      end\n    elseif c == 's' then\n      i = i + 1\n      while i <= #s and\
    \ s[i] ~= 's' do\n        i = i + 1\n      end\n    elseif c == 't' then\n   \
    \   i = i + 1\n      while i <= #s and s[i] ~= 't' do\n        i = i + 1\n   \
    \   end\n    elseif c == 'h' then\n      i = i + 1\n      while i <= #s and s[i]\
    \ ~= 'h' do\n        i = i + 1\n      end\n    elseif c == 'l' then\n      i =\
    \ i + 1\n      while i <= #s and s[i] ~= 'l' do\n        i = i + 1\n      end\n\
    \    elseif c == 'l' or c == 'o' or c == 'u' then\n      i = i + 1\n      while\
    \ i <= #s and s[i] ~= 'l' or s[i] ~= 'o' or s[i] ~= 'u' do\n        i = i + 1\n\
    \      end\n    elseif c == 'w' then\n      i = i + 1\n      while i <= #s and\
    \ s[i] ~= 'w' do\n        i = i + 1\n      end\n    elseif c == 'd' then\n   \
    \   i = i + 1\n      while i <= #s and s[i] ~= 'd' do\n        i = i + 1\n   \
    \   end\n    elseif c == 'p' then\n      i = i + 1\n      while i <= #s and s[i]\
    \ ~= 'p' do\n        i = i + 1\n      end\n    elseif c == 'n' then\n      i =\
    \ i + 1\n      while i <= #s and s[i] ~= 'n' do\n        i = i + 1\n      end\n\
    \    elseif c == 'g' or c == 'b' then\n      i = i + 1\n      while i <= #s and\
    \ s[i] ~= 'g' or s[i] ~= 'b' do\n        i = i + 1\n      end\n    elseif c ==\
    \ 'f' then\n      i = i + 1\n      while i <= #s and s[i] ~= 'f' do\n        i\
    \ = i + 1\n      end\n    elseif c == 'v' then\n      i = i + 1\n      while i\
    \ <= #s and s[i] ~= 'v' do\n        i = i + 1\n      end\n    elseif c == 'm'\
    \ then\n      i = i + 1\n      while i <= #s and s[i] ~= 'm' do\n        i = i\
    \ + 1\n      end\n    elseif c == 'c' then\n      i = i + 1\n      while i <=\
    \ #s and s[i] ~", "\t-- Write your code here\n\tlocal t = {}\n\tfor i = 1, #s\
    \ do\n\t\tif string.sub(s,i,i) == ' ' then\n\t\t\ttable.insert(t, string.sub(s,1,i))\n\
    \t\telse\n\t\t\tlocal count = 0\n\t\t\tfor j = 1, #s do\n\t\t\t\tif string.sub(s,i,j)\
    \ == string.sub(s,i,j) then\n\t\t\t\t\tcount = count + 1\n\t\t\t\tend\n\t\t\t\
    end\n\t\t\tif count == n then\n\t\t\t\ttable.insert(t, string.sub(s,1,i))\n\t\t\
    \tend\n\t\tend\n\tend\n\treturn t\nend", "  local t = {}\n  for w in string.gmatch(s,\
    \ '%w+') do\n    if string.find(s, w) == n then\n      table.insert(t, w)\n  \
    \  end\n  end\n  return t\nend", "  local t = {}\n  for w in string.gmatch(s,\
    \ '%S+') do\n    if string.sub(w,1,n) == string.sub(s, 1, n) then\n      table.insert(t,\
    \ w)\n    end\n  end\n  return t\nend", "  local t = {}\n  local i = 0\n  while\
    \ i <= #s do\n    if string.sub(s,i,i) ~= ' ' then\n      table.insert(t, string.sub(s,i,i))\n\
    \    end\n    i = i + 1\n  end\n  if #t == n then\n    return t\n  else\n    return\
    \ {}\n  end\nend", "    local t = {}\n    for w in string.gmatch(s, '%S+') do\n\
    \        table.insert(t, w)\n    end\n    table.sort(t)\n    local i = 0\n   \
    \ local j = 1\n    while i <= #t do\n        if t[i] == nil then\n           \
    \ i = i + 1\n        elseif t[i] == t[j] then\n            j = j + 1\n       \
    \ else\n            i = i + 1\n            j = j + 1\n            if j > #t then\n\
    \                table.insert(t, t[i])\n            end\n        end\n    end\n\
    \    if n == 1 then\n        return t[1]\n    else\n        return t\n    end\n\
    end", "\tlocal t = {}\n\tfor w in string.gmatch(s, '%S+') do\n\t\tif #w == n then\n\
    \t\t\ttable.insert(t, w)\n\t\tend\n\tend\n\treturn t\nend", "  local t = {}\n\
    \  local i = 0\n  while i <= #s do\n    local c = s[i]\n    if c == 'a' or c ==\
    \ 'e' or c == 'i' or c == 'o' or c == 'u' then\n      i = i + 1\n    elseif c\
    \ == 'y' then\n      i = i + 1\n      while i <= #s do\n        local c = s[i]\n\
    \        if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n  \
    \        i = i + 1\n        elseif c == 'y' then\n          i = i + 1\n      \
    \  else\n          table.insert(t, s)\n          break\n        end\n      end\n\
    \    else\n      table.insert(t, s)\n      break\n    end\n  end\n  if #t == n\
    \ then\n    return t\n  else\n    return {}\n  end\nend", "  local t = {}\n  local\
    \ i = 0\n  while i <= #s do\n    if string.sub(s,i,i+n) == string.sub(s,i,i+n)\
    \ then\n      table.insert(t, string.sub(s,i,i+n))\n      i = i + n\n    else\n\
    \      i = i + 1\n    end\n  end\n  return t\nend", "  -- Your code here\n  local\
    \ t = {}\n  local i = 1\n  while i <= #s do\n    if string.sub(s, i, i+n) == string.sub(s,\
    \ 1, n) then\n      table.insert(t, string.sub(s, 1, n))\n      i = i + n\n  \
    \  else\n      i = i + 1\n    end\n  end\n  return t\nend", "    local t = {}\n\
    \    for w in string.gmatch(s, '%w+') do\n        if string.find(s, w .. '$',\
    \ n) then\n            t[#t + 1] = w\n        end\n    end\n    return t\nend",
  "  local t = {}\n  for w in string.gmatch(s, '%w+') do\n    table.insert(t, w)\n\
    \  end\n  table.sort(t)\n  local count = 0\n  for i = 1, #t do\n    if t[i] ==\
    \ n then\n      count = count + 1\n    end\n  end\n  if count == #t then\n   \
    \ return t\n  else\n    return {}\n  end\nend", "  -- Write your solution here\n\
    \  local t = {}\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ and string.sub(s,i,i) ~= \" \" then\n      table.insert(t, string.sub(s,i,i))\n\
    \    end\n  end\n  if #t == n then\n    return t\n  else\n    return {}\n  end\n\
    end", "  -- Base case\n  if s == '' then return {} end", "  local t = {}\n  local\
    \ i = 0\n  while i <= #s do\n    local c = s[i]\n    if c == 'a' or c == 'e' or\
    \ c == 'i' or c == 'o' or c == 'u' then\n      i = i + 1\n    elseif c == 'n'\
    \ then\n      if #t >= n then\n        break\n      end\n      i = i + 1\n   \
    \ elseif c == 's' then\n      if #t >= n then\n        break\n      end\n    \
    \  i = i + 1\n    elseif c == 't' then\n      if #t >= n then\n        break\n\
    \      end\n      i = i + 1\n    elseif c == 'h' then\n      if #t >= n then\n\
    \        break\n      end\n      i = i + 1\n    elseif c == 'l' then\n      if\
    \ #t >= n then\n        break\n      end\n      i = i + 1\n    elseif c == 'w'\
    \ then\n      if #t >= n then\n        break\n      end\n      i = i + 1\n   \
    \ elseif c == 'd' then\n      if #t >= n then\n        break\n      end\n    \
    \  i = i + 1\n    elseif c == 'p' then\n      if #t >= n then\n        break\n\
    \      end\n      i = i + 1\n    elseif c == 'y' then\n      if #t >= n then\n\
    \        break\n      end\n      i = i + 1\n    elseif c == 'r' then\n      if\
    \ #t >= n then\n        break\n      end\n      i = i + 1\n    elseif c == 'v'\
    \ then\n      if #t >= n then\n        break\n      end\n      i = i + 1\n   \
    \ elseif c == 'z' then\n      if #t >= n then\n        break\n      end\n    \
    \  i = i + 1\n    elseif c == 'e' then\n      if #t >= n then\n        break\n\
    \      end\n      i = i + 1\n    elseif c == 'a' then\n      if #t >= n then\n\
    \        break\n      end\n      i = i + 1\n    elseif c == 'm' then\n      if\
    \ #t >= n then\n        break\n      end\n      i = i + 1\n    elseif c == 'n'\
    \ then\n      if #t >= n then\n        break\n      end\n      i = i + 1\n   \
    \ elseif c == 'g' then\n      if #t >= n then\n        break\n      end\n    \
    \  i = i + 1\n    elseif c == 'f' then\n      if #t >= n then\n        break\n\
    \      end\n      i = i + 1\n    elseif c == 'l' then\n      if #t >= n then\n\
    \        break\n      end\n      i = i + 1\n    elseif c == 's' then\n      if\
    \ #", "  -- Write your solution here\n  local t = {}\n  for i = 1, #s do\n   \
    \ if string.sub(s,i,i) == ' ' then\n      table.insert(t, string.sub(s,1,i))\n\
    \      table.insert(t, string.sub(s,i+1,#s))\n    end\n  end\n  return t\nend",
  "  local t = {}\n  for w in string.gmatch(s, '%a') do\n    if string.sub(w,1,n)\
    \ == string.sub(w,n+1,n+1) then\n      table.insert(t, w)\n    end\n  end\n  return\
    \ t\nend", "  local t = {}\n  local i = 1\n  while i <= #s do\n    if string.sub(s,i,i)\
    \ == string.sub(s,i,i) and string.sub(s,i,i) == string.sub(s,i,i) then\n     \
    \ table.insert(t, string.sub(s,i,i))\n      i = i + 1\n    else\n      i = i +\
    \ 1\n    end\n  end\n  if #t == n then\n    return t\n  else\n    return {}\n\
    \  end\nend", "  local t = {}\n  for w in string.gmatch(s, '%a') do\n    if string.find(w,\
    \ string.char(97,122,123,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255})\n\
    \      then\n      table.insert(t, w)\n    end\n  end\n  return t\nend", "  --\
    \ Write your solution here\n  local t = {}\n  for i = 1, #s do\n    if string.sub(s,\
    \ i, i+n) == string.sub(s,1,n) then\n      table.insert(t, string.sub(s,i+1,i+n))\n\
    \    end\n  end\n  return t\nend", "  local t = {}\n  local i = 0\n  while i <\
    \ #s do\n    if string.sub(s,i,i+n) == \"\" then\n      table.insert(t, string.sub(s,1,i))\n\
    \      i = i + 1\n    else\n      i = i + 1\n    end\n  end\n  return t\nend",
  "  local t = {}\n  for w in string.gmatch(s, '%S+') do\n    if string.sub(w,1,n)\
    \ == string.sub(s, 1, n) then\n      table.insert(t, w)\n    end\n  end\n  return\
    \ t\nend", "  -- Write your solution here\n  local t = {}\n  local count = 0\n\
    \  for i = 1, #s do\n    if string.sub(s,i,i) == \" \" then\n      count = count\
    \ + 1\n      if count == n then\n        t[#t+1] = string.sub(s,1,i)\n      end\n\
    \    end\n  end\n  return t\nend", "\t-- Write your code here.\n\t-- If s is empty\
    \ then return an empty table.\n\t-- If n is less than or equal to 0 then return\
    \ an empty table.\n\t-- If n is greater than the number of consonants in s then\
    \ return an empty table.\n\t-- If n is greater than the number of consonants in\
    \ s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than the number of consonants\
    \ in s then return an empty table.\n\t-- If n is greater than ", "  local t =\
    \ {}\n  for w in string.gmatch(s, '%w+') do\n    if string.sub(w,1,n) == string.sub(w,n+1,n)\
    \ then\n      table.insert(t, w)\n    end\n  end\n  return t\nend", "  local t\
    \ = {}\n  local i = 1\n  while i <= #s do\n    if string.sub(s, i, i+n) == string.sub(s,\
    \ 1, n) then\n      table.insert(t, string.sub(s, 1, n))\n    end\n    i = i +\
    \ 1\n  end\n  return t\nend", "    local t = {}\n    local i = 0\n    while i\
    \ < #s do\n        local c = s[i]\n        if c == 'a' or c == 'e' or c == 'i'\
    \ or c == 'o' or c == 'u' then\n            i = i + 1\n        elseif c == 'y'\
    \ then\n            i = i + 1\n        elseif c == 's' then\n            i = i\
    \ + 1\n        elseif c == 'h' then\n            i = i + 1\n        elseif c ==\
    \ 'l' then\n            i = i + 1\n        elseif c == 'd' then\n            i\
    \ = i + 1\n        elseif c == 'n' then\n            i = i + 1\n        elseif\
    \ c == 'w' then\n            i = i + 1\n        elseif c == 't' then\n       \
    \     i = i + 1\n        elseif c == 'r' then\n            i = i + 1\n       \
    \ elseif c == 'p' then\n            i = i + 1\n        elseif c == 'f' then\n\
    \            i = i + 1\n        elseif c == 'v' then\n            i = i + 1\n\
    \        elseif c == 'b' then\n            i = i + 1\n        elseif c == 'c'\
    \ then\n            i = i + 1\n        elseif c == 'm' then\n            i = i\
    \ + 1\n        elseif c == 'y' then\n            i = i + 1\n        elseif c ==\
    \ 'k' then\n            i = i + 1\n        elseif c == 'g' then\n            i\
    \ = i + 1\n        elseif c == 'j' then\n            i = i + 1\n        elseif\
    \ c == 'q' then\n            i = i + 1\n        elseif c == 'z' then\n       \
    \     i = i + 1\n        elseif c == 'x' then\n            i = i + 1\n       \
    \ elseif c == 'q' then\n            i = i + 1\n        elseif c == 'z' then\n\
    \            i = i + 1\n        elseif c == 'q' then\n            i = i + 1\n\
    \        elseif c == 'z' then\n            i = i + 1\n        elseif c == 'q'\
    \ then\n            i = i + 1\n        elseif c == 'z' then\n            i = i\
    \ + 1\n        elseif c == 'q' then\n            i = i + 1\n        elseif c ==\
    \ 'z' then\n            i = i + 1\n        elseif c == 'q' then\n            i\
    \ = i + 1\n        elseif c == 'z' then\n            i = i + 1\n        elseif\
    \ c == 'q' then\n            i = i + 1\n        elseif c == 'z' then\n       \
    \     i = i + 1\n        elseif c == 'q' then\n            i = i + 1\n       \
    \ elseif c == 'z' then\n            i = i + 1\n        elseif c == 'q' then\n\
    \            i = i + 1\n        elseif c == 'z' then\n            i = i + 1\n\
    \        elseif c == 'q' then\n            i = ", "  local t = {}\n  for w in\
    \ string.gmatch(s, '%a') do\n    if string.find(w, string.char(97,102,114,115,116,117,118,119,121,123,125,127,129,131,133,135,137,139,141,143,145,147,149,151,153,155,157,159,161,163,165,167,169,171,173,175,177,179,181,183,185,187,189,191,193,195,197,199,201,203,205,207,209,211,213,215,217,219,221,223,225,227,229,231,233,235,237,239,241,243,245,247,249,251,253,255))\
    \ then\n      table.insert(t, w)\n    end\n  end\n  return t\nend", "  local t\
    \ = {}\n  local i = 1\n  while i <= #s do\n    local c = s[i]\n    if c == 'a'\
    \ or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n      i = i + 1\n    else\n\
    \      if #t >= n then\n        break\n      end\n      table.insert(t, s)\n \
    \   end\n  end\n  return t\nend", "  local table = {}\n  local index = 1\n  while\
    \ index <= #s do\n    local word = string.sub(s, index, index+n)\n    index =\
    \ index+n\n    if string.find(word, string.letters) then\n      table.insert(table,\
    \ word)\n    end\n  end\n  return table\nend", "  local t = {}\n  local i = 0\n\
    \  while i <= #s do\n    if string.sub(s,i,i+n) == \"\" then\n      break\n  \
    \  end\n    t[#t + 1] = string.sub(s,i,i+n)\n    i = i + n\n  end\n  return t\n\
    end", "    local t = {}\n    for w in string.gmatch(s, '%a') do\n        if string.find(w,\
    \ string.char(97,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255}\n\
    \            and string.len(w) == n then\n            table.insert(t, w)\n   \
    \     end\n    end\n    return t\nend", "  local t = {}\n  local i = 1\n  while\
    \ i <= #s do\n    if string.sub(s, i, i+n) == string.sub(s, 1, n) then\n     \
    \ table.insert(t, string.sub(s, 1, n))\n    end\n    i = i + 1\n  end\n  return\
    \ t\nend", "    local t = {}\n    for w in string.gmatch(s, '%S+') do\n      \
    \  table.insert(t, w)\n    end\n    table.sort(t)\n    local i = 0\n    while\
    \ i < n and t[i] ~= '' do\n        i = i + 1\n    end\n    if i == n then\n  \
    \      return {}\n    end\n    return t\nend", "  local t = {}\n  local i = 0\n\
    \  while i < #s do\n    if string.sub(s,i,i+n) == string.sub(s,i,i+n) then\n \
    \     table.insert(t, string.sub(s,i,i+n))\n      i = i + n\n    else\n      i\
    \ = i + 1\n    end\n  end\n  return t\nend", "  local t = {}\n  local i = 1\n\
    \  while i <= #s do\n    if string.sub(s,i,i) ~= ' ' then\n      if string.sub(s,i,i)\
    \ == string.sub(s,i,i-1) then\n        table.insert(t, string.sub(s,i,i))\n  \
    \    else\n        if #t == n then\n          break\n        else\n          table.insert(t,\
    \ string.sub(s,i,i))\n        end\n      end\n    end\n    i = i + 1\n  end\n\
    \  return t\nend", "  -- Base case\n  if s == nil then return end\n  \n  -- Base\
    \ case\n  if n == 0 then return {}\n  \n  -- Base case\n  if n == 1 then return\
    \ {s}\n  \n  -- Recursive case\n  local t = {}\n  for w in select_words(s, n -\
    \ 1) do\n    if string.find(s, w, 1, true) then\n      table.insert(t, w)\n  \
    \  end\n  end\n  return t\nend", "  local t = {}\n  for w in string.gmatch(s,\
    \ '%w+') do\n    table.insert(t, w)\n  end\n  table.sort(t)\n  return t\nend",
  "\t-- Your code here\n\tlocal t = {}\n\tfor i = 1, #s do\n\t\tif string.sub(s,i,i)\
    \ == ' ' then\n\t\t\ttable.insert(t, string.sub(s,1,i))\n\t\telse\n\t\t\tlocal\
    \ consonants = string.sub(s,i,i)\n\t\t\tif consonants == consonants then\n\t\t\
    \t\ttable.insert(t, string.sub(s,1,i))\n\t\t\tend\n\t\tend\n\tend\n\tif #t ==\
    \ n then\n\t\treturn t\n\telse\n\t\treturn {}\n\tend\nend", "  local t = {}\n\
    \  for w in string.gmatch(s, '%S+') do\n    if string.find(s, string.sub(w,1,n),\
    \ 1) then\n      table.insert(t, w)\n    end\n  end\n  return t\nend", "  local\
    \ table = {}\n  local i = 1\n  while i <= #s do\n    local c = s[i]\n    if c\
    \ == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n      i = i + 1\n\
    \    elseif c == 'y' then\n      i = i + 1\n      while i <= #s do\n        c\
    \ = s[i]\n        if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u'\
    \ then\n          i = i + 1\n        else\n          table.insert(table, s)\n\
    \          break\n        end\n      end\n    else\n      table.insert(table,\
    \ s)\n    end\n  end\n  return table\nend", "    local t = {}\n    for w in string.gmatch(s,\
    \ '%w+') do\n        if string.find(w, string.char(string.len(w) - n)) ~= nil\
    \ then\n            t[#t + 1] = w\n        end\n    end\n    return t\nend", " \
    \ local t = {}\n  local i = 0\n  while i <= #s do\n    if string.sub(s,i,i+n)\
    \ == string.sub(s,i,i+n) then\n      table.insert(t, string.sub(s,i,i+n))\n  \
    \    i = i+n\n    else\n      i = i+1\n    end\n  end\n  return t\nend", "  local\
    \ t = {}\n  local i = 0\n  while i <= #s do\n    local c = s[i]\n    if c == 'a'\
    \ or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n      i = i + 1\n    elseif\
    \ c == 'n' then\n      if n >= #s then\n        break\n      else\n        t[#t\
    \ + 1] = s[i + 1]\n        i = i + 2\n      end\n    else\n      i = i + 1\n \
    \   end\n  end\n  return t\nend", "  local t = {}\n  for w in string.gmatch(s,\
    \ '%w+') do\n    local count = 0\n    for c in string.gmatch(w, '[%w\\s]') do\n\
    \      count = count + 1\n      if c == n then\n        break\n      end\n   \
    \ end\n    if count == n then\n      table.insert(t, w)\n    end\n  end\n  return\
    \ t\nend", "    local t = {}\n    for w in string.gmatch(s, '%a') do\n       \
    \ if string.find(w, string.letters) then\n            table.insert(t, w)\n   \
    \     end\n    end\n    if #t == 0 then\n        return {}\n    end\n    if n\
    \ == 1 then\n        return t\n    end\n    local count = 0\n    for _, w in ipairs(t)\
    \ do\n        if string.find(w, string.letters) then\n            count = count\
    \ + 1\n            if count == n then\n                return {w}\n          \
    \  end\n        end\n    end\n    return {}\nend", "  -- Your code here\nend",
  "  -- Base case\n  if s == nil then return end", "  -- Write your solution here\n\
    \  local t = {}\n  local i = 0\n  while i <= #s do\n    if string.sub(s, i, i+n)\
    \ == string.sub(s, 1, n) then\n      table.insert(t, string.sub(s, 1, n))\n  \
    \  end\n    i = i + 1\n  end\n  return t\nend", "  -- Write your solution here\n\
    \  local t = {}\n  for i = 1, #s do\n    if string.sub(s,i,i) == \" \" then\n\
    \      table.insert(t, string.sub(s,1,i))\n    else\n      if string.sub(s,i,i)\
    \ == \" \" then\n        table.insert(t, string.sub(s,1,i))\n      else\n    \
    \    if string.sub(s,i,i) == \" \" then\n          table.insert(t, string.sub(s,1,i))\n\
    \        else\n          if string.sub(s,i,i) == \" \" then\n            table.insert(t,\
    \ string.sub(s,1,i))\n          else\n            if string.sub(s,i,i) == \" \"\
    \ then\n              table.insert(t, string.sub(s,1,i))\n            else\n \
    \             if string.sub(s,i,i) == \" \" then\n                table.insert(t,\
    \ string.sub(s,1,i))\n              else\n                if string.sub(s,i,i)\
    \ == \" \" then\n                  table.insert(t, string.sub(s,1,i))\n      \
    \          else\n                  if string.sub(s,i,i) == \" \" then\n      \
    \              table.insert(t, string.sub(s,1,i))\n                  else\n  \
    \                  if string.sub(s,i,i) == \" \" then\n                      table.insert(t,\
    \ string.sub(s,1,i))\n                    else\n                      if string.sub(s,i,i)\
    \ == \" \" then\n                        table.insert(t, string.sub(s,1,i))\n\
    \                      else\n                        if string.sub(s,i,i) == \"\
    \ \" then\n                          table.insert(t, string.sub(s,1,i))\n    \
    \                    else\n                          if string.sub(s,i,i) == \"\
    \ \" then\n                            table.insert(t, string.sub(s,1,i))\n  \
    \                        else\n                            if string.sub(s,i,i)\
    \ == \" \" then\n                              table.insert(t, string.sub(s,1,i))\n\
    \                            else\n                              if string.sub(s,i,i)\
    \ == \" \" then\n                                table.insert(t, string.sub(s,1,i))\n\
    \                              else\n                                if string.sub(s,i,i)\
    \ == \" \" then\n                                  table.insert(t, string.sub(s,1,i))\n\
    \                                else\n                                  if string.sub(s,i,i)\
    \ == \" \" then\n                                    table.insert(t, string.sub(s,1,i))\n\
    \                                  else\n                                    if\
    \ string.sub(s,i,i) == \" \" then\n                                      table.insert(t,\
    \ string.sub(s,1,i))\n                                    else\n             \
    \                         if string.sub(s,i,i) == \" \" then\n               \
    \                         table.insert(t, string.sub(s,1,i))\n               \
    \                       else\n                                        if string.sub(s,i,i)\
    \ == \" \" then\n                                          table.insert(t, string.sub(s,1,i))\n\
    \                                        else\n                              \
    \            if string.sub(s,i,i) == \" \" then\n                            \
    \                table.insert(t, string.sub(s,1,i))\n                        \
    \                  else\n                                            if string.sub(s,",
  "  local t = {}\n  for w in string.gmatch(s, '%a') do\n    if string.find(string.gsub(w,\
    \ '[aeiou]', ''), string.sub(s, 1, n)) then\n      table.insert(t, w)\n    end\n\
    \  end\n  return t\nend", "  -- Write your solution here\nend", "  -- Base case\n\
    \  if s == nil then return end", "  local t = {}\n  local i = 1\n  while i <=\
    \ #s do\n    if string.sub(s, i, i+n) == string.sub(s, 1, n) then\n      table.insert(t,\
    \ string.sub(s, 1, n))\n    end\n    i = i + 1\n  end\n  return t\nend", "  --\
    \ Write your code here\n  local t = {}\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ == ' ' then\n      table.insert(t, string.sub(s,1,i))\n    else\n      if string.sub(s,i,i)\
    \ == string.sub(s,i,i-1) then\n        table.insert(t, string.sub(s,1,i))\n  \
    \    end\n    end\n  end\n  if #t == n then\n    return t\n  else\n    return\
    \ {}\n  end\nend", "  local table = {}\n  local index = 1\n  while true do\n \
    \   if index == n then\n      break\n    end\n    if string.sub(s,index,index+1)\
    \ ~= ' ' then\n      index = index + 1\n      continue\n    end\n    index = index\
    \ + 1\n    table.insert(table,string.sub(s,1,index))\n  end\n  return table\n\
    end", "  local t = {}\n  for w in string.gmatch(s, '%S+') do\n    local count\
    \ = 0\n    for c in w do\n      if string.sub(c, 1, 1) == string.sub(c, 1, 1)\
    \ then\n        count = count + 1\n      end\n    end\n    if count == n then\n\
    \      table.insert(t, w)\n    end\n  end\n  return t\nend", "  -- Write your\
    \ code here\n  local t = {}\n  for i = 1, #s do\n    if string.sub(s, i, i+n)\
    \ == string.sub(s, '^', i) then\n      table.insert(t, string.sub(s, '^', i))\n\
    \    end\n  end\n  return t\nend", "  -- Write your solution here\nend", "  --\
    \ Write your code here\n  local table = {}\n  local count = 0\n  for i = 1, #s\
    \ do\n    if string.sub(s,i,i)==\" \" then\n      count = count + 1\n    elseif\
    \ string.sub(s,i,i)==\" \" and count==n then\n      table.insert(table)\n    \
    \  count = 0\n    elseif string.sub(s,i,i)==\" \" and count>n then\n      table.insert(table)\n\
    \      count = 0\n    elseif string.sub(s,i,i)==\" \" and count<n then\n     \
    \ count = count + 1\n    end\n  end\n  return table\nend", "    local t = {}\n\
    \    for w in string.gmatch(s, '%a') do\n        table.insert(t, w)\n    end\n\
    \    table.sort(t)\n    local count = 0\n    for _, w in ipairs(t) do\n      \
    \  if string.find(w, string.sub(s, 1, n)) then\n            count = count + 1\n\
    \        end\n    end\n    if count == n then\n        return t\n    end\n   \
    \ return {}\nend", "  -- Base case\n  if s == nil then\n    return {}\n  end",
  "    local t = {}\n    for w in string.gmatch(s, '%w+') do\n        if string.sub(w,1,n)\
    \ == string.sub(w,1,n-1) then\n            t[#t+1] = w\n        end\n    end\n\
    \    return t\nend", "  local t = {}\n  local i = 0\n  while i < #s do\n    if\
    \ string.sub(s,i,i+n) == string.sub(s,i,i+n) then\n      table.insert(t, string.sub(s,i,i+n))\n\
    \      i = i + n\n    else\n      i = i + 1\n    end\n  end\n  return t\nend",
  "  local t = {}\n  for w in string.gmatch(s, '%w+') do\n    if string.sub(w,1,n)\
    \ == string.sub(s, 1, n) then\n      table.insert(t, w)\n    end\n  end\n  return\
    \ t\nend", "  local t = {}\n  for w in string.gmatch(s, '%a') do\n    if string.sub(w,1,n)\
    \ == string.sub(w,1,n-1) then\n      table.insert(t, w)\n    end\n  end\n  return\
    \ t\nend", "  local t = {}\n  local i = 0\n  while i <= #s do\n    if string.sub(s,i,i+n)\
    \ == \"\" then\n      break\n    end\n    t[#t+1] = string.sub(s,i,i+n)\n    i\
    \ = i+n\n  end\n  return t\nend", "    local t = {}\n    for w in string.gmatch(s,\
    \ '%a') do\n        table.insert(t, w)\n    end\n    table.sort(t)\n    if n ~=\
    \ #t then\n        table.insert(t, nil)\n    end\n    return t\nend", "  local\
    \ t = {}\n  local i = 1\n  while i <= #s do\n    if string.sub(s,i,i+n) == string.sub(s,1,n)\
    \ then\n      table.insert(t, string.sub(s,1,n))\n    end\n    i = i + 1\n  end\n\
    \  return t\nend", "  local t = {}\n  local i = 0\n  while i <= #s do\n    local\
    \ c = s[i]\n    if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n\
    \      i = i + 1\n    elseif c == 'y' then\n      i = i + 1\n      while i <=\
    \ #s do\n        local c = s[i]\n        if c == 'a' or c == 'e' or c == 'i' or\
    \ c == 'o' or c == 'u' then\n          i = i + 1\n        elseif c == 'y' then\n\
    \          i = i + 1\n        else\n          table.insert(t, s)\n          break\n\
    \        end\n      end\n    elseif c == 'n' then\n      i = i + 1\n      while\
    \ i <= #s do\n        local c = s[i]\n        if c == 'a' or c == 'e' or c ==\
    \ 'i' or c == 'o' or c == 'u' then\n          i = i + 1\n        elseif c == 'n'\
    \ then\n          i = i + 1\n        else\n          table.insert(t, s)\n    \
    \      break\n        end\n      end\n    elseif c == 's' then\n      i = i +\
    \ 1\n      while i <= #s do\n        local c = s[i]\n        if c == 'a' or c\
    \ == 'e' or c == 'i' or c == 'o' or c == 'u' then\n          i = i + 1\n     \
    \   elseif c == 's' then\n          i = i + 1\n        else\n          table.insert(t,\
    \ s)\n          break\n        end\n      end\n    elseif c == 't' then\n    \
    \  i = i + 1\n      while i <= #s do\n        local c = s[i]\n        if c ==\
    \ 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n          i = i +\
    \ 1\n        elseif c == 't' then\n          i = i + 1\n        else\n       \
    \   table.insert(t, s)\n          break\n        end\n      end\n    elseif c\
    \ == 'w' then\n      i = i + 1\n      while i <= #s do\n        local c = s[i]\n\
    \        if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n  \
    \        i = i + 1\n        elseif c == 'w' then\n          i = i + 1\n      \
    \  else\n          table.insert(t, s)\n          break\n        end\n      end\n\
    \    elseif c == 'h' then\n      i = i + 1\n      while i <= #s do\n        local\
    \ c = s[i]\n        if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u'\
    \ then\n          i = i + 1\n        elseif c == 'h' then\n          i = i + 1\n\
    \        else\n          table.insert(t, s)\n", "  local t = {}\n  local i = 0\n\
    \  while i < #s do\n    if string.sub(s,i,i+n) == string.sub(s,i,i+n) then\n \
    \     table.insert(t, string.sub(s,i,i+n))\n      i = i + n\n    else\n      i\
    \ = i + 1\n    end\n  end\n  return t\nend", "\tlocal t = {}\n\tfor w in string.gmatch(s,\
    \ '%a') do\n\t\tif string.find(w, string.letters) then\n\t\t\ttable.insert(t,\
    \ w)\n\t\tend\n\tend\n\tif #t > n then\n\t\tt = t[#t]\n\tend\n\treturn t\nend",
  "    local t = {}\n    for w in string.gmatch(s, '%w+') do\n        table.insert(t,\
    \ w)\n    end\n    table.sort(t)\n    local count = 0\n    for _, w in ipairs(t)\
    \ do\n        if string.sub(s, 1, n) == w then\n            count = count + 1\n\
    \        end\n    end\n    if count == n then\n        return t\n    end\n   \
    \ return {}\nend", "  local t = {}\n  local i = 0\n  while i <= #s do\n    if\
    \ string.sub(s,i,i) == ' ' then\n      i = i + 1\n      t[#t+1] = string.sub(s,i,i)\n\
    \    else\n      if string.sub(s,i,i) == string.sub(s, i+1, i+n) then\n      \
    \  i = i + n\n      else\n        i = i + 1\n      end\n    end\n  end\n  return\
    \ t\nend", "    local t = {}\n    local i = 0\n    while i <= #s do\n        local\
    \ c = s[i]\n        if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u'\
    \ then\n            i = i + 1\n        elseif c == 'y' then\n            i = i\
    \ + 1\n        elseif c == 's' then\n            i = i + 1\n        elseif c ==\
    \ 'h' then\n            i = i + 1\n        elseif c == 'r' then\n            i\
    \ = i + 1\n        elseif c == 'l' then\n            i = i + 1\n        elseif\
    \ c == 'd' then\n            i = i + 1\n        elseif c == 'n' then\n       \
    \     i = i + 1\n        elseif c == 'w' then\n            i = i + 1\n       \
    \ elseif c == 't' then\n            i = i + 1\n        elseif c == 'b' then\n\
    \            i = i + 1\n        elseif c == 'f' then\n            i = i + 1\n\
    \        elseif c == 'v' then\n            i = i + 1\n        elseif c == 'm'\
    \ then\n            i = i + 1\n        elseif c == 'p' then\n            i = i\
    \ + 1\n        elseif c == 'y' then\n            i = i + 1\n        elseif c ==\
    \ 'k' then\n            i = i + 1\n        elseif c == 'j' then\n            i\
    \ = i + 1\n        elseif c == 'q' then\n            i = i + 1\n        elseif\
    \ c == 'z' then\n            i = i + 1\n        elseif c == 'x' then\n       \
    \     i = i + 1\n        elseif c == 'q' then\n            i = i + 1\n       \
    \ elseif c == 'z' then\n            i = i + 1\n        elseif c == 'q' then\n\
    \            i = i + 1\n        elseif c == 'z' then\n            i = i + 1\n\
    \        elseif c == 'q' then\n            i = i + 1\n        elseif c == 'z'\
    \ then\n            i = i + 1\n        elseif c == 'q' then\n            i = i\
    \ + 1\n        elseif c == 'z' then\n            i = i + 1\n        elseif c ==\
    \ 'q' then\n            i = i + 1\n        elseif c == 'z' then\n            i\
    \ = i + 1\n        elseif c == 'q' then\n            i = i + 1\n        elseif\
    \ c == 'z' then\n            i = i + 1\n        elseif c == 'q' then\n       \
    \     i = i + 1\n        elseif c == 'z' then\n            i = i + 1\n       \
    \ elseif c == 'q' then\n            i = i + 1\n        elseif c == 'z' then\n\
    \            i = i + 1\n        elseif c == 'q' then\n            i = i + 1\n\
    \        elseif c == 'z' then\n            i = i + 1\n        elseif c == 'q'\
    \ then\n            i = ", "\tlocal t = {}\n\tfor w in string.gmatch(s, '%w+')\
    \ do\n\t\tif string.find(string.gsub(w, '[aeiou]', ''), string.sub(s, 1, n)) then\n\
    \t\t\ttable.insert(t, w)\n\t\tend\n\tend\n\treturn t\nend", "    local t = {}\n\
    \    for w in string.gmatch(s, '%w+') do\n        if string.find(s, w .. '$',\
    \ n) then\n            t[#t + 1] = w\n        end\n    end\n    return t\nend",
  "  -- Write your code here\n  local table = {}\n  if s == nil then\n    return table\n\
    \  end\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local consonants = {'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z'}\n  local i = 0\n  while i <= #s do\n    if vowels:contains(string.sub(s,i,i))\
    \ then\n      table.insert(table, string.sub(s,i,i))\n      i = i + 1\n    elseif\
    \ consonants:contains(string.sub(s,i,i)) then\n      i = i + 1\n    else\n   \
    \   i = i + 1\n    end\n  end\n  if #table == n then\n    return table\n  else\n\
    \    return {}\n  end\nend", "  -- Write your solution here\n  local t = {}\n\
    \  for i = 1, #s do\n    if string.sub(s, i, i+n) == string.sub(s, 1, n) then\n\
    \      table.insert(t, string.sub(s, 1, i))\n    end\n  end\n  return t\nend",
  "  local t = {}\n  local i = 1\n  while i <= #s do\n    if string.sub(s, i, i+n)\
    \ == string.sub(s, 1, n) then\n      table.insert(t, string.sub(s, 1, n))\n  \
    \  end\n    i = i + 1\n  end\n  return t\nend", "    local t = {}\n    local i\
    \ = 0\n    while i < #s do\n        if string.sub(s, i, i+n) == string.sub(s,\
    \ 1, n) then\n            table.insert(t, string.sub(s, 1, n))\n        end\n\
    \        i = i + 1\n    end\n    return t\nend", "  local t = {}\n  local i =\
    \ 0\n  while i <= #s do\n    if string.sub(s,i,i) ~= ' ' then\n      table.insert(t,\
    \ string.sub(s,i,i))\n    end\n    i = i + 1\n  end\n  if #t == n then\n    return\
    \ t\n  else\n    return {}\n  end\nend", "  -- Write your solution here\n  local\
    \ t = {}\n  for i = 1, #s do\n    if string.sub(s,i,i) == ' ' then\n      table.insert(t,\
    \ string.sub(s,1,i))\n      table.insert(t, string.sub(s,i+1,#s))\n    else\n\
    \      table.insert(t, string.sub(s,i,i))\n    end\n  end\n  return t\nend", " \
    \   local t = {}\n    local i = 0\n    while i <= #s do\n        local c = s[i]\n\
    \        if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n  \
    \          i = i + 1\n        elseif c == 'y' then\n            i = i + 1\n  \
    \      elseif c == 's' then\n            i = i + 1\n        elseif c == 'h' then\n\
    \            i = i + 1\n        elseif c == 'l' then\n            i = i + 1\n\
    \        elseif c == 'd' then\n            i = i + 1\n        elseif c == 'n'\
    \ then\n            i = i + 1\n        elseif c == 'w' then\n            i = i\
    \ + 1\n        elseif c == 'r' then\n            i = i + 1\n        elseif c ==\
    \ 't' then\n            i = i + 1\n        elseif c == 'f' then\n            i\
    \ = i + 1\n        elseif c == 'g' then\n            i = i + 1\n        elseif\
    \ c == 'p' then\n            i = i + 1\n        elseif c == 'v' then\n       \
    \     i = i + 1\n        elseif c == 'b' then\n            i = i + 1\n       \
    \ elseif c == 'z' then\n            i = i + 1\n        elseif c == 'x' then\n\
    \            i = i + 1\n        elseif c == 'q' then\n            i = i + 1\n\
    \        elseif c == 'j' then\n            i = i + 1\n        elseif c == 'k'\
    \ then\n            i = i + 1\n        elseif c == 'm' then\n            i = i\
    \ + 1\n        elseif c == 'c' then\n            i = i + 1\n        elseif c ==\
    \ 'v' then\n            i = i + 1\n        elseif c == 'b' then\n            i\
    \ = i + 1\n        elseif c == 'z' then\n            i = i + 1\n        elseif\
    \ c == 'x' then\n            i = i + 1\n        elseif c == 'q' then\n       \
    \     i = i + 1\n        elseif c == 'j' then\n            i = i + 1\n       \
    \ elseif c == 'k' then\n            i = i + 1\n        elseif c == 'm' then\n\
    \            i = i + 1\n        elseif c == 'c' then\n            i = i + 1\n\
    \        elseif c == 'v' then\n            i = i + 1\n        elseif c == 'b'\
    \ then\n            i = i + 1\n        elseif c == 'z' then\n            i = i\
    \ + 1\n        elseif c == 'x' then\n            i = i + 1\n        elseif c ==\
    \ 'q' then\n            i = i + 1\n        elseif c == 'j' then\n            i\
    \ = i + 1\n        elseif c == 'k' then\n            i = i + 1\n        elseif\
    \ c == 'm' then\n            i = i + 1\n        elseif c == 'c' then\n       \
    \     i = ", "  -- Write your solution here\nend", "  local t = {}\n  for w in\
    \ string.gmatch(s, '%w+') do\n    if string.sub(w,1,n) == string.sub(s, 1, n)\
    \ then\n      table.insert(t, w)\n    end\n  end\n  return t\nend", "  -- Your\
    \ code here\n  local t = {}\n  local i = 0\n  while i <= #s do\n    if string.sub(s,\
    \ i, i+n) == string.sub(s,1,n) then\n      table.insert(t, string.sub(s,i+1,i+n))\n\
    \    end\n    i = i + 1\n  end\n  return t\nend", "  local table = {}\n  local\
    \ i = 1\n  while i <= #s do\n    local word = string.sub(s,i,i)\n    local count\
    \ = 0\n    for j = 1, #word do\n      if word[j] ~= 'a' and word[j] ~= 'e' and\
    \ word[j] ~= 'i' and word[j] ~= 'o' and word[j] ~= 'u' then\n        count = count\
    \ + 1\n      end\n    end\n    if count == n then\n      table.insert(table, word)\n\
    \    end\n    i = i + 1\n  end\n  return table\nend", "\tlocal t = {}\n\t\n\t\
    -- Base case\n\tif s == \"\" then\n\t\treturn t\n\tend", "  local t = {}\n  for\
    \ w in string.gmatch(s, '%w+') do\n    if string.sub(s, 1, string.len(w))==w then\n\
    \      if #t==n then\n        return t\n      else\n        t[#t+1] = w\n    \
    \  end\n    end\n  end\n  return t\nend", "  local t = {}\n  local i = 1\n  while\
    \ i <= #s do\n    local c = s[i]\n    local j = i - 1\n    while j >=0 and s[j]\
    \ == c do\n      j = j - 1\n    end\n    if j == i then\n      t[#t + 1] = s[i]\n\
    \      i = i + 1\n    end\n    i = j + 1\n  end\n  if #t == n then\n    return\
    \ t\n  end\n  return {}\nend", "  local t = {}\n  for w in string.gmatch(s, '%S+')\
    \ do\n    table.insert(t, w)\n  end\n  table.sort(t)\n  return t\nend", "  local\
    \ t = {}\n  local i = 0\n  while i < #s do\n    if string.sub(s,i,i+1) == ' '\
    \ then\n      i = i + 1\n      t[#t+1] = string.sub(s,i,i)\n    elseif string.sub(s,i,i+1)\
    \ ~= '' then\n      i = i + 1\n    end\n    if i == #s then\n      if #t >= n\
    \ then\n        return t\n      else\n        return {}\n      end\n    end\n\
    \  end\n  return t\nend", "  local t = {}\n  local i = 1\n  while i <= #s do\n\
    \    if string.sub(s, i, i+n) == n then\n      table.insert(t, string.sub(s, 1,\
    \ i))\n      i = i + n\n    end\n    i = i + 1\n  end\n  return t\nend", "  local\
    \ t = {}\n  local i = 1\n  while i <= #s do\n    if string.sub(s, i, i+n) == string.sub(s,\
    \ 1, n) then\n      table.insert(t, string.sub(s, 1, n))\n    end\n    i = i +\
    \ 1\n  end\n  return t\nend", "  local t = {}\n  for w in string.gmatch(s, '%a')\
    \ do\n    local c = string.sub(w,1,1)\n    if c == 'a' or c == 'e' or c == 'i'\
    \ or c == 'o' or c == 'u' then\n      table.insert(t, w)\n    end\n  end\n  if\
    \ #t > n then\n    return {}\n  end\n  return t\nend", "  local t = {}\n  local\
    \ i = 0\n  while i <= #s do\n    local c = s[i]\n    if c == 'a' or c == 'e' or\
    \ c == 'i' or c == 'o' or c == 'u' then\n      i = i + 1\n    elseif c == 'n'\
    \ then\n      if n <= #s then\n        table.insert(t, string.sub(s, 1, i))\n\
    \      else\n        break\n      end\n      i = i + 1\n    elseif c == 's' then\n\
    \      if n <= #s then\n        table.insert(t, string.sub(s, 1, i))\n      else\n\
    \        break\n      end\n      i = i + 1\n    elseif c == 't' then\n      if\
    \ n <= #s then\n        table.insert(t, string.sub(s, 1, i))\n      else\n   \
    \     break\n      end\n      i = i + 1\n    elseif c == 'w' then\n      if n\
    \ <= #s then\n        table.insert(t, string.sub(s, 1, i))\n      else\n     \
    \   break\n      end\n      i = i + 1\n    elseif c == 'h' then\n      if n <=\
    \ #s then\n        table.insert(t, string.sub(s, 1, i))\n      else\n        break\n\
    \      end\n      i = i + 1\n    elseif c == 'l' then\n      if n <= #s then\n\
    \        table.insert(t, string.sub(s, 1, i))\n      else\n        break\n   \
    \   end\n      i = i + 1\n    elseif c == 'd' then\n      if n <= #s then\n  \
    \      table.insert(t, string.sub(s, 1, i))\n      else\n        break\n     \
    \ end\n      i = i + 1\n    elseif c == 'p' then\n      if n <= #s then\n    \
    \    table.insert(t, string.sub(s, 1, i))\n      else\n        break\n      end\n\
    \      i = i + 1\n    elseif c == 'y' then\n      if n <= #s then\n        table.insert(t,\
    \ string.sub(s, 1, i))\n      else\n        break\n      end\n      i = i + 1\n\
    \    elseif c == 'g' then\n      if n <= #s then\n        table.insert(t, string.sub(s,\
    \ 1, i))\n      else\n        break\n      end\n      i = i + 1\n    elseif c\
    \ == 'b' then\n      if n <= #s then\n        table.insert(t, string.sub(s, 1,\
    \ i))\n      else\n        break\n      end\n      i = i + 1\n    elseif c ==\
    \ 'm' then\n      if n <= #s then\n        table.insert(t, string.sub(s, 1, i))\n\
    \      else\n        break\n      end\n      i = i + 1\n    elseif c == 'v' then\n\
    \      if n <= #s then\n        table.insert(t, string.sub(", "    local t = {}\n\
    \    for w in string.gmatch(s, '%w+') do\n        if string.sub(w,1,n) == string.sub(w,1,n-1)\
    \ then\n            t[#t + 1] = w\n        end\n    end\n    return t\nend", " \
    \   local t = {}\n    for w in string.gmatch(s, '%a') do\n        table.insert(t,\
    \ w)\n    end\n    table.sort(t)\n    local count = 0\n    for _, w in ipairs(t)\
    \ do\n        if string.sub(w,1,n) == string.sub(w,n+1,n) then\n            count\
    \ = count + 1\n        end\n    end\n    if count == 0 then\n        return {}\n\
    \    else\n        return t\n    end\nend", "  local t = {}\n  for w in string.gmatch(s,\
    \ '%a') do\n    if string.find(string.gsub(w, '[^aeiou]', ''), '^' .. n .. '$')\
    \ then\n      table.insert(t, w)\n    end\n  end\n  return t\nend", "  local t\
    \ = {}\n  for w in string.gmatch(s, '%a') do\n    if string.sub(w,1,n) == string.sub(w,n+1,n+1)\
    \ then\n      table.insert(t, w)\n    end\n  end\n  return t\nend", "    local\
    \ t = {}\n    for w in string.gmatch(s, '%a') do\n        local count = 0\n  \
    \      for c in w do\n            if string.sub(s, 1, 1) == c then\n         \
    \       count = count + 1\n            end\n        end\n        if count == n\
    \ then\n            t[#t + 1] = w\n        end\n    end\n    return t\nend", " \
    \ local t = {}\n  local i = 0\n  while i <= #s do\n    if string.sub(s,i,i) ~=\
    \ ' ' then\n      local c = string.sub(s,i,i)\n      if string.find(c, \"aeiouAEIOU\"\
    ) then\n        table.insert(t, c)\n      end\n    end\n    i = i + 1\n  end\n\
    \  if #t < n then\n    local k = n - #t\n    for i = k + 1, #s do\n      table.insert(t,\
    \ string.sub(s,i,i))\n    end\n  end\n  return t\nend", "  local t = {}\n  local\
    \ i = 0\n  while i <= #s do\n    local c = s[i]\n    if c == 'a' or c == 'e' or\
    \ c == 'i' or c == 'o' or c == 'u' then\n      i = i + 1\n    elseif c == 'n'\
    \ then\n      if i >= n then\n        break\n      end\n      i = i + 1\n    elseif\
    \ c == 's' then\n      if i >= n then\n        break\n      end\n      i = i +\
    \ 1\n    elseif c == 't' then\n      if i >= n then\n        break\n      end\n\
    \      i = i + 1\n    elseif c == 'w' then\n      if i >= n then\n        break\n\
    \      end\n      i = i + 1\n    elseif c == 'y' then\n      if i >= n then\n\
    \        break\n      end\n      i = i + 1\n    end\n  end\n  return t\nend",
  "\tlocal t = {}\n\tlocal i = 1\n\twhile i <= #s do\n\t\tlocal c = s[i]\n\t\tif c\
    \ == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n\t\t\ti = i + 1\n\
    \t\telseif c == 'y' then\n\t\t\ti = i + 1\n\t\t\twhile i <= #s do\n\t\t\t\tlocal\
    \ c = s[i]\n\t\t\t\tif c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u'\
    \ then\n\t\t\t\t\ti = i + 1\n\t\t\t\telseif c == 'y' then\n\t\t\t\t\ti = i + 1\n\
    \t\t\t\t\twhile i <= #s do\n\t\t\t\t\t\tlocal c = s[i]\n\t\t\t\t\t\tif c == 'a'\
    \ or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n\t\t\t\t\t\t\ti = i +\
    \ 1\n\t\t\t\t\t\telseif c == 'y' then\n\t\t\t\t\t\t\ti = i + 1\n\t\t\t\t\t\t\t\
    while i <= #s do\n\t\t\t\t\t\t\t\tlocal c = s[i]\n\t\t\t\t\t\t\t\tif c == 'a'\
    \ or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n\t\t\t\t\t\t\t\t\ti =\
    \ i + 1\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\ttable.insert(t, s)\n\t\t\t\t\t\
    \t\t\t\tbreak\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\
    \t\tend\n\t\t\t\tend\n\t\t\tend\n\t\telseif c == 'n' then\n\t\t\ti = i + 1\n\t\
    \t\twhile i <= #s do\n\t\t\t\tlocal c = s[i]\n\t\t\t\tif c == 'a' or c == 'e'\
    \ or c == 'i' or c == 'o' or c == 'u' then\n\t\t\t\t\ti = i + 1\n\t\t\t\telseif\
    \ c == 'n' then\n\t\t\t\t\ti = i + 1\n\t\t\t\t\twhile i <= #s do\n\t\t\t\t\t\t\
    local c = s[i]\n\t\t\t\t\t\tif c == 'a' or c == 'e' or c == 'i' or c == 'o' or\
    \ c == 'u' then\n\t\t\t\t\t\t\ti = i + 1\n\t\t\t\t\t\telseif c == 'n' then\n\t\
    \t\t\t\t\t\ti = i + 1\n\t\t\t\t\t\t\twhile i <= #s do\n\t\t\t\t\t\t\t\tlocal c\
    \ = s[i]\n\t\t\t\t\t\t\t\tif c == 'a' or c == 'e' or c == 'i' or c == 'o' or c\
    \ == 'u' then\n\t\t\t\t\t\t\t\t\ti = i + 1\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\
    \t\t\ttable.insert(t, s)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tend\n\t\t\t\
    \t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\telseif\
    \ c == 's' then\n\t\t\ti = i + 1\n\t\t\twhile i <= #s do\n\t\t\t\tlocal c = s[i]\n\
    \t\t\t\tif c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n\t\t\
    \t\t\ti = i + 1\n\t\t\t\telseif c == 's' then\n\t\t\t\t\ti = i + 1\n\t\t\t\t\t\
    while i <= #s do\n\t\t\t\t\t\tlocal c = s[i]\n\t\t\t\t\t\tif c == 'a' or c ==\
    \ 'e' or c == '", "  local t = {}\n  local i = 0\n  while i <= #s do\n    local\
    \ c = s[i]\n    if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n\
    \      i = i + 1\n    elseif c == 'y' then\n      i = i + 1\n      while i <=\
    \ #s do\n        local c2 = s[i]\n        if c2 == 'a' or c2 == 'e' or c2 == 'i'\
    \ or c2 == 'o' or c2 == 'u' then\n          i = i + 1\n        elseif c2 == 'y'\
    \ then\n          i = i + 1\n        else\n          table.insert(t, string.sub(s,\
    \ 1, i))\n          i = i + 1\n        end\n      end\n    elseif c == 's' then\n\
    \      i = i + 1\n      while i <= #s do\n        local c2 = s[i]\n        if\
    \ c2 == 'a' or c2 == 'e' or c2 == 'i' or c2 == 'o' or c2 == 'u' then\n       \
    \   i = i + 1\n        elseif c2 == 's' then\n          i = i + 1\n        else\n\
    \          table.insert(t, string.sub(s, 1, i))\n          i = i + 1\n       \
    \ end\n      end\n    elseif c == 'n' then\n      i = i + 1\n      while i <=\
    \ #s do\n        local c2 = s[i]\n        if c2 == 'a' or c2 == 'e' or c2 == 'i'\
    \ or c2 == 'o' or c2 == 'u' then\n          i = i + 1\n        elseif c2 == 'n'\
    \ then\n          i = i + 1\n        else\n          table.insert(t, string.sub(s,\
    \ 1, i))\n          i = i + 1\n        end\n      end\n    elseif c == 't' then\n\
    \      i = i + 1\n      while i <= #s do\n        local c2 = s[i]\n        if\
    \ c2 == 'a' or c2 == 'e' or c2 == 'i' or c2 == 'o' or c2 == 'u' then\n       \
    \   i = i + 1\n        elseif c2 == 't' then\n          i = i + 1\n        else\n\
    \          table.insert(t, string.sub(s, 1, i))\n          i = i + 1\n       \
    \ end\n      end\n    elseif c == 'h' then\n      i = i + 1\n      while i <=\
    \ #s do\n        local c2 = s[i]\n        if c2 == 'a' or c2 == 'e' or c2 == 'i'\
    \ or c2 == 'o' or c2 == 'u' then\n          i = i + 1\n        elseif c2 == 'h'\
    \ then\n          i = i + 1\n        else\n          table.insert(t, string.sub(s,\
    \ 1, i))\n          i = i + 1\n        end\n      end\n    elseif c == 'w' then\n\
    \      i = i + 1\n      while i <= #s do\n        local c2 = s[i]\n        if\
    \ c2 == 'a' or c2 == 'e' or c2 == 'i' or c2 == 'o", "    local t = {}\n    for\
    \ w in string.gmatch(s, '%w+') do\n        if string.sub(w,1,n) == string.sub(w,1,n-1)\
    \ then\n            t[#t+1] = w\n        end\n    end\n    return t\nend", " \
    \ -- Base case\n  if s == nil then return end", "  -- Write your code here\n \
    \ local table = {}\n  if s == \"\" then\n    return table\n  end\n  local count\
    \ = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == \" \" then\n      count\
    \ = count + 1\n      if count == n then\n        table.insert(table, string.sub(s,1,i))\n\
    \      end\n    end\n  end\n  return table\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

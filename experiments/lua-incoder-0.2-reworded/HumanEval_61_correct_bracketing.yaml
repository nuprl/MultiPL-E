name: HumanEval_61_correct_bracketing
language: lua
prompt: "-- brackets is a string of \"(\" and \")\".\n-- return true if every opening\
  \ bracket has a corresponding closing bracket.\n-- >>> correct_bracketing('(')\n\
  -- false\n-- >>> correct_bracketing('()')\n-- true\n-- >>> correct_bracketing('(()())')\n\
  -- true\n-- >>> correct_bracketing(')(()')\n-- false\nlocal function correct_bracketing(brackets)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = correct_bracketing\n\
  \    lu.assertEquals(candidate('()'), true)\n    lu.assertEquals(candidate('(()())'),\
  \ true)\n    lu.assertEquals(candidate('()()(()())()'), true)\n    lu.assertEquals(candidate('()()((()()())())(()()(()))'),\
  \ true)\n    lu.assertEquals(candidate('((()())))'), false)\n    lu.assertEquals(candidate(')(()'),\
  \ false)\n    lu.assertEquals(candidate('('), false)\n    lu.assertEquals(candidate('(((('),\
  \ false)\n    lu.assertEquals(candidate(')'), false)\n    lu.assertEquals(candidate('(()'),\
  \ false)\n    lu.assertEquals(candidate('()()(()())())(()'), false)\n    lu.assertEquals(candidate('()()(()())()))()'),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n\
    \  local opening_count = brackets:sub(1,1):len()\n  local opening_count2 = brackets:sub(1,2):len()\n\
    \  local opening_count3 = brackets:sub(1,3):len()\n  local opening_count4 = brackets:sub(1,4):len()\n\
    \  local opening_count5 = brackets:sub(1,5):len()\n  local opening_count6 = brackets:sub(1,6):len()\n\
    \  local opening_count7 = brackets:sub(1,7):len()\n  local opening_count8 = brackets:sub(1,8):len()\n\
    \  local opening_count9 = brackets:sub(1,9):len()\n  local opening_count10 = brackets:sub(1,10):len()\n\
    \  local opening_count11 = brackets:sub(1,11):len()\n  local opening_count12 =\
    \ brackets:sub(1,12):len()\n  local opening_count13 = brackets:sub(1,13):len()\n\
    \  local opening_count14 = brackets:sub(1,14):len()\n  local opening_count15 =\
    \ brackets:sub(1,15):len()\n  local opening_count16 = brackets:sub(1,16):len()\n\
    \  local opening_count17 = brackets:sub(1,17):len()\n  local opening_count18 =\
    \ brackets:sub(1,18):len()\n  local opening_count19 = brackets:sub(1,19):len()\n\
    \  local opening_count20 = brackets:sub(1,20):len()\n  local opening_count21 =\
    \ brackets:sub(1,21):len()\n  local opening_count22 = brackets:sub(1,22):len()\n\
    \  local opening_count23 = brackets:sub(1,23):len()\n  local opening_count24 =\
    \ brackets:sub(1,24):len()\n  local opening_count25 = brackets:sub(1,25):len()\n\
    \  local opening_count26 = brackets:sub(1,26):len()\n  local opening_count27 =\
    \ brackets:sub(1,27):len()\n  local opening_count28 = brackets:sub(1,28):len()\n\
    \  local opening_count29 = brackets:sub(1,29):len()\n  local opening_count30 =\
    \ brackets:sub(1,30):len()\n  local opening_count31 = brackets:sub(1,31):len()\n\
    \  local opening_count32 = brackets:sub(1,32):len()\n", "  local opening_brackets\
    \ = brackets:gsub('%[(%[(%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%",
  "  local opening_brackets = brackets:gsub('%[(%)][(%)]', function(x)\n    return\
    \ x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[)](%)][)]',\
    \ function(x)\n    return x:reverse()\n  end)\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening_brackets = brackets:gsub('(%[(%)%])',\
    \ function(x)\n    return x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('(%[%)]%)',\
    \ function(x)\n    return x:reverse()\n  end)\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening_brackets = brackets:gsub('%[(%)%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  for i = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets:sub(i,\
    \ i)\n    local closing_bracket = closing_brackets:sub(i, i)\n    if opening_bracket\
    \ ~= closing_bracket then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n\
    \  return opening and closing and opening:sub(1,1) == closing:sub(1,1)\nend",
  "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n  return\
    \ opening ~= closing and opening ~= '(' and closing ~= ')'\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)][(%)]','')\n  local closing_brackets = brackets:gsub('%[)](%)','')\n\
    \  return opening_brackets ~= closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)].*$', ''):gsub('%[(%)]$', ''):gsub('%[)]$', '')\n  local\
    \ closing_brackets = brackets:gsub('%[)](%)$', ''):gsub('%[)]$', ''):gsub('%[(%)]$',\
    \ '')\n  return opening_brackets == closing_brackets\nend", "  local open_brackets\
    \ = brackets:gsub('(%[(%)]+)', '%%%1%%')\n  local close_brackets = brackets:gsub('(%[%)]+)',\
    \ '%%%1%%')\n  return open_brackets:sub(1, #open_brackets) == close_brackets\n\
    end", "  local opening_brackets = brackets:gsub('(%[(%)]+)', ''):gsub('%[(%)]+$',\
    \ '')\n  local closing_brackets = brackets:gsub('(%[(%)]+)', ''):gsub('%[(%)]+$',\
    \ '')\n  return opening_brackets:len() == closing_brackets:len()\nend", "  brackets\
    \ = brackets:gsub('%[(%)][(%)]', '(%1)(%2)')\n  return brackets:gsub('%[(%)]',\
    \ '(%1)'):gsub('%[)]', '(%1)'):gsub('%[(%)]', '(%1)'):gsub('%[)]', '(%1)'):gsub('%[(%)]',\
    \ '(%1)'):gsub('%[)]', '(%1)'):gsub('%[(%)]', '(%1)'):gsub('%[)]', '(%1)'):gsub('%[(%)]',\
    \ '(%1)'):gsub('%[)]', '(%1)'):gsub('%[(%)]', '(%1)'):gsub('%[)]', '(%1)'):gsub('%[(%)]',\
    \ '(%1)'):gsub('%[)]', '(%1)'):gsub('%[(%)]', '(%1)'):gsub('%[)]', '(%1)'):gsub('%[(%)]',\
    \ '(%1)'):gsub('%[)]', '(%1)'):gsub('%[(%)]', '(%1)'):gsub('%[)]', '(%1)'):gsub('%[(%)]',\
    \ '(%1)'):gsub('%[)]', '(%1)'):gsub('%[(%)]', '(%1)'):gsub('%[)]', '(%1)'):gsub('%[(%)]',\
    \ '(%1)'):gsub('%[)]', '(%1)'):gsub('%[(%)]', '(%1)'):gsub('%[)]', '(%1)'):gsub('%[(%)]',\
    \ '(%1)'):gsub('%[)]', '(%1)'):gsub('%[(%)]', '(%1)'):gsub('%[)]', '(%1)'):gsub('%[(%)]',\
    \ '(%1)'):gsub('%[)]', '(%1)'):gsub('%[(%)]', '(%1)'):gsub('%[)]', '(%1)'):gsub('%[(%)]',\
    \ '(%1)'):gsub('%[)]', '(%1)'):gsub('%[(%)]', '(%1)'):gsub('%[)]', '(%1)'):gsub('%[(%)]',\
    \ '(%1)'):gsub('%[)]', '(%1)'):g", "  local opening_brackets = brackets:gsub('%[(%)][(%)]',\
    \ function(x)\n    return x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[)](%)',\
    \ function(x)\n    return x:reverse()\n  end)\n  return opening_brackets:len()\
    \ == closing_brackets:len() and\n    opening_brackets:all() ~= closing_brackets:all()\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)].*$', ''):gsub('%[(%)]',\
    \ '')\n  local closing_brackets = brackets:gsub('%[)](%).*$', ''):gsub('%[)](%)',\
    \ '')\n  return opening_brackets ~= closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n  end)\n  local\
    \ closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n    return x:reverse()\n\
    \  end)\n  for i = 1, #opening_brackets do\n    if opening_brackets[i:len() -\
    \ 1] == closing_brackets[i:len() - 1] then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local opening = brackets:sub(1, 1)\n  local closing =\
    \ brackets:sub(2, 1)\n  return opening ~= closing and opening ~= '(' and closing\
    \ ~= ')'\nend", "  local opening_brackets = brackets:gsub('%[(%)][(%)]', '%s*%1*%s*'):gsub('%s*%1%s*',\
    \ '%s*%1%s*'):gsub('%s*%1%s*', '%s*%1%s*')\n  local closing_brackets = brackets:gsub('%[(%)](%)',\
    \ '%s*%1*%s*'):gsub('%s*%1%s*', '%s*%1%s*'):gsub('%s*%1%s*', '%s*%1%s*')\n  return\
    \ opening_brackets == closing_brackets\nend", "  local opening_brackets = brackets:gsub('%[(%)][(%)]*',\
    \ '%s*'):gsub('%s*$', '')\n  local closing_brackets = brackets:gsub('%[(%)]*[)]',\
    \ '%s*'):gsub('%s*$', '')\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local open_brackets = brackets:gsub('%[(%[(%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[",
  "  local opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n\
    \  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n\
    \    return x:reverse()\n  end)\n  return opening_brackets:len() == closing_brackets:len()\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

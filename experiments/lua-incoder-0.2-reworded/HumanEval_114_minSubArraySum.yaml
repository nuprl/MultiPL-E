name: HumanEval_114_minSubArraySum
language: lua
prompt: "-- Given a table of integers nums, find the minimum sum of any non-empty\
  \ sub-table\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
  -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = minSubArraySum\n\
  \    lu.assertEquals(candidate({2, 3, 4, 1, 2, 4}), 1)\n    lu.assertEquals(candidate({-1,\
  \ -2, -3}), -6)\n    lu.assertEquals(candidate({-1, -2, -3, 2, -10}), -14)\n   \
  \ lu.assertEquals(candidate({-9999999999999999}), -9999999999999999)\n    lu.assertEquals(candidate({0,\
  \ 10, 20, 1000000}), 0)\n    lu.assertEquals(candidate({-1, -2, -3, 10, -5}), -6)\n\
  \    lu.assertEquals(candidate({100, -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10,\
  \ 11, 13, 8, 3, 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}),\
  \ -33)\n    lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
  \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local function helper(start, end)\n    if start > end then\n    \
    \  return 0\n    end\n    local sum = 0\n    for i = start, end do\n      sum\
    \ = sum + nums[i]\n    end\n    return sum\n  end\n  return helper(0, #nums)\n\
    end", "  local minSum = math.min(nums[1])\n  for i = 2, #nums do\n    local sum\
    \ = minSum + nums[i]\n    if sum < minSum then\n      minSum = sum\n    end\n\
    \  end\n  return minSum\nend", "  local minSum = math.inf\n  local minSumIndex\
    \ = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, #nums do\n   \
    \   if j == i then\n        sum = sum + nums[j]\n      else\n        sum = sum\
    \ + nums[j] - nums[i]\n      end\n    end\n    if sum < minSum then\n      minSum\
    \ = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\nend", " \
    \ local minSum = math.inf\n  for i = 1, #nums do\n    local sum = 0\n    for j\
    \ = 1, #nums do\n      if j == i then\n        sum = sum + nums[j]\n      else\n\
    \        sum = sum + nums[j] + nums[i]\n      end\n    end\n    if sum < minSum\
    \ then\n      minSum = sum\n    end\n  end\n  return minSum\nend", "  local min\
    \ = math.inf\n  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n\
    \    if sum < min then\n      min = sum\n    end\n  end\n  return min\nend", " \
    \ -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  local sum = 0\n\
    \  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum > 0 then\n      break\n\
    \    end\n  end\n  return sum\nend", "  local sum = 0\n  local minSum = math.inf\n\
    \  local minNum = nil\n  for i = 1, #nums do\n    local num = nums[i]\n    if\
    \ num == 0 then\n      sum = sum + num\n    elseif num < 0 then\n      sum = sum\
    \ + num\n    else\n      local newSum = sum + num\n      if newSum < minSum then\n\
    \        minSum = newSum\n        minNum = num\n      end\n    end\n  end\n  return\
    \ minNum\nend", "  -- Base case: empty array\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  local sum = 0\n  local minSum = math.inf\n  for i = 1, #nums do\n\
    \    sum = sum + nums[i]\n    if sum < minSum then\n      minSum = sum\n    end\n\
    \  end\n  return minSum\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum\
    \ = sum + nums[i]\n  end\n  return sum\nend", "  local sum = 0\n  local min =\
    \ nil\n  for i = 1, #nums do\n    local j = i\n    while j > 0 and nums[j] < nums[j-1]\
    \ do\n      sum = sum + nums[j]\n      j = j - 1\n    end\n    if min == nil then\n\
    \      min = sum\n    else\n      if sum < min then\n        min = sum\n     \
    \ end\n    end\n  end\n  return min\nend", "  local function helper(start, end)\n\
    \    if start > end then return 0 end\n    local sum = 0\n    for i = start, end\
    \ do\n      sum = sum + nums[i]\n    end\n    return sum\n  end\n  local min =\
    \ helper(1, #nums)\n  for i = 2, #nums do\n    local sum = helper(i, #nums)\n\
    \    if sum < min then\n      min = sum\n    end\n  end\n  return min\nend", " \
    \ local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n  \
    \  local sum = 0\n    for j = 1, #nums do\n      if j == i then\n        sum =\
    \ sum + nums[j]\n      else\n        sum = sum + nums[j] - nums[i]\n      end\n\
    \    end\n    if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n\
    \    end\n  end\n  return minSumIndex\nend", "  local minSum = math.inf\n  for\
    \ i = 1, #nums do\n    local sum = 0\n    for j = 1, #nums do\n      if j == i\
    \ then break end\n      sum = sum + nums[j]\n    end\n    if sum < minSum then\n\
    \      minSum = sum\n    end\n  end\n  return minSum\nend", "  local sum = 0\n\
    \  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend", " \
    \ local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n  \
    \  local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n  \
    \  if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n\
    \  end\n  return minSumIndex\nend", "  -- Base case\n  if #nums == 0 then\n  \
    \  return 0\n  end", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum +\
    \ nums[i]\n  end\n  return sum\nend", "  local function helper(start, end)\n \
    \   if start > end then return 0 end\n    local sum = 0\n    for i = start, end\
    \ do\n      sum = sum + nums[i]\n    end\n    return sum\n  end\n  local min =\
    \ helper(1, #nums)\n  for i = 2, #nums do\n    local sum = helper(i, #nums)\n\
    \    if sum < min then\n      min = sum\n    end\n  end\n  return min\nend", " \
    \ local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return\
    \ sum\nend", "  local sum = 0\n  local minSum = math.inf", "  local minSum = math.inf\n\
    \  local minSumIndex = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j\
    \ = 1, #nums do\n      if j == i then\n        sum = sum + nums[j]\n      else\n\
    \        sum = sum + nums[j] - nums[i]\n      end\n    end\n    if sum < minSum\
    \ then\n      minSum = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\n\
    end", "  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums\
    \ do\n    local sum = 0\n    for j = 1, #nums do\n      if j == i then\n     \
    \   sum = sum + nums[j]\n      else\n        sum = sum + nums[j] - nums[i]\n \
    \     end\n    end\n    if sum < minSum then\n      minSum = sum\n      minSumIndex\
    \ = i\n    end\n  end\n  return minSumIndex\nend", "  local minSum = math.inf\n\
    \  for i = 1, #nums do\n    local sum = 0\n    for j = 1, #nums do\n      if j\
    \ == i then\n        sum = sum + nums[j]\n      else\n        sum = sum + nums[j]\
    \ - nums[i]\n      end\n    end\n    if sum < minSum then\n      minSum = sum\n\
    \    end\n  end\n  return minSum\nend", "  local minSum = math.min(unpack(nums))\n\
    \  local minSumTable = {}\n  for i = 1, #nums do\n    local sum = 0\n    for j\
    \ = 1, #nums do\n      sum = sum + nums[j] or 0\n    end\n    if sum > minSum\
    \ then\n      minSum = sum\n      minSumTable = nums\n    end\n  end\n  return\
    \ minSum\nend", "  local sum = 0\n  local minSum = math.inf\n  for i = 1, #nums\
    \ do\n    sum = sum + nums[i]\n    if sum < minSum then\n      minSum = sum\n\
    \    end\n  end\n  return minSum\nend", "  -- Base case\n  if #nums == 0 then\n\
    \    return 0\n  end", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum\
    \ + nums[i]\n  end\n  return sum\nend", "  local minSum = math.inf\n  local minSumIndex\
    \ = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, i do\n      sum\
    \ = sum + nums[j]\n    end\n    if sum < minSum then\n      minSum = sum\n   \
    \   minSumIndex = i\n    end\n  end\n  return minSumIndex\nend", "  local sum\
    \ = 0\n  local min = nil\n  for i = 1, #nums do\n    local n = nums[i]\n    if\
    \ min == nil then\n      min = n\n    else\n      min = min + n\n    end\n   \
    \ sum = sum + n\n  end\n  return sum, min\nend", "  local minSum = math.inf\n\
    \  local minSumIndex\n  for i, v in ipairs(nums) do\n    if minSum == math.inf\
    \ then\n      minSum = v\n      minSumIndex = i\n    elseif v < minSum then\n\
    \      minSum = v\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\n\
    end", "  -- Base case: empty array\n  if #nums == 0 then\n    return 0\n  end",
  "  local sum = 0\n  local min = nil\n  for i = 1, #nums do\n    local j = i\n  \
    \  while j > 0 and nums[j - 1] > nums[j] do\n      sum = sum + nums[j - 1]\n \
    \     j = j - 1\n    end\n    if min == nil or sum < min then\n      min = sum\n\
    \    end\n    sum = sum + nums[i]\n  end\n  return min\nend", "  local sum = 0\n\
    \  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < 0 then\n      sum\
    \ = 0\n    end\n  end\n  return sum\nend", "  local minSum = math.inf\n  for i\
    \ = 1, #nums do\n    local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n\
    \    end\n    if sum < minSum then\n      minSum = sum\n    end\n  end\n  return\
    \ minSum\nend", "  local sum = 0\n  local minSum = math.inf\n  for i = 1, #nums\
    \ do\n    sum = sum + nums[i]\n    if sum < minSum then\n      minSum = sum\n\
    \    end\n  end\n  return minSum\nend", "  local minSum = math.inf\n  for i =\
    \ 1, #nums do\n    local sum = nums[i]\n    for j = i + 1, #nums do\n      sum\
    \ = sum + nums[j]\n      if sum < minSum then\n        minSum = sum\n      end\n\
    \    end\n  end\n  return minSum\nend", "  local sum = 0\n  local minSum = math.inf\n\
    \  local minSumIndex = 0\n  for i = 1, #nums do\n    local subSum = sum + nums[i]\n\
    \    if subSum < minSum then\n      minSum = subSum\n      minSumIndex = i\n \
    \   end\n    sum = subSum\n  end\n  return minSumIndex\nend", "  local minSum\
    \ = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n    local sum =\
    \ 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum < minSum\
    \ then\n      minSum = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\n\
    end", "  local min = math.min(unpack(nums))\n  local sum = 0\n  for i = 1, #nums\
    \ do\n    sum = sum + nums[i]\n    if sum < min then\n      min = sum\n    end\n\
    \  end\n  return min\nend", "  -- Base case\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  local minSum = math.inf\n  for i = 1, #nums do\n    local subSum\
    \ = minSubArraySum(nums, i, #nums)\n    if subSum < minSum then\n      minSum\
    \ = subSum\n    end\n  end\n  return minSum\nend", "  local sum = 0\n  for i =\
    \ 1, #nums do\n    sum = sum + nums[i]\n    if sum < 0 then\n      sum = -sum\n\
    \    end\n  end\n  return sum\nend", "  local min = math.inf\n  local minSum =\
    \ math.inf\n  local numsSize = #nums\n  for i = 1, numsSize do\n    local sum\
    \ = nums[i]\n    if sum < min then\n      min = sum\n      minSum = sum\n    elseif\
    \ sum == min then\n      minSum = minSum + nums[i]\n    end\n  end\n  return minSum\n\
    end", "  local sum = 0\n  local minSum = math.inf", "  local sum = 0\n  local\
    \ minSum = math.inf\n  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum\
    \ < minSum then\n      minSum = sum\n    end\n  end\n  return minSum\nend", " \
    \ local minSum = math.min(unpack(nums))\n  for i = 1, #nums do\n    local sum\
    \ = minSum + nums[i]\n    if sum < minSum then\n      minSum = sum\n    end\n\
    \  end\n  return minSum\nend", "  local minSum = math.inf\n  local minSumIndex\
    \ = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, #nums do\n   \
    \   if j == i then\n        sum = sum + nums[j]\n      else\n        sum = sum\
    \ + nums[j] - nums[i]\n      end\n    end\n    if sum < minSum then\n      minSum\
    \ = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\nend", " \
    \ -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  local function\
    \ helper(start, end)\n    if start > end then\n      return 0\n    end\n    local\
    \ sum = 0\n    for i = start, end do\n      sum = sum + nums[i]\n    end\n   \
    \ return sum\n  end\n  local min = helper(1, #nums)\n  for i = 2, #nums do\n \
    \   local sum = helper(i, #nums)\n    if sum < min then\n      min = sum\n   \
    \ end\n  end\n  return min\nend", "  -- Base case\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  local function helper(start, end)\n    if start > end then\n \
    \     return 0\n    end\n    local sum = 0\n    for i = start, end do\n      sum\
    \ = sum + nums[i]\n    end\n    return sum\n  end\n  local min = helper(1, #nums)\n\
    \  for i = 2, #nums do\n    local cur = helper(i, i)\n    if cur < min then\n\
    \      min = cur\n    end\n  end\n  return min\nend", "  local sum = 0\n  local\
    \ n = #nums\n  local i = 1\n  while i <= n do\n    sum = sum + nums[i]\n    i\
    \ = i + 1\n  end\n  return sum\nend", "  local sum = 0\n  local minSum = math.inf\n\
    \  for i = 1, #nums do\n    local subSum = sum + nums[i]\n    if subSum < minSum\
    \ then\n      minSum = subSum\n    end\n  end\n  return minSum\nend", "  local\
    \ min = math.inf\n  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n\
    \    if sum < min then\n      min = sum\n    end\n  end\n  return min\nend", " \
    \ local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return\
    \ sum\nend", "  local min = math.min(unpack(nums))\n  local sum = 0\n  for i =\
    \ 1, #nums do\n    sum = sum + nums[i]\n    if sum < min then\n      min = sum\n\
    \    end\n  end\n  return min\nend", "  local minSum = math.inf\n  for i = 1,\
    \ #nums do\n    local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n\
    \    end\n    if sum < minSum then\n      minSum = sum\n    end\n  end\n  return\
    \ minSum\nend", "  local minSum = math.inf\n  local minSumIndex = 0\n  for i =\
    \ 1, #nums do\n    local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n\
    \    end\n    if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n\
    \    end\n  end\n  return minSumIndex\nend", "  local minSum = math.inf\n  local\
    \ minSumIndex\n  for i, v in ipairs(nums) do\n    local sum = 0\n    for j = 1,\
    \ v do\n      sum = sum + nums[j]\n    end\n    if sum < minSum then\n      minSum\
    \ = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\nend", " \
    \ local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n  \
    \  local sum = 0\n    for j = 1, #nums do\n      sum = sum + nums[j]\n      if\
    \ sum < minSum then\n        minSum = sum\n        minSumIndex = j\n      end\n\
    \    end\n  end\n  return minSum\nend", "  local function helper(start, end)\n\
    \    if start > end then\n      return 0\n    end\n    local sum = 0\n    for\
    \ i = start, end do\n      sum = sum + nums[i]\n    end\n    return sum\n  end\n\
    \  local min = helper(1, #nums)\n  for i = 2, #nums do\n    min = helper(min,\
    \ helper(i, #nums))\n  end\n  return min\nend", "  local sum = 0\n  local minSum\
    \ = math.inf", "  local minSum = math.inf\n  local minSumIndex = 0\n  for i =\
    \ 1, #nums do\n    local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n\
    \    end\n    if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n\
    \    end\n  end\n  return minSumIndex\nend", "  local minSum = math.inf\n  local\
    \ minSumTable = {}\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, #nums\
    \ do\n      if j == i then\n        sum = sum + nums[j]\n      else\n        sum\
    \ = sum + nums[j] + nums[i]\n      end\n    end\n    if sum < minSum then\n  \
    \    minSum = sum\n      minSumTable = nums\n    end\n  end\n  return minSum\n\
    end", "  local minSum = math.inf\n  local minSumIndex\n  for i, v in ipairs(nums)\
    \ do\n    if minSum == math.inf then\n      minSum = v\n      minSumIndex = i\n\
    \    else\n      minSum = math.min(minSum, v)\n    end\n  end\n  return minSumIndex\n\
    end", "  local function helper(start, end)\n    if start > end then return end\
    \ end\n    local sum = 0\n    for i = start, end do\n      sum = sum + nums[i]\n\
    \    end\n    return sum\n  end\n  local min = helper(1, #nums)\n  for i = 2,\
    \ #nums do\n    local sum = helper(i, #nums)\n    if sum < min then\n      min\
    \ = sum\n    end\n  end\n  return min\nend", "  local minSum = math.inf\n  local\
    \ minSumIndex = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, i\
    \ do\n      sum = sum + nums[j]\n    end\n    if sum < minSum then\n      minSum\
    \ = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\nend", " \
    \ local minSum = math.inf\n  for i = 1, #nums do\n    local sum = 0\n    for j\
    \ = 1, #nums do\n      if j == i then\n        sum = sum + nums[j]\n      else\n\
    \        sum = sum + nums[j] - nums[i]\n      end\n    end\n    if sum < minSum\
    \ then\n      minSum = sum\n    end\n  end\n  return minSum\nend", "  local minSum\
    \ = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n    local sum =\
    \ 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum < minSum\
    \ then\n      minSum = sum\n      minSumIndex = i\n    end\n  end\n  return minSum\n\
    end", "  local min = math.inf\n  local sum = 0\n  for i = 1, #nums do\n    sum\
    \ = sum + nums[i]\n    if sum < min then\n      min = sum\n    end\n  end\n  return\
    \ min\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n\
    \  end\n  return sum\nend", "  local minSum = math.inf\n  for i = 1, #nums do\n\
    \    local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n\
    \    if sum < minSum then\n      minSum = sum\n    end\n  end\n  return minSum\n\
    end", "  local sum = 0\n  local minSum = math.inf\n  for i = 1, #nums do\n   \
    \ local subSum = sum + nums[i]\n    if subSum < minSum then\n      minSum = subSum\n\
    \    end\n  end\n  return minSum\nend", "  local sum = 0\n  local i = 1\n  while\
    \ i <= #nums do\n    sum = sum + nums[i]\n    i = i + 1\n  end\n  return sum\n\
    end", "  local sum = 0\n  local minSum = math.inf\n  for i = 1, #nums do\n   \
    \ sum = sum + nums[i]\n    if sum < minSum then\n      minSum = sum\n    end\n\
    \  end\n  return minSum\nend", "  local sum = 0\n  local minSum = math.inf\n \
    \ local minSumIndex = 0\n  for i = 1, #nums do\n    local currentSum = sum + nums[i]\n\
    \    if currentSum < minSum then\n      minSum = currentSum\n      minSumIndex\
    \ = i\n    end\n    sum = currentSum\n  end\n  return minSumIndex\nend", "  local\
    \ minSum = math.inf\n  for i = 1, #nums do\n    local sum = nums[i]\n    for j\
    \ = i + 1, #nums do\n      sum = sum + nums[j]\n      if sum < minSum then\n \
    \       minSum = sum\n      end\n    end\n  end\n  return minSum\nend", "  local\
    \ minSum = math.inf\n  local minSumIndex\n  for i, v in ipairs(nums) do\n    local\
    \ sum = 0\n    for j = 1, v do\n      sum = sum + nums[j]\n    end\n    if sum\
    \ < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n  end\n \
    \ return minSumIndex\nend", "  -- Base case: if the list is empty, return 0\n\
    \  if #nums == 0 then\n    return 0\n  end", "  local minSum = math.inf\n  local\
    \ minSumIndex = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, i\
    \ do\n      sum = sum + nums[j]\n    end\n    if sum < minSum then\n      minSum\
    \ = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\nend", " \
    \ local min = math.min(unpack(nums))\n  local sum = 0\n  for i = 1, #nums do\n\
    \    sum = sum + nums[i]\n    if sum < min then\n      min = sum\n    end\n  end\n\
    \  return min\nend", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end",
  "  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < 0\
    \ then\n      sum = 0\n    end\n  end\n  return sum\nend", "  local minSum = math.inf\n\
    \  local minSumTable = {}\n  for i = 1, #nums do\n    local sum = 0\n    for j\
    \ = 1, #nums do\n      if j == i then\n        sum = sum + nums[j]\n      else\n\
    \        sum = sum + nums[j] - nums[i]\n      end\n    end\n    if sum < minSum\
    \ then\n      minSum = sum\n      minSumTable = nums\n    end\n  end\n  return\
    \ minSum\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n\
    \  end\n  return sum\nend", "  local minSum = math.min(nums)\n  local numsCopy\
    \ = nums\n  while #numsCopy > 0 do\n    local sum = 0\n    for i = 1, #numsCopy\
    \ do\n      sum = sum + numsCopy[i]\n    end\n    if sum < minSum then\n     \
    \ minSum = sum\n    end\n    local newNumsCopy = numsCopy\n    newNumsCopy[#newNumsCopy\
    \ + 1] = 0\n    numsCopy = newNumsCopy\n  end\n  return minSum\nend", "  local\
    \ minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n    local\
    \ sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum\
    \ < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n  end\n \
    \ return minSumIndex\nend", "  local function helper(start, end)\n    if start\
    \ > end then return end end\n    if start == end then return start end\n    if\
    \ nums[start] == nil then return helper(start + 1, end) end\n    local min = helper(start\
    \ + 1, end)\n    if nums[start] + nums[end] < min then\n      min = nums[start]\
    \ + nums[end]\n    end\n    return min\n  end\n  return helper(1, #nums)\nend",
  "  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n   \
    \ local sum = 0\n    for j = 1, #nums do\n      if j == i then\n        sum =\
    \ sum + nums[j]\n      else\n        sum = sum + nums[j] - nums[i]\n      end\n\
    \    end\n    if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n\
    \    end\n  end\n  return minSum\nend", "  local minSum = math.inf\n  local minSumIndex\
    \ = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, #nums do\n   \
    \   if j == i then\n        sum = sum + nums[j]\n      else\n        sum = sum\
    \ + nums[j] - nums[i]\n      end\n    end\n    if sum < minSum then\n      minSum\
    \ = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\nend", " \
    \ local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n  \
    \  local sum = 0\n    for j = 1, #nums do\n      if j == i then\n        sum =\
    \ sum + nums[j]\n      else\n        sum = sum + nums[j] - nums[i]\n      end\n\
    \    end\n    if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n\
    \    end\n  end\n  return minSumIndex\nend", "  local minSum = math.inf\n  local\
    \ minSumIndex = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, i\
    \ do\n      sum = sum + nums[j]\n    end\n    if sum < minSum then\n      minSum\
    \ = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\nend", " \
    \ -- Base case: empty table\n  if #nums == 0 then\n    return 0\n  end", "  local\
    \ min = math.min(unpack(nums))\n  local sum = 0\n  for i = 1, #nums do\n    sum\
    \ = sum + nums[i]\n    if sum < min then\n      min = sum\n    end\n  end\n  return\
    \ min\nend", "  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1,\
    \ #nums do\n    local sum = 0\n    for j = 1, #nums do\n      sum = sum + nums[j]\
    \ * i\n    end\n    if sum < minSum then\n      minSum = sum\n      minSumIndex\
    \ = i\n    end\n  end\n  return minSum\nend", "  -- Base case\n  if #nums == 0\
    \ then\n    return 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1,\
    \ #nums do\n    local sum = 0\n    for j = 1, #nums do\n      if j == i then break\
    \ end\n      sum = sum + nums[j]\n    end\n    if sum < minSum then\n      minSum\
    \ = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\nend", " \
    \ -- Base case: empty table\n  if #nums == 0 then\n    return 0\n  end", "  local\
    \ minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n    local\
    \ sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum\
    \ < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n  end\n \
    \ return minSumIndex\nend", "  local sum = 0\n  local minSum = math.inf\n  for\
    \ i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < minSum then\n      minSum\
    \ = sum\n    end\n  end\n  return minSum\nend", "  local minSum = math.inf\n \
    \ local minSumIndex = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j =\
    \ 1, #nums do\n      if j == i then\n        sum = sum + nums[j]\n      else\n\
    \        sum = sum + nums[j] - nums[i]\n      end\n    end\n    if sum < minSum\
    \ then\n      minSum = sum\n      minSumIndex = i\n    end\n  end\n  return minSum\n\
    end", "  local sum = 0\n  local min = nil\n  for i = 1, #nums do\n    local j\
    \ = i\n    while j > 1 do\n      local k = j - 1\n      sum = sum + nums[k]\n\
    \      if sum < min then\n        min = sum\n      end\n      j = k - 1\n    end\n\
    \  end\n  return min\nend", "  local minSum = math.inf\n  for i = 1, #nums do\n\
    \    local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n\
    \    if sum < minSum then\n      minSum = sum\n    end\n  end\n  return minSum\n\
    end", "  local minSum = math.inf\n  for i = 1, #nums do\n    local sum = 0\n \
    \   for j = 1, #nums do\n      if j == i then\n        sum = sum + nums[j]\n \
    \     else\n        sum = sum + nums[j] - nums[i]\n      end\n    end\n    if\
    \ sum < minSum then\n      minSum = sum\n    end\n  end\n  return minSum\nend",
  "  -- Base case: if the table is empty, return 0\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n\
    \    if sum > 0 then\n      break\n    end\n  end\n  return sum\nend", "  local\
    \ minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n    local\
    \ sum = 0\n    for j = 1, #nums do\n      if j == i then\n        sum = sum +\
    \ nums[j]\n      else\n        sum = sum + nums[j] - nums[i]\n      end\n    end\n\
    \    if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n\
    \  end\n  return minSumIndex\nend", "  local minSum = math.inf\n  local minSumIndex\
    \ = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, i do\n      sum\
    \ = sum + nums[j]\n    end\n    if sum < minSum then\n      minSum = sum\n   \
    \   minSumIndex = i\n    end\n  end\n  return minSumIndex\nend", "  -- Base case\n\
    \  if #nums == 0 then\n    return 0\n  end", "  -- Base case: empty array\n  if\
    \ #nums == 0 then\n    return 0\n  end", "  local minSum = math.inf\n  local minSumIndex\
    \ = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, i do\n      sum\
    \ = sum + nums[j]\n    end\n    if sum < minSum then\n      minSum = sum\n   \
    \   minSumIndex = i\n    end\n  end\n  return minSumIndex\nend", "  local sum\
    \ = 0\n  local i = 1\n  while i <= #nums do\n    sum = sum + nums[i]\n    i =\
    \ i + 1\n  end\n  return sum\nend", "  local min = math.inf\n  local sum = 0\n\
    \  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < min then\n     \
    \ min = sum\n    end\n  end\n  return min\nend", "  -- Base case\n  if #nums ==\
    \ 0 then\n    return 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n\
    \  end\n  return sum\nend", "  -- Base case: empty array\n  if #nums == 0 then\n\
    \    return 0\n  end\n  -- Base case: one element\n  if #nums == 1 then\n    return\
    \ nums[1]\n  end\n  -- Recursive case: two or more elements\n  local minSum =\
    \ nums[1]\n  for i = 2, #nums do\n    local sum = minSum + nums[i]\n    if sum\
    \ < minSum then\n      minSum = sum\n    end\n  end\n  return minSum\nend", " \
    \ local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum <\
    \ 0 then\n      sum = 0\n    end\n  end\n  return sum\nend", "  local sum = 0\n\
    \  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend", " \
    \ -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  local sum = 0\n\
    \  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend", " \
    \ local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n  \
    \  local sum = 0\n    for j = 1, #nums do\n      sum = sum + nums[j]\n      if\
    \ sum < minSum then\n        minSum = sum\n        minSumIndex = j\n      end\n\
    \    end\n  end\n  return minSum\nend", "  local sum = 0\n  local minSum = math.inf\n\
    \  for i = 1, #nums do\n    local subSum = sum + nums[i]\n    if subSum < minSum\
    \ then\n      minSum = subSum\n    end\n    sum = subSum\n  end\n  return minSum\n\
    end", "  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums\
    \ do\n    local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n\
    \    if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n\
    \  end\n  return minSumIndex\nend", "  local minSum = math.inf\n  local minSumIndex\
    \ = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, i do\n      sum\
    \ = sum + nums[j]\n    end\n    if sum < minSum then\n      minSum = sum\n   \
    \   minSumIndex = i\n    end\n  end\n  return minSumIndex\nend", "  local minSum\
    \ = math.inf\n  local minSumIndex\n  for i, v in ipairs(nums) do\n    local sum\
    \ = 0\n    for j = 1, #nums do\n      sum = sum + nums[j] + v\n    end\n    if\
    \ sum < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n  end\n\
    \  return minSumIndex\nend", "  local sum = 0\n  local minSum = math.inf\n  local\
    \ minSumIndex = 0\n  for i = 1, #nums do\n    local currentSum = sum + nums[i]\n\
    \    if currentSum < minSum then\n      minSum = currentSum\n      minSumIndex\
    \ = i\n    end\n    sum = currentSum\n  end\n  return minSum\nend", "  local minSum\
    \ = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n    local sum =\
    \ 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum < minSum\
    \ then\n      minSum = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\n\
    end", "  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums\
    \ do\n    local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n\
    \    if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n\
    \  end\n  return minSumIndex\nend", "  local min = math.inf\n  for i = 1, #nums\
    \ do\n    local sum = 0\n    for j = 1, #nums do\n      if j == i then\n     \
    \   sum = sum + nums[j]\n      else\n        sum = sum + nums[j] + nums[i]\n \
    \     end\n    end\n    if sum < min then\n      min = sum\n    end\n  end\n \
    \ return min\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n\
    \  end\n  return sum\nend", "  -- Base case: empty table\n  if #nums == 0 then\n\
    \    return 0\n  end", "  local sum = 0\n  local minSum = math.inf\n  for i =\
    \ 1, #nums do\n    sum = sum + nums[i]\n    if sum < minSum then\n      minSum\
    \ = sum\n    end\n  end\n  return minSum\nend", "  local minSum = math.inf\n \
    \ local minSumIndex = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j =\
    \ 1, #nums do\n      if j == i then\n        sum = sum + nums[j]\n      else\n\
    \        sum = sum + nums[j] - nums[i]\n      end\n    end\n    if sum < minSum\
    \ then\n      minSum = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\n\
    end", "  local minSum = math.min(nums)\n  for i = 1, #nums do\n    local sum =\
    \ minSum + nums[i]\n    if sum < minSum then\n      minSum = sum\n    end\n  end\n\
    \  return minSum\nend", "  local minSum = math.inf\n  local minSumIndex = 0\n\
    \  for i = 1, #nums do\n    local sum = 0\n    for j = 1, #nums do\n      if j\
    \ == i then\n        sum = sum + nums[j]\n      else\n        sum = sum + nums[j]\
    \ - nums[i]\n      end\n    end\n    if sum < minSum then\n      minSum = sum\n\
    \      minSumIndex = i\n    end\n  end\n  return minSumIndex\nend", "  -- Base\
    \ case: empty array\n  if #nums == 0 then\n    return 0\n  end", "  local minSum\
    \ = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n    local sum =\
    \ 0\n    for j = 1, #nums do\n      if j == i then\n        sum = sum + nums[j]\n\
    \      else\n        sum = sum + nums[j] - nums[i]\n      end\n    end\n    if\
    \ sum < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n  end\n\
    \  return minSumIndex\nend", "  local minSum = math.inf\n  for i = 1, #nums do\n\
    \    local sum = 0\n    for j = 1, #nums do\n      if j == i then\n        sum\
    \ = sum + nums[j]\n      else\n        sum = sum + nums[j] + nums[i]\n      end\n\
    \    end\n    if sum < minSum then\n      minSum = sum\n    end\n  end\n  return\
    \ minSum\nend", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", " \
    \ local minSum = math.inf\n  for i = 1, #nums do\n    local sum = 0\n    for j\
    \ = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum < minSum then\n  \
    \    minSum = sum\n    end\n  end\n  return minSum\nend", "  local minSum = math.inf\n\
    \  local minSumIndex\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1,\
    \ i do\n      sum = sum + nums[j]\n    end\n    if sum < minSum then\n      minSum\
    \ = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\nend", " \
    \ local min = math.inf\n  local minSum = math.inf\n  for i = 1, #nums do\n   \
    \ local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n   \
    \ if sum < min then\n      min = sum\n      minSum = sum\n    end\n  end\n  return\
    \ minSum\nend", "  local minSum = math.inf\n  local minSumIndex = 0\n  for i =\
    \ 1, #nums do\n    local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n\
    \    end\n    if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n\
    \    end\n  end\n  return minSumIndex\nend", "  -- Base case: empty array\n  if\
    \ #nums == 0 then\n    return 0\n  end", "  local sum = 0\n  for i = 1, #nums\
    \ do\n    sum = sum + nums[i]\n    if sum < 0 then\n      sum = 0\n    end\n \
    \ end\n  return sum\nend", "  local minSum = math.inf\n  for i = 1, #nums do\n\
    \    local sum = 0\n    for j = 1, #nums do\n      if j == i then\n        sum\
    \ = sum + nums[j]\n      else\n        sum = sum + nums[j] - nums[i]\n      end\n\
    \    end\n    if sum < minSum then\n      minSum = sum\n    end\n  end\n  return\
    \ minSum\nend", "  local minSum = math.inf\n  local minSumIndex = 0\n  for i =\
    \ 1, #nums do\n    local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n\
    \    end\n    if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n\
    \    end\n  end\n  return minSum\nend", "  local sum = 0\n  local minSum = math.inf\n\
    \  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < minSum then\n  \
    \    minSum = sum\n    end\n  end\n  return minSum\nend", "  local minSum = math.inf\n\
    \  local minSumIndex = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j\
    \ = 1, #nums do\n      if j == i then\n        sum = sum + nums[j]\n      else\n\
    \        sum = sum + nums[j] + nums[i]\n      end\n    end\n    if sum < minSum\
    \ then\n      minSum = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\n\
    end", "  local sum = 0\n  local min = nil\n  for i = 1, #nums do\n    local n\
    \ = nums[i]\n    if min == nil or n < min then\n      min = n\n      sum = n\n\
    \    elseif sum + n < sum then\n      sum = sum + n\n    else\n      sum = sum\
    \ - n\n    end\n  end\n  return sum\nend", "  local minSum = math.min(nums[1])\n\
    \  for i = 2, #nums do\n    local sum = minSum + nums[i]\n    if sum < minSum\
    \ then\n      minSum = sum\n    end\n  end\n  return minSum\nend", "  local sum\
    \ = 0\n  local minSum = math.inf\n  for i = 1, #nums do\n    sum = sum + nums[i]\n\
    \    if sum < minSum then\n      minSum = sum\n    end\n  end\n  return minSum\n\
    end", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  -- Base\
    \ case\n  if #nums == 0 then\n    return 0\n  end", "  local minSum = math.inf\n\
    \  local minSumIndex = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j\
    \ = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum < minSum then\n  \
    \    minSum = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\n\
    end", "  local min = math.inf\n  local sum = 0\n  for i = 1, #nums do\n    sum\
    \ = sum + nums[i]\n    if sum < min then\n      min = sum\n    end\n  end\n  return\
    \ min\nend", "  local sum = 0\n  local minSum = math.inf", "  local sum = 0\n\
    \  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend", " \
    \ local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n  \
    \  local sum = 0\n    for j = 1, #nums do\n      if j == i then\n        sum =\
    \ sum + nums[j]\n      else\n        sum = sum + nums[j] - nums[i]\n      end\n\
    \    end\n    if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n\
    \    end\n  end\n  return minSumIndex\nend", "  local minSum = math.inf\n  for\
    \ i = 1, #nums do\n    local sum = 0\n    for j = 1, #nums do\n      if j == i\
    \ then\n        sum = sum + nums[j]\n      else\n        sum = sum + nums[j] -\
    \ nums[i]\n      end\n    end\n    if sum < minSum then\n      minSum = sum\n\
    \    end\n  end\n  return minSum\nend", "  local sum = 0\n  for i = 1, #nums do\n\
    \    sum = sum + nums[i]\n  end\n  return sum\nend", "  local minSum = math.inf\n\
    \  local minSumIndex = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j\
    \ = 1, #nums do\n      if j == i then\n        sum = sum + nums[j]\n      else\n\
    \        sum = sum + nums[j] - nums[i]\n      end\n    end\n    if sum < minSum\
    \ then\n      minSum = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\n\
    end", "  local sum = 0\n  local minSum = math.inf\n  for i = 1, #nums do\n   \
    \ local subSum = sum + nums[i]\n    if subSum < minSum then\n      minSum = subSum\n\
    \    end\n    sum = subSum\n  end\n  return minSum\nend", "  local function helper(start,\
    \ end)\n    if start == end then\n      return nums[start]\n    end\n    local\
    \ mid = start + (end - start) / 2\n    return helper(start, mid) + helper(mid\
    \ + 1, end)\n  end\n  return helper(1, #nums)\nend", "  local minSum = math.inf\n\
    \  local minSumIndex = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j\
    \ = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum < minSum then\n  \
    \    minSum = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\n\
    end", "  local sum = 0\n  local minSum = math.inf\n  local numsSize = #nums\n\
    \  for i = 1, numsSize do\n    local j = i - 1\n    local k = numsSize - i\n \
    \   local numsSum = nums[i] + nums[j] + nums[k]\n    if numsSum < minSum then\n\
    \      sum = numsSum\n      minSum = numsSum\n    end\n  end\n  return sum\nend",
  "  local min = math.inf\n  local sum = 0\n  for i = 1, #nums do\n    sum = sum +\
    \ nums[i]\n    if sum < min then\n      min = sum\n    end\n  end\n  return min\n\
    end", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  local minSum\
    \ = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n    local sum =\
    \ 0\n    for j = 1, #nums do\n      if j == i then\n        sum = sum + nums[j]\n\
    \      else\n        sum = sum + nums[j] - nums[i]\n      end\n    end\n    if\
    \ sum < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n  end\n\
    \  return minSumIndex\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum\
    \ = sum + nums[i]\n  end\n  return sum\nend", "  local sum = 0\n  local minSum\
    \ = nil\n  for i = 1, #nums do\n    local subSum = minSubArraySum(nums, i, #nums)\n\
    \    if subSum > sum then\n      sum = subSum\n      minSum = sum\n    end\n \
    \ end\n  return minSum\nend", "  local min = math.inf\n  local sum = 0\n  for\
    \ i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < min then\n      min =\
    \ sum\n    end\n  end\n  return min\nend", "  local sum = 0\n  local i = 1\n \
    \ while i <= #nums do\n    sum = sum + nums[i]\n    i = i + 1\n  end\n  return\
    \ sum\nend", "  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1,\
    \ #nums do\n    local sum = 0\n    for j = 1, #nums do\n      if j == i then\n\
    \        sum = sum + nums[j]\n      else\n        sum = sum + nums[j] - nums[i]\n\
    \      end\n    end\n    if sum < minSum then\n      minSum = sum\n      minSumIndex\
    \ = i\n    end\n  end\n  return minSum\nend", "  -- Base case\n  if #nums == 0\
    \ then\n    return 0\n  end", "  -- Base case: empty table\n  if #nums == 0 then\n\
    \    return 0\n  end", "  local minSum = math.inf\n  local minSumIndex = 0\n \
    \ for i = 1, #nums do\n    local sum = 0\n    for j = 1, i do\n      sum = sum\
    \ + nums[j]\n    end\n    if sum < minSum then\n      minSum = sum\n      minSumIndex\
    \ = i\n    end\n  end\n  return minSumIndex\nend", "  local minSum = math.inf\n\
    \  for i = 1, #nums do\n    local sum = 0\n    for j = 1, #nums do\n      if j\
    \ == i then\n        sum = sum + nums[j]\n      else\n        sum = sum + nums[j]\
    \ + nums[i]\n      end\n    end\n    if sum < minSum then\n      minSum = sum\n\
    \    end\n  end\n  return minSum\nend", "  -- Base case\n  if #nums == 0 then\n\
    \    return 0\n  end", "  local sum = 0\n  local minSum = math.inf\n  for i =\
    \ 1, #nums do\n    sum = sum + nums[i]\n    if sum < minSum then\n      minSum\
    \ = sum\n    end\n  end\n  return minSum\nend", "  local minSum = math.inf\n \
    \ local minSumIndex = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j =\
    \ 1, #nums do\n      if j == i then\n        sum = sum + nums[j]\n      else\n\
    \        sum = sum + nums[j] - nums[i]\n      end\n    end\n    if sum < minSum\
    \ then\n      minSum = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\n\
    end", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  local sum\
    \ = 0\n  local minSum = math.inf\n  local minSumIndex\n  for i = 1, #nums do\n\
    \    local currentSum = sum + nums[i]\n    if currentSum < minSum then\n     \
    \ minSum = currentSum\n      minSumIndex = i\n    end\n    sum = currentSum\n\
    \  end\n  return minSumIndex\nend", "  local minSum = math.inf\n  for i = 1, #nums\
    \ do\n    local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n\
    \    if sum < minSum then\n      minSum = sum\n    end\n  end\n  return minSum\n\
    end", "  local sum = 0\n  local minSum = math.inf\n  for i = 1, #nums do\n   \
    \ local subSum = minSubArraySum(nums, i, #nums)\n    if subSum < minSum then\n\
    \      minSum = subSum\n    end\n    sum = sum + nums[i]\n  end\n  return sum\n\
    end", "  local minSum = math.inf\n  for i = 1, #nums do\n    local sum = 0\n \
    \   for j = 1, #nums do\n      if j == i then\n        sum = sum + nums[j]\n \
    \     else\n        sum = sum + nums[j] + nums[i]\n      end\n    end\n    if\
    \ sum < minSum then\n      minSum = sum\n    end\n  end\n  return minSum\nend",
  "  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n   \
    \ local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n   \
    \ if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n \
    \ end\n  return minSumIndex\nend", "  local minSum = math.inf\n  local minSumIndex\
    \ = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, i do\n      sum\
    \ = sum + nums[j]\n    end\n    if sum < minSum then\n      minSum = sum\n   \
    \   minSumIndex = i\n    end\n  end\n  return minSumIndex\nend", "  local minSum\
    \ = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n    local sum =\
    \ 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum < minSum\
    \ then\n      minSum = sum\n      minSumIndex = i\n    end\n  end\n  return minSum\n\
    end", "  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums\
    \ do\n    local sum = 0\n    for j = 1, #nums do\n      if j == i then\n     \
    \   sum = sum + nums[j]\n      else\n        sum = sum + nums[j] - nums[i]\n \
    \     end\n    end\n    if sum < minSum then\n      minSum = sum\n      minSumIndex\
    \ = i\n    end\n  end\n  return minSumIndex\nend", "  -- Base case: empty table\n\
    \  if #nums == 0 then\n    return 0\n  end", "  local sum = 0\n  for i = 1, #nums\
    \ do\n    sum = sum + nums[i]\n    if sum < 0 then\n      sum = 0\n    end\n \
    \ end\n  return sum\nend", "  local sum = 0\n  for i = 1, #nums do\n    sum =\
    \ sum + nums[i]\n  end\n  return sum\nend", "  local min = math.inf\n  local sum\
    \ = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < min then\n\
    \      min = sum\n    end\n  end\n  return min\nend", "  local sum = 0\n  local\
    \ min = nil\n  for i = 1, #nums do\n    local value = nums[i]\n    if min == nil\
    \ or value < min then\n      min = value\n      sum = value\n    else\n      sum\
    \ = sum + value - min\n    end\n  end\n  return sum\nend", "  local function helper(start,\
    \ end)\n    if start == end then\n      return nums[start]\n    end\n    local\
    \ mid = start + (end - start) / 2\n    if nums[mid] > nums[start] then\n     \
    \ return helper(start, mid)\n    else\n      return helper(mid + 1, end)\n   \
    \ end\n  end\n  return helper(0, #nums - 1)\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

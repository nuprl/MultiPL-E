name: HumanEval_92_any_int
language: lua
prompt: "-- Create a function that takes 3 numbers.\n-- Returns true if one of the\
  \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
  -- Returns false in any other cases.\n-- Examples\n-- >>> any_int(5, 2, 7)\n-- true\n\
  -- >>> any_int(3, 2, 2)\n-- false\n-- >>> any_int(3, -2, 1)\n-- true\n-- >>> any_int(3.6,\
  \ -2.2, 2)\n-- false\nlocal function any_int(x, y, z)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = any_int\n\
  \    lu.assertEquals(candidate(2, 3, 1), true)\n    lu.assertEquals(candidate(2.5,\
  \ 2, 3), false)\n    lu.assertEquals(candidate(1.5, 5, 3.5), false)\n    lu.assertEquals(candidate(2,\
  \ 6, 2), false)\n    lu.assertEquals(candidate(4, 2, 2), true)\n    lu.assertEquals(candidate(2.2,\
  \ 2.2, 2.2), false)\n    lu.assertEquals(candidate(-4, 6, 2), true)\n    lu.assertEquals(candidate(2,\
  \ 1, 1), true)\n    lu.assertEquals(candidate(3, 4, 7), true)\n    lu.assertEquals(candidate(3.0,\
  \ 4, 7), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if type(x) == \"number\" and type(y) == \"number\" and type(z) ==\
    \ \"number\" then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if x == y then\n    return z == x\n  elseif x == z then\n    return y == z\n\
    \  else\n    return false\n  end\nend", "  if x == y then\n    return z == x\n\
    \  elseif x == z then\n    return y == z\n  else\n    return false\n  end\nend",
  "  if type(x) == 'number' and type(y) == 'number' and type(z) == 'number' then\n\
    \    return x == y + z\n  else\n    return false\n  end\nend", "  if type(x) ==\
    \ 'number' and type(y) == 'number' and type(z) == 'number' then\n    return x\
    \ == y + z\n  else\n    return false\n  end\nend", "  if type(x) == 'number' and\
    \ type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n\
    \    return false\n  end\nend", "  if x == y then\n    return true\n  elseif x\
    \ == z then\n    return true\n  elseif y == z then\n    return true\n  else\n\
    \    return false\n  end\nend", "  if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n    return x == y\
    \ + z\n  else\n    return false\n  end\nend", "  if x ~= nil and y ~= nil and\
    \ z ~= nil then\n    if type(x) == 'number' and type(y) == 'number' and type(z)\
    \ == 'number' then\n      return ((x + y) == z) or ((x - y) == z) or ((x * y)\
    \ == z) or ((x / y) == z)\n    end\n  end\n  return false\nend", "  if x == y\
    \ then\n    return z == x\n  elseif x == z then\n    return y == z\n  else\n \
    \   return false\n  end\nend", "  if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z) ==\
    \ 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if x == y then\n    return true\n  elseif x == z then\n    return false\n  elseif\
    \ y == z then\n    return true\n  else\n    return false\n  end\nend", "  if x\
    \ ~= nil and y ~= nil and z ~= nil then\n    if type(x) == 'number' and type(y)\
    \ == 'number' and type(z) == 'number' then\n      if x == y and x == z and x ~=\
    \ 0 then\n        return true\n      else\n        return false\n      end\n \
    \   end\n  end\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z)\
    \ == 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if x == y then\n    return z == x\n  elseif x == z then\n    return y == z\n\
    \  else\n    return false\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil\
    \ then\n    if type(x) == \"number\" and type(y) == \"number\" and type(z) ==\
    \ \"number\" then\n      return ((x + y + z) == (x * y * z))\n    else\n     \
    \ return false\n    end\n  else\n    return false\n  end\nend", "  if type(x)\
    \ == \"number\" and type(y) == \"number\" and type(z) == \"number\" then\n   \
    \ return x == y + z\n  else\n    return false\n  end\nend", "  if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if type(x) == 'number' and type(y)\
    \ == 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n  \
    \  return false\n  end\nend", "  if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z) ==\
    \ 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if x == y then\n    if x == z then\n      return true\n    end\n    return false\n\
    \  end\n  if x < y then\n    if x < z then\n      return true\n    end\n    return\
    \ false\n  end\n  if y < x then\n    if y < z then\n      return true\n    end\n\
    \    return false\n  end\n  return true\nend", "  if type(x) == 'number' and type(y)\
    \ == 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n  \
    \  return false\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n\
    \    if type(x) == 'number' and type(y) == 'number' and type(z) == 'number' then\n\
    \      if x == y and x == z and x ~= 0 then\n        return true\n      else\n\
    \        return false\n      end\n    end\n  end\nend", "  if x ~= nil then\n\
    \    if y ~= nil then\n      if z ~= nil then\n        return (x == y and z ==\
    \ z) or any_int(x, y, z)\n      else\n        return (x == y)\n      end\n   \
    \ else\n      return true\n    end\n  else\n    return false\n  end\nend", " \
    \ if type(y) == 'number' and type(z) == 'number' then\n    return x == y or x\
    \ == z\n  elseif type(y) == 'table' and type(z) == 'table' then\n    for _, v\
    \ in ipairs(y) do\n      if any_int(x, y, v) then\n        return true\n     \
    \ end\n    end\n    return false\n  elseif type(y) == 'string' and type(z) ==\
    \ 'string' then\n    return x == y or x == z\n  else\n    return false\n  end\n\
    end", "  if type(x) == 'number' and type(y) == 'number' and type(z) == 'number'\
    \ then\n    return x == y + z\n  else\n    return false\n  end\nend", "  if type(x)\
    \ == 'number' and type(y) == 'number' and type(z) == 'number' then\n    return\
    \ x == y + z\n  else\n    return false\n  end\nend", "  if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if type(x) == 'number' and type(y)\
    \ == 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n  \
    \  return false\n  end\nend", "  if type(x) == \"number\" and type(y) == \"number\"\
    \ and type(z) == \"number\" then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n    return ((type(x)\
    \ == \"number\" and type(y) == \"number\" and type(z) == \"number\") and\n   \
    \         math.floor(x) == math.floor(y) and math.floor(x) == math.floor(z)\n\
    \           )\n  else\n    return false\n  end\nend", "  if x ~= nil then\n  \
    \  if y ~= nil then\n      if z ~= nil then\n        return (x == y and z == z)\
    \ or (x == z and y == y)\n      else\n        return (x == y)\n      end\n   \
    \ else\n      return (x == z)\n    end\n  else\n    return (y == z)\n  end\nend",
  "  if x == y then\n    if x == z then\n      return true\n    end\n    return false\n\
    \  end\n  if x < y then\n    if x < z then\n      return true\n    end\n    return\
    \ false\n  end\n  if y < x then\n    if y < z then\n      return true\n    end\n\
    \    return false\n  end\n  return true\nend", "  if x == y then\n    return true\n\
    \  elseif x == z then\n    return true\n  elseif y == z then\n    return true\n\
    \  else\n    return false\n  end\nend", "  if x == y or x == z or y == z then\n\
    \    return true\n  else\n    return false\n  end\nend", "  if x ~= nil then\n\
    \    if y ~= nil then\n      if z ~= nil then\n        return (x == y and z ==\
    \ z) or (x == z and y == y)\n      else\n        return (x == y)\n      end\n\
    \    else\n      return (x == z)\n    end\n  else\n    return (y == z)\n  end\n\
    end", "  if x == y then\n    return z == x and type(z) == 'number'\n  else\n \
    \   return z == x and type(z) == 'number'\n  end\nend", "  if x ~= nil and y ~=\
    \ nil and z ~= nil then\n    if type(x) == 'number' and type(y) == 'number' and\
    \ type(z) == 'number' then\n      return ((x + y + z) == (x * y * z))\n    else\n\
    \      return false\n    end\n  else\n    return false\n  end\nend", "  if type(x)\
    \ == 'number' and type(y) == 'number' and type(z) == 'number' then\n    return\
    \ x == y + z\n  else\n    return false\n  end\nend", "  local sum = x+y+z\n  return\
    \ sum == x or sum == y or sum == z\nend", "  if x == y then\n    return true\n\
    \  elseif x == z then\n    return true\n  elseif y == z then\n    return true\n\
    \  else\n    return false\n  end\nend", "  if x == y then\n    return z == x\n\
    \  elseif x < y then\n    return z < x\n  else\n    return z > y\n  end\nend",
  "  if x == y then\n    return z == x\n  elseif x == z then\n    return y == z\n\
    \  else\n    return false\n  end\nend", "  if type(x) == 'number' and type(y)\
    \ == 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n  \
    \  return false\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n\
    \    if x == y and x == z then\n      return true\n    end\n  end\n  return false\n\
    end", "  if x ~= nil then\n    if y ~= nil then\n      if z ~= nil then\n    \
    \    return ((x ~= nil and y ~= nil and z ~= nil) and ((type(y) == 'number' and\
    \ type(z) == 'number') and (x + y + z == y)))\n      else\n        return ((x\
    \ ~= nil and y ~= nil) and (x ~= y))\n      end\n    else\n      return ((x ~=\
    \ nil) and (x ~= y))\n    end\n  else\n    return ((y ~= nil) and (y ~= z))\n\
    \  end\nend", "  if type(y) == 'number' and type(z) == 'number' then\n    return\
    \ x == y or x == z\n  elseif type(y) == 'table' then\n    for _, v in pairs(y)\
    \ do\n      if any_int(x, y, v) then\n        return true\n      end\n    end\n\
    \    return false\n  else\n    return false\n  end\nend", "  if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if x == y or x == z or y == z then\n\
    \    return true\n  end\n  return false\nend", "  if type(x) == 'number' and type(y)\
    \ == 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n  \
    \  return false\n  end\nend", "  if type(y) == 'number' and type(z) == 'number'\
    \ then\n    return x == y or x == z\n  elseif type(y) == 'table' then\n    for\
    \ _, v in pairs(y) do\n      if any_int(x, y, v) then\n        return true\n \
    \     end\n    end\n  else\n    return false\n  end\nend", "  if x == y then\n\
    \    return true\n  elseif x == z then\n    return true\n  elseif y == z then\n\
    \    return true\n  else\n    return false\n  end\nend", "  if x ~= nil and y\
    \ ~= nil and z ~= nil then\n    if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n      if x == y and x == z and type(x) == 'number'\
    \ then\n        return true\n      else\n        return false\n      end\n   \
    \ end\n  end\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z)\
    \ == 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if x ~= nil and y ~= nil and z ~= nil then\n    if x == y and x == z then\n \
    \     return true\n    end\n  end\n  return false\nend", "  if type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y or x == z\n  elseif type(y)\
    \ == 'table' then\n    for _, v in ipairs(y) do\n      if any_int(x, y, v) then\n\
    \        return true\n      end\n    end\n  elseif type(z) == 'table' then\n \
    \   for _, v in ipairs(z) do\n      if any_int(x, y, v) then\n        return true\n\
    \      end\n    end\n  else\n    return false\n  end\nend", "  if x == y then\n\
    \    if x == z then\n      return true\n    end\n    return false\n  end\n  if\
    \ x < y then\n    if x < z then\n      return true\n    end\n    return false\n\
    \  end\n  if y < x then\n    if y < z then\n      return true\n    end\n    return\
    \ false\n  end\n  return true\nend", "  if type(y) == 'number' and type(z) ==\
    \ 'number' then\n    return x == y or x == z\n  else\n    return false\n  end\n\
    end", "  if x ~= nil and y ~= nil and z ~= nil then\n    if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n      return (x+y+z) ==\
    \ z\n    else\n      return false\n    end\n  else\n    return false\n  end\n\
    end", "  if type(y) == 'number' and type(z) == 'number' and type(z) == 'number'\
    \ then\n    return x == y or x == z\n  else\n    return false\n  end\nend", " \
    \ if x == y then\n    if x == z then\n      return true\n    end\n    return false\n\
    \  end\n  if x < y then\n    if x < z then\n      return true\n    end\n    return\
    \ false\n  end\n  if y < x then\n    if y < z then\n      return true\n    end\n\
    \    return false\n  end\n  return true\nend", "  if type(x) == 'number' and type(y)\
    \ == 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n  \
    \  return false\n  end\nend", "  if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z) ==\
    \ 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if type(x) == \"number\" and type(y) == \"number\" and type(z) == \"number\"\
    \ then\n    return x == y + z\n  else\n    return false\n  end\nend", "  if x\
    \ == y or x == z or y == z then\n    return true\n  else\n    return false\n \
    \ end\nend", "  if x == y then\n    return true\n  elseif x == z then\n    return\
    \ true\n  elseif y == z then\n    return true\n  else\n    return false\n  end\n\
    end", "  if type(x) == 'number' and type(y) == 'number' and type(z) == 'number'\
    \ then\n    return x == y + z\n  else\n    return false\n  end\nend", "  if x\
    \ == y then\n    if x == z then\n      return true\n    end\n    return false\n\
    \  end\n  if x < y then\n    if x < z then\n      return true\n    end\n    return\
    \ false\n  end\n  if y < x then\n    if y < z then\n      return true\n    end\n\
    \    return false\n  end\n  return true\nend", "  if x ~= nil and y ~= nil and\
    \ z ~= nil then\n    if type(x) == \"number\" and type(y) == \"number\" and type(z)\
    \ == \"number\" then\n      return ((x + y + z) == (x * y * z))\n    else\n  \
    \    return false\n    end\n  else\n    return false\n  end\nend", "  if x ==\
    \ y then\n    return true\n  elseif x == z then\n    return true\n  elseif y ==\
    \ z then\n    return true\n  else\n    return false\n  end\nend", "  if type(x)\
    \ == 'number' and type(y) == 'number' and type(z) == 'number' then\n    return\
    \ x == y + z\n  else\n    return false\n  end\nend", "  if type(x) == \"number\"\
    \ and type(y) == \"number\" and type(z) == \"number\" then\n    return x == y\
    \ + z\n  else\n    return false\n  end\nend", "  if type(y) == 'number' and type(z)\
    \ == 'number' then\n    return x == y or x == z\n  else\n    return false\n  end\n\
    end", "  if x == y then\n    return z == x\n  elseif x == z then\n    return y\
    \ == z\n  else\n    return false\n  end\nend", "  if type(x) == \"number\" and\
    \ type(y) == \"number\" and type(z) == \"number\" then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if type(x) == 'number' and type(y)\
    \ == 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n  \
    \  return false\n  end\nend", "  if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z) ==\
    \ 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if x == y then\n    return z == x\n  elseif x == z then\n    return y == z\n\
    \  elseif y == z then\n    return x == y\n  else\n    return false\n  end\nend",
  "  if type(x) == 'number' and type(y) == 'number' and type(z) == 'number' then\n\
    \    return x == y + z\n  else\n    return false\n  end\nend", "  if x == y then\n\
    \    return z == x\n  elseif x == z then\n    return y == z\n  else\n    return\
    \ false\n  end\nend", "  if type(x) == \"number\" and type(y) == \"number\" and\
    \ type(z) == \"number\" then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z) ==\
    \ 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if x ~= nil then\n    if y ~= nil then\n      if z ~= nil then\n        return\
    \ ((x == y) and (y == z)) or (x == z) and (y == nil)\n      else\n        return\
    \ (x == y)\n      end\n    else\n      return (x == z)\n    end\n  else\n    return\
    \ (y == nil)\n  end\nend", "  if type(x) == 'number' and type(y) == 'number' and\
    \ type(z) == 'number' then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if x ~= nil then\n    if y ~= nil then\n      if z ~= nil then\n\
    \        return (x == y and z == z) or (x == z and y == y)\n      else\n     \
    \   return (x == y)\n      end\n    else\n      return (x == z)\n    end\n  else\n\
    \    return (y == z)\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n\
    \    if type(x) == \"number\" and type(y) == \"number\" and type(z) == \"number\"\
    \ then\n      return ((x + y + z) == (x * y * z)) and ((x % z) == ((x % y) * z))\
    \ and ((x % y) == ((x % z) * y))\n    end\n  end\n  return false\nend", "  if\
    \ type(x) == 'number' and type(y) == 'number' and type(z) == 'number' then\n \
    \   return x == y + z\n  else\n    return false\n  end\nend", "  if type(x) ==\
    \ 'number' and type(y) == 'number' and type(z) == 'number' then\n    return x\
    \ == y + z\n  else\n    return false\n  end\nend", "  if type(x) == 'number' and\
    \ type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n\
    \    return false\n  end\nend", "  if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n    return ((type(x)\
    \ == 'number' and type(y) == 'number' and type(z) == 'number') and\n         \
    \   ((x == y and x == z) or (x ~= y and x ~= z)))\n  else\n    return false\n\
    \  end\nend", "  if type(x) == \"number\" and type(y) == \"number\" and type(z)\
    \ == \"number\" then\n    return x == y + z\n  else\n    return false\n  end\n\
    end", "  if type(x) == \"number\" and type(y) == \"number\" and type(z) == \"\
    number\" then\n    return x == y + z\n  else\n    return false\n  end\nend", " \
    \ if type(x) == 'number' and type(y) == 'number' and type(z) == 'number' then\n\
    \    return x == y + z\n  else\n    return false\n  end\nend", "  if type(x) ==\
    \ 'number' and type(y) == 'number' and type(z) == 'number' then\n    return x\
    \ == y + z\n  else\n    return false\n  end\nend", "  if type(x) == 'number' and\
    \ type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n\
    \    return false\n  end\nend", "  if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z) ==\
    \ 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  local sum = x+y+z\n  return sum == x or sum == y or sum == z\nend", "  if x ==\
    \ y or x == z or y == z then\n    return true\n  else\n    return false\n  end\n\
    end", "  if x ~= nil and y ~= nil and z ~= nil then\n    if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n      if x == y and x\
    \ == z and type(x) == 'number' then\n        return true\n      else\n       \
    \ return false\n      end\n    end\n  end\nend", "  if x ~= nil and y ~= nil and\
    \ z ~= nil then\n    if type(x) == 'number' and type(y) == 'number' and type(z)\
    \ == 'number' then\n      return ((x + y + z) == (x * y * z))\n    end\n  end\n\
    \  return false\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z)\
    \ == 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if type(x) == \"number\" and type(y) == \"number\" and type(z) == \"number\"\
    \ then\n    return x == y + z\n  else\n    return false\n  end\nend", "  if type(x)\
    \ == 'number' and type(y) == 'number' and type(z) == 'number' then\n    return\
    \ x == y + z\n  else\n    return false\n  end\nend", "  if x ~= nil and y ~= nil\
    \ and z ~= nil then\n    if type(x) == 'number' and type(y) == 'number' and type(z)\
    \ == 'number' then\n      return (x == y and x == z) or (x ~= y and x ~= z)\n\
    \    end\n  end\n  return false\nend", "  if type(x) == 'number' and type(y) ==\
    \ 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n    return\
    \ false\n  end\nend", "  if x ~= nil then\n    if y ~= nil then\n      if z ~=\
    \ nil then\n        return (x == y and z == z) or (x == z and y == y)\n      else\n\
    \        return (x == y)\n      end\n    else\n      return (x == z)\n    end\n\
    \  else\n    return (y == z)\n  end\nend", "  if x ~= nil and y ~= nil and z ~=\
    \ nil then\n    if x == y and x == z then\n      return true\n    end\n  end\n\
    \  return false\nend", "  if x == y then\n    return true\n  elseif x == z then\n\
    \    return true\n  elseif y == z then\n    return true\n  else\n    return false\n\
    \  end\nend", "  if type(y) == 'number' and type(z) == 'number' then\n    return\
    \ x == y or x == z\n  else\n    return false\n  end\nend", "  if x ~= nil and\
    \ y ~= nil and z ~= nil then\n    if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n      return ((x + y) == z) or ((x - y) == z)\
    \ or ((x * y) == z) or ((x / y) == z) or ((x % y) == z)\n    end\n  end\n  return\
    \ false\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z) ==\
    \ 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if x ~= nil and y ~= nil and z ~= nil then\n    return ((type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number') and\n            ((x == y and\
    \ z == z) or (x + y == z)))\n  else\n    return false\n  end\nend", "  if x ~=\
    \ nil and y ~= nil and z ~= nil then\n    if type(x) == 'number' and type(y) ==\
    \ 'number' and type(z) == 'number' then\n      return x == y + z\n    end\n  end\n\
    \  return false\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n    if type(x)\
    \ == 'number' and type(y) == 'number' and type(z) == 'number' then\n      -- All\
    \ numbers are integers\n      return true\n    end\n  end\n  return false\nend",
  "  local sum = x+y+z\n  return sum == x or sum == y or sum == z\nend", "  if x ==\
    \ y then\n    return z == x\n  elseif x == z then\n    return y == z\n  else\n\
    \    return false\n  end\nend", "  if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n    if type(x) ==\
    \ 'number' and type(y) == 'number' and type(z) == 'number' then\n      if x ==\
    \ y and x == z and x ~= 0 then\n        return true\n      else\n        return\
    \ false\n      end\n    end\n  end\n  return false\nend", "  if x == y then\n\
    \    return z == x\n  elseif x == z then\n    return y == z\n  else\n    return\
    \ false\n  end\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z)\
    \ == 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if x == y or x == z or y == z then\n    return true\n  end\n  return false\n\
    end", "  if x ~= nil and y ~= nil and z ~= nil then\n    if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n      return ((x + y +\
    \ z) == (x * y * z))\n    else\n      return false\n    end\n  else\n    return\
    \ false\n  end\nend", "  if x == y then\n    return z == x\n  elseif x == z then\n\
    \    return y == z\n  else\n    return false\n  end\nend", "  if x ~= nil and\
    \ y ~= nil and z ~= nil then\n    return ((type(x) == \"number\" and type(y) ==\
    \ \"number\" and type(z) == \"number\") and\n            ((x == y and x == z)\
    \ or (x ~= y and x ~= z)))\n  else\n    return false\n  end\nend", "  if x ~=\
    \ nil then\n    if y ~= nil then\n      if z ~= nil then\n        return x ~=\
    \ y and x ~= z\n      else\n        return x ~= y\n      end\n    else\n     \
    \ return x ~= z\n    end\n  else\n    return y ~= nil\n  end\nend", "  if x ==\
    \ y or x == z or y == z then\n    return true\n  else\n    return false\n  end\n\
    end", "  if x ~= nil and y ~= nil and z ~= nil then\n    if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n      return x == y +\
    \ z\n    end\n  end\n  return false\nend", "  if type(x) == \"number\" and type(y)\
    \ == \"number\" and type(z) == \"number\" then\n    return x == y + z\n  else\n\
    \    return false\n  end\nend", "  if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z) ==\
    \ 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if type(x) == 'number' and type(y) == 'number' and type(z) == 'number' then\n\
    \    return x == y + z\n  else\n    return false\n  end\nend", "  if x == y then\n\
    \    return z == x\n  elseif x == z then\n    return y == z\n  else\n    return\
    \ false\n  end\nend", "  if type(x) == \"number\" and type(y) == \"number\" and\
    \ type(z) == \"number\" then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z) ==\
    \ 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if x ~= nil and y ~= nil and z ~= nil then\n    return ((type(x) == \"number\"\
    \ and type(y) == \"number\" and type(z) == \"number\") and\n            math.floor(x)\
    \ == math.floor(y) and math.floor(x) == math.floor(z)\n           )\n  else\n\
    \    return false\n  end\nend", "  if x == y then\n    return true\n  elseif x\
    \ == z then\n    return true\n  elseif y == z then\n    return true\n  else\n\
    \    return false\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n\
    \    if x == y and x == z then\n      return true\n    end\n  end\n  return false\n\
    end", "  if x == y or x == z or y == z then\n    return true\n  else\n    return\
    \ false\n  end\nend", "  if type(y) == 'number' and type(z) == 'number' then\n\
    \    return x == y + z\n  elseif type(y) == 'number' and type(z) == 'string' then\n\
    \    return x == y + z\n  elseif type(x) == 'number' and type(z) == 'number' then\n\
    \    return x == z + y\n  elseif type(x) == 'number' and type(z) == 'string' then\n\
    \    return x == z + y\n  elseif type(x) == 'string' and type(y) == 'number' then\n\
    \    return x == y + z\n  elseif type(x) == 'string' and type(y) == 'string' then\n\
    \    return x == y + z\n  else\n    return false\n  end\nend", "  local function\
    \ is_int(x)\n    return type(x) == \"number\" and x % 1 == 0\n  end\n  local function\
    \ is_int(y)\n    return type(y) == \"number\" and y % 1 == 0\n  end\n  local function\
    \ is_int(z)\n    return type(z) == \"number\" and z % 1 == 0\n  end\n  local function\
    \ is_int(n)\n    return is_int(x) or is_int(y) or is_int(z)\n  end\n  return is_int(x)\
    \ and is_int(y) and is_int(z) and x + y + z == z\nend", "  if x ~= nil and y ~=\
    \ nil and z ~= nil then\n    return ((type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number') and\n            (x+y+z == z)) or (type(x) == 'number'\
    \ and type(y) == 'number' and z == nil) or (type(x) == 'number' and y == nil and\
    \ z == nil)\n  else\n    return false\n  end\nend", "  if x ~= nil and y ~= nil\
    \ and z ~= nil then\n    return ((type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number') and\n            ((x == y and z == 0) or (x == z and\
    \ y == 0)) and\n            ((x ~= 0 and y ~= 0 and z ~= 0) or (x ~= 0 and z ~=\
    \ 0 and y ~= 0)))\n  else\n    return false\n  end\nend", "  -- Check if all arguments\
    \ are integers\n  local function is_int(n)\n    return type(n - 'number') == type\n\
    \  end\n  if not is_int(x) or not is_int(y) or not is_int(z) then\n    return\
    \ false\n  end", "  if x ~= nil and y ~= nil and z ~= nil then\n    if type(x)\
    \ == 'number' and type(y) == 'number' and type(z) == 'number' then\n      return\
    \ ((x == y) or (x == z) or (y == z)) and type(x) == 'integer'\n    end\n  end\n\
    \  return false\nend", "  local sum = x+y+z\n  return sum == x or sum == y or\
    \ sum == z\nend", "  if x == y then\n    return true\n  elseif x == z then\n \
    \   return true\n  elseif y == z then\n    return true\n  else\n    return false\n\
    \  end\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z) ==\
    \ 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if x == y then\n    return true\n  elseif x == z then\n    return true\n  elseif\
    \ y == z then\n    return true\n  else\n    return false\n  end\nend", "  if x\
    \ == y then\n    if x == z then\n      return true\n    end\n    return false\n\
    \  end\n  if x == z then\n    return true\n  end\n  if y == z then\n    return\
    \ true\n  end\n  return false\nend", "  if type(x) == 'number' and type(y) ==\
    \ 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n    return\
    \ false\n  end\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z)\
    \ == 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if type(x) == 'number' and type(y) == 'number' and type(z) == 'number' then\n\
    \    return x == y + z\n  else\n    return false\n  end\nend", "  if x == y then\n\
    \    return z == x or z == y\n  elseif x == z then\n    return y == z or y ==\
    \ x\n  elseif y == z then\n    return x == z or x == y\n  else\n    return false\n\
    \  end\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z) ==\
    \ 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if type(x) == \"number\" and type(y) == \"number\" and type(z) == \"number\"\
    \ then\n    return x == y + z\n  else\n    return false\n  end\nend", "  if x\
    \ ~= nil then\n    if y ~= nil then\n      if z ~= nil then\n        return (x\
    \ == y and z == z) or (x == z and y == y)\n      else\n        return (x == y)\n\
    \      end\n    else\n      return (x == z)\n    end\n  else\n    return (y ==\
    \ z)\n  end\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z)\
    \ == 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if x == y then\n    return z == x\n  elseif x < y then\n    return any_int(y,\
    \ x, z)\n  else\n    return any_int(x, y, z) or any_int(y, x, z)\n  end\nend",
  "  if type(x) == 'number' and type(y) == 'number' and type(z) == 'number' then\n\
    \    return x == y + z\n  else\n    return false\n  end\nend", "  if type(x) ==\
    \ 'number' and type(y) == 'number' and type(z) == 'number' then\n    return x\
    \ == y + z\n  else\n    return false\n  end\nend", "  if x == y then\n    return\
    \ z == x and type(z) == 'number'\n  elseif x < y then\n    return any_int(y, x,\
    \ z)\n  else\n    return any_int(x, y, z) or any_int(y, x, z)\n  end\nend", " \
    \ if type(y) == 'number' and type(z) == 'number' then\n    return x == y or x\
    \ == z\n  elseif type(y) == 'table' and type(z) == 'table' then\n    for _, v\
    \ in ipairs(y) do\n      if any_int(x, y, v) then\n        return true\n     \
    \ end\n    end\n    return false\n  else\n    return false\n  end\nend", "  if\
    \ x == y then\n    return z == x and type(z) == 'number'\n  elseif x < y then\n\
    \    return any_int(y, x, z)\n  else\n    return any_int(x, y, z) or type(z) ==\
    \ 'number'\n  end\nend", "  if type(x) == 'number' and type(y) == 'number' and\
    \ type(z) == 'number' then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if type(x) == \"number\" and type(y) == \"number\" and type(z)\
    \ == \"number\" then\n    return x == y + z\n  else\n    return false\n  end\n\
    end", "  if type(y) == 'number' and type(z) == 'number' then\n    return x ==\
    \ y or x == z\n  else\n    return false\n  end\nend", "  if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil\
    \ then\n    return x == y + z\n  else\n    return false\n  end\nend", "  if x\
    \ == y then\n    return true\n  elseif x == z then\n    return true\n  elseif\
    \ y == z then\n    return true\n  else\n    return false\n  end\nend", "  if type(y)\
    \ == 'number' and type(z) == 'number' then\n    return x == y or x == z\n  elseif\
    \ type(y) == 'table' then\n    for _, v in ipairs(y) do\n      if any_int(x, y,\
    \ v) then\n        return true\n      end\n    end\n    return false\n  else\n\
    \    return false\n  end\nend", "  if x == y then\n    return z == x\n  elseif\
    \ x == z then\n    return y == z\n  else\n    return false\n  end\nend", "  if\
    \ x == y then\n    return true\n  elseif x == z then\n    return false\n  elseif\
    \ y == z then\n    return true\n  else\n    return false\n  end\nend", "  if x\
    \ == y then\n    return z == x\n  elseif x < y then\n    return any_int(y, x,\
    \ z)\n  else\n    return any_int(x, y, z) or any_int(y, x, z)\n  end\nend", " \
    \ if x ~= nil then\n    if y ~= nil then\n      if z ~= nil then\n        return\
    \ x ~= y and x ~= z\n      else\n        return x ~= y\n      end\n    else\n\
    \      return x ~= z\n    end\n  else\n    if y ~= nil then\n      return y ~=\
    \ z\n    else\n      return z ~= nil\n    end\n  end\nend", "  if x ~= nil and\
    \ y ~= nil and z ~= nil then\n    return ((type(x) == 'number' and type(y) ==\
    \ 'number' and type(z) == 'number') and\n      ((x == y and x == z) or (x ~= y\
    \ and x ~= z)))\n  else\n    return false\n  end\nend", "  if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if x == y then\n    return true\n \
    \ elseif x == z then\n    return true\n  elseif y == z then\n    return true\n\
    \  else\n    return false\n  end\nend", "  if type(x) == 'number' and type(y)\
    \ == 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n  \
    \  return false\n  end\nend", "  if x ~= nil then\n    if y ~= nil then\n    \
    \  if z ~= nil then\n        return x ~= y and x ~= z\n      else\n        return\
    \ x ~= y\n      end\n    else\n      return x ~= z\n    end\n  else\n    return\
    \ y ~= nil\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n    if\
    \ type(x) == 'number' and type(y) == 'number' and type(z) == 'number' then\n \
    \     return ((x + y + z) == (x * y * z))\n    else\n      return false\n    end\n\
    \  else\n    return false\n  end\nend", "  if x == y then\n    return z == x\n\
    \  elseif x == z then\n    return y == z\n  elseif y == z then\n    return x ==\
    \ y\n  else\n    return false\n  end\nend", "  if x == y then\n    return z ==\
    \ x\n  elseif x == z then\n    return y == z\n  else\n    return false\n  end\n\
    end", "  if type(x) == 'number' and type(y) == 'number' and type(z) == 'number'\
    \ then\n    return x == y + z\n  else\n    return false\n  end\nend", "  if x\
    \ == y then\n    return z == x and type(z) == 'number'\n  elseif x < y then\n\
    \    return any_int(y, x, z)\n  else\n    return any_int(x, y, z) or any_int(y,\
    \ x, z)\n  end\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z)\
    \ == 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if x == y then\n    return true\n  elseif x == z then\n    return true\n  elseif\
    \ y == z then\n    return true\n  else\n    return false\n  end\nend", "  if type(x)\
    \ == 'number' and type(y) == 'number' and type(z) == 'number' then\n    return\
    \ x == y + z\n  else\n    return false\n  end\nend", "  if x == y or x == z or\
    \ y == z then\n    return true\n  else\n    return false\n  end\nend", "  if type(x)\
    \ == 'number' and type(y) == 'number' and type(z) == 'number' then\n    return\
    \ x == y + z\n  else\n    return false\n  end\nend", "  if type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y or x == z\n  else\n    return\
    \ false\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n    if type(x)\
    \ == 'number' and type(y) == 'number' and type(z) == 'number' then\n      if x\
    \ == y and x == z and x ~= 0 then\n        return true\n      else\n        return\
    \ false\n      end\n    end\n  end\nend", "  if x == y then\n    return true\n\
    \  elseif x == z then\n    return true\n  elseif y == z then\n    return true\n\
    \  else\n    return false\n  end\nend", "  if x == y then\n    return z == x\n\
    \  elseif x == z then\n    return y == z\n  else\n    return false\n  end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

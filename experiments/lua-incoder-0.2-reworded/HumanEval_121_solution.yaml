name: HumanEval_121_solution
language: lua
prompt: "-- Given a non-empty table of integers, return the sum of all of the odd\
  \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7, 1})\n\
  -- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13, 24, 321})\n\
  -- 0\nlocal function solution(lst)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = solution\n\
  \    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3,\
  \ 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30, 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5,\
  \ 9}), 5)\n    lu.assertEquals(candidate({2, 4, 8}), 0)\n    lu.assertEquals(candidate({30,\
  \ 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3, 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 1 then\n   \
    \   sum = sum + lst[i]\n    end\n  end\n  return sum\nend", "  local sum = 0\n\
    \  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n\
    \  end\n  return sum\nend", "  local even = lst:gsub(\"^%s*(%d+)$\", \"%1\")\n\
    \  return tonumber(even) or 0\nend", "  local sum = 0\n  for i = 1, #lst do\n\
    \    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\n\
    end", "  local even = 0\n  local odd = 0\n  for i = 1, #lst do\n    if i % 2 ==\
    \ 0 then\n      even = even + lst[i]\n    else\n      odd = odd + lst[i]\n   \
    \ end\n  end\n  return even + odd\nend", "  local sum = 0\n  for i = 1, #lst do\n\
    \    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\n\
    end", "  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend", "  if #lst == 0 then\n \
    \   return 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0\
    \ then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend", "  -- Base\
    \ case\n  if #lst == 0 then\n    return 0\n  end", "  local sum = 0\n  for i =\
    \ 1, #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend", "  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 1\
    \ then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend", "  if #lst\
    \ == 0 then\n    return 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if\
    \ i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend",
  "  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 1 then\n      sum = sum\
    \ + lst[i]\n    end\n  end\n  return sum\nend", "  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend", "  if #lst == 0 then return 0 end\n  local sum = 0\n  for\
    \ i = 1, #lst do\n    if lst[i] % 2 == 1 then\n      sum = sum + lst[i]\n    end\n\
    \  end\n  return sum\nend", "  -- Base case\n  if #lst == 0 then\n    return 0\n\
    \  end", "  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n    \
    \  sum = sum + lst[i]\n    end\n  end\n  return sum\nend", "  local sum = 0\n\
    \  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n\
    \  end\n  return sum\nend", "  local sum = 0\n  for i = 1, #lst do\n    if i %\
    \ 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend", " \
    \ local even = 0\n  local odd = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n\
    \      even = even + lst[i]\n    else\n      odd = odd + lst[i]\n    end\n  end\n\
    \  return even + odd\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

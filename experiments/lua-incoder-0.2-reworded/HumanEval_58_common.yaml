name: HumanEval_58_common
language: lua
prompt: "-- Return sorted unique common elements for two tables.\n-- >>> common({1,\
  \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
  \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
  \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}),\
  \ {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2, 3})\n \
  \   lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4,\
  \ 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in\
    \ ipairs(l2) do\n      if v == v2 then\n        table.insert(common, v)\n    \
    \  end\n    end\n  end\n  return common\nend", "  local common = {}\n  for _,\
    \ v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n\
    \        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in pairs(l1) do\n\
    \    for _, v2 in pairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  local i = 1\n  while i <= #l1 do\n    local j = 1\n    while j <= #l2 do\n\
    \      if l1[i] == l2[j] then\n        table.insert(common, l1[i])\n        i\
    \ = i + 1\n        break\n      else\n        j = j + 1\n      end\n    end\n\
    \    i = i + 1\n  end\n  return common\nend", "  local common = {}\n  for _, v\
    \ in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n  \
    \      table.insert(common, v)\n      end\n    end\n  end\n  return common\nend",
  "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n\
    \      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in pairs(l1) do\n    for _, v2 in pairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in pairs(l1) do\n\
    \    for _, v2 in pairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v1 in pairs(l1) do\n    for _, v2 in pairs(l2) do\n      if v1 == v2\
    \ then\n        table.insert(common, v1)\n      end\n    end\n  end\n  return\
    \ common\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _,\
    \ v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common, v)\n\
    \      end\n    end\n  end\n  return common\nend", "  local common = {}\n  for\
    \ _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n\
    \        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  local i1, i2 = 1, #l1\n\
    \  while i1 <= i2 do\n    local i3 = i1 + 1\n    while i3 <= i2 do\n      if l1[i1]\
    \ == l2[i3] then\n        common[#common+1] = l1[i1]\n        i1, i3 = i1 + 1,\
    \ i3 + 1\n      else\n        i3, i2 = i2 + 1, i3 + 1\n      end\n    end\n  \
    \  i1, i2 = i1 + 1, i2 + 1\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in pairs(l1) do\n    for _, v2 in pairs(l2) do\n      if v == v2 then\n\
    \        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v1 in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v1 == v2 then\n        table.insert(common, v1)\n      end\n  \
    \  end\n  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  local i = 1\n  while i <= #l1 do\n    local j = 1\n    while j <= #l2 do\n\
    \      if l1[i] == l2[j] then\n        table.insert(common, l1[i])\n      end\n\
    \      j = j + 1\n    end\n    i = i + 1\n  end\n  return common\nend", "  local\
    \ common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n \
    \     if v == v2 then\n        table.insert(common, v)\n      end\n    end\n \
    \ end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n\
    \    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in pairs(l1) do\n    for _, v2 in pairs(l2) do\n      if v == v2 then\n\
    \        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  local i1, i2 = 1, #l1\n\
    \  while i1 <= i2 do\n    local i3 = i1 + 1\n    while i3 <= i2 do\n      local\
    \ i4 = i3 + 1\n      while i4 <= i2 do\n        common[l2[i1]] = l2[i3]\n    \
    \    i4 = i4 + 1\n      end\n      i3 = i3 + 1\n    end\n    i1 = i1 + 1\n  end\n\
    \  return common\nend", "  local common = {}\n  for _, v in pairs(l1) do\n   \
    \ for _, v2 in pairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v1 in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v1 == v2 then\n        table.insert(common, v1)\n      end\n  \
    \  end\n  end\n  return common\nend", "  local common = {}\n  local i1, i2 = 1,\
    \ #l1\n  while i1 <= i2 do\n    local i3 = i1 + 1\n    while i3 <= i2 do\n   \
    \   if l1[i1] == l2[i3] then\n        common[#common+1] = l1[i1]\n        i1,\
    \ i3 = i1 + 1, i3 + 1\n      else\n        i3, i2 = i3, i2 + 1\n      end\n  \
    \  end\n    i1, i2 = i1 + 1, i2 + 1\n  end\n  return common\nend", "  local common\
    \ = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if\
    \ v == v2 then\n        table.insert(common, v)\n      end\n    end\n  end\n \
    \ return common\nend", "  local common = {}\n  for _, v1 in pairs(l1) do\n   \
    \ for _, v2 in pairs(l2) do\n      if v1 == v2 then\n        table.insert(common,\
    \ v1)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  local i1, i2 = 1, #l1\n\
    \  while i1 <= i2 do\n    local i3 = i1 + 1\n    while i3 <= i2 do\n      local\
    \ i4 = i3 + 1\n      while i4 <= i2 do\n        common[l2[i1]] = l2[i3]\n    \
    \    i3 = i4\n      end\n      i4 = i3 + 1\n    end\n    i1 = i1 + 1\n  end\n\
    \  return common\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n  \
    \  for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n   \
    \ local v1 = l1[i1]\n    local v2 = l2[i2]\n    if v1 == v2 then\n      common[v1]\
    \ = v1\n      i1 = i1 + 1\n      i2 = i2 + 1\n    elseif v1 > v2 then\n      i2\
    \ = i2 + 1\n    else\n      common[v2] = v2\n      i1 = i1 + 1\n    end\n  end\n\
    \  return common\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n  \
    \  for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local l = {}\n  for\
    \ _, v in ipairs(l1) do\n    table.insert(l, v)\n  end\n  for _, v in ipairs(l2)\
    \ do\n    table.insert(l, v)\n  end\n  table.sort(l)\n  local r = {l[1]}\n  for\
    \ _, v in ipairs(l) do\n    if v~=r[1] then\n      table.insert(r, v)\n    end\n\
    \  end\n  return r\nend", "  local common = {}\n  for _, v1 in ipairs(l1) do\n\
    \    for _, v2 in ipairs(l2) do\n      if v1 == v2 then\n        table.insert(common,\
    \ v1)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v1 in pairs(l1) do\n    for _, v2 in pairs(l2) do\n      if v1 == v2\
    \ then\n        table.insert(common, v1)\n      end\n    end\n  end\n  return\
    \ common\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _,\
    \ v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common, v)\n\
    \      end\n    end\n  end\n  return common\nend", "  local common = {}\n  for\
    \ _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n\
    \        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  local i1\n  local i2\n\
    \  for i1, l1 in ipairs(l1) do\n    for i2, l2 in ipairs(l2) do\n      if l1 ==\
    \ l2 then\n        common[i1] = true\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local l3 = {}\n  for _, v in ipairs(l1) do\n\
    \    table.insert(l3, v)\n  end\n  for _, v in ipairs(l2) do\n    table.insert(l3,\
    \ v)\n  end\n  table.sort(l3)\n  return l3\nend", "  local common = {}\n  for\
    \ _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n\
    \        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v1 in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v1 == v2 then\n        table.insert(common,\
    \ v1)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  local i = 1\n  while i <= #l1 do\n    local j =\
    \ 1\n    while j <= #l2 do\n      if l1[i] == l2[j] then\n        table.insert(common,\
    \ l1[i])\n      end\n      j = j + 1\n    end\n    i = i + 1\n  end\n  return\
    \ common\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _,\
    \ v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common, v)\n\
    \      end\n    end\n  end\n  return common\nend", "  local common = {}\n  local\
    \ i1\n  local i2\n  for i1, l1 in ipairs(l1) do\n    for i2, l2 in ipairs(l2)\
    \ do\n      if l1 == l2 then\n        common[i1] = true\n        break\n     \
    \ end\n    end\n  end\n  return common\nend", "  local common = {}\n  for _, v\
    \ in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n  \
    \      table.insert(common, v)\n      end\n    end\n  end\n  return common\nend",
  "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n\
    \      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  local i = 1\n  while i\
    \ <= #l1 do\n    local j = 1\n    while j <= #l2 do\n      if l1[i] == l2[j] then\n\
    \        table.insert(common, i)\n      end\n      j = j + 1\n    end\n    i =\
    \ i + 1\n  end\n  return common\nend", "  local common = {}\n  for _, v1 in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v1 == v2 then\n        table.insert(common,\
    \ v1)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  local i1\n  local i2\n  for i1, l1 in ipairs(l1) do\n    for i2, l2 in ipairs(l2)\
    \ do\n      if l1 == l2 then\n        common[i1] = true\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v1 in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v1 == v2 then\n        table.insert(common, v1)\n      end\n  \
    \  end\n  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v1 in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v1 ==\
    \ v2 then\n        table.insert(common, v1)\n      end\n    end\n  end\n  return\
    \ common\nend", "  local common = {}\n  for _, v1 in pairs(l1) do\n    for _,\
    \ v2 in pairs(l2) do\n      if v1 == v2 then\n        table.insert(common, v1)\n\
    \      end\n    end\n  end\n  return common\nend", "  local common = {}\n  for\
    \ _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n\
    \        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local l3 = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        l3[#l3 + 1] = v\n      end\n    end\n  end\n\
    \  return l3\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n    for\
    \ _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v1 in pairs(l1) do\n    for _, v2 in pairs(l2) do\n      if v1 == v2\
    \ then\n        table.insert(common, v1)\n      end\n    end\n  end\n  return\
    \ common\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _,\
    \ v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common, v)\n\
    \      end\n    end\n  end\n  return common\nend", "  local common = {}\n  for\
    \ _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n\
    \        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v1 in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v1 == v2 then\n        table.insert(common, v1)\n      end\n  \
    \  end\n  end\n  return common\nend", "  local common = {}\n  for _, v in pairs(l1)\
    \ do\n    for _, v2 in pairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n    local e1 = l1[i1]\n    local\
    \ e2 = l2[i2]\n    if e1 == e2 then\n      common[e1] = common[e1] or 1\n    \
    \  common[e2] = common[e2] or 1\n      common[e1] = common[e1] + 1\n      common[e2]\
    \ = common[e2] + 1\n      i1 = i1 + 1\n      i2 = i2 + 1\n    elseif common[e1]\
    \ > common[e2] then\n      common[e1] = common[e1] or 1\n      common[e2] = common[e2]\
    \ or 1\n      common[e1] = common[e1] + 1\n      i1 = i1 + 1\n    elseif common[e1]\
    \ < common[e2] then\n      common[e1] = common[e1] or 1\n      common[e2] = common[e2]\
    \ or 1\n      common[e1] = common[e1] + 1\n      i2 = i2 + 1\n    end\n  end\n\
    \  return common\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n  \
    \  for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n    local i3 = i1 + 1\n    while\
    \ i3 <= i2 do\n      if l1[i1] == l2[i3] then\n        common[#common+1] = l1[i1]\n\
    \        i1, i2 = i3, i3 + 1\n      else\n        i3 = i3 + 1\n      end\n   \
    \ end\n    i1 = i1 + 1\n  end\n  return common\nend", "  local common = {}\n \
    \ for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  local i1, i2 = 1, #l1\n\
    \  while i1 <= i2 do\n    local i3 = i1\n    while i3 <= i2 do\n      if l1[i1]\
    \ == l2[i3] then\n        table.insert(common, l1[i1])\n        i3 = i3 + 1\n\
    \      else\n        i3 = i3 + 1\n      end\n    end\n    i1 = i1 + 1\n  end\n\
    \  return common\nend", "  local common = {}\n  for _, v1 in pairs(l1) do\n  \
    \  for _, v2 in pairs(l2) do\n      if v1 == v2 then\n        table.insert(common,\
    \ v1)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in pairs(l1) do\n    for _, v2 in pairs(l2) do\n      if v == v2 then\n\
    \        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n   \
    \ local j1, j2 = i1, i1\n    while j1 <= j2 do\n      if l1[j1] == l2[j2] then\n\
    \        table.insert(common, l1[j1])\n        j1 = j1 + 1\n      else\n     \
    \   j2 = j2 + 1\n      end\n    end\n    i1 = i1 + 1\n  end\n  return common\n\
    end", "  local common = {}\n  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n   \
    \ local v1 = l1[i1]\n    local v2 = l2[i2]\n    if not common[v1] then\n     \
    \ common[v1] = true\n      table.insert(common, v2)\n    end\n    i1 = i1 + 1\n\
    \    i2 = i2 + 1\n  end\n  return common\nend", "  local common = {}\n  local\
    \ i1, i2 = 1, #l1\n  while i1 <= i2 do\n    local i3 = i1\n    while i3 <= i2\
    \ do\n      if l1[i1] == l2[i3] then\n        common[#common+1] = l1[i1]\n   \
    \     i3 = i3 + 1\n      else\n        i3 = i3 + 1\n      end\n    end\n    i1\
    \ = i1 + 1\n  end\n  return common\nend", "  local common = {}\n  for _, v in\
    \ ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n     \
    \   table.insert(common, v)\n      end\n    end\n  end\n  return common\nend",
  "  local common = {}\n  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n    local v1\
    \ = l1[i1]\n    local v2 = l2[i2]\n    if v1 == v2 then\n      common[v1] = true\n\
    \      i1 = i1 + 1\n      i2 = i2 + 1\n    elseif v1 < v2 then\n      i1 = i1\
    \ + 1\n    else\n      i2 = i2 + 1\n    end\n  end\n  return common\nend", " \
    \ local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local l = {}\n  for _, v in ipairs(l1) do\n\
    \    table.insert(l, v)\n  end\n  for _, v in ipairs(l2) do\n    table.insert(l,\
    \ v)\n  end\n  table.sort(l)\n  local l3 = {}\n  for _, v in ipairs(l) do\n  \
    \  table.insert(l3, v)\n  end\n  return l3\nend", "  local common = {}\n  for\
    \ _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n\
    \        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n    local v1 = l1[i1]\n    local\
    \ v2 = l2[i2]\n    if not common[v1] then\n      common[v1] = true\n      table.insert(common,\
    \ v2)\n    end\n    i1 = i1 + 1\n    i2 = i2 + 1\n  end\n  return common\nend",
  "  local common = {}\n  local i = 1\n  while i <= #l1 do\n    local j = 1\n    while\
    \ j <= #l2 do\n      if l1[i] == l2[j] then\n        table.insert(common, l1[i])\n\
    \      end\n      j = j + 1\n    end\n    i = i + 1\n  end\n  return common\n\
    end", "  local common = {}\n  local i = 1\n  while i <= #l1 do\n    local j =\
    \ 1\n    while j <= #l2 do\n      if l1[i] == l2[j] then\n        table.insert(common,\
    \ l1[i])\n        i = i + 1\n        break\n      else\n        j = j + 1\n  \
    \    end\n    end\n    i = i + 1\n  end\n  return common\nend", "  local common\
    \ = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if\
    \ v == v2 then\n        table.insert(common, v)\n      end\n    end\n  end\n \
    \ return common\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n   \
    \ for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  local i = 1\n  while i <= #l1 do\n    local j = 1\n    while j <= #l2 do\n\
    \      if l1[i] == l2[j] then\n        table.insert(common, i)\n      end\n  \
    \    j = j + 1\n    end\n    i = i + 1\n  end\n  return common\nend", "  local\
    \ common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n \
    \     if v == v2 then\n        table.insert(common, v)\n      end\n    end\n \
    \ end\n  return common\nend", "  local common = {}\n  local i1, i2 = 1, #l1\n\
    \  while i1 <= i2 do\n    local i3 = i1 + 1\n    while i3 <= i2 do\n      if l1[i1]\
    \ == l2[i3] then\n        common[#common+1] = l1[i1]\n        i1, i2 = i3, i3\
    \ + 1\n      else\n        i3 = i3 + 1\n      end\n    end\n    i1 = i1 + 1\n\
    \  end\n  return common\nend", "  local common = {}\n  local i1, i2 = 1, #l1\n\
    \  while i1 <= i2 do\n    local v1 = l1[i1]\n    local v2 = l2[i2]\n    if v1\
    \ == v2 then\n      common[v1] = v1\n      i1 = i1 + 1\n      i2 = i2 + 1\n  \
    \  elseif v1 < v2 then\n      common[v1] = v1\n      i1 = i1 + 1\n    else\n \
    \     common[v2] = v2\n      i2 = i2 + 1\n    end\n  end\n  return common\nend",
  "  local common = {}\n  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n    local i3\
    \ = i1 + 1\n    while i3 <= i2 do\n      local i4 = i3 + 1\n      while i4 <=\
    \ i2 do\n        local i5 = i4 + 1\n        while i5 <= i2 do\n          local\
    \ i6 = i5 + 1\n          while i6 <= i2 do\n            common[#common+1] = l1[i1]\n\
    \            if l1[i1] == l2[i2] and l1[i2] == l2[i3] then\n              common[#common+1]\
    \ = l2[i4]\n              if l2[i4] == l2[i5] and l2[i5] == l2[i6] then\n    \
    \            common[#common+1] = l2[i6]\n              end\n            end\n\
    \            i6 = i6 + 1\n          end\n          i5 = i5 + 1\n        end\n\
    \        i4 = i4 + 1\n      end\n      i3 = i3 + 1\n    end\n    i1 = i1 + 1\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n    local i3 = i1 + 1\n    while\
    \ i3 <= i2 do\n      if l1[i1] == l2[i3] then\n        common[#common+1] = l1[i1]\n\
    \        i1, i2 = i3, i3 + 1\n      else\n        i3 = i3 + 1\n      end\n   \
    \ end\n    i1 = i1 + 1\n  end\n  return common\nend", "  local common = {}\n \
    \ for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v1 in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v1 ==\
    \ v2 then\n        table.insert(common, v1)\n      end\n    end\n  end\n  return\
    \ common\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _,\
    \ v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common, v)\n\
    \      end\n    end\n  end\n  return common\nend", "  local l3 = {}\n  for _,\
    \ v in ipairs(l1) do\n    if l3[v] then return nil end\n    l3[v] = true\n  end\n\
    \  for _, v in ipairs(l2) do\n    if l3[v] then return nil end\n    l3[v] = true\n\
    \  end\n  return l3\nend", "  local common = {}\n  for _, v1 in pairs(l1) do\n\
    \    for _, v2 in pairs(l2) do\n      if v1 == v2 then\n        table.insert(common,\
    \ v1)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  local i1, i2 = 1, #l1\n\
    \  while i1 <= i2 do\n    local i3 = i1 + 1\n    while i3 <= i2 do\n      if l1[i1]\
    \ == l2[i3] then\n        common[#common+1] = l1[i1]\n        i1, i2 = i3, i3\
    \ + 1\n      else\n        i3 = i3 + 1\n      end\n    end\n    i1 = i1 + 1\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in pairs(l1) do\n    for _, v2 in pairs(l2) do\n      if v == v2 then\n\
    \        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  local i1, i2 = 1, #l1\n  while i1 <= i2 do\n   \
    \ local v1 = l1[i1]\n    local v2 = l2[i2]\n    if v1 == v2 then\n      common[v1]\
    \ = true\n      i1 = i1 + 1\n      i2 = i2 + 1\n    elseif v1 < v2 then\n    \
    \  i1 = i1 + 1\n    else\n      i2 = i2 + 1\n    end\n  end\n  return common\n\
    end", "  local l3 = {}\n  for _, v in ipairs(l1) do\n    if l3[v] then return\
    \ nil end\n    l3[v] = true\n  end\n  for _, v in ipairs(l2) do\n    if l3[v]\
    \ then return nil end\n    l3[v] = true\n  end\n  return l3\nend", "  local l3\
    \ = {}\n  for _, v in ipairs(l1) do\n    table.insert(l3, v)\n  end\n  for _,\
    \ v in ipairs(l2) do\n    table.insert(l3, v)\n  end\n  table.sort(l3)\n  return\
    \ l3\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in\
    \ ipairs(l2) do\n      if v == v2 then\n        table.insert(common, v)\n    \
    \  end\n    end\n  end\n  return common\nend", "  local common = {}\n  for _,\
    \ v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n\
    \        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  local i1\n  local i2\n\
    \  local i\n  local j\n  for i=1, #l1 do\n    i1 = l1[i]\n    for j=1, #l2 do\n\
    \      i2 = l2[j]\n      if i1 == i2 then\n        common[#common+1] = i2\n  \
    \    end\n    end\n  end\n  return common\nend", "  local common = {}\n  for _,\
    \ v1 in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v1 == v2 then\n\
    \        table.insert(common, v1)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  local i1, i2 = 1, #l1\n\
    \  while i1 <= i2 do\n    local i3 = i1 + 1\n    while i3 <= i2 do\n      if l1[i1]\
    \ == l2[i3] then\n        common[#common+1] = l1[i1]\n        i1, i3 = i1 + 1,\
    \ i3 + 1\n      else\n        i3, i2 = i3, i2 + 1\n      end\n    end\n    i1,\
    \ i2 = i1 + 1, i2 + 1\n  end\n  return common\nend", "  local common = {}\n  for\
    \ _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n\
    \        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  local i = 1\n  while i <= #l1 do\n    local j =\
    \ 1\n    while j <= #l2 do\n      if l1[i] == l2[j] then\n        table.insert(common,\
    \ l1[i])\n        i = i + 1\n        break\n      else\n        j = j + 1\n  \
    \    end\n    end\n    i = i + 1\n  end\n  return common\nend", "  local common\
    \ = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if\
    \ v == v2 then\n        table.insert(common, v)\n      end\n    end\n  end\n \
    \ return common\nend", "  local common = {}\n  for _, v in ipairs(l1) do\n   \
    \ for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n      if v == v2\
    \ then\n        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend", "  local common = {}\n  for _, v in ipairs(l1)\
    \ do\n    for _, v2 in ipairs(l2) do\n      if v == v2 then\n        table.insert(common,\
    \ v)\n      end\n    end\n  end\n  return common\nend", "  local common = {}\n\
    \  for _, v in pairs(l1) do\n    for _, v2 in pairs(l2) do\n      if v == v2 then\n\
    \        table.insert(common, v)\n      end\n    end\n  end\n  return common\n\
    end", "  local common = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2)\
    \ do\n      if v == v2 then\n        table.insert(common, v)\n      end\n    end\n\
    \  end\n  return common\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

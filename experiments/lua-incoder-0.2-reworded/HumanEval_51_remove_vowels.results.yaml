language: lua
name: HumanEval_51_remove_vowels
results:
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub(\"\
    %a\" .. text[i], \"\")\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr3c4k9cr.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpr3c4k9cr.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  -- remove\
    \ all vowels\n  for i = 1, #vowels do\n    new_text = new_text:gsub(\"[\" .. vowels[i]\
    \ .. \"]\", \"\")\n  end\n  return new_text\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcx6ant98.lua:29:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpcx6ant98.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text:gsub('[^'\
    \ .. table.concat(vowels, '') .. ']', '')\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdfq267xz.lua:22:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmpdfq267xz.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  for i\
    \ = 1, #text do\n    if text[i] ~= '' then\n      new_text = new_text:gsub('['\
    \ .. vowels[i] .. 'a' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i] ..\
    \ 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i]\
    \ .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i]\
    \ .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i]\
    \ .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i]\
    \ .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i]\
    \ .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i]\
    \ .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i]\
    \ .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i]\
    \ .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i]\
    \ .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i]\
    \ .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i]\
    \ .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i]\
    \ .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i]\
    \ .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i]\
    \ .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i]\
    \ .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u' .. vowels[i] .. 'u\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp7qslvxpv.lua:17: unfinished string near ''''u''

    '
  stdout: ''
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if text[i] ~= '' then\n      local char = text[i]\n      local\
    \ vowel = nil\n      for j = 1, #vowels do\n        if char == vowels[j] then\n\
    \          vowel = j\n        end\n      end\n      if vowel ~= nil then\n   \
    \     new_text = new_text .. char\n      else\n        new_text = new_text ..\
    \ text[i]\n      end\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp115yrc2u.lua:27:\
    \ attempt to concatenate field '?' (a nil value)\nstack traceback:\n\t/tmp/tmp115yrc2u.lua:27:\
    \ in function 'candidate'\n\t/tmp/tmp115yrc2u.lua:38: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplaty9mfy.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmplaty9mfy.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'} -- list of vowels\n  local new_text\
    \ = text\n  for i = 1, #vowels do\n    new_text = new_text:gsub('['..vowels[i]..'a]',\
    \ '')\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw6ns9o0e.lua:28:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpw6ns9o0e.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[string.sub(text, i, i)] then\n      new_text\
    \ = new_text .. string.sub(text, i, i)\n    end\n  end\n  return new_text\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkee8y083.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpkee8y083.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[string.sub(text, i, i)] then\n      new_text = new_text\
    \ .. string.sub(text, i, i)\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz3i1vpdi.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpz3i1vpdi.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text:gsub(\"[\"\
    \ .. table.concat(vowels, \"\") .. \"]\", \"\")\n  return new_text\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp419k3c6u.lua:25:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp419k3c6u.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplaty9mfy.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmplaty9mfy.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text\n  --\
    \ remove vowels\n  for i = 1, #vowels do\n    new_text = new_text:gsub('['..vowels[i]..'u]',\
    \ '')\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp18mjsuvi.lua:29:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp18mjsuvi.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub(\"[aeiou]\", \"\")\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplwcz6psc.lua:23:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmplwcz6psc.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('([aeiou])', function(c) return c:lower() end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqokj37se.lua:20:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpqokj37se.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  for i\
    \ = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbjo2ivdr.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpbjo2ivdr.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  local\
    \ vowels_count = 0\n  for i = 1, #text do\n    if vowels[text[i]] then\n     \
    \ vowels_count = vowels_count + 1\n    end\n  end\n  if vowels_count > 0 then\n\
    \    new_text = new_text:gsub('([' .. table.concat(vowels, '') .. '])', '')\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9dfxqowf.lua:31:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp9dfxqowf.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  local\
    \ vowels_count = 0\n  for i = 1, #text do\n    if vowels[text[i]] then\n     \
    \ vowels_count = vowels_count + 1\n      new_text = new_text:gsub('[' .. text[i]\
    \ .. ']', '')\n    end\n  end\n  if vowels_count > 0 then\n    new_text = new_text:gsub('['\
    \ .. vowels[#vowels] .. ']', '')\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84b3xqm1.lua:32:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp84b3xqm1.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text\n  for\
    \ i = 1, #text do\n    if string.sub(text, i, i) == 'a' then\n      new_text =\
    \ string.sub(text, 1, i-1) + string.sub(text, i+1, #text)\n    end\n    if string.sub(text,\
    \ i, i) == 'e' then\n      new_text = string.sub(text, 1, i-1) + string.sub(text,\
    \ i+1, #text)\n    end\n    if string.sub(text, i, i) == 'i' then\n      new_text\
    \ = string.sub(text, 1, i-1) + string.sub(text, i+1, #text)\n    end\n    if string.sub(text,\
    \ i, i) == 'o' then\n      new_text = string.sub(text, 1, i-1) + string.sub(text,\
    \ i+1, #text)\n    end\n    if string.sub(text, i, i) == 'u' then\n      new_text\
    \ = string.sub(text, 1, i-1) + string.sub(text, i+1, #text)\n    end\n    if string.sub(text,\
    \ i, i) == 'y' then\n      new_text = string.sub(text, 1, i-1) + string.sub(text,\
    \ i+1, #text)\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7jtvkgqm.lua:17:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmp7jtvkgqm.lua:17:\
    \ in function 'candidate'\n\t/tmp/tmp7jtvkgqm.lua:42: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'};\n  local new_text = text:gsub('[%s%s]',\
    \ function(c)\n    local i = vowels[c];\n    return i ~= nil and i or ''\n  end);\n\
    \  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjzazuf91.lua:25:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdefghijklm\"\nstack traceback:\n\
    \t/tmp/tmpjzazuf91.lua:25: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplaty9mfy.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmplaty9mfy.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n\
    \      new_text = new_text .. char\n    end\n  end\n  return new_text\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4lcj6tq6.lua:28:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp4lcj6tq6.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n\
    \      new_text = new_text .. char\n    end\n  end\n  return new_text\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4lcj6tq6.lua:28:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp4lcj6tq6.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n\
    \      new_text = new_text .. char\n    end\n  end\n  return new_text\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4lcj6tq6.lua:28:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp4lcj6tq6.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  for i\
    \ = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub(\"\
    [\" .. text[i] .. \"]\", \"\")\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpipvv7795.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpipvv7795.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  -- remove\
    \ vowels\n  for i = 1, #vowels do\n    new_text = new_text:gsub(\"[\" .. vowels[i]\
    \ .. \"]\", \"\")\n  end\n  return new_text\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj28x4y_3.lua:29:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpj28x4y_3.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('([aeiou])', ''):gsub('(.)$', '')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcwnx098_.lua:20:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"bcdf\nghjkl\"\nstack traceback:\n\t\
    /tmp/tmpcwnx098_.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if text[i] ~= '' then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  for i = 1, #vowels do\n    new_text = new_text:gsub('[' ..\
    \ vowels[i] .. ']', '')\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpycq2wr5s.lua:17:\
    \ attempt to concatenate field '?' (a nil value)\nstack traceback:\n\t/tmp/tmpycq2wr5s.lua:17:\
    \ in function 'candidate'\n\t/tmp/tmpycq2wr5s.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  for i\
    \ = 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n \
    \     new_text = new_text:sub(0, i-1)\n      break\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp41gfmb74.lua:29:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp41gfmb74.lua:29: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('([aeiou])', function(c) return c:lower() end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqokj37se.lua:20:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpqokj37se.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text:gsub(\"[\"\
    \ .. table.concat(vowels, \"\") .. \"]\", \"\")\n  return new_text\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp419k3c6u.lua:25:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp419k3c6u.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[string.sub(text, i, i)] then\n      new_text\
    \ = new_text .. string.sub(text, i, i)\n    end\n  end\n  return new_text\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkee8y083.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpkee8y083.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  local\
    \ vowels_count = 0\n  for i = 1, #text do\n    if vowels[text[i]] then\n     \
    \ vowels_count = vowels_count + 1\n    end\n  end\n  if vowels_count > 0 then\n\
    \    for i = 1, #text do\n      if vowels[text[i]] then\n        new_text = new_text:gsub(\"\
    [\" .. text[i] .. \"]\", \"\")\n      end\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp256uzf27.lua:35:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp256uzf27.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  for i\
    \ = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbjo2ivdr.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpbjo2ivdr.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[string.sub(text, i, i)] then\n      new_text\
    \ = new_text .. string.sub(text, i, i)\n    end\n  end\n  return new_text\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkee8y083.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpkee8y083.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'};\n  local new_text = '';\n  for\
    \ i = 1, #text, 1 do\n    if vowels[text[i]] then\n      new_text = new_text ..\
    \ text[i];\n    end\n  end\n  return new_text;\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4xcm1lpb.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp4xcm1lpb.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if text[i] ~= '' then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2pwmg44c.lua:17:\
    \ attempt to concatenate field '?' (a nil value)\nstack traceback:\n\t/tmp/tmp2pwmg44c.lua:17:\
    \ in function 'candidate'\n\t/tmp/tmp2pwmg44c.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text:gsub(\"[\"\
    \ .. table.concat(vowels, \"\") .. \"]\", \"\")\n  return new_text\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp419k3c6u.lua:25:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp419k3c6u.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('[aeiou]', '')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_gbesly_.lua:23:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp_gbesly_.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  for i\
    \ = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['..text[i]..'u]',\
    \ '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe50y775e.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpe50y775e.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[string.sub(text, i, i)] then\n      new_text\
    \ = new_text .. string.sub(text, i, i)\n    end\n  end\n  return new_text\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkee8y083.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpkee8y083.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text:gsub(\"\
    [\" .. table.concat(vowels, \"\") .. \"]\", \"\")\n  return new_text\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdjhkqdxk.lua:25:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpdjhkqdxk.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text\n  for\
    \ i = 1, #text do\n    if string.sub(text, i, i) == 'a' then\n      new_text =\
    \ string.sub(text, 1, i-1) + string.sub(text, i+1, #text)\n      break\n    end\n\
    \    if string.sub(text, i, i) == 'e' then\n      new_text = string.sub(text,\
    \ 1, i-1) + string.sub(text, i+1, #text)\n      break\n    end\n    if string.sub(text,\
    \ i, i) == 'i' then\n      new_text = string.sub(text, 1, i-1) + string.sub(text,\
    \ i+1, #text)\n      break\n    end\n    if string.sub(text, i, i) == 'o' then\n\
    \      new_text = string.sub(text, 1, i-1) + string.sub(text, i+1, #text)\n  \
    \    break\n    end\n    if string.sub(text, i, i) == 'u' then\n      new_text\
    \ = string.sub(text, 1, i-1) + string.sub(text, i+1, #text)\n      break\n   \
    \ end\n    if string.sub(text, i, i) == 'y' then\n      new_text = string.sub(text,\
    \ 1, i-1) + string.sub(text, i+1, #text)\n      break\n    end\n  end\n  return\
    \ new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpko76svr1.lua:17:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmpko76svr1.lua:17:\
    \ in function 'candidate'\n\t/tmp/tmpko76svr1.lua:48: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text\n  local\
    \ vowels_count = 0\n  for i = 1, #text do\n    if vowels[text[i]] then\n     \
    \ vowels_count = vowels_count + 1\n    end\n  end\n  if vowels_count > 0 then\n\
    \    new_text = new_text:gsub('([' .. table.concat(vowels, '') .. '])', '')\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxm4nsx3s.lua:31:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpxm4nsx3s.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplaty9mfy.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmplaty9mfy.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text:gsub(\"\
    [\" .. table.concat(vowels, \"\") .. \"]\", \"\")\n  return new_text\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdjhkqdxk.lua:25:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpdjhkqdxk.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  local\
    \ vowels_count = 0\n  for i = 1, #text do\n    if vowels[text[i]] then\n     \
    \ vowels_count = vowels_count + 1\n    end\n  end\n  if vowels_count > 0 then\n\
    \    new_text = new_text:gsub('([' .. table.concat(vowels, '') .. '])', '')\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9dfxqowf.lua:31:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp9dfxqowf.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n   \
    \   new_text = new_text .. char\n    end\n  end\n  return new_text\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpohcw727p.lua:28:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpohcw727p.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'} -- list of vowels\n  local new_text\
    \ = ''\n  for i = 1, #text do\n    if text[i] == 'a' or text[i] == 'e' or text[i]\
    \ == 'i' or text[i] == 'o' or text[i] == 'u' then\n      new_text = new_text ..\
    \ text[i]\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4tl_crjw.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp4tl_crjw.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub(\"[aeiou]\", \"\")\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplwcz6psc.lua:23:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmplwcz6psc.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  local\
    \ vowels_count = 0\n  for i = 1, #text do\n    if text[i] == nil then\n      new_text\
    \ = new_text:sub(1, i)\n      break\n    end\n    if text[i] == 'a' or text[i]\
    \ == 'e' or text[i] == 'i' or text[i] == 'o' or text[i] == 'u' then\n      vowels_count\
    \ = vowels_count + 1\n    end\n  end\n  if vowels_count > 0 then\n    new_text\
    \ = new_text:gsub('a', '')\n    new_text = new_text:gsub('e', '')\n    new_text\
    \ = new_text:gsub('i', '')\n    new_text = new_text:gsub('o', '')\n    new_text\
    \ = new_text:gsub('u', '')\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5kg8hr5a.lua:39:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"a\"\nstack traceback:\n\t/tmp/tmp5kg8hr5a.lua:39:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text:gsub(\"[\"\
    \ .. table.concat(vowels, \"\") .. \"]\", \"\")\n  return new_text\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp419k3c6u.lua:25:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp419k3c6u.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  for i\
    \ = 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n \
    \     new_text = new_text:sub(1, i)\n    end\n  end\n  return new_text\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwhjdvymz.lua:28:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpwhjdvymz.lua:28: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n\
    \      new_text = new_text .. char\n    end\n  end\n  return new_text\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4lcj6tq6.lua:28:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp4lcj6tq6.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub(\"[aeiou]\", \"\")\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplwcz6psc.lua:23:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmplwcz6psc.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  for i\
    \ = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbjo2ivdr.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpbjo2ivdr.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[string.sub(text, i, i)] then\n      new_text\
    \ = new_text .. string.sub(text, i, i)\n    end\n  end\n  return new_text\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkee8y083.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpkee8y083.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  for i\
    \ = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbjo2ivdr.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpbjo2ivdr.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('([aeiou])', function(c) return c:lower() end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqokj37se.lua:20:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpqokj37se.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text:gsub(\"[\"\
    \ .. table.concat(vowels, \"\") .. \"]\", \"\")\n  return new_text\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp419k3c6u.lua:25:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp419k3c6u.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n\
    \      new_text = new_text .. char\n    end\n  end\n  return new_text\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4lcj6tq6.lua:28:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp4lcj6tq6.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplaty9mfy.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmplaty9mfy.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  local\
    \ vowels_count = 0\n  for i = 1, #text do\n    if vowels[text[i]] then\n     \
    \ vowels_count = vowels_count + 1\n    else\n      new_text = new_text:sub(1,i)\n\
    \    end\n  end\n  if vowels_count > 0 then\n    new_text = new_text:sub(1,#new_text)\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk5p9vum1.lua:33:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"a\"\nstack traceback:\n\t/tmp/tmpk5p9vum1.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text:gsub('(['\
    \ .. table.concat(vowels, '') .. '])', '')\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnjiga0q5.lua:25:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpnjiga0q5.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub(\"[aeiou]\", \"\")\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplwcz6psc.lua:23:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmplwcz6psc.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  for i\
    \ = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbjo2ivdr.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpbjo2ivdr.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  for i\
    \ = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbjo2ivdr.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpbjo2ivdr.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[string.sub(text, i, i)] then\n      new_text = new_text\
    \ .. string.sub(text, i, i)\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz3i1vpdi.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpz3i1vpdi.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('([aeiou])', function(c) return c:lower() end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqokj37se.lua:20:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpqokj37se.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  for i\
    \ = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbjo2ivdr.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpbjo2ivdr.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 0
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('[aAeEiIoOuU]', '')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('([aeiou])', function(c) return c:lower() end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqokj37se.lua:20:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpqokj37se.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if text[i] ~= nil then\n      if vowels[text[i]] then\n\
    \        new_text = new_text .. text[i]\n      end\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpogsv9gup.lua:29:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpogsv9gup.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplaty9mfy.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmplaty9mfy.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if text[i] ~= '' then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8oivn_y_.lua:17:\
    \ attempt to concatenate field '?' (a nil value)\nstack traceback:\n\t/tmp/tmp8oivn_y_.lua:17:\
    \ in function 'candidate'\n\t/tmp/tmp8oivn_y_.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n\
    \      new_text = new_text .. char\n    end\n  end\n  return new_text\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4lcj6tq6.lua:28:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp4lcj6tq6.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('([aeiou])', ''):gsub('([^aeiou])', '')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp083o0e0z.lua:20:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp083o0e0z.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[string.sub(text, i, i)] then\n      new_text = new_text\
    \ .. string.sub(text, i, i)\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz3i1vpdi.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpz3i1vpdi.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub(\"\
    [\" .. text[i] .. \"]\", \"\")\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa0985z34.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpa0985z34.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n\
    \      new_text = new_text .. char\n    end\n  end\n  return new_text\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4lcj6tq6.lua:28:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp4lcj6tq6.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  local\
    \ vowels_count = 0\n  for i = 1, #text do\n    if vowels[text[i]] then\n     \
    \ vowels_count = vowels_count + 1\n    end\n  end\n  if vowels_count > 0 then\n\
    \    new_text = new_text:gsub('([' .. table.concat(vowels, '') .. '])', '')\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9dfxqowf.lua:31:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp9dfxqowf.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub(\"\
    [\" .. text[i] .. \"]\", \"\")\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa0985z34.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpa0985z34.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text:gsub(\"[\"\
    \ .. table.concat(vowels, \"\") .. \"]\", \"\")\n  return new_text\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp419k3c6u.lua:25:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp419k3c6u.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('([aeiou])', ''):gsub('([aeiouy])', '')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw52jzs39.lua:23:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpw52jzs39.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if text[i] ~= '' then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2pwmg44c.lua:17:\
    \ attempt to concatenate field '?' (a nil value)\nstack traceback:\n\t/tmp/tmp2pwmg44c.lua:17:\
    \ in function 'candidate'\n\t/tmp/tmp2pwmg44c.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  for i\
    \ = 1, #vowels do\n    new_text = new_text:gsub('['..vowels[i]..'u]', '')\n  end\n\
    \  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4gdkoaqh.lua:28:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp4gdkoaqh.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[string.sub(text, i, i)] then\n      new_text = new_text\
    \ .. string.sub(text, i, i)\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz3i1vpdi.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpz3i1vpdi.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  local\
    \ vowels_count = 0\n  for i = 1, #text do\n    if vowels[text[i]] then\n     \
    \ vowels_count = vowels_count + 1\n      new_text = new_text:gsub('[' .. text[i]\
    \ .. ']', '')\n    end\n  end\n  if vowels_count > 0 then\n    new_text = new_text:gsub('['\
    \ .. vowels[#vowels] .. ']', '')\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84b3xqm1.lua:32:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp84b3xqm1.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('([aeiou])', function(c) return c:lower() end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqokj37se.lua:20:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpqokj37se.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n\
    \      new_text = new_text .. char\n    end\n  end\n  return new_text\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4lcj6tq6.lua:28:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp4lcj6tq6.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n   \
    \   new_text = new_text .. char\n    end\n  end\n  return new_text\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpohcw727p.lua:28:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpohcw727p.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'};\n  local new_text = text:gsub('[^'\
    \ .. table.concat(vowels, '') .. ']', '');\n  return new_text;\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6gn132h6.lua:22:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmp6gn132h6.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text\n  local\
    \ vowels_count = 0\n  for i = 1, #text do\n    if vowels[text[i]] then\n     \
    \ vowels_count = vowels_count + 1\n    end\n  end\n  if vowels_count > 0 then\n\
    \    new_text = new_text:gsub('a', '')\n    new_text = new_text:gsub('e', '')\n\
    \    new_text = new_text:gsub('i', '')\n    new_text = new_text:gsub('o', '')\n\
    \    new_text = new_text:gsub('u', '')\n    new_text = new_text:gsub('y', '')\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe4uifzcp.lua:36:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpe4uifzcp.lua:36: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplaty9mfy.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmplaty9mfy.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[string.sub(text, i, i)] then\n      new_text\
    \ = new_text .. string.sub(text, i, i)\n    end\n  end\n  return new_text\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkee8y083.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpkee8y083.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplaty9mfy.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmplaty9mfy.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  for i\
    \ = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbjo2ivdr.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpbjo2ivdr.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n\
    \      new_text = new_text .. char\n    end\n  end\n  return new_text\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4lcj6tq6.lua:28:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp4lcj6tq6.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n\
    \      new_text = new_text .. char\n    end\n  end\n  return new_text\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4lcj6tq6.lua:28:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp4lcj6tq6.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('([aeiou])', function(c) return c:lower() end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqokj37se.lua:20:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpqokj37se.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    local char = text:sub(i, i)\n    if vowels:find(char) ~=\
    \ nil then\n      new_text = new_text .. char\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfxyresi2.lua:17:\
    \ attempt to call method 'find' (a nil value)\nstack traceback:\n\t/tmp/tmpfxyresi2.lua:17:\
    \ in function 'candidate'\n\t/tmp/tmpfxyresi2.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text:gsub('(['\
    \ .. table.concat(vowels, '') .. '])', '')\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmn3e7tkq.lua:25:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpmn3e7tkq.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if text[i] ~= '' then\n      if text[i] ~= text[i] then\n\
    \        new_text = new_text .. text[i]\n      end\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbitnaudc.lua:29:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbitnaudc.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text:gsub(\"[\"\
    \ .. table.concat(vowels, \"\") .. \"]\", \"\")\n  return new_text\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp419k3c6u.lua:25:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp419k3c6u.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  for i\
    \ = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbjo2ivdr.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpbjo2ivdr.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text\n  for\
    \ i = 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n\
    \      new_text = new_text:sub(0, i-1) .. new_text:sub(i+1)\n    end\n  end\n\
    \  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgmgb9nyq.lua:28:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpgmgb9nyq.lua:28: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n\
    \      new_text = new_text .. char\n    end\n  end\n  return new_text\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4lcj6tq6.lua:28:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp4lcj6tq6.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n\
    \      new_text = new_text .. char\n    end\n  end\n  return new_text\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4lcj6tq6.lua:28:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp4lcj6tq6.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text:gsub('(['\
    \ .. table.concat(vowels, '') .. '])', '')\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnjiga0q5.lua:25:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpnjiga0q5.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  for i\
    \ = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['..text[i]..']',\
    \ '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4_kw9ujw.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp4_kw9ujw.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('([aeiou])', function(c) return c:lower() end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqokj37se.lua:20:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpqokj37se.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = text\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplaty9mfy.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmplaty9mfy.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text\n  for i\
    \ = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text:gsub('['\
    \ .. text[i] .. ']', '')\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbjo2ivdr.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpbjo2ivdr.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('([aeiou])', ''):gsub('([^aeiou])', '')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp083o0e0z.lua:20:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp083o0e0z.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if text[i] ~= '' then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8oivn_y_.lua:17:\
    \ attempt to concatenate field '?' (a nil value)\nstack traceback:\n\t/tmp/tmp8oivn_y_.lua:17:\
    \ in function 'candidate'\n\t/tmp/tmp8oivn_y_.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n   \
    \   new_text = new_text .. char\n    end\n  end\n  return new_text\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpohcw727p.lua:28:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpohcw727p.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('[aeiou]', '')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_gbesly_.lua:23:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp_gbesly_.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 0
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('[aAeEiIoOuU]', '')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if text[i] ~= '' then\n      if text[i] ~= ' ' then\n \
    \       if text[i] ~= '-' then\n          if text[i] ~= '#' then\n           \
    \ if text[i] ~= '!' then\n              if text[i] ~= '?' then\n             \
    \   if text[i] ~= '$' then\n                  if text[i] ~= '^' then\n       \
    \             if text[i] ~= '&' then\n                      if text[i] ~= '*'\
    \ then\n                        if text[i] ~= '(' then\n                     \
    \     if text[i] ~= ')' then\n                            if text[i] ~= '[' then\n\
    \                              if text[i] ~= ']' then\n                      \
    \          if text[i] ~= '|' then\n                                  if text[i]\
    \ ~= '-' then\n                                    if text[i] ~= '_' then\n  \
    \                                    if text[i] ~= '~' then\n                \
    \                        if text[i] ~= '^' then\n                            \
    \              if text[i] ~= '|' then\n                                      \
    \      if text[i] ~= '#' then\n                                              if\
    \ text[i] ~= '@' then\n                                                if text[i]\
    \ ~= '&' then\n                                                  if text[i] ~=\
    \ '*' then\n                                                    if text[i] ~=\
    \ '+' then\n                                                      if text[i] ~=\
    \ '=' then\n                                                        if text[i]\
    \ ~= '|' then\n                                                          if text[i]\
    \ ~= '#' then\n                                                            if\
    \ text[i] ~= '@' then\n                                                      \
    \        if text[i] ~= '&' then\n                                            \
    \                    if text[i] ~= '*' then\n                                \
    \                                  if text[i] ~= '+' then\n                  \
    \                                                  if text[i] ~= '=' then\n  \
    \                                                                    if text[i]\
    \ ~= '|' then\n                                                              \
    \          if text[i] ~= '#' then\n                                          \
    \                                if text[i] ~= '@' then\n                    \
    \                                                        if text[i] ~= '&' then\n\
    \                                                                  if text[i]\
    \ ~= '*' then\n                                                              \
    \      if text[i] ~= '+' then\n                                              \
    \                        if text[i] ~= '=' then\n                            \
    \                                            if text[i] ~= '|' then\n        \
    \                                                                  if text[i]\
    \ ~= '#' then\n                                                              \
    \              if text[i] ~= '@' then\n                                      \
    \                                        if text[i] ~= '&' then\n            \
    \                                                                    if text[i]\
    \ ~= '*' then\n                                                              \
    \                    if text[i] ~= '+' then\n                                \
    \                                                    if text[i] ~= '=' then\n\
    \                                                                            \
    \          if text[i] ~= '|' then\n                                          \
    \                                              if text[i] ~= '#\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpp2pa8lfz.lua:64: unfinished string near ''''#''

    '
  stdout: ''
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub(\"[aeiou]\", \"\")\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplwcz6psc.lua:23:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmplwcz6psc.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[string.sub(text, i, i)] then\n      new_text = new_text\
    \ .. string.sub(text, i, i)\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz3i1vpdi.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpz3i1vpdi.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 0
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('([aeiou])', ''):gsub('([aeiouAEIOU])', '')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    local char = text:sub(i, i)\n    if vowels[char] then\n   \
    \   new_text = new_text .. char\n    end\n  end\n  return new_text\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpohcw727p.lua:28:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpohcw727p.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text:gsub('(['\
    \ .. table.concat(vowels, '') .. '])', '')\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnjiga0q5.lua:25:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpnjiga0q5.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[string.sub(text, i, i)] then\n      new_text\
    \ = new_text .. string.sub(text, i, i)\n    end\n  end\n  return new_text\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkee8y083.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpkee8y083.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local new_text = ''\n  for\
    \ i = 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmsu0lse.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpbmsu0lse.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('([aeiou])', function(c)\n    return c:lower() end\n  end)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpzxn2hrjt.lua:15: '')'' expected (to close ''('' at line 13)
    near ''end''

    '
  stdout: ''
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text:gsub(\"[\"\
    \ .. table.concat(vowels, \"\") .. \"]\", \"\")\n  return new_text\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp419k3c6u.lua:25:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp419k3c6u.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('([aeiou])', function(c) return c:lower() end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqokj37se.lua:20:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpqokj37se.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  return text:gsub('([aeiou])', function(c) return c:lower() end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqokj37se.lua:20:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpqokj37se.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750218
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n--\
    \ 'bcdf'\n-- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n\
    -- 'B'\n-- >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = ''\n  for i =\
    \ 1, #text do\n    if vowels[text[i]] then\n      new_text = new_text .. text[i]\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63piz2f2.lua:27:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp63piz2f2.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218

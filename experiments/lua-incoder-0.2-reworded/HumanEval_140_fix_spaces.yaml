name: HumanEval_140_fix_spaces
language: lua
prompt: "-- Given a string text, replace all spaces in it with underscores, \n-- and\
  \ if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
  \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
  \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
  -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
  \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
  \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
  \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
  \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local spaces = text:gsub(' ', '_')\n  if spaces ~= text then\n  \
    \  spaces = text:gsub(' ', '_')\n    if spaces ~= text then\n      spaces = text:gsub('\
    \ ', '_')\n      if spaces ~= text then\n        spaces = text:gsub(' ', '_')\n\
    \      end\n    end\n  end\n  return spaces\nend", "  local spaces = text:gsub('\
    \ ', '_')\n  if spaces ~= text then\n    return text:gsub(' ', '_')\n  else\n\
    \    return text:gsub(' ', '-')\n  end\nend", "  local spaces = text:gsub(' ',\
    \ '_')\n  if spaces ~= text then\n    return text\n  else\n    local spaces =\
    \ text:gsub(' ', '_')\n    if spaces ~= text then\n      return text\n    else\n\
    \      local spaces = text:gsub(' ', '_')\n      if spaces ~= text then\n    \
    \    return text\n      else\n        local spaces = text:gsub(' ', '_')\n   \
    \     if spaces ~= text then\n          return text\n        else\n          local\
    \ spaces = text:gsub(' ', '_')\n          if spaces ~= text then\n           \
    \ return text\n          else\n            local spaces = text:gsub(' ', '_')\n\
    \            if spaces ~= text then\n              return text\n            else\n\
    \              local spaces = text:gsub(' ', '_')\n              if spaces ~=\
    \ text then\n                return text\n              else\n               \
    \ local spaces = text:gsub(' ', '_')\n                if spaces ~= text then\n\
    \                  return text\n                else\n                  local\
    \ spaces = text:gsub(' ', '_')\n                  if spaces ~= text then\n   \
    \                 return text\n                  else\n                    local\
    \ spaces = text:gsub(' ', '_')\n                    if spaces ~= text then\n \
    \                     return text\n                    else\n                \
    \      local spaces = text:gsub(' ', '_')\n                      if spaces ~=\
    \ text then\n                        return text\n                      else\n\
    \                        local spaces = text:gsub(' ', '_')\n                \
    \        if spaces ~= text then\n                          return text\n     \
    \                   else\n                          local spaces = text:gsub('\
    \ ', '_')\n                          return text\n                        end\n\
    \                      end\n                    end\n                  end\n \
    \               end\n              end\n            end\n          end\n     \
    \   end\n      end\n    end\n  end\nend", "  local spaces = text:gsub(' ', '_')\n\
    \  if spaces ~= text then\n    return spaces .. '-'\n  end\nend", "  local spaces\
    \ = text:gsub(' ', '_')\n  if spaces:gsub(' ', '') ~= spaces then\n    spaces\
    \ = spaces:gsub(' ', '-')\n  end\n  return spaces\nend", "  local spaces = text:gsub('\
    \ ', '_')\n  local spaces_count = spaces:gsub(' ', ''):gsub('%S+', '')\n  if spaces_count\
    \ > 2 then\n    spaces = spaces:gsub(' ', '-')\n  end\n  return spaces\nend",
  "  local spaces = text:gsub(' ', '_')\n  if spaces:gsub(' ', '') ~= spaces then\n\
    \    spaces = spaces:gsub(' ', '-')\n  end\n  return spaces\nend", "  local spaces\
    \ = text:gsub(' ', '_')\n  if spaces ~= text then\n    return spaces .. '-'\n\
    \  end\n  return text\nend", "  local spaces = text:gsub(' ', '_')\n  if spaces:gsub('\
    \ ', '') ~= spaces then\n    return text\n  end\n  local spaces = text:gsub('\
    \ ', '_')\n  local spaces = text:gsub(' ', '_')\n  if spaces:gsub(' ', '') ~=\
    \ spaces then\n    return text\n  end\n  local spaces = text:gsub(' ', '_')\n\
    \  local spaces = text:gsub(' ', '_')\n  if spaces:gsub(' ', '') ~= spaces then\n\
    \    return text\n  end\n  local spaces = text:gsub(' ', '_')\n  local spaces\
    \ = text:gsub(' ', '_')\n  if spaces:gsub(' ', '') ~= spaces then\n    return\
    \ text\n  end\n  local spaces = text:gsub(' ', '_')\n  local spaces = text:gsub('\
    \ ', '_')\n  if spaces:gsub(' ', '') ~= spaces then\n    return text\n  end\n\
    \  local spaces = text:gsub(' ', '_')\n  local spaces = text:gsub(' ', '_')\n\
    \  if spaces:gsub(' ', '') ~= spaces then\n    return text\n  end\n  local spaces\
    \ = text:gsub(' ', '_')\n  local spaces = text:gsub(' ', '_')\n  if spaces:gsub('\
    \ ', '') ~= spaces then\n    return text\n  end\n  local spaces = text:gsub('\
    \ ', '_')\n  local spaces = text:gsub(' ', '_')\n  if spaces:gsub(' ', '') ~=\
    \ spaces then\n    return text\n  end\n  local spaces = text:gsub(' ', '_')\n\
    \  local spaces = text:gsub(' ', '_')\n  if spaces:gsub(' ', '') ~= spaces then\n\
    \    return text\n  end\n  local spaces = text:gsub(' ', '_')\n  local spaces\
    \ = text:gsub(' ', '_')\n  if spaces:gsub(' ', '') ~= spaces then\n    return\
    \ text\n  end\n  local spaces = text:gsub(' ', '_')\n  local spaces = text:gsub('\
    \ ', '_')\n  if spaces:gsub(' ', '') ~= spaces then\n    return text\n  end\n\
    \  local spaces = text:gsub(' ', '_')\n  local spaces = text:gsub(' ', '_')\n\
    \  if spaces:gsub(' ', '') ~= spaces then\n    return text\n  end\n  local spaces\
    \ = text:gsub(' ', '_')\n  local spaces = text:gsub(' ', '_')\n  if spaces:gsub('\
    \ ', '') ~", "  local spaces = text:gsub(' ', '_')\n  if spaces ~= text then\n\
    \    return text:gsub(' ', '_')\n  end\n  local spaces = text:gsub(' ', '_')\n\
    \  if spaces ~= text then\n    return text:gsub(' ', '_')\n  end\n  return text\n\
    end", "  local spaces = text:gsub(' ', '_')\n  if spaces ~= text then\n    return\
    \ spaces .. '-'\n  end\n  return text\nend", "  local spaces = text:gsub(' ',\
    \ '_')\n  if spaces:gsub('  ', ' ')\n  then\n    return spaces:gsub('  ', '-')\n\
    \  else\n    return spaces\n  end\nend", "  local spaces = text:gsub(' ', '_')\n\
    \  if spaces ~= text then\n    spaces = text:gsub(' ', '_')\n  end\n  return spaces\n\
    end", "  local spaces = text:gsub(' ', '_')\n  if spaces ~= text then\n    return\
    \ text:gsub(' ', '_')\n  else\n    return text:gsub(' ', '_')\n  end\nend", " \
    \ local spaces = text:gsub(' ', '_')\n  if spaces:gsub(' ', '') ~= spaces then\n\
    \    return text\n  else\n    return spaces:gsub(' ', '-')\n  end\nend", "  local\
    \ spaces = text:gsub(' ', '_')\n  if spaces ~= text then\n    spaces = text:gsub('\
    \ ', '_')\n  end\n  return spaces\nend", "  local spaces = text:gsub(' ', '_')\n\
    \  if spaces ~= text then\n    return text:gsub(' ', '_')\n  else\n    return\
    \ text:gsub(' ', '-')\n  end\nend", "  local spaces = text:gsub(' ', '_')\n  if\
    \ spaces:gsub(' ', '') ~= spaces then\n    spaces = spaces:gsub(' ', '-')\n  end\n\
    \  return spaces\nend", "  local spaces = text:gsub(' ', '_')\n  if spaces:gsub('\
    \ ', '') ~= spaces then\n    spaces = spaces:gsub(' ', '-')\n  end\n  return spaces\n\
    end", "  local spaces = text:gsub(' ', '_')\n  if spaces ~= text then\n    spaces\
    \ = text:gsub(' ', '_')\n  end\n  return spaces\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_161_solve
language: lua
prompt: "-- You are given a string s.\n-- if s[i] is a letter, reverse its case from\
  \ lower to upper or vise versa, \n-- otherwise keep it as it is.\n-- If the string\
  \ contains no letters, reverse the string.\n-- The function should return the resulted\
  \ string.\n-- Examples\n-- >>> solve('1234')\n-- '4321'\n-- >>> solve('ab')\n--\
  \ 'AB'\n-- >>> solve('#a@C')\n-- '#A@c'\nlocal function solve(s)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = solve\n\
  \    lu.assertEquals(candidate('AsDf'), 'aSdF')\n    lu.assertEquals(candidate('1234'),\
  \ '4321')\n    lu.assertEquals(candidate('ab'), 'AB')\n    lu.assertEquals(candidate('#a@C'),\
  \ '#A@c')\n    lu.assertEquals(candidate('#AsdfW^45'), '#aSDFw^45')\n    lu.assertEquals(candidate('#6@2'),\
  \ '2@6#')\n    lu.assertEquals(candidate('#$a^D'), '#$A^d')\n    lu.assertEquals(candidate('#ccc'),\
  \ '#CCC')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local s = s:gsub(\"%l\", function (c)\n        if c:sub(1, 1) ==\
    \ 'a' then\n            return string.char(tonumber(c:sub(2, 2)), tonumber(c:sub(3,\
    \ 3)))\n        end\n        return c\n    end)\n    if s:sub(1, 1) ~= 'a' then\n\
    \        return s\n    end\n    local t = {}\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:sub(1, 1) ~= 'a' then\n            t[#t + 1] =\
    \ string.char(tonumber(c:sub(2, 2)), tonumber(c:sub(3, 3)))\n        else\n  \
    \          t[#t + 1] = c:sub(2, 2)\n        end\n    end\n    return table.concat(t,\
    \ \"\")\nend", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #s\
    \ do\n    if string.sub(s,i,i) ~= nil then\n      local c = string.sub(s,i,i)\n\
    \      if string.sub(c,1,1) ~= nil then\n        c = string.upper(c)\n      else\n\
    \        c = string.lower(c)\n      end\n      result = result .. c\n    end\n\
    \  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #s do\n  \
    \  local char = string.sub(s,i,i)\n    if string.find(string.lower(char), string.upper(char))\
    \ then\n      result = string.sub(string.upper(char),1,1) .. result .. string.sub(string.lower(char),1,1)\n\
    \    else\n      result = char .. result\n    end\n  end\n  return result\nend",
  "  local result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n  \
    \  if string.find(string.char(c),\"a\") == 1 then\n      result = string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.g",
  "  local result = \"\"\n  for i = 1, #s do\n    local char = string.sub(s,i,i)\n\
    \    if string.find(char, \"[A-Z]\") then\n      char = string.upper(char)\n \
    \   elseif string.find(char, \"[a-z]\") then\n      char = string.lower(char)\n\
    \    end\n    result = result .. char\n  end\n  return result\nend", "  local\
    \ result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.match(c,\
    \ \"^[a-zA-Z]+$\") then\n      c = string.upper(c)\n    else\n      c = string.lower(c)\n\
    \    end\n    result = result .. c\n  end\n  return result\nend", "    local result\
    \ = \"\"\n    for i = 1, #s do\n        local c = string.sub(s,i,i)\n        if\
    \ string.match(c, \"^[%a]$\") then\n            local upper = string.upper(c)\n\
    \            local lower = string.lower(c)\n            if upper ~= lower then\n\
    \                result = result .. upper\n            else\n                result\
    \ = result .. c\n            end\n        else\n            result = result ..\
    \ c\n        end\n    end\n    return result\nend", "  local result = \"\"\n \
    \ for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      local char = string.sub(s,i,i)\n\
    \      if string.find(string.char(string.ascii_lowercase),char) ~= nil then\n\
    \        char = string.upper(char)\n      else\n        char = string.lower(char)\n\
    \      end\n      result = result .. char\n    end\n  end\n  return result\nend",
  "  local result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n  \
    \  if string.match(c, \"^[%a]$\") then\n      c = string.upper(c)\n    elseif\
    \ string.match(c, \"^[%A]$\") then\n      c = string.lower(c)\n    end\n    result\
    \ = result .. c\n  end\n  return result\nend", "  local result = \"\"\n  for i\
    \ = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\
    \ + result\n    end\n  end\n  if #result == 0 then\n    return s\n  end\n  return\
    \ result\nend", "  local str=s:gsub(\"%l\",function(x)\n    if x:match(\"^[a-zA-Z]\"\
    ) then\n      return x:lower()\n    else\n      return x\n    end\n  end)\n  return\
    \ str:gsub(\"%u\",function(x)\n    if x:match(\"^[a-zA-Z]\") then\n      return\
    \ x:upper()\n    else\n      return x\n    end\n  end)\nend", "    local str =\
    \ \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n     \
    \       str = str .. string.sub(s,i,i)\n        else\n            str = str ..\
    \ string.sub(s,i,i)\n        end\n    end\n    return str\nend", "  local result\
    \ = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.match(\"\
    ^[%a]$\",c) then\n      result = string.gsub(string.upper(c),\"a\",string.lower(c))\n\
    \    else\n      result = string.gsub(c,\"a\",string.upper(c))\n    end\n  end\n\
    \  return result\nend", "    local str = ''\n    for i = 1, #s do\n        if\
    \ string.sub(s,i,i) ~= nil then\n            str = str .. string.sub(s,i,i)\n\
    \        else\n            str = str .. string.sub(s,i,#s)\n        end\n    end\n\
    \    return str\nend", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      local c = string.sub(s,i,i)\n      c = string.upper(c) ..\
    \ string.lower(c)\n      result = result .. c\n    else\n      result = result\
    \ .. string.sub(s,i,i)\n    end\n  end\n  return result\nend", "  local s = s:gsub(\"\
    %l\", toupper)\n  local s = s:gsub(\"%u\", tolower)\n  return s:gsub(\"%p\", toupper)\n\
    end", "    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n  \
    \              result = string.sub(s,i,i)\n            else\n                result\
    \ = string.upper(string.sub(s,i,i)) + result\n            end\n        else\n\
    \            result = string.upper(string.sub(s,i,i)) + result\n        end\n\
    \    end\n    return result\nend", "  local result = \"\"\n  for i = 1, #s do\n\
    \    if string.sub(s,i,i) ~= nil then\n      local char = string.sub(s,i,i)\n\
    \      if string.sub(char,1,1) ~= nil then\n        local upper = string.upper(char)\n\
    \        local lower = string.lower(char)\n        if upper ~= nil then\n    \
    \      char = upper\n        elseif lower ~= nil then\n          char = lower\n\
    \        else\n          char = char\n        end\n      end\n      result = result\
    \ .. char\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

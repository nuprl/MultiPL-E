name: HumanEval_161_solve
language: lua
prompt: "-- You are given a string s.\n-- if s[i] is a letter, reverse its case from\
  \ lower to upper or vise versa, \n-- otherwise keep it as it is.\n-- If the string\
  \ contains no letters, reverse the string.\n-- The function should return the resulted\
  \ string.\n-- Examples\n-- >>> solve('1234')\n-- '4321'\n-- >>> solve('ab')\n--\
  \ 'AB'\n-- >>> solve('#a@C')\n-- '#A@c'\nlocal function solve(s)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = solve\n\
  \    lu.assertEquals(candidate('AsDf'), 'aSdF')\n    lu.assertEquals(candidate('1234'),\
  \ '4321')\n    lu.assertEquals(candidate('ab'), 'AB')\n    lu.assertEquals(candidate('#a@C'),\
  \ '#A@c')\n    lu.assertEquals(candidate('#AsdfW^45'), '#aSDFw^45')\n    lu.assertEquals(candidate('#6@2'),\
  \ '2@6#')\n    lu.assertEquals(candidate('#$a^D'), '#$A^d')\n    lu.assertEquals(candidate('#ccc'),\
  \ '#CCC')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local s = s:gsub(\"%l\", function (c)\n        if c:sub(1, 1) ==\
    \ 'a' then\n            return string.char(tonumber(c:sub(2, 2)), tonumber(c:sub(3,\
    \ 3)))\n        end\n        return c\n    end)\n    if s:sub(1, 1) ~= 'a' then\n\
    \        return s\n    end\n    local t = {}\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:sub(1, 1) ~= 'a' then\n            t[#t + 1] =\
    \ string.char(tonumber(c:sub(2, 2)), tonumber(c:sub(3, 3)))\n        else\n  \
    \          t[#t + 1] = c:sub(2, 2)\n        end\n    end\n    return table.concat(t,\
    \ \"\")\nend", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #s\
    \ do\n    if string.sub(s,i,i) ~= nil then\n      local c = string.sub(s,i,i)\n\
    \      if string.sub(c,1,1) ~= nil then\n        c = string.upper(c)\n      else\n\
    \        c = string.lower(c)\n      end\n      result = result .. c\n    end\n\
    \  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #s do\n  \
    \  local char = string.sub(s,i,i)\n    if string.find(string.lower(char), string.upper(char))\
    \ then\n      result = string.sub(string.upper(char),1,1) .. result .. string.sub(string.lower(char),1,1)\n\
    \    else\n      result = char .. result\n    end\n  end\n  return result\nend",
  "  local result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n  \
    \  if string.find(string.char(c),\"a\") == 1 then\n      result = string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.g",
  "  local result = \"\"\n  for i = 1, #s do\n    local char = string.sub(s,i,i)\n\
    \    if string.find(char, \"[A-Z]\") then\n      char = string.upper(char)\n \
    \   elseif string.find(char, \"[a-z]\") then\n      char = string.lower(char)\n\
    \    end\n    result = result .. char\n  end\n  return result\nend", "  local\
    \ result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.match(c,\
    \ \"^[a-zA-Z]+$\") then\n      c = string.upper(c)\n    else\n      c = string.lower(c)\n\
    \    end\n    result = result .. c\n  end\n  return result\nend", "    local result\
    \ = \"\"\n    for i = 1, #s do\n        local c = string.sub(s,i,i)\n        if\
    \ string.match(c, \"^[%a]$\") then\n            local upper = string.upper(c)\n\
    \            local lower = string.lower(c)\n            if upper ~= lower then\n\
    \                result = result .. upper\n            else\n                result\
    \ = result .. c\n            end\n        else\n            result = result ..\
    \ c\n        end\n    end\n    return result\nend", "  local result = \"\"\n \
    \ for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      local char = string.sub(s,i,i)\n\
    \      if string.find(string.char(string.ascii_lowercase),char) ~= nil then\n\
    \        char = string.upper(char)\n      else\n        char = string.lower(char)\n\
    \      end\n      result = result .. char\n    end\n  end\n  return result\nend",
  "  local result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n  \
    \  if string.match(c, \"^[%a]$\") then\n      c = string.upper(c)\n    elseif\
    \ string.match(c, \"^[%A]$\") then\n      c = string.lower(c)\n    end\n    result\
    \ = result .. c\n  end\n  return result\nend", "  local result = \"\"\n  for i\
    \ = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\
    \ + result\n    end\n  end\n  if #result == 0 then\n    return s\n  end\n  return\
    \ result\nend", "  local str=s:gsub(\"%l\",function(x)\n    if x:match(\"^[a-zA-Z]\"\
    ) then\n      return x:lower()\n    else\n      return x\n    end\n  end)\n  return\
    \ str:gsub(\"%u\",function(x)\n    if x:match(\"^[a-zA-Z]\") then\n      return\
    \ x:upper()\n    else\n      return x\n    end\n  end)\nend", "    local str =\
    \ \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n     \
    \       str = str .. string.sub(s,i,i)\n        else\n            str = str ..\
    \ string.sub(s,i,i)\n        end\n    end\n    return str\nend", "  local result\
    \ = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.match(\"\
    ^[%a]$\",c) then\n      result = string.gsub(string.upper(c),\"a\",string.lower(c))\n\
    \    else\n      result = string.gsub(c,\"a\",string.upper(c))\n    end\n  end\n\
    \  return result\nend", "    local str = ''\n    for i = 1, #s do\n        if\
    \ string.sub(s,i,i) ~= nil then\n            str = str .. string.sub(s,i,i)\n\
    \        else\n            str = str .. string.sub(s,i,#s)\n        end\n    end\n\
    \    return str\nend", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      local c = string.sub(s,i,i)\n      c = string.upper(c) ..\
    \ string.lower(c)\n      result = result .. c\n    else\n      result = result\
    \ .. string.sub(s,i,i)\n    end\n  end\n  return result\nend", "  local s = s:gsub(\"\
    %l\", toupper)\n  local s = s:gsub(\"%u\", tolower)\n  return s:gsub(\"%p\", toupper)\n\
    end", "    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n  \
    \              result = string.sub(s,i,i)\n            else\n                result\
    \ = string.upper(string.sub(s,i,i)) + result\n            end\n        else\n\
    \            result = string.upper(string.sub(s,i,i)) + result\n        end\n\
    \    end\n    return result\nend", "  local result = \"\"\n  for i = 1, #s do\n\
    \    if string.sub(s,i,i) ~= nil then\n      local char = string.sub(s,i,i)\n\
    \      if string.sub(char,1,1) ~= nil then\n        local upper = string.upper(char)\n\
    \        local lower = string.lower(char)\n        if upper ~= nil then\n    \
    \      char = upper\n        elseif lower ~= nil then\n          char = lower\n\
    \        else\n          char = char\n        end\n      end\n      result = result\
    \ .. char\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "  local newS = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil\
    \ then\n      newS = string.sub(s,i,i)\n    else\n      newS = newS .. string.sub(s,i,#s)\n\
    \    end\n  end\n  return newS\nend", "  local result = \"\"\n  for i = 1, #s\
    \ do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "  local s = s:gsub(\"%l\", string.lower)\n  local s = s:gsub(\"%u\", string.upper)\n\
    \  local s = s:gsub(\"%S\", string.upper)\n  return s\nend", "  local result =\
    \ \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      local\
    \ char = string.sub(s,i,i)\n      if char >= 'a' and char <= 'z' then\n      \
    \  char = string.upper(char)\n      elseif char >= 'A' and char <= 'Z' then\n\
    \        char = string.lower(char)\n      else\n        char = char\n      end\n\
    \      result = result .. char\n    end\n  end\n  return result\nend", "  local\
    \ result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.find(string.char(c),\"\
    a\") then\n      c = string.upper(c)\n    elseif string.find(string.char(c),\"\
    A\") then\n      c = string.lower(c)\n    end\n    result = result .. c\n  end\n\
    \  return result\nend", "    local s = string.lower(s)\n    local new_s = \"\"\
    \n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n           \
    \ if string.sub(s,i,i) ~= string.sub(s,i,i) then\n                new_s = string.sub(s,i,i)\n\
    \            else\n                new_s = string.upper(string.sub(s,i,i))\n \
    \           end\n        else\n            new_s = string.sub(s,i,i)\n       \
    \ end\n    end\n    return new_s\nend", "  local str = ''\n  for i = 1, #s do\n\
    \    if string.sub(s,i,i) ~= nil then\n      str = str .. string.sub(s,i,i)\n\
    \    else\n      str = str .. string.sub(s,i,#s)\n    end\n  end\n  return str:reverse()\n\
    end", "  local result = \"\"\n  for i = 1, #s do\n    local char = string.sub(s,i,i)\n\
    \    if string.match(char, \"^[%a%A]+$\") then\n      result = string.gsub(string.upper(char),\
    \ char, function(c)\n        return string.lower(c)\n      end)\n    else\n  \
    \    result = char\n    end\n  end\n  return result\nend", "  local result = \"\
    \"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "  local str = ''\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n\
    \      if string.sub(s,i,i) ~= string.sub(s,i,i) then\n        str = string.sub(s,i,i)\n\
    \      else\n        str = string.upper(str)\n      end\n    else\n      str =\
    \ string.upper(str)\n    end\n  end\n  return str\nend", "  local result = ''\n\
    \  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~=\
    \ nil then\n      local char = string.sub(s,i,i)\n      if string.sub(char,1,1)\
    \ ~= nil then\n        char = string.upper(char)\n      else\n        char = string.lower(char)\n\
    \      end\n      result = result .. char\n    end\n  end\n  if #result == 0 then\n\
    \    result = s\n  end\n  return result\nend", "  local result = \"\"\n  for i\
    \ = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n        result = string.sub(s,i,i) + result\n   \
    \   else\n        result = string.sub(s,i,i) + result\n      end\n    else\n \
    \     result = string.sub(s,i,i) + result\n    end\n  end\n  return result\nend",
  "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n\
    \      local c = string.sub(s,i,i)\n      if string.sub(c,1,1) ~= nil then\n \
    \       c = string.upper(c)\n      else\n        c = string.lower(c)\n      end\n\
    \      result = result .. c\n    end\n  end\n  return result\nend", "  local result\
    \ = \"\"\n  for i = 1, #s do\n    local char = string.sub(s,i,i)\n    if string.find(string.lower(char),\
    \ string.upper(char)) then\n      result = string.sub(string.upper(char),1,1)\
    \ .. result .. string.sub(string.lower(char),1,1)\n    else\n      result = char\
    \ .. result\n    end\n  end\n  return result\nend", "  local result = \"\"\n \
    \ for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.match(c, \"\
    ^[%w]$\") then\n      c = string.upper(c)\n    elseif string.match(c, \"^[%W]$\"\
    ) then\n      c = string.lower(c)\n    end\n    result = result .. c\n  end\n\
    \  return result\nend", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      local char = string.sub(s,i,i)\n      if string.sub(s,i,i)\
    \ ~= nil then\n        if char == \"a\" then\n          result = string.sub(s,i,i)\
    \ + result\n        elseif char == \"A\" then\n          result = string.sub(s,i,i)\
    \ + result\n        elseif char == \"b\" then\n          result = string.sub(s,i,i)\
    \ + result\n        elseif char == \"B\" then\n          result = string.sub(s,i,i)\
    \ + result\n        elseif char == \"c\" then\n          result = string.sub(s,i,i)\
    \ + result\n        elseif char == \"C\" then\n          result = string.sub(s,i,i)\
    \ + result\n        else\n          result = string.sub(s,i,i) + result\n    \
    \    end\n      end\n    end\n  end\n  return result\nend", "  local result =\
    \ \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result\
    \ = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n    end\n\
    \  end\n  return result\nend", "  local t = {}\n  for i = 1, #s do\n    if s[i]\
    \ ~= nil then\n      t[#t + 1] = s[i]\n    end\n  end\n  if #t == 0 then\n   \
    \ return s\n  end\n  local result = {}\n  local index = 1\n  while #t > 0 do\n\
    \    if t[index] == nil then\n      t[index] = t[#t]\n      t[#t] = nil\n    else\n\
    \      local c = t[index]\n      if c ~= nil then\n        if c == 'a' then\n\
    \          c = 'A'\n        elseif c == 'A' then\n          c = 'a'\n        elseif\
    \ c == 'b' then\n          c = 'B'\n        elseif c == 'B' then\n          c\
    \ = 'b'\n        elseif c == 'c' then\n          c = 'C'\n        elseif c ==\
    \ 'C' then\n          c = 'c'\n        elseif c == 'd' then\n          c = 'D'\n\
    \        elseif c == 'D' then\n          c = 'd'\n        elseif c == 'e' then\n\
    \          c = 'E'\n        elseif c == 'E' then\n          c = 'e'\n        elseif\
    \ c == 'f' then\n          c = 'F'\n        elseif c == 'F' then\n          c\
    \ = 'f'\n        elseif c == 'g' then\n          c = 'G'\n        elseif c ==\
    \ 'G' then\n          c = 'g'\n        elseif c == 'h' then\n          c = 'H'\n\
    \        elseif c == 'H' then\n          c = 'h'\n        elseif c == 'i' then\n\
    \          c = 'I'\n        elseif c == 'I' then\n          c = 'i'\n        elseif\
    \ c == 'j' then\n          c = 'J'\n        elseif c == 'J' then\n          c\
    \ = 'j'\n        elseif c == 'k' then\n          c = 'K'\n        elseif c ==\
    \ 'K' then\n          c = 'k'\n        elseif c == 'l' then\n          c = 'L'\n\
    \        elseif c == 'L' then\n          c = 'l'\n        elseif c == 'm' then\n\
    \          c = 'M'\n        elseif c == 'M' then\n          c = 'm'\n        elseif\
    \ c == 'n' then\n          c = 'N'\n        elseif c == 'N' then\n          c\
    \ = 'n'\n        elseif c == 'o' then\n          c = 'O'\n        elseif c ==\
    \ 'O' then\n          c = 'o'\n", "    local result = \"\"\n    for i = 1, #s\
    \ do\n        local c = string.sub(s,i,i)\n        if string.find(string.char(c),\"\
    a\") == 1 then\n            result = string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(",
  "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= \"\" then\n\
    \      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "    local result = ''\n    for i = 1,\
    \ #s do\n        if string.sub(s,i,i) ~= nil then\n            local char = string.sub(s,i,i)\n\
    \            if string.find(string.upper(char),char) then\n                char\
    \ = string.upper(char)\n            elseif string.find(string.lower(char),char)\
    \ then\n                char = string.lower(char)\n            end\n         \
    \   result = result .. char\n        else\n            result = result .. string.sub(s,i,i)\n\
    \        end\n    end\n    return result\nend", "  local str = ''\n  for i = 1,\
    \ #s do\n    if string.sub(s,i,i) ~= nil then\n      str = str .. string.sub(s,i,i)\n\
    \    else\n      str = str .. string.sub(s,i,i)\n    end\n  end\n  return str:reverse()\n\
    end", "  s = string.lower(s)\n  local letters = {}\n  for i = 1, #s do\n    if\
    \ string.sub(s,i,i) ~= nil then\n      table.insert(letters, string.sub(s,i,i))\n\
    \    end\n  end\n  if #letters == 0 then\n    return s\n  end\n  local result\
    \ = \"\"\n  for i = 1, #letters do\n    local c = letters[i]\n    if string.find(string.upper(c),\
    \ string.upper(c)) then\n      result = string.upper(c):sub(1,1):upper():sub(2)..string.upper(c):sub(3)\n\
    \    else\n      result = string.upper(c):sub(1,1):upper():sub(2)..c\n    end\n\
    \  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #s do\n  \
    \  if string.sub(s,i,i) ~= nil then\n      local char = string.sub(s,i,i)\n  \
    \    if string.find(string.upper(char), string.upper(char)) then\n        char\
    \ = string.upper(char)\n      elseif string.find(string.lower(char), string.lower(char))\
    \ then\n        char = string.lower(char)\n      end\n      result = result ..\
    \ char\n    end\n  end\n  return result\nend", "  local newS = \"\"\n  for i =\
    \ 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i) ~=\
    \ string.sub(s,i,i) then\n        newS = newS .. string.sub(s,i,i)\n      else\n\
    \        newS = newS .. string.upper(string.sub(s,i,i))\n      end\n    else\n\
    \      newS = newS .. string.sub(s,i,i)\n    end\n  end\n  return newS\nend",
  "    local result = \"\"\n    for i = 1, #s do\n        local char = string.sub(s,i,i)\n\
    \        if char:sub(1,1) == \"#\" then\n            char = string.upper(char)\n\
    \        elseif char:sub(1,1) == \"@\" then\n            char = string.lower(char)\n\
    \        end\n        result = result .. char\n    end\n    return result\nend",
  "  local result = \"\"\n  for i = 1, #s do\n    local char = string.sub(s,i,i)\n\
    \    if string.match(char, \"^[%w]$\") then\n      result = string.gsub(string.lower(char),\
    \ string.upper, string.upper, result)\n    else\n      result = string.gsub(string.upper(char),\
    \ string.lower, string.lower, result)\n    end\n  end\n  return result\nend",
  "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n\
    \      local c = string.sub(s,i,i)\n      if string.sub(c,1,1) ~= nil then\n \
    \       c = string.upper(c)\n      else\n        c = string.lower(c)\n      end\n\
    \      result = result .. c\n    end\n  end\n  return result\nend", "  local result\
    \ = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.find(c,\
    \ \"[A-Za-z]\") then\n      c = string.upper(c)\n    elseif string.find(c, \"\
    [a-z]\") then\n      c = string.lower(c)\n    end\n    result = result .. c\n\
    \  end\n  return result\nend", "  local str=s\n  local res=\"\"\n  local count=0\n\
    \  local letters={}\n  local letter\n  for letter in str:gmatch(\"[%a]+\") do\n\
    \    letters[#letters+1]=letter\n  end\n  for i=1,#letters do\n    letter=letters[i]\n\
    \    if letter:byte()>127 then\n      letter=letter:upper()\n    else\n      letter=letter:lower()\n\
    \    end\n    res=res..letter\n    count=count+1\n  end\n  if count==0 then\n\
    \    return s\n  end\n  return res\nend", "  local str = ''\n  for i = 1, #s do\n\
    \    if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i) ~= string.sub(s,i,i)\
    \ then\n        str = string.sub(s,i,i)\n      else\n        str = string.upper(string.sub(s,i,i))\n\
    \      end\n    else\n      str = string.sub(s,i,i)\n    end\n  end\n  return\
    \ str\nend", "  local s = s:gsub(\"%l\", function(c) return string.upper(c) end)\
    \ -- convert all letters to uppercase\n  local s = s:gsub(\"%u\", function(c)\
    \ return string.lower(c) end) -- convert all letters to lowercase\n  local s =\
    \ s:gsub(\"%S\", function(c) return string.char(c) end) -- convert all letters\
    \ to their ASCII code\n  local s = s:gsub(\"%p\", function(c) return string.char(c)\
    \ end) -- convert all letters to their ASCII code\n  local s = s:gsub(\"%S\",\
    \ function(c) return string.char(c) end) -- convert all letters to their ASCII\
    \ code\n  local s = s:gsub(\"%p\", function(c) return string.char(c) end) -- convert\
    \ all letters to their ASCII code\n  local s = s:gsub(\"%S\", function(c) return\
    \ string.char(c) end) -- convert all letters to their ASCII code\n  local s =\
    \ s:gsub(\"%p\", function(c) return string.char(c) end) -- convert all letters\
    \ to their ASCII code\n  local s = s:gsub(\"%S\", function(c) return string.char(c)\
    \ end) -- convert all letters to their ASCII code\n  local s = s:gsub(\"%p\",\
    \ function(c) return string.char(c) end) -- convert all letters to their ASCII\
    \ code\n  local s = s:gsub(\"%S\", function(c) return string.char(c) end) -- convert\
    \ all letters to their ASCII code\n  local s = s:gsub(\"%p\", function(c) return\
    \ string.char(c) end) -- convert all letters to their ASCII code\n  local s =\
    \ s:gsub(\"%S\", function(c) return string.char(c) end) -- convert all letters\
    \ to their ASCII code\n  local s = s:gsub(\"%p\", function(c) return string.char(c)\
    \ end) -- convert all letters to their ASCII code\n  local s = s:gsub(\"%S\",\
    \ function(c) return string.char(c) end) -- convert all letters to their ASCII\
    \ code\n  local s = s:gsub(\"%p\", function(c) return string.char(c) end) -- convert\
    \ all letters to their ASCII code\n  local s = s:gsub(\"%S\", function(c) return\
    \ string.char(c) end) -- convert all letters to their ASCII code\n  local s =\
    \ s:gsub(\"%p\", function(c) return string.char(c) end) -- convert all letters\
    \ to their ASCII code\n  local s = s:gsub(\"%S\", function(c) return string.char(c)\
    \ end) -- convert all letters to their ASCII code\n  local s = s:gsub(\"%p\",\
    \ function(c) return string.char(c) end) -- convert all letter", "  local result\
    \ = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.match(\"\
    ^[%w]\", c) then\n      c = string.upper(c)\n    elseif string.match(\"^[%W]\"\
    , c) then\n      c = string.lower(c)\n    end\n    result = result .. c\n  end\n\
    \  return result\nend", "  local result = \"\"\n  for i = 1, #s do\n    local\
    \ c = string.sub(s,i,i)\n    if string.match(\"^[%a]\", c) then\n      c = string.upper(c)\n\
    \    else\n      c = string.lower(c)\n    end\n    result = result .. c\n  end\n\
    \  return result\nend", "    local result = \"\"\n    for i = 1, #s do\n     \
    \   if string.sub(s,i,i) ~= nil then\n            local char = string.sub(s,i,i)\n\
    \            if string.find(string.char(string.upper(char)), string.upper(char))\
    \ then\n                char = string.upper(char)\n            elseif string.find(string.char(string.lower(char)),\
    \ string.lower(char)) then\n                char = string.lower(char)\n      \
    \      end\n            result = result .. char\n        else\n            result\
    \ = result .. string.sub(s,i,i)\n        end\n    end\n    return result\nend",
  "  local str = ''\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.find(string.char(c),'a')\
    \ then\n      str = string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(",
  "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n\
    \      local c = string.sub(s,i,i)\n      if string.sub(c,1,1) ~= nil then\n \
    \       local lc = string.lower(c)\n        local uc = string.upper(c)\n     \
    \   if string.sub(lc,1,1) ~= nil then\n          result = result .. string.sub(lc,1,1)\n\
    \        elseif string.sub(uc,1,1) ~= nil then\n          result = result .. string.sub(uc,1,1)\n\
    \        else\n          result = result .. c\n        end\n      else\n     \
    \   result = result .. c\n      end\n    end\n  end\n  return result\nend", " \
    \ s = string.lower(s)\n  local new_s = ''\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      if string.sub(s,i,i) ~= string.sub(s,i,i) then\n        new_s\
    \ = string.sub(s,i,i)\n      else\n        new_s = string.upper(string.sub(s,i,i))\n\
    \      end\n    else\n      new_s = string.sub(s,i,i)\n    end\n  end\n  return\
    \ new_s\nend", "    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n  \
    \              result = string.sub(s,i,i)\n            else\n                result\
    \ = string.upper(string.sub(s,i,i)) + result\n            end\n        else\n\
    \            result = string.upper(string.sub(s,i,i)) + result\n        end\n\
    \    end\n    return result\nend", "  local s = string.lower(s)\n  for i = 1,\
    \ #s do\n    if string.sub(s,i,i) ~= nil then\n      s = string.upper(string.sub(s,i,i))\n\
    \    end\n  end\n  return s\nend", "    local s = string.lower(s)\n    local t\
    \ = {}\n    for i = 1, #s do\n        if s[i] ~= nil then\n            table.insert(t,\
    \ string.upper(string.sub(s,i,i)))\n        else\n            table.insert(t,\
    \ string.lower(string.sub(s,i,i)))\n        end\n    end\n    return table.concat(t,\
    \ \"\")\nend", "    local result = \"\"\n    for i = 1, #s do\n        local c\
    \ = string.sub(s,i,i)\n        if string.find(string.char(c),\"a\") then\n   \
    \         local t = string.upper(c)\n            string.gsub(t,\"a\",string.char(\"\
    A\"))\n            string.gsub(t,\"A\",string.char(\"a\"))\n            string.gsub(t,\"\
    c\",string.char(\"C\"))\n            string.gsub(t,\"C\",string.char(\"c\"))\n\
    \            string.gsub(t,\"b\",string.char(\"B\"))\n            string.gsub(t,\"\
    B\",string.char(\"b\"))\n            string.gsub(t,\"d\",string.char(\"D\"))\n\
    \            string.gsub(t,\"D\",string.char(\"d\"))\n            string.gsub(t,\"\
    e\",string.char(\"E\"))\n            string.gsub(t,\"E\",string.char(\"e\"))\n\
    \            string.gsub(t,\"f\",string.char(\"F\"))\n            string.gsub(t,\"\
    F\",string.char(\"f\"))\n            string.gsub(t,\"g\",string.char(\"G\"))\n\
    \            string.gsub(t,\"G\",string.char(\"g\"))\n            string.gsub(t,\"\
    h\",string.char(\"H\"))\n            string.gsub(t,\"H\",string.char(\"h\"))\n\
    \            string.gsub(t,\"i\",string.char(\"I\"))\n            string.gsub(t,\"\
    I\",string.char(\"i\"))\n            string.gsub(t,\"j\",string.char(\"J\"))\n\
    \            string.gsub(t,\"J\",string.char(\"j\"))\n            string.gsub(t,\"\
    k\",string.char(\"K\"))\n            string.gsub(t,\"K\",string.char(\"k\"))\n\
    \            string.gsub(t,\"l\",string.char(\"L\"))\n            string.gsub(t,\"\
    L\",string.char(\"l\"))\n            string.gsub(t,\"m\",string.char(\"M\"))\n\
    \            string.gsub(t,\"M\",string.char(\"m\"))\n            string.gsub(t,\"\
    n\",string.char(\"N\"))\n            string.gsub(t,\"N\",string.char(\"n\"))\n\
    \            string.gsub(t,\"o\",string.char(\"O\"))\n            string.gsub(t,\"\
    O\",string.char(\"o\"))\n            string.gsub(t,\"p\",string.char(\"P\"))\n\
    \            string.gsub(t,\"P\",string.char(\"p\"))\n            string.gsub(t,\"\
    q\",string.char(\"Q\"))\n            string.gsub(t,\"Q\",string.char(\"q\"))\n\
    \            string.g", "    local newS = \"\"\n    for i = 1, #s do\n       \
    \ if string.sub(s,i,i) ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i)\
    \ then\n                newS = newS .. string.sub(s,i,i)\n            else\n \
    \               newS = newS .. string.upper(string.sub(s,i,i))\n            end\n\
    \        else\n            newS = newS .. string.sub(s,i,i)\n        end\n   \
    \ end\n    return newS\nend", "  local result = \"\"\n  for i = 1, #s do\n   \
    \ local char = string.sub(s,i,i)\n    if string.match(char, \"^[a-zA-Z]+$\") then\n\
    \      result = string.gsub(string.lower(char), string.upper, string.lower)\n\
    \    else\n      result = char\n    end\n  end\n  return result\nend", "  local\
    \ s = string.lower(s)\n  local i, j = 1, #s\n  while i <= j do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      if string.sub(s,i,i) ~= string.sub(s,i,i) then\n        s\
    \ = string.upper(string.sub(s,i,i))\n      else\n        s = string.lower(string.sub(s,i,i))\n\
    \      end\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return s\nend", " \
    \ local s = string.lower(s)\n  local i, j = 1, #s\n  while i <= j do\n    if s[i]\
    \ ~= nil then\n      if s[i] >= 'a' and s[i] <= 'z' then\n        s[i] = s[i]\
    \ + 32\n      elseif s[i] >= 'A' and s[i] <= 'Z' then\n        s[i] = s[i] - 32\n\
    \      end\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return s\nend", " \
    \ local result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n \
    \   if string.match(c, \"^[%a%A]\") then\n      c = string.upper(c)\n    else\n\
    \      c = string.lower(c)\n    end\n    result = result .. c\n  end\n  return\
    \ result\nend", "  local result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n\
    \    if string.find(string.chars(c),\"a\") then\n      c = string.upper(c)\n \
    \   elseif string.find(string.chars(c),\"A\") then\n      c = string.lower(c)\n\
    \    end\n    result = result .. c\n  end\n  return result\nend", "    local s\
    \ = string.lower(s)\n    local t = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n  \
    \              t = string.sub(s,i,i)\n            else\n                t = string.sub(s,i,i)..t\n\
    \            end\n        else\n            t = string.sub(s,i,i)..t\n       \
    \ end\n    end\n    return string.lower(t)\nend", "  local result = \"\"\n  for\
    \ i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n        result = string.sub(s,i,i)\n      else\n\
    \        result = string.upper(string.sub(s,i,i))\n      end\n    else\n     \
    \ result = string.upper(string.sub(s,i,i))\n    end\n  end\n  return result\n\
    end", "  local s = string.lower(s)\n  local t = {}\n  for i = 1, #s do\n    if\
    \ string.sub(s,i,i) ~= nil then\n      table.insert(t,string.sub(s,i,i))\n   \
    \ end\n  end\n  if #t > 0 then\n    return table.concat(t, \"\")\n  else\n   \
    \ return s\n  end\nend", "    local s = s:gsub(\"%l\", toupper)\n    local s =\
    \ s:gsub(\"%u\", tolower)\n    return s:gsub(\"%a\", \"%A\"):gsub(\"%c\", \"%C\"\
    ):gsub(\"%b\", \"%B\")\nend\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"\
    #a@C\"))\nprint(solve(\"a\"))\nprint(solve(\"b\"))\nprint(solve(\"c\"))\nprint(solve(\"\
    d\"))\nprint(solve(\"e\"))\nprint(solve(\"f\"))\nprint(solve(\"g\"))\nprint(solve(\"\
    h\"))\nprint(solve(\"i\"))\nprint(solve(\"j\"))\nprint(solve(\"k\"))\nprint(solve(\"\
    l\"))\nprint(solve(\"m\"))\nprint(solve(\"n\"))\nprint(solve(\"o\"))\nprint(solve(\"\
    p\"))\nprint(solve(\"q\"))\nprint(solve(\"r\"))\nprint(solve(\"s\"))\nprint(solve(\"\
    t\"))\nprint(solve(\"u\"))\nprint(solve(\"v\"))\nprint(solve(\"w\"))\nprint(solve(\"\
    x\"))\nprint(solve(\"y\"))\nprint(solve(\"z\"))\nprint(solve(\"A\"))\nprint(solve(\"\
    B\"))\nprint(solve(\"C\"))\nprint(solve(\"D\"))\nprint(solve(\"E\"))\nprint(solve(\"\
    F\"))\nprint(solve(\"G\"))\nprint(solve(\"H\"))\nprint(solve(\"I\"))\nprint(solve(\"\
    J\"))\nprint(solve(\"K\"))\nprint(solve(\"L\"))\nprint(solve(\"M\"))\nprint(solve(\"\
    N\"))\nprint(solve(\"O\"))\nprint(solve(\"P\"))\nprint(solve(\"Q\"))\nprint(solve(\"\
    R\"))\nprint(solve(\"S\"))\nprint(solve(\"T\"))\nprint(solve(\"U\"))\nprint(solve(\"\
    V\"))\nprint(solve(\"W\"))\nprint(solve(\"X\"))\nprint(solve(\"Y\"))\nprint(solve(\"\
    Z\"))\nprint(solve(\"a\"))\nprint(solve(\"b\"))\nprint(solve(\"c\"))\nprint(solve(\"\
    d\"))\nprint(solve(\"e\"))\nprint(solve(\"f\"))\nprint(solve(\"g\"))\nprint(solve(\"\
    h\"))\nprint(solve(\"i\"))\nprint(solve(\"j\"))\nprint(solve(\"k\"))\nprint(solve(\"\
    l\"))\nprint(solve(\"m\"))\nprint(solve(\"n\"))\nprint(solve(\"o\"))\nprint(solve(\"\
    p\"))\nprint(solve(\"q\"))\nprint(solve(\"r\"))\nprint(solve(\"s\"))\nprint(solve(\"\
    t\"))\nprint(solve(\"", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local s = string.lower(s)\n  local\
    \ n = #s\n  local i = 0\n  local result = ''\n  while i < n do\n    if s[i] ~=\
    \ nil then\n      if s[i] ~= 'a' and s[i] ~= 'A' then\n        s[i] = string.upper(s[i])\n\
    \      end\n      result = result .. s[i]\n    else\n      result = result ..\
    \ s[i]\n    end\n    i = i + 1\n  end\n  return result\nend", "  local s = string.lower(s)\n\
    \  local i, j = 1, #s\n  while i < j do\n    if s[i] ~= nil then\n      if s[i]\
    \ ~= s[i] then\n        s[i] = string.upper(s[i])\n      else\n        s[i] =\
    \ string.lower(s[i])\n      end\n    end\n    i = i + 1\n    j = j - 1\n  end\n\
    \  return s\nend", "  local s = string.lower(s)\n  local new_s = ''\n  for i =\
    \ 1, #s do\n    if string.sub(s,i,i) ~= '' then\n      new_s = new_s .. string.sub(s,i,i)\n\
    \    else\n      new_s = new_s .. string.sub(s,i,i)\n    end\n  end\n  return\
    \ new_s\nend", "  local result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n\
    \    if string.find(string.char(c),\"a\") then\n      c = string.upper(c)\n  \
    \  elseif string.find(string.char(c),\"A\") then\n      c = string.lower(c)\n\
    \    end\n    result = result .. c\n  end\n  return result\nend", "    local s\
    \ = string.lower(s)\n    local t = {}\n    for i = 1, #s do\n        if s[i] ~=\
    \ nil then\n            local c = string.upper(s[i])\n            s[i] = c\n \
    \           t[#t + 1] = string.lower(c)\n        else\n            t[#t + 1] =\
    \ s[i]\n        end\n    end\n    return table.concat(t)\nend", "  local ret =\
    \ ''\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n        ret = string.sub(s,i,i)\n      else\n   \
    \     ret = string.upper(string.sub(s,i,i))\n      end\n    else\n      ret =\
    \ string.upper(string.sub(s,i,i))\n    end\n  end\n  return ret\nend", "  local\
    \ result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= \"\" then\n \
    \     result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "    local s = string.lower(s)\n    local\
    \ t = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n \
    \           local c = string.sub(s,i,i)\n            if string.sub(c,1,1) ~= nil\
    \ then\n                c = string.upper(c)\n            else\n              \
    \  c = string.lower(c)\n            end\n            table.insert(t,c)\n     \
    \   else\n            table.insert(t,string.sub(s,i,i))\n        end\n    end\n\
    \    return table.concat(t, \"\")\nend", "  local result = \"\"\n  for i = 1,\
    \ #s do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "  s = string.lower(s)\n  local result = \"\"\n  for i = 1, #s do\n    if\
    \ string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n    else\n\
    \      result = result .. string.sub(s,i,i)\n    end\n  end\n  return string.lower(result)\n\
    end", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~=\
    \ nil then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #s\
    \ do\n    local c = string.sub(s,i,i)\n    if string.match(\"[%a]\", c) then\n\
    \      c = string.upper(c)\n    else\n      c = string.lower(c)\n    end\n   \
    \ result = result .. c\n  end\n  return result\nend", "  local result = ''\n \
    \ for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~=\
    \ nil then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "    local s = s:gsub(\"%l\", string.upper)\n\
    \    local s = s:gsub(\"%u\", string.lower)\n    return s:gsub(\"%S\", string.upper)\n\
    end\n</cell>\n<cell>", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #s\
    \ do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "  local function helper(s)\n    local t = {}\n    for i = 1, #s do\n  \
    \    if s[i] ~= nil then\n        if s[i] >= 'a' and s[i] <= 'z' then\n      \
    \    t[#t + 1] = s[i] + 32\n        elseif s[i] >= 'A' and s[i] <= 'Z' then\n\
    \          t[#t + 1] = s[i] - 32\n        else\n          t[#t + 1] = s[i]\n \
    \       end\n      end\n    end\n    return table.concat(t, \"\")\n  end\n  return\
    \ helper(s)\nend", "  local new_s = ''\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      if string.sub(s,i,i) ~= string.sub(s,i,i) then\n        new_s\
    \ = string.sub(s,i,i)\n      else\n        new_s = string.upper(string.sub(s,i,i))\
    \ + new_s\n      end\n    else\n      new_s = string.upper(string.sub(s,i,i))\
    \ + new_s\n    end\n  end\n  return new_s\nend", "    local result = \"\"\n  \
    \  for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n            local\
    \ char = string.sub(s,i,i)\n            if char >= 'a' and char <= 'z' then\n\
    \                char = string.upper(char) or string.lower(char)\n           \
    \ else\n                char = char\n            end\n            result = result\
    \ .. char\n        end\n    end\n    return result\nend", "  local s = string.lower(s)\n\
    \  local i, j = 1, #s\n  while i <= j do\n    if s[i] ~= nil then\n      if s[i]\
    \ >= 'a' and s[i] <= 'z' then\n        s[i] = s[i] + 32\n      elseif s[i] >=\
    \ 'A' and s[i] <= 'Z' then\n        s[i] = s[i] - 32\n      end\n    end\n   \
    \ i = i + 1\n    j = j - 1\n  end\n  return s\nend", "    local result = \"\"\n\
    \    for i = 1, #s do\n        local c = string.sub(s,i,i)\n        if string.match(c,\
    \ \"^[%a]\") then\n            local upper = string.upper(c)\n            local\
    \ lower = string.lower(c)\n            if upper ~= lower then\n              \
    \  result = result .. upper\n            else\n                result = result\
    \ .. c\n            end\n        else\n            result = result .. c\n    \
    \    end\n    end\n    return result\nend", "  s = string.gsub(s, '[%a]', function(c)\n\
    \    if string.byte(c) then\n      c = string.upper(c)\n    else\n      c = string.lower(c)\n\
    \    end\n    return c\n  end)\n  if s == '' then\n    return s\n  end\n  local\
    \ result = s\n  for i = 1, #s do\n    if string.byte(s[i], 1) then\n      result\
    \ = string.gsub(result, string.sub(s[i], 1, 1), string.upper(string.sub(s[i],\
    \ 2)))\n    else\n      result = string.gsub(result, string.sub(s[i], 1, 1), string.lower(string.sub(s[i],\
    \ 2)))\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for i\
    \ = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "  local s = s:gsub(\"%l\", function(c) \n    if string.byte(c) ~= nil then\n\
    \      if string.byte(c) >= 65 and string.byte(c) <= 90 then\n        return string.byte(c)\
    \ - 32\n      else\n        return string.byte(c)\n      end\n    else\n     \
    \ return c\n    end\n  end)\n  if s:match(\"^[%a@%#]\") then\n    return s:gsub(\"\
    %l\", function(c) \n      if string.byte(c) ~= nil then\n        if string.byte(c)\
    \ >= 65 and string.byte(c) <= 90 then\n          return string.byte(c) + 32\n\
    \        else\n          return string.byte(c)\n        end\n      else\n    \
    \    return c\n      end\n    end)\n  else\n    return s\n  end\nend", "  s =\
    \ string.lower(s)\n  local letters = {}\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n\
    \    if string.find(string.char(c),'a') then\n      table.insert(letters,string.upper(c))\n\
    \    else\n      table.insert(letters,c)\n    end\n  end\n  if #letters == 0 then\n\
    \    return s\n  end\n  local s = ''\n  for i = 1, #letters do\n    s = s .. letters[i]\n\
    \  end\n  return s\nend", "    local s = string.lower(s)\n    local result = \"\
    \"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n         \
    \   if string.sub(s,i,i) ~= string.sub(s,i,i) then\n                result = string.sub(s,i,i)\n\
    \            else\n                result = string.sub(s,i,i):upper..string.sub(s,i,i+1)\n\
    \            end\n        else\n            result = string.sub(s,i,i):upper..result\n\
    \        end\n    end\n    return result\nend", "  local newS = \"\"\n  for i\
    \ = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      local c = string.sub(s,i,i)\n\
    \      if string.sub(c,1,1) ~= nil then\n        c = string.upper(c)\n      else\n\
    \        c = string.lower(c)\n      end\n      newS = newS .. c\n    end\n  end\n\
    \  return newS\nend", "  local s = string.lower(s)\n  local result = \"\"\n  for\
    \ i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = result .. string.sub(s,i,i)\n    end\n  end\n  return\
    \ string.lower(result)\nend", "  local result = \"\"\n  for i = 1, #s do\n   \
    \ if string.sub(s,i,i) ~= nil then\n      local c = string.sub(s,i,i)\n      local\
    \ upper = string.upper(c)\n      local lower = string.lower(c)\n      if upper\
    \ ~= nil then\n        c = upper\n      elseif lower ~= nil then\n        c =\
    \ lower\n      end\n    end\n    result = result .. c\n  end\n  return result\n\
    end", "  local s = string.lower(s)\n  local t = {}\n  for i = 1, #s do\n    if\
    \ string.sub(s,i,i) ~= nil then\n      t[#t+1] = string.sub(s,i,i)\n    end\n\
    \  end\n  if #t == 0 then\n    return s\n  end\n  local result = {}\n  for i =\
    \ 1, #t do\n    if t[i] ~= nil then\n      result[#result+1] = string.upper(t[i])\n\
    \    else\n      result[#result+1] = t[i]\n    end\n  end\n  return table.concat(result,\"\
    \")\nend", "    local s = string.lower(s)\n    local n = #s\n    local i = 0\n\
    \    while i < n do\n        if s[i] ~= nil then\n            local c = string.upper(s[i])\n\
    \            s[i] = c\n        end\n        i = i + 1\n    end\n    return s\n\
    end", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~=\
    \ nil then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local s = s:gsub(\"%l\", string.upper)\n\
    \  s = s:gsub(\"%L\", string.lower)\n  if s:match(\"^[a-zA-Z]+$\") then\n    return\
    \ s\n  else\n    return s:gsub(\"%l\", string.lower):gsub(\"%L\", string.upper)\n\
    \  end\nend", "  local result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n\
    \    if string.find(string.char(c),\"a\") then\n      c = string.upper(c)\n  \
    \  elseif string.find(string.char(c),\"A\") then\n      c = string.lower(c)\n\
    \    end\n    result = result .. c\n  end\n  return result\nend", "    local str\
    \ = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n   \
    \         str = string.sub(s,i,i)\n        else\n            str = string.sub(s,i,#s)\n\
    \        end\n    end\n    return str\nend", "  local ret = ''\n  for i = 1, #s\
    \ do\n    if s[i] ~= nil then\n      if s[i] >= 'a' and s[i] <= 'z' then\n   \
    \     s[i] = s[i] + 32\n      elseif s[i] >= 'A' and s[i] <= 'Z' then\n      \
    \  s[i] = s[i] - 32\n      end\n    end\n    ret = ret + s[i]\n  end\n  return\
    \ ret\nend", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local str=s:gsub(\"%l\",function(c)\n\
    \    if c==\"a\" then return \"A\" end\n    if c==\"b\" then return \"B\" end\n\
    \    if c==\"c\" then return \"C\" end\n    if c==\"d\" then return \"D\" end\n\
    \    if c==\"e\" then return \"E\" end\n    if c==\"f\" then return \"F\" end\n\
    \    if c==\"g\" then return \"G\" end\n    if c==\"h\" then return \"H\" end\n\
    \    if c==\"i\" then return \"I\" end\n    if c==\"j\" then return \"J\" end\n\
    \    if c==\"k\" then return \"K\" end\n    if c==\"l\" then return \"L\" end\n\
    \    if c==\"m\" then return \"M\" end\n    if c==\"n\" then return \"N\" end\n\
    \    if c==\"o\" then return \"O\" end\n    if c==\"p\" then return \"P\" end\n\
    \    if c==\"q\" then return \"Q\" end\n    if c==\"r\" then return \"R\" end\n\
    \    if c==\"s\" then return \"S\" end\n    if c==\"t\" then return \"T\" end\n\
    \    if c==\"u\" then return \"U\" end\n    if c==\"v\" then return \"V\" end\n\
    \    if c==\"w\" then return \"W\" end\n    if c==\"x\" then return \"X\" end\n\
    \    if c==\"y\" then return \"Y\" end\n    if c==\"z\" then return \"Z\" end\n\
    \    return c\n  end)\n  local res=str:gsub(\"%l\",function(c)\n    if c==\"A\"\
    \ then return \"a\" end\n    if c==\"B\" then return \"b\" end\n    if c==\"C\"\
    \ then return \"c\" end\n    if c==\"D\" then return \"d\" end\n    if c==\"E\"\
    \ then return \"e\" end\n    if c==\"F\" then return \"f\" end\n    if c==\"G\"\
    \ then return \"g\" end\n    if c==\"H\" then return \"h\" end\n    if c==\"I\"\
    \ then return \"i\" end\n    if c==\"J\" then return \"j\" end\n    if c==\"K\"\
    \ then return \"k\" end\n    if c==\"L\" then return \"l\" end\n    if c==\"M\"\
    \ then return \"m\" end\n    if c==\"N\" then return \"n\" end", "  local result\
    \ = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result\
    \ = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n    end\n\
    \  end\n  return result\nend", "  local s = string.lower(s)\n  local t = {}\n\
    \  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      table.insert(t,\
    \ string.sub(s,i,i))\n    end\n  end\n  table.sort(t)\n  local s = ''\n  for i\
    \ = 1, #t do\n    if string.sub(t,i,i) ~= nil then\n      s = s .. string.sub(t,i,i)\n\
    \    end\n  end\n  return s\nend", "    local new_s = ''\n    for i = 1, #s do\n\
    \        if string.sub(s,i,i) ~= nil then\n            if string.sub(s,i,i) ~=\
    \ string.sub(s,i,i) then\n                new_s = string.sub(s,i,i) + new_s\n\
    \            else\n                new_s = string.sub(s,i,i) + new_s\n       \
    \     end\n        else\n            new_s = string.sub(s,i,i) + new_s\n     \
    \   end\n    end\n    return new_s\nend", "  local result = ''\n  for i = 1, #s\
    \ do\n    local char = string.sub(s,i,i)\n    if string.match(char, \"^[a-zA-Z]+$\"\
    ) then\n      result = string.gsub(string.lower(char), string.upper, string.lower)\n\
    \    else\n      result = char\n    end\n  end\n  return result\nend", "  local\
    \ result = ''\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n    \
    \  result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n \
    \   end\n  end\n  return result\nend", "  local result = ''\n  for i = 1, #s do\n\
    \    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n    else\n\
    \      result = string.sub(s,i,#s)\n    end\n  end\n  return result\nend", " \
    \   local newS = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil\
    \ then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n         \
    \       newS = newS..string.sub(s,i,i)\n            else\n                newS\
    \ = newS..string.upper(string.sub(s,i,i))\n            end\n        else\n   \
    \         newS = newS..string.sub(s,i,i)\n        end\n    end\n    return newS\n\
    end", "  local s = string.lower(s)\n  local i, j = 1, #s\n  while i <= j do\n\
    \    if s[i] ~= nil then\n      if s[i] >= 'a' and s[i] <= 'z' then\n        s[i]\
    \ = s[i] + 32\n      elseif s[i] >= 'A' and s[i] <= 'Z' then\n        s[i] = s[i]\
    \ - 32\n      else\n        s[i] = s[i]\n      end\n    end\n    i = i + 1\n \
    \   j = j - 1\n  end\n  return s\nend", "  local result = \"\"\n  for i = 1, #s\
    \ do\n    local c = string.sub(s,i,i)\n    if string.match(\"^[%a]$\",c) then\n\
    \      result = string.gsub(string.gsub(c,\"[%a]\",string.upper),\"[%A]\",string.lower)\n\
    \    else\n      result = string.gsub(c,\"[%a]\",string.upper)\n    end\n  end\n\
    \  return result\nend", "  local s = string.lower(s)\n  local i, j = 1, #s\n \
    \ while i <= j do\n    if s[i] ~= nil then\n      if s[i] >= 'a' and s[i] <= 'z'\
    \ then\n        s[i] = s[i] + 32\n      elseif s[i] >= 'A' and s[i] <= 'Z' then\n\
    \        s[i] = s[i] - 32\n      end\n    end\n    i = i + 1\n    j = j - 1\n\
    \  end\n  return s\nend", "    local result = \"\"\n    for i = 1, #s do\n   \
    \     if string.sub(s,i,i) ~= nil then\n            local char = string.sub(s,i,i)\n\
    \            if string.sub(char,1,1) ~= nil then\n                char = string.upper(char)\n\
    \            else\n                char = string.lower(char)\n            end\n\
    \            result = result .. char\n        else\n            result = result\
    \ .. string.sub(s,i,i)\n        end\n    end\n    return result\nend", "  local\
    \ function helper(s,i,j)\n    if j > i then return s end\n    if s[i] ~= nil then\n\
    \      if s[i] >= 'a' and s[i] <= 'z' then\n        if s[i] ~= 'A' and s[i] ~=\
    \ 'a' then\n          s[i] = s[i] + 32\n        end\n      elseif s[i] >= 'A'\
    \ and s[i] <= 'Z' then\n        if s[i] ~= 'a' and s[i] ~= 'A' then\n        \
    \  s[i] = s[i] - 32\n        end\n      end\n      return helper(s,i+1,j-1)\n\
    \    end\n    return s\n  end\n  return helper(s,1,#s)\nend", "  local result\
    \ = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result\
    \ = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n    end\n\
    \  end\n  return result\nend", "    local str = ''\n    for i = 1, #s do\n   \
    \     if string.sub(s,i,i) ~= nil then\n            str = str .. string.sub(s,i,i)\n\
    \        else\n            str = str .. string.sub(s,i,i)\n        end\n    end\n\
    \    return str\nend", "  local result = \"\"\n  for i = 1, #s do\n    local char\
    \ = string.sub(s,i,i)\n    if string.match(char, \"^[%w]$\") then\n      result\
    \ = string.gsub(string.lower(char), char, function(c)\n        if string.match(c,\
    \ \"^[%w]$\") then\n          return string.upper(c)\n        else\n         \
    \ return c\n        end\n      end)\n    else\n      result = result .. char\n\
    \    end\n  end\n  return result\nend", "  local str = ''\n  for i = 1, #s do\n\
    \    if string.sub(s,i,i) ~= nil then\n      str = str .. string.sub(s,i,i)\n\
    \    else\n      str = str .. string.sub(s,i,i)\n    end\n  end\n  return str:reverse()\n\
    end", "  local result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n\
    \    if string.find(string.chars(c),\"a\") then\n      c = string.upper(c)\n \
    \   elseif string.find(string.chars(c),\"A\") then\n      c = string.lower(c)\n\
    \    end\n    result = result .. c\n  end\n  return result\nend", "  local str=s:gsub(\"\
    %l\",function(c)\n    if c==\"a\" then\n      return \"A\"\n    elseif c==\"A\"\
    \ then\n      return \"a\"\n    elseif c==\"#\" then\n      return \"#\"\n   \
    \ elseif c==\"@\" then\n      return \"@\"\n    else\n      return c\n    end\n\
    \  end)\n  if str:match(\"^%l+$\") then\n    return str:gsub(\"%l\",function(c)\n\
    \      if c==\"A\" then\n        return \"a\"\n      elseif c==\"a\" then\n  \
    \      return \"A\"\n      elseif c==\"#\" then\n        return \"#\"\n      elseif\
    \ c==\"@\" then\n        return \"@\"\n      else\n        return c\n      end\n\
    \    end)\n  else\n    return str\n  end\nend", "    local str = ''\n    for i\
    \ = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n            str = str\
    \ .. string.sub(s,i,i)\n        else\n            str = str .. string.sub(s,i,i)\n\
    \        end\n    end\n    return str\nend", "  local result = \"\"\n  for i =\
    \ 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      local char = string.sub(s,i,i)\n\
    \      if string.find(string.upper(char), char) then\n        char = string.upper(char)\n\
    \      elseif string.find(string.lower(char), char) then\n        char = string.lower(char)\n\
    \      end\n      result = result .. char\n    end\n  end\n  return result\nend",
  "  s = string.lower(s)\n  local new_s = ''\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      new_s = string.sub(s,i,i) + new_s\n    end\n  end\n  return\
    \ new_s\nend", "  local result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n\
    \    if string.find(string.char(c),\"a\") then\n      c = string.upper(c)\n  \
    \  elseif string.find(string.char(c),\"A\") then\n      c = string.lower(c)\n\
    \    end\n    result = result .. c\n  end\n  return result\nend", "  local function\
    \ helper(s,i,j)\n    if j > i then\n      local c = string.sub(s,i,j)\n      if\
    \ c == 'a' or c == 'A' then\n        return helper(s,i,j-1)\n      elseif c ==\
    \ 'b' or c == 'B' then\n        return helper(s,i+1,j-1)\n      elseif c == 'c'\
    \ or c == 'C' then\n        return helper(s,i+1,j)\n      else\n        return\
    \ c\n      end\n    end\n  end\n  return helper(s,1,#s)\nend", "    local result\
    \ = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n   \
    \         local char = string.sub(s,i,i)\n            if string.find(char, \"\
    [A-Za-z]\") then\n                char = string.upper(char)\n            else\n\
    \                char = string.lower(char)\n            end\n            result\
    \ = result .. char\n        else\n            result = result .. string.sub(s,i,i)\n\
    \        end\n    end\n    return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "  local s = s:gsub(\"%l\", function (c) \n    if string.match(c, \"^%l\"\
    ) then\n      c = string.upper(c)\n    else\n      c = string.lower(c)\n    end\n\
    \    return c\n  end)\n  if #s == 0 then\n    return s\n  end\n  local t = {}\n\
    \  for i = 1, #s do\n    t[#t + 1] = string.sub(s,i,i)\n  end\n  table.sort(t)\n\
    \  local s = ''\n  for i = 1, #t do\n    s = s .. t[i]\n  end\n  return s\nend",
  "  local s = string.lower(s)\n  local result = \"\"\n  for i = 1, #s do\n    if\
    \ string.sub(s,i,i) ~= nil then\n      result = result .. string.sub(s,i,i)\n\
    \    else\n      result = result .. string.sub(s,i,#s)\n    end\n  end\n  return\
    \ string.lower(result)\nend", "  local result = \"\"\n  for i = 1, #s do\n   \
    \ if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n    else\n\
    \      result = string.sub(s,i,#s)\n    end\n  end\n  return result\nend", " \
    \ s = string.lower(s)\n  local result = ''\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      result = result .. string.upper(string.sub(s,i,i))\n    else\n\
    \      result = result .. string.sub(s,i,i)\n    end\n  end\n  return string.lower(result)\n\
    end", "  local result = ''\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil\
    \ then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local result = ''\n  for i = 1, #s\
    \ do\n    if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i) ~= string.sub(s,i,i)\
    \ then\n        result = string.sub(s,i,i)..result\n      else\n        result\
    \ = string.sub(s,i,i)..result\n      end\n    else\n      result = string.sub(s,i,i)..result\n\
    \    end\n  end\n  return result\nend", "  local t = {}\n  for i = 1, #s do\n\
    \    local c = string.sub(s,i,i)\n    if string.find(c, \"[a-z]\") then\n    \
    \  table.insert(t, string.upper(c))\n    else\n      table.insert(t, c)\n    end\n\
    \  end\n  return table.concat(t, \"\")\nend", "  local result = \"\"\n  for i\
    \ = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "  local new_s = ''\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil\
    \ then\n      new_s = string.sub(s,i,i)\n    else\n      new_s = new_s .. string.sub(s,i,i)\n\
    \    end\n  end\n  return new_s\nend", "  local result = \"\"\n  for i = 1, #s\
    \ do\n    if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i) ~= string.sub(s,i,i)\
    \ then\n        result = string.sub(s,i,i)\n      else\n        result = string.sub(s,i,i)\
    \ + result\n      end\n    else\n      result = string.sub(s,i,i) + result\n \
    \   end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #s\
    \ do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "    local result = ''\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            local char = string.sub(s,i,i)\n            if string.find(string.lower(char),string.lower(char))\
    \ then\n                char = string.upper(char)\n            elseif string.find(string.upper(char),string.lower(char))\
    \ then\n                char = string.lower(char)\n            end\n         \
    \   result = result .. char\n        else\n            result = result .. string.sub(s,i,i)\n\
    \        end\n    end\n    return result\nend", "  local function helper(s)\n\
    \    local t = {}\n    for i = 1, #s do\n      local c = string.sub(s,i,i)\n \
    \     if string.match(c, '^[%w]') then\n        table.insert(t, string.upper(c))\n\
    \      else\n        table.insert(t, c)\n      end\n    end\n    return table.concat(t,\
    \ \"\")\n  end\n  return helper(s)\nend", "  local result = \"\"\n  for i = 1,\
    \ #s do\n    local c = string.sub(s,i,i)\n    if string.match(c, \"^[%w]$\") then\n\
    \      result = string.gsub(string.upper(c), string.upper, string.lower)\n   \
    \ else\n      result = c\n    end\n  end\n  return result\nend", "    local s\
    \ = string.lower(s)\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil\
    \ then\n            local c = string.sub(s,i,i)\n            if string.sub(c,1,1)\
    \ ~= nil then\n                c = string.upper(c)\n            else\n       \
    \         c = string.lower(c)\n            end\n            s = string.sub(s,i,i..i-1)..c\n\
    \        end\n    end\n    return s\nend", "  local result = \"\"\n  for i = 1,\
    \ #s do\n    local char = string.sub(s,i,i)\n    if string.find(string.lower(char),\
    \ string.upper(char)) then\n      result = string.sub(string.upper(char),1,-1)\
    \ + result + string.sub(string.lower(char),1,-1)\n    else\n      result = char\
    \ + result \n    end\n  end\n  return result\nend", "  local str = ''\n  local\
    \ len = #s\n  for i = 1, len do\n    if string.sub(s, i, i) ~= nil then\n    \
    \  str = str .. string.sub(s, i, i)\n    else\n      str = str .. string.lower(string.sub(s,\
    \ i, i))\n    end\n  end\n  return str\nend", "  local result = \"\"\n  for i\
    \ = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n        result = string.sub(s,i,i)\n      else\n\
    \        result = string.sub(s,i,i):lower() + result\n      end\n    else\n  \
    \    result = string.sub(s,i,i):lower() + result\n    end\n  end\n  return result\n\
    end", "    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            local char = string.sub(s,i,i)\n            if char\
    \ >= 'a' and char <= 'z' then\n                char = string.upper(char)\n   \
    \         elseif char >= 'A' and char <= 'Z' then\n                char = string.lower(char)\n\
    \            end\n            result = result .. char\n        end\n    end\n\
    \    if #result == 0 then\n        result = s\n    end\n    return result\nend",
  "  local s = string.gsub(s, '[%a]', function(c) return string.upper(c) end)\n  if\
    \ s == '' then return s end\n  local t = {}\n  for i = 1, #s do\n    local c =\
    \ string.sub(s,i,i)\n    if string.find(c, '%a') then\n      table.insert(t, string.upper(c))\n\
    \    else\n      table.insert(t, c)\n    end\n  end\n  return table.concat(t,\
    \ \"\")\nend", "    local s = string.lower(s)\n    local t = {}\n    for i = 1,\
    \ #s do\n        if string.sub(s,i,i) ~= nil then\n            table.insert(t,string.upper(string.sub(s,i,i)))\n\
    \        else\n            table.insert(t,string.lower(string.sub(s,i,i)))\n \
    \       end\n    end\n    return table.concat(t, \"\")\nend", "  local result\
    \ = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= \"\" then\n      result\
    \ = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n    end\n\
    \  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #s do\n  \
    \  if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i) + result\n\
    \    else\n      result = string.sub(s,i,i) + result\n    end\n  end\n  return\
    \ result\nend", "  local result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n\
    \    if string.find(string.char(c),\"a\") then\n      c = string.upper(c)\n  \
    \  elseif string.find(string.char(c),\"A\") then\n      c = string.lower(c)\n\
    \    end\n    result = result .. c\n  end\n  return result\nend", "    local result\
    \ = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n   \
    \         if string.sub(s,i,i) ~= string.sub(s,i,i) then\n                result\
    \ = string.sub(s,i,i)\n            else\n                result = string.upper(string.sub(s,i,i))\n\
    \            end\n        else\n            result = string.sub(s,i,i)\n     \
    \   end\n    end\n    return result\nend", "  s = string.gsub(s, '[%a]', function(c)\
    \ return string.upper(c) end)\n  s = string.gsub(s, '[%A]', function(c) return\
    \ string.upper(c) end)\n  s = string.gsub(s, '[%#a@]', function(c) return string.upper(c)\
    \ end)\n  return s\nend", "  local result = \"\"\n  for i = 1, #s do\n    local\
    \ char = string.sub(s,i,i)\n    if string.find(char, \"a\") then\n      result\
    \ = string.gsub(string.lower(char), char, function(c)\n        return string.upper(c)\n\
    \      end)\n    elseif string.find(char, \"A\") then\n      result = string.gsub(string.upper(char),\
    \ char, function(c)\n        return string.lower(c)\n      end)\n    else\n  \
    \    result = char\n    end\n  end\n  return result\nend", "    local new_s =\
    \ ''\n    for i=1,#s do\n        if string.sub(s,i,i)=='#' then\n            new_s\
    \ = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)=='@' then\n \
    \           new_s = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)=='$'\
    \ then\n            new_s = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)=='&'\
    \ then\n            new_s = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)=='%'\
    \ then\n            new_s = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)=='^'\
    \ then\n            new_s = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)=='&'\
    \ then\n            new_s = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)=='*'\
    \ then\n            new_s = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)=='-'\
    \ then\n            new_s = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)=='_'\
    \ then\n            new_s = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)=='['\
    \ then\n            new_s = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)==']'\
    \ then\n            new_s = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)=='{'\
    \ then\n            new_s = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)=='}'\
    \ then\n            new_s = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)=='|'\
    \ then\n            new_s = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)=='<'\
    \ then\n            new_s = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)=='>'\
    \ then\n            new_s = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)=='?'\
    \ then\n            new_s = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)=='!'\
    \ then\n            new_s = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)=='^'\
    \ then\n            new_s = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)=='&'\
    \ then\n            new_s = new_s .. string.sub(s,i,i)\n        elseif string.sub(s,i,i)=='*'\
    \ then\n            new_s = new_s .. ", "    local ret = \"\"\n    for i = 1,\
    \ #s do\n        if string.sub(s,i,i) ~= \"\" then\n            ret = string.gsub(string.sub(s,i,i),\"\
    [%a]\",function(x)\n                if string.sub(x,1,1) ~= \"\" then\n      \
    \              return string.upper(string.sub(x,1,1)) + string.lower(string.sub(x,2,#x))\n\
    \                else\n                    return string.upper(x) + string.lower(string.sub(x,2,#x))\n\
    \                end\n            end)\n        else\n            ret = string.gsub(string.sub(s,i,i),\"\
    [%a]\",function(x)\n                return string.upper(x)\n            end)\n\
    \        end\n    end\n    return ret\nend", "    local str={}\n    for i=1,#s\
    \ do\n        if string.sub(s,i,i)==\"#\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\"@\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\"%\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\"&\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\"*\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\"+\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\"-\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\".\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\"/\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\":\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\";\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\"=\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\"?\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\"!\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\"<\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\">\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\",\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\":\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\";\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\"=\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\"?\" then\n            table.insert(str,string.sub(s,i,i+1))\n\
    \        elseif string.sub(s,i,i)==\"!\" then\n            table.insert(str,string.sub(s,",
  "    local s = string.lower(s)\n    local result = \"\"\n    for i = 1, #s do\n\
    \        if string.sub(s,i,i) ~= nil then\n            local c = string.sub(s,i,i)\n\
    \            if string.find(string.upper(c),c) then\n                result =\
    \ string.upper(result)..string.lower(c)\n            else\n                result\
    \ = string.upper(result)..c\n            end\n        else\n            result\
    \ = string.upper(result)..string.lower(string.sub(s,i,i))\n        end\n    end\n\
    \    return result\nend", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local s = string.lower(s)\n  local\
    \ i, j = 1, #s\n  while i <= j do\n    if s[i] ~= nil then\n      if s[i] >= 'a'\
    \ and s[i] <= 'z' then\n        s[i] = s[i] - 'a'\n      elseif s[i] >= 'A' and\
    \ s[i] <= 'Z' then\n        s[i] = s[i] - 'A'\n      else\n        s[i] = s[i]\n\
    \      end\n    end\n    i = i + 1\n  end\n  return s\nend", "  local result =\
    \ ''\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result =\
    \ result .. string.sub(s,i,i)\n    else\n      result = result .. string.sub(s,i,i)\n\
    \    end\n  end\n  return result\nend", "    local t = {}\n    for i = 1, #s do\n\
    \        if string.sub(s,i,i) ~= nil then\n            table.insert(t,string.upper(string.sub(s,i,i)))\n\
    \        else\n            table.insert(t,string.lower(string.sub(s,i,i)))\n \
    \       end\n    end\n    return table.concat(t, \"\")\nend", "  local str = ''\n\
    \  local i = 0\n  while i < #s do\n    local c = string.sub(s,i,i)\n    if string.match(c,'^[%w]$')\
    \ then\n      str = str .. string.upper(c)\n    else\n      str = str .. c\n \
    \   end\n    i = i + 1\n  end\n  return str\nend", "  local t = {}\n  for i =\
    \ 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      t[#t+1] = string.sub(s,i,i)\n\
    \    else\n      t[#t+1] = string.sub(s,i,#s)\n    end\n  end\n  local res = ''\n\
    \  for i = 1, #t do\n    if t[i] ~= nil then\n      if t[i] == 'a' then\n    \
    \    t[i] = 'A'\n      elseif t[i] == 'A' then\n        t[i] = 'a'\n      elseif\
    \ t[i] == '#' then\n        t[i] = '#'\n      elseif t[i] == '#' then\n      \
    \  t[i] = '#'\n      elseif t[i] == '@' then\n        t[i] = '@'\n      elseif\
    \ t[i] == '@' then\n        t[i] = '@'\n      elseif t[i] == '$' then\n      \
    \  t[i] = '$'\n      elseif t[i] == '$' then\n        t[i] = '$'\n      elseif\
    \ t[i] == '!' then\n        t[i] = '!'\n      elseif t[i] == '!' then\n      \
    \  t[i] = '!'\n      elseif t[i] == '.' then\n        t[i] = '.'\n      elseif\
    \ t[i] == ',' then\n        t[i] = ','\n      elseif t[i] == '-' then\n      \
    \  t[i] = '-'\n      elseif t[i] == '-' then\n        t[i] = '-'\n      elseif\
    \ t[i] == '+' then\n        t[i] = '+'\n      elseif t[i] == '+' then\n      \
    \  t[i] = '+'\n      elseif t[i] == '*' then\n        t[i] = '*'\n      elseif\
    \ t[i] == '*' then\n        t[i] = '*'\n      elseif t[i] == '/' then\n      \
    \  t[i] = '/'\n      elseif t[i] == '/' then\n        t[i] = '/'\n      elseif\
    \ t[i] == '0' then\n        t[i] = '0'\n      elseif t[i] == '0' then\n      \
    \  t[i] = '0'\n      elseif t[i] == '1' then\n        t[i] = '1'\n      elseif\
    \ t[i] == '1' then\n        t[i] = '1'\n      elseif t[i] == '2' then\n      \
    \  t[i] = '2'\n      elseif t[i] == '2' then\n        t[i] = '2'\n      elseif\
    \ t[i] == '3' then\n        t[i] = '3'\n      elseif t[i] == '3' then\n      \
    \  t[i] = '3'\n      elseif t[i] == '4' then\n        t[i] = '4'\n      elseif\
    \ t[i]", "  local result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n\
    \    if string.match(\"^[%w]$\", c) then\n      c = string.upper(c)\n    else\n\
    \      c = string.lower(c)\n    end\n    result = result .. c\n  end\n  return\
    \ result\nend", "  local result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n\
    \    if string.find(string.char(c),\"a\") then\n      c = string.upper(c)\n  \
    \  elseif string.find(string.char(c),\"A\") then\n      c = string.lower(c)\n\
    \    end\n    result = result .. c\n  end\n  return result\nend", "  local result\
    \ = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result\
    \ = string.sub(s,i,i) or result\n    else\n      result = string.sub(s,i,#s) or\
    \ result\n    end\n  end\n  return result\nend", "    local str = ''\n    for\
    \ i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n            str = string.sub(s,i,i)\n\
    \        else\n            str = string.sub(s,i,#s)\n        end\n    end\n  \
    \  return str\nend", "    local result = \"\"\n    for i = 1, #s do\n        local\
    \ c = string.sub(s,i,i)\n        if string.match(c, \"^[%w]$\") then\n       \
    \     local upper = string.upper(c)\n            local lower = string.lower(c)\n\
    \            if upper ~= lower then\n                result = result .. upper\n\
    \            else\n                result = result .. c\n            end\n   \
    \     else\n            result = result .. c\n        end\n    end\n    return\
    \ result\nend", "    local s = string.lower(s)\n    for i = 1, #s do\n       \
    \ if string.sub(s,i,i) ~= nil then\n            local c = string.sub(s,i,i)\n\
    \            if string.sub(c,1,1) ~= nil then\n                c = string.upper(c)\n\
    \            else\n                c = string.lower(c)\n            end\n    \
    \        s = string.sub(s,i,i..i..i)..c\n        end\n    end\n    return s\n\
    end", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~=\
    \ nil then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #s\
    \ do\n    local c = string.sub(s,i,i)\n    if string.find(string.char(c),\"a\"\
    ) then\n      c = string.upper(c)\n    elseif string.find(string.char(c),\"A\"\
    ) then\n      c = string.lower(c)\n    end\n    result = result .. c\n  end\n\
    \  return result\nend", "    local result = \"\"\n    for i = 1, #s do\n     \
    \   if string.sub(s,i,i) ~= nil then\n            local char = string.sub(s,i,i)\n\
    \            if string.find(string.lower(char),string.upper(char)) then\n    \
    \            char = string.upper(char)\n            else\n                char\
    \ = string.lower(char)\n            end\n            result = result .. char\n\
    \        else\n            result = result .. string.sub(s,i,i)\n        end\n\
    \    end\n    return result\nend", "  local s = string.lower(s)\n  for i = 1,\
    \ #s do\n    if string.sub(s,i,i) ~= nil then\n      s = string.upper(string.sub(s,i,i))\n\
    \    end\n  end\n  return s\nend", "  local result = \"\"\n  for i = 1, #s do\n\
    \    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n    else\n\
    \      result = string.sub(s,i,#s)\n    end\n  end\n  return result\nend", " \
    \ local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= \"\" then\n\
    \      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #s\
    \ do\n    local c = string.sub(s,i,i)\n    if string.find(string.char(c),\"a\"\
    ) then\n      c = string.upper(c)\n    elseif string.find(string.char(c),\"A\"\
    ) then\n      c = string.lower(c)\n    end\n    result = result .. c\n  end\n\
    \  return result\nend", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      local char = string.sub(s,i,i)\n      if string.sub(char,1,1)\
    \ ~= nil then\n        local upper = string.upper(char)\n        local lower =\
    \ string.lower(char)\n        if upper ~= nil then\n          char = upper\n \
    \       elseif lower ~= nil then\n          char = lower\n        end\n      end\n\
    \    end\n    result = result .. char\n  end\n  return result\nend", "  s = string.gsub(s,\
    \ '[%a]', function(c) return string.char(tonumber(c)) end)\n  if #s == 0 then\n\
    \    return s\n  else\n    local t = {}\n    for i = 1, #s do\n      t[#t + 1]\
    \ = string.sub(s,i,i)\n    end\n    table.sort(t)\n    local s = ''\n    for i\
    \ = 1, #t do\n      if t[i] ~= s[i] then\n        s = s .. t[i]\n      end\n \
    \   end\n    return s\n  end\nend", "  local newS = \"\"\n  for i = 1, #s do\n\
    \    if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i) ~= \"\" then\n\
    \        newS = newS .. string.upper(string.sub(s,i,i))\n      else\n        newS\
    \ = newS .. string.lower(string.sub(s,i,i))\n      end\n    end\n  end\n  return\
    \ newS\nend", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #s\
    \ do\n    if string.sub(s,i,i) ~= nil then\n      local char = string.sub(s,i,i)\n\
    \      if string.find(string.upper(char),char) ~= nil then\n        char = string.upper(char)\n\
    \      elseif string.find(string.lower(char),char) ~= nil then\n        char =\
    \ string.lower(char)\n      end\n      result = result .. char\n    end\n  end\n\
    \  return result\nend", "  local function is_letter(s)\n    return s:sub(1,1)\
    \ == 'a'\n  end\n  local function is_upper(s)\n    return s:sub(1,1) == 'A'\n\
    \  end\n  local function is_lower(s)\n    return s:sub(1,1) == 'a'\n  end\n  local\
    \ function is_number(s)\n    return s:sub(1,1) == '#'\n  end\n  local function\
    \ is_symbol(s)\n    return s:sub(1,1) == '#'\n  end\n  local function is_empty(s)\n\
    \    return s == ''\n  end\n  local function is_all_symbol(s)\n    return s:sub(1,1)\
    \ == '#'\n  end\n  local function is_all_empty(s)\n    return s == ''\n  end\n\
    \  local function is_all_letter(s)\n    return s:sub(1,1) == 'a'\n  end\n  local\
    \ function is_all_upper(s)\n    return s:sub(1,1) == 'A'\n  end\n  local function\
    \ is_all_lower(s)\n    return s:sub(1,1) == 'a'\n  end\n  local function is_all_number(s)\n\
    \    return s:sub(1,1) == '#'\n  end\n  local function is_all_symbol(s)\n    return\
    \ s:sub(1,1) == '#'\n  end\n  local function is_all_empty(s)\n    return s ==\
    \ ''\n  end\n  local function is_all_letter(s)\n    return s:sub(1,1) == 'a'\n\
    \  end\n  local function is_all_upper(s)\n    return s:sub(1,1) == 'A'\n  end\n\
    \  local function is_all_lower(s)\n    return s:sub(1,1) == 'a'\n  end\n  local\
    \ function is_all_number(s)\n    return s:sub(1,1) == '#'\n  end\n  local function\
    \ is_all_symbol(s)\n    return s:sub(1,1) == '#'\n  end\n  local function is_all_empty(s)\n\
    \    return s == ''\n  end\n  local function is_all_letter(s)\n    return s:sub(1,1)\
    \ == 'a'\n  end\n  local function is_all_upper(s)\n    return s:sub(1,1) == 'A'\n\
    \  end\n  local function is_all_lower(s)\n    return s:sub(1,1) == 'a'\n  end\n\
    \  local function is_all_number(s)\n    return s:sub(1,1) == '#'\n  end\n  local\
    \ function is_all_symbol(s)\n    return s:sub(1,1) == '#'\n  end\n  local function\
    \ is_all_empty(s)\n    return s == ''\n  end\n  local function is_all_letter(s)\n\
    \    return s:sub(1,1) == 'a'\n  end\n  local function is_all_upper(s)\n    return\
    \ s:sub(1,1) == 'A'\n  end\n  local function is_all_lower(s)\n    return s:sub(1,1)\
    \ == 'a'\n  end\n  local function is_all_number(", "  local result = ''\n  for\
    \ i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "    local s = string.lower(s)\n    local t = \"\"\n    for i = 1, #s do\n\
    \        if string.sub(s,i,i) ~= \"\" then\n            local c = string.sub(s,i,i)\n\
    \            if string.find(string.upper(c),c) then\n                c = string.upper(c)\n\
    \            else\n                c = string.lower(c)\n            end\n    \
    \        local n = string.len(c)\n            local k = string.len(s)\n      \
    \      local m = math.floor((k - n)/2)\n            local l = 0\n            local\
    \ r = k\n            while l < m do\n                t = string.sub(s,l,r) ..\
    \ c\n                l = l + 1\n                r = r - 1\n            end\n \
    \       end\n    end\n    return t\nend", "  local result = ''\n  for i = 1, #s\
    \ do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n  \
    \              result = string.sub(s,i,i)\n            else\n                result\
    \ = string.sub(s,i,i):upper..string.sub(s,i+1,#s)\n            end\n        else\n\
    \            result = string.sub(s,i,i):upper..string.sub(s,i+1,#s)\n        end\n\
    \    end\n    return result\nend", "    local s = string.lower(s)\n    local result\
    \ = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= \"\" then\n  \
    \          local c = string.sub(s,i,i)\n            if string.sub(c,1,1) ~= \"\
    \" then\n                c = string.upper(c)\n            else\n             \
    \   c = string.lower(c)\n            end\n            result = result .. c\n \
    \       else\n            result = result .. string.sub(s,i,i)\n        end\n\
    \    end\n    return string.lower(result)\nend", "    local s = s:gsub(\"%l\"\
    , toupper)\n    local s = s:gsub(\"%u\", tolower)\n    return s:gsub(\"%a\", \"\
    a\")\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

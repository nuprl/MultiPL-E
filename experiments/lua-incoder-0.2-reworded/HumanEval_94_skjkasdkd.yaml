name: HumanEval_94_skjkasdkd
language: lua
prompt: "-- You are given a table of integers.\n-- You need to find the largest prime\
  \ value and return the sum of its digits.\n-- Examples:\n-- >>> skjkasdkd({0, 3,\
  \ 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3})\n-- 10\n--\
  \ >>> skjkasdkd({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1})\n--\
  \ 25\n-- >>> skjkasdkd({1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30,\
  \ 1, 9, 3})\n-- 13\n-- >>> skjkasdkd({0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0,\
  \ 5, 6})\n-- 11\n-- >>> skjkasdkd({0, 81, 12, 3, 1, 21})\n-- 3\n-- >>> skjkasdkd({0,\
  \ 8, 1, 2, 1, 7})\n-- 7\nlocal function skjkasdkd(lst)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
  \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
  \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
  \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
  \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
  \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
  \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
  \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
  \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\nend\n\
  \nos.exit(lu.LuaUnit.run())"
completions: ["  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ > max then\n      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n\
    \  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    local num = lst[i]\n    if num > max then\n      max = num\n    end\n\
    \    if num > 0 then\n      sum = sum + num\n    end\n  end\n  return sum\nend",
  "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if lst[i] > max\
    \ then\n      sum = sum + math.floor(math.log10(max))\n      max = lst[i]\n  \
    \  end\n  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i\
    \ = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n    sum\
    \ = sum + math.floor(math.log10(max))\n  end\n  return sum\nend", "  local largest,\
    \ largest2, largest3, largest4, largest5, largest6, largest7, largest8, largest9,\
    \ largest10, largest11, largest12, largest13, largest14, largest15, largest16,\
    \ largest17, largest18, largest19, largest20, largest21, largest22, largest23,\
    \ largest24, largest25, largest26, largest27, largest28, largest29, largest30,\
    \ largest31, largest32, largest33, largest34, largest35, largest36, largest37,\
    \ largest38, largest39, largest40, largest41, largest42, largest43, largest44,\
    \ largest45, largest46, largest47, largest48, largest49, largest50, largest51,\
    \ largest52, largest53, largest54, largest55, largest56, largest57, largest58,\
    \ largest59, largest60, largest61, largest62, largest63, largest64, largest65,\
    \ largest66, largest67, largest68, largest69, largest70, largest71, largest72,\
    \ largest73, largest74, largest75, largest76, largest77, largest78, largest79,\
    \ largest80, largest81, largest82, largest83, largest84, largest85, largest86,\
    \ largest87, largest88, largest89, largest90, largest91, largest92, largest93,\
    \ largest94, largest95, largest96, largest97, largest98, largest99, largest100})\n\
    \  local largest, largest2, largest3, largest4, largest5, largest6, largest7,\
    \ largest8, largest9, largest10, largest11, largest12, largest13, largest14, largest15,\
    \ largest16, largest17, largest18, largest19, largest20, largest21, largest22,\
    \ largest23, largest24, largest25, largest26, largest27, largest28, largest29,\
    \ largest30, largest31, largest32, largest33, largest34, largest35, largest36,\
    \ largest37, largest38, largest39, largest40, largest41, largest42, largest43,\
    \ largest44, largest45, largest46, largest47, largest48, largest49, largest50,\
    \ largest51, largest52, largest53, largest54, largest55, largest56, largest",
  "  local largest = 0\n  local largestSum = 0\n  for i = 1, #lst do\n    local sum\
    \ = 0\n    for j = 1, #lst[i] do\n      if j > largest then\n        largest =\
    \ j\n        largestSum = sum\n      end\n      sum = sum + lst[i][j]\n    end\n\
    \  end\n  return largestSum\nend", "  local largest, largest2, largest3, largest4,\
    \ largest5, largest6, largest7, largest8, largest9, largest10, largest11, largest12,\
    \ largest13, largest14, largest15, largest16, largest17, largest18, largest19,\
    \ largest20, largest21, largest22, largest23, largest24, largest25, largest26,\
    \ largest27, largest28, largest29, largest30, largest31, largest32, largest33,\
    \ largest34, largest35, largest36, largest37, largest38, largest39, largest40,\
    \ largest41, largest42, largest43, largest44, largest45, largest46, largest47,\
    \ largest48, largest49, largest50, largest51, largest52, largest53, largest54,\
    \ largest55, largest56, largest57, largest58, largest59, largest60, largest61,\
    \ largest62, largest63, largest64, largest65, largest66, largest67, largest68,\
    \ largest69, largest70, largest71, largest72, largest73, largest74, largest75,\
    \ largest76, largest77, largest78, largest79, largest80, largest81, largest82,\
    \ largest83, largest84, largest85, largest86, largest87, largest88, largest89,\
    \ largest90, largest91, largest92, largest93, largest94, largest95, largest96,\
    \ largest97, largest98, largest99, largest100})\n  local largest, largest2, largest3,\
    \ largest4, largest5, largest6, largest7, largest8, largest9, largest10, largest11,\
    \ largest12, largest13, largest14, largest15, largest16, largest17, largest18,\
    \ largest19, largest20, largest21, largest22, largest23, largest24, largest25,\
    \ largest26, largest27, largest28, largest29, largest30, largest31, largest32,\
    \ largest33, largest34, largest35, largest36, largest37, largest38, largest39,\
    \ largest40, largest41, largest42, largest43, largest44, largest45, largest46,\
    \ largest47, largest48, largest49, largest50, largest51, largest52, largest53,\
    \ largest54, largest55, largest56, largest", "  local largest = lst[1]\n  for\
    \ i = 2, #lst do\n    if lst[i] > largest then\n      largest = lst[i]\n    end\n\
    \  end\n  return largest\nend", "  local max = 0\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for\
    \ i = 1, #lst do\n    if lst[i] > max then\n      sum = sum + math.floor(math.log10(max))\n\
    \      max = lst[i]\n    end\n  end\n  return sum\nend", "  local largest = nil\n\
    \  local sum = 0\n  for i = 1, #lst do\n    if largest == nil then\n      largest\
    \ = lst[i]\n      sum = lst[i]\n    else\n      if largest < lst[i] then\n   \
    \     largest = lst[i]\n        sum = sum + largest\n      else\n        largest\
    \ = largest * 10 + lst[i]\n        sum = sum + largest\n      end\n    end\n \
    \ end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for i =\
    \ 1, #lst do\n    if lst[i] > max then\n      sum = sum + math.floor(math.log10(max))\n\
    \      max = lst[i]\n    end\n  end\n  return sum\nend", "  local largest, largestPrime\
    \ = 0, nil\n  for i = 1, #lst do\n    if lst[i] > largest then\n      largest\
    \ = lst[i]\n      largestPrime = i\n    end\n  end\n  return largestPrime * largest\n\
    end", "  local largest, largestPrime = 0, 0\n  for i = 1, #lst do\n    if lst[i]\
    \ > largest then\n      largest = lst[i]\n      largestPrime = i\n    end\n  end\n\
    \  return largestPrime * largest\nend", "  local largest = 0\n  local largestPrime\
    \ = 0\n  local largestSum = 0\n  for i = 1, #lst do\n    local prime, sum = primeSum(lst[i])\n\
    \    if prime > largestPrime then\n      largestPrime = prime\n      largestSum\
    \ = sum\n    end\n    if prime > largest then\n      largest = prime\n    end\n\
    \  end\n  return largestSum\nend", "  local max = 0\n  local sum = 0\n  for i\
    \ = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n\
    \  for i = 1, #lst do\n    if lst[i] > max then\n      sum = sum + lst[i]\n  \
    \  end\n  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i\
    \ = 1, #lst do\n    local prime, count = prime_count(lst[i])\n    if prime > max\
    \ then\n      max = prime\n      sum = count\n    end\n  end\n  return sum\nend",
  "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if lst[i] == max\
    \ then\n      sum = sum + math.floor(math.abs(lst[i]/max))\n    end\n  end\n \
    \ return sum\nend", "  local largest, largestPrime = 0, nil\n  for i = 2, #lst\
    \ do\n    if lst[i] > largestPrime then\n      largest, largestPrime = i, lst[i]\n\
    \    end\n  end\n  return largestPrime + largest\nend", "  local largest = nil\n\
    \  local sum = 0\n  for i = 1, #lst do\n    if largest == nil then\n      largest\
    \ = lst[i]\n      sum = lst[i]\n    else\n      if largest < lst[i] then\n   \
    \     largest = lst[i]\n        sum = sum + largest\n      else\n        largest\
    \ = largest * 10 + lst[i]\n        sum = sum + largest\n      end\n    end\n \
    \ end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n\
    \  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for i =\
    \ 1, #lst do\n    if lst[i] > max then\n      sum = sum + math.floor(math.log10(max))\n\
    \      max = lst[i]\n    end\n  end\n  return sum\nend", "  local max = 0\n  local\
    \ sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n\
    \    end\n    sum = sum + math.floor(math.log10(max))\n  end\n  return sum\nend",
  "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n  end\n\
    \  return sum\nend", "  local largest, largestPrime = 0, nil\n  for i = 2, #lst\
    \ do\n    local prime = primes[i]\n    if prime > largestPrime then\n      largest,\
    \ largestPrime = i, prime\n    end\n  end\n  return largestPrime * largest\nend",
  "  local largest = nil\n  local sum = 0\n  for i = 1, #lst do\n    if largest ==\
    \ nil then\n      largest = lst[i]\n      sum = lst[i]\n    elseif largest < lst[i]\
    \ then\n      largest = lst[i]\n      sum = sum + largest\n    end\n  end\n  return\
    \ sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ > max then\n      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n\
    \  end\n  return sum\nend", "  local largest, sum = 0, 0\n  for i = 1, #lst do\n\
    \    local prime, sum = 0, 0\n    for j = 2, #lst do\n      if lst[j] % i == 0\
    \ then\n        prime = i\n        sum = sum + lst[j]\n      end\n    end\n  \
    \  if prime > largest then\n      largest = prime\n    end\n    if sum > largest\
    \ then\n      largest = sum\n    end\n  end\n  return largest\nend", "  local\
    \ max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n \
    \     max = lst[i]\n    end\n    if lst[i] > 0 then\n      sum = sum + math.floor(math.log10(lst[i]))\n\
    \    end\n  end\n  return sum + max\nend", "  local largest = nil\n  local sum\
    \ = 0\n  for i = 1, #lst do\n    if largest == nil then\n      largest = lst[i]\n\
    \      sum = lst[i]\n    elseif largest < lst[i] then\n      largest = lst[i]\n\
    \      sum = sum + largest\n    end\n  end\n  return sum\nend", "  local max =\
    \ 0\n  local sum = 0\n  for i = 1, #lst do\n    local num = lst[i]\n    if num\
    \ > max then\n      max = num\n    end\n    sum = sum + num\n  end\n  return sum\n\
    end", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] >\
    \ max then\n      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n\
    \  end\n  return sum\nend", "  local largest = 0\n  local largestPrime = 0\n \
    \ for i = 1, #lst do\n    local prime = primes[lst[i]]\n    if prime > largestPrime\
    \ then\n      largestPrime = prime\n      largest = lst[i]\n    end\n  end\n \
    \ return largestPrime + largest\nend", "  local max = 0\n  local sum = 0\n  for\
    \ i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n    sum\
    \ = sum + math.floor(math.log10(max))\n  end\n  return sum\nend", "  local largest\
    \ = 0\n  local largestPrime = 0\n  local sum = 0\n  for i = 1, #lst do\n    local\
    \ prime = primes[lst[i]]\n    if prime > largestPrime then\n      largestPrime\
    \ = prime\n      largest = lst[i]\n    end\n    sum = sum + prime % 10\n  end\n\
    \  return sum + largest\nend", "  local max = 0\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n    sum = sum\
    \ + math.floor(math.log10(max))\n  end\n  return sum\nend", "  local largest,\
    \ largestPrime = 0, nil\n  for i = 2, #lst do\n    local prime = i\n    for j\
    \ = 2, #lst do\n      if prime % j == 0 then\n        prime = nil\n        break\n\
    \      end\n    end\n    if prime then\n      if prime > largestPrime then\n \
    \       largest, largestPrime = i, prime\n      end\n    end\n  end\n  return\
    \ largestPrime and largestPrime + largest\nend", "  local largest, largest2, largest3,\
    \ largest4, largest5, largest6, largest7, largest8, largest9, largest10, largest11,\
    \ largest12, largest13, largest14, largest15, largest16, largest17, largest18,\
    \ largest19, largest20, largest21, largest22, largest23, largest24, largest25,\
    \ largest26, largest27, largest28, largest29, largest30, largest31, largest32,\
    \ largest33, largest34, largest35, largest36, largest37, largest38, largest39,\
    \ largest40, largest41, largest42, largest43, largest44, largest45, largest46,\
    \ largest47, largest48, largest49, largest50, largest51, largest52, largest53,\
    \ largest54, largest55, largest56, largest57, largest58, largest59, largest60,\
    \ largest61, largest62, largest63, largest64, largest65, largest66, largest67,\
    \ largest68, largest69, largest70, largest71, largest72, largest73, largest74,\
    \ largest75, largest76, largest77, largest78, largest79, largest80, largest81,\
    \ largest82, largest83, largest84, largest85, largest86, largest87, largest88,\
    \ largest89, largest90, largest91, largest92, largest93, largest94, largest95,\
    \ largest96, largest97, largest98, largest99, largest100})\n  local largest, largest2,\
    \ largest3, largest4, largest5, largest6, largest7, largest8, largest9, largest10,\
    \ largest11, largest12, largest13, largest14, largest15, largest16, largest17,\
    \ largest18, largest19, largest20, largest21, largest22, largest23, largest24,\
    \ largest25, largest26, largest27, largest28, largest29, largest30, largest31,\
    \ largest32, largest33, largest34, largest35, largest36, largest37, largest38,\
    \ largest39, largest40, largest41, largest42, largest43, largest44, largest45,\
    \ largest46, largest47, largest48, largest49, largest50, largest51, largest52,\
    \ largest53, largest54, largest55, largest56, largest", "  local max = 0\n  local\
    \ sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n\
    \    end\n    sum = sum + math.floor(math.log10(max))\n  end\n  return sum\nend",
  "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n  end\n\
    \  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n\
    \    if lst[i] > max then\n      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n\
    \  end\n  return sum\nend", "  local largest, largestIndex, largestSum = 0, 0,\
    \ 0\n  for i = 1, #lst do\n    local sum = 0\n    for j = 1, #lst[i] do\n    \
    \  sum = sum + lst[i][j]\n    end\n    if sum > largestSum then\n      largestSum\
    \ = sum\n      largestIndex = i\n      largest = sum\n    end\n  end\n  return\
    \ largestSum + largest\nend", "  local largest = 0\n  local largestPrime = 0\n\
    \  local sum = 0\n  for i = 1, #lst do\n    local prime = primes[lst[i]]\n   \
    \ if prime > largestPrime then\n      largestPrime = prime\n      largest = lst[i]\n\
    \    end\n    sum = sum + lst[i]\n  end\n  return sum + largestPrime\nend", " \
    \ local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n  end\n\
    \  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n\
    \    local prime, num = prime_number(lst[i])\n    if prime > max then\n      max\
    \ = prime\n    end\n    sum = sum + num\n  end\n  return sum\nend", "  local largest,\
    \ largestPrime = 0, nil\n  for i = 2, #lst do\n    local prime = primes[i]\n \
    \   if prime > largestPrime then\n      largest, largestPrime = i, prime\n   \
    \ end\n  end\n  return largestPrime * largest\nend", "  local max = 0\n  local\
    \ sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n\
    \    end\n    sum = sum + math.floor(math.log10(max))\n  end\n  return sum\nend",
  "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > max then\n      max = n\n    end\n    sum = sum + math.floor(n)\n\
    \  end\n  return sum + max\nend", "  local largest, largestPrime = 0, nil\n  for\
    \ i = 2, #lst do\n    local prime = primes[i]\n    if prime > largestPrime then\n\
    \      largest, largestPrime = i, prime\n    end\n  end\n  return largestPrime\
    \ * largest\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n \
    \   if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      sum = sum + lst[i]\n    end\n  end\n  return\
    \ sum\nend", "  local largest, largestPrime = 0, nil\n  for i = 2, #lst do\n \
    \   local prime = i\n    for j = 2, #lst do\n      if prime % j == 0 then\n  \
    \      prime = nil\n        break\n      end\n    end\n    if prime then\n   \
    \   if prime > largestPrime then\n        largest, largestPrime = i, prime\n \
    \     end\n    end\n  end\n  return largestPrime and largestPrime + largest\n\
    end", "  local largest, largestPrime = 0, nil\n  for i = 2, #lst do\n    local\
    \ prime, primePrime = primeFactors(lst[i])\n    if prime > largestPrime then\n\
    \      largest, largestPrime = i, prime\n    end\n  end\n  return largestPrime\
    \ + largest\nend", "  local largest = nil\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    local num = lst[i]\n    if largest == nil then\n      largest = num\n\
    \      sum = num\n    elseif largest < num then\n      largest = num\n      sum\
    \ = sum + num\n    end\n  end\n  return sum\nend", "  local max = 0\n  local sum\
    \ = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n  \
    \  end\n    sum = sum + math.floor(math.log10(max))\n  end\n  return sum\nend",
  "  local largest, largest2, largest3, largest4, largest5, largest6, largest7, largest8,\
    \ largest9, largest10, largest11, largest12, largest13, largest14, largest15,\
    \ largest16, largest17, largest18, largest19, largest20, largest21, largest22,\
    \ largest23, largest24, largest25, largest26, largest27, largest28, largest29,\
    \ largest30, largest31, largest32, largest33, largest34, largest35, largest36,\
    \ largest37, largest38, largest39, largest40, largest41, largest42, largest43,\
    \ largest44, largest45, largest46, largest47, largest48, largest49, largest50,\
    \ largest51, largest52, largest53, largest54, largest55, largest56, largest57,\
    \ largest58, largest59, largest60, largest61, largest62, largest63, largest64,\
    \ largest65, largest66, largest67, largest68, largest69, largest70, largest71,\
    \ largest72, largest73, largest74, largest75, largest76, largest77, largest78,\
    \ largest79, largest80, largest81, largest82, largest83, largest84, largest85,\
    \ largest86, largest87, largest88, largest89, largest90, largest91, largest92,\
    \ largest93, largest94, largest95, largest96, largest97, largest98, largest99,\
    \ largest100})\n  local largest, largest2, largest3, largest4, largest5, largest6,\
    \ largest7, largest8, largest9, largest10, largest11, largest12, largest13, largest14,\
    \ largest15, largest16, largest17, largest18, largest19, largest20, largest21,\
    \ largest22, largest23, largest24, largest25, largest26, largest27, largest28,\
    \ largest29, largest30, largest31, largest32, largest33, largest34, largest35,\
    \ largest36, largest37, largest38, largest39, largest40, largest41, largest42,\
    \ largest43, largest44, largest45, largest46, largest47, largest48, largest49,\
    \ largest50, largest51, largest52, largest53, largest54, largest55, largest56,\
    \ largest", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    local\
    \ n = lst[i]\n    if n > max then\n      max = n\n    end\n    if n > 1 then\n\
    \      sum = sum + math.floor(math.log(n, 10))\n    end\n  end\n  return sum +\
    \ max\nend", "  local largest, sum = 0, 0\n  for i = 1, #lst do\n    if largest\
    \ * 2 > lst[i] then\n      largest = lst[i]\n    end\n    sum = sum + math.floor(math.abs(lst[i])\
    \ / largest) * largest\n  end\n  return sum\nend", "  local largest = 0\n  local\
    \ sum = 0\n  for i = 1, #lst do\n    if lst[i] > largest then\n      largest =\
    \ lst[i]\n    end\n    sum = sum + lst[i]\n  end\n  return sum + largest\nend",
  "  local largest, largestPrime = 0, 0\n  for i = 1, #lst do\n    if lst[i] > largest\
    \ then\n      largest = lst[i]\n      largestPrime = i\n    end\n  end\n  return\
    \ largestPrime * largest\nend", "  local max = 0\n  local maxNum = 0\n  for i\
    \ = 1, #lst do\n    local num = lst[i]\n    if num > max then\n      max = num\n\
    \      maxNum = i\n    end\n  end\n  return maxNum + max\nend", "  local largest\
    \ = 0\n  local largestPrime = 0\n  local sum = 0\n  for i = 1, #lst do\n    local\
    \ prime = primes[lst[i]]\n    if prime > largestPrime then\n      largestPrime\
    \ = prime\n      largest = lst[i]\n    end\n    sum = sum + lst[i]\n  end\n  return\
    \ largestPrime * sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    local num = lst[i]\n    if num > 0 then\n      local prime, prime_num\
    \ = prime_number(num)\n      if prime > max then\n        max = prime\n      \
    \  sum = sum + prime_num\n      end\n    end\n  end\n  return sum\nend", "  local\
    \ max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n \
    \     max = lst[i]\n    end\n    if lst[i] == max then\n      sum = sum + lst[i]\n\
    \    end\n  end\n  return sum\nend", "  local largest = 0\n  local sum = 0\n \
    \ for i = 1, #lst do\n    local prime = primes[lst[i]]\n    if prime > largest\
    \ then\n      largest = prime\n    end\n    sum = sum + prime % 10\n  end\n  return\
    \ sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ > max then\n      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n\
    \  end\n  return sum\nend", "  local max = 0\n  local maxSum = 0\n  for i = 1,\
    \ #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n    if lst[i]\
    \ > maxSum then\n      maxSum = lst[i]\n    end\n  end\n  return maxSum\nend",
  "  local largest, largestPrime = 0, 0\n  for i = 1, #lst do\n    local prime = primes[lst[i]]\n\
    \    if prime > largestPrime then\n      largest, largestPrime = i, prime\n  \
    \  end\n  end\n  return largestPrime * largest\nend", "  local largest, largest2,\
    \ largest3, largest4, largest5, largest6, largest7, largest8, largest9, largest10,\
    \ largest11, largest12, largest13, largest14, largest15, largest16, largest17,\
    \ largest18, largest19, largest20, largest21, largest22, largest23, largest24,\
    \ largest25, largest26, largest27, largest28, largest29, largest30, largest31,\
    \ largest32, largest33, largest34, largest35, largest36, largest37, largest38,\
    \ largest39, largest40, largest41, largest42, largest43, largest44, largest45,\
    \ largest46, largest47, largest48, largest49, largest50, largest51, largest52,\
    \ largest53, largest54, largest55, largest56, largest57, largest58, largest59,\
    \ largest60, largest61, largest62, largest63, largest64, largest65, largest66,\
    \ largest67, largest68, largest69, largest70, largest71, largest72, largest73,\
    \ largest74, largest75, largest76, largest77, largest78, largest79, largest80,\
    \ largest81, largest82, largest83, largest84, largest85, largest86, largest87,\
    \ largest88, largest89, largest90, largest91, largest92, largest93, largest94,\
    \ largest95, largest96, largest97, largest98, largest99, largest100})\n  local\
    \ largest, largest2, largest3, largest4, largest5, largest6, largest7, largest8,\
    \ largest9, largest10, largest11, largest12, largest13, largest14, largest15,\
    \ largest16, largest17, largest18, largest19, largest20, largest21, largest22,\
    \ largest23, largest24, largest25, largest26, largest27, largest28, largest29,\
    \ largest30, largest31, largest32, largest33, largest34, largest35, largest36,\
    \ largest37, largest38, largest39, largest40, largest41, largest42, largest43,\
    \ largest44, largest45, largest46, largest47, largest48, largest49, largest50,\
    \ largest51, largest52, largest53, largest54, largest55, largest56, largest",
  "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    local num = lst[i]\n\
    \    if num > max then\n      max = num\n    end\n    sum = sum + num\n  end\n\
    \  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n\
    \    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      sum = sum + lst[i]\n    end\n  end\n  return\
    \ sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ > max then\n      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n\
    \  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n\
    \  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    local prime, num = prime_number(lst[i])\n    if prime > max then\n \
    \     max = prime\n      sum = num\n    end\n  end\n  return sum\nend", "  local\
    \ max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n \
    \     max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n  end\n\
    \  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n\
    \    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      sum = sum + lst[i]\n    end\n  end\n  return\
    \ sum\nend", "  local largest, largestIndex, largestSum = 0, 0, 0\n  for i = 1,\
    \ #lst do\n    local sum = 0\n    for j = 1, #lst[i] do\n      sum = sum + lst[i][j]\n\
    \    end\n    if sum > largestSum then\n      largestSum = sum\n      largestIndex\
    \ = i\n      largest = sum\n    end\n  end\n  return largestSum + largest\nend",
  "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if lst[i] > max\
    \ then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend", "  local\
    \ max = 0\n  local sum = 0\n  for i = 1, #lst do\n    local num = lst[i]\n   \
    \ if num > 0 then\n      local prime = primes[num] or primes[math.floor(num)]\n\
    \      if prime > max then\n        max = prime\n        sum = 0\n      end\n\
    \      sum = sum + num\n    end\n  end\n  return sum + max\nend", "  local largest,\
    \ largestIndex, largestSum = 0, 0, 0\n  for i = 1, #lst do\n    local sum = 0\n\
    \    for j = 1, #lst[i] do\n      sum = sum + lst[i][j]\n    end\n    if sum >\
    \ largestSum then\n      largest, largestIndex, largestSum = sum, i, sum\n   \
    \ end\n  end\n  return largestSum\nend", "  local max = 0\n  local sum = 0\n \
    \ for i = 1, #lst do\n    local num = lst[i]\n    if num > max then\n      max\
    \ = num\n    end\n    if num == max then\n      sum = sum + num\n    end\n  end\n\
    \  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n\
    \    local prime = primes[lst[i]]\n    if prime > max then\n      max = prime\n\
    \    end\n    sum = sum + prime % 10\n  end\n  return sum\nend", "  local largest,\
    \ largest2, largest3, largest4, largest5, largest6, largest7, largest8, largest9,\
    \ largest10, largest11, largest12, largest13, largest14, largest15, largest16,\
    \ largest17, largest18, largest19, largest20, largest21, largest22, largest23,\
    \ largest24, largest25, largest26, largest27, largest28, largest29, largest30,\
    \ largest31, largest32, largest33, largest34, largest35, largest36, largest37,\
    \ largest38, largest39, largest40, largest41, largest42, largest43, largest44,\
    \ largest45, largest46, largest47, largest48, largest49, largest50, largest51,\
    \ largest52, largest53, largest54, largest55, largest56, largest57, largest58,\
    \ largest59, largest60, largest61, largest62, largest63, largest64, largest65,\
    \ largest66, largest67, largest68, largest69, largest70, largest71, largest72,\
    \ largest73, largest74, largest75, largest76, largest77, largest78, largest79,\
    \ largest80, largest81, largest82, largest83, largest84, largest85, largest86,\
    \ largest87, largest88, largest89, largest90, largest91, largest92, largest93,\
    \ largest94, largest95, largest96, largest97, largest98, largest99, largest100})\n\
    \  local largest, largest2, largest3, largest4, largest5, largest6, largest7,\
    \ largest8, largest9, largest10, largest11, largest12, largest13, largest14, largest15,\
    \ largest16, largest17, largest18, largest19, largest20, largest21, largest22,\
    \ largest23, largest24, largest25, largest26, largest27, largest28, largest29,\
    \ largest30, largest31, largest32, largest33, largest34, largest35, largest36,\
    \ largest37, largest38, largest39, largest40, largest41, largest42, largest43,\
    \ largest44, largest45, largest46, largest47, largest48, largest49, largest50,\
    \ largest51, largest52, largest53, largest54, largest55, largest56, largest",
  "  local max = 0\n  local maxIndex = 0\n  for i = 1, #lst do\n    if lst[i] > max\
    \ then\n      max = lst[i]\n      maxIndex = i\n    end\n  end\n  local sum =\
    \ 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      sum = sum + lst[maxIndex]\
    \ - i\n      lst[maxIndex] = i\n    end\n  end\n  return sum\nend", "  local max\
    \ = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n     \
    \ max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n  end\n\
    \  return sum\nend", "  local largest, largestPrime = nil, 1\n  for i = 2, #lst\
    \ do\n    local prime, primePrime = primeFactors(lst[i])\n    if prime > largestPrime\
    \ then\n      largestPrime = prime\n      largest = i\n    end\n  end\n  return\
    \ largestPrime * largest\nend", "  local max = 0\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for\
    \ i = 1, #lst do\n    if lst[i] > max then\n      sum = sum + math.floor(math.log10(max))\n\
    \      max = lst[i]\n    end\n  end\n  return sum\nend", "  local largest, largestPrime\
    \ = 1, 1\n  for i = 2, #lst do\n    local prime, primePrime = 2, 2\n    while\
    \ prime <= largestPrime do\n      if lst[i] % prime == 0 then\n        primePrime\
    \ = primePrime + 1\n      else\n        prime = prime + 1\n      end\n    end\n\
    \    if primePrime > largestPrime then\n      largest, largestPrime = i, primePrime\n\
    \    end\n  end\n  return largest\nend", "  local largest = nil\n  local sum =\
    \ 0\n  for i = 1, #lst do\n    if largest == nil then\n      largest = lst[i]\n\
    \      sum = lst[i]\n    elseif largest < lst[i] then\n      largest = lst[i]\n\
    \      sum = sum + largest\n    end\n  end\n  return sum\nend", "  local max =\
    \ 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max\
    \ = lst[i]\n    end\n    if lst[i] == max then\n      sum = sum + lst[i]\n   \
    \ end\n  end\n  return sum\nend", "  local largest = 0\n  local sum = 0\n  for\
    \ i = 1, #lst do\n    local num = lst[i]\n    if num > largest then\n      largest\
    \ = num\n    end\n    sum = sum + num\n  end\n  return sum + largest\nend", " \
    \ local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n  end\n\
    \  return sum\nend", "  local largest, largestPrime = 0, nil\n  for i = 2, #lst\
    \ do\n    local prime, primePrime = primeFactors(lst[i])\n    if prime > largestPrime\
    \ then\n      largest, largestPrime = i, prime\n    end\n  end\n  return largestPrime\
    \ * largest\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n \
    \   local num = lst[i]\n    if num > max then\n      max = num\n    end\n    sum\
    \ = sum + num\n  end\n  return sum\nend", "  local largest = nil\n  local sum\
    \ = 0\n  for i = 1, #lst do\n    local prime = primes[lst[i]]\n    if prime then\n\
    \      if largest == nil then\n        largest = prime\n      elseif prime > largest\
    \ then\n        largest = prime\n      end\n      sum = sum + prime % 10\n   \
    \ end\n  end\n  return sum + largest\nend", "  local max = 0\n  local sum = 0\n\
    \  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n\
    \    sum = sum + math.floor(math.log10(max))\n  end\n  return sum\nend", "  local\
    \ max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n \
    \     max = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if lst[i] > max\
    \ then\n      sum = sum + math.floor(math.abs(lst[i]/max))\n    end\n  end\n \
    \ return sum\nend", "  local largest, largestPrime = 0, nil\n  for i = 2, #lst\
    \ do\n    if lst[i] > largestPrime then\n      largest = i\n      largestPrime\
    \ = lst[i]\n    end\n  end\n  return largestPrime + largest\nend", "  local max\
    \ = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n     \
    \ max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n  end\n\
    \  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n\
    \    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      sum = sum + lst[i]\n    end\n  end\n  return\
    \ sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ > max then\n      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n\
    \  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    local prime = primes[lst[i]]\n    if prime > max then\n      max = prime\n\
    \    end\n    sum = sum + prime % 10\n  end\n  return sum\nend", "  local max\
    \ = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n     \
    \ max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n  end\n\
    \  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n\
    \    if lst[i] > max then\n      max = lst[i]\n    end\n    sum = sum + lst[i]\n\
    \  end\n  return sum + max\nend", "  local largest, largestPrime = 1, 1\n  for\
    \ i = 2, #lst do\n    local prime, primePrime = 1, 1\n    for j = 2, #lst do\n\
    \      if lst[j] % i == 0 then\n        primePrime = primePrime + 1\n        if\
    \ prime > primePrime then\n          largestPrime = primePrime\n          largest\
    \ = i\n        end\n      end\n    end\n  end\n  return largestPrime + largest\n\
    end", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > max then\n      max = n\n    end\n    sum = sum + math.floor(n/max)\
    \ * max\n  end\n  return sum\nend", "  local largest, sum, i, j, k, n = 0, 0,\
    \ 0, 0, 0\n  for i = 1, #lst do\n    local n = lst[i]\n    if n > largest then\n\
    \      largest = n\n    end\n  end\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > largest then\n      largest = n\n    end\n  end\n  for i = 1, #lst\
    \ do\n    local n = lst[i]\n    if n > largest then\n      largest = n\n    end\n\
    \  end\n  for i = 1, #lst do\n    local n = lst[i]\n    if n > largest then\n\
    \      largest = n\n    end\n  end\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > largest then\n      largest = n\n    end\n  end\n  for i = 1, #lst\
    \ do\n    local n = lst[i]\n    if n > largest then\n      largest = n\n    end\n\
    \  end\n  for i = 1, #lst do\n    local n = lst[i]\n    if n > largest then\n\
    \      largest = n\n    end\n  end\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > largest then\n      largest = n\n    end\n  end\n  for i = 1, #lst\
    \ do\n    local n = lst[i]\n    if n > largest then\n      largest = n\n    end\n\
    \  end\n  for i = 1, #lst do\n    local n = lst[i]\n    if n > largest then\n\
    \      largest = n\n    end\n  end\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > largest then\n      largest = n\n    end\n  end\n  for i = 1, #lst\
    \ do\n    local n = lst[i]\n    if n > largest then\n      largest = n\n    end\n\
    \  end\n  for i = 1, #lst do\n    local n = lst[i]\n    if n > largest then\n\
    \      largest = n\n    end\n  end\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > largest then\n      largest = n\n    end\n  end\n  for i = 1, #lst\
    \ do\n    local n = lst[i]\n    if n > largest then\n      largest = n\n    end\n\
    \  end\n  for i = 1, #lst do\n    local n = lst[i]\n    if n > largest then\n\
    \      largest = n\n    end\n  end\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > largest then\n      largest = n\n    end\n  end\n  for i = 1, #lst\
    \ do\n    local n = lst[i]\n    if n > largest then\n      lar", "  local max\
    \ = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n     \
    \ max = lst[i]\n    end\n    sum = sum + lst[i]\n  end\n  return sum + max\nend",
  "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n  end\n\
    \  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n\
    \    if lst[i] > max then\n      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n\
    \  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    local prime, prime_len = prime_of(lst[i])\n    if prime > max then\n\
    \      max = prime\n      sum = sum + prime_len\n    end\n  end\n  return sum\n\
    end", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    local n = lst[i]\n\
    \    if n > max then\n      max = n\n    end\n    sum = sum + math.floor(n/max)\
    \ * max\n  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i\
    \ = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n    sum\
    \ = sum + math.floor(math.log10(max))\n  end\n  return sum\nend", "  local max\
    \ = 0\n  local sum = 0\n  for i = 1, #lst do\n    local n = lst[i]\n    if n >\
    \ max then\n      max = n\n    end\n    sum = sum + math.floor(n/max) * max\n\
    \  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for i =\
    \ 1, #lst do\n    if lst[i] > max then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n\
    \    local prime = primes[lst[i]]\n    if prime > max then\n      max = prime\n\
    \    end\n    sum = sum + prime % 10\n  end\n  return sum\nend", "  local max\
    \ = 0\n  local sum = 0\n  for i = 1, #lst do\n    local num = lst[i]\n    if num\
    \ > max then\n      max = num\n    end\n    if num > 1 then\n      local prime\
    \ = 1\n      local i = 1\n      while prime <= max do\n        if num % prime\
    \ == 0 then\n          break\n        end\n        prime = prime + 1\n      end\n\
    \      if prime > max then\n        sum = sum + prime - max\n      end\n    end\n\
    \  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n\
    \  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n\
    \  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      max = lst[i]\n    end\n    sum = sum + math.floor(math.abs(lst[i])\
    \ / max)\n  end\n  return sum\nend", "  local largest = nil\n  local sum = 0\n\
    \  for i = 1, #lst do\n    if largest == nil then\n      largest = lst[i]\n  \
    \    sum = lst[i]\n    elseif largest < lst[i] then\n      largest = lst[i]\n\
    \      sum = sum + largest\n    end\n  end\n  return sum\nend", "  local largest,\
    \ largest2, largest3, largest4, largest5, largest6, largest7, largest8, largest9,\
    \ largest10, largest11, largest12, largest13, largest14, largest15, largest16,\
    \ largest17, largest18, largest19, largest20, largest21, largest22, largest23,\
    \ largest24, largest25, largest26, largest27, largest28, largest29, largest30,\
    \ largest31, largest32, largest33, largest34, largest35, largest36, largest37,\
    \ largest38, largest39, largest40, largest41, largest42, largest43, largest44,\
    \ largest45, largest46, largest47, largest48, largest49, largest50, largest51,\
    \ largest52, largest53, largest54, largest55, largest56, largest57, largest58,\
    \ largest59, largest60, largest61, largest62, largest63, largest64, largest65,\
    \ largest66, largest67, largest68, largest69, largest70, largest71, largest72,\
    \ largest73, largest74, largest75, largest76, largest77, largest78, largest79,\
    \ largest80, largest81, largest82, largest83, largest84, largest85, largest86,\
    \ largest87, largest88, largest89, largest90, largest91, largest92, largest93,\
    \ largest94, largest95, largest96, largest97, largest98, largest99, largest100})\n\
    \  local largest, largest2, largest3, largest4, largest5, largest6, largest7,\
    \ largest8, largest9, largest10, largest11, largest12, largest13, largest14, largest15,\
    \ largest16, largest17, largest18, largest19, largest20, largest21, largest22,\
    \ largest23, largest24, largest25, largest26, largest27, largest28, largest29,\
    \ largest30, largest31, largest32, largest33, largest34, largest35, largest36,\
    \ largest37, largest38, largest39, largest40, largest41, largest42, largest43,\
    \ largest44, largest45, largest46, largest47, largest48, largest49, largest50,\
    \ largest51, largest52, largest53, largest54, largest55, largest56, largest",
  "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n    sum = sum + math.floor(math.abs(lst[i]) / max)\n\
    \  end\n  return sum\nend", "  local largest, largest2, largest3, largest4, largest5,\
    \ largest6, largest7, largest8, largest9, largest10, largest11, largest12, largest13,\
    \ largest14, largest15, largest16, largest17, largest18, largest19, largest20,\
    \ largest21, largest22, largest23, largest24, largest25, largest26, largest27,\
    \ largest28, largest29, largest30, largest31, largest32, largest33, largest34,\
    \ largest35, largest36, largest37, largest38, largest39, largest40, largest41,\
    \ largest42, largest43, largest44, largest45, largest46, largest47, largest48,\
    \ largest49, largest50, largest51, largest52, largest53, largest54, largest55,\
    \ largest56, largest57, largest58, largest59, largest60, largest61, largest62,\
    \ largest63, largest64, largest65, largest66, largest67, largest68, largest69,\
    \ largest70, largest71, largest72, largest73, largest74, largest75, largest76,\
    \ largest77, largest78, largest79, largest80, largest81, largest82, largest83,\
    \ largest84, largest85, largest86, largest87, largest88, largest89, largest90,\
    \ largest91, largest92, largest93, largest94, largest95, largest96, largest97,\
    \ largest98, largest99, largest100})\n  local largest, largest2, largest3, largest4,\
    \ largest5, largest6, largest7, largest8, largest9, largest10, largest11, largest12,\
    \ largest13, largest14, largest15, largest16, largest17, largest18, largest19,\
    \ largest20, largest21, largest22, largest23, largest24, largest25, largest26,\
    \ largest27, largest28, largest29, largest30, largest31, largest32, largest33,\
    \ largest34, largest35, largest36, largest37, largest38, largest39, largest40,\
    \ largest41, largest42, largest43, largest44, largest45, largest46, largest47,\
    \ largest48, largest49, largest50, largest51, largest52, largest53, largest54,\
    \ largest55, largest56, largest", "  local largest, largest2, largest3, largest4,\
    \ largest5, largest6, largest7, largest8, largest9\n  local largest10, largest11,\
    \ largest12, largest13, largest14, largest15, largest16, largest17, largest18,\
    \ largest19\n  local largest20, largest21, largest22, largest23, largest24, largest25,\
    \ largest26, largest27, largest28, largest29\n  local largest30, largest31, largest32,\
    \ largest33, largest34, largest35, largest36, largest37, largest38, largest39\n\
    \  local largest40, largest41, largest42, largest43, largest44, largest45, largest46,\
    \ largest47, largest48, largest49\n  local largest50, largest51, largest52, largest53,\
    \ largest54, largest55, largest56, largest57, largest58, largest59\n  local largest60,\
    \ largest61, largest62, largest63, largest64, largest65, largest66, largest67,\
    \ largest68, largest69\n  local largest70, largest71, largest72, largest73, largest74,\
    \ largest75, largest76, largest77, largest78, largest79\n  local largest80, largest81,\
    \ largest82, largest83, largest84, largest85, largest86, largest87, largest88,\
    \ largest89\n  local largest90, largest91, largest92, largest93, largest94, largest95,\
    \ largest96, largest97, largest98, largest99\n  local largest100, largest101,\
    \ largest102, largest103, largest104, largest105, largest106, largest107, largest108,\
    \ largest109\n  local largest110, largest111, largest112, largest113, largest114,\
    \ largest115, largest116, largest117, largest118, largest119, largest120\n  local\
    \ largest121, largest122, largest123, largest124, largest125, largest126, largest127,\
    \ largest128, largest129, largest130\n  local largest131, largest132, largest133,\
    \ largest134, largest135, largest136, lar", "  local largest, largest2, largest3,\
    \ largest4, largest5, largest6, largest7, largest8, largest9, largest10, largest11,\
    \ largest12, largest13, largest14, largest15, largest16, largest17, largest18,\
    \ largest19, largest20, largest21, largest22, largest23, largest24, largest25,\
    \ largest26, largest27, largest28, largest29, largest30, largest31, largest32,\
    \ largest33, largest34, largest35, largest36, largest37, largest38, largest39,\
    \ largest40, largest41, largest42, largest43, largest44, largest45, largest46,\
    \ largest47, largest48, largest49, largest50, largest51, largest52, largest53,\
    \ largest54, largest55, largest56, largest57, largest58, largest59, largest60,\
    \ largest61, largest62, largest63, largest64, largest65, largest66, largest67,\
    \ largest68, largest69, largest70, largest71, largest72, largest73, largest74,\
    \ largest75, largest76, largest77, largest78, largest79, largest80, largest81,\
    \ largest82, largest83, largest84, largest85, largest86, largest87, largest88,\
    \ largest89, largest90, largest91, largest92, largest93, largest94, largest95,\
    \ largest96, largest97, largest98, largest99, largest100})\n  local largest, largest2,\
    \ largest3, largest4, largest5, largest6, largest7, largest8, largest9, largest10,\
    \ largest11, largest12, largest13, largest14, largest15, largest16, largest17,\
    \ largest18, largest19, largest20, largest21, largest22, largest23, largest24,\
    \ largest25, largest26, largest27, largest28, largest29, largest30, largest31,\
    \ largest32, largest33, largest34, largest35, largest36, largest37, largest38,\
    \ largest39, largest40, largest41, largest42, largest43, largest44, largest45,\
    \ largest46, largest47, largest48, largest49, largest50, largest51, largest52,\
    \ largest53, largest54, largest55, largest56, largest", "  local max = 0\n  local\
    \ sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n\
    \    end\n  end\n  for i = 1, #lst do\n    if lst[i] > max then\n      sum = sum\
    \ + math.floor(math.log10(max))\n      max = lst[i]\n    end\n  end\n  return\
    \ sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    local\
    \ n = lst[i]\n    if n > max then\n      max = n\n    end\n    sum = sum + math.floor(math.log(n,\
    \ 10))\n  end\n  return sum + max\nend", "  local largest, largestPrime = 0, nil\n\
    \  for i = 2, #lst do\n    if lst[i] > largestPrime then\n      largest, largestPrime\
    \ = i, lst[i]\n    end\n  end\n  return largestPrime + largest\nend", "  local\
    \ max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n \
    \     max = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if lst[i] == max\
    \ then\n      sum = sum + math.floor(math.log10(max))\n    end\n  end\n  return\
    \ sum\nend", "  local largest, largestPrime, largestPrimeIndex\n  for i = 1, #lst\
    \ do\n    local prime = lst[i]\n    if prime > largestPrime then\n      largestPrime\
    \ = prime\n      largestPrimeIndex = i\n    end\n  end\n  local sum = 0\n  for\
    \ i = 1, #lst do\n    local prime = lst[i]\n    if prime == largestPrime then\n\
    \      sum = sum + prime\n    end\n  end\n  return sum\nend", "  local largest\
    \ = nil\n  local sum = 0\n  for i = 1, #lst do\n    local prime = primes[lst[i]]\n\
    \    if prime ~= nil then\n      if largest == nil then\n        largest = prime\n\
    \      elseif prime > largest then\n        largest = prime\n      end\n    end\n\
    \    sum = sum + lst[i]\n  end\n  return sum + largest\nend", "  local max = 0\n\
    \  local sum = 0\n  for i = 1, #lst do\n    local num = lst[i]\n    if num > 0\
    \ then\n      local prime, prime_num = prime_number(num)\n      if prime > max\
    \ then\n        max = prime\n        sum = sum + prime_num\n      end\n    end\n\
    \  end\n  return sum\nend", "  local largest = nil\n  local sum = 0\n  for i =\
    \ 1, #lst do\n    if largest == nil then\n      largest = lst[i]\n      sum =\
    \ lst[i]\n    elseif largest < lst[i] then\n      largest = lst[i]\n      sum\
    \ = sum + largest\n    end\n  end\n  return sum\nend", "  local max = 0\n  local\
    \ sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n\
    \    end\n  end\n  for i = 1, #lst do\n    if lst[i] > max then\n      sum = sum\
    \ + math.floor(math.log10(max))\n      max = lst[i]\n    end\n  end\n  return\
    \ sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ > max then\n      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n\
    \  end\n  return sum\nend", "  local largest = nil\n  local sum = 0\n  for i =\
    \ 1, #lst do\n    local num = lst[i]\n    if largest == nil then\n      largest\
    \ = num\n      sum = num\n    else\n      if num > largest then\n        largest\
    \ = num\n        sum = sum + num\n      else\n        sum = sum + largest\n  \
    \    end\n    end\n  end\n  return sum\nend", "  local largest, largest2, largest3,\
    \ largest4, largest5, largest6 = 0, 0, 0, 0, 0, 0\n  for i = 1, #lst do\n    if\
    \ lst[i] > largest6 then\n      largest6 = lst[i]\n    end\n    if lst[i] > largest5\
    \ then\n      largest5 = lst[i]\n    end\n    if lst[i] > largest4 then\n    \
    \  largest4 = lst[i]\n    end\n    if lst[i] > largest3 then\n      largest3 =\
    \ lst[i]\n    end\n    if lst[i] > largest2 then\n      largest2 = lst[i]\n  \
    \  end\n    if lst[i] > largest then\n      largest = lst[i]\n    end\n  end\n\
    \  return largest * largest2 * largest3 * largest4 * largest5\nend", "  local\
    \ max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n \
    \     max = lst[i]\n    end\n    if lst[i] > 1 then\n      sum = sum + math.floor(math.log10(lst[i]))\n\
    \    end\n  end\n  return sum + max\nend", "  local max = 0\n  local sum = 0\n\
    \  for i = 1, #lst do\n    local n = lst[i]\n    if n > max then\n      max =\
    \ n\n    end\n    sum = sum + math.floor(n / 10)\n  end\n  return sum + max\n\
    end", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] >\
    \ max then\n      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n\
    \  end\n  return sum\nend", "  local largest = 0\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    local prime = primes[lst[i]]\n    if prime > largest then\n   \
    \   largest = prime\n    end\n    sum = sum + prime % 10\n  end\n  return sum\n\
    end", "  local largest = 0\n  for i = 1, #lst do\n    local prime = primes[lst[i]]\n\
    \    if prime > largest then\n      largest = prime\n    end\n  end\n  return\
    \ largest\nend", "  local largest = nil\n  local sum = 0\n  for i = 1, #lst do\n\
    \    local num = lst[i]\n    if largest == nil then\n      largest = num\n   \
    \   sum = num\n    else\n      if num > largest then\n        largest = num\n\
    \        sum = num\n      else\n        sum = sum + num\n      end\n    end\n\
    \  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for i =\
    \ 1, #lst do\n    if lst[i] > max then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend", "  local largest, largestIndex, largestSum = 0, 0, 0\n  for\
    \ i = 1, #lst do\n    if lst[i] > largestSum then\n      largestSum = lst[i]\n\
    \      largestIndex = i\n    end\n  end\n  largestSum = largestSum + largestIndex\n\
    \  return largestSum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  for i =\
    \ 1, #lst do\n    if lst[i] > max then\n      sum = sum + math.floor(math.abs(lst[i]\
    \ - max))\n    end\n  end\n  return sum\nend", "  local largest, largestPrime\
    \ = 1, 1\n  for i = 2, #lst do\n    if lst[i] > largestPrime then\n      largest,\
    \ largestPrime = i, lst[i]\n    end\n  end\n  return largestPrime + largest\n\
    end", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] >\
    \ max then\n      max = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if lst[i]\
    \ > max then\n      sum = sum + math.floor(math.abs(lst[i]/max))\n    end\n  end\n\
    \  return sum\nend", "  local largest, largestPrime = 0, nil\n  for i = 2, #lst\
    \ do\n    if lst[i] > largest then\n      largest = lst[i]\n      largestPrime\
    \ = i\n    end\n  end\n  return largest + largestPrime\nend", "  local largest\
    \ = nil\n  local sum = 0\n  for i = 1, #lst do\n    if largest == nil then\n \
    \     largest = lst[i]\n      sum = lst[i]\n    elseif largest < lst[i] then\n\
    \      largest = lst[i]\n      sum = sum + largest\n    end\n  end\n  return sum\n\
    end", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] >\
    \ max then\n      max = lst[i]\n    end\n    sum = sum + lst[i]\n  end\n  return\
    \ sum + max\nend", "  local largest, largestPrime = 0, nil\n  for i = 1, #lst\
    \ do\n    if lst[i] > largest then\n      largest, largestPrime = lst[i], i\n\
    \    end\n  end\n  return largestPrime * largest\nend", "  local largest = nil\n\
    \  local sum = 0\n  for i = 1, #lst do\n    local prime = primes[lst[i]]\n   \
    \ if prime ~= nil then\n      if largest == nil then\n        largest = prime\n\
    \      else\n        if prime > largest then\n          largest = prime\n    \
    \    end\n      end\n    end\n    sum = sum + lst[i]\n  end\n  return sum + largest\n\
    end", "  local largest, largestPrime = 0, nil\n  for i = 2, #lst do\n    local\
    \ prime = i\n    for j = 2, #lst do\n      if prime % j == 0 then\n        prime\
    \ = nil\n        break\n      end\n    end\n    if prime then\n      if prime\
    \ > largestPrime then\n        largest, largestPrime = i, prime\n      end\n \
    \   end\n  end\n  return largestPrime and largestPrime*10 + largest\nend", " \
    \ local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if lst[i] > max\
    \ then\n      sum = sum + math.floor(math.log10(max))\n      max = lst[i]\n  \
    \  end\n  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i\
    \ = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n    sum\
    \ = sum + lst[i]\n  end\n  return sum + max\nend", "  local max = 0\n  local maxNum\
    \ = 0\n  local maxNumDigit = 0\n  for i = 1, #lst do\n    local num = lst[i]\n\
    \    local numDigit = math.floor(math.log(num, 10))\n    if numDigit > maxNumDigit\
    \ then\n      max = num\n      maxNum = i\n      maxNumDigit = numDigit\n    end\n\
    \  end\n  return maxNum + maxNumDigit\nend", "  local max = 0\n  local sum = 0\n\
    \  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n\
    \    sum = sum + math.floor(math.abs(lst[i]) / max)\n  end\n  return sum\nend",
  "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if lst[i] > max\
    \ then\n      sum = sum + math.floor(math.abs(lst[i] - max))\n    end\n  end\n\
    \  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n\
    \    if lst[i] > max then\n      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n\
    \  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      max = lst[i]\n    end\n    if lst[i] ==\
    \ max then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend", "  local\
    \ largest = 0\n  for i = 1, #lst do\n    if lst[i] > largest then\n      largest\
    \ = lst[i]\n    end\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ > largest then\n      sum = sum + largest\n      largest = lst[i]\n    end\n\
    \  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      max = lst[i]\n    end\n    if lst[i] > 1\
    \ then\n      sum = sum + math.floor(math.log10(lst[i]))\n    end\n  end\n  return\
    \ sum + max\nend", "  local largest = 0\n  local largestPrime = 0\n  local sum\
    \ = 0\n  for i = 1, #lst do\n    local prime = primes[lst[i]]\n    if prime >\
    \ largestPrime then\n      largestPrime = prime\n      largest = lst[i]\n    end\n\
    \    sum = sum + prime % 10\n  end\n  return sum + largestPrime\nend", "  local\
    \ max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n \
    \     max = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if lst[i] > max\
    \ then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend", "  local\
    \ max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n \
    \     max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n  end\n\
    \  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n\
    \    local num = lst[i]\n    if num > max then\n      max = num\n    end\n   \
    \ sum = sum + num\n  end\n  return sum\nend", "  local max = 0\n  local sum =\
    \ 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n\
    \  end\n  for i = 1, #lst do\n    if lst[i] > max then\n      sum = sum + math.floor(math.log10(max))\n\
    \      max = lst[i]\n    end\n  end\n  return sum\nend", "  local max = 0\n  local\
    \ sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n\
    \    end\n    sum = sum + math.floor(math.log10(max))\n  end\n  return sum\nend",
  "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    local prime = primes[lst[i]]\n\
    \    if prime > max then\n      max = prime\n      sum = 0\n    end\n    sum =\
    \ sum + prime % 10\n  end\n  return sum\nend", "  local max = 0\n  local sum =\
    \ 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n\
    \    sum = sum + math.floor(math.log10(max))\n  end\n  return sum\nend", "  local\
    \ largest, largestPrime = 0, nil\n  for i = 2, #lst do\n    local prime = i\n\
    \    for j = 2, #lst do\n      if prime % j == 0 then\n        prime = nil\n \
    \       break\n      end\n    end\n    if prime then\n      if prime > largestPrime\
    \ then\n        largest, largestPrime = i, prime\n      end\n    end\n  end\n\
    \  return largestPrime and largestPrime + largest\nend", "  local max = 0\n  local\
    \ sum = 0\n  for i = 1, #lst do\n    local n = lst[i]\n    if n > max then\n \
    \     max = n\n    end\n    sum = sum + math.floor(n)\n  end\n  return sum + max\n\
    end", "  local largest = nil\n  local sum = 0\n  for i = 1, #lst do\n    local\
    \ num = lst[i]\n    if largest == nil then\n      largest = num\n      sum = num\n\
    \    else\n      if num > largest then\n        largest = num\n        sum = num\n\
    \      else\n        sum = sum + num\n      end\n    end\n  end\n  return sum\n\
    end", "  local largest = nil\n  local sum = 0\n  for i = 1, #lst do\n    local\
    \ prime = primes[lst[i]]\n    if prime ~= nil then\n      if largest == nil then\n\
    \        largest = prime\n      else\n        if prime > largest then\n      \
    \    largest = prime\n        end\n      end\n    end\n    sum = sum + lst[i]\n\
    \  end\n  return sum + largest\nend", "  local max = 0\n  local sum = 0\n  for\
    \ i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n\
    \  for i = 1, #lst do\n    if lst[i] > max then\n      sum = sum + lst[i]\n  \
    \  end\n  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i\
    \ = 1, #lst do\n    local num = lst[i]\n    if num > 0 then\n      local prime\
    \ = primes[num + 1]\n      if prime > 0 then\n        max = prime\n        sum\
    \ = sum + num\n      else\n        max = num\n        sum = sum + num\n      end\n\
    \    end\n  end\n  return sum + max\nend", "  local max = 0\n  local sum = 0\n\
    \  for i = 1, #lst do\n    local prime = primes[lst[i]]\n    if prime > max then\n\
    \      max = prime\n    end\n    sum = sum + prime % 10\n  end\n  return sum\n\
    end", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] >\
    \ max then\n      max = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if lst[i]\
    \ == max then\n      sum = sum + math.floor(math.abs(lst[i] - max))\n    end\n\
    \  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    local n = lst[i]\n    if n > max then\n      max = n\n    end\n    sum\
    \ = sum + math.floor(n)\n  end\n  return sum\nend", "  local largest = nil\n \
    \ local sum = 0\n  for i = 1, #lst do\n    if largest == nil then\n      largest\
    \ = lst[i]\n      sum = lst[i]\n    else\n      if lst[i] > largest then\n   \
    \     largest = lst[i]\n        sum = lst[i]\n      else\n        sum = sum +\
    \ lst[i]\n      end\n    end\n  end\n  return sum\nend", "  local largest = nil\n\
    \  local sum = 0\n  for i = 1, #lst do\n    local num = lst[i]\n    if largest\
    \ == nil then\n      largest = num\n      sum = num\n    elseif largest < num\
    \ then\n      largest = num\n      sum = sum + num\n    end\n  end\n  return sum\n\
    end", "  local largest, largest2, largest3, largest4, largest5, largest6, largest7,\
    \ largest8, largest9, largest10, largest11, largest12, largest13, largest14, largest15,\
    \ largest16, largest17, largest18, largest19, largest20, largest21, largest22,\
    \ largest23, largest24, largest25, largest26, largest27, largest28, largest29,\
    \ largest30, largest31, largest32, largest33, largest34, largest35, largest36,\
    \ largest37, largest38, largest39, largest40, largest41, largest42, largest43,\
    \ largest44, largest45, largest46, largest47, largest48, largest49, largest50,\
    \ largest51, largest52, largest53, largest54, largest55, largest56, largest57,\
    \ largest58, largest59, largest60, largest61, largest62, largest63, largest64,\
    \ largest65, largest66, largest67, largest68, largest69, largest70, largest71,\
    \ largest72, largest73, largest74, largest75, largest76, largest77, largest78,\
    \ largest79, largest80, largest81, largest82, largest83, largest84, largest85,\
    \ largest86, largest87, largest88, largest89, largest90, largest91, largest92,\
    \ largest93, largest94, largest95, largest96, largest97, largest98, largest99,\
    \ largest100})\n  local largest, largest2, largest3, largest4, largest5, largest6,\
    \ largest7, largest8, largest9, largest10, largest11, largest12, largest13, largest14,\
    \ largest15, largest16, largest17, largest18, largest19, largest20, largest21,\
    \ largest22, largest23, largest24, largest25, largest26, largest27, largest28,\
    \ largest29, largest30, largest31, largest32, largest33, largest34, largest35,\
    \ largest36, largest37, largest38, largest39, largest40, largest41, largest42,\
    \ largest43, largest44, largest45, largest46, largest47, largest48, largest49,\
    \ largest50, largest51, largest52, largest53, largest54, largest55, largest56,\
    \ largest", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ > max then\n      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n\
    \  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n\
    \  end\n  return sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    local n = lst[i]\n    if n > max then\n      max = n\n    end\n    if\
    \ n > 1 then\n      local m = math.floor(math.sqrt(n))\n      local p = 2\n  \
    \    while p <= m do\n        if n % p == 0 then\n          break\n        end\n\
    \        p = p + 1\n      end\n      if p > m then\n        sum = sum + math.floor(n/p)\n\
    \      end\n    end\n  end\n  return sum\nend", "  local largest, largestPrime\
    \ = nil, nil\n  for i = 1, #lst do\n    local prime, primePrime = primeFactors(lst[i])\n\
    \    if prime > largestPrime then\n      largest = lst[i]\n      largestPrime\
    \ = prime\n    end\n  end\n  return largestPrime + largest\nend", "  local max\
    \ = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n     \
    \ max = lst[i]\n    end\n  end\n  for i = 1, #lst do\n    if lst[i] == max then\n\
    \      sum = sum + i\n    end\n  end\n  return sum\nend", "  local largest = nil\n\
    \  local sum = 0\n  for i = 1, #lst do\n    if largest == nil then\n      largest\
    \ = lst[i]\n      sum = lst[i]\n    elseif largest < lst[i] then\n      largest\
    \ = lst[i]\n      sum = sum + largest\n    end\n  end\n  return sum\nend", " \
    \ local largest = nil\n  local sum = 0\n  for i = 1, #lst do\n    if largest ==\
    \ nil then\n      largest = lst[i]\n      sum = lst[i]\n    elseif largest < lst[i]\
    \ then\n      largest = lst[i]\n      sum = sum + largest\n    end\n  end\n  return\
    \ sum\nend", "  local largest = 0\n  local sum = 0\n  for i = 1, #lst do\n   \
    \ local prime = primes[lst[i]]\n    if prime > largest then\n      largest = prime\n\
    \    end\n    sum = sum + prime % 10\n  end\n  return sum + largest\nend", " \
    \ local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n    sum = sum + math.floor(math.log10(max))\n  end\n\
    \  return sum\nend", "  local largest = nil\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    local num = lst[i]\n    if largest==nil then\n      largest = num\n\
    \      sum = num\n    elseif largest<num then\n      largest = num\n      sum\
    \ = sum + num\n    end\n  end\n  return sum\nend", "  local max = 0\n  local sum\
    \ = 0\n  for i = 1, #lst do\n    local prime = primes[lst[i]]\n    if prime >\
    \ max then\n      max = prime\n    end\n    sum = sum + prime % 10\n  end\n  return\
    \ sum\nend", "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ > max then\n      max = lst[i]\n    end\n    if lst[i] == max then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend", "  local max = 0\n  local\
    \ sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n\
    \    end\n    sum = sum + math.floor(math.log10(max))\n  end\n  return sum\nend",
  "  local max = 0\n  local sum = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n\
    \      max = lst[i]\n    end\n    sum = sum + math.floor(math.abs(lst[i]) / max)\n\
    \  end\n  return sum\nend", "  local largest, sum = 0, 0\n  for i = 2, #lst do\n\
    \    if lst[i] > largest then\n      largest, sum = lst[i], sum\n    end\n  end\n\
    \  return sum + largest\nend", "  local largest = nil\n  local sum = 0\n  for\
    \ i = 1, #lst do\n    local prime = primes[lst[i]]\n    if prime ~= nil then\n\
    \      if largest == nil then\n        largest = prime\n      elseif prime > largest\
    \ then\n        largest = prime\n      end\n    end\n    sum = sum + lst[i]\n\
    \  end\n  return sum + largest\nend", "  local max = 0\n  local sum = 0\n  for\
    \ i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n    sum\
    \ = sum + math.floor(math.log10(max))\n  end\n  return sum\nend", "  local max\
    \ = 0\n  local sum = 0\n  for i = 1, #lst do\n    local n = lst[i]\n    if n >\
    \ max then\n      max = n\n    end\n    sum = sum + math.floor(n/max) * max\n\
    \  end\n  return sum\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

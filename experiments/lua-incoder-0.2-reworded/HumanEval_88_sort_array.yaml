name: HumanEval_88_sort_array
language: lua
prompt: "-- Given a table of non-negative integers, return a colua of the given table\
  \ after sorting,\n-- you will sort the given table in ascending order if the sum(\
  \ first index value, last index value) is odd,\n-- or sort it in descending order\
  \ if the sum( first index value, last index value) is even.\n-- Note:\n-- * don't\
  \ change the given table.\n-- Examples:\n-- >>> sort_array({})\n-- {}\n-- >>> sort_array({5})\n\
  -- {5}\n-- >>> sort_array({2, 4, 3, 0, 1, 5})\n-- {0, 1, 2, 3, 4, 5}\n-- >>> sort_array({2,\
  \ 4, 3, 0, 1, 5, 6})\n-- {6, 5, 4, 3, 2, 1, 0}\nlocal function sort_array(array)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_array\n\
  \    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({5}), {5})\n\
  \    lu.assertEquals(candidate({2, 4, 3, 0, 1, 5}), {0, 1, 2, 3, 4, 5})\n    lu.assertEquals(candidate({2,\
  \ 4, 3, 0, 1, 5, 6}), {6, 5, 4, 3, 2, 1, 0})\n    lu.assertEquals(candidate({2,\
  \ 1}), {1, 2})\n    lu.assertEquals(candidate({15, 42, 87, 32, 11, 0}), {0, 11,\
  \ 15, 32, 42, 87})\n    lu.assertEquals(candidate({21, 14, 23, 11}), {23, 21, 14,\
  \ 11})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local sum = 0\n  for i = 1, #array do\n    sum = sum + array[i]\n\
    \  end\n  if sum % 2 == 1 then\n    table.sort(array)\n  else\n    table.sort(array,\
    \ function(x, y)\n      return x > y\n    end)\n  end\n  return array\nend", " \
    \ local sum = 0\n  for _, v in ipairs(array) do\n    sum = sum + v\n  end\n  if\
    \ sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array, function(a,\
    \ b) return b - a end)\n  end\n  return array\nend", "  local function compare(a,b)\n\
    \    if a < b then\n      return -1\n    elseif b < a then\n      return 1\n \
    \   else\n      return 0\n    end\n  end\n  table.sort(array, compare)\n  return\
    \ array\nend", "  local function compare(a,b)\n    if a < b then\n      return\
    \ -1\n    elseif b < a then\n      return 1\n    else\n      return 0\n    end\n\
    \  end\n  table.sort(array, compare)\n  return array\nend", "  local sum = 0\n\
    \  for i = 1, #array do\n    sum = sum + array[i]\n  end\n  if sum % 2 ~= 0 then\n\
    \    table.sort(array)\n  else\n    table.sort(array, function(a, b) return a\
    \ < b end)\n  end\n  return array\nend", "  local sum = 0\n  local results = {}\n\
    \  for i = 1, #array do\n    sum = sum + array[i]\n    table.insert(results, array[i])\n\
    \  end\n  if sum % 2 == 1 then\n    table.sort(results)\n  else\n    table.sort(results,\
    \ function(a, b)\n      return a > b\n    end)\n  end\n  return results\nend",
  "  local sum = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n  end\n\
    \  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array,\
    \ function(x, y)\n      return x > y\n    end)\n  end\n  return array\nend", " \
    \ local sum = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n \
    \ end\n  if sum % 2 == 1 then\n    table.sort(array)\n  else\n    table.sort(array,\
    \ function(v1, v2)\n      return v2 < v1\n    end)\n  end\n  return array\nend",
  "  local sum = 0\n  for _, v in ipairs(array) do\n    sum = sum + v\n  end\n  if\
    \ sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array, function(a,\
    \ b)\n      if a > b then\n        return 1\n      elseif a < b then\n       \
    \ return -1\n      else\n        return 0\n      end\n    end)\n  end\n  return\
    \ array\nend", "  local sum = 0\n  for _, value in ipairs(array) do\n    sum =\
    \ sum + value\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n\
    \    table.sort(array, function(first, last)\n      return last - first\n    end)\n\
    \  end\n  return array\nend", "  local sum = 0\n  for i = 1, #array do\n    sum\
    \ = sum + array[i]\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n\
    \    table.sort(array, function(first, last)\n      return last - first\n    end)\n\
    \  end\n  return array\nend", "  local sum = 0\n  local results = {}\n  for i\
    \ = 1, #array do\n    sum = sum + array[i]\n    table.insert(results, array[i])\n\
    \  end\n  if sum % 2 ~= 0 then\n    table.sort(results)\n  else\n    table.sort(results,\
    \ function(a, b)\n      return a > b\n    end)\n  end\n  return results\nend",
  "  local sum = 0\n  local result = {}\n  for _, v in ipairs(array) do\n    sum =\
    \ sum + v\n    if sum % 2 == 1 then\n      table.insert(result, v)\n    else\n\
    \      table.remove(result, #result - 1)\n      table.insert(result, v)\n    end\n\
    \  end\n  return result\nend", "  local sum = 0\n  for _, v in ipairs(array) do\n\
    \    sum = sum + v\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n\
    \    table.sort(array, function(v1, v2)\n      return v2 < v1\n    end)\n  end\n\
    \  return array\nend", "  local sum = 0\n  for i = 1, #array do\n    sum = sum\
    \ + array[i]\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n \
    \   table.sort(array, function(v1, v2)\n      return v2 < v1\n    end)\n  end\n\
    \  return array\nend", "  local sum = 0\n  local result = {}\n  for _, value in\
    \ ipairs(array) do\n    sum = sum + value\n    table.insert(result, value)\n \
    \ end\n  if sum % 2 ~= 0 then\n    table.sort(result)\n  else\n    table.sort(result,\
    \ function(a, b) return a > b end)\n  end\n  return result\nend", "  local sum\
    \ = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n  end\n  if\
    \ sum % 2 == 1 then\n    table.sort(array)\n  else\n    table.sort(array, function(a,\
    \ b)\n      if a > b then\n        return 1\n      elseif a < b then\n       \
    \ return -1\n      else\n        return 0\n      end\n    end)\n  end\n  return\
    \ array\nend", "  local sum = 0\n  for _, v in ipairs(array) do\n    sum = sum\
    \ + v\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array,\
    \ function(v1, v2)\n      return v1 > v2\n    end)\n  end\n  return array\nend",
  "  local sum = 0\n  local i = 0\n  local j = 1\n  local temp\n  local results =\
    \ {}\n  local first_index\n  local last_index\n  local first_index_value\n  local\
    \ last_index_value\n  local is_odd_or_even\n  local is_ascending_or_descending\n\
    \  local is_ascending\n  local is_descending\n  local is_ascending_or_descending\n\
    \  local is_ascending_or_descending\n  local is_ascending_or_descending\n  local\
    \ is_ascending_or_descending\n  local is_ascending_or_descending\n  local is_ascending_or_descending\n\
    \  local is_ascending_or_descending\n  local is_ascending_or_descending\n  local\
    \ is_ascending_or_descending\n  local is_ascending_or_descending\n  local is_ascending_or_descending\n\
    \  local is_ascending_or_descending\n  local is_ascending_or_descending\n  local\
    \ is_ascending_or_descending\n  local is_ascending_or_descending\n  local is_ascending_or_descending\n\
    \  local is_ascending_or_descending\n  local is_ascending_or_descending\n  local\
    \ is_ascending_or_descending\n  local is_ascending_or_descending\n  local is_ascending_or_descending\n\
    \  local is_ascending_or_descending\n  local is_ascending_or_descending\n  local\
    \ is_ascending_or_descending\n  local is_ascending_or_descending\n  local is_ascending_or_descending\n\
    \  local is_ascending_or_descending\n  local is_ascending_or_descending\n  local\
    \ is_ascending_or_descending\n  local is_ascending_or_descending\n  local is_ascending_or_descending\n\
    \  local is_ascending_or_descending\n  local is_ascending_or_descending\n  local\
    \ is_ascending_or_descending\n  local is_ascending_or_descending\n  local is_ascending_or_descending\n\
    \  local is_ascending_or_descending\n  local is_ascending_or_descending\n  local\
    \ is_ascending_or_descending\n  local is_ascending_or_descending\n  local is_ascending_or_descending\n\
    \  local is_ascending_or_descending\n  local is_ascending_or_descending\n  local\
    \ is_ascending_or_descending\n  local is_ascending_or_descending\n  local is_ascending_or_descending\n\
    \  local is_ascending_or_descending\n  local is_ascending_or_descending\n  local\
    \ is_ascending_or_", "  local sum = 0\n  for _, value in ipairs(array) do\n  \
    \  sum = sum + value\n  end\n  if sum % 2 == 1 then\n    table.sort(array)\n \
    \ else\n    table.sort(array, function(a, b)\n      return b - a\n    end)\n \
    \ end\n  return array\nend", "  local sum = 0\n  for i = 1, #array do\n    sum\
    \ = sum + array[i]\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n\
    \    table.sort(array, function(first, last)\n      return last - first\n    end)\n\
    \  end\n  return array\nend", "  local sum = 0\n  for _, value in ipairs(array)\
    \ do\n    sum = sum + value\n  end\n  if sum % 2 == 1 then\n    table.sort(array)\n\
    \  else\n    table.sort(array, function(first, last)\n      return last - first\n\
    \    end)\n  end\n  return array\nend", "  local sum = 0\n  for _, value in ipairs(array)\
    \ do\n    sum = sum + value\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n\
    \  else\n    table.sort(array, function(x, y)\n      return x > y\n    end)\n\
    \  end\n  return array\nend", "  local sum = 0\n  for _, value in ipairs(array)\
    \ do\n    sum = sum + value\n  end\n  if sum % 2 == 1 then\n    table.sort(array)\n\
    \  else\n    table.sort(array, function(a, b)\n      return b - a\n    end)\n\
    \  end\n  return array\nend", "  local sum = 0\n  for _, value in ipairs(array)\
    \ do\n    sum = sum + value\n  end\n  if sum % 2 == 1 then\n    table.sort(array)\n\
    \  else\n    table.sort(array, function(v1, v2)\n      return v2 < v1\n    end)\n\
    \  end\n  return array\nend", "  local sum = 0\n  for _, value in ipairs(array)\
    \ do\n    sum = sum + value\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n\
    \  else\n    table.sort(array, function(a, b) return a < b end)\n  end\n  return\
    \ array\nend", "  local sum = 0\n  local temp = {}\n  for _, v in ipairs(array)\
    \ do\n    sum = sum + v\n    table.insert(temp, v)\n  end\n  if sum % 2 == 1 then\n\
    \    table.sort(temp)\n  else\n    table.sort(temp, function(a, b) return a >\
    \ b end)\n  end\n  return temp\nend", "  local sum = 0\n  for _, value in ipairs(array)\
    \ do\n    sum = sum + value\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n\
    \  else\n    table.sort(array, function(a, b)\n      if a > b then\n        return\
    \ -1\n      elseif a < b then\n        return 1\n      else\n        return 0\n\
    \      end\n    end)\n  end\n  return array\nend", "  local sum = 0\n  for _,\
    \ v in ipairs(array) do\n    sum = sum + v\n  end\n  if sum % 2 == 1 then\n  \
    \  table.sort(array)\n  else\n    table.sort(array, function(a, b) return a >\
    \ b end)\n  end\n  return array\nend", "  local sum = 0\n  local sorted_array\
    \ = {}\n  for _, value in ipairs(array) do\n    sum = sum + value\n    sorted_array[#sorted_array\
    \ + 1] = value\n  end\n  if sum % 2 == 1 then\n    table.sort(sorted_array, function(a,\
    \ b) return a < b end)\n  else\n    table.sort(sorted_array, function(a, b) return\
    \ a > b end)\n  end\n  return sorted_array\nend", "  local function is_odd(n)\n\
    \    return n % 2 == 1\n  end\n  local function is_even(n)\n    return n % 2 ==\
    \ 0\n  end\n  local function is_sorted(array)\n    local sum = 0\n    for _, v\
    \ in ipairs(array) do\n      sum = sum + v\n    end\n    return sum % 2 == 0\n\
    \  end\n  local function is_sorted(array)\n    local sum = 0\n    for _, v in\
    \ ipairs(array) do\n      sum = sum + v\n    end\n    return sum % 2 == 0\n  end\n\
    \  local function is_sorted(array)\n    local sum = 0\n    for _, v in ipairs(array)\
    \ do\n      sum = sum + v\n    end\n    return sum % 2 == 0\n  end\n  local function\
    \ is_sorted(array)\n    local sum = 0\n    for _, v in ipairs(array) do\n    \
    \  sum = sum + v\n    end\n    return sum % 2 == 0\n  end\n  local function is_sorted(array)\n\
    \    local sum = 0\n    for _, v in ipairs(array) do\n      sum = sum + v\n  \
    \  end\n    return sum % 2 == 0\n  end\n  local function is_sorted(array)\n  \
    \  local sum = 0\n    for _, v in ipairs(array) do\n      sum = sum + v\n    end\n\
    \    return sum % 2 == 0\n  end\n  local function is_sorted(array)\n    local\
    \ sum = 0\n    for _, v in ipairs(array) do\n      sum = sum + v\n    end\n  \
    \  return sum % 2 == 0\n  end\n  local function is_sorted(array)\n    local sum\
    \ = 0\n    for _, v in ipairs(array) do\n      sum = sum + v\n    end\n    return\
    \ sum % 2 == 0\n  end\n  local function is_sorted(array)\n    local sum = 0\n\
    \    for _, v in ipairs(array) do\n      sum = sum + v\n    end\n    return sum\
    \ % 2 == 0\n  end\n  local function is_sorted(array)\n    local sum = 0\n    for\
    \ _, v in ipairs(array) do\n      sum = sum + v\n    end\n    return sum % 2 ==\
    \ 0\n  end\n  local function is_sorted(array)\n    local sum = 0\n    for _, v\
    \ in ipairs(array) do\n      sum = sum + v\n    end\n    return sum % 2 == 0\n\
    \  end\n  local function is_sorted(array)\n    local sum = 0\n    for _, v in\
    \ ipairs(array) do\n      sum = sum + v\n    end\n    return sum % 2 == 0\n  end\n\
    \  local function is_sorted(array)\n    local sum = 0\n    for _, v in ipairs(array)\
    \ do\n      sum = sum + v", "  local sum = 0\n  for i = 1, #array do\n    sum\
    \ = sum + array[i]\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n\
    \    table.sort(array, function(v1, v2)\n      return v2 < v1\n    end)\n  end\n\
    \  return array\nend", "  local sum = 0\n  local result = {}\n  for i = 1, #array\
    \ do\n    sum = sum + array[i]\n    if sum % 2 == 1 then\n      table.insert(result,\
    \ array[i])\n    else\n      table.insert(result, array[#array + 1])\n    end\n\
    \  end\n  return result\nend", "  local sum = 0\n  local result = {}\n  for _,\
    \ v in ipairs(array) do\n    sum = sum + v\n    table.insert(result, v)\n  end\n\
    \  if sum % 2 == 1 then\n    table.sort(result)\n  else\n    table.sort(result,\
    \ function(a, b)\n      return b - a\n    end)\n  end\n  return result\nend",
  "  local sum = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n  end\n\
    \  if sum % 2 == 1 then\n    table.sort(array)\n  else\n    table.sort(array,\
    \ function(v1, v2)\n      return v2 < v1\n    end)\n  end\n  return array\nend",
  "  local sum = 0\n  for _, v in ipairs(array) do\n    sum = sum + v\n  end\n  if\
    \ sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array, function(a,\
    \ b)\n      if a < b then\n        return -1\n      elseif a > b then\n      \
    \  return 1\n      else\n        return 0\n      end\n    end)\n  end\n  return\
    \ array\nend", "  local sum = 0\n  local index = 1\n  for _, value in ipairs(array)\
    \ do\n    sum = sum + value\n    if sum > 0 then\n      index = index + 1\n  \
    \  end\n  end\n  if sum % 2 == 1 then\n    table.sort(array)\n  else\n    table.sort(array,\
    \ function(first, last)\n      return last - first\n    end)\n  end\n  return\
    \ array\nend", "  local sum = 0\n  for _, value in ipairs(array) do\n    sum =\
    \ sum + value\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n\
    \    table.sort(array, function(a, b) return b - a end)\n  end\n  return array\n\
    end", "  local sum = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n\
    \  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array,\
    \ function(a, b) return a > b end)\n  end\n  return array\nend", "  local sum\
    \ = 0\n  local result = {}\n  for _, v in ipairs(array) do\n    sum = sum + v\n\
    \    table.insert(result, v)\n  end\n  if sum % 2 ~= 0 then\n    table.sort(result)\n\
    \  else\n    table.sort(result, function(a, b) return a < b end)\n  end\n  return\
    \ result\nend", "  local sum = 0\n  local i = 0\n  local j = 1\n  local k = 1\n\
    \  while i < #array do\n    sum = array[i] + array[j]\n    if sum % 2 == 0 then\n\
    \      array[k] = array[i]\n      i = i + 1\n    else\n      array[k] = array[j]\n\
    \      j = j + 1\n    end\n    k = k + 1\n  end\n  return array\nend", "  local\
    \ sum = 0\n  local result = {}\n  for _, value in ipairs(array) do\n    sum =\
    \ sum + value\n    table.insert(result, value)\n  end\n  if sum % 2 ~= 0 then\n\
    \    table.sort(result)\n  else\n    table.sort(result, function(a, b)\n     \
    \ return a > b\n    end)\n  end\n  return result\nend", "  local sum = 0\n  local\
    \ result = {}\n  for _, v in ipairs(array) do\n    sum = sum + v\n  end\n  if\
    \ sum % 2 == 1 then\n    table.sort(result, function(a, b) return a < b end)\n\
    \  else\n    table.sort(result, function(a, b) return a > b end)\n  end\n  return\
    \ result\nend", "  local function helper(array, sum)\n    if sum % 2 == 1 then\n\
    \      table.sort(array)\n    else\n      table.sort(array, function(a, b) return\
    \ a < b end)\n    end\n    return array\n  end\n  local sum = 0\n  local results\
    \ = {}\n  for i = 1, #array do\n    sum = sum + array[i]\n    results[#results\
    \ + 1] = array[i]\n  end\n  return helper(results, sum)\nend", "  local sum =\
    \ 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n  end\n  if sum\
    \ % 2 == 1 then\n    table.sort(array)\n  else\n    table.sort(array, function(v1,\
    \ v2)\n      if v1 > v2 then\n        return -1\n      elseif v1 < v2 then\n \
    \       return 1\n      else\n        return 0\n      end\n    end)\n  end\n \
    \ return array\nend", "  local sum = 0\n  for _, v in ipairs(array) do\n    sum\
    \ = sum + v\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n  \
    \  table.sort(array, function(a, b) return a > b end)\n  end\n  return array\n\
    end", "  local sum = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n\
    \  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array,\
    \ function(left, right)\n      return right - left\n    end)\n  end\n  return\
    \ array\nend", "  local sum = 0\n  for _, value in ipairs(array) do\n    sum =\
    \ sum + value\n  end\n  if sum % 2 == 1 then\n    table.sort(array)\n  else\n\
    \    table.sort(array, function(v1, v2)\n      if v1 < v2 then\n        return\
    \ -1\n      elseif v1 > v2 then\n        return 1\n      else\n        return\
    \ 0\n      end\n    end)\n  end\n  return array\nend", "  local sum = 0\n  local\
    \ index = 1\n  for i = 1, #array do\n    sum = sum + array[i]\n    if sum > 0\
    \ then\n      array[index] = array[i]\n      index = index + 1\n    end\n  end\n\
    \  if sum % 2 == 1 then\n    table.sort(array)\n  else\n    table.sort(array,\
    \ function(x, y)\n      return y - x\n    end)\n  end\n  return array\nend", " \
    \ local sum = 0\n  local max_sum = 0\n  for i = 1, #array do\n    sum = sum +\
    \ array[i]\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n \
    \ if max_sum % 2 == 1 then\n    table.sort(array)\n  else\n    table.sort(array,\
    \ function(x, y)\n      return y > x\n    end)\n  end\n  return array\nend", " \
    \ local sum = 0\n  for _, v in ipairs(array) do\n    sum = sum + v\n  end\n  if\
    \ sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array, function(a,\
    \ b) return b - a end)\n  end\n  return array\nend", "  local sum = 0\n  for _,\
    \ value in ipairs(array) do\n    sum = sum + value\n  end\n  if sum % 2 == 1 then\n\
    \    table.sort(array)\n  else\n    table.sort(array, function(v1, v2)\n     \
    \ return v2 < v1\n    end)\n  end\n  return array\nend", "  local sum = 0\n  for\
    \ _, v in ipairs(array) do\n    sum = sum + v\n  end\n  if sum % 2 ~= 0 then\n\
    \    table.sort(array)\n  else\n    table.sort(array, function(a, b) return b\
    \ - a end)\n  end\n  return array\nend", "  local sum = 0\n  for i = 1, #array\
    \ do\n    sum = sum + array[i]\n  end\n  if sum % 2 == 1 then\n    table.sort(array)\n\
    \  else\n    table.sort(array, function(a, b) return a > b end)\n  end\n  return\
    \ array\nend", "  local sum = 0\n  local result = {}\n  for _, value in ipairs(array)\
    \ do\n    sum = sum + value\n    table.insert(result, value)\n  end\n  if sum\
    \ % 2 ~= 0 then\n    table.sort(result)\n  else\n    table.sort(result, function(a,\
    \ b) return a < b end)\n  end\n  return result\nend", "  local sum = 0\n  for\
    \ i = 1, #array do\n    sum = sum + array[i]\n  end\n  if sum % 2 == 1 then\n\
    \    table.sort(array)\n  else\n    table.sort(array, function(a, b) return a\
    \ > b end)\n  end\n  return array\nend", "  local sum = 0\n  for _, value in ipairs(array)\
    \ do\n    sum = sum + value\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n\
    \  else\n    table.sort(array, function(a, b)\n      if a < b then\n        return\
    \ -1\n      elseif a > b then\n        return 1\n      else\n        return 0\n\
    \      end\n    end)\n  end\n  return array\nend", "  local sum = 0\n  for _,\
    \ value in ipairs(array) do\n    sum = sum + value\n  end\n  if sum % 2 ~= 0 then\n\
    \    table.sort(array)\n  else\n    table.sort(array, function(a, b) return b\
    \ - a end)\n  end\n  return array\nend", "  local sum = 0\n  local index = 1\n\
    \  local new_array = {}\n  local last_index = 1\n  local last_value = 1\n  local\
    \ last_sum = 0\n  while index <= #array do\n    sum = sum + array[index]\n   \
    \ if sum % 2 == 1 then\n      new_array[index] = last_value\n      last_value\
    \ = array[index]\n      last_index = index\n      last_sum = sum\n    end\n  \
    \  index = index + 1\n  end\n  if last_sum % 2 == 0 then\n    new_array[last_index]\
    \ = last_value\n  end\n  return new_array\nend", "  local sum = 0\n  for _, value\
    \ in ipairs(array) do\n    sum = sum + value\n  end\n  if sum % 2 == 1 then\n\
    \    table.sort(array)\n  else\n    table.sort(array, function(left, right)\n\
    \      return right - left\n    end)\n  end\n  return array\nend", "  local sum\
    \ = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n  end\n  if\
    \ sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array, function(a,\
    \ b)\n      return a > b\n    end)\n  end\n  return array\nend", "  local sum\
    \ = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n  end\n  if\
    \ sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array, function(a,\
    \ b)\n      return b - a\n    end)\n  end\n  return array\nend", "  local sum\
    \ = 0\n  for _, v in ipairs(array) do\n    sum = sum + v\n  end\n  if sum % 2\
    \ == 1 then\n    table.sort(array)\n  else\n    table.sort(array, function(v1,\
    \ v2)\n      return v1 > v2\n    end)\n  end\n  return array\nend", "  local sum\
    \ = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n  end\n  if\
    \ sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array, function(a,\
    \ b) return a < b end)\n  end\n  return array\nend", "  local sum = 0\n  for _,\
    \ v in ipairs(array) do\n    sum = sum + v\n  end\n  if sum % 2 ~= 0 then\n  \
    \  table.sort(array)\n  else\n    table.sort(array, function(a, b) return a <\
    \ b end)\n  end\n  return array\nend", "  local sum = 0\n  local results = {}\n\
    \  for i = 1, #array do\n    sum = sum + array[i]\n    results[i] = array[i]\n\
    \  end\n  if sum % 2 ~= 0 then\n    table.sort(results, function(a, b) return\
    \ a < b end)\n  else\n    table.sort(results, function(a, b) return a > b end)\n\
    \  end\n  return results\nend", "  local sum = 0\n  local results = {}\n  for\
    \ _, value in ipairs(array) do\n    sum = sum + value\n    results[#results +\
    \ 1] = value\n  end\n  if sum % 2 ~= 0 then\n    table.sort(results, function(a,\
    \ b) return a < b end)\n  else\n    table.sort(results, function(a, b) return\
    \ a > b end)\n  end\n  return results\nend", "  local sum = 0\n  local result\
    \ = {}\n  for _, v in ipairs(array) do\n    sum = sum + v\n    if sum % 2 == 1\
    \ then\n      table.insert(result, v)\n    else\n      table.remove(result, v\
    \ - 1)\n      table.remove(result, v)\n    end\n  end\n  return result\nend",
  "  local sum = 0\n  for i = 1, #array do\n    sum = sum + array[i]\n  end\n  if\
    \ sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array, function(a,\
    \ b) return a < b end)\n  end\n  return array\nend", "  local sum = 0\n  local\
    \ result = {}\n  for _, v in ipairs(array) do\n    sum = sum + v\n    table.insert(result,\
    \ v)\n  end\n  if sum % 2 == 1 then\n    table.sort(result)\n  else\n    table.sort(result,\
    \ function(a, b) return a > b end)\n  end\n  return result\nend", "  local sum\
    \ = 0\n  local index = 1\n  local results = {}\n  local i = 1\n  while i <= #array\
    \ do\n    sum = sum + array[i]\n    if sum % 2 == 1 then\n      table.insert(results,\
    \ array[i])\n    else\n      table.insert(results, array[i])\n      table.insert(results,\
    \ array[index])\n    end\n    index = index + 1\n    i = i + 1\n  end\n  return\
    \ results\nend", "  local sum = 0\n  for _, value in ipairs(array) do\n    sum\
    \ = sum + value\n  end\n  if sum % 2 == 1 then\n    table.sort(array)\n  else\n\
    \    table.sort(array, function(a, b) return a > b end)\n  end\n  return array\n\
    end", "  local sum = 0\n  for i = 1, #array do\n    sum = sum + array[i]\n  end\n\
    \  local odd = sum % 2 == 1\n  if odd then\n    table.sort(array)\n  else\n  \
    \  table.sort(array, function(first, last)\n      return last - first\n    end)\n\
    \  end\n  return array\nend", "  local sum = 0\n  for i = 1, #array do\n    sum\
    \ = sum + array[i]\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n\
    \    table.sort(array, function(x, y)\n      if x > y then\n        return -1\n\
    \      else\n        return 1\n      end\n    end)\n  end\n  return array\nend",
  "  local sum = 0\n  local sorted_array = {}\n  for i = 1, #array do\n    sum = sum\
    \ + array[i]\n    sorted_array[i] = array[i]\n  end\n  if sum % 2 ~= 0 then\n\
    \    table.sort(sorted_array)\n  else\n    table.sort(sorted_array, function(a,\
    \ b) return b - a end)\n  end\n  return sorted_array\nend", "  local sum = 0\n\
    \  for i = 1, #array do\n    sum = sum + array[i]\n  end\n  if sum % 2 == 1 then\n\
    \    table.sort(array)\n  else\n    table.sort(array, function(a, b) return a\
    \ > b end)\n  end\n  return array\nend", "  local sum = 0\n  local sorted = {}\n\
    \  for _, value in ipairs(array) do\n    sum = sum + value\n    table.insert(sorted,\
    \ value)\n  end\n  if sum % 2 == 1 then\n    table.sort(sorted)\n  else\n    table.sort(sorted,\
    \ function(a, b)\n      return a > b\n    end)\n  end\n  return sorted\nend",
  "  local sum = 0\n  local result = {}\n  for _, value in ipairs(array) do\n    sum\
    \ = sum + value\n    table.insert(result, value)\n  end\n  if sum % 2 ~= 0 then\n\
    \    table.sort(result)\n  else\n    table.sort(result, function(a, b) return\
    \ a < b end)\n  end\n  return result\nend", "  local sum = 0\n  local max_index\
    \ = #array\n  for i = 1, max_index do\n    sum = sum + array[i]\n  end\n  if sum\
    \ % 2 == 1 then\n    table.sort(array)\n  else\n    table.sort(array, function(a,\
    \ b) return a > b end)\n  end\n  return array\nend", "  local sum = 0\n  for i\
    \ = 1, #array do\n    sum = sum + array[i]\n  end\n  if sum % 2 == 1 then\n  \
    \  table.sort(array)\n  else\n    table.sort(array, function(x, y)\n      return\
    \ x > y\n    end)\n  end\n  return array\nend", "  local sum = 0\n  for _, v in\
    \ ipairs(array) do\n    sum = sum + v\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n\
    \  else\n    table.sort(array, function(a, b)\n      return a > b\n    end)\n\
    \  end\n  return array\nend", "  local sum = 0\n  local result = {}\n  for i =\
    \ 1, #array do\n    sum = sum + array[i]\n    if sum % 2 == 1 then\n      table.insert(result,\
    \ array[i])\n    else\n      table.insert(result, array[i])\n      table.insert(result,\
    \ array[i])\n    end\n  end\n  return result\nend", "  local sum = 0\n  for _,\
    \ value in ipairs(array) do\n    sum = sum + value\n  end\n  if sum % 2 == 1 then\n\
    \    table.sort(array)\n  else\n    table.sort(array, function(v1, v2)\n     \
    \ return v2 < v1\n    end)\n  end\n  return array\nend", "  local sum = 0\n  for\
    \ _, value in ipairs(array) do\n    sum = sum + value\n  end\n  if sum % 2 ==\
    \ 1 then\n    table.sort(array)\n  else\n    table.sort(array, function(a, b)\n\
    \      return b - a\n    end)\n  end\n  return array\nend", "  local sum = 0\n\
    \  for _, value in ipairs(array) do\n    sum = sum + value\n  end\n  if sum %\
    \ 2 == 1 then\n    table.sort(array)\n  else\n    table.sort(array, function(a,\
    \ b)\n      return b - a\n    end)\n  end\n  return array\nend", "  local sum\
    \ = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n  end\n  if\
    \ sum % 2 == 1 then\n    table.sort(array)\n  else\n    table.sort(array, function(left,\
    \ right)\n      return right - left\n    end)\n  end\n  return array\nend", " \
    \ local sum = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n \
    \ end\n  if sum % 2 == 1 then\n    return table.sort(array)\n  else\n    return\
    \ table.reverse(table.sort(array))\n  end\nend", "  local sum = 0\n  for i = 1,\
    \ #array do\n    sum = sum + array[i]\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n\
    \  else\n    table.sort(array, function(first, last)\n      return last - first\n\
    \    end)\n  end\n  return array\nend", "  local sum = 0\n  local temp = {}\n\
    \  for i = 1, #array do\n    sum = sum + array[i]\n    temp[i] = array[i]\n  end\n\
    \  table.sort(temp)\n  for i = 1, #temp do\n    array[i] = temp[i]\n  end\n  if\
    \ sum % 2 ~= 0 then\n    table.sort(array)\n  end\n  return array\nend", "  local\
    \ sum = 0\n  local results = {}\n  for i = 1, #array do\n    sum = sum + array[i]\n\
    \    results[i] = array[i]\n  end\n  if sum % 2 == 1 then\n    table.sort(results,\
    \ function(a, b) return a < b end)\n  else\n    table.sort(results, function(a,\
    \ b) return a > b end)\n  end\n  return results\nend", "  local sum = 0\n  for\
    \ _, value in ipairs(array) do\n    sum = sum + value\n  end\n  if sum % 2 ==\
    \ 1 then\n    table.sort(array)\n  else\n    table.sort(array, function(a, b)\
    \ return a > b end)\n  end\n  return array\nend", "  local sum = 0\n  local index\
    \ = 1\n  local results = {}\n  while index <= #array do\n    sum = sum + array[index]\n\
    \    if sum % 2 == 1 then\n      table.insert(results, array[index])\n    end\n\
    \    index = index + 1\n  end\n  return results\nend", "  local sum = 0\n  for\
    \ _, value in ipairs(array) do\n    sum = sum + value\n  end\n  if sum % 2 ~=\
    \ 0 then\n    table.sort(array)\n  else\n    table.sort(array, function(a, b)\n\
    \      return b - a\n    end)\n  end\n  return array\nend", "  local sum = 0\n\
    \  local results = {}\n  for i = 1, #array do\n    sum = sum + array[i]\n    table.insert(results,\
    \ array[i])\n  end\n  if sum % 2 ~= 0 then\n    table.sort(results)\n  else\n\
    \    table.sort(results, function(a, b) return a > b end)\n  end\n  return results\n\
    end", "  local sum = 0\n  local result = {}\n  for _, v in ipairs(array) do\n\
    \    sum = sum + v\n    table.insert(result, v)\n  end\n  if sum % 2 ~= 0 then\n\
    \    table.sort(result)\n  else\n    table.sort(result, function(a, b)\n     \
    \ return a > b\n    end)\n  end\n  return result\nend", "  local sum = 0\n  local\
    \ result = {}\n  for i = 1, #array do\n    sum = sum + array[i]\n    if sum %\
    \ 2 == 1 then\n      table.insert(result, array[i])\n    else\n      table.insert(result,\
    \ array[i])\n      table.insert(result, array[i])\n    end\n  end\n  return result\n\
    end", "  local sum = 0\n  local result = {}\n  for _, v in ipairs(array) do\n\
    \    sum = sum + v\n    if sum % 2 == 1 then\n      table.insert(result, v)\n\
    \    else\n      table.remove(result, #result - 1)\n      table.insert(result,\
    \ v)\n    end\n  end\n  return result\nend", "  local sum = 0\n  local result\
    \ = {}\n  for _, value in ipairs(array) do\n    sum = sum + value\n    if sum\
    \ % 2 == 1 then\n      table.insert(result, value)\n    end\n  end\n  return result\n\
    end", "  local sum = 0\n  local sorted = {}\n  for _, value in ipairs(array) do\n\
    \    sum = sum + value\n    table.insert(sorted, value)\n  end\n  if sum % 2 ==\
    \ 1 then\n    table.sort(sorted)\n  else\n    table.sort(sorted, function(a, b)\n\
    \      return a > b\n    end)\n  end\n  return sorted\nend", "  local sum = 0\n\
    \  local index = 1\n  local temp = {}\n  for i = 1, #array do\n    sum = sum +\
    \ array[i]\n    temp[index] = array[i]\n    index = index + 1\n  end\n  if sum\
    \ % 2 == 1 then\n    table.sort(temp)\n  else\n    table.sort(temp, function(a,\
    \ b) return a > b end)\n  end\n  for i = 1, #temp do\n    array[i] = temp[i]\n\
    \  end\n  return array\nend", "  local sum = 0\n  for _, value in ipairs(array)\
    \ do\n    sum = sum + value\n  end\n  if sum % 2 == 1 then\n    table.sort(array)\n\
    \  else\n    table.sort(array, function(a, b)\n      if a < b then\n        return\
    \ -1\n      elseif a > b then\n        return 1\n      else\n        return 0\n\
    \      end\n    end)\n  end\n  return array\nend", "  local sum = 0\n  for _,\
    \ value in ipairs(array) do\n    sum = sum + value\n  end\n  if sum % 2 ~= 0 then\n\
    \    return table.sort(array)\n  else\n    return table.sort(array, function(v1,\
    \ v2)\n      return v2 < v1\n    end)\n  end\nend", "  local sum = 0\n  for _,\
    \ v in pairs(array) do\n    sum = sum + v\n  end\n  if sum % 2 ~= 0 then\n   \
    \ table.sort(array)\n  else\n    table.sort(array, function(v1, v2)\n      return\
    \ v2 < v1\n    end)\n  end\n  return array\nend", "  local sum = 0\n  local result\
    \ = {}\n  for i = 1, #array do\n    sum = sum + array[i]\n    if sum % 2 == 1\
    \ then\n      table.insert(result, array[i])\n    else\n      table.insert(result,\
    \ array[#array])\n    end\n  end\n  return result\nend", "  local sum = 0\n  local\
    \ result = {}\n  for i = 1, #array do\n    sum = sum + array[i]\n    if sum %\
    \ 2 == 1 then\n      table.insert(result, array[i])\n    else\n      table.insert(result,\
    \ array[#array])\n    end\n  end\n  return result\nend", "  local sum = 0\n  for\
    \ _, v in ipairs(array) do\n    sum = sum + v\n  end\n  if sum % 2 ~= 0 then\n\
    \    return table.sort(array)\n  else\n    return table.reverse(table.sort(array))\n\
    \  end\nend", "  local sum = 0\n  for _, value in ipairs(array) do\n    sum =\
    \ sum + value\n  end\n  if sum % 2 == 1 then\n    table.sort(array)\n  else\n\
    \    table.sort(array, function(x, y)\n      return y - x\n    end)\n  end\n \
    \ return array\nend", "  local sum = 0\n  local result = {}\n  for i = 1, #array\
    \ do\n    sum = sum + array[i]\n    table.insert(result, array[i])\n  end\n  if\
    \ sum % 2 == 1 then\n    table.sort(result)\n  else\n    table.sort(result, function(a,\
    \ b)\n      return b - a\n    end)\n  end\n  return result\nend", "  local sum\
    \ = 0\n  local sorted_array = {}\n  for i = 1, #array do\n    sum = sum + array[i]\n\
    \    sorted_array[i] = array[i]\n  end\n  if sum % 2 ~= 0 then\n    table.sort(sorted_array)\n\
    \  else\n    table.sort(sorted_array, function(t1, t2)\n      return t1 > t2\n\
    \    end)\n  end\n  return sorted_array\nend", "  local sum = 0\n  for _, value\
    \ in ipairs(array) do\n    sum = sum + value\n  end\n  if sum % 2 == 1 then\n\
    \    return table.sort(array)\n  else\n    return table.reverse(table.sort(array))\n\
    \  end\nend", "  local function helper(array, sum)\n    local result = {}\n  \
    \  for i = 1, #array do\n      local value = array[i]\n      if sum % 2 == 1 then\n\
    \        result[#result + 1] = value\n      else\n        result[#result + 1]\
    \ = array[#result + 1]\n      end\n      sum = sum + value\n    end\n    return\
    \ result\n  end\n  local sum = 0\n  local result = helper(array, sum)\n  table.sort(result)\n\
    \  return result\nend", "  local sum = 0\n  for _, value in ipairs(array) do\n\
    \    sum = sum + value\n  end\n  if sum % 2 == 1 then\n    table.sort(array)\n\
    \  else\n    table.sort(array, function(a, b)\n      return b - a\n    end)\n\
    \  end\n  return array\nend", "  local sum = 0\n  local result = {}\n  for _,\
    \ v in ipairs(array) do\n    sum = sum + v\n  end\n  if sum % 2 ~= 0 then\n  \
    \  table.sort(array)\n  end\n  for _, v in ipairs(array) do\n    result[#result\
    \ + 1] = v\n  end\n  return result\nend", "  local sum = 0\n  for _, value in\
    \ ipairs(array) do\n    sum = sum + value\n  end\n  if sum % 2 == 1 then\n   \
    \ table.sort(array)\n  else\n    table.sort(array, function(a, b) return b - a\
    \ end)\n  end\n  return array\nend", "  local sum = 0\n  for i = 1, #array do\n\
    \    sum = sum + array[i]\n  end\n  if sum % 2 == 1 then\n    table.sort(array)\n\
    \  else\n    table.sort(array, function(x, y)\n      if x > y then\n        return\
    \ -1\n      else\n        return 1\n      end\n    end)\n  end\n  return array\n\
    end", "  local sum = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n\
    \  end\n  if sum % 2 == 1 then\n    table.sort(array)\n  else\n    table.sort(array,\
    \ function(v1, v2)\n      if v1 < v2 then\n        return -1\n      elseif v1\
    \ > v2 then\n        return 1\n      else\n        return 0\n      end\n    end)\n\
    \  end\n  return array\nend", "  local sum = 0\n  for _, value in ipairs(array)\
    \ do\n    sum = sum + value\n  end\n  if sum % 2 == 1 then\n    return table.sort(array)\n\
    \  else\n    return table.sort(array, function(a, b)\n      return b - a\n   \
    \ end)\n  end\nend", "  local sum = 0\n  for _, value in ipairs(array) do\n  \
    \  sum = sum + value\n  end\n  if sum % 2 == 1 then\n    table.sort(array)\n \
    \ else\n    table.sort(array, function(x, y)\n      if x < y then\n        return\
    \ -1\n      else\n        return 1\n      end\n    end)\n  end\n  return array\n\
    end", "  local sum = 0\n  for _, v in ipairs(array) do\n    sum = sum + v\n  end\n\
    \  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array,\
    \ function(a, b) return a > b end)\n  end\n  return array\nend", "  local sum\
    \ = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n  end\n  if\
    \ sum % 2 == 1 then\n    table.sort(array)\n  else\n    table.sort(array, function(a,\
    \ b)\n      return b - a\n    end)\n  end\n  return array\nend", "  local sum\
    \ = 0\n  local result = {}\n  for _, v in ipairs(array) do\n    sum = sum + v\n\
    \  end\n  if sum % 2 == 1 then\n    for _, v in ipairs(array) do\n      result[#result\
    \ + 1] = v\n    end\n  else\n    for _, v in ipairs(array) do\n      result[#result\
    \ + 1] = v\n    end\n  end\n  return result\nend", "  local function helper(array,\
    \ sum)\n    local result = {}\n    local index = 1\n    while index <= #array\
    \ do\n      local value = array[index]\n      if sum % 2 == 1 then\n        result[index]\
    \ = value\n        index = index + 1\n      else\n        index = index + 1\n\
    \      end\n      sum = sum + value\n    end\n    return result\n  end\n  local\
    \ sum = 0\n  local result = helper(array, sum)\n  return result\nend", "  local\
    \ sum = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n  end\n\
    \  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array,\
    \ function(a, b) return b - a end)\n  end\n  return array\nend", "  local sum\
    \ = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n  end\n  if\
    \ sum % 2 == 1 then\n    table.sort(array)\n  else\n    table.sort(array, function(a,\
    \ b) return b - a end)\n  end\n  return array\nend", "  local sum = 0\n  for i\
    \ = 1, #array do\n    sum = sum + array[i]\n  end\n  if sum % 2 == 1 then\n  \
    \  table.sort(array)\n  else\n    table.sort(array, function(x, y)\n      return\
    \ x > y\n    end)\n  end\n  return array\nend", "  local sum = 0\n  for _, value\
    \ in ipairs(array) do\n    sum = sum + value\n  end\n  if sum % 2 ~= 0 then\n\
    \    table.sort(array)\n  else\n    table.sort(array, function(a, b) return b\
    \ - a end)\n  end\n  return array\nend", "  local sum = 0\n  for _, v in ipairs(array)\
    \ do\n    sum = sum + v\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n\
    \  else\n    table.sort(array, function(a, b)\n      return b - a\n    end)\n\
    \  end\n  return array\nend", "  local sum = 0\n  for _, v in ipairs(array) do\n\
    \    sum = sum + v\n  end\n  if sum % 2 == 1 then\n    table.sort(array)\n  else\n\
    \    table.sort(array, function(v1, v2)\n      return v2 < v1\n    end)\n  end\n\
    \  return array\nend", "  local sum = 0\n  for i = 1, #array do\n    sum = sum\
    \ + array[i]\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n \
    \   table.sort(array, function(x, y)\n      return y - x\n    end)\n  end\n  return\
    \ array\nend", "  local sum = 0\n  local index = 1\n  local results = {}\n  local\
    \ i = 1\n  while i <= #array do\n    sum = sum + array[i]\n    if sum % 2 == 1\
    \ then\n      table.insert(results, array[i])\n    else\n      table.insert(results,\
    \ array[i - 1])\n    end\n    index = index + 1\n    i = i + 1\n  end\n  return\
    \ results\nend", "  local sum = 0\n  for _, v in ipairs(array) do\n    sum = sum\
    \ + v\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array,\
    \ function(a, b) return a > b end)\n  end\n  return array\nend", "  local sum\
    \ = 0\n  local result = {}\n  for _, v in ipairs(array) do\n    sum = sum + v\n\
    \    table.insert(result, v)\n  end\n  if sum % 2 == 1 then\n    table.sort(result)\n\
    \  else\n    table.sort(result, function(a, b)\n      return a > b\n    end)\n\
    \  end\n  return result\nend", "  local sum = 0\n  for _, value in ipairs(array)\
    \ do\n    sum = sum + value\n  end\n  if sum % 2 == 1 then\n    table.sort(array)\n\
    \  else\n    table.sort(array, function(a, b) return a > b end)\n  end\n  return\
    \ array\nend", "  local sum = 0\n  for _, value in ipairs(array) do\n    sum =\
    \ sum + value\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n\
    \    table.sort(array, function(a, b)\n      return a > b\n    end)\n  end\n \
    \ return array\nend", "  local function compare(index1, index2)\n    local sum1\
    \ = array[index1]\n    local sum2 = array[index2]\n    if sum1 < sum2 then\n \
    \     return -1\n    elseif sum1 > sum2 then\n      return 1\n    else\n     \
    \ return 0\n    end\n  end\n  table.sort(array, compare)\n  return array\nend",
  "  local function is_odd(x)\n    return x % 2 == 1\n  end\n  local function is_even(x)\n\
    \    return x % 2 == 0\n  end\n  local function is_sorted(array)\n    local sum\
    \ = 0\n    for _, v in ipairs(array) do\n      sum = sum + v\n    end\n    return\
    \ sum % 2 == 0\n  end\n  local function swap(array, i, j)\n    local tmp = array[i]\n\
    \    array[i] = array[j]\n    array[j] = tmp\n  end\n  local function partition(array,\
    \ low, high)\n    local pivot = array[high]\n    local i = low - 1\n    for j\
    \ = low + 1 to high do\n      if is_odd(array[j]) then\n        swap(array, i,\
    \ j)\n        i = i + 1\n      end\n    end\n    swap(array, i + 1, high)\n  \
    \  return i + 1\n  end\n  local function partition2(array, low, high)\n    local\
    \ pivot = array[high]\n    local i = low - 1\n    for j = low + 1 to high do\n\
    \      if is_even(array[j]) then\n        swap(array, i, j)\n        i = i + 1\n\
    \      end\n    end\n    swap(array, i + 1, high)\n    return i + 1\n  end\n \
    \ local function partition3(array, low, high)\n    local pivot = array[high]\n\
    \    local i = low - 1\n    for j = low + 1 to high do\n      if is_sorted(array[j])\
    \ then\n        swap(array, i, j)\n        i = i + 1\n      end\n    end\n   \
    \ swap(array, i + 1, high)\n    return i + 1\n  end\n  local function partition4(array,\
    \ low, high)\n    local pivot = array[high]\n    local i = low - 1\n    for j\
    \ = low + 1 to high do\n      if is_sorted(array[j]) then\n        swap(array,\
    \ i, j)\n        i = i + 1\n      end\n    end\n    swap(array, i + 1, high)\n\
    \    return i + 1\n  end\n  local function partition5(array, low, high)\n    local\
    \ pivot = array[high]\n    local i = low - 1\n    for j = low + 1 to high do\n\
    \      if is_sorted(array[j]) then\n        swap(array, i, j)\n        i = i +\
    \ 1\n      end\n    end\n    swap(array, i + 1, high)\n    return i + 1\n  end\n\
    \  local function partition6(array, low, high)\n    local pivot = array[high]\n\
    \    local i = low - 1\n    for j = low + 1 to high do\n      if is_sorted(array[j])\
    \ then\n        swap(array, i, j)\n        i = i + 1\n      end\n    end\n   \
    \ swap(array, i + 1, high)\n    return i + 1\n  end\n", "  local sum = 0\n  for\
    \ _, v in pairs(array) do\n    sum = sum + v\n  end\n  if sum % 2 ~= 0 then\n\
    \    table.sort(array)\n  else\n    table.sort(array, function(a, b) return a\
    \ > b end)\n  end\n  return array\nend", "  local sum = 0\n  local result = {}\n\
    \  for i = 1, #array do\n    sum = sum + array[i]\n    if sum % 2 == 0 then\n\
    \      table.insert(result, array[i])\n    else\n      table.insert(result, array[#array])\n\
    \    end\n  end\n  return result\nend", "  local sum = 0\n  for _, v in ipairs(array)\
    \ do\n    sum = sum + v\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n\
    \  else\n    table.sort(array, function(a, b)\n      if a < b then\n        return\
    \ -1\n      elseif a > b then\n        return 1\n      else\n        return 0\n\
    \      end\n    end)\n  end\n  return array\nend", "  local sum = 0\n  local result\
    \ = {}\n  for _, value in ipairs(array) do\n    sum = sum + value\n    table.insert(result,\
    \ value)\n  end\n  if sum % 2 == 1 then\n    table.sort(result)\n  else\n    table.sort(result,\
    \ function(a, b) return a > b end)\n  end\n  return result\nend", "  local sum\
    \ = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n  end\n  if\
    \ sum % 2 ~= 0 then\n    return table.sort(array)\n  else\n    return table.reverse(table.sort(array))\n\
    \  end\nend", "  local sum = 0\n  local i = 0\n  local j = 1\n  local k = 1\n\
    \  local temp = 0\n  local results = {}\n  while i < #array do\n    sum = array[i]\
    \ + array[j]\n    if sum % 2 == 0 then\n      temp = array[i]\n      array[i]\
    \ = array[j]\n      array[j] = temp\n    end\n    i = i + 1\n    j = j + 1\n \
    \ end\n  while i < #array do\n    sum = array[i] + array[j]\n    if sum % 2 ==\
    \ 1 then\n      temp = array[i]\n      array[i] = array[j]\n      array[j] = temp\n\
    \    end\n    i = i + 1\n    j = j + 1\n    k = k + 1\n  end\n  for i = 1, #array\
    \ do\n    results[#results + 1] = array[i]\n  end\n  return results\nend", " \
    \ local sum = 0\n  local result = {}\n  for _, value in ipairs(array) do\n   \
    \ sum = sum + value\n    table.insert(result, value)\n  end\n  if sum % 2 == 1\
    \ then\n    table.sort(result)\n  else\n    table.sort(result, function(a, b)\n\
    \      return a > b\n    end)\n  end\n  return result\nend", "  local sum = 0\n\
    \  local result = {}\n  for _, v in ipairs(array) do\n    sum = sum + v\n  end\n\
    \  if sum % 2 == 1 then\n    for _, v in ipairs(array) do\n      result[#result\
    \ + 1] = v\n    end\n  else\n    for _, v in ipairs(array) do\n      result[#result\
    \ + 1] = v\n    end\n  end\n  return result\nend", "  local sum = 0\n  for _,\
    \ value in ipairs(array) do\n    sum = sum + value\n  end\n  if sum % 2 ~= 0 then\n\
    \    table.sort(array)\n  else\n    table.sort(array, function(first, last)\n\
    \      return last - first\n    end)\n  end\n  return array\nend", "  local sum\
    \ = 0\n  local results = {}\n  for i = 1, #array do\n    sum = sum + array[i]\n\
    \    table.insert(results, array[i])\n  end\n  if sum % 2 == 1 then\n    table.sort(results)\n\
    \  else\n    table.sort(results, function(a, b) return a > b end)\n  end\n  return\
    \ results\nend", "  local sum = 0\n  for _, value in ipairs(array) do\n    sum\
    \ = sum + value\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n\
    \    table.sort(array, function(a, b)\n      return b - a\n    end)\n  end\n \
    \ return array\nend", "  local function helper(array, sum)\n    if sum % 2 ==\
    \ 0 then\n      table.sort(array)\n    else\n      table.sort(array, function(a,\
    \ b) return a > b end)\n    end\n  end\n  helper(array, 0)\n  return array\nend",
  "  local sum = 0\n  for _, v in ipairs(array) do\n    sum = sum + v\n  end\n  if\
    \ sum % 2 == 1 then\n    table.sort(array)\n  else\n    table.sort(array, function(a,\
    \ b) return a > b end)\n  end\n  return array\nend", "  local sum = 0\n  local\
    \ result = {}\n  for _, value in ipairs(array) do\n    sum = sum + value\n   \
    \ table.insert(result, value)\n  end\n  if sum % 2 ~= 0 then\n    table.sort(result)\n\
    \  else\n    table.sort(result, function(a, b) return a > b end)\n  end\n  return\
    \ result\nend", "  local sum = 0\n  local result = {}\n  for _, v in ipairs(array)\
    \ do\n    sum = sum + v\n    table.insert(result, v)\n  end\n  if sum % 2 ~= 0\
    \ then\n    table.sort(result)\n  else\n    table.sort(result, function(a, b)\
    \ return a < b end)\n  end\n  return result\nend", "  local sum = 0\n  local result\
    \ = {}\n  for _, value in ipairs(array) do\n    sum = sum + value\n    table.insert(result,\
    \ value)\n  end\n  if sum % 2 ~= 0 then\n    table.sort(result)\n  else\n    table.sort(result,\
    \ function(a, b)\n      return b - a\n    end)\n  end\n  return result\nend",
  "  local sum = 0\n  local result = {}\n  for _, value in ipairs(array) do\n    sum\
    \ = sum + value\n    table.insert(result, value)\n  end\n  if sum % 2 ~= 0 then\n\
    \    table.sort(result)\n  else\n    table.sort(result, function(a, b) return\
    \ b - a end)\n  end\n  return result\nend", "  local sum = 0\n  for _, value in\
    \ ipairs(array) do\n    sum = sum + value\n  end\n  if sum % 2 ~= 0 then\n   \
    \ table.sort(array)\n  else\n    table.sort(array, function(a, b) return a > b\
    \ end)\n  end\n  return array\nend", "  local function helper(array, sum)\n  \
    \  local results = {}\n    local index = 1\n    while index <= #array do\n   \
    \   local value = array[index]\n      local last = index - 1\n      while last\
    \ >= 0 and array[last] > value do\n        last = last - 1\n      end\n      if\
    \ last >= 0 then\n        table.insert(results, value)\n        sum = (sum + value)\
    \ -- sum the current value\n        index = last + 1 -- move to next value\n \
    \     else\n        sum = (sum - value) -- sum the current value\n        index\
    \ = 1 -- move to next value\n      end\n    end\n    if sum % 2 == 1 then\n  \
    \    table.sort(results)\n    else\n      table.reverse(results)\n    end\n  \
    \  return results\n  end\n  return helper(array, 0)\nend", "  local sum = 0\n\
    \  for _, v in ipairs(array) do\n    sum = sum + v\n  end\n  if sum % 2 == 1 then\n\
    \    table.sort(array)\n  else\n    table.sort(array, function(a, b) return b\
    \ - a end)\n  end\n  return array\nend", "  local sum = 0\n  local result = {}\n\
    \  for i = 1, #array do\n    sum = sum + array[i]\n    if sum % 2 == 1 then\n\
    \      table.insert(result, array[i])\n    else\n      table.insert(result, array[i])\n\
    \      table.insert(result, array[i])\n    end\n  end\n  return result\nend",
  "  local sum = 0\n  local result = {}\n  for i = 1, #array do\n    sum = sum + array[i]\n\
    \    if sum % 2 == 1 then\n      table.insert(result, i)\n    end\n  end\n  table.sort(result)\n\
    \  return result\nend", "  local sum = 0\n  local index = 1\n  local temp\n  local\
    \ length = #array\n  while index < length do\n    sum = sum + array[index]\n \
    \   index = index + 1\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n\
    \  else\n    table.sort(array, function(a, b) return a > b end)\n  end\n  return\
    \ array\nend", "  local sum = 0\n  for _, value in ipairs(array) do\n    sum =\
    \ sum + value\n  end\n  if sum % 2 == 1 then\n    table.sort(array)\n  else\n\
    \    table.sort(array, function(a, b)\n      return b - a\n    end)\n  end\n \
    \ return array\nend", "  local sum = 0\n  for i = 1, #array do\n    sum = sum\
    \ + array[i]\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n \
    \   table.sort(array, function(x, y)\n      return y - x\n    end)\n  end\n  return\
    \ array\nend", "  local sum = 0\n  local result = {}\n  for _, v in ipairs(array)\
    \ do\n    sum = sum + v\n  end\n  if sum % 2 == 1 then\n    for _, v in ipairs(array)\
    \ do\n      result[#result + 1] = v\n    end\n  else\n    for _, v in ipairs(array)\
    \ do\n      result[#result + 1] = v\n    end\n  end\n  return result\nend", " \
    \ local sum = 0\n  local results = {}\n  for _, value in ipairs(array) do\n  \
    \  sum = sum + value\n    table.insert(results, value)\n  end\n  if sum % 2 ==\
    \ 1 then\n    table.sort(results)\n  else\n    table.sort(results, function(a,\
    \ b) return a > b end)\n  end\n  return results\nend", "  local sum = 0\n  for\
    \ _, value in ipairs(array) do\n    sum = sum + value\n  end\n  if sum % 2 ~=\
    \ 0 then\n    table.sort(array)\n  else\n    table.sort(array, function(v1, v2)\n\
    \      return v1 > v2\n    end)\n  end\n  return array\nend", "  local sum = 0\n\
    \  for i = 1, #array do\n    sum = sum + array[i]\n  end\n  if sum % 2 == 1 then\n\
    \    table.sort(array)\n  else\n    table.sort(array, function(first, last)\n\
    \      return last - first\n    end)\n  end\n  return array\nend", "  local sum\
    \ = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n  end\n  if\
    \ sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array, function(first,\
    \ last)\n      return last - first\n    end)\n  end\n  return array\nend", " \
    \ local sum = 0\n  local i = 0\n  local j = 1\n  local k = 1\n  local temp\n \
    \ local result\n  while i < #array do\n    sum = array[i] + array[j]\n    if sum\
    \ % 2 == 1 then\n      temp = array[i]\n      array[i] = array[j]\n      array[j]\
    \ = temp\n    end\n    i = i + 1\n    j = j + 1\n  end\n  result = {}\n  i = k\n\
    \  while i < #array do\n    result[i] = array[i]\n    i = i + 1\n  end\n  return\
    \ result\nend", "  local sum = 0\n  for _, value in ipairs(array) do\n    sum\
    \ = sum + value\n  end\n  if sum % 2 == 1 then\n    table.sort(array)\n  else\n\
    \    table.sort(array, function(v1, v2)\n      return v2 < v1\n    end)\n  end\n\
    \  return array\nend", "  local sum = 0\n  for _, v in ipairs(array) do\n    sum\
    \ = sum + v\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n  \
    \  table.sort(array, function(a, b) return b - a end)\n  end\n  return array\n\
    end", "  local sum = 0\n  local index = 1\n  local length = #array\n  local is_odd\
    \ = true\n  while index < length do\n    sum = sum + array[index]\n    index =\
    \ index + 1\n  end\n  if sum % 2 ~= 0 then\n    is_odd = false\n  end\n  table.sort(array,\
    \ function(a, b)\n    if a > b then\n      return -1\n    elseif b > a then\n\
    \      return 1\n    else\n      return 0\n    end\n  end)\n  if is_odd then\n\
    \    for i = 1, length do\n      array[i] = array[length - i - 1]\n    end\n \
    \ end\n  return array\nend", "  local sum = 0\n  local result = {}\n  for i =\
    \ 1, #array do\n    sum = sum + array[i]\n    if sum % 2 == 1 then\n      table.insert(result,\
    \ array[i])\n    else\n      table.insert(result, array[i])\n      table.insert(result,\
    \ array[i])\n    end\n  end\n  return result\nend", "  local sum = 0\n  local\
    \ result = {}\n  for i = 1, #array do\n    sum = sum + array[i]\n    if sum %\
    \ 2 == 1 then\n      table.insert(result, array[i])\n    else\n      table.insert(result,\
    \ array[i])\n      table.insert(result, array[i])\n    end\n  end\n  return result\n\
    end", "  local sum = 0\n  for _, v in pairs(array) do\n    sum = sum + v\n  end\n\
    \  if sum % 2 == 1 then\n    table.sort(array)\n  else\n    table.sort(array,\
    \ function(v1, v2)\n      if v1 < v2 then\n        return -1\n      elseif v1\
    \ > v2 then\n        return 1\n      else\n        return 0\n      end\n    end)\n\
    \  end\n  return array\nend", "  local sum = 0\n  for _, v in ipairs(array) do\n\
    \    sum = sum + v\n  end\n  if sum % 2 == 1 then\n    table.sort(array)\n  else\n\
    \    table.sort(array, function(a, b)\n      return b - a\n    end)\n  end\n \
    \ return array\nend", "  local sum = 0\n  local sorted_array = {}\n  for i = 1,\
    \ #array do\n    sum = sum + array[i]\n    sorted_array[i] = array[i]\n  end\n\
    \  if sum % 2 ~= 0 then\n    table.sort(sorted_array)\n  else\n    table.sort(sorted_array,\
    \ function(a, b) return a < b end)\n  end\n  return sorted_array\nend", "  local\
    \ function helper(array, sum)\n    local result = {}\n    local i = 1\n    while\
    \ i <= #array do\n      local value = array[i]\n      local last = result[#result]\n\
    \      if last and last > value then\n        table.insert(result, value)\n  \
    \    else\n        table.insert(result, value)\n      end\n      i = i + 1\n \
    \   end\n    if sum % 2 == 1 then\n      table.sort(result)\n    else\n      table.sort(result,\
    \ function(a, b) return a > b end)\n    end\n    return result\n  end\n  return\
    \ helper(array, 0)\nend", "  local sum = 0\n  local results = {}\n  for i = 1,\
    \ #array do\n    sum = sum + array[i]\n    table.insert(results, i)\n  end\n \
    \ if sum % 2 == 1 then\n    table.sort(results)\n  else\n    table.sort(results,\
    \ function(a, b) return array[a] > array[b] end)\n  end\n  return results\nend",
  "  local sum = 0\n  for i = 1, #array do\n    sum = sum + array[i]\n  end\n  if\
    \ sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array, function(a,\
    \ b) return a > b end)\n  end\n  return array\nend", "  local sum = 0\n  for _,\
    \ value in ipairs(array) do\n    sum = sum + value\n  end\n  if sum % 2 == 1 then\n\
    \    table.sort(array)\n  else\n    table.sort(array, function(a, b)\n      return\
    \ b - a\n    end)\n  end\n  return array\nend", "  local sum = 0\n  for i = 1,\
    \ #array do\n    sum = sum + array[i]\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n\
    \  else\n    table.sort(array, function(a, b) return a > b end)\n  end\n  return\
    \ array\nend", "  local sum = 0\n  local result = {}\n  for i = 1, #array do\n\
    \    sum = sum + array[i]\n    if sum > 0 then\n      result[#result + 1] = array[i]\n\
    \    end\n  end\n  if sum % 2 ~= 0 then\n    for i = #result, 1, -1 do\n     \
    \ result[#result + 1] = array[i]\n    end\n  end\n  return result\nend", "  local\
    \ sum = 0\n  local index = 1\n  for i = 1, #array do\n    sum = sum + array[i]\n\
    \    if sum > 0 then\n      array[index] = array[i]\n      index = index + 1\n\
    \    end\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  end\n  return\
    \ array\nend", "  local sum = 0\n  local temp = {}\n  for _, v in ipairs(array)\
    \ do\n    sum = sum + v\n    temp[sum] = v\n  end\n  table.sort(temp)\n  local\
    \ result = {}\n  for _, v in ipairs(temp) do\n    result[#result + 1] = v\n  end\n\
    \  return result\nend", "  local sum = 0\n  for _, value in ipairs(array) do\n\
    \    sum = sum + value\n  end\n  if sum % 2 == 1 then\n    return table.sort(array)\n\
    \  else\n    return table.sort(array, function(a, b) return b - a end)\n  end\n\
    end", "  local sum = 0\n  local result = {}\n  for _, value in ipairs(array) do\n\
    \    sum = sum + value\n    table.insert(result, value)\n  end\n  if sum % 2 ~=\
    \ 0 then\n    table.sort(result)\n  else\n    table.sort(result, function(a, b)\
    \ return a > b end)\n  end\n  return result\nend", "  local sum = 0\n  for _,\
    \ value in ipairs(array) do\n    sum = sum + value\n  end\n  if sum % 2 == 1 then\n\
    \    table.sort(array)\n  else\n    table.sort(array, function(left, right)\n\
    \      return right - left\n    end)\n  end\n  return array\nend", "  local sum\
    \ = 0\n  local max_sum = 0\n  local max_index\n  local max_value\n  local i =\
    \ 1\n  for _, value in ipairs(array) do\n    sum = sum + value\n    if sum > max_sum\
    \ then\n      max_sum = sum\n      max_index = i\n      max_value = value\n  \
    \  end\n    i = i + 1\n  end\n  if max_sum % 2 == 1 then\n    table.sort(array,\
    \ function(a, b)\n      return a > b\n    end)\n  else\n    table.sort(array,\
    \ function(a, b)\n      return a < b\n    end)\n  end\n  return max_index, max_value\n\
    end", "  local sum = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n\
    \  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array,\
    \ function(a, b) return a > b end)\n  end\n  return array\nend", "  local sum\
    \ = 0\n  for _, v in ipairs(array) do\n    sum = sum + v\n  end\n  if sum % 2\
    \ ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array, function(a,\
    \ b) return a < b end)\n  end\n  return array\nend", "  local sum = 0\n  for _,\
    \ value in ipairs(array) do\n    sum = sum + value\n  end\n  if sum % 2 == 1 then\n\
    \    table.sort(array)\n  else\n    table.sort(array, function(first, last)\n\
    \      return last - first\n    end)\n  end\n  return array\nend", "  local sum\
    \ = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n  end\n  if\
    \ sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array, function(x,\
    \ y)\n      return y - x\n    end)\n  end\n  return array\nend", "  local function\
    \ is_odd(x)\n    return x % 2 == 1\n  end\n  local function is_even(x)\n    return\
    \ x % 2 == 0\n  end\n  local function is_sorted(array)\n    local sum = 0\n  \
    \  for _, v in ipairs(array) do\n      sum = sum + v\n    end\n    return sum\
    \ % 2 == 0\n  end\n  local function swap(array, first, second)\n    local tmp\
    \ = array[first]\n    array[first] = array[second]\n    array[second] = tmp\n\
    \  end\n  local function sort_odd_or_even(array)\n    local sum = 0\n    for _,\
    \ v in ipairs(array) do\n      sum = sum + v\n    end\n    if is_odd(sum) then\n\
    \      table.sort(array, function(a, b)\n        return a < b\n      end)\n  \
    \  else\n      table.sort(array, function(a, b)\n        return a > b\n      end)\n\
    \    end\n  end\n  sort_odd_or_even(array)\n  local tmp = {}\n  for _, v in ipairs(array)\
    \ do\n    tmp[v] = true\n  end\n  for i = 1, #array do\n    if not tmp[i] then\n\
    \      swap(array, i, #array - 1)\n    end\n  end\n  return array\nend", "  local\
    \ sum = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n  end\n\
    \  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array,\
    \ function(a, b)\n      return b - a\n    end)\n  end\n  return array\nend", " \
    \ local function compare(index1, index2)\n    local sum1 = array[index1]\n   \
    \ local sum2 = array[index2]\n    if sum1 ~= sum2 then\n      return sum1 - sum2\n\
    \    else\n      return index1 - index2\n    end\n  end\n  table.sort(array, compare)\n\
    \  return array\nend", "  local sum = 0\n  for i = 1, #array do\n    sum = sum\
    \ + array[i]\n  end\n  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n \
    \   table.sort(array, function(a, b) return a > b end)\n  end\n  return array\n\
    end", "  local sum = 0\n  for _, v in ipairs(array) do\n    sum = sum + v\n  end\n\
    \  if sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array,\
    \ function(a, b) return a > b end)\n  end\n  return array\nend", "  local sum\
    \ = 0\n  for _, value in ipairs(array) do\n    sum = sum + value\n  end\n  if\
    \ sum % 2 ~= 0 then\n    table.sort(array)\n  else\n    table.sort(array, function(v1,\
    \ v2)\n      return v1 > v2\n    end)\n  end\n  return array\nend", "  local function\
    \ compare(index1, index2)\n    local sum1 = array[index1]\n    local sum2 = array[index2]\n\
    \    if sum1 ~= sum2 then\n      return sum1 - sum2\n    else\n      return index1\
    \ - index2\n    end\n  end\n  table.sort(array, compare)\n  return array\nend",
  "  local sum = 0\n  for i = 1, #array do\n    sum = sum + array[i]\n  end\n  if\
    \ sum % 2 == 1 then\n    table.sort(array)\n  else\n    table.sort(array, function(v1,\
    \ v2)\n      if v1 > v2 then\n        return true\n      elseif v1 < v2 then\n\
    \        return false\n      else\n        return true\n      end\n    end)\n\
    \  end\n  return array\nend", "  local sum = 0\n  local result = {}\n  for i =\
    \ 1, #array do\n    sum = sum + array[i]\n    if sum % 2 == 1 then\n      table.insert(result,\
    \ i)\n    else\n      table.remove(result, i - 1)\n      table.insert(result,\
    \ i)\n    end\n  end\n  return result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

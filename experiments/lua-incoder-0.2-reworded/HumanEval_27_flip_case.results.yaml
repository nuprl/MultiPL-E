language: lua
name: HumanEval_27_flip_case
results:
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if char >= 'a' and char <= 'z' then\n            char = string.sub(string.sub(i,\
    \ 1, i), -1)\n        end\n        if char >= 'A' and char <= 'Z' then\n     \
    \       char = string.sub(string.sub(i, 1, i), -1)\n        end\n        result\
    \ = result .. char\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsb7s55we.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!1\"\nstack traceback:\n\t/tmp/tmpsb7s55we.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == 'a' then\n      char = 'A'\n    else\
    \ if char == 'A' then\n      char = 'a'\n    end\n    i = i + 1\n    j = j - 1\n\
    \    result = result .. char\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpey_0dhwm.lua:29: ''end'' expected (to close ''function'' at
    line 4) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if string.sub(c, 1) == string.sub(c, 1) then\n\
    \      result = string.sub(c, 2)\n    end\n  end\n  -- Uppercase letters.\n  for\
    \ i = 1, #string do\n    local c = string.sub(i, i)\n    if string.sub(c, 1) ==\
    \ 'a' then\n      result = string.sub(c, 2)\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp65wnj94h.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp65wnj94h.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = {}\n  for _, c in ipairs(string) do\n    local upper = string.upper(c)\n\
    \    local lower = string.lower(c)\n    result[#result + 1] = upper .. lower\n\
    \  end\n  return table.concat(result)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplw2p_d3y.lua:6:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmplw2p_d3y.lua:6: in function 'candidate'\n\t/tmp/tmplw2p_d3y.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i, c in ipairs(string) do\n        if c:lower()\
    \ == c then\n            result = result:upper()\n        elseif c:upper() ==\
    \ c then\n            result = result:lower()\n        end\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzh5zsixb.lua:6:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmpzh5zsixb.lua:6: in function 'candidate'\n\t/tmp/tmpzh5zsixb.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase to uppercase.\n  for i = 1, #string do\n\
    \    local c = string.sub(i, i)\n    if c:lower() == c then\n      result = string.sub(i,\
    \ 1, i):upper() .. string.sub(i, i + 1)\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp426bibvd.lua:20:\
    \ expected: \"hELLO!\"\nactual: \"6\"\nstack traceback:\n\t/tmp/tmp426bibvd.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ end\n    if c == \"A\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpydood706.lua:28:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpydood706.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j):upper() .. string.sub(i, j):lower()\n      i = i + 1\n      j = j - 1\n \
    \   else\n      i = i + 1\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprpy_jjpd.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmprpy_jjpd.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = #string\n  for i = 1, length do\n \
    \   local char = string.sub(i, i)\n    local upper = char >= 'a' and char < 'z'\n\
    \    local lower = upper and char >= 'A' and char < 'Z'\n    if upper and lower\
    \ then\n      result = string.sub(i, i-1):upper..string.sub(i, i)\n    end\n \
    \ end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpxh2dexwe.lua:12: function arguments expected near ''..''

    '
  stdout: ''
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.upper(char) then\n      result\
    \ = string.sub(i, j):lower() + string.sub(i, j + 1)\n      i = i + 1\n      j\
    \ = j + 2\n    elseif char == string.lower(char) then\n      result = string.sub(i,\
    \ j) + string.sub(i, j + 1)\n      i = i + 1\n      j = j + 2\n    else\n    \
    \  result = result .. char\n      i = i + 1\n      j = j + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbqclotlt.lua:10:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmpbqclotlt.lua:10:\
    \ in function 'candidate'\n\t/tmp/tmpbqclotlt.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ end\n    if c == \"A\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpydood706.lua:28:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpydood706.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n \
    \     result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase\
    \ letters.\n  for i = 1, #string do\n    local char = string.sub(i, i)\n    if\
    \ char >= 'A' and char <= 'Z' then\n      result = string.sub(i, i) + string.sub(i,\
    \ i + 1)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj2tgsvz4.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpj2tgsvz4.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, i)\n    if c == \"a\" then\n      c = string.sub(i, j,\
    \ i - 1)\n      result = result .. string.upper(c)\n    elseif c == \"A\" then\n\
    \      c = string.sub(i, j, i - 1)\n      result = result .. string.lower(c)\n\
    \    end\n    i = j\n    j = i\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750247
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = {}\n    for _, character in ipairs(string) do\n        if\
    \ character == character then\n            result[#result + 1] = character\n \
    \       else\n            result[#result + 1] = character .. toupper(character)\n\
    \        end\n    end\n    return table.concat(result)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_z27tkot.lua:6:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmp_z27tkot.lua:6: in function 'candidate'\n\t/tmp/tmp_z27tkot.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750242
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j):upper() .. string.sub(i, j):lower()\n      i = i + 1\n      j = j - 1\n \
    \   end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750247
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if char >= 'a' and char <= 'z' then\n            char = char - 'a'\n\
    \        elseif char >= 'A' and char <= 'Z' then\n            char = char - 'A'\n\
    \        else\n            char = char\n        end\n        result = string.sub(i,\
    \ 1, i) + char + string.sub(i, i + 1)\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq8pt9jcr.lua:15:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmpq8pt9jcr.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpq8pt9jcr.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = {}\n  for _, c in ipairs(string) do\n    result[#result + 1]\
    \ = c:upper()\n  end\n  return table.concat(result)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3pa1v26q.lua:6:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmp3pa1v26q.lua:6: in function 'candidate'\n\t/tmp/tmp3pa1v26q.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, i)\n    if c:lower() == c then\n      result = string.sub(i,\
    \ 1, i) + string.sub(i, i + 1, j) + string.sub(i, j + 1)\n      i = i + 1\n  \
    \    j = j + 1\n    else\n      result = string.sub(i, 1, i) + string.sub(i, i\
    \ + 1, j) + c\n      i = i + 1\n      j = j + 1\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8w7ryxts.lua:10:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmp8w7ryxts.lua:10:\
    \ in function 'candidate'\n\t/tmp/tmp8w7ryxts.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(i, j, \"\
    A\")\n    end\n    if c == \"A\" then\n      c = string.sub(i, j, \"a\")\n   \
    \ end\n    if c ~= nil then\n      result = result .. c\n    end\n    i = i +\
    \ 1\n    j = j + 1\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750247
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c))\
    \ .. string.char(tonumber(string.sub(c, 2)))\n  end)\n  return result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(string.sub(c, 2, 1))) .. string.char(tonumber(c))\n\
    \  end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpt186e7ct.lua:7:\
    \ bad argument #1 to 'char' (number expected, got nil)\nstack traceback:\n\t/tmp/tmpt186e7ct.lua:7:\
    \ in function </tmp/tmpt186e7ct.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpt186e7ct.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpt186e7ct.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, j, j) ~= \"\" then\n      result = string.sub(i, j, j):upper()\
    \ .. string.sub(i, j + 1, j):lower()\n      i = j + 1\n    else\n      i = i +\
    \ 1\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnx9a2up7.lua:22:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpnx9a2up7.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = {}\n  for i = 1, #string do\n    local c = string.sub(i, i)\n\
    \    if c == 'a' then\n      c = 'A'\n    elseif c == 'A' then\n      c = 'a'\n\
    \    end\n    result[i] = c\n  end\n  return table.concat(result)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppebuyfny.lua:22:\
    \ expected: \"hELLO!\"\nactual: \"1\"\nstack traceback:\n\t/tmp/tmppebuyfny.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == 'a' then\n      char = 'A'\n    else\
    \ if char == 'A' then\n      char = 'a'\n    end\n    i = i + 1\n    j = j - 1\n\
    \    result = result .. char\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpey_0dhwm.lua:29: ''end'' expected (to close ''function'' at
    line 4) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = string.len()\n  for i = 1, length do\n\
    \    local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n\
    \      result = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len())\
    \ .. string.sub(i, i + 1)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpue4ymnh0.lua:6:\
    \ bad argument #1 to 'len' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpue4ymnh0.lua:6: in function 'candidate'\n\t/tmp/tmpue4ymnh0.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    local upper = char >= 'a' and char < 'z'\n    local\
    \ lower = char >= 'A' and char < 'Z'\n    if upper and lower then\n      result\
    \ = string.sub(i, j) .. string.sub(j, i)\n      i = j\n    elseif upper then\n\
    \      result = string.sub(i, j) .. 'A'\n      i = j\n    elseif lower then\n\
    \      result = string.sub(i, j) .. 'a'\n      i = j\n    end\n    j = i\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4eu51fzs.lua:30:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp4eu51fzs.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i, c in ipairs(string) do\n        if c:byte()\
    \ == 32 then\n            string.sub(i, 1, string.len(i) + 1):upper():sub(1, string.len(i)\
    \ + 1):lower()\n        else\n            string.sub(i, 1, string.len(i) + 1):lower()\n\
    \        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4uccrmmn.lua:6:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmp4uccrmmn.lua:6: in function 'candidate'\n\t/tmp/tmp4uccrmmn.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"([A-Z])\", function (c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyzly8dzm.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpyzly8dzm.lua:7:\
    \ in function </tmp/tmpyzly8dzm.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpyzly8dzm.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpyzly8dzm.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i, c in ipairs(string) do\n        if c:byte()\
    \ ~= c:byte():lower() then\n            result = result:sub(i, i - 1)\n      \
    \  end\n    end\n    return result:lower()\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn4a_2qow.lua:6:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmpn4a_2qow.lua:6: in function 'candidate'\n\t/tmp/tmpn4a_2qow.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) == 'a' then\n      result = string.sub(i, 1, 1) .. string.sub(j,\
    \ 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n      i = i + 1\n     \
    \ j = j - 1\n    else\n      result = string.sub(i, 1, 1) .. string.sub(j, 1,\
    \ 1) .. string.sub(i, 2, 2) .. string.sub(j, 2, 2)\n      i = i + 1\n      j =\
    \ j - 1\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyiekja9.lua:25:\
    \ expected: \"hELLO!\"\nactual: \"34\"\nstack traceback:\n\t/tmp/tmpcyiekja9.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if string.lower(c) == c then\n      result\
    \ = string.sub(string.upper(c), i)\n    end\n  end\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpafogf6rc.lua:20:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpafogf6rc.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(i, 1, 1) then\n      result = string.sub(i,\
    \ 1, 1) .. string.sub(j, 1, #string.sub(i, 1, 1))\n      i = i + 1\n      j =\
    \ j - 1\n    else\n      result = string.sub(i, 1, 1) .. string.sub(j, 1, #string.sub(i,\
    \ 1, 1))\n      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfcc0_fdi.lua:25:\
    \ expected: \"hELLO!\"\nactual: \"34\"\nstack traceback:\n\t/tmp/tmpfcc0_fdi.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    local upper = string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp80z7_hix.lua:10: '')'' expected (to close ''('' at line 9)
    near ''=''

    '
  stdout: ''
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n \
    \     result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase\
    \ letters.\n  for i = 1, #string do\n    local char = string.sub(i, i)\n    if\
    \ char >= 'A' and char <= 'Z' then\n      result = string.sub(i, i) + string.sub(i,\
    \ i + 1)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj2tgsvz4.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpj2tgsvz4.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, #string) .. string.sub(i, 2,\
    \ #string)\n      i = i + 1\n      j = j + 1\n    else\n      i = i + 1\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoqsf9ngp.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"194\"\nstack traceback:\n\t/tmp/tmpoqsf9ngp.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function(c) return c:lower()\
    \ .. c:upper() end)\n  result:gsub(\"([A-Z])\", function(c) return c:upper() ..\
    \ c:lower() end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4o8wlifu.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp4o8wlifu.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"%l\", function (c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub(\"%U\", function (c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptqeepejv.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmptqeepejv.lua:7:\
    \ in function </tmp/tmptqeepejv.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmptqeepejv.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmptqeepejv.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(i,\
    \ j):upper() .. string.sub(i, j + 1):lower()\n      i = i + 1\n      j = j + 1\n\
    \    elseif char == string.upper then\n      result = string.sub(i, j):lower()\
    \ .. string.sub(i, j + 1):upper()\n      i = i + 1\n      j = j + 1\n    else\n\
    \      i = i + 1\n      j = j + 1\n    end\n  end\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750247
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i, c in ipairs(string) do\n        if c:lower()\
    \ then\n            result = result:upper()\n        elseif c:upper() then\n \
    \           result = result:lower()\n        end\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2zr8wabm.lua:6:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmp2zr8wabm.lua:6: in function 'candidate'\n\t/tmp/tmp2zr8wabm.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c ~= nil then\n      if c == 'a' then\n       \
    \ c = 'A'\n      elseif c == 'A' then\n        c = 'a'\n      end\n    end\n \
    \   i = i + 1\n    j = j - 1\n    string.sub(i, j + 1, result)\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5j8zs206.lua:18:\
    \ bad argument #3 to 'sub' (number expected, got string)\nstack traceback:\n\t\
    /tmp/tmp5j8zs206.lua:18: in function 'candidate'\n\t/tmp/tmp5j8zs206.lua:27: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = {}\n  for _, char in ipairs(string) do\n    local lower = char:lower()\n\
    \    local upper = char:upper()\n    result[#result + 1] = lower .. upper\n  end\n\
    \  return table.concat(result)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0mwjq33v.lua:6:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmp0mwjq33v.lua:6: in function 'candidate'\n\t/tmp/tmp0mwjq33v.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function(c) return c:lower()\
    \ end)\n  result:gsub(\"([A-Z])\", function(c) return c:upper() end)\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbv1fyx72.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpbv1fyx72.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, #string) .. string.sub(i, 2,\
    \ #string)\n      i = i + 1\n      j = j + 1\n    else\n      i = i + 1\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoqsf9ngp.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"194\"\nstack traceback:\n\t/tmp/tmpoqsf9ngp.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = {}\n  for _, c in ipairs(string) do\n    result[#result + 1]\
    \ = c:upper()\n  end\n  return table.concat(result)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3pa1v26q.lua:6:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmp3pa1v26q.lua:6: in function 'candidate'\n\t/tmp/tmp3pa1v26q.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if char >= 'a' and char <= 'z' then\n            char = string.sub(string.sub(i,\
    \ 1, i), -1)\n        end\n        if char >= 'A' and char <= 'Z' then\n     \
    \       char = string.sub(string.sub(i, 1, i), -1)\n        end\n        result\
    \ = result .. char\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsb7s55we.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!1\"\nstack traceback:\n\t/tmp/tmpsb7s55we.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(i, j, \"\
    A\")\n    elseif c == \"A\" then\n      c = string.sub(i, j, \"a\")\n    end\n\
    \    result = result .. c\n    i = i + 1 -- skip next char\n    j = j - 1\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6mtouomk.lua:25:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp6mtouomk.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if char >= 'a' and char <= 'z' then\n            char = string.sub(i,\
    \ i - 1)\n        end\n        if char >= 'A' and char <= 'Z' then\n         \
    \   char = string.sub(i, i - 1)\n        end\n        result = result .. char\n\
    \    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpot30p9w5.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!1\"\nstack traceback:\n\t/tmp/tmpot30p9w5.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"([A-Z])\", function (c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyzly8dzm.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpyzly8dzm.lua:7:\
    \ in function </tmp/tmpyzly8dzm.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpyzly8dzm.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpyzly8dzm.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i, i)\n    if string.sub(c, i, i) ~= c then\n    \
    \  result = string.sub(c, i, i):upper() .. string.sub(c, i + 1, i + 1)\n    end\n\
    \  end\n  -- Uppercase letters.\n  for i = #string, 1, -1 do\n    local c = string.sub(i,\
    \ i, i)\n    if string.sub(c, i, i) ~= c then\n      result = string.sub(c, i,\
    \ i):lower() .. string.sub(c, i + 1, i + 1)\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpogvbxojd.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpogvbxojd.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"([A-Z])\", function (c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyzly8dzm.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpyzly8dzm.lua:7:\
    \ in function </tmp/tmpyzly8dzm.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpyzly8dzm.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpyzly8dzm.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i, i)\n    if c >= 'a' and c <= 'z' then\n      result\
    \ = string.sub(i, i - 1, i - 1) + string.sub(i, i + 1, i + 1) + string.sub(i,\
    \ 1, i)\n    end\n  end\n  -- Uppercase letters.\n  for i = 1, #string do\n  \
    \  local c = string.sub(i, i, i)\n    if c >= 'A' and c <= 'Z' then\n      result\
    \ = string.sub(i, i - 1, i - 1) + string.sub(i, i + 1, i + 1) + string.sub(i,\
    \ 1, i)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw75t5qvw.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpw75t5qvw.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c ~= nil then\n      if c == 'a'\
    \ then\n        c = 'A'\n      elseif c == 'A' then\n        c = 'a'\n      end\n\
    \    end\n    j = j - 1\n    result = result .. c\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo5hxnd70.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpo5hxnd70.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"(.)\", function(c) return c:lower()\
    \ .. c:upper() end)\n  result:gsub(\"(.)\", function(c) return c:upper() .. c:lower()\
    \ end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptpgms5el.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmptpgms5el.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(i, j - 1,\
    \ \"A\")\n      j = j - 1\n    end\n    result = result .. c\n    i = i + 1\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjyvt8o65.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpjyvt8o65.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = string.len()\n  for i = 1, length do\n\
    \    local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n\
    \      result = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len())\
    \ .. string.sub(i, i + 1)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpue4ymnh0.lua:6:\
    \ bad argument #1 to 'len' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpue4ymnh0.lua:6: in function 'candidate'\n\t/tmp/tmpue4ymnh0.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750242
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower(char) then\n      result\
    \ = string.sub(i, j):upper() .. string.sub(i, j + 1):lower()\n      i = i + 1\n\
    \      j = j + 1\n    elseif char == string.upper(char) then\n      result = string.sub(i,\
    \ j):lower() .. string.sub(i, j + 1):upper()\n      i = i + 1\n      j = j + 1\n\
    \    else\n      i = i + 1\n      j = j + 1\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750247
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char >= 'a' and char <= 'z' then\n      result\
    \ = string.sub(i, j) .. string.sub(string.lower(char), string.upper(char))\n \
    \     i = i + 1\n      j = j - 1\n    elseif char >= 'A' and char <= 'Z' then\n\
    \      result = string.sub(i, j) .. string.sub(string.upper(char), string.lower(char))\n\
    \      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n      j = j - 1\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp38cx2mh5.lua:29:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp38cx2mh5.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i, i)\n    if string.sub(c, i, i) ~= nil then\n  \
    \    result = string.gsub(result, '[' .. c .. ']', string.upper(c))\n    end\n\
    \  end\n  -- Uppercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i, i)\n    if string.sub(c, i, i) ~= nil then\n      result = string.gsub(result,\
    \ '[' .. c .. ']', string.lower(c))\n    end\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprqx2huz8.lua:10:\
    \ malformed pattern (missing ']')\nstack traceback:\n\t/tmp/tmprqx2huz8.lua:10:\
    \ in function 'candidate'\n\t/tmp/tmprqx2huz8.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower(char) then\n      result\
    \ = string.sub(i, j):upper()\n    elseif char == string.upper(char) then\n   \
    \   result = string.sub(i, j):lower()\n    else\n      result = result .. char\n\
    \    end\n    i = i + 1 -- Increment i to skip the character we just flipped.\n\
    \    j = j - 1 -- Decrement j to move to the next character in string.\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxubb4g0g.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpxubb4g0g.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(i,\
    \ j):upper()\n    elseif char == string.upper then\n      result = string.sub(i,\
    \ j):lower()\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7cfjredh.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp7cfjredh.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    local upper = char >= 'a' and char < 'z'\n    local\
    \ lower = upper and char >= 'A' and char < 'Z'\n    if upper and lower then\n\
    \      result = string.sub(i, j) .. string.sub(j, i)\n      i = j\n    elseif\
    \ upper then\n      result = string.sub(i, j) .. string.sub(j, i, 'a')\n     \
    \ i = j\n    elseif lower then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i, 'A')\n      i = j\n    end\n    j = i\n  end\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfs22k26s.lua:30:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpfs22k26s.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxu3qcejd.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"43\"\nstack traceback:\n\t/tmp/tmpxu3qcejd.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"%l\", function (c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub(\"%U\", function (c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptqeepejv.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmptqeepejv.lua:7:\
    \ in function </tmp/tmptqeepejv.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmptqeepejv.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmptqeepejv.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() == c then\n      result = string.sub(i,\
    \ j):upper()\n    else\n      result = string.sub(i, j):lower()\n    end\n   \
    \ i = i + 1\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph3h1n0g_.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmph3h1n0g_.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local c = string.sub(i,\
    \ i)\n        if c:lower() ~= c then\n            local upper = string.sub(i,\
    \ 1, i)\n            local lower = string.sub(i, i + 1)\n            result =\
    \ string.sub(result, 1, i-1) .. upper .. lower .. string.sub(result, i + 1)\n\
    \        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkpd5dsap.lua:21:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpkpd5dsap.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(i, 1, 1) then\n      result = string.sub(i,\
    \ 1, 1) .. string.sub(j, 1, #string.sub(i, 1, 1))\n      i = i + 1\n      j =\
    \ j - 1\n    else\n      result = string.sub(i, 1, 1) .. string.sub(j, 1, #string.sub(i,\
    \ 1, 1))\n      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfcc0_fdi.lua:25:\
    \ expected: \"hELLO!\"\nactual: \"34\"\nstack traceback:\n\t/tmp/tmpfcc0_fdi.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == 'a' then\n      result = string.sub(i, j):upper():sub(1,\
    \ 1):lower() .. string.sub(i + 1, j)\n      i = i + 1\n    elseif c == 'A' then\n\
    \      result = string.sub(i, j):upper():sub(1, 1) .. string.sub(i + 1, j)\n \
    \     i = i + 1\n    elseif c == 'b' then\n      result = string.sub(i, j):upper():sub(2,\
    \ 1):lower() .. string.sub(i + 1, j)\n      i = i + 1\n    elseif c == 'B' then\n\
    \      result = string.sub(i, j):upper():sub(2, 1) .. string.sub(i + 1, j)\n \
    \     i = i + 1\n    elseif c == 'c' then\n      result = string.sub(i, j):upper():sub(3,\
    \ 1):lower() .. string.sub(i + 1, j)\n      i = i + 1\n    elseif c == 'C' then\n\
    \      result = string.sub(i, j):upper():sub(3, 1) .. string.sub(i + 1, j)\n \
    \     i = i + 1\n    elseif c == 'd' then\n      result = string.sub(i, j):upper():sub(4,\
    \ 1):lower() .. string.sub(i + 1, j)\n      i = i + 1\n    elseif c == 'D' then\n\
    \      result = string.sub(i, j):upper():sub(4, 1) .. string.sub(i + 1, j)\n \
    \     i = i + 1\n    elseif c == 'e' then\n      result = string.sub(i, j):upper():sub(5,\
    \ 1):lower() .. string.sub(i + 1, j)\n      i = i + 1\n    elseif c == 'E' then\n\
    \      result = string.sub(i, j):upper():sub(5, 1) .. string.sub(i + 1, j)\n \
    \     i = i + 1\n    elseif c == 'f' then\n      result = string.sub(i, j):upper():sub(6,\
    \ 1):lower() .. string.sub(i + 1, j)\n      i = i + 1\n    elseif c == 'F' then\n\
    \      result = string.sub(i, j):upper():sub(6, 1) .. string.sub(i + 1, j)\n \
    \     i = i + 1\n    elseif c == 'g' then\n      result = string.sub(i, j):upper():sub(7,\
    \ 1):lower() .. string.sub(i + 1, j)\n      i = i + 1\n    elseif c == 'G' then\n\
    \      result = string.sub(i, j):upper():sub(7, 1) .. string.sub(i + 1, j)\n \
    \     i = i + 1\n    elseif c == 'h' then\n      result = string.sub(i, j):upper():sub(8,\
    \ 1):lower() .. string.sub(i + 1, j)\n      i = i + 1\n    elseif c == 'H\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpdh6wbdor.lua:54: unfinished string near ''''H''

    '
  stdout: ''
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = #string\n  for i = 1, length do\n \
    \   local char = string.sub(i, i)\n    local upper = char >= 'a' and char < 'z'\n\
    \    local lower = char >= 'A' and char < 'Z'\n    if upper and lower then\n \
    \     result = string.sub(i, i - 1) .. string.sub(i, i + 1)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnjdphbj4.lua:22:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpnjdphbj4.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = {}\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if char >= 'a' and char <= 'z' then\n      char = string.sub(string.sub(char,\
    \ 1, 1), 1, 1) + string.sub(string.sub(char, 1, 1), 2, 1)\n    end\n    if char\
    \ >= 'A' and char <= 'Z' then\n      char = string.sub(string.sub(char, 1, 1),\
    \ 1, 1) + string.sub(string.sub(char, 1, 1), 2, 1)\n    end\n    result[i] = char\n\
    \  end\n  return table.concat(result)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj04c21mv.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"1\"\nstack traceback:\n\t/tmp/tmpj04c21mv.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(string.upper,\
    \ i)\n      result = string.sub(result, 1, string.len(string.upper) - i)\n   \
    \ elseif char == string.upper then\n      result = string.sub(string.lower, i)\n\
    \      result = string.sub(result, 1, string.len(string.lower) - i)\n    end\n\
    \    i = i + 1\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpko70o2g1.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpko70o2g1.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, j, j) ~= \"\" then\n      result = string.sub(i, j, j):lower()\
    \ .. string.sub(i, j + 1, j):upper()\n    end\n    i = i + 1\n    j = j + 1\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750247
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \      i = i + 1\n    else\n      i = i + 1\n    end\n    j = j + 1\n  end\n \
    \ return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750247
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower(char) then\n      result\
    \ = string.sub(string.upper(char), 2, string.len(string.upper(char)))\n    elseif\
    \ char == string.upper(char) then\n      result = string.sub(string.lower(char),\
    \ 1, string.len(string.lower(char)))\n    end\n    i = i + 1\n    j = j - 1\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5crpng30.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5crpng30.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if string.byte(c) >= 65 and string.byte(c)\
    \ <= 90 then\n      result = string.sub(string.sub(i, 1, i), -1) + string.sub(i,\
    \ 1) + result\n    end\n  end\n  -- Uppercase letters.\n  for i = 1, #string do\n\
    \    local c = string.sub(i, i)\n    if string.byte(c) >= 97 and string.byte(c)\
    \ <= 122 then\n      result = string.sub(string.sub(i, 1, i), -1) + string.sub(i,\
    \ 1) + result\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa4dujufi.lua:9:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpa4dujufi.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpa4dujufi.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, #string) .. string.sub(i, 2,\
    \ #string)\n      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_hi2ojnp.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"43\"\nstack traceback:\n\t/tmp/tmp_hi2ojnp.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"([A-Z])\", function (c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyzly8dzm.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpyzly8dzm.lua:7:\
    \ in function </tmp/tmpyzly8dzm.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpyzly8dzm.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpyzly8dzm.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local new_string = string\n  -- Lowercase letters.\n  for i = 1, #string do\n\
    \    local c = string.sub(i, i, i)\n    if string.sub(c, i, i) ~= nil then\n \
    \     new_string = new_string .. string.sub(c, i, i):upper()\n    end\n  end\n\
    \  -- Uppercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i, i)\n    if string.sub(c, i, i) ~= nil then\n      new_string = new_string\
    \ .. string.sub(c, i, i):lower()\n    end\n  end\n  return new_string\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwz_vizng.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!11\"\nstack traceback:\n\t/tmp/tmpwz_vizng.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = #string\n  for i = 1, length do\n \
    \   local c = string.sub(i, i)\n    if c ~= nil then\n      c = string.upper(c)\n\
    \      c = string.lower(c)\n      result = result .. c\n    end\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzi8vksvp.lua:22:\
    \ expected: \"hELLO!\"\nactual: \"Hello!1\"\nstack traceback:\n\t/tmp/tmpzi8vksvp.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower(char) then\n      result\
    \ = string.sub(i, j):upper():sub(1, #string.sub(i, j))\n    elseif char == string.upper(char)\
    \ then\n      result = string.sub(i, j):lower():sub(1, #string.sub(i, j))\n  \
    \  end\n    i = i + 1\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps5g3xwug.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmps5g3xwug.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = #string\n  for i = 1, length do\n \
    \   local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n \
    \     result = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len(string.sub(i,\
    \ i + 1)) - 2)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5o8q885d.lua:20:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp5o8q885d.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n \
    \     result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase\
    \ letters.\n  for i = 1, #string do\n    local char = string.sub(i, i)\n    if\
    \ char >= 'A' and char <= 'Z' then\n      result = string.sub(i, i) + string.sub(i,\
    \ i + 1)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj2tgsvz4.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpj2tgsvz4.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local new_string = string\n  new_string = new_string:gsub(\"%l\", function\
    \ (c)\n    return string.char(tonumber(c) + 32)\n  end)\n  new_string = new_string:gsub(\"\
    %U\", function (c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return\
    \ new_string\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpebqzf8yn.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpebqzf8yn.lua:7:\
    \ in function </tmp/tmpebqzf8yn.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpebqzf8yn.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpebqzf8yn.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c))\
    \ .. string.char(tonumber(string.sub(c, 2)))\n  end)\n  result:gsub('%U', function(c)\n\
    \    return string.char(tonumber(string.sub(c, 2, 2))) .. string.char(tonumber(c))\n\
    \  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsaue_fio.lua:7:\
    \ bad argument #1 to 'char' (number expected, got nil)\nstack traceback:\n\t/tmp/tmpsaue_fio.lua:7:\
    \ in function </tmp/tmpsaue_fio.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpsaue_fio.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpsaue_fio.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function(c) return c:lower()\
    \ end)\n  result:gsub(\"([A-Z])\", function(c) return c:upper() end)\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbv1fyx72.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpbv1fyx72.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"%l\", function (c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub(\"%U\", function (c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptqeepejv.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmptqeepejv.lua:7:\
    \ in function </tmp/tmptqeepejv.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmptqeepejv.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmptqeepejv.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, 1)\n    i = i + 1\n    if c == \"a\" then\n      c = \"\
    A\"\n    elseif c == \"A\" then\n      c = \"a\"\n    end\n    j = j + 1\n   \
    \ result = result .. c\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750247
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local upper = string.chars:gsub(\"%l\", string.upper)\n\
    \  local lower = string.chars:gsub(\"%l\", string.lower)\n  result = string.gsub(upper,\
    \ \"%l\", lower)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7y4u_vio.lua:6:\
    \ attempt to index field 'chars' (a nil value)\nstack traceback:\n\t/tmp/tmp7y4u_vio.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp7y4u_vio.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase to uppercase and vice versa.\n  for i\
    \ = 1, #string do\n    local char = string.sub(i, i)\n    if char >= 'a' and char\
    \ <= 'z' then\n      result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2dmhh2bk.lua:20:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp2dmhh2bk.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local new_string = ''\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if char >= 'a' and char <= 'z' then\n      char = string.sub(string.sub(string,\
    \ 1, i), -1) + char\n    end\n    new_string = new_string .. char\n  end\n  return\
    \ new_string\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp46fyyhro.lua:20:\
    \ expected: \"hELLO!\"\nactual: \"1\"\nstack traceback:\n\t/tmp/tmp46fyyhro.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8hpy56ja.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"43\"\nstack traceback:\n\t/tmp/tmp8hpy56ja.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local upper = string.char(\"A\"..string.upper)\n \
    \ local lower = string.char(\"a\"..string.lower)\n  for i = 1, string.len(string)\
    \ do\n    local c = string.sub(string, i, i)\n    if c == upper then\n      result\
    \ = string.sub(string, i, i-1)..string.sub(string, i-1, i)..string.sub(string,\
    \ i+1, i)\n    elseif c == lower then\n      result = string.sub(string, i, i-1)..string.sub(string,\
    \ i-1, i)..string.sub(string, i+1, i)\n    else\n      result = string.sub(string,\
    \ i, i-1)..c\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj4tckzdt.lua:6:\
    \ attempt to concatenate field 'upper' (a function value)\nstack traceback:\n\t\
    /tmp/tmpj4tckzdt.lua:6: in function 'candidate'\n\t/tmp/tmpj4tckzdt.lua:24: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, \"A\")\n      i = i + 1\n    end\n    if c == \"A\" then\n      c = string.sub(i,\
    \ j, \"a\")\n      i = i + 1\n    end\n    if c == \"0\" then\n      c = string.sub(i,\
    \ j, \"0\")\n      i = i + 1\n    end\n    if c == \"1\" then\n      c = string.sub(i,\
    \ j, \"1\")\n      i = i + 1\n    end\n    if c == \"2\" then\n      c = string.sub(i,\
    \ j, \"2\")\n      i = i + 1\n    end\n    if c == \"3\" then\n      c = string.sub(i,\
    \ j, \"3\")\n      i = i + 1\n    end\n    if c == \"4\" then\n      c = string.sub(i,\
    \ j, \"4\")\n      i = i + 1\n    end\n    if c == \"5\" then\n      c = string.sub(i,\
    \ j, \"5\")\n      i = i + 1\n    end\n    if c == \"6\" then\n      c = string.sub(i,\
    \ j, \"6\")\n      i = i + 1\n    end\n    if c == \"7\" then\n      c = string.sub(i,\
    \ j, \"7\")\n      i = i + 1\n    end\n    if c == \"8\" then\n      c = string.sub(i,\
    \ j, \"8\")\n      i = i + 1\n    end\n    if c == \"9\" then\n      c = string.sub(i,\
    \ j, \"9\")\n      i = i + 1\n    end\n    if c == \"-\" then\n      c = string.sub(i,\
    \ j, \"_\")\n      i = i + 1\n    end\n    if c == \"_\" then\n      c = string.sub(i,\
    \ j, \"-\")\n      i = i + 1\n    end\n    if c == \"/\" then\n      c = string.sub(i,\
    \ j, \"/\")\n      i = i + 1\n    end\n    if c == \"%\" then\n      c = string.sub(i,\
    \ j, \"%\")\n      i = i + 1\n    end\n    if c == \"+\" then\n      c = string.sub(i,\
    \ j, \"+\")\n      i = i + 1\n    end\n    if c == \"=\" then\n      c = string.sub(i,\
    \ j, \"=\")\n      i = i + 1\n    end\n    if c == \"&\" then\n      c = string.sub(i,\
    \ j, \"&\")\n      i = i + 1\n    end\n    if c == \"|\" then\n      c = string.sub(i,\
    \ j, \"|\")\n      i = i + 1\n    end\n    if c == \"~\" then\n      c = string.sub(i,\
    \ j, \"~\")\n      i = i + 1\n    end\n    if c == \"?\" then\n      c = string.sub(i,\
    \ j, \"?\")\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpgv0hhcla.lua:105: ''end'' expected (to close ''if'' at line
    94) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \      i = i + 1\n    else\n      result = string.sub(j, 1, 1) .. string.sub(i,\
    \ 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n      i = i + 1\n     \
    \ j = j - 1\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp18djuzpv.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"65\"\nstack traceback:\n\t/tmp/tmp18djuzpv.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(j, j - 1)\n\
    \      j = j - 1\n    end\n    result = result .. c\n    i = i + 1\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp0j2a1dr.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpp0j2a1dr.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local c = string.sub(i,\
    \ i)\n        if c == 'a' then\n            c = 'A'\n        elseif c == 'A' then\n\
    \            c = 'a'\n        end\n        result = string.sub(i, i-1) .. c\n\
    \    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzn5v7h5j.lua:22:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpzn5v7h5j.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i, c in ipairs(string) do\n        if c:lower()\
    \ == c then\n            result = result:upper()\n        elseif c:upper() ==\
    \ c then\n            result = result:lower()\n        end\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzh5zsixb.lua:6:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmpzh5zsixb.lua:6: in function 'candidate'\n\t/tmp/tmpzh5zsixb.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, #string) .. string.sub(i, 2,\
    \ #string)\n      i = i + 1\n      j = j + 1\n    else\n      i = i + 1\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoqsf9ngp.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"194\"\nstack traceback:\n\t/tmp/tmpoqsf9ngp.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char >= 'a' and char <= 'z' then\n      result\
    \ = string.sub(i, j) .. string.sub(string.lower(char), string.upper(char))\n \
    \   elseif char >= 'A' and char <= 'Z' then\n      result = string.sub(i, j) ..\
    \ string.sub(string.upper(char), string.lower(char))\n    else\n      result =\
    \ string.sub(i, j)\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyjkrx_ar.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpyjkrx_ar.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    local is_upper = char >= 'a' and char <= 'z'\n\
    \    local is_lower = char >= 'A' and char <= 'Z'\n    if is_upper then\n    \
    \  result = string.sub(i, j - 1) .. string.sub(j, j)\n      j = j - 1\n    elseif\
    \ is_lower then\n      result = string.sub(i, j - 1) .. string.sub(j, j + 1)\n\
    \      j = j + 1\n    else\n      i = i + 1\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3tgfrlis.lua:28:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp3tgfrlis.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c))\
    \ .. string.char(tonumber(string.sub(c, 1, 1)))\n  end)\n  result:gsub('%U', function(c)\n\
    \    return string.char(tonumber(string.sub(c, 2, 2))) .. string.char(tonumber(string.sub(c,\
    \ 1, 1)))\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnl4f6dos.lua:7:\
    \ bad argument #1 to 'char' (number expected, got nil)\nstack traceback:\n\t/tmp/tmpnl4f6dos.lua:7:\
    \ in function </tmp/tmpnl4f6dos.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpnl4f6dos.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpnl4f6dos.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(i,\
    \ j):upper()\n      i = i + 1\n    elseif char == string.upper then\n      result\
    \ = string.sub(i, j):lower()\n      i = i + 1\n    else\n      i = i + 1\n   \
    \ end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmlu91egc.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpmlu91egc.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([A-Z])\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"([a-z])\", function (c)\n\
    \    return string.char(tonumber(c) + 32)\n  end)\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpadqe1aq1.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpadqe1aq1.lua:7:\
    \ in function </tmp/tmpadqe1aq1.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpadqe1aq1.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpadqe1aq1.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(i, j - 1)\n\
    \      j = j - 1\n    end\n    if c == \"A\" then\n      c = string.sub(i, j -\
    \ 1)\n      j = j - 1\n    end\n    if c == \"0\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"1\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"2\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"3\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"4\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"5\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"6\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"7\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"8\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"9\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"_\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"-\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"+\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"/\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"%\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"^\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"&\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"|\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"~\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"?\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"{\" \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp5pslehj9.lua:98: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659750242
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(i,\
    \ j):upper() .. string.sub(i, j + 1):lower()\n      i = i + 1\n      j = j + 1\n\
    \    elseif char == string.upper then\n      result = string.sub(i, j):lower()\
    \ .. string.sub(i, j + 1):upper()\n      i = i + 1\n      j = j + 1\n    else\n\
    \      result = result .. char\n      i = i + 1\n      j = j + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750247
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ end\n    if c == \"A\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpydood706.lua:28:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpydood706.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(i,\
    \ j):upper() .. string.sub(i, j+1):lower()\n      i = i + 1\n      j = j + 1\n\
    \    elseif char == string.upper then\n      result = string.sub(i, j):lower()\
    \ .. string.sub(i, j+1):upper()\n      i = i + 1\n      j = j + 1\n    else\n\
    \      result = result .. char\n      i = i + 1\n      j = j + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750247
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local c = string.sub(i,\
    \ i)\n        if c == \"a\" then\n            c = \"A\"\n        elseif c == \"\
    A\" then\n            c = \"a\"\n        end\n        result = string.sub(i, i)\
    \ + c\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpuubfzmlp.lua:13:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmpuubfzmlp.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpuubfzmlp.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if c >= 'a' and c <= 'z' then\n      result\
    \ = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase letters.\n\
    \  for i = 1, #string do\n    local c = string.sub(i, i)\n    if c >= 'A' and\
    \ c <= 'Z' then\n      result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvyqtyc01.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpvyqtyc01.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, #string) .. string.sub(i, 2,\
    \ #string)\n      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_hi2ojnp.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"43\"\nstack traceback:\n\t/tmp/tmp_hi2ojnp.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i, c in ipairs(string) do\n        if c:lower()\
    \ ~= c:upper() then\n            result = result:sub(i, i)\n        end\n    end\n\
    \    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8m5zvv65.lua:6:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmp8m5zvv65.lua:6: in function 'candidate'\n\t/tmp/tmp8m5zvv65.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(j, j - 1)\n\
    \      j = j - 1\n    end\n    if c == \"A\" then\n      c = string.sub(j, j -\
    \ 1)\n      j = j - 1\n    end\n    if c == \"0\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"1\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"2\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"3\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"4\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"5\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"6\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"7\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"8\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"9\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"-\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"_\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"+\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"/\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"%\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"^\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"~\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"!\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \".\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \",\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"'\" then\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpdjdcreot.lua:107: ''end'' expected (to close ''if'' at line
    97) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ end\n    if c == \"A\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpydood706.lua:28:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpydood706.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, #string) .. string.sub(i, 2,\
    \ #string)\n      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_hi2ojnp.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"43\"\nstack traceback:\n\t/tmp/tmp_hi2ojnp.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == 'a' then\n      result = string.sub(i, j):upper()\n\
    \    elseif c == 'A' then\n      result = string.sub(i, j):lower()\n    else\n\
    \      result = result .. c\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwk9t_xc_.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpwk9t_xc_.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local c = string.sub(i,\
    \ i)\n        if c:lower() ~= c then\n            result = string.sub(i, 1, i)\
    \ + string.sub(i, i + 1, #string)\n        end\n    end\n    return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa5oginnz.lua:19:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpa5oginnz.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n \
    \     result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase\
    \ letters.\n  for i = 1, #string do\n    local char = string.sub(i, i)\n    if\
    \ char >= 'A' and char <= 'Z' then\n      result = string.sub(i, i) + string.sub(i,\
    \ i + 1)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj2tgsvz4.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpj2tgsvz4.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ char = string.sub(i, j)\n    local upper = char >= 'a' and char < 'z'\n    local\
    \ lower = upper and char >= 'A' and char < 'Z'\n    if upper and lower then\n\
    \      result = string.sub(i, j) .. string.sub(j, i)\n    end\n    i = i + 1\n\
    \    j = j + 1\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750247
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = #string\n  for i = 1, length do\n \
    \   local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n \
    \     result = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len(string.sub(i,\
    \ i + 1)) - 2)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5o8q885d.lua:20:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp5o8q885d.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(i,\
    \ j):upper()..string.sub(i, j+1)\n      i = i + 1\n      j = j + 2\n    elseif\
    \ char == string.upper then\n      result = string.sub(i, j):lower()..string.sub(i,\
    \ j+1)\n      i = i + 1\n      j = j + 2\n    else\n      i = i + 1\n      j =\
    \ j + 1\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750247
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local char = string.sub(i, i)\n    local upper = string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpsur3hjkr.lua:10: '')'' expected (to close ''('' at line 9)
    near ''=''

    '
  stdout: ''
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if c >= 'a' and c <= 'z' then\n      result\
    \ = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase letters.\n\
    \  for i = 1, #string do\n    local c = string.sub(i, i)\n    if c >= 'A' and\
    \ c <= 'Z' then\n      result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvyqtyc01.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpvyqtyc01.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c))\
    \ .. string.char(tonumber(string.sub(c, 2)))\n  end)\n  return result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(string.sub(c, 2, 2))) .. string.char(tonumber(c))\n\
    \  end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpt0ofxngm.lua:7:\
    \ bad argument #1 to 'char' (number expected, got nil)\nstack traceback:\n\t/tmp/tmpt0ofxngm.lua:7:\
    \ in function </tmp/tmpt0ofxngm.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpt0ofxngm.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpt0ofxngm.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, i, i) ~= string.sub(j, j, j) then\n      result = string.sub(i,\
    \ i, i)\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp31ngi6bj.lua:21:\
    \ expected: \"hELLO!\"\nactual: \"1\"\nstack traceback:\n\t/tmp/tmp31ngi6bj.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i, c in ipairs(string) do\n        if c:lower()\
    \ ~= c then\n            result = result:sub(i, i):upper() .. result:sub(i+1,\
    \ i+1)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8yavr_t3.lua:6:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmp8yavr_t3.lua:6: in function 'candidate'\n\t/tmp/tmp8yavr_t3.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c ~= nil then\n      if c:lower() ~= c then\n \
    \       result = string.sub(i, j):upper() .. string.sub(i, j)\n      end\n   \
    \ end\n    i = i + 1\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi9mnp2xo.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpi9mnp2xo.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"(.)\", function(c) return string.upper(c)\
    \ end)\n  result:gsub(\"(.)\", function(c) return string.lower(c) end)\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo3by205m.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpo3by205m.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(i, 1, 1) then\n      result = string.sub(i,\
    \ 1, 1) .. string.sub(j, 1, #string.sub(i, 1, 1))\n      i = i + 1\n      j =\
    \ j - 1\n    else\n      result = string.sub(i, 1, 1) .. string.sub(j, 1, #string.sub(i,\
    \ 1, 1))\n      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfcc0_fdi.lua:25:\
    \ expected: \"hELLO!\"\nactual: \"34\"\nstack traceback:\n\t/tmp/tmpfcc0_fdi.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(i,\
    \ j):upper() .. string.sub(i, j + 1):lower()\n      i = i + 1\n      j = j + 1\n\
    \    elseif char == string.upper then\n      result = string.sub(i, j):lower()\
    \ .. string.sub(i, j + 1):upper()\n      i = i + 1\n      j = j + 1\n    else\n\
    \      result = result .. char\n      i = i + 1\n      j = j + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750247
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j):upper() .. string.sub(i, j):lower()\n      i = i + 1\n      j = j - 1\n \
    \   else\n      i = i + 1\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprpy_jjpd.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmprpy_jjpd.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char >= 'a' and char <= 'z' then\n      result\
    \ = string.sub(i, j - 1) .. string.sub(string.sub(string, i, j), 1, 1)\n    elseif\
    \ char >= 'A' and char <= 'Z' then\n      result = string.sub(i, j - 1) .. string.sub(string.sub(string,\
    \ i, j), 1, 1)\n    else\n      result = string.sub(i, j)\n    end\n    i = i\
    \ + 1\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpifsi64ux.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpifsi64ux.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i, c in ipairs(string) do\n        if c ~=\
    \ 'a' and c ~= 'A' then\n            -- Flip case\n            local new_c = string.byte(c,\
    \ string.byte(i))\n            string.byte(c, string.byte(i)) = string.byte(new_c)\n\
    \            string.byte(new_c) = c\n        end\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpl8s8csl1.lua:10: unexpected symbol near ''=''

    '
  stdout: ''
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if char >= 'a' and char <= 'z' then\n            char = string.sub(string.sub(i,\
    \ 1, i), -1)\n        end\n        if char >= 'A' and char <= 'Z' then\n     \
    \       char = string.sub(string.sub(i, 1, i), -1)\n        end\n        result\
    \ = result .. char\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsb7s55we.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!1\"\nstack traceback:\n\t/tmp/tmpsb7s55we.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i, i)\n    string.sub(i, i, string.len[i])\n    string.sub(i,\
    \ i, string.upper(c))\n  end\n  return result\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpuat844pj.lua:9:\
    \ attempt to index field 'len' (a function value)\nstack traceback:\n\t/tmp/tmpuat844pj.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpuat844pj.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i, i)\n    if string.sub(c, i, i) ~= nil then\n  \
    \    result = string.gsub(string.sub(c, i, i), '\\l+', '\\U&')\n    end\n  end\n\
    \  -- Uppercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i, i)\n    if string.sub(c, i, i) ~= nil then\n      result = string.gsub(string.sub(c,\
    \ i, i), '\\U&+', '\\l+')\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnmwvlp5v.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpnmwvlp5v.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \      i = i + 1\n    else\n      i = i + 1\n    end\n    j = j + 1\n  end\n \
    \ return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750247
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, i)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, i)\n      i = i + 1\n      if c == \"A\" then\n        c = string.sub(i,\
    \ j, i)\n        i = i + 1\n      end\n    end\n    result = result .. c\n   \
    \ j = i\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750247
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ end\n    if c == \"A\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpydood706.lua:28:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpydood706.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"%l\", function (c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub(\"%U\", function (c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptqeepejv.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmptqeepejv.lua:7:\
    \ in function </tmp/tmptqeepejv.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmptqeepejv.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmptqeepejv.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, i, i) ~= string.sub(j, j, j) then\n      result = string.sub(j,\
    \ j, j) .. string.sub(i, i, i)\n      i = i + 1\n    else\n      i = i + 1\n \
    \   end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb1o0bm4a.lua:22:\
    \ expected: \"hELLO!\"\nactual: \"1\"\nstack traceback:\n\t/tmp/tmpb1o0bm4a.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local new_string = ''\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if char >= 'a' and char <= 'z' then\n      char = string.sub(string.sub(char,\
    \ 1, 1), 1, 1) + 'A'\n    end\n    if char >= 'A' and char <= 'Z' then\n     \
    \ char = string.sub(string.sub(char, 1, 1), 1, 1) + 'a'\n    end\n    new_string\
    \ = new_string .. char\n  end\n  return new_string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn8xqy89v.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"1\"\nstack traceback:\n\t/tmp/tmpn8xqy89v.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if string.lower(c) ~= c then\n      result\
    \ = string.sub(i, 1, string.upper(c))\n    end\n  end\n  -- Uppercase letters.\n\
    \  for i = 1, #string do\n    local c = string.sub(i, i)\n    if string.upper(c)\
    \ ~= c then\n      result = string.sub(i, 1, string.lower(c))\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk0q3lkaj.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpk0q3lkaj.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    local lc = string.lower(c)\n    if lc ~= c\
    \ then\n      result = string.sub(i, 1, i - 1) + string.upper(lc) + string.sub(i\
    \ + 1, i)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi3pth1yx.lua:21:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpi3pth1yx.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxu3qcejd.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"43\"\nstack traceback:\n\t/tmp/tmpxu3qcejd.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = {}\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if char >= 'a' and char <= 'z' then\n      char = string.sub(string.sub(char,\
    \ 1, 1), 1, 1) .. string.sub(string.sub(char, 1, 2), 1, 2)\n    end\n    result[i]\
    \ = char\n  end\n  return table.concat(result)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpojbf4n83.lua:20:\
    \ expected: \"hELLO!\"\nactual: \"1\"\nstack traceback:\n\t/tmp/tmpojbf4n83.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = #string\n  for i = 1, length do\n \
    \   local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n \
    \     result = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len(string.sub(i,\
    \ i + 1)) - 1) .. char\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5y4qi61p.lua:20:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp5y4qi61p.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"([A-Z])\", function (c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyzly8dzm.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpyzly8dzm.lua:7:\
    \ in function </tmp/tmpyzly8dzm.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpyzly8dzm.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpyzly8dzm.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.upper(char) then\n      result\
    \ = string.sub(j, j) .. string.lower(char)\n      j = j + 1\n    elseif char ==\
    \ string.lower(char) then\n      result = string.sub(j, j) .. string.upper(char)\n\
    \      j = j + 1\n    else\n      i = i + 1\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750247
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxu3qcejd.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"43\"\nstack traceback:\n\t/tmp/tmpxu3qcejd.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"([A-Z])\", function (c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyzly8dzm.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpyzly8dzm.lua:7:\
    \ in function </tmp/tmpyzly8dzm.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpyzly8dzm.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpyzly8dzm.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    i = i + 1\n    if char >= 'a' and char <= 'z' then\n\
    \      result = string.sub(i, j - 1) .. string.sub(j, j)\n      i = i + 1\n  \
    \  end\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps8v4juqo.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmps8v4juqo.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, j, j) ~= \"\" then\n      result = string.sub(i, j, j):upper()\
    \ .. string.sub(i, j + 1, j):lower()\n    end\n    i = i + 1\n    j = j + 1\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750247
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"%l\", string.upper)\n  result:gsub(\"\
    %U\", string.lower)\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb2s4yvoz.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpb2s4yvoz.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = string.len()\n  for i = 1, length do\n\
    \    local char = string.sub(i, i)\n    local upper = string.sub(string, i, i)\n\
    \    local lower = string.sub(string, i, i - 1)\n    if char == upper then\n \
    \     result = string.sub(string, 1, i - 1) .. lower\n    elseif char == lower\
    \ then\n      result = string.sub(string, 1, i) .. upper\n    end\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp68w66lnh.lua:6:\
    \ bad argument #1 to 'len' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp68w66lnh.lua:6: in function 'candidate'\n\t/tmp/tmp68w66lnh.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function(c) return c:lower()\
    \ .. c:upper() end)\n  result:gsub(\"([A-Z])\", function(c) return c:upper() ..\
    \ c:lower() end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4o8wlifu.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp4o8wlifu.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == 'a' then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == 'A' then\n\
    \      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j\
    \ = j - 1\n    elseif c == 'b' then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    elseif c == 'B' then\n      result\
    \ = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n \
    \   elseif c == 'c' then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == 'C' then\n      result = string.sub(i,\
    \ j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == 'd'\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    elseif c == 'D' then\n      result = string.sub(i, j) ..\
    \ string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == 'e' then\n\
    \      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j\
    \ = j - 1\n    elseif c == 'E' then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    elseif c == 'f' then\n      result\
    \ = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n \
    \   elseif c == 'F' then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == 'g' then\n      result = string.sub(i,\
    \ j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == 'G'\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    elseif c == 'h' then\n      result = string.sub(i, j) ..\
    \ string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == 'H' then\n\
    \      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j\
    \ = j - 1\n    elseif c == 'i' \nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpnk97jd_q.lua:74: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if c >= 'a' and c <= 'z' then\n      result\
    \ = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase letters.\n\
    \  for i = 1, #string do\n    local c = string.sub(i, i)\n    if c >= 'A' and\
    \ c <= 'Z' then\n      result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvyqtyc01.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpvyqtyc01.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \    end\n    i = i + 1\n    j = j + 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750247
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local new_string = ''\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if char >= 'a' and char <= 'z' then\n            char = string.sub(string.sub(char,\
    \ 1, 1), 1, 1) + string.sub(string.sub(char, 1, 2), 1, 1) + 'A'\n        elseif\
    \ char >= 'A' and char <= 'Z' then\n            char = string.sub(string.sub(char,\
    \ 1, 1), 1, 1) + string.sub(string.sub(char, 1, 2), 1, 1) + 'a'\n        else\n\
    \            char = char\n        end\n        new_string = new_string .. char\n\
    \    end\n    return new_string\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7x4b9b1l.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"1\"\nstack traceback:\n\t/tmp/tmp7x4b9b1l.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242

name: HumanEval_162_string_to_md5
language: lua
prompt: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If 'text'\
  \ is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n-- '3e25960a79dbc69b674cd4ec67a72c62'\n\
  local function string_to_md5(text)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
  \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
  \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B C'),\
  \ '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
  \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if text == nil then\n    return nil\n  end\n  local md5sum = ngx.md5(text)\n\
    \  return md5sum\nend", "  if text == nil then\n    return nil\n  end\n  local\
    \ md5 = ngx.md5(text)\n  return md5\nend", "    local md5sum\n    local md5sum_hex\n\
    \    local md5sum_base64\n    local md5sum_base64_hex\n    local md5sum_base64_utf8\n\
    \    local md5sum_base64_utf8_hex\n    local md5sum_base64_utf8_unicode\n    local\
    \ md5sum_base64_utf8_unicode_hex\n    local md5sum_base64_utf8_unicode_b64\n \
    \   local md5sum_base64_utf8_unicode_b64_hex\n    local md5sum_base64_utf8_unicode_b64_utf8\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_hex\n    local md5sum_base64_utf8_unicode_b64_utf8_unicode\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_hex\n    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_hex\n    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_hex\n    local\
    \ md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode\n    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_hex\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_hex\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8_hex\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_hex\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_hex\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8\n\
    \    local md5sum_base64_utf8_unicode_b64_utf8_unicode_b64_utf8_unicode_b64_utf8_",
  "  if text == nil then\n    return nil\n  end", "    if text == nil then\n     \
    \   return nil\n    end\n    local md5 = ngx.md5(text)\n    return md5:sub(1,\
    \ md5:len() - 1)\nend", "  local md5 = ngx.md5(text)\n  if md5 ~= nil then\n \
    \   return md5\n  end\nend", "  local md5\n  if text ~= '' then\n    md5 = ngx.md5(text)\n\
    \  else\n    md5 = ''\n  end\n  return md5\nend", "    if text == nil then\n \
    \       return nil\n    end\n    local hash = ngx.md5(text)\n    if hash == ngx.null\
    \ then\n        return nil\n    end\n    return hash\nend", "  if text == nil\
    \ then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return hash\nend",
  "    if text == nil then\n        return nil\n    end", "  if text == nil then\n\
    \    return nil\n  end\n  local md5 = ngx.md5(text)\n  return md5\nend", "  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend", "  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n\
    \  return md5\nend", "  if text == nil then\n    return nil\n  end\n  local md5\
    \ = ngx.md5(text)\n  return md5\nend", "  if text == nil then\n    return nil\n\
    \  end\n  local md5\n  md5 = ngx.md5(text)\n  return md5\nend", "  local md5 =\
    \ ngx.md5(text)\n  if md5 ~= '' then\n    return md5\n  end\nend", "  if text\
    \ == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return hash\n\
    end", "  local md5 = ngx.md5(text)\n  if md5 ~= '' then\n    return md5\n  end\n\
    end", "  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5()\n\
    \  md5:update(text)\n  return md5:final()\nend", "  local md5\n  if text:len()\
    \ > 0 then\n    md5 = ngx.md5(text)\n  end\n  return md5\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

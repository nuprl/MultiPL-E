name: HumanEval_79_decimal_to_binary
language: lua
prompt: "-- You will be given a number in decimal form and your task is to convert\
  \ it to\n-- binary format. The function should return a string, with each character\
  \ representing a binary\n-- number. Each character in the string will be '0' or\
  \ '1'.\n-- There will be an extra couple of characters 'db' at the beginning and\
  \ at the end of the string.\n-- The extra characters are there to help with the\
  \ format.\n-- Examples:\n-- >>> decimal_to_binary(15)\n-- 'db1111db'\n-- >>> decimal_to_binary(32)\n\
  -- 'db100000db'\nlocal function decimal_to_binary(decimal)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = decimal_to_binary\n\
  \    lu.assertEquals(candidate(0), 'db0db')\n    lu.assertEquals(candidate(32),\
  \ 'db100000db')\n    lu.assertEquals(candidate(103), 'db1100111db')\n    lu.assertEquals(candidate(15),\
  \ 'db1111db')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local binary = \"\"\n    local decimal = decimal\n    local decimal_power\
    \ = math.pow(10, decimal)\n    local decimal_mod = decimal\n    local decimal_mod_power\
    \ = math.pow(10, decimal_mod)\n    local decimal_mod_power = decimal_mod_power\
    \ - 1\n    local decimal_mod_power = decimal_mod_power - 1\n    local decimal_mod_power\
    \ = decimal_mod_power - 1\n    local decimal_mod_power = decimal_mod_power - 1\n\
    \    local decimal_mod_power = decimal_mod_power - 1\n    local decimal_mod_power\
    \ = decimal_mod_power - 1\n    local decimal_mod_power = decimal_mod_power - 1\n\
    \    local decimal_mod_power = decimal_mod_power - 1\n    local decimal_mod_power\
    \ = decimal_mod_power - 1\n    local decimal_mod_power = decimal_mod_power - 1\n\
    \    local decimal_mod_power = decimal_mod_power - 1\n    local decimal_mod_power\
    \ = decimal_mod_power - 1\n    local decimal_mod_power = decimal_mod_power - 1\n\
    \    local decimal_mod_power = decimal_mod_power - 1\n    local decimal_mod_power\
    \ = decimal_mod_power - 1\n    local decimal_mod_power = decimal_mod_power - 1\n\
    \    local decimal_mod_power = decimal_mod_power - 1\n    local decimal_mod_power\
    \ = decimal_mod_power - 1\n    local decimal_mod_power = decimal_mod_power - 1\n\
    \    local decimal_mod_power = decimal_mod_power - 1\n    local decimal_mod_power\
    \ = decimal_mod_power - 1\n    local decimal_mod_power = decimal_mod_power - 1\n\
    \    local decimal_mod_power = decimal_mod_power - 1\n    local decimal_mod_power\
    \ = decimal_mod_power - 1\n    local decimal_mod_power = decimal_mod_power - 1\n\
    \    local decimal_mod_power = decimal_mod_power - 1\n    local decimal_mod_power\
    \ = decimal_mod_power - 1\n    local decimal_mod_power = decimal_mod_power - 1\n\
    \    local decimal_mod_power = decimal_mod_power - 1\n    local decimal_mod_power\
    \ = decimal_mod_power - 1\n    local decimal_mod_power = decimal_mod_power - 1\n\
    \    local decimal_mod_power = decimal_mod_power - 1\n    local decimal_mod_power\
    \ = decimal_mod_power - 1\n    local decimal_mod_power = decimal_mod_power - 1\n\
    \    local decimal_mod_power = decimal_mod_power - 1\n    local decimal_mod_power\
    \ = decimal_mod_power - 1\n    local decimal_mod_power = decimal_mod_power - 1\n\
    \    local decimal_mod_power = decimal_mod_power - 1\n    local decimal_mod_power\
    \ = decimal_mod_power - 1\n    local decimal_mod_power = decimal_mod_power - 1\n\
    \    local decimal_mod_power = decimal_mod_power - 1\n    local decimal_mod_power\
    \ = decimal_mod_power - 1\n    local decimal_mod_power = decimal_mod_", "  decimal\
    \ = decimal:byte()\n  local binary = \"\"\n  local i = 0\n  while decimal do\n\
    \    binary = binary .. \"0\" .. math.floor((decimal % 2)) .. \"b\"\n    decimal\
    \ = math.floor(decimal / 2)\n    i = i + 1\n  end\n  if i ~= 0 then\n    binary\
    \ = binary .. \"b\"\n  end\n  return binary\nend", "    decimal = decimal:byte()\n\
    \    local binary = \"\"\n    local i = 0\n    while decimal > 0 do\n        binary\
    \ = binary .. \"1\" .. math.floor(decimal / 2)\n        decimal = decimal % 2\n\
    \        i = i + 1\n    end\n    if i > 0 then\n        binary = binary .. \"\
    0\"\n    end\n    binary = binary .. \"db\"\n    return binary\nend", "    local\
    \ binary = \"\"\n    local decimal = decimal\n    local decimal_power = math.pow(10,\
    \ math.floor(math.log10(decimal)))\n    local decimal_mod = decimal\n    local\
    \ decimal_remainder\n    local decimal_remainder_power = math.pow(10, math.floor(math.log10(decimal_mod)))\n\
    \    local decimal_remainder_mod = decimal_mod\n    while decimal_mod > 0 do\n\
    \        decimal_mod = decimal_mod - decimal_power\n        decimal_remainder\
    \ = decimal_mod % decimal_remainder_power\n        decimal_mod = decimal_mod -\
    \ decimal_remainder\n        binary = binary .. \"0\"\n    end\n    binary = binary\
    \ .. decimal_remainder\n    while decimal_mod > 0 do\n        decimal_mod = decimal_mod\
    \ - decimal_remainder_power\n        binary = binary .. \"1\"\n    end\n    return\
    \ binary\nend", "  -- Your code here\n  -- return 'db' .. string.rep('0', decimal)\
    \ .. 'db'\nend", "    local binary = \"\"\n    local decimal = decimal\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.pow(10, decimal)\n    local decimal = decimal * 2\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.pow(10, decimal)\n    local decimal = decimal * 2\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.pow(10, decimal)\n    local decimal = decimal * 2\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.pow(10, decimal)\n    local decimal = decimal * 2\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.pow(10, decimal)\n    local decimal = decimal * 2\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.pow(10, decimal)\n    local decimal = decimal * 2\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.pow(10, decimal)\n    local decimal = decimal * 2\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.pow(10, decimal)\n    local decimal = decimal * 2\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.pow(10, decimal)\n    local decimal = decimal * 2\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.pow(10, decimal)\n    local decimal = decimal * 2\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.pow(10, decimal)\n    local decimal = decimal * 2\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.pow(10, decimal)\n    local decimal = decimal * 2\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.pow(10, decimal)\n    local decimal = decimal * 2\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.pow(10, decimal)\n    local decimal = decimal * 2\n    local\
    \ decimal = math.floor(decimal)\n    ", "  decimal = tonumber(decimal)\n  local\
    \ binary = \"\"\n  while decimal > 0 do\n    binary = binary .. \"1\" .. math.floor(decimal\
    \ % 2)\n    decimal = math.floor(decimal / 2)\n  end\n  return binary .. \"db\"\
    \nend", "    local binary = \"\"\n    local decimal_power = math.pow(10, decimal)\n\
    \    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n", "  decimal = tonumber(decimal)\n\
    \  local binary = \"\"\n  local decimals = tonumber(math.floor(math.log(decimal,\
    \ 2)))\n  local power = math.pow(10, decimals)\n  local decimal_part = decimal\
    \ - math.floor(decimal)\n  local decimal_part_power = decimal_part * power\n \
    \ local decimal_part_power2 = decimal_part_power / 2\n  local decimal_part_power3\
    \ = decimal_part_power2 / 2\n  local decimal_part_power4 = decimal_part_power3\
    \ / 2\n  local decimal_part_power5 = decimal_part_power4 / 2\n  local decimal_part_power6\
    \ = decimal_part_power5 / 2\n  local decimal_part_power7 = decimal_part_power6\
    \ / 2\n  local decimal_part_power8 = decimal_part_power7 / 2\n  local decimal_part_power9\
    \ = decimal_part_power8 / 2\n  local decimal_part_power10 = decimal_part_power9\
    \ / 2\n  local decimal_part_power11 = decimal_part_power10 / 2\n  local decimal_part_power12\
    \ = decimal_part_power11 / 2\n  local decimal_part_power13 = decimal_part_power12\
    \ / 2\n  local decimal_part_power14 = decimal_part_power13 / 2\n  local decimal_part_power15\
    \ = decimal_part_power14 / 2\n  local decimal_part_power16 = decimal_part_power15\
    \ / 2\n  local decimal_part_power17 = decimal_part_power16 / 2\n  local decimal_part_power18\
    \ = decimal_part_power17 / 2\n  local decimal_part_power19 = decimal_part_power18\
    \ / 2\n  local decimal_part_power20 = decimal_part_power19 / 2\n  local decimal_part_power21\
    \ = decimal_part_power20 / 2\n  local decimal_part_power22 = decimal_part_power21\
    \ / 2\n  local decimal_part_power23 = decimal_part_power22 / 2\n  local decimal_part_power24\
    \ = decimal_part_power23 / 2\n  local decimal_part_power25 = decimal_part_power24\
    \ / 2\n  local decimal_part_power26 = decimal_part_power25 / 2\n  local decimal_part_power27\
    \ = decimal_part_power26 / 2\n  local decimal_part_power28 = decimal_part_power27\
    \ / 2\n  local decimal_part_power29 = decimal_part_power28 / 2\n  local decimal_part_power30\
    \ = decimal_part_power29 / 2\n  local decimal_part_power31 = decimal_part_power30\
    \ / 2\n  local decimal_part_power32 = decimal_part_power31 / 2\n  local decimal_part_power33\
    \ = decimal_part_power32 / 2\n  local decimal_part_power34 = decimal_part_power33\
    \ / 2\n  local ", "    decimal = decimal:byte()\n    local binary = \"\"\n   \
    \ local i = 0\n    while decimal > 0 do\n        binary = binary .. \"1\" .. math.floor(decimal\
    \ / 2)\n        decimal = decimal % 2\n        i = i + 1\n        if i > 8 then\n\
    \            i = i - 8\n            binary = binary .. \"db\"\n        end\n \
    \   end\n    return binary\nend", "    local binary = \"\"\n    local decimal\
    \ = decimal\n    local decimal = math.floor(decimal)\n    local decimal = decimal\
    \ - decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    ", "    local binary = \"\"\
    \n    local decimal = decimal\n    while decimal > 0 do\n        binary = binary\
    \ .. \"1\"\n        decimal = decimal - 1\n    end\n    return binary .. \"db\"\
    \nend", "  local binary = \"\"\n  local decimals = math.floor(decimal)\n  local\
    \ remainder = decimal - decimals\n  while decimals > 0 do\n    binary = binary\
    \ .. \"0\"\n    decimals = decimals - 1\n  end\n  while decimals > 0 do\n    binary\
    \ = binary .. \"1\"\n    decimals = decimals - 1\n  end\n  if remainder > 0 then\n\
    \    binary = binary .. \"1\"\n  end\n  return binary .. \"db\"\nend", "    local\
    \ binary = \"\"\n    local decimal = decimal\n    local decimal_power = math.pow(10,\
    \ decimal)\n    local decimal_mod = decimal\n    while decimal_mod > 0 do\n  \
    \      binary = binary .. \"1\"\n        decimal_mod = decimal_mod - 1\n    end\n\
    \    binary = binary .. \"0\"\n    binary = binary .. \"db\"\n    while decimal_power\
    \ > 0 do\n        decimal = decimal_power - 1\n        decimal_power = decimal_power\
    \ / 2\n        binary = binary .. \"0\"\n        binary = binary .. \"db\"\n \
    \   end\n    return binary\nend", "    local binary = \"\"\n    local decimal\
    \ = decimal\n    local remainder", "    decimal = tonumber(decimal)\n    local\
    \ binary = \"\"\n    local remainder\n    local decimal_power = math.pow(10, math.floor(math.log10(decimal)))\n\
    \    for i = 1, math.floor(decimal) do\n        remainder = decimal % decimal_power\n\
    \        binary = binary .. \"1\" .. math.floor(remainder)\n        decimal =\
    \ decimal - remainder\n    end\n    if decimal > 0 then\n        binary = binary\
    \ .. \"1\"\n    end\n    return binary .. \"db\"\nend", "    local decimal = tonumber(decimal)\n\
    \    local binary = \"\"\n    local remainder\n    local i\n    for i = 1, decimal\
    \ do\n        remainder = decimal % 2\n        decimal = decimal / 2\n       \
    \ binary = binary .. \"1\" .. remainder\n    end\n    if decimal > 0 then\n  \
    \      binary = binary .. \"0\"\n    end\n    return binary .. \"db\"\nend", " \
    \   local binary = \"\"\n    local decimal = decimal\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - decimal\n    while decimal > 0 do\n        binary\
    \ = binary .. \"1\"\n        decimal = decimal - 1\n    end\n    binary = binary\
    \ .. \"0\"\n    return binary\nend", "  decimal = tonumber(decimal)\n  if decimal\
    \ < 0 then\n    return \"Invalid decimal number\"\n  end\n  local binary = \"\"\
    \n  while decimal > 0 do\n    binary = binary .. \"1\"\n    decimal = decimal\
    \ - 1\n  end\n  binary = binary .. \"0\"\n  return \"db\" .. binary .. \"db\"\n\
    end", "    decimal = decimal:byte()\n    local binary = \"\"\n    local i = 0\n\
    \    while decimal ~= 0 do\n        binary = binary .. \"0\"\n        decimal\
    \ = decimal - decimal:byte()\n        i = i + 1\n    end\n    binary = binary\
    \ .. \"1\"\n    binary = binary .. \"db\"\n    for i = 1, i do\n        binary\
    \ = binary .. \"0\"\n    end\n    return binary\nend", "    local binary = \"\"\
    \n    local decimal = math.floor(decimal)\n    while decimal > 0 do\n        binary\
    \ = binary .. \"1\" .. math.floor((decimal % 2)) .. \"0\"\n        decimal = math.floor(decimal\
    \ / 2)\n    end\n    binary = binary .. \"1\"\n    return binary\nend", "    decimal\
    \ = decimal:byte()\n    local binary = \"\"\n    local i = 0\n    while decimal\
    \ ~= 0 do\n        binary = binary .. \"0b\"\n        decimal = decimal - decimal:byte()\n\
    \        i = i + 1\n    end\n    binary = binary .. \"db\"\n    for i = 1, i do\n\
    \        binary = binary .. \"0\"\n    end\n    return binary\nend", "  local\
    \ binary = \"\"\n  local decimal_part = decimal\n  while decimal_part > 0 do\n\
    \    binary = decimal_part % 2\n    decimal_part = math.floor(decimal_part / 2)\n\
    \  end\n  return binary .. \"db\" .. decimal_part\nend", "    local binary = \"\
    \"\n    local decimal = decimal\n    local decimal = decimal\n    while decimal\
    \ > 0 do\n        local remainder = decimal % 2\n        decimal = decimal / 2\n\
    \        binary = binary .. \"0\"\n        if remainder == 1 then\n          \
    \  binary = binary .. \"1\"\n        end\n    end\n    binary = binary .. \"db\"\
    \n    return binary\nend", "    decimal = decimal or 0\n    local binary = \"\"\
    \n    local remainder\n    local decimal_str = \"\"\n    local decimal_str_length\
    \ = math.floor(math.log(decimal, 2))\n    local decimal_str_length = decimal_str_length\
    \ + 2 -- extra characters to help with format\n    for i = 1, decimal_str_length\
    \ do\n        remainder = decimal % 2\n        decimal = decimal / 2\n       \
    \ binary = binary .. \"0\"\n        if remainder == 1 then\n            binary\
    \ = binary .. \"1\"\n        end\n    end\n    binary = binary .. \"db\"\n   \
    \ return binary\nend", "    local binary = \"\"\n    local decimal = math.floor(decimal)\n\
    \    local remainder = decimal\n    while remainder ~= 0 do\n        binary =\
    \ binary .. \"1\" .. math.floor(remainder / 2)\n        remainder = remainder\
    \ % 2\n    end\n    binary = binary .. \"db\"\n    return binary\nend", "    decimal\
    \ = decimal:byte()\n    local binary = \"\"\n    local i = 0\n    while decimal\
    \ > 0 do\n        binary = binary .. \"0\"\n        decimal = decimal - 1\n  \
    \      i = i + 1\n    end\n    binary = binary .. \"1\"\n    binary = binary ..\
    \ \"db\"\n    for i = 1, i do\n        binary = binary .. \"0\"\n    end\n   \
    \ return binary\nend", "    local binary = \"\"\n    local decimal = decimal\n\
    \    local decimal_power = math.pow(10, math.floor(math.log10(decimal)))\n   \
    \ while decimal > 0 do\n        decimal = decimal - decimal_power\n        binary\
    \ = binary .. \"0\"\n    end\n    decimal = decimal\n    decimal_power = math.pow(10,\
    \ math.floor(math.log10(decimal)))\n    while decimal > 0 do\n        decimal\
    \ = decimal - decimal_power\n        binary = binary .. \"1\"\n    end\n    binary\
    \ = binary .. \"db\"\n    return binary\nend", "    decimal = tonumber(decimal)\n\
    \    if decimal < 0 then\n        decimal = -decimal\n        decimal = -decimal\n\
    \    end\n    local binary = \"\"\n    local i = 0\n    while decimal > 0 do\n\
    \        binary = binary .. \"0\"\n        decimal = decimal - 1\n        i =\
    \ i + 1\n    end\n    binary = binary .. \"1\"\n    for j = 1, i do\n        binary\
    \ = binary .. \"0\"\n    end\n    binary = binary .. \"b\"\n    return binary\n\
    end", "    local binary = \"\"\n    local decimal = decimal\n    while decimal\
    \ > 0 do\n        binary = binary .. \"1\"\n        decimal = decimal - 1\n  \
    \  end\n    binary = binary .. \"0\"\n    return binary\nend", "  decimal = tonumber(decimal)\n\
    \  local binary = \"\"\n  local remainder = decimal\n  while remainder ~= 0 do\n\
    \    binary = binary .. \"0\" if remainder < 10 then \"0\" .. tostring(remainder)\
    \ else\n      tostring(remainder) end\n    remainder = remainder - 10\n  end\n\
    \  return \"db\" .. binary .. \"db\"\nend", "    local binary = \"\"\n    local\
    \ decimal = decimal\n    local decimal = decimal or 0\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal % 2\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal % 2\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal % 2\n    local decimal = decimal - decimal\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal % 2\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal % 2\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal % 2\n    local decimal = decimal - decimal\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal % 2\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal % 2\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal % 2\n    local decimal = decimal - decimal\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal % 2\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal % 2\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal % 2\n    local decimal = decimal - decimal\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal % 2\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal % 2\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal % 2\n    local decimal = decimal - decimal\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal % 2\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal % 2\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal % 2\n    local decimal = decimal - decimal\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal % 2\n    local decimal = decimal - decimal\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal % 2\n", "    local\
    \ binary = \"\"\n    local decimal = decimal\n    local decimal_power = math.pow(10,\
    \ decimal)\n    local decimal_mod = decimal\n    local decimal_remainder\n   \
    \ local decimal_remainder_power = math.pow(10, decimal)\n    local decimal_remainder_mod\n\
    \    local decimal_remainder_power\n    local decimal_remainder_mod\n    local\
    \ decimal_remainder_power\n    local decimal_remainder_mod\n    local decimal_remainder_power\n\
    \    local decimal_remainder_mod\n    local decimal_remainder_power\n    local\
    \ decimal_remainder_mod\n    local decimal_remainder_power\n    local decimal_remainder_mod\n\
    \    local decimal_remainder_power\n    local decimal_remainder_mod\n    local\
    \ decimal_remainder_power\n    local decimal_remainder_mod\n    local decimal_remainder_power\n\
    \    local decimal_remainder_mod\n    local decimal_remainder_power\n    local\
    \ decimal_remainder_mod\n    local decimal_remainder_power\n    local decimal_remainder_mod\n\
    \    local decimal_remainder_power\n    local decimal_remainder_mod\n    local\
    \ decimal_remainder_power\n    local decimal_remainder_mod\n    local decimal_remainder_power\n\
    \    local decimal_remainder_mod\n    local decimal_remainder_power\n    local\
    \ decimal_remainder_mod\n    local decimal_remainder_power\n    local decimal_remainder_mod\n\
    \    local decimal_remainder_power\n    local decimal_remainder_mod\n    local\
    \ decimal_remainder_power\n    local decimal_remainder_mod\n    local decimal_remainder_power\n\
    \    local decimal_remainder_mod\n    local decimal_remainder_power\n    local\
    \ decimal_remainder_mod\n    local decimal_remainder_power\n    local decimal_remainder_mod\n\
    \    local decimal_remainder_power\n    local decimal_remainder_mod\n    local\
    \ decimal_remainder_power\n    local decimal_remainder_mod\n    local decimal_remainder_power\n\
    \    local decimal_remainder_mod\n    local decimal_remainder_power\n    local\
    \ decimal_remainder_mod\n    local decimal_remainder_power\n    local decimal_remainder_mod\n\
    \    local decimal_remainder_power\n    local decimal_remainder_mod\n    local\
    \ decimal_remainder_power\n    local decimal_remainder_mod\n    local decimal_remainder_power\n\
    \    local decimal_remainder_mod\n    local decimal_remainder_power\n    local\
    \ decimal_remainder_mod\n    local decimal_remainder_power\n    local decimal_remainder_mod\n\
    \    local decimal_remainder_power\n    local decimal_remainder_mod\n    local\
    \ decimal_remainder_power\n    local decimal_remainder_mod\n    local decimal_remainder_power\n\
    \    local ", "    local binary = \"\"\n    local decimal_power = math.pow(10,\
    \ decimal)\n    local decimal_mod = decimal % 2\n    local decimal_remainder =\
    \ decimal % 2\n    local binary_remainder\n    local binary_power\n    local binary_mod\n\
    \    local binary_digit\n    local binary_digit2\n    local binary_digit3\n  \
    \  local binary_digit4\n    local binary_digit5\n    local binary_digit6\n   \
    \ local binary_digit7\n    local binary_digit8\n    local binary_digit9\n    local\
    \ binary_digit10\n    local binary_digit11\n    local binary_digit12\n    local\
    \ binary_digit13\n    local binary_digit14\n    local binary_digit15\n    local\
    \ binary_digit16\n    local binary_digit17\n    local binary_digit18\n    local\
    \ binary_digit19\n    local binary_digit20\n    local binary_digit21\n    local\
    \ binary_digit22\n    local binary_digit23\n    local binary_digit24\n    local\
    \ binary_digit25\n    local binary_digit26\n    local binary_digit27\n    local\
    \ binary_digit28\n    local binary_digit29\n    local binary_digit30\n    local\
    \ binary_digit31\n    local binary_digit32\n    local binary_digit33\n    local\
    \ binary_digit34\n    local binary_digit35\n    local binary_digit36\n    local\
    \ binary_digit37\n    local binary_digit38\n    local binary_digit39\n    local\
    \ binary_digit40\n    local binary_digit41\n    local binary_digit42\n    local\
    \ binary_digit43\n    local binary_digit44\n    local binary_digit45\n    local\
    \ binary_digit46\n    local binary_digit47\n    local binary_digit48\n    local\
    \ binary_digit49\n    local binary_digit50\n    local binary_digit51\n    local\
    \ binary_digit52\n    local binary_digit53\n    local binary_digit54\n    local\
    \ binary_digit55\n    local binary_digit56\n    local binary_digit57\n    local\
    \ binary_digit58\n    local binary_digit59\n    local binary_digit60\n    local\
    \ binary_digit61\n    local binary_digit62\n    local binary_digit63\n    local\
    \ binary_digit64\n    local binary_digit65\n    local binary_digit66\n    local\
    \ binary_digit67\n    local binary_digit68\n    local binary_digit69\n    local\
    \ binary_digit70\n    local binary_digit71\n    local binary_digit72\n    local\
    \ binary_digit73\n    local binary_digit74\n    local binary_digit75\n    local\
    \ binary_digit76\n    local binary_digit77\n    ", "    decimal = tonumber(decimal)\n\
    \    local binary = \"\"\n    local i = 0\n    while decimal > 0 do\n        binary\
    \ = binary .. \"1\" .. math.floor((decimal % 2)) .. \"0\"\n        decimal = math.floor(decimal\
    \ / 2)\n        i = i + 1\n    end\n    binary = binary .. \"db\"\n    if i ~=\
    \ 0 then\n        binary = binary .. \"0\"\n    end\n    return binary\nend",
  "    local binary = \"\"\n    local decimal_power = math.pow(10, decimal)\n    for\
    \ i = 1, decimal do\n        binary = binary .. \"1\"\n    end\n    binary = binary\
    \ .. \"0\"\n    for i = decimal + 2, decimal_power do\n        binary = binary\
    \ .. \"0\"\n    end\n    return binary .. \"db\"\nend", "    local binary = \"\
    \"\n    local decimal_str = tostring(decimal)\n    local decimal_len = #decimal_str\n\
    \    local decimal_remainder\n    local decimal_remainder_str\n    local decimal_remainder_len\n\
    \    local decimal_remainder_remainder\n    local decimal_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_len\n    local decimal_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_str\n    local decimal_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder\n    local decimal_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_len\n    local decimal_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_str\n   \
    \ local decimal_remainder_remainder_remainder_remainder_remainder_len\n    local\
    \ decimal_remainder_remainder_remainder_remainder_remainder_remainder\n    local\
    \ decimal_remainder_remainder_remainder_remainder_remainder_remainder_str\n  \
    \  local decimal_remainder_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_",
  "  local binary = \"\"\n  local decimals = math.floor(math.log10(decimal))\n  local\
    \ power = 10\n  local decimal_part = decimal\n  local decimal_part_power = 1\n\
    \  while decimal_part_power < decimals do\n    decimal_part = decimal_part * power\n\
    \    power = power + 1\n    decimal_part_power = decimal_part_power + 1\n  end\n\
    \  local decimal_part_power = decimal_part_power - 1\n  while decimal_part_power\
    \ >= 0 do\n    decimal = decimal - decimal_part * power\n    power = power - 1\n\
    \    decimal_part_power = decimal_part_power - 1\n    binary = binary .. \"0\"\
    \n  end\n  binary = binary .. decimal_part\n  return binary\nend", "    local\
    \ binary = \"\"\n    local decimal = decimal\n    while decimal > 0 do\n     \
    \   binary = binary .. \"0\"\n        decimal = decimal - 1\n    end\n    while\
    \ decimal > 0 do\n        binary = binary .. \"1\"\n        decimal = decimal\
    \ - 1\n    end\n    return binary .. \"db\"\nend", "    local decimal_str = decimal:tostring()\n\
    \    local binary_str = ''\n    local binary_str_index = 1\n    local decimal_str_index\
    \ = 1\n    while decimal_str_index <= #decimal_str do\n        local decimal_char\
    \ = decimal_str:sub(decimal_str_index, decimal_str_index):byte()\n        local\
    \ binary_char = decimal_char\n        if decimal_char == 0 then\n            binary_char\
    \ = '1'\n        else\n            binary_char = '0'\n        end\n        binary_str\
    \ = binary_str .. binary_char\n        decimal_str_index = decimal_str_index +\
    \ 1\n    end\n    binary_str = binary_str .. 'db'\n    return binary_str\nend",
  "    decimal = decimal or 0\n    local binary = \"\"\n    local remainder = decimal\n\
    \    while remainder ~= 0 do\n        binary = binary .. \"0\" if remainder <\
    \ 10 then \"0\" .. remainder else \"1\" .. remainder end\n        remainder =\
    \ remainder - 10\n    end\n    binary = \"db\" .. binary .. \"db\"\n    return\
    \ binary\nend", "    decimal = tonumber(decimal)\n    local binary = \"\"\n  \
    \  local i = 0\n    while decimal > 0 do\n        binary = binary .. \"1\" ..\
    \ math.floor(decimal % 2)\n        decimal = math.floor(decimal / 2)\n       \
    \ i = i + 1\n    end\n    binary = binary .. \"db\" .. i .. \"db\"\n    return\
    \ binary\nend", "    local binary = \"\"\n    local decimal = decimal\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal - math.floor(decimal)\n\
    \    local decimal = math.pow(10, decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.pow(10,\
    \ decimal)\n    local decimal = math.floor(decimal)\n    local decimal = decimal\
    \ - math.floor(decimal)\n    local decimal = math.pow(10, decimal)\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal - math.floor(decimal)\n\
    \    local decimal = math.pow(10, decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.pow(10,\
    \ decimal)\n    local decimal = math.floor(decimal)\n    local decimal = decimal\
    \ - math.floor(decimal)\n    local decimal = math.pow(10, decimal)\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal - math.floor(decimal)\n\
    \    local decimal = math.pow(10, decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.pow(10,\
    \ decimal)\n    local decimal = math.floor(decimal)\n    local decimal = decimal\
    \ - math.floor(decimal)\n    local decimal = math.pow(10, decimal)\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal - math.floor(decimal)\n\
    \    local decimal = math.pow(10, decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.pow(10,\
    \ decimal)\n    local decimal = math.floor(decimal)\n    local decimal = decimal\
    \ - math.floor(decimal)\n    local decimal = math.pow(10, decimal)\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal - math.floor(decimal)\n\
    \    local decimal = math.pow(10, decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.pow(10,\
    \ decimal)\n    local decimal = math.floor(decimal)\n    local decimal = decimal\
    \ - math.floor(decimal)\n    local decimal = math.pow(10, decimal)\n    local\
    \ decimal = math.floor(decimal)\n    local decimal = decimal - math.floor(decimal)\n\
    \    local decimal = math.pow(10, decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n", "    decimal = tonumber(decimal)\n\
    \    if decimal < 0 then\n        decimal = -decimal\n    end\n    local binary\
    \ = \"\"\n    local remainder = decimal\n    while remainder ~= 0 do\n       \
    \ binary = binary .. \"0\"\n        remainder = remainder - 1\n    end\n    binary\
    \ = binary .. \"1\"\n    return binary\nend", "  decimal = tonumber(decimal)\n\
    \  local binary = \"\"\n  local remainder\n  while decimal > 0 do\n    remainder\
    \ = decimal % 2\n    decimal = math.floor(decimal / 2)\n    binary = string.format('%s%d%s',\
    \ binary, remainder, binary == '' and \"\" or \"b\")\n  end\n  return binary ==\
    \ \"b\" and binary or string.format('%sdb', binary)\nend", "    local binary =\
    \ \"\"\n    local decimal = decimal\n    local decimal_power = math.pow(10, math.floor(math.log10(decimal)))\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_pow", "  -- Write your code here\n  local binary = \"\"\n \
    \ local decimal = decimal\n  while decimal > 0 do\n    binary = binary .. \"0\"\
    \n    decimal = decimal - 1\n  end\n  binary = binary .. \"1\"\n  return binary\n\
    end", "    decimal = decimal\n    local binary = \"\"\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal",
  "  local binary = \"\"\n  local decimal_part = decimal\n  while decimal_part > 0\
    \ do\n    binary = decimal_part % 2 and \"1\" or \"0\"\n    decimal_part = math.floor(decimal_part\
    \ / 2)\n  end\n  return binary .. \"db\" .. decimal_part\nend", "    local binary\
    \ = \"\"\n    local decimal_power = math.pow(10, decimal)\n    for i = 1, decimal\
    \ do\n        binary = binary .. \"1\"\n    end\n    for i = decimal, 2, -1 do\n\
    \        binary = binary .. \"0\"\n    end\n    return binary .. \"db\"\nend",
  "    decimal = tonumber(decimal)\n    local binary = \"\"\n    local i = 0\n   \
    \ while decimal > 0 do\n        binary = binary .. \"1\" .. math.floor(decimal\
    \ % 2)\n        decimal = math.floor(decimal / 2)\n        i = i + 1\n    end\n\
    \    binary = binary .. \"db\"\n    for i = 1, i do\n        binary = binary ..\
    \ \"0\"\n    end\n    return binary\nend", "  local binary = \"\"\n  local decimal\
    \ = decimal\n  while decimal > 0 do\n    binary = binary .. \"0\"\n    decimal\
    \ = decimal - 1\n  end\n  binary = binary .. \"1\"\n  return binary\nend", " \
    \   decimal = decimal:byte()\n    local binary = \"\"\n    while decimal do\n\
    \        binary = binary .. \"0\" if decimal % 2 == 0 else \"1\"\n        decimal\
    \ = decimal / 2\n    end\n    binary = binary .. \"db\"\n    return binary\nend",
  "  decimal = decimal:byte()\n  local binary = \"\"\n  local i = 0\n  while decimal\
    \ > 0 do\n    binary = binary .. \"0\" .. tostring(decimal % 2)\n    decimal =\
    \ decimal >> 1\n    i = i + 1\n  end\n  if i ~= 0 then\n    binary = binary ..\
    \ \"0\"\n  end\n  return binary .. \"db\"\nend", "  decimal = tonumber(decimal)\n\
    \  if decimal < 0 then\n    return \"0\"\n  end\n  local binary = \"\"\n  local\
    \ remainder\n  while decimal > 0 do\n    remainder = decimal % 2\n    decimal\
    \ = decimal / 2\n    binary = binary .. \"1\" .. tostring(remainder)\n  end\n\
    \  if binary == \"0\" then\n    return \"0\"\n  end\n  if binary == \"1\" then\n\
    \    return \"1\"\n  end\n  return \"db\" .. binary .. \"db\"\nend", "  local\
    \ binary = \"\"\n  local decimal = decimal\n  while decimal > 0 do\n    binary\
    \ = binary .. \"1\"\n    decimal = decimal - 1\n  end\n  return binary .. \"db\"\
    \nend", "  decimal = tonumber(decimal)\n  local binary = \"\"\n  local i = 0\n\
    \  while decimal ~= 0 do\n    binary = binary .. \"0\"\n    decimal = decimal\
    \ - 1\n  end\n  binary = binary .. \"1\"\n  binary = binary .. \"db\"\n  return\
    \ binary\nend", "  local binary = \"\"\n  local decimal = decimal\n  local decimal_power\
    \ = math.pow(10, math.floor(math.log10(decimal)))\n  local decimal_remainder =\
    \ decimal % decimal_power\n  local decimal_remainder_power = math.pow(10, math.floor(math.log10(decimal_remainder)))\n\
    \  local decimal_remainder_remainder = decimal_remainder % decimal_remainder_power\n\
    \  local decimal_remainder_remainder_power = math.pow(10, math.floor(math.log10(decimal_remainder_remainder)))\n\
    \  local decimal_remainder_remainder_remainder = decimal_remainder_remainder %\
    \ decimal_remainder_remainder_power\n  local decimal_remainder_remainder_remainder_power\
    \ = math.pow(10, math.floor(math.log10(decimal_remainder_remainder_remainder)))\n\
    \  local decimal_remainder_remainder_remainder_remainder = decimal_remainder_remainder_remainder\
    \ % decimal_remainder_remainder_remainder_power\n  local decimal_remainder_remainder_remainder_remainder_power\
    \ = math.pow(10, math.floor(math.log10(decimal_remainder_remainder_remainder_remainder)))\n\
    \  local decimal_remainder_remainder_remainder_remainder_remainder = decimal_remainder_remainder_remainder_remainder\
    \ % decimal_remainder_remainder_remainder_remainder_power\n  local decimal_remainder_remainder_remainder_remainder_remainder_power\
    \ = math.pow(10, math.floor(math.log10(decimal_remainder_remainder_remainder_remainder_remainder)))\n\
    \  local decimal_remainder_remainder_remainder_remainder_remainder_power = math.pow(10,\
    \ math.floor(math.log10(decimal_remainder_remainder_remainder_remainder_remainder_remainder)))\n\
    \  local decimal_remainder_remainder_remainder_remainder_remainder_power = math.pow(10,\
    \ math.floor(math.log10(decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder)))\n\
    \  local decimal_remainder_remainder_remainder_remainder_remainder_remainder_power\
    \ = math.pow(10, math.floor(math.log10(decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder)))\n\
    \  local decimal_remainder_remainder_remainder_remainder_remainder_remainder_power\
    \ = math.pow(10, math.floor(math.log10(decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder)))\n\
    \  local decimal_remainder_remainder_remainder_remainder_remainder_remainder_power\
    \ = math.pow(10, math.floor(math.log10(decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder)))\n\
    \  local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_power\
    \ = math.pow(10, math.floor(", "  local binary = \"\"\n  local decimal = decimal\n\
    \  while decimal > 0 do\n    decimal = decimal - 2\n    binary = binary .. \"\
    0\"\n  end\n  while decimal > 0 do\n    decimal = decimal - 2\n    binary = binary\
    \ .. \"1\"\n  end\n  return binary .. \"db\"\nend", "  decimal = decimal:byte()\n\
    \  local binary = \"\"\n  local remainder\n  while decimal ~= 0 do\n    remainder\
    \ = decimal % 2\n    decimal = decimal / 2\n    binary = string.format(\"%s%c\"\
    , binary, remainder)\n  end\n  return \"db\" .. binary .. \"db\"\nend", "    decimal\
    \ = decimal:byte()\n    local binary = \"\"\n    local i = 0\n    while decimal\
    \ > 0 do\n        binary = binary .. \"0\"\n        decimal = decimal - 1\n  \
    \      i = i + 1\n    end\n    binary = binary .. \"1\"\n    binary = binary ..\
    \ \"db\"\n    for j = 1, i do\n        binary = binary .. \"0\"\n    end\n   \
    \ return binary\nend", "  -- Your code here\n  local binary = \"\"\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local decimal\
    \ = decimal\n  local decimal = decimal\n  local ", "    decimal = tonumber(decimal)\n\
    \    if decimal < 0 then\n        decimal = -decimal\n        decimal = -decimal\n\
    \    end\n    local binary = \"\"\n    local decimals = math.floor(decimal)\n\
    \    local remainder = decimal - decimals\n    local remainder_power = math.floor(math.log(remainder,\
    \ 2))\n    local remainder_power = remainder_power + 1\n    local remainder_power\
    \ = remainder_power - 1\n    local remainder_power = remainder_power - 1\n   \
    \ local remainder_power = remainder_power - 1\n    local remainder_power = remainder_power\
    \ - 1\n    local remainder_power = remainder_power - 1\n    local remainder_power\
    \ = remainder_power - 1\n    local remainder_power = remainder_power - 1\n   \
    \ local remainder_power = remainder_power - 1\n    local remainder_power = remainder_power\
    \ - 1\n    local remainder_power = remainder_power - 1\n    local remainder_power\
    \ = remainder_power - 1\n    local remainder_power = remainder_power - 1\n   \
    \ local remainder_power = remainder_power - 1\n    local remainder_power = remainder_power\
    \ - 1\n    local remainder_power = remainder_power - 1\n    local remainder_power\
    \ = remainder_power - 1\n    local remainder_power = remainder_power - 1\n   \
    \ local remainder_power = remainder_power - 1\n    local remainder_power = remainder_power\
    \ - 1\n    local remainder_power = remainder_power - 1\n    local remainder_power\
    \ = remainder_power - 1\n    local remainder_power = remainder_power - 1\n   \
    \ local remainder_power = remainder_power - 1\n    local remainder_power = remainder_power\
    \ - 1\n    local remainder_power = remainder_power - 1\n    local remainder_power\
    \ = remainder_power - 1\n    local remainder_power = remainder_power - 1\n   \
    \ local remainder_power = remainder_power - 1\n    local remainder_power = remainder_power\
    \ - 1\n    local remainder_power = remainder_power - 1\n    local remainder_power\
    \ = remainder_power - 1\n    local remainder_power = remainder_power - 1\n   \
    \ local remainder_power = remainder_power - 1\n    local remainder_power = remainder_power\
    \ - 1\n    local remainder_power = remainder_power - 1\n    local remainder_power\
    \ = remainder_power - 1\n    local remainder_power = remainder_power - 1\n   \
    \ local remainder_power = remainder_power - 1\n    local remainder_power = remainder_power\
    \ - 1\n    local remainder_pow", "    local binary = \"\"\n    local decimal =\
    \ decimal\n    local decimal_power = math.pow(10, decimal)\n    local decimal_mod\
    \ = decimal\n    local decimal_power = decimal_power\n    local decimal_mod =\
    \ decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_mod\
    \ = decimal_power\n    local decimal_", "  decimal = decimal or 0\n  local binary\
    \ = \"\"\n  local i = 0\n  while decimal > 0 do\n    local remainder = decimal\
    \ % 2\n    decimal = decimal / 2\n    binary = binary .. \"0\"\n    if remainder\
    \ == 1 then\n      binary = binary .. \"1\"\n    end\n    i = i + 1\n    if i\
    \ == 8 then\n      binary = binary .. \"db\"\n      i = 0\n    end\n  end\n  return\
    \ binary\nend", "    decimal = decimal:byte()\n    local binary = \"\"\n    while\
    \ decimal ~= 0 do\n        binary = binary .. \"0b\"\n        decimal = decimal\
    \ - decimal:bit()\n    end\n    binary = binary .. \"db\"\n    return binary\n\
    end", "  decimal = tonumber(decimal)\n  local binary = \"\"\n  while decimal >\
    \ 0 do\n    binary = binary .. \"1\" .. math.floor(decimal % 2)\n    decimal =\
    \ math.floor(decimal / 2)\n  end\n  return binary .. \"db\"\nend", "  local binary\
    \ = \"\"\n  local decimals = math.floor(math.log10(decimal))\n  local remainder\
    \ = decimal % 2\n  local remainders = math.floor(decimals / 2)\n  local remainders_string\
    \ = string.format(\"%0d\", remainders)\n  local remainders_string = string.format(\"\
    %0d\", remainders)\n  local remainders_string = string.format(\"%0d\", remainders)\n\
    \  local remainders_string = string.format(\"%0d\", remainders)\n  local remainders_string\
    \ = string.format(\"%0d\", remainders)\n  local remainders_string = string.format(\"\
    %0d\", remainders)\n  local remainders_string = string.format(\"%0d\", remainders)\n\
    \  local remainders_string = string.format(\"%0d\", remainders)\n  local remainders_string\
    \ = string.format(\"%0d\", remainders)\n  local remainders_string = string.format(\"\
    %0d\", remainders)\n  local remainders_string = string.format(\"%0d\", remainders)\n\
    \  local remainders_string = string.format(\"%0d\", remainders)\n  local remainders_string\
    \ = string.format(\"%0d\", remainders)\n  local remainders_string = string.format(\"\
    %0d\", remainders)\n  local remainders_string = string.format(\"%0d\", remainders)\n\
    \  local remainders_string = string.format(\"%0d\", remainders)\n  local remainders_string\
    \ = string.format(\"%0d\", remainders)\n  local remainders_string = string.format(\"\
    %0d\", remainders)\n  local remainders_string = string.format(\"%0d\", remainders)\n\
    \  local remainders_string = string.format(\"%0d\", remainders)\n  local remainders_string\
    \ = string.format(\"%0d\", remainders)\n  local remainders_string = string.format(\"\
    %0d\", remainders)\n  local remainders_string = string.format(\"%0d\", remainders)\n\
    \  local remainders_string = string.format(\"%0d\", remainders)\n  local remainders_string\
    \ = string.format(\"%0d\", remainders)\n  local remainders_string = string.format(\"\
    %0d\", remainders)\n  local remainders_string = string.format(\"%0d\", remainders)\n\
    \  local remainders_string = string.format(\"%0d\", remainders)\n  local remainders_string\
    \ = string.format(\"%0d\", remainders)\n  local remainders_string = string.format(\"\
    %0d\", remainders)\n  local remainders_string = string.format(\"%0d\", remainders)\n\
    \  local remainders_string = string.format(\"%0", "  local binary = \"\"\n  local\
    \ decimal = decimal\n  while decimal > 0 do\n    binary = binary .. \"1\"\n  \
    \  decimal = decimal - 1\n  end\n  binary = binary .. \"0\"\n  return binary\n\
    end", "    local binary = \"\"\n    local decimal = decimal\n    local decimal\
    \ = math.floor(decimal)\n    local decimal = decimal - decimal%2\n    local decimal\
    \ = decimal*2\n    local decimal = decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal+decimal%2\n\
    \    local decimal = decimal+decimal%2\n    local decimal = decimal", "  decimal\
    \ = decimal:byte()\n  local binary = \"\"\n  local i = 0\n  while decimal ~= 0\
    \ do\n    binary = binary .. \"1\" .. math.floor((decimal % 2)) .. \"0\"\n   \
    \ decimal = math.floor(decimal / 2)\n    i = i + 1\n    if i > 8 then\n      binary\
    \ = binary .. \"db\"\n      i = 0\n    end\n  end\n  return binary\nend", "  \
    \  local binary = \"\"\n    local decimal = decimal\n    local decimal_power =\
    \ math.pow(10, decimal)\n    local decimal_mod = decimal\n    while decimal_mod\
    \ > 0 do\n        binary = binary .. \"1\"\n        decimal_mod = decimal_mod\
    \ - 1\n    end\n    binary = binary .. \"0\"\n    binary = binary .. \"db\"\n\
    \    while decimal_power > 0 do\n        binary = binary .. \"0\"\n        decimal_power\
    \ = decimal_power - 1\n    end\n    return binary\nend", "    local binary = \"\
    \"\n    local decimal = math.floor(decimal)\n    local remainder = decimal\n \
    \   local decimal_places = math.floor(math.log(decimal, 2))\n    local binary_places\
    \ = math.floor(math.log(decimal, 2))\n    local decimal_places_power = decimal_places\
    \ - 1\n    local binary_places_power = binary_places - 1\n    local decimal_places_power\
    \ = decimal_places_power + 1\n    local binary_places_power = binary_places_power\
    \ + 1\n    local decimal_places_power = decimal_places_power + 1\n    local binary_places_power\
    \ = binary_places_power + 1\n    local decimal_places_power = decimal_places_power\
    \ + 1\n    local binary_places_power = binary_places_power + 1\n    local decimal_places_power\
    \ = decimal_places_power + 1\n    local binary_places_power = binary_places_power\
    \ + 1\n    local decimal_places_power = decimal_places_power + 1\n    local binary_places_power\
    \ = binary_places_power + 1\n    local decimal_places_power = decimal_places_power\
    \ + 1\n    local binary_places_power = binary_places_power + 1\n    local decimal_places_power\
    \ = decimal_places_power + 1\n    local binary_places_power = binary_places_power\
    \ + 1\n    local decimal_places_power = decimal_places_power + 1\n    local binary_places_power\
    \ = binary_places_power + 1\n    local decimal_places_power = decimal_places_power\
    \ + 1\n    local binary_places_power = binary_places_power + 1\n    local decimal_places_power\
    \ = decimal_places_power + 1\n    local binary_places_power = binary_places_power\
    \ + 1\n    local decimal_places_power = decimal_places_power + 1\n    local binary_places_power\
    \ = binary_places_power + 1\n    local decimal_places_power = decimal_places_power\
    \ + 1\n    local binary_places_power = binary_places_power + 1\n    local decimal_places_power\
    \ = decimal_places_power + 1\n    local binary_places_power = binary_places_power\
    \ + 1\n    local decimal_places_power = decimal_places_power + 1\n    local binary_places_power\
    \ = binary_places_power + 1\n    local decimal_places_power = decimal_places_power\
    \ + 1\n    local binary_places_power = binary_places_power + 1\n    local decimal_places_power\
    \ = decimal_places_power + 1\n    local binary_places_power = binary_places_power\
    \ + 1\n    local decimal_places_power = decimal_places_power + 1\n    local binary_places_power\
    \ = binary_places_power + 1\n    ", "    local binary = \"\"\n    local decimal\
    \ = decimal\n    local decimal_power = math.pow(10, decimal)\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_",
  "    local binary = \"\"\n    local decimal = decimal\n    while decimal > 0 do\n\
    \        local remainder = decimal % 2\n        decimal = decimal / 2\n      \
    \  binary = binary .. \"0\" .. remainder\n    end\n    return binary .. \"db\"\
    \nend", "    decimal = tonumber(decimal)\n    local binary = \"\"\n    local remainder\n\
    \    local remainder_count = 0\n    local decimal_count = 0\n    local decimal_string\
    \ = \"\"\n    local decimal_string_reverse = \"\"\n    local decimal_string_length\
    \ = math.floor(math.log(decimal, 2))\n    local decimal_string_length_reverse\
    \ = math.floor(math.log(decimal, 2))\n    local decimal_string_length_reverse_temp\
    \ = decimal_string_length_reverse\n    local decimal_string_length_temp = decimal_string_length\n\
    \    local decimal_string_length_reverse_reverse = decimal_string_length_reverse\n\
    \    local decimal_string_length_reverse_temp_reverse = decimal_string_length_reverse_temp\n\
    \    local decimal_string_length_temp_reverse = decimal_string_length_reverse\n\
    \    local decimal_string_length_temp_reverse_temp = decimal_string_length_reverse_temp\n\
    \    local decimal_string_length_temp_reverse_reverse = decimal_string_length_reverse_temp_reverse\n\
    \    local decimal_string_length_temp_reverse_temp_reverse = decimal_string_length_reverse_temp_reverse\n\
    \    local decimal_string_length_temp_reverse_reverse_temp = decimal_string_length_reverse_temp_reverse_reverse\n\
    \    local decimal_string_length_temp_reverse_temp_reverse_reverse = decimal_string_length_reverse_temp_reverse_reverse\n\
    \    local decimal_string_length_temp_reverse_reverse_temp_reverse = decimal_string_length_reverse_temp_reverse_reverse\n\
    \    local decimal_string_length_temp_reverse_reverse_temp_reverse = decimal_string_length_reverse_temp_reverse_reverse\n\
    \    local decimal_string_length_temp_reverse_reverse_temp_reverse = decimal_string_length_reverse_temp_reverse_reverse\n\
    \    local decimal_string_length_temp_reverse_reverse_temp_reverse_temp = decimal_string_length_reverse_temp_reverse_reverse_temp\n\
    \    local decimal_string_length_temp_reverse_temp_reverse_temp_reverse = decimal_string_length_reverse_temp_reverse_temp_reverse\n\
    \    local decimal_string_length_temp_reverse_temp_reverse_temp_reverse_temp =\
    \ decimal_string_length_reverse_temp_reverse_temp_reverse_reverse\n    local decimal_string_length_temp_reverse_temp_reverse_temp_reverse_reverse\
    \ = decimal_string_length_reverse_temp_reverse_temp_reverse_reverse\n    local\
    \ decimal_string_length_temp_reverse_temp_reverse_temp_reverse_reverse_temp =\
    \ decimal_string_length_reverse_temp_reverse_temp_reverse_reverse_reverse\n  \
    \  local decimal_string_length_temp_reverse_temp_reverse_temp_reverse_reverse_temp\
    \ = decimal_string_length_reverse_temp_reverse_temp_reverse_reverse_temp_reverse\n\
    \    local decimal_string_length_temp_reverse_", "  -- Your code here\n  local\
    \ binary = \"\"\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local ",
  "    decimal = decimal:byte()\n    local binary = \"\"\n    while decimal > 0 do\n\
    \        binary = binary .. \"1\" .. math.floor(decimal / 2)\n        decimal\
    \ = decimal % 2\n    end\n    return binary .. \"db\"\nend", "  local binary =\
    \ \"\"\n  local decimal = decimal\n  while decimal > 0 do\n    local remainder\
    \ = decimal % 2\n    decimal = decimal / 2\n    binary = string.format(\"%s%c\"\
    , binary, remainder)\n  end\n  return binary\nend", "  decimal = decimal:byte()\n\
    \  local binary = \"\"\n  local i = 0\n  while decimal ~= 0 do\n    binary = binary\
    \ .. \"0\" .. tostring(decimal % 2)\n    decimal = math.floor(decimal / 2)\n \
    \   i = i + 1\n  end\n  return binary .. \"db\" .. tostring(i) .. \"db\"\nend",
  "  local binary = \"\"\n  local decimal = decimal\n  while decimal > 0 do\n    binary\
    \ = binary .. \"0\"\n    decimal = decimal - 1\n  end\n  binary = binary .. \"\
    1\"\n  return binary\nend", "  decimal = decimal:byte()\n  local binary = \"\"\
    \n  local i = 0\n  while decimal > 0 do\n    binary = binary .. \"1\" .. math.floor((decimal\
    \ % 2)) .. \"0\"\n    decimal = math.floor(decimal / 2)\n    i = i + 1\n    if\
    \ i > 8 then\n      binary = binary .. \"db\"\n      i = 0\n    end\n  end\n \
    \ return binary\nend", "    decimal = tonumber(decimal)\n    if decimal > 0 and\
    \ decimal < 256 then\n        local binary = \"\"\n        local remainder = decimal\n\
    \        while remainder > 0 do\n            binary = binary .. \"0\"\n      \
    \      remainder = remainder - 1\n        end\n        binary = binary .. \"1\"\
    \n        return binary .. \"db\"\n    else\n        return \"Invalid input\"\n\
    \    end\nend", "  local binary = \"\"\n  local decimal = math.floor(decimal)\n\
    \  local remainder = decimal\n  while remainder ~= 0 do\n    binary = binary ..\
    \ \"1\" .. math.floor(remainder / 2)\n    remainder = remainder % 2\n  end\n \
    \ return \"db\" .. binary .. \"db\"\nend", "    local binary = \"\"\n    local\
    \ decimal_str = tostring(decimal)\n    local decimal_len = #decimal_str\n    local\
    \ decimal_remainder = decimal\n    local decimal_remainder_len = #decimal_remainder\n\
    \    local decimal_remainder_remainder\n    local decimal_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_len\n    local decimal_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_str\n    local decimal_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder\n    local decimal_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_len\n    local decimal_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_str\n   \
    \ local decimal_remainder_remainder_remainder_remainder_remainder_len\n    local\
    \ decimal_remainder_remainder_remainder_remainder_remainder_remainder\n    local\
    \ decimal_remainder_remainder_remainder_remainder_remainder_remainder_str\n  \
    \  local decimal_remainder_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_", "    decimal = decimal or 0\n    local binary\
    \ = \"\"\n    local remainder\n    local decimal = math.floor(decimal)\n    local\
    \ decimal_power = math.pow(10, math.floor(math.log10(decimal)))\n    while decimal\
    \ > 0 do\n        remainder = decimal % decimal_power\n        decimal = math.floor(decimal\
    \ / decimal_power)\n        binary = string.format(\"%s%b\", binary, remainder)\n\
    \    end\n    binary = string.format(\"%sdb\", binary)\n    return binary\nend",
  "    local binary = \"\"\n    local decimal = decimal\n    local remainder\n   \
    \ local i = 1\n    while decimal > 0 do\n        remainder = decimal % 2\n   \
    \     decimal = decimal / 2\n        binary = binary .. \"0\" .. remainder\n \
    \   end\n    binary = binary .. \"db\"\n    return binary\nend", "    decimal\
    \ = decimal:byte()\n    local binary = \"\"\n    local i = 0\n    while decimal\
    \ > 0 do\n        binary = binary .. \"0\" .. tostring(decimal % 2)\n        decimal\
    \ = math.floor(decimal / 2)\n        i = i + 1\n    end\n    binary = binary ..\
    \ \"db\"\n    while i do\n        binary = binary .. \"0\"\n        i = i - 1\n\
    \    end\n    return binary\nend", "    decimal = tonumber(decimal)\n    if decimal\
    \ < 0 then\n        error(\"decimal number must be positive\")\n    end\n    local\
    \ binary = \"\"\n    local remainder\n    local digit\n    while decimal > 0 do\n\
    \        remainder = decimal % 2\n        digit = math.floor(decimal / 2)\n  \
    \      binary = string.format(\"%s%s%s\", binary, digit, remainder)\n        decimal\
    \ = math.floor(decimal / 2)\n    end\n    binary = string.format(\"%sdb\", binary)\n\
    \    return binary\nend", "    decimal = decimal:byte()\n    local binary = \"\
    \"\n    local i = 0\n    while decimal > 0 do\n        binary = binary .. \"0\"\
    \ .. tostring(decimal % 2)\n        decimal = math.floor(decimal / 2)\n      \
    \  i = i + 1\n    end\n    binary = binary .. \"db\"\n    while i do\n       \
    \ binary = binary .. \"0\"\n        i = i - 1\n    end\n    return binary\nend",
  "    decimal = tonumber(decimal)\n    if decimal < 0 then\n        error(\"Decimal\
    \ number must be positive\")\n    end\n    local binary = \"\"\n    local remainder\
    \ = decimal\n    while remainder > 0 do\n        binary = binary .. \"0\"\n  \
    \      remainder = remainder - 1\n    end\n    while remainder > 0 do\n      \
    \  binary = binary .. \"1\"\n        remainder = remainder - 1\n    end\n    binary\
    \ = binary .. \"db\"\n    return binary\nend", "    local decimal_str = tostring(decimal)\n\
    \    local binary_str = ''\n    local decimal_len = #decimal_str\n    local decimal_remainder\
    \ = decimal\n    local binary_remainder = 0\n    for i = 1, decimal_len do\n \
    \       binary_remainder = decimal_remainder * 2\n        if binary_remainder\
    \ > 1 then\n            binary_str = binary_str .. '1'\n        else\n       \
    \     binary_str = binary_str .. '0'\n        end\n        decimal_remainder =\
    \ decimal_remainder - binary_remainder\n    end\n    return binary_str .. 'db'\
    \ .. decimal_str\nend", "  local binary = \"\"\n  local decimal = decimal\n  while\
    \ decimal > 0 do\n    binary = binary .. \"1\"\n    decimal = decimal - 1\n  end\n\
    \  return binary .. \"db\"\nend", "    decimal = decimal:byte()\n    local binary\
    \ = \"\"\n    local i = 0\n    while decimal > 0 do\n        binary = binary ..\
    \ \"1\" .. math.floor(decimal % 2)\n        decimal = math.floor(decimal / 2)\n\
    \        i = i + 1\n    end\n    binary = binary .. \"db\" .. i\n    return binary\n\
    end", "    decimal = tonumber(decimal)\n    local binary = \"\"\n    local i =\
    \ 0\n    while decimal > 0 do\n        binary = binary .. \"0\" .. tostring(decimal\
    \ % 2)\n        decimal = math.floor(decimal / 2)\n        i = i + 1\n    end\n\
    \    binary = binary .. \"db\" .. tostring(i)\n    return binary\nend", "    decimal\
    \ = tonumber(decimal)\n    local binary = \"\"\n    local i = 0\n    while decimal\
    \ > 0 do\n        binary = binary .. \"0\"\n        decimal = decimal - 1\n  \
    \      i = i + 1\n    end\n    binary = binary .. \"1\"\n    i = i - 1\n    while\
    \ i > 0 do\n        binary = binary .. \"0\"\n        i = i - 1\n    end\n   \
    \ binary = binary .. \"db\"\n    return binary\nend", "  -- Your code here\nend",
  "  decimal = decimal:byte()\n  local binary = \"\"\n  local i = 0\n  while decimal\
    \ ~= 0 do\n    binary = binary .. \"0b\"\n    decimal = decimal - 2^i\n    i =\
    \ i + 1\n  end\n  return binary .. \"db\"\nend", "  local binary = \"\"\n  local\
    \ decimal = tonumber(decimal)\n  while decimal > 0 do\n    local remainder = decimal\
    \ % 2\n    decimal = decimal / 2\n    binary = binary .. \"0\"\n    binary = binary\
    \ .. \"1\"\n    if remainder == 1 then\n      binary = binary .. \"b\"\n    end\n\
    \  end\n  return \"db\" .. binary .. \"db\"\nend", "  decimal = decimal:byte()\n\
    \  local binary = \"\"\n  local i = 0\n  while decimal ~= 0 do\n    binary = binary\
    \ .. \"1\" .. math.floor((decimal % 2)) .. \"0\"\n    decimal = math.floor(decimal\
    \ / 2)\n    i = i + 1\n    if i > 8 then\n      binary = binary .. \"db\"\n  \
    \    i = 0\n    end\n  end\n  return binary\nend", "    decimal = decimal or 0\n\
    \    local binary = \"\"\n    local remainder\n    local decimal_power = math.pow(10,\
    \ math.floor(math.log10(decimal)))\n    while decimal > 0 do\n        remainder\
    \ = decimal % decimal_power\n        decimal = decimal / decimal_power\n     \
    \   binary = binary .. \"0\"\n        if remainder > 0 then\n            binary\
    \ = binary .. \"1\"\n        end\n    end\n    if binary == \"0\" then\n     \
    \   binary = \"db\"\n    end\n    if binary == \"db\" then\n        binary = binary\
    \ .. \"0\"\n    end\n    return binary\nend", "    decimal = tonumber(decimal)\n\
    \    local binary = \"\"\n    local i = 0\n    while decimal > 0 do\n        binary\
    \ = binary .. \"0\"\n        decimal = decimal - 1\n        i = i + 1\n    end\n\
    \    binary = binary .. \"1\"\n    for i = #binary - 1, 1, -1 do\n        binary\
    \ = binary .. \"0\"\n    end\n    binary = \"db\" .. binary .. \"db\"\n    return\
    \ binary\nend", "    decimal = decimal:byte()\n    local binary = \"\"\n    local\
    \ i = 0\n    while decimal > 0 do\n        binary = binary .. \"1\" .. math.floor((decimal\
    \ % 2)) .. \"0\"\n        decimal = math.floor(decimal / 2)\n        i = i + 1\n\
    \    end\n    binary = binary .. \"db\" .. i .. \"db\"\n    return binary\nend",
  "    local binary = \"\"\n    local decimal = math.floor(decimal)\n    local remainder\
    \ = decimal\n    while remainder ~= 0 do\n        decimal = math.floor(decimal\
    \ * 2)\n        remainder = math.floor(decimal)\n        binary = binary .. \"\
    0\"\n    end\n    binary = binary .. \"1\"\n    return binary .. \"db\"\nend",
  "    decimal = decimal or 0\n    local binary = \"\"\n    local remainder\n    local\
    \ decimal_str = tostring(decimal)\n    local decimal_len = #decimal_str\n    local\
    \ decimal_remainder = decimal\n    local decimal_remainder_len = #decimal_remainder\n\
    \    local binary_remainder\n    local binary_remainder_len = #binary\n    local\
    \ binary_remainder_str = \"\"\n    local binary_remainder_str_len = #binary_remainder_str\n\
    \    local binary_remainder_remainder\n    local binary_remainder_remainder_len\
    \ = #binary_remainder_remainder\n    local binary_remainder_remainder_str = \"\
    \"\n    local binary_remainder_remainder_str_len = #binary_remainder_remainder_str\n\
    \    local binary_remainder_remainder_remainder\n    local binary_remainder_remainder_remainder_len\
    \ = #binary_remainder_remainder_remainder\n    local binary_remainder_remainder_remainder_str\n\
    \    local binary_remainder_remainder_remainder_str_len = #binary_remainder_remainder_remainder_str\n\
    \    local binary_remainder_remainder_remainder_remainder\n    local binary_remainder_remainder_remainder_remainder_len\
    \ = #binary_remainder_remainder_remainder_remainder\n    local binary_remainder_remainder_remainder_remainder_str\n\
    \    local binary_remainder_remainder_remainder_remainder_str_len = #binary_remainder_remainder_remainder_remainder_str\n\
    \    local binary_remainder_remainder_remainder_remainder_remainder\n    local\
    \ binary_remainder_remainder_remainder_remainder_remainder_len = #binary_remainder_remainder_remainder_remainder_remainder\n\
    \    local binary_remainder_remainder_remainder_remainder_remainder_str\n    local\
    \ binary_remainder_remainder_remainder_remainder_remainder_str_len = #binary_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local binary_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local binary_remainder_remainder_remainder_remainder_remainder_remainder_len\
    \ = #binary_remainder_remainder_remainder_remainder_remainder_remainder\n    local\
    \ binary_remainder_remainder_remainder_remainder_remainder_remainder_str\n   \
    \ local binary_remainder_remainder_remainder_remainder_remainder_remainder_str_len\
    \ = #binary_remainder_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local binary_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local binary_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\
    \ = #binary_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local ", "  -- Write your code here\n  local binary = \"\"\n  local decimal\
    \ = decimal\n  while decimal > 0 do\n    binary = binary .. \"1\"\n    decimal\
    \ = decimal - 1\n  end\n  binary = binary .. \"0\"\n  return binary\nend", " \
    \ local binary = \"\"\n  local decimals = math.floor(decimal)\n  local remainder\
    \ = decimal - decimals\n  while decimals > 0 do\n    binary = binary .. \"0\"\n\
    \    decimals = decimals - 1\n  end\n  binary = binary .. \"1\"\n  while remainder\
    \ > 0 do\n    binary = binary .. \"1\"\n    remainder = remainder - 1\n  end\n\
    \  return binary .. \"db\"\nend", "  decimal = tonumber(decimal)\n  if decimal\
    \ < 0 then\n    return \"Invalid decimal number\"\n  end\n  local binary = \"\"\
    \n  local remainder = decimal\n  while remainder ~= 0 do\n    binary = binary\
    \ .. \"1\" .. math.floor(remainder % 2)\n    remainder = remainder / 2\n  end\n\
    \  return \"db\" .. binary .. \"db\"\nend", "    decimal = tonumber(decimal)\n\
    \    local binary = \"\"\n    local remainder\n    local decimal = decimal\n \
    \   while decimal > 0 do\n        remainder = decimal % 2\n        decimal = math.floor(decimal\
    \ / 2)\n        binary = binary .. \"0\" .. remainder\n    end\n    binary = binary\
    \ .. \"db\"\n    return binary\nend", "  local binary = \"\"\n  local decimal\
    \ = decimal\n  local decimal_power = math.pow(10, math.floor(math.log10(decimal)))\n\
    \  while decimal > 0 do\n    local remainder = decimal % decimal_power\n    decimal\
    \ = decimal / decimal_power\n    binary = binary .. \"0\" .. math.floor(remainder)\n\
    \  end\n  return binary .. \"db\"\nend", "    local binary = \"\"\n    local decimal\
    \ = decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local ", "    local binary = \"\"\n    local decimal\
    \ = decimal\n    local decimal_power = math.pow(10, decimal)\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_",
  "  local binary = \"\"\n  local decimal = tonumber(decimal)\n  while decimal > 0\
    \ do\n    local remainder = decimal % 2\n    decimal = decimal / 2\n    binary\
    \ = binary .. \"0\"\n    binary = binary .. remainder\n  end\n  return binary\
    \ .. \"db\"\nend", "    decimal = tonumber(decimal)\n    if decimal < 0 then\n\
    \        decimal = -decimal\n    end\n    local binary = \"\"\n    local remainder\
    \ = decimal\n    while remainder ~= 0 do\n        binary = binary .. \"0\"\n \
    \       remainder = remainder - 1\n    end\n    binary = binary .. \"1\"\n   \
    \ return binary .. \"db\"\nend", "    local binary = \"\"\n    local decimal =\
    \ decimal\n    local remainder\n    local decimal = decimal\n    while decimal\
    \ > 0 do\n        remainder = decimal % 2\n        decimal = math.floor(decimal\
    \ / 2)\n        binary = string.format(\"%s%sdb\", binary, remainder)\n    end\n\
    \    return binary\nend", "    local decimal_str = tostring(decimal)\n    local\
    \ binary_str = ''\n    local decimal_length = #decimal_str\n    local binary_length\
    \ = #binary_str\n    local decimal_remainder\n    local binary_remainder\n   \
    \ for i = 1, decimal_length do\n        decimal_remainder = decimal_str:sub(i,\
    \ i)\n        binary_remainder = binary_str:sub(i, i)\n        if decimal_remainder\
    \ == '0' then\n            binary_str = binary_str..'1'\n        elseif decimal_remainder\
    \ == '1' then\n            binary_str = binary_str..'0'\n        else\n      \
    \      binary_str = binary_str..'0'\n        end\n    end\n    if decimal_length\
    \ > 0 then\n        binary_str = binary_str..'1'\n    end\n    return binary_str\n\
    end", "    local binary = \"\"\n    local remainder = decimal\n    while remainder\
    \ > 0 do\n        binary = binary .. \"1\" .. math.floor(remainder / 2)\n    \
    \    remainder = remainder % 2\n    end\n    binary = binary .. \"db\"\n    return\
    \ binary\nend", "    local binary = \"\"\n    local decimal = decimal\n    while\
    \ decimal > 0 do\n        local remainder = decimal % 2\n        decimal = decimal\
    \ / 2\n        binary = binary .. \"0\" .. remainder\n    end\n    binary = binary\
    \ .. \"db\"\n    return binary\nend", "  local binary = \"\"\n  local decimal_power\
    \ = math.pow(10, decimal)\n  local decimal_mod = decimal\n  while decimal_mod\
    \ > 0 do\n    binary = binary .. \"1\"\n    decimal_mod = decimal_mod - 1\n  end\n\
    \  while decimal_power > 0 do\n    binary = binary .. \"0\"\n    decimal_power\
    \ = decimal_power - 1\n  end\n  return binary .. \"db\"\nend", "    local binary\
    \ = \"\"\n    local remainder = decimal\n    local i = 0\n    while remainder\
    \ ~= 0 do\n        if remainder > 1 then\n            binary = binary .. \"1\"\
    \n            remainder = remainder - 1\n        else\n            binary = binary\
    \ .. \"0\"\n        end\n        i = i + 1\n    end\n    if i ~= 1 then\n    \
    \    binary = binary .. \"b\"\n    end\n    return binary .. \"db\"\nend", " \
    \ local binary = \"\"\n  local decimals = math.floor(decimal)\n  local remainder\
    \ = decimal - decimals\n  while decimals > 0 do\n    binary = binary .. \"1\"\n\
    \    decimals = decimals - 1\n  end\n  if remainder > 0 then\n    binary = binary\
    \ .. \"0\"\n  end\n  return binary .. \"db\" .. decimals\nend", "    local binary\
    \ = \"\"\n    local decimal = decimal\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - math.floor(decimal)\n", "    local binary = \"\"\
    \n    local decimal = decimal\n    while decimal > 0 do\n        local remainder\
    \ = decimal % 2\n        decimal = decimal / 2\n        binary = binary .. \"\
    1\" .. remainder\n    end\n    binary = binary .. \"db\"\n    return binary\n\
    end", "    local decimal_str = tostring(decimal)\n    local binary_str = ''\n\
    \    local binary_length = math.floor(math.log(decimal, 2))\n    for i = 1, binary_length\
    \ do\n        binary_str = binary_str .. tostring(math.floor((decimal % 2) * 2))\n\
    \        decimal = math.floor(decimal / 2)\n    end\n    binary_str = binary_str\
    \ .. tostring(decimal)\n    binary_str = 'db' .. binary_str\n    return binary_str\n\
    end", "  local binary = \"\"\n  local decimals = math.floor(decimal)\n  local\
    \ remainder = decimal - decimals\n  while decimals > 0 do\n    local remainders\
    \ = math.floor(remainder)\n    binary = binary .. \"0\"\n    remainder = remainder\
    \ - remainders\n    decimals = decimals - 1\n  end\n  binary = binary .. \"1\"\
    \n  return binary .. \"db\"\nend", "    local decimal_str = decimal:string()\n\
    \    local binary_str = ''\n    local binary_index = 1\n    local binary_length\
    \ = #decimal_str\n    local binary_remainder", "    decimal = tonumber(decimal)\n\
    \    if decimal < 0 then\n        decimal = -decimal\n        decimal = -decimal\n\
    \    end\n    local binary = \"\"\n    local remainder = decimal\n    while remainder\
    \ ~= 0 do\n        binary = binary .. \"1\"\n        remainder = remainder - 2\n\
    \    end\n    binary = binary .. \"db\"\n    return binary\nend", "  local binary\
    \ = \"\"\n  local decimal_part = decimal\n  while decimal_part > 0 do\n    local\
    \ remainder = decimal_part % 2\n    decimal_part = decimal_part / 2\n    binary\
    \ = binary .. \"0\" .. tostring(remainder)\n  end\n  return binary .. \"db\"\n\
    end", "    decimal = decimal:byte()\n    local binary = \"\"\n    local decimal\
    \ = decimal:byte()\n    local decimal = decimal:byte()\n    local decimal = decimal:byte()\n\
    \    local decimal = decimal:byte()\n    local decimal = decimal:byte()\n    local\
    \ decimal = decimal:byte()\n    local decimal = decimal:byte()\n    local decimal\
    \ = decimal:byte()\n    local decimal = decimal:byte()\n    local decimal = decimal:byte()\n\
    \    local decimal = decimal:byte()\n    local decimal = decimal:byte()\n    local\
    \ decimal = decimal:byte()\n    local decimal = decimal:byte()\n    local decimal\
    \ = decimal:byte()\n    local decimal = decimal:byte()\n    local decimal = decimal:byte()\n\
    \    local decimal = decimal:byte()\n    local decimal = decimal:byte()\n    local\
    \ decimal = decimal:byte()\n    local decimal = decimal:byte()\n    local decimal\
    \ = decimal:byte()\n    local decimal = decimal:byte()\n    local decimal = decimal:byte()\n\
    \    local decimal = decimal:byte()\n    local decimal = decimal:byte()\n    local\
    \ decimal = decimal:byte()\n    local decimal = decimal:byte()\n    local decimal\
    \ = decimal:byte()\n    local decimal = decimal:byte()\n    local decimal = decimal:byte()\n\
    \    local decimal = decimal:byte()\n    local decimal = decimal:byte()\n    local\
    \ decimal = decimal:byte()\n    local decimal = decimal:byte()\n    local decimal\
    \ = decimal:byte()\n    local decimal = decimal:byte()\n    local decimal = decimal:byte()\n\
    \    local decimal = decimal:byte()\n    local decimal = decimal:byte()\n    local\
    \ decimal = decimal:byte()\n    local decimal = decimal:byte()\n    local decimal\
    \ = decimal:byte()\n    local decimal = decimal:byte()\n    local decimal = decimal:byte()\n\
    \    local decimal = decimal:byte()\n    local decimal = decimal:byte()\n    local\
    \ decimal = decimal:byte()\n    local decimal = decimal:byte()\n    local decimal\
    \ = decimal:byte()\n    local decimal = decimal:byte()\n    local decimal = decimal:byte()\n\
    \    local decimal = decimal:byte()\n    local decimal = decimal:byte()\n    local\
    \ decimal = decimal:byte()\n    local decimal", "    local binary = \"\"\n   \
    \ local decimal = decimal\n    local decimal = math.floor(decimal)\n    local\
    \ decimal = decimal - decimal\n    local decimal = decimal * 2\n    decimal =\
    \ math.floor(decimal)\n    decimal = decimal - decimal\n    decimal = decimal\
    \ * 2\n    decimal = math.floor(decimal)\n    decimal = decimal - decimal\n  \
    \  decimal = decimal * 2\n    decimal = math.floor(decimal)\n    decimal = decimal\
    \ - decimal\n    decimal = decimal * 2\n    decimal = math.floor(decimal)\n  \
    \  decimal = decimal - decimal\n    decimal = decimal * 2\n    decimal = math.floor(decimal)\n\
    \    decimal = decimal - decimal\n    decimal = decimal * 2\n    decimal = math.floor(decimal)\n\
    \    decimal = decimal - decimal\n    decimal = decimal * 2\n    decimal = math.floor(decimal)\n\
    \    decimal = decimal - decimal\n    decimal = decimal * 2\n    decimal = math.floor(decimal)\n\
    \    decimal = decimal - decimal\n    decimal = decimal * 2\n    decimal = math.floor(decimal)\n\
    \    decimal = decimal - decimal\n    decimal = decimal * 2\n    decimal = math.floor(decimal)\n\
    \    decimal = decimal - decimal\n    decimal = decimal * 2\n    decimal = math.floor(decimal)\n\
    \    decimal = decimal - decimal\n    decimal = decimal * 2\n    decimal = math.floor(decimal)\n\
    \    decimal = decimal - decimal\n    decimal = decimal * 2\n    decimal = math.floor(decimal)\n\
    \    decimal = decimal - decimal\n    decimal = decimal * 2\n    decimal = math.floor(decimal)\n\
    \    decimal = decimal - decimal\n    decimal = decimal * 2\n    decimal = math.floor(decimal)\n\
    \    decimal = decimal - decimal\n    decimal = decimal * 2\n    decimal = math.floor(decimal)\n\
    \    decimal = decimal - decimal\n    decimal = decimal * 2\n    decimal = math.floor(decimal)\n\
    \    decimal = decimal - decimal\n    decimal = decimal * 2\n    decimal = math.floor(decimal)\n\
    \    decimal = decimal - decimal\n    decimal = decimal * 2\n    decimal = math.floor(decimal)\n\
    \    decimal = decimal - decimal\n    decimal = decimal * 2\n    decimal = math.floor(decimal)\n\
    \    decimal = decimal - decimal\n    decimal = decimal * 2\n    decimal = math.floor(decimal)\n\
    \    decimal = decimal - decimal\n    decimal = decimal * 2\n    decimal = math.floor(decimal)\n\
    \    decimal = decimal - ", "    local binary = \"\"\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local ", "    local binary = \"\"\n    local decimal = decimal\n\
    \    while decimal > 0 do\n        local remainder = decimal % 2\n        decimal\
    \ = decimal / 2\n        binary = binary .. \"1\" .. remainder\n    end\n    binary\
    \ = binary .. \"0\"\n    return binary\nend", "    local binary = \"\"\n    local\
    \ decimal = decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal%2\n    local decimal = decimal + decimal%2\n    local decimal\
    \ = decimal/2\n    local decimal = decimal%2\n    local decimal = decimal/2\n\
    \    local decimal = decimal%2\n    local decimal = decimal/2\n    local decimal\
    \ = decimal%2\n    local decimal = decimal/2\n    local decimal = decimal%2\n\
    \    local decimal = decimal/2\n    local decimal = decimal%2\n    local decimal\
    \ = decimal/2\n    local decimal = decimal%2\n    local decimal = decimal/2\n\
    \    local decimal = decimal%2\n    local decimal = decimal/2\n    local decimal\
    \ = decimal%2\n    local decimal = decimal/2\n    local decimal = decimal%2\n\
    \    local decimal = decimal/2\n    local decimal = decimal%2\n    local decimal\
    \ = decimal/2\n    local decimal = decimal%2\n    local decimal = decimal/2\n\
    \    local decimal = decimal%2\n    local decimal = decimal/2\n    local decimal\
    \ = decimal%2\n    local decimal = decimal/2\n    local decimal = decimal%2\n\
    \    local decimal = decimal/2\n    local decimal = decimal%2\n    local decimal\
    \ = decimal/2\n    local decimal = decimal%2\n    local decimal = decimal/2\n\
    \    local decimal = decimal%2\n    local decimal = decimal/2\n    local decimal\
    \ = decimal%2\n    local decimal = decimal/2\n    local decimal = decimal%2\n\
    \    local decimal = decimal/2\n    local decimal = decimal%2\n    local decimal\
    \ = decimal/2\n    local decimal = decimal%2\n    local decimal = decimal/2\n\
    \    local decimal = decimal%2\n    local decimal = decimal/2\n    local decimal\
    \ = decimal%2\n    local decimal = decimal/2\n    local decimal = decimal%2\n\
    \    local decimal = decimal/2\n    local decimal = decimal%2\n    local decimal\
    \ = decimal/2\n    local decimal = decimal%2\n    local decimal = decimal/2\n\
    \    local decimal = decimal%2\n    local decimal = decimal/2\n    local decimal\
    \ = decimal%2\n    local decimal = decimal/2\n    local decimal = decimal%2\n\
    \    local decimal = decimal/2\n    local decimal = decimal%2\n    local decimal\
    \ = decimal/2\n    local decimal = decimal%2\n    local decimal = decimal/2",
  "  -- Your code here\n  local binary = \"\"\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local decimal = decimal\n  local decimal = decimal\n  local\
    \ decimal = decimal\n  local ", "  decimal = decimal:byte()\n  local binary =\
    \ \"\"\n  local remainder\n  while decimal do\n    remainder = decimal % 2\n \
    \   decimal = decimal / 2\n    binary = binary .. \"0\"\n    if remainder == 1\
    \ then\n      binary = binary .. \"1\"\n    end\n  end\n  return binary .. \"\
    db\"\nend", "    decimal = tonumber(decimal)\n    local binary = \"\"\n    local\
    \ i = 0\n    while decimal > 0 do\n        binary = binary .. \"0\" if decimal\
    \ % 2 == 0 then \"1\" else \"0\"\n        decimal = decimal / 2\n        i = i\
    \ + 1\n    end\n    binary = binary .. \"db\" .. i .. \"db\"\n    return binary\n\
    end", "    decimal = decimal:byte()\n    local binary = \"\"\n    local i = 0\n\
    \    while decimal ~= 0 do\n        binary = binary .. \"0\"\n        decimal\
    \ = decimal - decimal:byte()\n        i = i + 1\n    end\n    binary = binary\
    \ .. \"1\"\n    if i > 1 then\n        binary = binary .. \"b\"\n    end\n   \
    \ return binary\nend", "  decimal = decimal:byte()\n  local binary = \"\"\n  local\
    \ i = 0\n  while decimal > 0 do\n    binary = binary .. \"1\" .. math.floor(decimal\
    \ % 2)\n    decimal = decimal / 2\n    i = i + 1\n    if i > 8 then\n      binary\
    \ = binary .. \"0\"\n      i = 0\n    end\n  end\n  return binary .. \"db\"\n\
    end", "    decimal = tonumber(decimal)\n    if decimal < 0 then\n        decimal\
    \ = -decimal\n        decimal = -decimal\n    end\n    local binary = \"\"\n \
    \   local i = 0\n    while decimal > 0 do\n        binary = binary .. \"1\" ..\
    \ math.floor((decimal % 2)) .. \"b\"\n        decimal = math.floor(decimal / 2)\n\
    \        i = i + 1\n    end\n    binary = binary .. \"b\"\n    binary = binary\
    \ .. \"db\" .. i .. \"b\"\n    return binary\nend", "    local binary = \"\"\n\
    \    local decimal = decimal\n    while decimal > 0 do\n        binary = binary\
    \ .. \"0\"\n        decimal = decimal - 1\n    end\n    binary = binary .. \"\
    1\"\n    return binary\nend", "    local binary = \"\"\n    local decimal = math.floor(decimal)\n\
    \    local remainder = decimal\n    while remainder ~= 0 do\n        binary =\
    \ binary .. \"1\" .. math.floor(remainder)\n        remainder = remainder - math.floor(remainder)\n\
    \    end\n    binary = binary .. \"db\"\n    return binary\nend", "  local binary\
    \ = \"\"\n  local decimal = tonumber(decimal)\n  local decimal = decimal or 0\n\
    \  local decimal = decimal - decimal%2\n  local decimal = decimal * 2\n  local\
    \ decimal = decimal + decimal%2\n  local decimal = decimal * 2\n  local decimal\
    \ = decimal + decimal%2\n  local decimal = decimal * 2\n  local decimal = decimal\
    \ + decimal%2\n  local decimal = decimal * 2\n  local decimal = decimal + decimal%2\n\
    \  local decimal = decimal * 2\n  local decimal = decimal + decimal%2\n  local\
    \ decimal = decimal * 2\n  local decimal = decimal + decimal%2\n  local decimal\
    \ = decimal * 2\n  local decimal = decimal + decimal%2\n  local decimal = decimal\
    \ * 2\n  local decimal = decimal + decimal%2\n  local decimal = decimal * 2\n\
    \  local decimal = decimal + decimal%2\n  local decimal = decimal * 2\n  local\
    \ decimal = decimal + decimal%2\n  local decimal = decimal * 2\n  local decimal\
    \ = decimal + decimal%2\n  local decimal = decimal * 2\n  local decimal = decimal\
    \ + decimal%2\n  local decimal = decimal * 2\n  local decimal = decimal + decimal%2\n\
    \  local decimal = decimal * 2\n  local decimal = decimal + decimal%2\n  local\
    \ decimal = decimal * 2\n  local decimal = decimal + decimal%2\n  local decimal\
    \ = decimal * 2\n  local decimal = decimal + decimal%2\n  local decimal = decimal\
    \ * 2\n  local decimal = decimal + decimal%2\n  local decimal = decimal * 2\n\
    \  local decimal = decimal + decimal%2\n  local decimal = decimal * 2\n  local\
    \ decimal = decimal + decimal%2\n  local decimal = decimal * 2\n  local decimal\
    \ = decimal + decimal%2\n  local decimal = decimal * 2\n  local decimal = decimal\
    \ + decimal%2\n  local decimal = decimal * 2\n  local decimal = decimal + decimal%2\n\
    \  local decimal = decimal * 2\n  local decimal = decimal + decimal%2\n  local\
    \ decimal = decimal * 2\n  local decimal = decimal + decimal%2\n  local decimal\
    \ = decimal * 2\n  local decimal = decimal + decimal%2\n  local decimal = decimal\
    \ * 2\n  local decimal = decimal + decimal%2\n  local decimal = decimal * 2\n\
    \  local ", "  local binary = \"\"\n  local decimal = tonumber(decimal)\n  local\
    \ decimal_power = math.pow(10, math.floor(math.log10(decimal)))\n  local decimal_mod\
    \ = decimal % decimal_power\n  local decimal_remainder = decimal - decimal_mod\n\
    \  local decimal_decimal_power = math.pow(10, math.floor(math.log10(decimal_power)))\n\
    \  local decimal_decimal_mod = decimal_mod % decimal_decimal_power\n  local decimal_decimal_remainder\
    \ = decimal_mod - decimal_decimal_mod\n  local decimal_decimal_mod = decimal_decimal_mod\
    \ % decimal_decimal_power\n  local decimal_decimal_mod = decimal_decimal_mod %\
    \ decimal_decimal_power\n  local decimal_decimal_mod = decimal_decimal_mod % decimal_decimal_power\n\
    \  local decimal_decimal_mod = decimal_decimal_mod % decimal_decimal_power\n \
    \ local decimal_decimal_mod = decimal_decimal_mod % decimal_decimal_power\n  local\
    \ decimal_decimal_mod = decimal_decimal_mod % decimal_decimal_power\n  local decimal_decimal_mod\
    \ = decimal_decimal_mod % decimal_decimal_power\n  local decimal_decimal_mod =\
    \ decimal_decimal_mod % decimal_decimal_power\n  local decimal_decimal_mod = decimal_decimal_mod\
    \ % decimal_decimal_power\n  local decimal_decimal_mod = decimal_decimal_mod %\
    \ decimal_decimal_power\n  local decimal_decimal_mod = decimal_decimal_mod % decimal_decimal_power\n\
    \  local decimal_decimal_mod = decimal_decimal_mod % decimal_decimal_power\n \
    \ local decimal_decimal_mod = decimal_decimal_mod % decimal_decimal_power\n  local\
    \ decimal_decimal_mod = decimal_decimal_mod % decimal_decimal_power\n  local decimal_decimal_mod\
    \ = decimal_decimal_mod % decimal_decimal_power\n  local decimal_decimal_mod =\
    \ decimal_decimal_mod % decimal_decimal_power\n  local decimal_decimal_mod = decimal_decimal_mod\
    \ % decimal_decimal_power\n  local decimal_decimal_mod = decimal_decimal_mod %\
    \ decimal_decimal_power\n  local decimal_decimal_mod = decimal_decimal_mod % decimal_decimal_power\n\
    \  local decimal_decimal_mod = decimal_decimal_mod % decimal_decimal_power\n \
    \ local decimal_decimal_mod = decimal_decimal_mod % decimal_decimal_power\n  local\
    \ decimal_decimal_mod = decimal_decimal_mod % decimal_decimal_power\n  local decimal_decimal_mod\
    \ = decimal_decimal_mod % decimal_decimal_power\n  local decimal_decimal_mod =\
    \ decimal_decimal_mod % decimal_decimal_power\n  local decimal_decimal_mod = decimal_decimal_mod\
    \ % decimal_decimal_power\n  local decimal_decimal_mod = decimal_decimal_mod %\
    \ decimal_decimal_power\n  local decimal_decimal_mod = decimal_decimal_mod % decimal_decimal_power\n\
    \  local decimal_decimal_mod = decimal_decimal_mod % decimal_decimal_power\n \
    \ local decimal_decimal_mod = decimal_decimal_mod % decimal_decimal_power\n  local\
    \ decimal_decimal_mod = decimal_decimal_mod % decimal_decimal_power\n  local decimal_decimal_mod\
    \ = decimal_decimal_mod % decimal_decimal_power\n  local decimal_decimal_mod =\
    \ decimal_decimal_mod % decimal_decimal_power\n  local ", "    decimal = tonumber(decimal)\n\
    \    local binary = \"\"\n    local remainder\n    local decimal_str\n    local\
    \ decimal_str_reverse\n    local decimal_str_reverse_i\n    local decimal_str_reverse_i_reverse\n\
    \    local decimal_str_reverse_i_reverse_i\n    local decimal_str_reverse_i_reverse_i_reverse\n\
    \    local decimal_str_reverse_i_reverse_i_reverse_i\n    local decimal_str_reverse_i_reverse_i_reverse_i_reverse\n\
    \    local decimal_str_reverse_i_reverse_i_reverse_i_reverse_i\n    local decimal_str_reverse_i_reverse_i_reverse_i_reverse_i_reverse\n\
    \    local decimal_str_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i\n   \
    \ local decimal_str_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse\n\
    \    local decimal_str_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i\n\
    \    local decimal_str_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse\n\
    \    local decimal_str_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse\n\
    \    local decimal_str_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i\n\
    \    local decimal_str_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i\n\
    \    local decimal_str_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i\n\
    \    local decimal_str_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse\n\
    \    local decimal_str_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i\n\
    \    local decimal_str_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse\n\
    \    local decimal_str_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i\n\
    \    local decimal_str_reverse_i_reverse_i_reverse_i_reverse_i_reverse_i_re",
  "    local binary = \"\"\n    local decimals = math.floor(decimal)\n    local remainder\
    \ = decimal - decimals\n    local decimals_power = math.floor(math.log(decimals,\
    \ 2))\n    local remainder_power = math.floor(math.log(remainder, 2))\n    local\
    \ decimals_power = decimals_power + 2\n    local remainder_power = remainder_power\
    \ + 2\n    local decimals_power = math.floor(decimals_power)\n    local remainder_power\
    \ = math.floor(remainder_power)\n    local decimals_power = decimals_power + 2\n\
    \    local remainder_power = remainder_power + 2\n    local decimals_power = math.floor(decimals_power)\n\
    \    local remainder_power = math.floor(remainder_power)\n    local decimals_power\
    \ = decimals_power + 2\n    local remainder_power = remainder_power + 2\n    local\
    \ decimals_power = math.floor(decimals_power)\n    local remainder_power = math.floor(remainder_power)\n\
    \    local decimals_power = decimals_power + 2\n    local remainder_power = remainder_power\
    \ + 2\n    local decimals_power = math.floor(decimals_power)\n    local remainder_power\
    \ = math.floor(remainder_power)\n    local decimals_power = decimals_power + 2\n\
    \    local remainder_power = remainder_power + 2\n    local decimals_power = math.floor(decimals_power)\n\
    \    local remainder_power = math.floor(remainder_power)\n    local decimals_power\
    \ = decimals_power + 2\n    local remainder_power = remainder_power + 2\n    local\
    \ decimals_power = math.floor(decimals_power)\n    local remainder_power = math.floor(remainder_power)\n\
    \    local decimals_power = decimals_power + 2\n    local remainder_power = remainder_power\
    \ + 2\n    local decimals_power = math.floor(decimals_power)\n    local remainder_power\
    \ = math.floor(remainder_power)\n    local decimals_power = decimals_power + 2\n\
    \    local remainder_power = remainder_power + 2\n    local decimals_power = math.floor(decimals_power)\n\
    \    local remainder_power = math.floor(remainder_power)\n    local decimals_power\
    \ = decimals_power + 2\n    local remainder_power = remainder_power + 2\n    local\
    \ decimals_power = math.floor(decimals_power)\n    local remainder_power = math.floor(remainder_power)\n\
    \    local ", "    decimal = tonumber(decimal)\n    local binary = \"\"\n    local\
    \ i = 0\n    while decimal > 0 do\n        binary = binary .. \"1\" .. math.floor((decimal\
    \ % 2)) .. \"0\"\n        decimal = math.floor(decimal / 2)\n        i = i + 1\n\
    \    end\n    binary = binary .. \"db\" .. i .. \"db\"\n    return binary\nend",
  "  -- Your code here\n  local binary = \"\"\n  local decimal = decimal\n  while\
    \ decimal > 0 do\n    local remainder = decimal % 2\n    decimal = decimal / 2\n\
    \    binary = binary .. \"0\"\n    binary = binary .. \"1\"\n  end\n  binary =\
    \ binary .. \"db\"\n  return binary\nend", "    local binary = \"\"\n    local\
    \ decimal = decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal)\n    local decimal\
    \ = decimal - decimal\n    local decimal = math.floor(decimal", "  decimal = tonumber(decimal)\n\
    \  local binary = \"\"\n  while decimal > 0 do\n    binary = binary .. \"1\" ..\
    \ tostring(decimal % 2)\n    decimal = math.floor(decimal / 2)\n  end\n  return\
    \ binary .. \"db\"\nend", "    local binary = \"\"\n    local decimal = decimal\n\
    \    local decimal = math.floor(decimal)\n    local decimal = decimal - decimal\n\
    \    local decimal = math.pow(10, decimal)\n    local decimal = decimal * 2\n\
    \    local decimal = decimal\n    local decimal = math.floor(decimal)\n    local\
    \ decimal = decimal - decimal\n    local decimal = math.pow(10, decimal)\n   \
    \ local decimal = decimal * 2\n    local decimal = decimal\n    local decimal\
    \ = math.floor(decimal)\n    local decimal = decimal - decimal\n    local decimal\
    \ = math.pow(10, decimal)\n    local decimal = decimal * 2\n    local decimal\
    \ = decimal\n    local decimal = math.floor(decimal)\n    local decimal = decimal\
    \ - decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = decimal\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - decimal\n    local decimal = math.pow(10, decimal)\n\
    \    local decimal = decimal * 2\n    local decimal = decimal\n    local decimal\
    \ = math.floor(decimal)\n    local decimal = decimal - decimal\n    local decimal\
    \ = math.pow(10, decimal)\n    local decimal = decimal * 2\n    local decimal\
    \ = decimal\n    local decimal = math.floor(decimal)\n    local decimal = decimal\
    \ - decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = decimal\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - decimal\n    local decimal = math.pow(10, decimal)\n\
    \    local decimal = decimal * 2\n    local decimal = decimal\n    local decimal\
    \ = math.floor(decimal)\n    local decimal = decimal - decimal\n    local decimal\
    \ = math.pow(10, decimal)\n    local decimal = decimal * 2\n    local decimal\
    \ = decimal\n    local decimal = math.floor(decimal)\n    local decimal = decimal\
    \ - decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = decimal\n    local decimal = math.floor(decimal)\n\
    \    local decimal = decimal - decimal\n    local decimal = math.pow(10, decimal)\n\
    \    local decimal = decimal * 2\n    local decimal = decimal\n    local decimal\
    \ = math.floor(decimal)\n    local decimal = decimal - decimal\n    local decimal\
    \ = math.pow(10, decimal)\n    local decimal = decimal * 2\n    local decimal\
    \ = decimal\n    local decimal = math.floor(decimal)", "    local binary = \"\"\
    \n    local decimal = decimal\n    local decimal_power = math.pow(10, math.floor(math.log10(decimal)))\n\
    \    local decimal_mod = decimal\n    local decimal_remainder\n    local decimal_remainder_power\
    \ = math.pow(10, math.floor(math.log10(decimal_mod)))\n    local decimal_remainder_mod\
    \ = decimal_mod\n    local decimal_remainder_power2\n    local decimal_remainder_mod2\n\
    \    local decimal_remainder_power3\n    local decimal_remainder_mod3\n    local\
    \ decimal_remainder_power4\n    local decimal_remainder_mod4\n    local decimal_remainder_power5\n\
    \    local decimal_remainder_mod5\n    local decimal_remainder_power6\n    local\
    \ decimal_remainder_mod6\n    local decimal_remainder_power7\n    local decimal_remainder_mod7\n\
    \    local decimal_remainder_power8\n    local decimal_remainder_mod8\n    local\
    \ decimal_remainder_power9\n    local decimal_remainder_mod9\n    local decimal_remainder_power10\n\
    \    local decimal_remainder_mod10\n    local decimal_remainder_power11\n    local\
    \ decimal_remainder_mod11\n    local decimal_remainder_power12\n    local decimal_remainder_mod12\n\
    \    local decimal_remainder_power13\n    local decimal_remainder_mod13\n    local\
    \ decimal_remainder_power14\n    local decimal_remainder_mod14\n    local decimal_remainder_power15\n\
    \    local decimal_remainder_mod15\n    local decimal_remainder_power16\n    local\
    \ decimal_remainder_mod16\n    local decimal_remainder_power17\n    local decimal_remainder_mod17\n\
    \    local decimal_remainder_power18\n    local decimal_remainder_mod18\n    local\
    \ decimal_remainder_power19\n    local decimal_remainder_mod19\n    local decimal_remainder_power20\n\
    \    local decimal_remainder_mod20\n    local decimal_remainder_power21\n    local\
    \ decimal_remainder_mod21\n    local decimal_remainder_power22\n    local decimal_remainder_mod22\n\
    \    local decimal_remainder_power23\n    local decimal_remainder_mod23\n    local\
    \ decimal_remainder_power24\n    local decimal_remainder_mod24\n    local decimal_remainder_power25\n\
    \    local decimal_remainder_mod25\n    local decimal_remainder_power26\n    local\
    \ decimal_remainder_mod26\n    local decimal_remainder_power27\n    local decimal_remainder_mod27\n\
    \    local decimal_remainder_power28\n    local decimal_remainder_mod28\n    local\
    \ decimal_remainder_power29\n    local decimal_remain", "    decimal = tonumber(decimal)\n\
    \    local binary = \"\"\n    local remainder = decimal\n    while remainder ~=\
    \ 0 do\n        binary = binary .. \"0\" .. math.floor(remainder % 2)\n      \
    \  remainder = remainder / 2\n    end\n    binary = binary .. \"db\"\n    return\
    \ binary\nend", "    local binary = \"\"\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    while decimal > 0 do\n        local remainder = decimal\
    \ % 2\n        decimal = decimal / 2\n        binary = binary .. \"0\" .. remainder\n\
    \    end\n    return binary\nend", "  local binary = \"\"\n  local decimal = decimal\n\
    \  local decimal_power = math.pow(10, math.floor(math.log10(decimal)))\n  local\
    \ decimal_power = decimal_power - 1\n  local decimal_power = decimal_power - 1\n\
    \  while decimal > 0 do\n    local remainder = decimal % 2\n    decimal = decimal\
    \ / 2\n    binary = binary .. \"0\"\n    if remainder == 1 then\n      binary\
    \ = binary .. \"1\"\n    end\n  end\n  binary = binary .. \"db\"\n  binary = binary\
    \ .. decimal_to_binary(decimal)\n  return binary\nend", "  -- Write your code\
    \ here\n  local binary = \"\"\n  local decimal = decimal\n  while decimal > 0\
    \ do\n    local remainder = decimal % 2\n    decimal = decimal / 2\n    binary\
    \ = binary .. \"0\"\n    if remainder == 1 then\n      binary = binary .. \"1\"\
    \n    end\n  end\n  return binary .. \"db\"\nend", "  -- Your code here\n  local\
    \ binary = \"\"\n  local decimal = decimal\n  while decimal > 0 do\n    binary\
    \ = binary .. \"1\"\n    decimal = decimal - 1\n  end\n  binary = binary .. \"\
    0\"\n  return binary\nend", "    local binary = \"\"\n    local decimal = decimal\n\
    \    local decimal_power = math.pow(10, decimal)\n    while decimal > 0 do\n \
    \       binary = binary .. \"1\"\n        decimal = decimal - 1\n    end\n   \
    \ binary = binary .. \"0\"\n    binary = binary .. \"db\"\n    return binary\n\
    end", "  local binary = \"\"\n  local remainder = decimal\n  while remainder ~=\
    \ 0 do\n    local digit = remainder % 2\n    remainder = remainder / 2\n    binary\
    \ = digit .. binary\n  end\n  return \"db\" .. binary .. \"db\"\nend", "    decimal\
    \ = tonumber(decimal)\n    local binary = \"\"\n    local remainder\n    local\
    \ decimal = decimal\n    while decimal > 0 do\n        remainder = decimal % 2\n\
    \        decimal = decimal / 2\n        binary = binary .. \"0\" .. tostring(remainder)\n\
    \    end\n    binary = binary .. \"db\"\n    return binary\nend", "  decimal =\
    \ decimal:byte()\n  local binary = \"\"\n  local i = 0\n  while decimal > 0 do\n\
    \    binary = binary .. \"1\" .. math.floor((decimal % 2)) .. \"0\"\n    decimal\
    \ = math.floor(decimal / 2)\n    i = i + 1\n    if i > 8 then\n      i = i - 8\n\
    \      binary = binary .. \"db\"\n    end\n  end\n  return binary\nend", "   \
    \ decimal = decimal:byte()\n    local binary = \"\"\n    local i = 0\n    while\
    \ decimal > 0 do\n        binary = binary .. \"1\" .. math.floor(decimal % 2)\n\
    \        decimal = math.floor(decimal / 2)\n        i = i + 1\n    end\n    if\
    \ i ~= 1 then\n        binary = binary .. \"0\"\n    end\n    binary = binary\
    \ .. \"db\"\n    return binary\nend", "    decimal = tonumber(decimal)\n    if\
    \ decimal < 0 then\n        decimal = -decimal\n        return '-' .. decimal_to_binary(decimal)\n\
    \    end\n    local binary = \"\"\n    while decimal > 0 do\n        binary =\
    \ binary .. \"1\" .. tostring(decimal % 2)\n        decimal = math.floor(decimal\
    \ / 2)\n    end\n    binary = binary .. \"0\"\n    return binary .. \"db\"\nend",
  "    local binary = \"\"\n    local decimal = decimal\n    local decimal_power =\
    \ math.pow(10, decimal)\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    local decimal_power\
    \ = decimal_power\n    local decimal_power = decimal_power\n    ", "    decimal\
    \ = tonumber(decimal)\n    if decimal < 0 then\n        error(\"Decimal number\
    \ must be positive\")\n    end\n    local binary = \"\"\n    local remainder =\
    \ decimal\n    while remainder ~= 0 do\n        binary = binary .. \"1\" .. math.floor(remainder)\n\
    \        remainder = remainder - math.floor(remainder)\n    end\n    binary =\
    \ binary .. \"db\"\n    return binary\nend", "    decimal = tonumber(decimal)\n\
    \    if decimal < 0 then\n        decimal = -decimal\n        decimal = -decimal\n\
    \    end\n    local binary = \"\"\n    local remainder = decimal\n    while remainder\
    \ ~= 0 do\n        binary = binary .. \"0\"\n        remainder = remainder - 2\n\
    \    end\n    binary = binary .. \"1\"\n    return binary\nend", "    local binary\
    \ = \"\"\n    local decimal = decimal\n    local decimal = math.floor(decimal)\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    local remainder\n    local remainder\n\
    \    local remainder\n    local remainder\n    ", "  local binary = \"\"\n  local\
    \ decimal = decimal\n  local decimal_power = math.pow(10, math.floor(math.log10(decimal)))\n\
    \  while decimal > 0 do\n    local remainder = decimal % decimal_power\n    decimal\
    \ = decimal - remainder\n    binary = binary .. \"1\" .. math.floor(remainder)\n\
    \  end\n  return binary .. \"db\"\nend", "    local binary = \"\"\n    local decimal\
    \ = decimal\n    local decimal = math.floor(decimal)\n    local decimal = decimal\
    \ - decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    local decimal = decimal -\
    \ decimal\n    local decimal = math.pow(10, decimal)\n    local decimal = decimal\
    \ * 2\n    local decimal = math.floor(decimal)\n    ", "  decimal = tonumber(decimal)\n\
    \  if decimal < 0 then\n    return \"0\"\n  end\n  local binary = \"\"\n  while\
    \ decimal > 0 do\n    binary = binary .. \"1\"\n    decimal = decimal - 1\n  end\n\
    \  binary = binary .. \"0\"\n  return \"db\" .. binary .. \"db\"\nend", "  decimal\
    \ = decimal:byte()\n  local binary = \"\"\n  local i = 0\n  while decimal ~= 0\
    \ do\n    binary = binary .. \"0b\"\n    decimal = decimal - decimal:byte()\n\
    \    i = i + 1\n  end\n  binary = binary .. \"db\"\n  i = i - 1\n  if i ~= 0 then\n\
    \    for j = 1, i do\n      binary = binary .. \"0\"\n    end\n  end\n  return\
    \ binary\nend", "  decimal = tonumber(decimal)\n  local binary = \"\"\n  while\
    \ decimal > 0 do\n    binary = binary .. \"1\"\n    decimal = decimal - 1\n  end\n\
    \  binary = binary .. \"0\"\n  return binary\nend", "    decimal = decimal:byte()\n\
    \    local binary = \"\"\n    local i = 0\n    while decimal > 0 do\n        binary\
    \ = binary .. \"0\"\n        decimal = decimal - 1\n        i = i + 1\n    end\n\
    \    binary = binary .. \"1\"\n    binary = binary .. \"db\"\n    for i = 1, i\
    \ do\n        binary = binary .. \"0\"\n    end\n    return binary\nend", "  \
    \  local decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local ", "  --\
    \ Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n\
    \  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- ", "  local binary = \"\"\n  local decimal = decimal\n  while decimal\
    \ > 0 do\n    decimal = decimal - 2\n    binary = binary .. \"1\"\n  end\n  while\
    \ decimal > 0 do\n    decimal = decimal - 2\n    binary = binary .. \"0\"\n  end\n\
    \  return binary .. \"db\"\nend", "    decimal = decimal:byte()\n    local binary\
    \ = \"\"\n    local i = 0\n    while decimal > 0 do\n        binary = binary ..\
    \ \"0\" if decimal % 2 == 0 else \"1\"\n        decimal = decimal / 2\n      \
    \  i = i + 1\n    end\n    binary = binary .. \"db\" .. i\n    return binary\n\
    end", "  decimal = tonumber(decimal)\n  local binary = \"\"\n  while decimal >\
    \ 0 do\n    binary = binary .. \"1\"\n    decimal = decimal - 1\n  end\n  return\
    \ binary .. \"db\"\nend", "    decimal = decimal:byte()\n    local binary = \"\
    \"\n    local i = 0\n    while decimal > 0 do\n        binary = binary .. \"0\"\
    \n        decimal = decimal - 1\n        i = i + 1\n    end\n    binary = binary\
    \ .. \"1\"\n    binary = binary .. \"db\"\n    for j = 1, i do\n        binary\
    \ = binary .. \"0\"\n    end\n    return binary\nend", "  local binary = \"\"\n\
    \  local decimals = math.floor(decimal)\n  local remainder = decimal - decimals\n\
    \  while decimals > 0 do\n    local remainders = math.floor(remainder)\n    binary\
    \ = binary .. \"0\"\n    decimals = decimals - 1\n    remainder = remainder -\
    \ remainders\n  end\n  if remainder > 0 then\n    binary = binary .. \"1\"\n \
    \ end\n  return binary\nend", "    local binary = \"\"\n    local decimals = math.floor(decimal)\n\
    \    local remainder = decimal - decimals\n    local remainders = math.floor(remainder)\n\
    \    local remainders_str = string.format(\"%0d\", remainders)\n    local remainders_str\
    \ = string.gsub(remainders_str, \"0\", \"\")\n    local remainders_str = string.gsub(remainders_str,\
    \ \"1\", \"\")\n    local remainders_str = string.gsub(remainders_str, \"db\"\
    , \"\")\n    local remainders_str = string.gsub(remainders_str, \".\", \"\")\n\
    \    local remainders_str = string.gsub(remainders_str, \"-\", \"\")\n    local\
    \ remainders_str = string.gsub(remainders_str, \",\", \"\")\n    local remainders_str\
    \ = string.gsub(remainders_str, \"+\", \"\")\n    local remainders_str = string.gsub(remainders_str,\
    \ \"%\", \"\")\n    local remainders_str = string.gsub(remainders_str, \"*\",\
    \ \"\")\n    local remainders_str = string.gsub(remainders_str, \"/\", \"\")\n\
    \    local remainders_str = string.gsub(remainders_str, \"(\", \"\")\n    local\
    \ remainders_str = string.gsub(remainders_str, \")\", \"\")\n    local remainders_str\
    \ = string.gsub(remainders_str, \"+\", \"\")\n    local remainders_str = string.gsub(remainders_str,\
    \ \"-\", \"\")\n    local remainders_str = string.gsub(remainders_str, \"/\",\
    \ \"\")\n    local remainders_str = string.gsub(remainders_str, \"*\", \"\")\n\
    \    local remainders_str = string.gsub(remainders_str, \"%\", \"\")\n    local\
    \ remainders_str = string.gsub(remainders_str, \"+\", \"\")\n    local remainders_str\
    \ = string.gsub(remainders_str, \"-\", \"\")\n    local remainders_str = string.gsub(remainders_str,\
    \ \".\", \"\")\n    local remainders_str = string.gsub(remainders_str, \",\",\
    \ \"\")\n    local remainders_str = string.gsub(remainders_str, \"-\", \"\")\n\
    \    local remainders_str = string.gsub(remainders_str, \".\", \"\")\n    local\
    \ remainders_str = string.gsub(remainders_str, \"-\", \"\")\n    local remainders_str\
    \ = string.gsub(remainders_str, \".\", \"\")\n    local remainders_str = string.gsub(remainders_",
  "    decimal = tonumber(decimal)\n    local binary = \"\"\n    local i = 0\n   \
    \ while decimal > 0 do\n        binary = binary .. \"0\"\n        decimal = decimal\
    \ - 1\n        i = i + 1\n    end\n    binary = binary .. \"1\"\n    binary =\
    \ binary .. \"db\"\n    for j = 1, i do\n        binary = binary .. \"0\"\n  \
    \  end\n    return binary\nend", "  local binary = \"\"\n  local decimal = decimal\n\
    \  while decimal > 0 do\n    local remainder = decimal % 2\n    decimal = decimal\
    \ / 2\n    binary = binary .. \"0\"\n    binary = binary .. \"1\"\n    if remainder\
    \ == 0 then\n      binary = binary .. \"b\"\n    end\n  end\n  return binary ..\
    \ \"db\"\nend", "    local binary = \"\"\n    local remainder\n    local decimal_str\
    \ = tostring(decimal)\n    local decimal_len = #decimal_str\n    local decimal_remainder\n\
    \    local decimal_remainder_str\n    local decimal_remainder_len\n    local decimal_remainder_remainder\n\
    \    local decimal_remainder_remainder_str\n    local decimal_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder\n    local decimal_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_len\n    local decimal_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_str\n    local decimal_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder\n    local\
    \ decimal_remainder_remainder_remainder_remainder_remainder_str\n    local decimal_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remain",
  "    local binary = \"\"\n    local decimal = decimal\n    local decimal_power =\
    \ math.pow(10, decimal)\n    while decimal > 0 do\n        local remainder = decimal\
    \ % 2\n        decimal = decimal / 2\n        binary = binary .. \"0\"\n     \
    \   if remainder == 1 then\n            binary = binary .. \"1\"\n        end\n\
    \    end\n    binary = binary .. \"db\"\n    return binary\nend", "    local binary\
    \ = \"\"\n    local decimal = decimal\n    while decimal > 0 do\n        binary\
    \ = binary .. \"0\"\n        decimal = decimal - 1\n    end\n    binary = binary\
    \ .. \"1\"\n    return binary\nend", "    local binary = \"\"\n    local decimal\
    \ = decimal\n    local decimal_power = math.pow(10, math.floor(math.log10(decimal)))\n\
    \    while decimal > 0 do\n        decimal = decimal - decimal_power\n       \
    \ binary = binary .. \"1\"\n    end\n    binary = binary .. \"0\"\n    binary\
    \ = binary .. \"db\"\n    return binary\nend", "    decimal = decimal:byte()\n\
    \    local binary = \"\"\n    local i = 0\n    while decimal > 0 do\n        binary\
    \ = binary .. \"1\" .. math.floor((decimal % 2)) .. \"0\"\n        decimal = math.floor(decimal\
    \ / 2)\n        i = i + 1\n    end\n    binary = binary .. \"db\" .. i .. \"db\"\
    \n    return binary\nend", "    local binary = \"\"\n    local decimal = decimal\n\
    \    local decimal = decimal\n    while decimal > 0 do\n        binary = binary\
    \ .. \"0\"\n        decimal = decimal - 1\n    end\n    binary = binary .. \"\
    1\"\n    return binary\nend", "    local binary = \"\"\n    local decimal = decimal\n\
    \    local decimal_power = math.pow(10, math.floor(math.log10(decimal)))\n   \
    \ local decimal_mod = decimal % decimal_power\n    local decimal_remainder = decimal\
    \ - decimal_mod\n    local decimal_decimal_power = math.pow(10, math.floor(math.log10(decimal_power)))\n\
    \    local decimal_decimal_mod = decimal_power % decimal_decimal_power\n    local\
    \ decimal_decimal_remainder = decimal_power - decimal_decimal_mod\n    local decimal_decimal_decimal_power\
    \ = math.pow(10, math.floor(math.log10(decimal_decimal_power)))\n    local decimal_decimal_decimal_mod\
    \ = decimal_decimal_power % decimal_decimal_decimal_power\n    local decimal_decimal_decimal_remainder\
    \ = decimal_decimal_power - decimal_decimal_decimal_mod\n    local decimal_decimal_decimal_decimal_power\
    \ = math.pow(10, math.floor(math.log10(decimal_decimal_decimal_power)))\n    local\
    \ decimal_decimal_decimal_decimal_mod = decimal_decimal_decimal_power % decimal_decimal_decimal_decimal_power\n\
    \    local decimal_decimal_decimal_decimal_remainder = decimal_decimal_decimal_power\
    \ - decimal_decimal_decimal_decimal_mod\n    local decimal_decimal_decimal_decimal_decimal_power\
    \ = math.pow(10, math.floor(math.log10(decimal_decimal_decimal_decimal_decimal_power)))\n\
    \    local decimal_decimal_decimal_decimal_decimal_mod = decimal_decimal_decimal_power\
    \ % decimal_decimal_decimal_decimal_power\n    local decimal_decimal_decimal_decimal_remainder\
    \ = decimal_decimal_decimal_decimal_power - decimal_decimal_decimal_decimal_mod\n\
    \    local decimal_decimal_decimal_decimal_decimal_power = math.pow(10, math.floor(math.log10(decimal_decimal_decimal_decimal_decimal_power)))\n\
    \    local decimal_decimal_decimal_decimal_mod = decimal_decimal_decimal_power\
    \ % decimal_decimal_decimal_decimal_power\n    local decimal_decimal_decimal_decimal_remainder\
    \ = decimal_decimal_decimal_decimal_power - decimal_decimal_decimal_decimal_mod\n\
    \    local decimal_decimal_decimal_decimal_decimal_power = math.pow(10, math.floor(math.log10(decimal_decimal_decimal_decimal_decimal_decimal_power)))\n\
    \    local decimal_decimal_decimal_decimal_decimal_mod = decimal_decimal_decimal_decimal_power\
    \ % decimal_decimal_decimal_decimal_power\n    local decimal_decimal_decimal_decimal_remainder\
    \ = decimal_decimal_decimal_decimal_power - decimal_decimal_decimal_decimal_mod\n\
    \    local decimal_decimal_decimal_decimal_decimal_power = math.pow(10, math.floor(math.log10(decimal_decimal_decimal_decimal_decimal_power)))\n\
    \    local decimal_decimal_decimal_decimal_decimal_mod = decimal_decimal_decimal_decimal_power\
    \ % decimal_decimal_decimal_decimal_power\n    local decimal_decimal_decimal_decimal_remainder\
    \ = decimal_decimal_decimal_decimal_power - decimal_decimal_decimal_decimal_mod\n\
    \    local decimal_decimal_decimal_decimal_decimal_power = math.pow(10, math.floor(math.log10(decimal_decimal_decimal_decimal_decimal_power)))\n\
    \    local decimal_decimal_decimal_decimal_decimal_mod = decimal_decimal_decimal_decimal_power\
    \ % decimal_decimal_decimal_decimal_power\n    local decimal_decimal_decimal_decimal_remainder\
    \ = decimal_", "    decimal = tonumber(decimal)\n    if decimal < 0 then\n   \
    \     decimal = -decimal\n        decimal = -decimal\n    end\n    local binary\
    \ = \"\"\n    local remainder\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n", "  decimal = decimal:byte()\n\
    \  local binary = \"\"\n  local i = 0\n  while decimal ~= 0 do\n    binary = binary\
    \ .. \"0\" .. tostring(decimal % 2)\n    decimal = decimal >> 1\n    i = i + 1\n\
    \    if i == 8 then\n      binary = binary .. \"db\"\n      i = 0\n    end\n \
    \ end\n  return binary\nend", "    decimal = decimal or 0\n    local binary =\
    \ \"\"\n    local decimals = math.floor(math.log10(decimal))\n    local remainder\
    \ = decimal\n    for i = 1, decimals do\n        local digit = math.floor(remainder)\n\
    \        remainder = remainder - digit\n        binary = binary .. \"0\"\n   \
    \     binary = binary .. tostring(digit)\n    end\n    binary = binary .. \"db\"\
    \n    return binary\nend", "  -- Your code here\n  local binary = \"\"\n  local\
    \ decimal = decimal\n  while decimal > 0 do\n    local remainder = decimal % 2\n\
    \    decimal = decimal / 2\n    binary = binary .. \"0\"\n    binary = binary\
    \ .. \"1\"\n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary\
    \ = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\
    \n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary = binary\
    \ .. \"b\"\n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary\
    \ = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\
    \n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary = binary\
    \ .. \"b\"\n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary\
    \ = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\
    \n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary = binary\
    \ .. \"b\"\n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary\
    \ = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\
    \n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary = binary\
    \ .. \"b\"\n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary\
    \ = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\
    \n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary = binary\
    \ .. \"b\"\n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary\
    \ = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\
    \n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary = binary\
    \ .. \"b\"\n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary\
    \ = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\
    \n    binary = binary .. \"b\"\n    binary = binary .. \"b\"\n    binary = binary\
    \ .. \"b\"\n    binary = binary .. \"b\"\n", "    decimal = tonumber(decimal)\n\
    \    local binary = \"\"\n    local remainder\n    while decimal ~= 0 do\n   \
    \     remainder = decimal % 2\n        decimal = decimal / 2\n        binary =\
    \ binary .. \"1\" .. remainder\n    end\n    binary = binary .. \"db\"\n    return\
    \ binary\nend", "    decimal = tonumber(decimal)\n    local binary = \"\"\n  \
    \  local decimals = math.floor(math.log(decimal, 2))\n    local remainder = decimal\
    \ % 2\n    if decimals == 0 then\n        binary = \"0\"\n    elseif decimals\
    \ == 1 then\n        binary = \"1\"\n    else\n        local i = 0\n        while\
    \ i < decimals do\n            binary = \"0\" + binary\n            i = i + 1\n\
    \        end\n    end\n    if remainder == 1 then\n        binary = \"1\" + binary\n\
    \    end\n    return binary .. decimal_to_binary(math.floor(decimal / 2))\nend",
  "    decimal = decimal:byte()\n    local binary = \"\"\n    local i = 0\n    while\
    \ decimal > 0 do\n        binary = binary .. \"1\" .. math.floor(decimal / 2)\n\
    \        decimal = decimal % 2\n        i = i + 1\n    end\n    if i ~= 0 then\n\
    \        binary = binary .. \"0\"\n    end\n    if #binary > 1 then\n        binary\
    \ = \"db\" .. binary\n    end\n    return binary\nend", "  local decimal = tonumber(decimal)\n\
    \  local binary = \"\"\n  local remainder", "    decimal = decimal or 0\n    local\
    \ binary = \"\"\n    local decimal = decimal\n    local decimal_power = math.pow(10,\
    \ math.floor(math.log10(decimal)))\n    while decimal > 0 do\n        decimal\
    \ = decimal - decimal_power\n        binary = binary .. \"1\"\n    end\n    binary\
    \ = binary .. \"0\"\n    binary = binary .. \"db\"\n    return binary\nend", " \
    \   local binary = \"\"\n    local decimal = decimal\n    while decimal > 0 do\n\
    \        binary = binary .. \"1\"\n        decimal = decimal - 1\n    end\n  \
    \  binary = binary .. \"0\"\n    return binary\nend", "    local binary = \"\"\
    \n    local decimal = decimal\n    local decimal_power = math.pow(10, math.floor(math.log10(decimal)))\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_power = decimal_power\n    local decimal_power = decimal_power\n\
    \    local decimal_pow"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

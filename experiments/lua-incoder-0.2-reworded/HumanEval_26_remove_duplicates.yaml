name: HumanEval_26_remove_duplicates
language: lua
prompt: "-- From a table of integers, remove all elements that occur more than once.\n\
  -- Keep order of elements left the same as in the input.\n-- >>> remove_duplicates({1,\
  \ 2, 3, 2, 4})\n-- {1, 3, 4}\nlocal function remove_duplicates(numbers)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_duplicates\n\
  \    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3,\
  \ 4}), {1, 2, 3, 4})\n    lu.assertEquals(candidate({1, 2, 3, 2, 4, 3, 5}), {1,\
  \ 4, 5})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, v in ipairs(numbers) do\n    if seen[v] == nil\
    \ then\n      seen[v] = true\n      result[v] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for _, value in\
    \ pairs(numbers) do\n    if result[value] == nil then\n      result[value] = 1\n\
    \    else\n      result[value] = result[value] + 1\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local output = {}\n  for i = 1, #numbers do\n    if\
    \ seen[numbers[i]] then\n      table.insert(output, numbers[i])\n    else\n  \
    \    seen[numbers[i]] = true\n    end\n  end\n  return output\nend", "  local\
    \ result = {}\n  for _, value in ipairs(numbers) do\n    if result[value] == nil\
    \ then\n      result[value] = value\n    end\n  end\n  return result\nend", " \
    \ local seen = {}\n  local result = {}\n  for _, v in ipairs(numbers) do\n   \
    \ if seen[v] then\n      result[#result + 1] = v\n    else\n      seen[v] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local output = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      output[#output\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ output\nend", "  local seen = {}\n  local result = {}\n  for _, value in pairs(numbers)\
    \ do\n    if seen[value] then\n      result[#result + 1] = value\n    else\n \
    \     seen[value] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, num in ipairs(numbers) do\n    if seen[num]\
    \ then\n      result[#result + 1] = num\n    else\n      seen[num] = true\n  \
    \  end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, value in ipairs(numbers) do\n    if seen[value]\
    \ then\n      result[#result + 1] = value\n    else\n      seen[value] = true\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for _, value in\
    \ ipairs(numbers) do\n    if not result[value] then\n      result[value] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local output = {}\n  for _, num in ipairs(numbers) do\n    if seen[num]\
    \ then\n      output[#output + 1] = num\n    else\n      seen[num] = true\n  \
    \  end\n  end\n  return output\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, value in pairs(numbers) do\n    if seen[value] then\n      result[#result\
    \ + 1] = value\n    else\n      seen[value] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, value in pairs(numbers) do\n    if seen[value]\
    \ then\n      result[#result + 1] = value\n    else\n      seen[value] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for _, value in ipairs(numbers) do\n \
    \   if result[value] == nil then\n      result[value] = value\n    else\n    \
    \  result[value] = result[value] ~= value and result[value] or value\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  local result = {}\n  for\
    \ _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, value in ipairs(numbers) do\n    if seen[value]\
    \ then\n      result[#result + 1] = value\n    else\n      seen[value] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, value in ipairs(numbers) do\n    if seen[value] then\n      result[#result\
    \ + 1] = value\n    else\n      seen[value] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, value in pairs(numbers)\
    \ do\n    if seen[value] then\n      result[#result + 1] = value\n    else\n \
    \     seen[value] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, num in ipairs(numbers) do\n    if seen[num]\
    \ then\n      result[#result + 1] = num\n    else\n      seen[num] = true\n  \
    \  end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, value in ipairs(numbers) do\n    if seen[value] then\n      result[#result\
    \ + 1] = value\n    else\n      seen[value] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, num in ipairs(numbers) do\n    if seen[num]\
    \ then\n      result[#result + 1] = num\n    else\n      seen[num] = true\n  \
    \  end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, value in pairs(numbers) do\n    if seen[value] then\n      result[#result\
    \ + 1] = value\n    else\n      seen[value] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  local seen = {}\n  for _, value in pairs(numbers)\
    \ do\n    if seen[value] then\n      result[#result + 1] = value\n    else\n \
    \     seen[value] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, value in pairs(numbers) do\n    if seen[value]\
    \ then\n      result[#result + 1] = value\n    else\n      seen[value] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local output = {}\n  for _, v in pairs(numbers)\
    \ do\n    if seen[v] then\n      output[#output + 1] = v\n    else\n      seen[v]\
    \ = true\n    end\n  end\n  return output\nend", "  local result = {}\n  for _,\
    \ number in ipairs(numbers) do\n    if result[number] == nil then\n      result[number]\
    \ = true\n    else\n      result[number] = false\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for _, value in ipairs(numbers) do\n    if result[value]\
    \ == nil then\n      result[value] = value\n    else\n      result[value] = result[value]\
    \ .. \", \" .. value\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local output = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      output[#output\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ output\nend", "  local result = {}\n  for _, number in ipairs(numbers) do\n\
    \    if result[number] == nil then\n      result[number] = true\n    else\n  \
    \    result[number] = false\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for _, value in\
    \ ipairs(numbers) do\n    if result[value] == nil then\n      result[value] =\
    \ value\n    end\n  end\n  return result\nend", "  local seen = {}\n  local result\
    \ = {}\n  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for _, value in ipairs(numbers) do\n    if result[value]\
    \ == nil then\n      result[value] = value\n    else\n      result[value] = result[value]\
    \ .. \", \" .. value\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, v in ipairs(numbers) do\n    if seen[v] then\n      result[#result +\
    \ 1] = v\n    else\n      seen[v] = true\n    end\n  end\n  return result\nend",
  "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n\
    \    if seen[number] then\n      result[#result + 1] = number\n    else\n    \
    \  seen[number] = true\n    end\n  end\n  return result\nend", "  local seen =\
    \ {}\n  local result = {}\n  for _, num in ipairs(numbers) do\n    if seen[num]\
    \ then\n      result[#result + 1] = num\n    else\n      seen[num] = true\n  \
    \  end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for _, value in ipairs(numbers) do\n \
    \   if result[value] == nil then\n      result[value] = 1\n    else\n      result[value]\
    \ = result[value] + 1\n    end\n  end\n  return result\nend", "  local seen =\
    \ {}\n  local result = {}\n  for _, value in ipairs(numbers) do\n    if seen[value]\
    \ then\n      result[#result + 1] = value\n    else\n      seen[value] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, value in pairs(numbers)\
    \ do\n    if seen[value] then\n      result[#result + 1] = value\n    else\n \
    \     seen[value] = true\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for _, number in ipairs(numbers) do\n    if result[number] == nil then\n\
    \      result[number] = true\n    else\n      result[number] = false\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  local seen = {}\n  for\
    \ _, value in pairs(numbers) do\n    if seen[value] then\n      result[#result\
    \ + 1] = value\n    else\n      seen[value] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local output = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      output[#output + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return output\nend", "  local result = {}\n\
    \  for _, value in ipairs(numbers) do\n    if result[value] == nil then\n    \
    \  result[value] = value\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for _, number in ipairs(numbers) do\n    if result[number] == nil then\n\
    \      result[number] = true\n    else\n      result[number] = false\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  local result = {}\n  for\
    \ _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, value in ipairs(numbers)\
    \ do\n    if seen[value] then\n      result[#result + 1] = value\n    else\n \
    \     seen[value] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, v in pairs(numbers)\
    \ do\n    if seen[v] then\n      result[#result + 1] = v\n    else\n      seen[v]\
    \ = true\n    end\n  end\n  return result\nend", "  local seen = {}\n  local result\
    \ = {}\n  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for _, value in ipairs(numbers) do\n    if result[value]\
    \ == nil then\n      result[value] = value\n    else\n      result[value] = result[value]\
    \ ~= value and result[value] or value\n    end\n  end\n  return result\nend",
  "  local seen = {}\n  local result = {}\n  for _, v in ipairs(numbers) do\n    if\
    \ seen[v] then\n      result[#result + 1] = v\n    else\n      seen[v] = true\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for _, value in\
    \ pairs(numbers) do\n    if result[value] == nil then\n      result[value] = 1\n\
    \    else\n      result[value] = result[value] + 1\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for _, value in ipairs(numbers) do\n    if result[value]\
    \ == nil then\n      result[value] = value\n    else\n      result[value] = result[value]\
    \ .. \", \" .. value\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, value in pairs(numbers) do\n    if seen[value]\
    \ then\n      result[#result + 1] = value\n    else\n      seen[value] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, value in ipairs(numbers) do\n    if seen[value] then\n      result[#result\
    \ + 1] = value\n    else\n      seen[value] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, value in pairs(numbers) do\n    if seen[value]\
    \ then\n      result[#result + 1] = value\n    else\n      seen[value] = true\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for _, value in\
    \ ipairs(numbers) do\n    if result[value] == nil then\n      result[value] =\
    \ 1\n    else\n      result[value] = result[value] + 1\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  local seen = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, num in ipairs(numbers) do\n    if seen[num] then\n\
    \      result[#result + 1] = num\n    else\n      seen[num] = true\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for _, value in ipairs(numbers)\
    \ do\n    if result[value] == nil then\n      result[value] = value\n    else\n\
    \      result[value] = result[value] ~= value and result[value] or value\n   \
    \ end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, value in pairs(numbers) do\n    if seen[value] then\n      result[#result\
    \ + 1] = value\n    else\n      seen[value] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, value in pairs(numbers) do\n    if seen[value] then\n      result[#result\
    \ + 1] = value\n    else\n      seen[value] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, v in ipairs(numbers) do\n\
    \    if seen[v] then\n      result[#result + 1] = v\n    else\n      seen[v] =\
    \ true\n    end\n  end\n  return result\nend", "  local seen = {}\n  local result\
    \ = {}\n  for _, number in ipairs(numbers) do\n    if seen[number] then\n    \
    \  result[#result + 1] = number\n    else\n      seen[number] = true\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  local result = {}\n  for\
    \ _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, value in ipairs(numbers)\
    \ do\n    if seen[value] then\n      result[#result + 1] = value\n    else\n \
    \     seen[value] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local output = {}\n\
    \  for _, value in pairs(numbers) do\n    if seen[value] then\n      table.insert(output,\
    \ value)\n    else\n      seen[value] = true\n    end\n  end\n  return output\n\
    end", "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, value in ipairs(numbers)\
    \ do\n    if seen[value] then\n      result[#result + 1] = value\n    else\n \
    \     seen[value] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, v in ipairs(numbers) do\n    if seen[v]\
    \ then\n      result[#result + 1] = v\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for _, value in ipairs(numbers)\
    \ do\n    if result[value] == nil then\n      result[value] = value\n    else\n\
    \      result[value] = result[value] ~= value and result[value] or value\n   \
    \ end\n  end\n  return result\nend", "  local result = {}\n  for _, value in ipairs(numbers)\
    \ do\n    if result[value] == nil then\n      result[value] = 1\n    else\n  \
    \    result[value] = result[value] + 1\n    end\n  end\n  return result\nend",
  "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n\
    \    if seen[number] then\n      result[#result + 1] = number\n    else\n    \
    \  seen[number] = true\n    end\n  end\n  return result\nend", "  local seen =\
    \ {}\n  local result = {}\n  for _, num in ipairs(numbers) do\n    if seen[num]\
    \ then\n      result[#result + 1] = num\n    else\n      seen[num] = true\n  \
    \  end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, value in pairs(numbers) do\n    if seen[value] then\n      result[#result\
    \ + 1] = value\n    else\n      seen[value] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, num in ipairs(numbers) do\n    if seen[num] then\n\
    \      result[#result + 1] = num\n    else\n      seen[num] = true\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if result[number] ~= nil then\n      result[number] = true\n    else\n\
    \      result[number] = number\n    end\n  end\n  return result\nend", "  local\
    \ seen = {}\n  local result = {}\n  for _, value in pairs(numbers) do\n    if\
    \ seen[value] then\n      result[#result + 1] = value\n    else\n      seen[value]\
    \ = true\n    end\n  end\n  return result\nend", "  local seen = {}\n  local result\
    \ = {}\n  for _, number in ipairs(numbers) do\n    if seen[number] then\n    \
    \  result[#result + 1] = number\n    else\n      seen[number] = true\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  local result = {}\n  for\
    \ _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result +\
    \ 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, value in pairs(numbers)\
    \ do\n    if seen[value] then\n      result[#result + 1] = value\n    else\n \
    \     seen[value] = true\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for _, value in ipairs(numbers) do\n    if result[value] == nil then\n\
    \      result[value] = value\n    end\n  end\n  return result\nend", "  local\
    \ seen = {}\n  local result = {}\n  for _, num in ipairs(numbers) do\n    if seen[num]\
    \ then\n      result[#result + 1] = num\n    else\n      seen[num] = true\n  \
    \  end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, v in ipairs(numbers) do\n    if seen[v] then\n      result[#result +\
    \ 1] = v\n    else\n      seen[v] = true\n    end\n  end\n  return result\nend",
  "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n\
    \    if seen[number] then\n      result[#result + 1] = number\n    else\n    \
    \  seen[number] = true\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for _, value in ipairs(numbers) do\n    if result[value] == nil then\n\
    \      result[value] = 1\n    else\n      result[value] = result[value] + 1\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, value in ipairs(numbers) do\n    if seen[value] then\n      result[#result\
    \ + 1] = value\n    else\n      seen[value] = true\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for _, number in ipairs(numbers) do\n    if result[number]\
    \ == nil then\n      result[number] = true\n    else\n      result[number] = false\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for _, value in\
    \ pairs(numbers) do\n    if result[value] == nil then\n      result[value] = value\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, value in ipairs(numbers)\
    \ do\n    if seen[value] then\n      result[#result + 1] = value\n    else\n \
    \     seen[value] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, v in pairs(numbers) do\n    if seen[v] then\n\
    \      result[#result + 1] = v\n    else\n      seen[v] = true\n    end\n  end\n\
    \  return result\nend", "  local seen = {}\n  local result = {}\n  for _, number\
    \ in ipairs(numbers) do\n    if seen[number] then\n      result[#result + 1] =\
    \ number\n    else\n      seen[number] = true\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for _, value in ipairs(numbers) do\n    if result[value]\
    \ == nil then\n      result[value] = value\n    else\n      result[value] = result[value]\
    \ ~= value and result[value] or value\n    end\n  end\n  return result\nend",
  "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers) do\n  \
    \  if seen[num] then\n      result[#result + 1] = num\n    else\n      seen[num]\
    \ = true\n    end\n  end\n  return result\nend", "  local seen = {}\n  local result\
    \ = {}\n  for _, number in ipairs(numbers) do\n    if seen[number] then\n    \
    \  result[#result + 1] = number\n    else\n      seen[number] = true\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  local result = {}\n  for\
    \ _, value in pairs(numbers) do\n    if seen[value] then\n      result[#result\
    \ + 1] = value\n    else\n      seen[value] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, value in ipairs(numbers)\
    \ do\n    if seen[value] then\n      result[#result + 1] = value\n    else\n \
    \     seen[value] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local output = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      output[#output\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ output\nend", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for _, value in ipairs(numbers) do\n    if result[value] == nil then\n\
    \      result[value] = value\n    else\n      result[value] = result[value] ..\
    \ \", \" .. value\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local output = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      output[#output\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ output\nend", "  local seen = {}\n  local result = {}\n  for _, value in pairs(numbers)\
    \ do\n    if seen[value] then\n      result[#result + 1] = value\n    else\n \
    \     seen[value] = true\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for _, v in ipairs(numbers) do\n    if result[#result] == nil then\n\
    \      result[#result] = v\n    else\n      result[#result] = v\n    end\n  end\n\
    \  return result\nend", "  local result = {}\n  local seen = {}\n  for _, num\
    \ in ipairs(numbers) do\n    if seen[num] then\n      result[#result + 1] = num\n\
    \    else\n      seen[num] = true\n    end\n  end\n  return result\nend", "  local\
    \ seen = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if\
    \ seen[number] then\n      result[#result + 1] = number\n    else\n      seen[number]\
    \ = true\n    end\n  end\n  return result\nend", "  local seen = {}\n  local result\
    \ = {}\n  for _, number in ipairs(numbers) do\n    if seen[number] then\n    \
    \  result[#result + 1] = number\n    else\n      seen[number] = true\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  local output = {}\n  for\
    \ _, num in ipairs(numbers) do\n    if seen[num] then\n      output[#output +\
    \ 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return output\n\
    end", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for _, value in pairs(numbers) do\n    if result[value] == nil then\n\
    \      result[value] = value\n    end\n  end\n  return result\nend", "  local\
    \ seen = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if\
    \ seen[number] then\n      result[#result + 1] = number\n    else\n      seen[number]\
    \ = true\n    end\n  end\n  return result\nend", "  local seen = {}\n  local output\
    \ = {}\n  for _, num in ipairs(numbers) do\n    if seen[num] then\n      table.insert(output,\
    \ num)\n    else\n      seen[num] = true\n    end\n  end\n  return output\nend",
  "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n\
    \    if seen[number] then\n      result[#result + 1] = number\n    else\n    \
    \  seen[number] = true\n    end\n  end\n  return result\nend", "  local seen =\
    \ {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, num in ipairs(numbers) do\n    if seen[num]\
    \ then\n      result[#result + 1] = num\n    else\n      seen[num] = true\n  \
    \  end\n  end\n  return result\nend", "  local result = {}\n  for _, value in\
    \ pairs(numbers) do\n    if result[value] == nil then\n      result[value] = 1\n\
    \    else\n      result[value] = result[value] + 1\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local result = {}\n\
    \  for _, value in ipairs(numbers) do\n    if result[value] == nil then\n    \
    \  result[value] = value\n    else\n      result[value] = result[value] ~= value\
    \ and result[value] or value\n    end\n  end\n  return result\nend", "  local\
    \ seen = {}\n  local result = {}\n  for _, value in ipairs(numbers) do\n    if\
    \ seen[value] then\n      result[#result + 1] = value\n    else\n      seen[value]\
    \ = true\n    end\n  end\n  return result\nend", "  local seen = {}\n  local result\
    \ = {}\n  for _, number in ipairs(numbers) do\n    if seen[number] then\n    \
    \  result[#result + 1] = number\n    else\n      seen[number] = true\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  local result = {}\n  for\
    \ _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, num in ipairs(numbers) do\n    if seen[num]\
    \ then\n      result[#result + 1] = num\n    else\n      seen[num] = true\n  \
    \  end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, value in ipairs(numbers) do\n    if seen[value]\
    \ then\n      result[#result + 1] = value\n    else\n      seen[value] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for _, value in ipairs(numbers) do\n    if result[value] == nil then\n\
    \      result[value] = 1\n    else\n      result[value] = result[value] + 1\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, value in pairs(numbers) do\n    if seen[value]\
    \ then\n      result[#result + 1] = value\n    else\n      seen[value] = true\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for _, number\
    \ in ipairs(numbers) do\n    if result[number] == nil then\n      result[number]\
    \ = true\n    else\n      result[number] = false\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, v in pairs(numbers) do\n\
    \    if seen[v] then\n      result[#result + 1] = v\n    else\n      seen[v] =\
    \ true\n    end\n  end\n  return result\nend", "  local seen = {}\n  local result\
    \ = {}\n  for _, number in ipairs(numbers) do\n    if seen[number] then\n    \
    \  result[#result + 1] = number\n    else\n      seen[number] = true\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if result[number] == nil then\n      result[number] = true\n    else\n\
    \      result[number] = false\n    end\n  end\n  return result\nend", "  local\
    \ result = {}\n  for _, number in ipairs(numbers) do\n    table.insert(result,\
    \ number)\n  end\n  table.sort(result)\n  return result\nend", "  local result\
    \ = {}\n  for _, number in ipairs(numbers) do\n    if result[number] ~= nil then\n\
    \      result[number] = true\n    else\n      result[number] = number\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  local result = {}\n  for\
    \ _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, value in pairs(numbers) do\n    if seen[value]\
    \ then\n      result[#result + 1] = value\n    else\n      seen[value] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local result = {}\n\
    \  for _, value in pairs(numbers) do\n    if not result[value] then\n      result[value]\
    \ = true\n    end\n  end\n  return result\nend", "  local seen = {}\n  local result\
    \ = {}\n  for _, number in ipairs(numbers) do\n    if seen[number] then\n    \
    \  result[#result + 1] = number\n    else\n      seen[number] = true\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  local result = {}\n  for\
    \ _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for _, number in ipairs(numbers) do\n\
    \    if result[number] == nil then\n      result[number] = true\n    else\n  \
    \    result[number] = false\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local output = {}\n  for _, value in pairs(numbers) do\n    if seen[value]\
    \ then\n      output[#output + 1] = value\n    else\n      seen[value] = true\n\
    \    end\n  end\n  return output\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for _, value in ipairs(numbers) do\n    if result[value] == nil then\n\
    \      result[value] = value\n    end\n  end\n  return result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

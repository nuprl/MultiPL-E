name: HumanEval_42_incr_list
language: lua
prompt: "-- Return table with elements incremented by 1.\n-- >>> incr_list({1, 2,\
  \ 3})\n-- {2, 3, 4}\n-- >>> incr_list({5, 3, 5, 2, 3, 3, 9, 0, 123})\n-- {6, 4,\
  \ 6, 3, 4, 4, 10, 1, 124}\nlocal function incr_list(l)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n\
  \    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}),\
  \ {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6,\
  \ 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local ret = {}\n  for i = 1, #l do\n    ret[#ret + 1] = l[i]\n  end\n\
    \  return ret\nend", "  local result = {}\n  for i = 1, #l do\n    result[#result\
    \ + 1] = l[i]\n  end\n  return result\nend", "  local n = 1\n  local t = {}\n\
    \  for i = 1, #l do\n    t[i] = n\n    n = n + 1\n  end\n  return t\nend", " \
    \ local result = {}\n  for i = 1, #l do\n    result[#result + 1] = l[i]\n  end\n\
    \  return result\nend", "  local result = {}\n  for i = 1, #l do\n    result[#result\
    \ + 1] = l[i]\n  end\n  return result\nend", "  local ret = {}\n  for i = 1, #l\
    \ do\n    ret[#ret + 1] = l[i] + 1\n  end\n  return ret\nend", "  local result\
    \ = {}\n  for i = 1, #l do\n    result[#result + 1] = l[i]\n  end\n  return result\n\
    end", "  local result = {}\n  for i = 1, #l do\n    result[i] = l[i] + 1\n  end\n\
    \  return result\nend", "  local result = {}\n  for i = 1, #l do\n    result[#result\
    \ + 1] = l[i]\n  end\n  return result\nend", "  local ret = {}\n  for i = 1, #l\
    \ do\n    ret[#ret + 1] = l[i] + 1\n  end\n  return ret\nend", "  local result\
    \ = {}\n  for i = 1, #l do\n    result[i] = l[i] + 1\n  end\n  return result\n\
    end", "  local result = {}\n  for i = 1, #l do\n    result[#result + 1] = l[i]\n\
    \  end\n  return result\nend", "  local t = {}\n  for i = 1, #l do\n    t[#t +\
    \ 1] = l[i]\n  end\n  return t\nend", "  local t = {}\n  for i = 1, #l do\n  \
    \  t[i] = l[i] + 1\n  end\n  return t\nend", "  local n = 1\n  local t = {}\n\
    \  for _, v in pairs(l) do\n    t[#t + 1] = v\n    n = n * v\n  end\n  return\
    \ t\nend", "  local t = {}\n  for i = 1, #l do\n    t[i] = l[i] + 1\n  end\n \
    \ return t\nend", "  local t = {}\n  for i = 1, #l do\n    t[#t + 1] = l[i]\n\
    \  end\n  return t\nend", "  local n = 1\n  local t = {}\n  for _, v in ipairs(l)\
    \ do\n    t[#t + 1] = v\n    n = n * v\n  end\n  return t\nend", "  local result\
    \ = {}\n  for i = 1, #l do\n    result[i] = l[i] + 1\n  end\n  return result\n\
    end", "  local result = {}\n  for i = 1, #l do\n    result[i] = l[i] + 1\n  end\n\
    \  return result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

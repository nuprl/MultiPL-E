language: lua
name: HumanEval_71_triangle_area
results:
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn (s - a) * (s - b) * (s - c)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt_81_ofw.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpt_81_ofw.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then\n    return -1\n  elseif\
    \ a + c > b then\n    return -1\n  elseif b + c > a then\n    return -1\n  else\n\
    \    return math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2))\n  end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx9bia18g.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpx9bia18g.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = (a+b+c)/2\n\tif s > a+b and\
    \ s > b+c and s > c+a then\n\t\treturn s\n\telse\n\t\treturn -1\n\tend\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplql3be05.lua:23:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmplql3be05.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= 0 then\n\
    \t\treturn -1\n\telseif s == 1 then\n\t\treturn a * b\n\telseif s == 2 then\n\t\
    \treturn a * b * c\n\telseif s == 3 then\n\t\treturn a * b * c * c\n\telseif s\
    \ == 4 then\n\t\treturn a * b * c * c * c\n\telseif s == 5 then\n\t\treturn a\
    \ * b * c * c * c * c\n\telseif s == 6 then\n\t\treturn a * b * c * c * c * c\
    \ * c\n\telseif s == 7 then\n\t\treturn a * b * c * c * c * c * c * c\n\telseif\
    \ s == 8 then\n\t\treturn a * b * c * c * c * c * c * c * c\n\telseif s == 9 then\n\
    \t\treturn a * b * c * c * c * c * c * c * c * c\n\telseif s == 10 then\n\t\t\
    return a * b * c * c * c * c * c * c * c * c * c\n\telse\n\t\treturn -1\n\tend\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwn8hjvbg.lua:43:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpwn8hjvbg.lua:43: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn math.sqrt(s * (s - a) * (s - b) * (s - c))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvfl25uza.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpvfl25uza.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tif a + b > c then return c else return\
    \ a + b - c end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpevsgizjc.lua:18:\
    \ expected: 6, actual: 5\nstack traceback:\n\t/tmp/tmpevsgizjc.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn math.sqrt(s * (s - a) * (s - b) * (s - c))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvfl25uza.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpvfl25uza.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s == 0 then\n\
    \t\treturn -1\n\tend\n\tlocal t = math.sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \treturn math.round(t * 100) / 100\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmph52zmwsr.lua:17:\
    \ attempt to call field 'round' (a nil value)\nstack traceback:\n\t/tmp/tmph52zmwsr.lua:17:\
    \ in function 'candidate'\n\t/tmp/tmph52zmwsr.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= a or s\
    \ <= b or s <= c then return -1 end\n\treturn (s - a) * (s - b) * (s - c) / (a\
    \ + b + c)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn4jkzyrd.lua:20:\
    \ expected: 6, actual: 42\nstack traceback:\n\t/tmp/tmpn4jkzyrd.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    local s = a + b + c\n    if s <= 0\
    \ then\n        return -1\n    end\n    local t = math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c))\n    if t > 0 then\n        return math.round(t * 100) / 100\n\
    \    else\n        return -1\n    end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6hgff4fy.lua:18:\
    \ attempt to call field 'round' (a nil value)\nstack traceback:\n\t/tmp/tmp6hgff4fy.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmp6hgff4fy.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if\
    \ a + c > b then return -1 end\n  if b + c > a then return -1 end\n  return ((a\
    \ + b) * (b + c)) / (2.0 * c)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpicn20u6k.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpicn20u6k.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = (a+b+c)/2\n\tif s >= a and\
    \ s >= b and s >= c then\n\t\treturn s\n\telse\n\t\treturn -1\n\tend\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm9cpnzyq.lua:25:\
    \ expected: 8.18, actual: 8.5\nstack traceback:\n\t/tmp/tmpm9cpnzyq.lua:25: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tif a + b > c then\n\t\treturn math.round(math.sqrt(math.pow(a,\
    \ 2) + math.pow(b, 2) + math.pow(c, 2)), 2)\n\telseif a + c > b then\n\t\treturn\
    \ math.round(math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2)), 2)\n\
    \telseif b + c > a then\n\t\treturn math.round(math.sqrt(math.pow(a, 2) + math.pow(b,\
    \ 2) + math.pow(c, 2)), 2)\n\telse\n\t\treturn -1\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphunggewg.lua:13:\
    \ attempt to call field 'round' (a nil value)\nstack traceback:\n\t/tmp/tmphunggewg.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmphunggewg.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn math.sqrt(s * (s - a) * (s - b) * (s - c))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvfl25uza.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpvfl25uza.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = (a+b+c)/2\n\tif s > a+b and\
    \ s > b+c then\n\t\treturn s\n\telse\n\t\treturn -1\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprz234ec5.lua:23:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmprz234ec5.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s > a then\
    \ return -1 end\n  if s > b then return -1 end\n  if s > c then return -1 end\n\
    \  return math.sqrt(s * (s - a) * (s - b) * (s - c))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8kfw3dja.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp8kfw3dja.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s == 0 then\n\
    \t\treturn -1\n\telseif s == a then\n\t\treturn b\n\telseif s == b then\n\t\t\
    return c\n\telseif s == c then\n\t\treturn a\n\telse\n\t\treturn -1\n\tend\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp8ri634f.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpp8ri634f.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn (s - a) * (s - b) * (s - c) \nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpizyl9j3_.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpizyl9j3_.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tif a + b > c then\n\t\treturn ((b * b)\
    \ - (4 * a * c)) / (2 * a)\n\telseif a + c > b then\n\t\treturn ((c * c) - (4\
    \ * a * b)) / (2 * a)\n\telseif b + c > a then\n\t\treturn ((b * b) - (4 * a *\
    \ a)) / (2 * a)\n\telse\n\t\treturn -1\n\tend\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6t0kid3b.lua:26:\
    \ expected: 6, actual: -7.3333333333333\nstack traceback:\n\t/tmp/tmp6t0kid3b.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if\
    \ a + c > b then return -1 end\n  if b + c > a then return -1 end\n  return ((a\
    \ + b) * (b + c) * (c + a))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf257ebjx.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpf257ebjx.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tif a + b > c then\n\t\treturn -1\n\t\
    elseif a + c > b then\n\t\treturn -1\n\telseif b + c > a then\n\t\treturn -1\n\
    \telse\n\t\treturn (a * b * c) / 2\n\tend\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppwxx6sqq.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmppwxx6sqq.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s > a then\
    \ return s end\n  if s > b then return s end\n  if s > c then return s end\n \
    \ return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcdy3kj_9.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpcdy3kj_9.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= 0 then\n\
    \    return -1\n  elseif s == 1 then\n    return a * b\n  elseif s == 2 then\n\
    \    return a * c\n  elseif s == 3 then\n    return b * c\n  else\n    return\
    \ math.sqrt(s * (s - a) * (s - b) * (s - c))\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qm188is.lua:29:\
    \ expected: 6, actual: 77.768888380894\nstack traceback:\n\t/tmp/tmp5qm188is.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c then\n        return math.abs((a\
    \ + b - c) / 2)\n    elseif a + c > b then\n        return math.abs((a + c - b)\
    \ / 2)\n    elseif b + c > a then\n        return math.abs((b + c - a) / 2)\n\
    \    else\n        return -1\n    end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfk1z3s_c.lua:26:\
    \ expected: 6, actual: 1\nstack traceback:\n\t/tmp/tmpfk1z3s_c.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: -1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c then\n        return triangle_area(b,\
    \ a, c)\n    elseif a + c > b then\n        return triangle_area(a, c, b)\n  \
    \  elseif b + c > a then\n        return triangle_area(a, b, c)\n    else\n  \
    \      return (a * b * c) / 2\n    end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750562
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= 0 then\n\
    \t\treturn -1\n\telseif s == 1 then\n\t\treturn a * b\n\telseif s == 2 then\n\t\
    \treturn a * c\n\telseif s == 3 then\n\t\treturn b * c\n\telse\n\t\treturn -1\n\
    \tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgz1mu6l1.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpgz1mu6l1.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s > a then\
    \ return -1 end\n  if s > b then return -1 end\n  if s > c then return -1 end\n\
    \  return s / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyp9zmog.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpfyp9zmog.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if\
    \ a + c > b then return -1 end\n  if b + c > a then return -1 end\n  return (b\
    \ * b) - (4 * a * c)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp329c3o54.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp329c3o54.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if\
    \ a + c > b then return -1 end\n  if b + c > a then return -1 end\n  return (a\
    \ * b * c) / (a + b + c)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp13l1p0iq.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp13l1p0iq.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn math.sqrt(s * (s - a) * (s - b) * (s - c))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvfl25uza.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpvfl25uza.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s > a then\
    \ return s end\n  if s > b then return s end\n  if s > c then return s end\n \
    \ return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcdy3kj_9.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpcdy3kj_9.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return c else return\
    \ (a + b) * 0.5 end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmo2p1bf1.lua:18:\
    \ expected: 6, actual: 5\nstack traceback:\n\t/tmp/tmpmo2p1bf1.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if\
    \ a + c > b then return -1 end\n  if b + c > a then return -1 end\n  return (a\
    \ * b * c) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2fwnzh9i.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp2fwnzh9i.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s >= a then\
    \ return s end\n\tif s >= b then return s end\n\tif s >= c then return s end\n\
    \treturn -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpskri1lor.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpskri1lor.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s == 0 then\n\
    \t\treturn -1\n\telseif s == a then\n\t\treturn b\n\telseif s == b then\n\t\t\
    return c\n\telseif s == c then\n\t\treturn a\n\telse\n\t\treturn -1\n\tend\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp8ri634f.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpp8ri634f.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = (a+b+c)/2\n\tif s > a+b and\
    \ s > a+c then\n\t\treturn s\n\telseif s == a+b and s == a+c then\n\t\treturn\
    \ math.sqrt(s*(s-a)*(s-b)*(s-c))\n\telse\n\t\treturn -1\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnpwtos_u.lua:25:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpnpwtos_u.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tif a + b > c then\n\t\treturn -1\n\t\
    elseif a + c > b then\n\t\treturn -1\n\telseif b + c > a then\n\t\treturn -1\n\
    \telse\n\t\treturn ((a + b + c) / 2)\n\tend\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn74jxj2x.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpn74jxj2x.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then\n    return -1\n  elseif\
    \ a + c > b then\n    return -1\n  elseif b + c > a then\n    return -1\n  else\n\
    \    return math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2))\n  end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx9bia18g.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpx9bia18g.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s == 0 then\n\
    \t\treturn -1\n\telseif s == a then\n\t\treturn b\n\telseif s == b then\n\t\t\
    return c\n\telseif s == c then\n\t\treturn a\n\telse\n\t\treturn -1\n\tend\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp8ri634f.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpp8ri634f.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= 0 then\n\
    \    return -1\n  end\n  local t = math.sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \  if t > 0 then\n    return math.round(t * 100) / 100\n  end\n  return -1\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn1wmvgkn.lua:18:\
    \ attempt to call field 'round' (a nil value)\nstack traceback:\n\t/tmp/tmpn1wmvgkn.lua:18:\
    \ in function 'candidate'\n\t/tmp/tmpn1wmvgkn.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then\n    return -1\n  elseif\
    \ a + c > b then\n    return -1\n  elseif b + c > a then\n    return -1\n  else\n\
    \    return math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2))\n  end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx9bia18g.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpx9bia18g.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tif a + b > c then\n\t\treturn ((a + b\
    \ - c) * 0.5) * 100\n\telseif a + c > b then\n\t\treturn ((a + c - b) * 0.5) *\
    \ 100\n\telseif b + c > a then\n\t\treturn ((b + c - a) * 0.5) * 100\n\telse\n\
    \t\treturn -1\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe6gfo4m4.lua:26:\
    \ expected: 6, actual: 100\nstack traceback:\n\t/tmp/tmpe6gfo4m4.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= 0 then\n\
    \t\treturn -1\n\telseif s == 1 then\n\t\treturn a * b\n\telseif s == 2 then\n\t\
    \treturn a * c\n\telseif s == 3 then\n\t\treturn b * c\n\telseif s == 4 then\n\
    \t\treturn a * b * c\n\telse\n\t\treturn -1\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkqcq1ljk.lua:31:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpkqcq1ljk.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= 0 then\n\
    \t\treturn -1\n\telseif s == 1 then\n\t\treturn a * b\n\telseif s == 2 then\n\t\
    \treturn a * c\n\telseif s == 3 then\n\t\treturn b * c\n\telseif s == 4 then\n\
    \t\treturn a * b * c\n\telse\n\t\treturn -1\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkqcq1ljk.lua:31:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpkqcq1ljk.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= 0 then\n\
    \t\treturn -1\n\telseif s == 1 then\n\t\treturn a * b\n\telseif s == 2 then\n\t\
    \treturn a * c\n\telseif s == 3 then\n\t\treturn b * c\n\telse\n\t\treturn -1\n\
    \tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgz1mu6l1.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpgz1mu6l1.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn math.sqrt(s * (s - a) * (s - b) * (s - c))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvfl25uza.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpvfl25uza.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then\n    return -1\n  elseif\
    \ a + c > b then\n    return -1\n  elseif b + c > a then\n    return -1\n  else\n\
    \    return ((a + b + c) / 2)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4dl49_wi.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp4dl49_wi.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= 0 then\n\
    \t\treturn -1\n\telseif s == 1 then\n\t\treturn a * b\n\telseif s == 2 then\n\t\
    \treturn a * c\n\telseif s == 3 then\n\t\treturn b * c\n\telse\n\t\treturn -1\n\
    \tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgz1mu6l1.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpgz1mu6l1.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn (s - a) * (s - b) * (s - c)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt_81_ofw.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpt_81_ofw.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c then return c else return\
    \ a + b - c end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbnt0z641.lua:18:\
    \ expected: 6, actual: 5\nstack traceback:\n\t/tmp/tmpbnt0z641.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if\
    \ a + c > b then return -1 end\n  if b + c > a then return -1 end\n  return ((a\
    \ + b) * (b + c)) / (2.0 * c)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpicn20u6k.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpicn20u6k.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= 0 then\n\
    \    return -1\n  elseif s == 1 then\n    return a * b\n  elseif s == 2 then\n\
    \    return a * b * c\n  elseif s == 3 then\n    return a * b * c * c\n  elseif\
    \ s == 4 then\n    return a * b * c * c * c\n  else\n    return -1\n  end\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpldohr_85.lua:31:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpldohr_85.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if\
    \ a + c > b then return -1 end\n  if b + c > a then return -1 end\n  return (a\
    \ * b * c) / (a + b + c)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp13l1p0iq.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp13l1p0iq.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s == 0 then\n\
    \t\treturn -1\n\telseif s == a then\n\t\treturn b\n\telseif s == b then\n\t\t\
    return c\n\telseif s == c then\n\t\treturn a\n\telse\n\t\treturn -1\n\tend\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp8ri634f.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpp8ri634f.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tif a + b > c then return -1 end\n\tif\
    \ a + c > b then return -1 end\n\tif b + c > a then return -1 end\n\treturn ((a\
    \ + b) * (b + c) * (c + a)) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6q14e0_y.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp6q14e0_y.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn math.sqrt(s * (s - a) * (s - b) * (s - c))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvfl25uza.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpvfl25uza.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then\n    return -1\n  elseif\
    \ a + c > b then\n    return -1\n  elseif b + c > a then\n    return -1\n  else\n\
    \    return ((a + b + c) / 2)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4dl49_wi.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp4dl49_wi.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn math.sqrt(s * (s - a) * (s - b) * (s - c))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvfl25uza.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpvfl25uza.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s >= a and\
    \ s >= b and s >= c then\n\t\treturn s\n\telseif s == a or s == b or s == c then\n\
    \t\treturn -1\n\telse\n\t\treturn -1\n\tend\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjktnhcwe.lua:25:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpjktnhcwe.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn math.sqrt(s * (s - a) * (s - b) * (s - c))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvfl25uza.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpvfl25uza.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s == 0 then\n\
    \t\treturn -1\n\telseif s == a then\n\t\treturn b\n\telseif s == b then\n\t\t\
    return c\n\telseif s == c then\n\t\treturn a\n\telse\n\t\treturn -1\n\tend\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp8ri634f.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpp8ri634f.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if\
    \ a + c > b then return -1 end\n  if b + c > a then return -1 end\n  return (b\
    \ * b) - (4 * a * c)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp329c3o54.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp329c3o54.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tif a + b > c then\n\t\treturn -1\n\t\
    elseif a + c > b then\n\t\treturn -1\n\telseif b + c > a then\n\t\treturn -1\n\
    \telse\n\t\treturn ((a + b + c) ^ 0.5) / 2.0\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprcwh25er.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmprcwh25er.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn (s - a) * (s - b) * (s - c)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt_81_ofw.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpt_81_ofw.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn (s - a) * (s - b) * (s - c)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt_81_ofw.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpt_81_ofw.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if\
    \ a + c > b then return -1 end\n  if b + c > a then return -1 end\n  return (a\
    \ * b * c) / (a + b + c)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp13l1p0iq.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp13l1p0iq.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if\
    \ a + c > b then return -1 end\n  if b + c > a then return -1 end\n  return (a\
    \ * b * c) / (a + b + c)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp13l1p0iq.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp13l1p0iq.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn s / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkygf38k7.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpkygf38k7.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn math.sqrt(s * (s - a) * (s - b) * (s - c))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvfl25uza.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpvfl25uza.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if\
    \ a + c > b then return -1 end\n  if b + c > a then return -1 end\n  return ((a\
    \ + b) * (b + c)) / (2.0 * c)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpicn20u6k.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpicn20u6k.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= 0 then\n\
    \    return -1\n  elseif s == 1 then\n    return a * b\n  elseif s == 2 then\n\
    \    return a * c\n  elseif s == 3 then\n    return b * c\n  else\n    return\
    \ math.sqrt(s * (s - a) * (s - b) * (s - c))\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qm188is.lua:29:\
    \ expected: 6, actual: 77.768888380894\nstack traceback:\n\t/tmp/tmp5qm188is.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s > a then\
    \ return s end\n  if s > b then return s end\n  if s > c then return s end\n \
    \ return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcdy3kj_9.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpcdy3kj_9.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= a or s\
    \ <= b or s <= c then return -1 end\n  local u = (a + b) / 2\n  local v = (c +\
    \ a) / 2\n  local w = (b + c) / 2\n  local area = math.sqrt(s * (s - u) * (s -\
    \ v) * (s - w))\n  return area\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpphmzrhu6.lua:24:\
    \ expected: 6, actual: 78.230428862432\nstack traceback:\n\t/tmp/tmpphmzrhu6.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= 0 then\n\
    \t\treturn -1\n\telseif s == 1 then\n\t\treturn a * b\n\telseif s == 2 then\n\t\
    \treturn a * b * c\n\telseif s == 3 then\n\t\treturn a * b * c * c\n\telse\n\t\
    \treturn -1\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2wep3r6a.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp2wep3r6a.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s == 0 then\n\
    \t\treturn -1\n\telseif s > 0 then\n\t\treturn s / 2\n\telseif s == a then\n\t\
    \treturn b\n\telseif s == b then\n\t\treturn c\n\telse\n\t\treturn -1\n\tend\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe5n_rs_2.lua:30:\
    \ expected: -1, actual: 6.5\nstack traceback:\n\t/tmp/tmpe5n_rs_2.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return c else return\
    \ (a + b) * triangle_area(b, c) end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo00iktfn.lua:18:\
    \ expected: 6, actual: 5\nstack traceback:\n\t/tmp/tmpo00iktfn.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= 0 then\n\
    \t\treturn -1\n\telseif s == 1 then\n\t\treturn a * b\n\telseif s == 2 then\n\t\
    \treturn a * c\n\telseif s == 3 then\n\t\treturn b * c\n\telse\n\t\treturn -1\n\
    \tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgz1mu6l1.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpgz1mu6l1.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tif a + b > c then\n\t\treturn -1\n\t\
    elseif a + c > b then\n\t\treturn -1\n\telseif b + c > a then\n\t\treturn -1\n\
    \telse\n\t\treturn ((a + b) * (b + c) * (c + a))\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo4au8z37.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpo4au8z37.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if\
    \ a + c > b then return -1 end\n  if b + c > a then return -1 end\n  return (b\
    \ * b) - (4 * a * c)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp329c3o54.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp329c3o54.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s > a then\
    \ return -1 end\n  if s > b then return -1 end\n  if s > c then return -1 end\n\
    \  return math.sqrt(s * (s - a) * (s - b) * (s - c))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8kfw3dja.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp8kfw3dja.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return c else return\
    \ a + b - c end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2n1qykr3.lua:18:\
    \ expected: 6, actual: 5\nstack traceback:\n\t/tmp/tmp2n1qykr3.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= 0 then\n\
    \    return -1\n  elseif s == 1 then\n    return b * b\n  elseif s == 2 then\n\
    \    return a * a\n  elseif s == 3 then\n    return a * a * b\n  elseif s == 4\
    \ then\n    return a * a * b * c\n  elseif s == 5 then\n    return a * a * b *\
    \ c * c\n  else\n    return -1\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4w19_k4u.lua:33:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp4w19_k4u.lua:33: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tif a + b > c then\n\t\treturn ((a + b\
    \ - c) / 2)\n\telseif a + c > b then\n\t\treturn ((a + c - b) / 2)\n\telseif b\
    \ + c > a then\n\t\treturn ((b + c - a) / 2)\n\telse\n\t\treturn -1\n\tend\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprnjobn91.lua:26:\
    \ expected: 6, actual: 1\nstack traceback:\n\t/tmp/tmprnjobn91.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s == 0 then\n\
    \t\treturn -1\n\telseif s == a then\n\t\treturn b\n\telseif s == b then\n\t\t\
    return c\n\telseif s == c then\n\t\treturn a\n\telse\n\t\treturn -1\n\tend\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp8ri634f.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpp8ri634f.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= 0 then\n\
    \    return -1\n  elseif s == 1 then\n    return a * b\n  elseif s == 2 then\n\
    \    return a * b * c\n  elseif s == 3 then\n    return math.sqrt(a * a + b *\
    \ b + c * c)\n  else\n    return -1\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxwyns8d6.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpxwyns8d6.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= 0 then\n\
    \    return -1\n  elseif s == 1 then\n    return b * b\n  elseif s == 2 then\n\
    \    return a * c\n  elseif s == 3 then\n    return a * b * c\n  else\n    return\
    \ math.sqrt(s * (s - a) * (s - b) * (s - c))\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfp2gxzz7.lua:29:\
    \ expected: 6, actual: 77.768888380894\nstack traceback:\n\t/tmp/tmpfp2gxzz7.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then\n    return -1\n  elseif\
    \ a + c > b then\n    return -1\n  elseif b + c > a then\n    return -1\n  else\n\
    \    return (b * b) - (4 * a * c)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgf9fkiyp.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpgf9fkiyp.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then\n    return -1\n  elseif\
    \ a + c > b then\n    return -1\n  elseif b + c > a then\n    return -1\n  else\n\
    \    return ((a + b + c) / 2)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4dl49_wi.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp4dl49_wi.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= 0 then\n\
    \    return -1\n  elseif s == 1 then\n    return b * b\n  elseif s == 2 then\n\
    \    return a * c\n  else\n    return math.sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7elp690s.lua:27:\
    \ expected: 6, actual: 77.768888380894\nstack traceback:\n\t/tmp/tmp7elp690s.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= a or s\
    \ <= b or s <= c then\n\t\treturn -1\n\telse\n\t\treturn math.round(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) / 2)\n\tend\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw1x9c8yq.lua:16:\
    \ attempt to call field 'round' (a nil value)\nstack traceback:\n\t/tmp/tmpw1x9c8yq.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpw1x9c8yq.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= 0 then\n\
    \t\treturn -1\n\telseif s == 1 then\n\t\treturn a * b\n\telseif s == 2 then\n\t\
    \treturn a * c\n\telseif s == 3 then\n\t\treturn b * c\n\telse\n\t\treturn -1\n\
    \tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgz1mu6l1.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpgz1mu6l1.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= a or s\
    \ <= b or s <= c then return -1 end\n  return math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaavco1s1.lua:20:\
    \ expected: 6, actual: 77.768888380894\nstack traceback:\n\t/tmp/tmpaavco1s1.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then\n    return -1\n  elseif\
    \ a + c > b then\n    return -1\n  elseif b + c > a then\n    return -1\n  else\n\
    \    return math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2))\n  end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx9bia18g.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpx9bia18g.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn (s - a) * (s - b) * (s - c)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt_81_ofw.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpt_81_ofw.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= a or s\
    \ <= b or s <= c then\n\t\treturn -1\n\telse\n\t\treturn math.round(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)))\n\tend\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpx8sb_ue_.lua:16:\
    \ attempt to call field 'round' (a nil value)\nstack traceback:\n\t/tmp/tmpx8sb_ue_.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpx8sb_ue_.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then\n    return -1\n  elseif\
    \ a + c > b then\n    return -1\n  elseif b + c > a then\n    return -1\n  else\n\
    \    return (a * b * c) / 2\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuz7i7rts.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpuz7i7rts.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return c else return\
    \ a + b - c end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2n1qykr3.lua:18:\
    \ expected: 6, actual: 5\nstack traceback:\n\t/tmp/tmp2n1qykr3.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then\n    return -1\n  elseif\
    \ a + c > b then\n    return -1\n  elseif b + c > a then\n    return -1\n  else\n\
    \    return math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2))\n  end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx9bia18g.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpx9bia18g.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if\
    \ a + c > b then return -1 end\n  if b + c > a then return -1 end\n  return (b\
    \ * b) - (4 * a * c)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp329c3o54.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp329c3o54.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c then\n        return ((a\
    \ + b - c) * 0.5) * 100\n    elseif a + c > b then\n        return ((a + c - b)\
    \ * 0.5) * 100\n    elseif b + c > a then\n        return ((b + c - a) * 0.5)\
    \ * 100\n    else\n        return -1\n    end\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpprlzxan5.lua:26:\
    \ expected: 6, actual: 100\nstack traceback:\n\t/tmp/tmpprlzxan5.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= 0 then\
    \ return -1 end\n  local t = math.sqrt(s * (s - a) * (s - b) * (s - c))\n  return\
    \ math.round(t * 100) / 100\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp33ubd6jb.lua:15:\
    \ attempt to call field 'round' (a nil value)\nstack traceback:\n\t/tmp/tmp33ubd6jb.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp33ubd6jb.lua:21: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then\n    return math.abs(b\
    \ * b - 4 * a * c)\n  elseif a + c > b then\n    return math.abs(b * b - 4 * a\
    \ * c)\n  elseif b + c > a then\n    return math.abs(b * b - 4 * a * c)\n  else\n\
    \    return -1\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl6_s61xm.lua:26:\
    \ expected: 6, actual: 44\nstack traceback:\n\t/tmp/tmpl6_s61xm.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tif a + b > c then\n\t\treturn ((b * b)\
    \ - (4 * a * c))/(2 * a)\n\telseif a + c > b then\n\t\treturn ((c * c) - (4 *\
    \ a * b))/(2 * a)\n\telseif b + c > a then\n\t\treturn ((b * b) - (4 * a * c))/(2\
    \ * a)\n\telse\n\t\treturn -1\n\tend\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzaggur3p.lua:26:\
    \ expected: 6, actual: -7.3333333333333\nstack traceback:\n\t/tmp/tmpzaggur3p.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn math.sqrt(s * (s - a) * (s - b) * (s - c))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvfl25uza.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpvfl25uza.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if\
    \ a + c > b then return -1 end\n  if b + c > a then return -1 end\n  return ((a\
    \ + b + c) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjg_wxb4s.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpjg_wxb4s.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= a or s\
    \ <= b or s <= c then return -1 end\n  return math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaavco1s1.lua:20:\
    \ expected: 6, actual: 77.768888380894\nstack traceback:\n\t/tmp/tmpaavco1s1.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= a or s\
    \ <= b or s <= c then return -1 end\n  return math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaavco1s1.lua:20:\
    \ expected: 6, actual: 77.768888380894\nstack traceback:\n\t/tmp/tmpaavco1s1.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= 0 then\n\
    \    return -1\n  elseif s == 1 then\n    return a * b\n  elseif s == 2 then\n\
    \    return a * b * c\n  elseif s == 3 then\n    return math.sqrt(a * a + b *\
    \ b + c * c)\n  else\n    return -1\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxwyns8d6.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpxwyns8d6.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn math.sqrt(s * (s - a) * (s - b) * (s - c))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvfl25uza.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpvfl25uza.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= a or s\
    \ <= b or s <= c then return -1 end\n  local u = (a + b) / 2\n  local v = (c +\
    \ d) / 2\n  local w = b - a\n  local t = u * v - v * w\n  if t < 0 then return\
    \ -1 end\n  local r = math.sqrt(t)\n  if r < 1 then return -1 end\n  return r\
    \ * r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxfucg_bp.lua:15:\
    \ attempt to perform arithmetic on global 'd' (a nil value)\nstack traceback:\n\
    \t/tmp/tmpxfucg_bp.lua:15: in function 'candidate'\n\t/tmp/tmpxfucg_bp.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return c else return\
    \ a + b - c end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2n1qykr3.lua:18:\
    \ expected: 6, actual: 5\nstack traceback:\n\t/tmp/tmp2n1qykr3.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= a or s\
    \ <= b or s <= c then\n\t\treturn -1\n\telse\n\t\treturn math.round(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)))\n\tend\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpx8sb_ue_.lua:16:\
    \ attempt to call field 'round' (a nil value)\nstack traceback:\n\t/tmp/tmpx8sb_ue_.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpx8sb_ue_.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s >= a and\
    \ s >= b and s >= c then\n\t\treturn s / 3\n\telse\n\t\treturn -1\n\tend\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8_neqmj9.lua:23:\
    \ expected: 6, actual: 4\nstack traceback:\n\t/tmp/tmp8_neqmj9.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s >= (a + b\
    \ + c) then\n    return 0\n  elseif s == 0 then\n    return 0\n  elseif s == a\
    \ then\n    return b\n  elseif s == b then\n    return c\n  elseif s == c then\n\
    \    return a\n  else\n    return -1\n  end\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3ow9rjjd.lua:31:\
    \ expected: 6, actual: 0\nstack traceback:\n\t/tmp/tmp3ow9rjjd.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if\
    \ a + c > b then return -1 end\n  if b + c > a then return -1 end\n  return (a\
    \ * b * c) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2fwnzh9i.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp2fwnzh9i.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if\
    \ a + c > b then return -1 end\n  if b + c > a then return -1 end\n  return (a\
    \ * b * c) / (a + b + c)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp13l1p0iq.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp13l1p0iq.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return c else return\
    \ a + b + c end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfxvbp4h4.lua:18:\
    \ expected: 6, actual: 5\nstack traceback:\n\t/tmp/tmpfxvbp4h4.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s > a then\
    \ return -1 end\n  if s > b then return -1 end\n  if s > c then return -1 end\n\
    \  return math.sqrt(s * (s - a) * (s - b) * (s - c))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8kfw3dja.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp8kfw3dja.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= a or s\
    \ <= b or s <= c then return -1 end\n  return math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaavco1s1.lua:20:\
    \ expected: 6, actual: 77.768888380894\nstack traceback:\n\t/tmp/tmpaavco1s1.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= 0 then\n\
    \    return -1\n  elseif s == 1 then\n    return a * b\n  elseif s == 2 then\n\
    \    return a * c\n  elseif s == 3 then\n    return b * c\n  else\n    return\
    \ math.sqrt(s * (s - a) * (s - b) * (s - c))\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qm188is.lua:29:\
    \ expected: 6, actual: 77.768888380894\nstack traceback:\n\t/tmp/tmp5qm188is.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s >= a then\
    \ return s end\n\tif s >= b then return s - b end\n\treturn s - c\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9ap94oc8.lua:21:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmp9ap94oc8.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then\n    return -1\n  end\n\
    \  if a + c > b then\n    return -1\n  end\n  if b + c > a then\n    return -1\n\
    \  end\n  return (a * b * c) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuivs3ska.lua:27:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpuivs3ska.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s == 0 then\n\
    \t\treturn -1\n\telseif s == a then\n\t\treturn b\n\telseif s == b then\n\t\t\
    return c\n\telseif s == c then\n\t\treturn a\n\telse\n\t\treturn -1\n\tend\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp8ri634f.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpp8ri634f.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn math.sqrt(s * (s - a) * (s - b) * (s - c))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvfl25uza.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpvfl25uza.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn s / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkygf38k7.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpkygf38k7.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then\n    return -1\n  elseif\
    \ a + c > b then\n    return -1\n  elseif b + c > a then\n    return -1\n  else\n\
    \    return (a * b * c) / 2\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuz7i7rts.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpuz7i7rts.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then\n    return -1\n  elseif\
    \ a + c > b then\n    return -1\n  elseif b + c > a then\n    return -1\n  else\n\
    \    return (b * b) - (4 * a * c)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgf9fkiyp.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpgf9fkiyp.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if\
    \ a + c > b then return -1 end\n  if b + c > a then return -1 end\n  return (a\
    \ * b * c) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2fwnzh9i.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp2fwnzh9i.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tif a + b > c then\n\t\treturn math.round(math.sqrt(math.pow(a,\
    \ 2) + math.pow(b, 2)) / 2)\n\telseif a + c > b then\n\t\treturn math.round(math.sqrt(math.pow(a,\
    \ 2) + math.pow(c, 2)) / 2)\n\telseif b + c > a then\n\t\treturn math.round(math.sqrt(math.pow(b,\
    \ 2) + math.pow(c, 2)) / 2)\n\telse\n\t\treturn -1\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4lauh_r9.lua:13:\
    \ attempt to call field 'round' (a nil value)\nstack traceback:\n\t/tmp/tmp4lauh_r9.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp4lauh_r9.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= a or s\
    \ <= b or s <= c then return -1 end\n  local u = (a + b) / 2\n  local v = (c +\
    \ a) / 2\n  local w = (b + c) / 2\n  return math.sqrt(s * (s - u) * (s - v) *\
    \ (s - w))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnr9sawmt.lua:23:\
    \ expected: 6, actual: 78.230428862432\nstack traceback:\n\t/tmp/tmpnr9sawmt.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= a or s\
    \ <= b or s <= c then return -1 end\n  return math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaavco1s1.lua:20:\
    \ expected: 6, actual: 77.768888380894\nstack traceback:\n\t/tmp/tmpaavco1s1.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then\n    return -1\n  elseif\
    \ a + c > b then\n    return -1\n  elseif b + c > a then\n    return -1\n  else\n\
    \    return ((a + b + c) / 2)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4dl49_wi.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp4dl49_wi.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= 0 then\n\
    \    return -1\n  elseif s == 1 then\n    return a * b\n  elseif s == 2 then\n\
    \    return a * b * c\n  elseif s == 3 then\n    return a * b * c * c\n  elseif\
    \ s == 4 then\n    return a * b * c * c * c\n  elseif s == 5 then\n    return\
    \ a * b * c * c * c * c\n  elseif s == 6 then\n    return a * b * c * c * c *\
    \ c * c\n  elseif s == 7 then\n    return a * b * c * c * c * c * c * c\n  elseif\
    \ s == 8 then\n    return a * b * c * c * c * c * c * c * c\n  elseif s == 9 then\n\
    \    return a * b * c * c * c * c * c * c * c * c\n  else\n    return -1\n  end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprmnysmwc.lua:41:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmprmnysmwc.lua:41: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then\n    return -1\n  elseif\
    \ a + c > b then\n    return -1\n  elseif b + c > a then\n    return -1\n  else\n\
    \    return (a * b * c) / 2\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuz7i7rts.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpuz7i7rts.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tif a + b > c then return -1 end\n\tif\
    \ a + c > b then return -1 end\n\tif b + c > a then return -1 end\n\treturn (b\
    \ * b) - (4 * a * c)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbm_5i_04.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpbm_5i_04.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn (s - a) * (s - b) * (s - c) / 3\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk8w9ybu9.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpk8w9ybu9.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = (a+b+c)/2\n\tif s > a+b and\
    \ s > a+c then\n\t\treturn s\n\telseif s == a+b and s == a+c then\n\t\treturn\
    \ s\n\telseif s == a+b or s == a+c then\n\t\treturn -1\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp53sefnkr.lua:25:\
    \ expected: 6, actual: nil\nstack traceback:\n\t/tmp/tmp53sefnkr.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tif a + b > c then return c else return\
    \ a + b - c end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpevsgizjc.lua:18:\
    \ expected: 6, actual: 5\nstack traceback:\n\t/tmp/tmpevsgizjc.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= 0 then\n\
    \t\treturn -1\n\telseif s == 1 then\n\t\treturn a * b\n\telseif s == 2 then\n\t\
    \treturn a * c\n\telseif s == 3 then\n\t\treturn b * c\n\telse\n\t\treturn -1\n\
    \tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgz1mu6l1.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpgz1mu6l1.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s == 0 then\n\
    \t\treturn -1\n\telseif s <= a then\n\t\treturn s * 0.5\n\telseif s <= b then\n\
    \t\treturn s * (b - a)\n\telseif s <= c then\n\t\treturn s * (c - b)\n\telse\n\
    \t\treturn -1\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq7qaz_zs.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpq7qaz_zs.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= a or s\
    \ <= b or s <= c then return -1 end\n\treturn math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuacvdz1m.lua:20:\
    \ expected: 6, actual: 77.768888380894\nstack traceback:\n\t/tmp/tmpuacvdz1m.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= a or s\
    \ <= b or s <= c then return -1 end\n\treturn math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuacvdz1m.lua:20:\
    \ expected: 6, actual: 77.768888380894\nstack traceback:\n\t/tmp/tmpuacvdz1m.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s >= a and\
    \ s >= b and s >= c then\n\t\treturn s / 2\n\telse\n\t\treturn -1\n\tend\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpycfbvkbj.lua:24:\
    \ expected: -1, actual: 6.5\nstack traceback:\n\t/tmp/tmpycfbvkbj.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tif a + b > c then\n\t\treturn math.abs((a\
    \ + b - c) / 2)\n\telseif a + c > b then\n\t\treturn math.abs((a + c - b) / 2)\n\
    \telseif b + c > a then\n\t\treturn math.abs((b + c - a) / 2)\n\telse\n\t\treturn\
    \ -1\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdb0fcoa7.lua:26:\
    \ expected: 6, actual: 1\nstack traceback:\n\t/tmp/tmpdb0fcoa7.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if\
    \ a + c > b then return -1 end\n  if b + c > a then return -1 end\n  return ((a\
    \ + b) * (b + c)) / (2.0 * c)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpicn20u6k.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpicn20u6k.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s > a then\
    \ return -1 end\n  if s > b then return -1 end\n  if s > c then return -1 end\n\
    \  return math.sqrt(s * (s - a) * (s - b) * (s - c))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8kfw3dja.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp8kfw3dja.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn math.sqrt(s * (s - a) * (s - b) * (s - c))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvfl25uza.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpvfl25uza.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return s end\n\tif s > b then return s end\n\tif s > c then return s end\n\t\
    return -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdud44bm.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpzdud44bm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= 0 then\n\
    \    return -1\n  elseif s == 1 then\n    return b * b\n  elseif s == 2 then\n\
    \    return a * a\n  elseif s == 3 then\n    return a * a\n  elseif s == 4 then\n\
    \    return b * b\n  elseif s == 5 then\n    return a * a\n  elseif s == 6 then\n\
    \    return a * a\n  elseif s == 7 then\n    return b * b\n  elseif s == 8 then\n\
    \    return a * a\n  elseif s == 9 then\n    return a * a\n  elseif s == 10 then\n\
    \    return b * b\n  elseif s == 11 then\n    return a * a\n  elseif s == 12 then\n\
    \    return a * a\n  elseif s == 13 then\n    return b * b\n  elseif s == 14 then\n\
    \    return a * a\n  elseif s == 15 then\n    return a * a\n  elseif s == 16 then\n\
    \    return b * b\n  elseif s == 17 then\n    return a * a\n  elseif s == 18 then\n\
    \    return a * a\n  elseif s == 19 then\n    return b * b\n  elseif s == 20 then\n\
    \    return a * a\n  elseif s == 21 then\n    return a * a\n  elseif s == 22 then\n\
    \    return b * b\n  elseif s == 23 then\n    return a * a\n  elseif s == 24 then\n\
    \    return a * a\n  elseif s == 25 then\n    return b * b\n  elseif s == 26 then\n\
    \    return a * a\n  elseif s == 27 then\n    return a * a\n  elseif s == 28 then\n\
    \    return b * b\n  elseif s == 29 then\n    return a * a\n  elseif s == 30 then\n\
    \    return a * a\n  elseif s == 31 then\n    return b * b\n  elseif s == 32 then\n\
    \    return a * a\n  elseif s == 33 then\n    return a * a\n  elseif s == 34 then\n\
    \    return b * b\n  elseif s == 35 then\n    return a * a\n  elseif s == 36 then\n\
    \    return a * a\n  elseif s == 37 then\n    return b * b\n  elseif s == 38 then\n\
    \    return a * a\n  elseif s == 39 then\n    return a * a\n  elseif s == 40 then\n\
    \    return b * b\n  elseif s == 41 then\n    return a * a\n  elseif s == 42 then\n\
    \    return a * a\n  elseif s == 43 then\n    return b * b\n  elseif s == 44 then\n\
    \    return a * a\n  elseif s == 45 \nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpzkwrvfaf.lua:104: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= 0 then\n\
    \    return -1\n  elseif s == a then\n    return b\n  elseif s == b then\n   \
    \ return c\n  elseif s == c then\n    return a\n  else\n    return math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8dzi50ts.lua:29:\
    \ expected: 6, actual: 77.768888380894\nstack traceback:\n\t/tmp/tmp8dzi50ts.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tif a + b > c then return c else return\
    \ a + b - c end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpevsgizjc.lua:18:\
    \ expected: 6, actual: 5\nstack traceback:\n\t/tmp/tmpevsgizjc.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= a or s\
    \ <= b or s <= c then return -1 end\n\tlocal u = (a + b) / 2\n\tlocal v = (c +\
    \ d) / 2\n\tlocal w = b - a\n\treturn math.sqrt(u * u + v * v + w * w)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpe69ftrdg.lua:15:\
    \ attempt to perform arithmetic on global 'd' (a nil value)\nstack traceback:\n\
    \t/tmp/tmpe69ftrdg.lua:15: in function 'candidate'\n\t/tmp/tmpe69ftrdg.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s >= a then\
    \ return s end\n\tif s >= b then return s end\n\tif s >= c then return s end\n\
    \treturn -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpskri1lor.lua:22:\
    \ expected: 6, actual: 12\nstack traceback:\n\t/tmp/tmpskri1lor.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn (s - a) * (s - b) * (s - c)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt_81_ofw.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpt_81_ofw.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return c else return\
    \ a + b - c end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2n1qykr3.lua:18:\
    \ expected: 6, actual: 5\nstack traceback:\n\t/tmp/tmp2n1qykr3.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s <= a or s\
    \ <= b or s <= c then return -1 end\n  return math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaavco1s1.lua:20:\
    \ expected: 6, actual: 77.768888380894\nstack traceback:\n\t/tmp/tmpaavco1s1.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s >= a and\
    \ s >= b and s >= c then\n\t\treturn s / 2\n\telse\n\t\treturn -1\n\tend\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpycfbvkbj.lua:24:\
    \ expected: -1, actual: 6.5\nstack traceback:\n\t/tmp/tmpycfbvkbj.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c then\n        return -1\n\
    \    end\n    if a + c > b then\n        return -1\n    end\n    if b + c > a\
    \ then\n        return -1\n    end\n    return ((a + b) * (c + b)) / (2.0 * (a\
    \ + c))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpad0tmi71.lua:27:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpad0tmi71.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s == 0 then\n\
    \t\treturn -1\n\telseif s == a then\n\t\treturn b\n\telseif s == b then\n\t\t\
    return c\n\telseif s == c then\n\t\treturn a\n\telse\n\t\treturn -1\n\tend\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp8ri634f.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpp8ri634f.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= a or s\
    \ <= b or s <= c then return -1 end\n\treturn math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n  \
    \  lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuacvdz1m.lua:20:\
    \ expected: 6, actual: 77.768888380894\nstack traceback:\n\t/tmp/tmpuacvdz1m.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then return -1 end\n  if\
    \ a + c > b then return -1 end\n  if b + c > a then return -1 end\n  return (a\
    \ * b * c) / (a + b + c)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp13l1p0iq.lua:21:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmp13l1p0iq.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s > a then\
    \ return -1 end\n\tif s > b then return -1 end\n\tif s > c then return -1 end\n\
    \treturn math.sqrt(s * (s - a) * (s - b) * (s - c))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvfl25uza.lua:22:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpvfl25uza.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c then\n    return -1\n  elseif\
    \ a + c > b then\n    return -1\n  elseif b + c > a then\n    return -1\n  else\n\
    \    return math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2))\n  end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx9bia18g.lua:26:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpx9bia18g.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750557
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n\tlocal s = a + b + c\n\tif s <= 0 then\n\
    \t\treturn -1\n\tend\n\tlocal t = math.sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \treturn math.round(t * 100) / 100\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n\
    \    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbs_ml21j.lua:17:\
    \ attempt to call field 'round' (a nil value)\nstack traceback:\n\t/tmp/tmpbs_ml21j.lua:17:\
    \ in function 'candidate'\n\t/tmp/tmpbs_ml21j.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750558
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = a + b + c\n  if s == 0 then\n\
    \    return 0\n  elseif s == a then\n    return b\n  elseif s == b then\n    return\
    \ c\n  elseif s == c then\n    return a\n  else\n    return -1\n  end\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgj6y94fw.lua:29:\
    \ expected: 6, actual: -1\nstack traceback:\n\t/tmp/tmpgj6y94fw.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750558

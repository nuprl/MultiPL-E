language: lua
name: HumanEval_45_triangle_area
results:
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((4 * h) / 3) + ((a / 2) * (h / 2)) -- Area of a triangle with base a & height\
    \ h.\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7_ofd689.lua:11:\
    \ expected: 7.5, actual: 23.75\nstack traceback:\n\t/tmp/tmp7_ofd689.lua:11: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n    return\
    \ a * ((math.sqrt(3)/2)*h*h*h/4)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6v_t5fge.lua:11:\
    \ expected: 7.5, actual: 29.228357377725\nstack traceback:\n\t/tmp/tmp6v_t5fge.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h) - (a * h) * (h - a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp28c25rnc.lua:11:\
    \ expected: 7.5, actual: 60\nstack traceback:\n\t/tmp/tmp28c25rnc.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(math.pow(a,\
    \ 2) * math.pow(h, 2) - math.pow(a, 2) * math.pow(h, 2))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp44s32hw8.lua:11:\
    \ expected: 7.5, actual: 0\nstack traceback:\n\t/tmp/tmp44s32hw8.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * math.sqrt(h / math.pi)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rvwh004.lua:11:\
    \ expected: 7.5, actual: 4.8860251190292\nstack traceback:\n\t/tmp/tmp0rvwh004.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / math.sqrt(3) * math.tan(math.pi/3 - math.acos(a/h))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcekft22d.lua:11:\
    \ expected: 7.5, actual: #NaN\nstack traceback:\n\t/tmp/tmpcekft22d.lua:11: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / math.sqrt(3) * math.sin(math.pi/3 * h)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2ywute4y.lua:11:\
    \ expected: 7.5, actual: 1.0605752387249e-15\nstack traceback:\n\t/tmp/tmp2ywute4y.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / math.sqrt(3) * math.sin(math.pi/3 * h)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2ywute4y.lua:11:\
    \ expected: 7.5, actual: 1.0605752387249e-15\nstack traceback:\n\t/tmp/tmp2ywute4y.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / math.sqrt(3) * math.sqrt(math.pow(a, 3) / 3)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpod20hwci.lua:11:\
    \ expected: 7.5, actual: 55.901699437495\nstack traceback:\n\t/tmp/tmpod20hwci.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) / 2) * math.pow((h / 2), 2))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzj40bvnm.lua:11:\
    \ expected: 7.5, actual: 9.7427857925749\nstack traceback:\n\t/tmp/tmpzj40bvnm.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n    return\
    \ math.sqrt(a * a + h * h)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcpgeot8k.lua:11:\
    \ expected: 7.5, actual: 5.8309518948453\nstack traceback:\n\t/tmp/tmpcpgeot8k.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3)/2)*h*h/3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp51a7g6ft.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp51a7g6ft.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) - ((h / 3) * math.sin(math.pi / 3))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvp6lj3kx.lua:11:\
    \ expected: 7.5, actual: 4.1339745962156\nstack traceback:\n\t/tmp/tmpvp6lj3kx.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n    return\
    \ math.sqrt(a * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppey1_d2a.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmppey1_d2a.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / math.sqrt(3) * math.sin(math.pi/3 * h / 2)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wuqx4v7.lua:11:\
    \ expected: 7.5, actual: 8.6602540378444\nstack traceback:\n\t/tmp/tmp6wuqx4v7.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(math.pow(a,\
    \ 2) * math.pow((h + h), 3) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm768ok9c.lua:11:\
    \ expected: 7.5, actual: 51.961524227066\nstack traceback:\n\t/tmp/tmpm768ok9c.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + math.sqrt(h ** 2 - a ** 2))\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpjepy0a02.lua:5: unexpected symbol near ''*''

    '
  stdout: ''
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) / 2) * math.pow((h / 2), 2))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzj40bvnm.lua:11:\
    \ expected: 7.5, actual: 9.7427857925749\nstack traceback:\n\t/tmp/tmpzj40bvnm.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n    return\
    \ a * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + math.sin(math.rad(a)) * h)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xyk76fh.lua:11:\
    \ expected: 7.5, actual: 16.307336141215\nstack traceback:\n\t/tmp/tmp2xyk76fh.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n    return\
    \ a * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpow91zpyg.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmpow91zpyg.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n    return\
    \ a * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + math.sqrt(h * h + 4 * a * a - 4 * math.sqrt(a * a + 4)))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdnndlld2.lua:11:\
    \ expected: 7.5, actual: 61.759849436098\nstack traceback:\n\t/tmp/tmpdnndlld2.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n    return\
    \ math.sqrt(a * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplsbbrb1z.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmplsbbrb1z.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * math.sqrt(3) / 4 + h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8ospe818.lua:11:\
    \ expected: 7.5, actual: 3.6650635094611\nstack traceback:\n\t/tmp/tmp8ospe818.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / math.sqrt(3) * math.sin(math.pi/3 * h / a)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiqprvdh9.lua:11:\
    \ expected: 7.5, actual: 5.0903696045513\nstack traceback:\n\t/tmp/tmpiqprvdh9.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) / 2) * (h + math.sqrt(3) / 2))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpowbvyzcv.lua:11:\
    \ expected: 7.5, actual: 16.740381056767\nstack traceback:\n\t/tmp/tmpowbvyzcv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) - ((h / 3) * math.sin(math.pi / 3))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvp6lj3kx.lua:11:\
    \ expected: 7.5, actual: 4.1339745962156\nstack traceback:\n\t/tmp/tmpvp6lj3kx.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / math.sqrt(3) * math.sin(math.pi / 3)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) / 2) * (h - a))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsemkgq67.lua:11:\
    \ expected: 7.5, actual: -8.6602540378444\nstack traceback:\n\t/tmp/tmpsemkgq67.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) / 2) * math.pow((h / 2), 2))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzj40bvnm.lua:11:\
    \ expected: 7.5, actual: 9.7427857925749\nstack traceback:\n\t/tmp/tmpzj40bvnm.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wtckpgv.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp6wtckpgv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294

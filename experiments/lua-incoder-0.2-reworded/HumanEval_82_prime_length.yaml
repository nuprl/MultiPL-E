name: HumanEval_82_prime_length
language: lua
prompt: "-- Write a function that takes a string and returns true if the string\n\
  -- length is a prime number or false otherwise\n-- Examples\n-- >>> prime_length('Hello')\n\
  -- true\n-- >>> prime_length('abcdcba')\n-- true\n-- >>> prime_length('kittens')\n\
  -- true\n-- >>> prime_length('orange')\n-- false\nlocal function prime_length(string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_length\n\
  \    lu.assertEquals(candidate('Hello'), true)\n    lu.assertEquals(candidate('abcdcba'),\
  \ true)\n    lu.assertEquals(candidate('kittens'), true)\n    lu.assertEquals(candidate('orange'),\
  \ false)\n    lu.assertEquals(candidate('wow'), true)\n    lu.assertEquals(candidate('world'),\
  \ true)\n    lu.assertEquals(candidate('MadaM'), true)\n    lu.assertEquals(candidate('Wow'),\
  \ true)\n    lu.assertEquals(candidate(''), false)\n    lu.assertEquals(candidate('HI'),\
  \ true)\n    lu.assertEquals(candidate('go'), true)\n    lu.assertEquals(candidate('gogo'),\
  \ false)\n    lu.assertEquals(candidate('aaaaaaaaaaaaaaa'), false)\n    lu.assertEquals(candidate('Madam'),\
  \ true)\n    lu.assertEquals(candidate('M'), false)\n    lu.assertEquals(candidate('0'),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if string == nil then return nil end\n  local count = 0\n  for i\
    \ = 1, #string do\n    if string[i] == string[i] then\n      count = count + 1\n\
    \    end\n  end\n  return count % 2 == 0\nend", "  -- Write your solution here\n\
    end", "  -- Write your solution here\nend", "  -- Write your solution here\nend",
  "  -- Write your solution here\nend", "  if string == nil then\n    return false\n\
    \  end\n  local prime = true\n  for i = 2, #string do\n    if string.sub(i, i,\
    \ #string) == string then\n      prime = false\n    end\n  end\n  return prime\n\
    end", "  -- Write your solution here\nend", "  if string == nil then return false\
    \ end\n  local count = 0\n  for i = 1, #string do\n    count = count + 1\n   \
    \ if string[i] == string[i] then\n      count = count + 1\n    end\n  end\n  return\
    \ count % 2 == 0\nend", "  -- Write your solution here\nend", "  -- Write your\
    \ solution here\nend", "  -- Write your solution here\nend", "  -- Write your\
    \ solution here\nend", "  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- ", "  -- Write your solution here\nend",
  "  -- Write your solution here\nend", "  -- Write your solution here\nend", "  --\
    \ Write your solution here\nend", "  -- Write your solution here\n  local prime_numbers\
    \ = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151,\
    \ 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239,\
    \ 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337,\
    \ 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433,\
    \ 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541,\
    \ 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641,\
    \ 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743,\
    \ 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857,\
    \ 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971,\
    \ 977, 983, 991, 997}\n  local prime_numbers_length = #prime_numbers\n  local\
    \ prime_numbers_length = string\n  for i = 1, prime_numbers_length do\n    if\
    \ string.sub(string,i,i) == prime_numbers[i] then\n      return true\n    end\n\
    \  end\n  return false\nend", "  -- Write your solution here\nend", "  -- Write\
    \ your solution here\nend", "  -- Write your solution here\nend", "  -- Write\
    \ your solution here\nend", "  -- Write your solution here\nend", "  -- Write\
    \ your solution here\nend", "  -- Write your solution here\n  -- Hint: use string.gsub\
    \ to remove all non-alphanumeric characters\n  -- Hint: use string.gsub to remove\
    \ all non-alphanumeric characters\n  -- Hint: use string.gsub to remove all non-alphanumeric\
    \ characters\n  -- Hint: use string.gsub to remove all non-alphanumeric characters\n\
    \  -- Hint: use string.gsub to remove all non-alphanumeric characters\n  -- Hint:\
    \ use string.gsub to remove all non-alphanumeric characters\n  -- Hint: use string.gsub\
    \ to remove all non-alphanumeric characters\n  -- Hint: use string.gsub to remove\
    \ all non-alphanumeric characters\n  -- Hint: use string.gsub to remove all non-alphanumeric\
    \ characters\n  -- Hint: use string.gsub to remove all non-alphanumeric characters\n\
    \  -- Hint: use string.gsub to remove all non-alphanumeric characters\n  -- Hint:\
    \ use string.gsub to remove all non-alphanumeric characters\n  -- Hint: use string.gsub\
    \ to remove all non-alphanumeric characters\n  -- Hint: use string.gsub to remove\
    \ all non-alphanumeric characters\n  -- Hint: use string.gsub to remove all non-alphanumeric\
    \ characters\n  -- Hint: use string.gsub to remove all non-alphanumeric characters\n\
    \  -- Hint: use string.gsub to remove all non-alphanumeric characters\n  -- Hint:\
    \ use string.gsub to remove all non-alphanumeric characters\n  -- Hint: use string.gsub\
    \ to remove all non-alphanumeric characters\n  -- Hint: use string.gsub to remove\
    \ all non-alphanumeric characters\n  -- Hint: use string.gsub to remove all non-alphanumeric\
    \ characters\n  -- Hint: use string.gsub to remove all non-alphanumeric characters\n\
    \  -- Hint: use string.gsub to remove all non-alphanumeric characters\n  -- Hint:\
    \ use string.gsub to remove all non-alphanumeric characters\n  -- Hint: use string.gsub\
    \ to remove all non-alphanumeric characters\n  -- Hint: use string.gsub to remove\
    \ all non-alphanumeric characters\n  -- Hint: use string.gsub to remove all non-alphanumeric\
    \ characters\n  -- Hint: use string.gsub to remove all non-alphanumeric characters\n\
    \  -- Hint: use string.gsub to remove all non-alphanumeric characters\n  -- Hint:\
    \ use string.gsub to remove all non-", "  -- Write your solution here\nend", " \
    \ -- Write your solution here\nend", "    local prime = true\n    for i = 2, #string\
    \ do\n        if string.sub(string,i,i) ~= '' then\n            prime = false\n\
    \        end\n    end\n    return prime\nend", "  -- Write your code here\n  local\
    \ prime_numbers = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\
    \ 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,\
    \ 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947,\
    \ 953, 967, 971, 977, 983, 991, 997}\n  local prime_number_count = 0\n  for i\
    \ = 1, #string do\n    if string.sub(i, i, #string) == string then\n      prime_number_count\
    \ = prime_number_count + 1\n    end\n  end\n  if prime_number_count > 1 then\n\
    \    return false\n  else\n    return true\n  end\nend", "    local prime = true\n\
    \    for i = 2, #string do\n        if string.sub(string,i,i) == '' then\n   \
    \         prime = false\n            break\n        end\n    end\n    return prime\n\
    end", "  -- Write your solution here\nend", "  -- Write your solution here\nend",
  "  -- Write your solution here\nend", "  -- Your code here\nend", "  -- Write your\
    \ solution here\nend", "  -- Write your solution here\nend", "  -- Write your\
    \ solution here\nend", "  -- Write your solution here\nend", "  -- Your code here\n\
    \  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- ",
  "    local prime_numbers = {}\n    for i = 2, #string do\n        local prime =\
    \ true\n        for j = 2, #string do\n            if string[i] == string[j] then\n\
    \                prime = false\n            end\n        end\n        if prime\
    \ then\n            table.insert(prime_numbers, i)\n        end\n    end\n   \
    \ return #prime_numbers > 0\nend", "  -- Write your solution here\nend", "  --\
    \ Write your solution here\nend", "    local count = 0\n    for i = 1, #string\
    \ do\n        count = count + 1\n        if string[i] == string[i] and string[i]\
    \ ~= '\\n' then\n            count = count + 1\n        end\n    end\n    return\
    \ count % 2 == 0\nend", "  -- Write your solution here\nend", "  -- Write your\
    \ solution here\nend", "  -- Write your solution here\nend", "  -- Write your\
    \ solution here\nend", "  -- Write your solution here\nend", "  -- Write your\
    \ solution here\nend", "  -- Write your solution here\nend", "  -- Write your\
    \ solution here\nend", "  -- Write your solution here\nend", "  -- Write your\
    \ solution here\nend", "  -- Write your solution here\nend", "  -- Write your\
    \ solution here\nend", "  -- Your code here\nend", "  -- Write your solution here\n\
    end", "    local prime = true\n    for i = 2, #string do\n        if string.sub(string,i,i)\
    \ == '' then\n            prime = false\n            break\n        end\n    end\n\
    \    return prime\nend", "    local prime = true\n    for i = 2, #string do\n\
    \        if string[i] ~= '#' then\n            prime = false\n            break\n\
    \        end\n    end\n    return prime\nend", "  -- Write your solution here\n\
    end", "  -- Write your solution here\nend", "  -- Write your solution here\nend",
  "  -- Write your solution here\nend", "    local prime = true\n    for i = 2, #string\
    \ do\n        if string.sub(string,i,i) == '' then\n            prime = false\n\
    \            break\n        end\n    end\n    return prime\nend", "  -- Write\
    \ your solution here\nend", "  -- Write your solution here\nend", "    local prime\
    \ = true\n    for i = 2, #string do\n        if string.sub(string,i,i) == '' then\n\
    \            prime = false\n            break\n        end\n    end\n    return\
    \ prime\nend", "  -- Write your solution here\n  -- Hint: Use a for loop to iterate\
    \ over the string and check each character\n  -- against the characters in the\
    \ string from 2 to string.length\n  -- Return true if the string is a prime number\
    \ or false otherwise\n  return true\nend", "  -- Write your solution here\nend",
  "  -- Write your solution here\nend", "  -- Write your solution here\nend", "  \
    \  local prime = true\n    for i = 2, #string do\n        if string.sub(string,i,i)\
    \ == '' then\n            prime = false\n            break\n        end\n    end\n\
    \    return prime\nend", "  -- Write your solution here\nend", "  -- Your code\
    \ here\nend\n</cell>\n<cell>", "  -- Write your code here\n  return true\nend",
  "  -- Your code here\nend", "  -- Your code here\nend", "  -- Write your solution\
    \ here\nend", "  -- Write your solution here\nend", "  -- Write your solution\
    \ here\nend", "  -- Write your solution here\nend", "  -- Your code here\nend",
  "  -- Your code here\nend", "  -- Write your solution here\nend", "  -- Write your\
    \ solution here\nend", "  -- Write your solution here\nend", "  -- Write your\
    \ solution here\nend", "  -- Write your solution here\nend", "    local prime\
    \ = true\n    for i = 2, #string do\n        if string.sub(string,i,i) == '' then\n\
    \            prime = false\n            break\n        end\n    end\n    return\
    \ prime\nend", "  if string == nil then\n    return false\n  end\n  local length\
    \ = #string\n  local prime = true\n  for i = 2, length do\n    if string.sub(i,\
    \ i, i) ~= '1' then\n      prime = false\n    end\n  end\n  return prime\nend",
  "    local prime_numbers = {}\n    for i = 2, #string do\n        prime_numbers[#prime_numbers\
    \ + 1] = i\n    end\n    for i = 2, #prime_numbers do\n        if string.find(string,\
    \ '%', prime_numbers[i]) then\n            return false\n        end\n    end\n\
    \    return true\nend", "  -- Write your solution here\n  -- Hint: use string.gsub\
    \ to remove all non-alphanumeric characters\n  -- Hint: use string.gsub to remove\
    \ all non-alphanumeric characters\n  -- Hint: use string.gsub to remove all non-alphanumeric\
    \ characters\n  -- Hint: use string.gsub to remove all non-alphanumeric characters\n\
    \  -- Hint: use string.gsub to remove all non-alphanumeric characters\n  -- Hint:\
    \ use string.gsub to remove all non-alphanumeric characters\n  -- Hint: use string.gsub\
    \ to remove all non-alphanumeric characters\n  -- Hint: use string.gsub to remove\
    \ all non-alphanumeric characters\n  -- Hint: use string.gsub to remove all non-alphanumeric\
    \ characters\n  -- Hint: use string.gsub to remove all non-alphanumeric characters\n\
    \  -- Hint: use string.gsub to remove all non-alphanumeric characters\n  -- Hint:\
    \ use string.gsub to remove all non-alphanumeric characters\n  -- Hint: use string.gsub\
    \ to remove all non-alphanumeric characters\n  -- Hint: use string.gsub to remove\
    \ all non-alphanumeric characters\n  -- Hint: use string.gsub to remove all non-alphanumeric\
    \ characters\n  -- Hint: use string.gsub to remove all non-alphanumeric characters\n\
    \  -- Hint: use string.gsub to remove all non-alphanumeric characters\n  -- Hint:\
    \ use string.gsub to remove all non-alphanumeric characters\n  -- Hint: use string.gsub\
    \ to remove all non-alphanumeric characters\n  -- Hint: use string.gsub to remove\
    \ all non-alphanumeric characters\n  -- Hint: use string.gsub to remove all non-alphanumeric\
    \ characters\n  -- Hint: use string.gsub to remove all non-alphanumeric characters\n\
    \  -- Hint: use string.gsub to remove all non-alphanumeric characters\n  -- Hint:\
    \ use string.gsub to remove all non-alphanumeric characters\n  -- Hint: use string.gsub\
    \ to remove all non-alphanumeric characters\n  -- Hint: use string.gsub to remove\
    \ all non-alphanumeric characters\n  -- Hint: use string.gsub to remove all non-alphanumeric\
    \ characters\n  -- Hint: use string.gsub to remove all non-alphanumeric characters\n\
    \  -- Hint: use string.gsub to remove all non-alphanumeric characters\n  -- Hint:\
    \ use string.gsub to remove all non-", "  -- Write your solution here\nend", " \
    \ -- Write your solution here\nend", "  -- Write your solution here\nend", " \
    \ -- Write your solution here\nend", "  -- Write your solution here\nend", " \
    \ -- Write your solution here\nend", "  -- Write your solution here\nend", " \
    \   local count = 0\n    for i = 1, #string do\n        count = count + 1\n  \
    \      if string[i] == string[i] and string[i] ~= '\\n' then\n            count\
    \ = count + 1\n        end\n    end\n    if count % 2 == 0 then\n        return\
    \ false\n    else\n        return true\n    end\nend", "  -- Write your solution\
    \ here\nend", "  -- Write your solution here\n  -- Hint: Use a for loop to iterate\
    \ over the string and check each character\n  -- against the string length\n \
    \ return true\nend", "  -- Write your solution here\nend", "    local prime =\
    \ true\n    for i = 2, #string do\n        if string.sub(string,i,i) == '' then\n\
    \            prime = false\n            break\n        end\n    end\n    return\
    \ prime\nend", "  -- Write your solution here\nend", "  -- Write your solution\
    \ here\nend", "  -- Your code here\nend", "  -- Write your solution here\nend",
  "  -- Write your solution here\nend", "  -- Write your solution here\nend", "  --\
    \ Your code here\nend", "  -- Write your solution here\nend", "  -- Write your\
    \ solution here\nend", "  -- Write your solution here\nend", "  -- Write your\
    \ code here\n  local prime = true\n  local length = #string\n  for i = 2, length\
    \ do\n    if string.sub(string,i,i) == '' then\n      prime = false\n    end\n\
    \  end\n  return prime\nend", "  -- Write your solution here\nend", "  -- Write\
    \ your solution here\nend", "  -- Write your solution here\nend", "  -- Write\
    \ your solution here\n  -- Hint: Use a for loop to iterate over the string and\
    \ check each character\n  -- If the character is a number then add it to the sum\n\
    \  -- If the character is a letter then subtract it from the sum\n  -- If the\
    \ character is a space then return true\n  -- If the character is a letter or\
    \ a number then return false\n  -- If the character is a space then return true\n\
    \  -- If the character is a letter or a number then return false\n  -- If the\
    \ character is a letter or a number then return false\n  -- If the character is\
    \ a letter or a number then return false\n  -- If the character is a letter or\
    \ a number then return false\n  -- If the character is a letter or a number then\
    \ return false\n  -- If the character is a letter or a number then return false\n\
    \  -- If the character is a letter or a number then return false\n  -- If the\
    \ character is a letter or a number then return false\n  -- If the character is\
    \ a letter or a number then return false\n  -- If the character is a letter or\
    \ a number then return false\n  -- If the character is a letter or a number then\
    \ return false\n  -- If the character is a letter or a number then return false\n\
    \  -- If the character is a letter or a number then return false\n  -- If the\
    \ character is a letter or a number then return false\n  -- If the character is\
    \ a letter or a number then return false\n  -- If the character is a letter or\
    \ a number then return false\n  -- If the character is a letter or a number then\
    \ return false\n  -- If the character is a letter or a number then return false\n\
    \  -- If the character is a letter or a number then return false\n  -- If the\
    \ character is a letter or a number then return false\n  -- If the character is\
    \ a letter or a number then return false\n  -- If the character is a letter or\
    \ a number then return false\n  -- If the character is a letter or a number then\
    \ return false\n  -- If the character is a letter or a number then return false\n\
    \  -- If the character is a letter or a number then return false\n  -- If the\
    \ character is a letter or a number then return false\n  -- If the character is\
    \ a letter or a number then return false\n  -- If the character is a letter or\
    \ a number then return false\n  -- If the character is a letter or a number then\
    \ return false\n  -- If the character is a letter or a number then return false\n\
    \  -- If the character is a letter or a number then return false\n  -- If the\
    \ character is a letter or a number then return false\n  -- If the character is\
    \ a letter or a number then return false\n  -- If the character is a letter or\
    \ a number then return false\n  -- If the character is a letter or a number then\
    \ return false\n  -- If the character is a letter or a number then return false\n",
  "  -- Write your solution here\nend", "  if string == nil then return false end\n\
    \  local count = 0\n  for i = 1, #string do\n    count = count + 1\n    if string[i]\
    \ == string[i] then\n      count = count - 1\n    end\n  end\n  return count <=\
    \ 1\nend", "  -- Write your solution here\nend", "    local prime = true\n   \
    \ for i = 2, #string do\n        if string.sub(string,i,i) == '' then\n      \
    \      prime = false\n            break\n        end\n    end\n    return prime\n\
    end", "  -- Write your solution here\nend", "  -- Write your solution here\n \
    \ local prime = true\n  for i = 2, #string do\n    if string.sub(string,i,i) ==\
    \ '' then\n      prime = false\n      break\n    end\n  end\n  return prime\n\
    end", "  -- Write your solution here\nend", "  -- Write your solution here\nend",
  "  -- Write your solution here\nend", "  -- Write your solution here\nend", "  --\
    \ Write your solution here\nend", "  if string == nil then return false end\n\
    \  local prime = true\n  for i = 2, #string do\n    if string.sub(string,i,i)\
    \ == '' then break end\n    prime = prime and string.sub(string,i,i) == string.sub(string,i-1,i)\n\
    \  end\n  return prime\nend", "    local count = 0\n    for i = 1, #string do\n\
    \        if string[i] == string[i] then\n            count = count + 1\n     \
    \   else\n            count = count + 1\n            if count > 2 then\n     \
    \           return false\n            end\n        end\n    end\n    return true\n\
    end", "  -- Write your solution here\nend", "  -- Your code here\nend", "  if\
    \ string == nil then return nil end\n  local count = 0\n  for i = 1, #string do\n\
    \    if string[i] == string[i] then\n      count = count + 1\n    end\n  end\n\
    \  return count > 1 and count % 2 == 0\nend", "  -- Write your solution here\n\
    end", "  -- Write your solution here\nend", "  -- Write your solution here\n \
    \ -- Hint: use math.floor\n  -- Hint: use math.sqrt\n  -- Hint: use math.pow\n\
    \  -- Hint: use math.floor\n  -- Hint: use math.ceil\n  -- Hint: use math.mod\n\
    \  -- Hint: use math.floor\n  -- Hint: use math.ceil\n  -- Hint: use math.sqrt\n\
    \  -- Hint: use math.pow\n  -- Hint: use math.floor\n  -- Hint: use math.ceil\n\
    \  -- Hint: use math.mod\n  -- Hint: use math.floor\n  -- Hint: use math.ceil\n\
    \  -- Hint: use math.sqrt\n  -- Hint: use math.pow\n  -- Hint: use math.floor\n\
    \  -- Hint: use math.ceil\n  -- Hint: use math.mod\n  -- Hint: use math.floor\n\
    \  -- Hint: use math.ceil\n  -- Hint: use math.sqrt\n  -- Hint: use math.pow\n\
    \  -- Hint: use math.floor\n  -- Hint: use math.ceil\n  -- Hint: use math.mod\n\
    \  -- Hint: use math.floor\n  -- Hint: use math.ceil\n  -- Hint: use math.sqrt\n\
    \  -- Hint: use math.pow\n  -- Hint: use math.floor\n  -- Hint: use math.ceil\n\
    \  -- Hint: use math.mod\n  -- Hint: use math.floor\n  -- Hint: use math.ceil\n\
    \  -- Hint: use math.sqrt\n  -- Hint: use math.pow\n  -- Hint: use math.floor\n\
    \  -- Hint: use math.ceil\n  -- Hint: use math.mod\n  -- Hint: use math.floor\n\
    \  -- Hint: use math.ceil\n  -- Hint: use math.sqrt\n  -- Hint: use math.pow\n\
    \  -- Hint: use math.floor\n  -- Hint: use math.ceil\n  -- Hint: use math.mod\n\
    \  -- Hint: use math.floor\n  -- Hint: use math.ceil\n  -- Hint: use math.sqrt\n\
    \  -- Hint: use math.pow\n  -- Hint: use math.floor\n  -- Hint: use math.ceil\n\
    \  -- Hint: use math.mod\n  -- Hint: use math.floor\n  -- Hint: use math.ceil\n\
    \  -- Hint: use math.sqrt\n  -- Hint: use math.pow\n  -- Hint: use math.floor\n\
    \  -- Hint: use math.ceil\n  -- Hint: use math.mod\n  -- Hint: use math.floor\n\
    \  ", "  -- Write your solution here\nend", "  -- Your code here\nend", "  --\
    \ Write your solution here\nend", "  -- Write your solution here\nend", "    local\
    \ prime = true\n    for i = 2, #string do\n        if string.sub(string,i,i) ==\
    \ '' then\n            prime = false\n            break\n        end\n    end\n\
    \    return prime\nend", "  -- Write your solution here\n  -- Hint: Use a for\
    \ loop to iterate through the string\n  -- Hint: Use a boolean variable to check\
    \ if a number is prime\n  -- Hint: Use a boolean variable to check if a number\
    \ is odd\n  -- Hint: Use a boolean variable to check if a number is even\n  --\
    \ Hint: Use a boolean variable to check if a number is divisible by 2\n  -- Hint:\
    \ Use a boolean variable to check if a number is divisible by 3\n  -- Hint: Use\
    \ a boolean variable to check if a number is divisible by 5\n  -- Hint: Use a\
    \ boolean variable to check if a number is divisible by 7\n  -- Hint: Use a boolean\
    \ variable to check if a number is divisible by 11\n  -- Hint: Use a boolean variable\
    \ to check if a number is divisible by 13\n  -- Hint: Use a boolean variable to\
    \ check if a number is divisible by 17\n  -- Hint: Use a boolean variable to check\
    \ if a number is divisible by 19\n  -- Hint: Use a boolean variable to check if\
    \ a number is divisible by 23\n  -- Hint: Use a boolean variable to check if a\
    \ number is divisible by 29\n  -- Hint: Use a boolean variable to check if a number\
    \ is divisible by 31\n  -- Hint: Use a boolean variable to check if a number is\
    \ divisible by 37\n  -- Hint: Use a boolean variable to check if a number is divisible\
    \ by 41\n  -- Hint: Use a boolean variable to check if a number is divisible by\
    \ 43\n  -- Hint: Use a boolean variable to check if a number is divisible by 47\n\
    \  -- Hint: Use a boolean variable to check if a number is divisible by 53\n \
    \ -- Hint: Use a boolean variable to check if a number is divisible by 59\n  --\
    \ Hint: Use a boolean variable to check if a number is divisible by 61\n  -- Hint:\
    \ Use a boolean variable to check if a number is divisible by 67\n  -- Hint: Use\
    \ a boolean variable to check if a number is divisible by 71\n  -- Hint: Use a\
    \ boolean variable to check if a number is divisible by 73\n  -- Hint: Use a boolean\
    \ variable to check if a number is divisible by 79\n  -- Hint: Use a boolean variable\
    \ to check if a number is divisible by 83\n  -- Hint: Use a boolean variable to\
    \ check if a number is divisible by 89\n  -- Hint: Use a boolean variable to check\
    \ if a number is divisible by 97\n  -- Hint: Use a boolean variable to check if\
    \ a number is divisible by 101\n  -- Hint: Use a boolean vari", "  -- Write your\
    \ solution here\nend", "    local prime = true\n    for i = 2, #string do\n  \
    \      if string.sub(string,i,i) == '' then\n            prime = false\n     \
    \       break\n        end\n    end\n    return prime\nend", "  -- Write your\
    \ solution here\nend", "  -- Write your solution here\n  -- Hint: Use a for loop\n\
    \  -- Hint: Use a while loop\n  -- Hint: Use a recursive function\n  -- Hint:\
    \ Use a for loop\n  -- Hint: Use a while loop\n  -- Hint: Use a recursive function\n\
    \  -- Hint: Use a for loop\n  -- Hint: Use a while loop\n  -- Hint: Use a recursive\
    \ function\n  -- Hint: Use a for loop\n  -- Hint: Use a while loop\n  -- Hint:\
    \ Use a recursive function\n  -- Hint: Use a for loop\n  -- Hint: Use a while\
    \ loop\n  -- Hint: Use a recursive function\n  -- Hint: Use a for loop\n  -- Hint:\
    \ Use a while loop\n  -- Hint: Use a recursive function\n  -- Hint: Use a for\
    \ loop\n  -- Hint: Use a while loop\n  -- Hint: Use a recursive function\n  --\
    \ Hint: Use a for loop\n  -- Hint: Use a while loop\n  -- Hint: Use a recursive\
    \ function\n  -- Hint: Use a for loop\n  -- Hint: Use a while loop\n  -- Hint:\
    \ Use a recursive function\n  -- Hint: Use a for loop\n  -- Hint: Use a while\
    \ loop\n  -- Hint: Use a recursive function\n  -- Hint: Use a for loop\n  -- Hint:\
    \ Use a while loop\n  -- Hint: Use a recursive function\n  -- Hint: Use a for\
    \ loop\n  -- Hint: Use a while loop\n  -- Hint: Use a recursive function\n  --\
    \ Hint: Use a for loop\n  -- Hint: Use a while loop\n  -- Hint: Use a recursive\
    \ function\n  -- Hint: Use a for loop\n  -- Hint: Use a while loop\n  -- Hint:\
    \ Use a recursive function\n  -- Hint: Use a for loop\n  -- Hint: Use a while\
    \ loop\n  -- Hint: Use a recursive function\n  -- Hint: Use a for loop\n  -- Hint:\
    \ Use a while loop\n  -- Hint: Use a recursive function\n  -- Hint: Use a for\
    \ loop\n  -- Hint: Use a while loop\n  -- Hint: Use a recursive function\n  --\
    \ Hint: Use a for loop\n  -- Hint: Use a while loop\n  -- Hint: Use a recursive\
    \ function\n  -- Hint: Use a for loop\n  -- Hint: Use a while loop\n  ", "  --\
    \ Write your solution here\nend", "  -- Write your solution here\nend", "  --\
    \ Write your solution here\nend", "  -- Write your solution here\nend", "  --\
    \ Your code here\nend", "  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n \
    \ -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your code\
    \ here\n  -- Your code here\n  -- Your code here\n  -- Your code here\n  -- Your\
    \ code here\n  -- Your code here\n  -- ", "  -- Write your solution here\nend",
  "  -- Your code here\nend", "  -- Write your solution here\nend", "    local prime\
    \ = true\n    for i = 2, #string do\n        if string.sub(string,i,i) == '' then\n\
    \            prime = false\n            break\n        end\n    end\n    return\
    \ prime\nend", "  -- Write your solution here\n  -- Don't forget to handle edge\
    \ cases like empty string\n  -- or strings containing only whitespace\n  -- Don't\
    \ forget to handle edge cases like strings containing only letters\n  -- Don't\
    \ forget to handle edge cases like strings containing only numbers\n  -- Don't\
    \ forget to handle edge cases like strings containing only punctuation\n  -- Don't\
    \ forget to handle edge cases like strings containing only special characters\n\
    \  -- Don't forget to handle edge cases like strings containing only upper case\
    \ letters\n  -- Don't forget to handle edge cases like strings containing only\
    \ lower case letters\n  -- Don't forget to handle edge cases like strings containing\
    \ only digits\n  -- Don't forget to handle edge cases like strings containing\
    \ only spaces\n  -- Don't forget to handle edge cases like strings containing\
    \ only special characters\n  -- Don't forget to handle edge cases like strings\
    \ containing only upper case letters\n  -- Don't forget to handle edge cases like\
    \ strings containing only lower case letters\n  -- Don't forget to handle edge\
    \ cases like strings containing only digits\n  -- Don't forget to handle edge\
    \ cases like strings containing only spaces\n  -- Don't forget to handle edge\
    \ cases like strings containing only special characters\n  -- Don't forget to\
    \ handle edge cases like strings containing only upper case letters\n  -- Don't\
    \ forget to handle edge cases like strings containing only lower case letters\n\
    \  -- Don't forget to handle edge cases like strings containing only digits\n\
    \  -- Don't forget to handle edge cases like strings containing only spaces\n\
    \  -- Don't forget to handle edge cases like strings containing only special characters\n\
    \  -- Don't forget to handle edge cases like strings containing only upper case\
    \ letters\n  -- Don't forget to handle edge cases like strings containing only\
    \ lower case letters\n  -- Don't forget to handle edge cases like strings containing\
    \ only digits\n  -- Don't forget to handle edge cases like strings containing\
    \ only spaces\n  -- Don't forget to handle edge cases like strings containing\
    \ only special characters\n  -- Don't forget to handle edge cases like strings\
    \ containing only upper case letters\n  -- Don't forget to handle edge cases like\
    \ strings containing only lower case letters\n  -- Don't forget to handle edge\
    \ cases like strings containing only digits\n  -- Don't forget to handle edge\
    \ cases like strings containing only spaces\n  -- Don't forget to handle edge\
    \ cases like strings containing only special characters\n  -- Don't forget to\
    \ handle edge cases like strings containing only upper case letters\n  -- Don't\
    \ forget to handle edge cases like strings containing only lower case letters\n\
    \  -- Don't forget to handle edge cases like strings containing only digits\n\
    \  -- Don't forget to handle ", "  -- Write your solution here\nend", "  -- Write\
    \ your solution here\nend", "  -- Write your code here\nend", "  -- Write your\
    \ solution here\nend", "  -- Your code here\nend", "  -- Write your solution here\n\
    end", "  -- Write your solution here\nend", "  -- Write your solution here\nend",
  "  -- Write your solution here\nend", "  -- Write your solution here\nend", "  --\
    \ Write your solution here\nend", "  -- Write your solution here\nend", "  --\
    \ Your code here\n  local prime = true\n  for i = 2, #string do\n    if string[i]\
    \ == string[#string] then\n      prime = false\n    end\n  end\n  return prime\n\
    end", "  -- Write your solution here\nend", "  -- Write your solution here\nend",
  "  -- Write your solution here\nend", "    local prime = 1\n    for i = 2, #string\
    \ do\n        if string[i] == string[i - 1] then\n            prime = prime +\
    \ 1\n        end\n    end\n    return prime == 2\nend", "  -- Write your solution\
    \ here\nend", "  -- Write your solution here\nend", "  -- Your code here\nend",
  "  -- Write your solution here\nend", "  -- Write your solution here\nend", "  --\
    \ Write your solution here\nend", "  -- Write your solution here\nend", "  --\
    \ Write your solution here\nend", "  -- Write your solution here\nend", "  --\
    \ Write your solution here\n  -- Hint: use string.gsub to remove all non-alphanumeric\
    \ characters\n  -- Hint: use string.gsub to remove all non-alphanumeric characters\n\
    \  -- Hint: use string.gsub to remove all non-alphanumeric characters\n  -- Hint:\
    \ use string.gsub to remove all non-alphanumeric characters\n  -- Hint: use string.gsub\
    \ to remove all non-alphanumeric characters\n  -- Hint: use string.gsub to remove\
    \ all non-alphanumeric characters\n  -- Hint: use string.gsub to remove all non-alphanumeric\
    \ characters\n  -- Hint: use string.gsub to remove all non-alphanumeric characters\n\
    \  -- Hint: use string.gsub to remove all non-alphanumeric characters\n  -- Hint:\
    \ use string.gsub to remove all non-alphanumeric characters\n  -- Hint: use string.gsub\
    \ to remove all non-alphanumeric characters\n  -- Hint: use string.gsub to remove\
    \ all non-alphanumeric characters\n  -- Hint: use string.gsub to remove all non-alphanumeric\
    \ characters\n  -- Hint: use string.gsub to remove all non-alphanumeric characters\n\
    \  -- Hint: use string.gsub to remove all non-alphanumeric characters\n  -- Hint:\
    \ use string.gsub to remove all non-alphanumeric characters\n  -- Hint: use string.gsub\
    \ to remove all non-alphanumeric characters\n  -- Hint: use string.gsub to remove\
    \ all non-alphanumeric characters\n  -- Hint: use string.gsub to remove all non-alphanumeric\
    \ characters\n  -- Hint: use string.gsub to remove all non-alphanumeric characters\n\
    \  -- Hint: use string.gsub to remove all non-alphanumeric characters\n  -- Hint:\
    \ use string.gsub to remove all non-alphanumeric characters\n  -- Hint: use string.gsub\
    \ to remove all non-alphanumeric characters\n  -- Hint: use string.gsub to remove\
    \ all non-alphanumeric characters\n  -- Hint: use string.gsub to remove all non-alphanumeric\
    \ characters\n  -- Hint: use string.gsub to remove all non-alphanumeric characters\n\
    \  -- Hint: use string.gsub to remove all non-alphanumeric characters\n  -- Hint:\
    \ use string.gsub to remove all non-alphanumeric characters\n  -- Hint: use string.gsub\
    \ to remove all non-alphanumeric characters\n  -- Hint: use string.gsub to remove\
    \ all non-", "  -- Write your solution here\n  -- Hint: use math.floor\n  -- Hint:\
    \ use math.sqrt\n  -- Hint: use math.ceil\n  -- Hint: use math.modf\n  -- Hint:\
    \ use math.floor\n  -- Hint: use math.modf\n  -- Hint: use math.floor\n  -- Hint:\
    \ use math.modf\n  -- Hint: use math.floor\n  -- Hint: use math.modf\n  -- Hint:\
    \ use math.floor\n  -- Hint: use math.modf\n  -- Hint: use math.floor\n  -- Hint:\
    \ use math.modf\n  -- Hint: use math.floor\n  -- Hint: use math.modf\n  -- Hint:\
    \ use math.floor\n  -- Hint: use math.modf\n  -- Hint: use math.floor\n  -- Hint:\
    \ use math.modf\n  -- Hint: use math.floor\n  -- Hint: use math.modf\n  -- Hint:\
    \ use math.floor\n  -- Hint: use math.modf\n  -- Hint: use math.floor\n  -- Hint:\
    \ use math.modf\n  -- Hint: use math.floor\n  -- Hint: use math.modf\n  -- Hint:\
    \ use math.floor\n  -- Hint: use math.modf\n  -- Hint: use math.floor\n  -- Hint:\
    \ use math.modf\n  -- Hint: use math.floor\n  -- Hint: use math.modf\n  -- Hint:\
    \ use math.floor\n  -- Hint: use math.modf\n  -- Hint: use math.floor\n  -- Hint:\
    \ use math.modf\n  -- Hint: use math.floor\n  -- Hint: use math.modf\n  -- Hint:\
    \ use math.floor\n  -- Hint: use math.modf\n  -- Hint: use math.floor\n  -- Hint:\
    \ use math.modf\n  -- Hint: use math.floor\n  -- Hint: use math.modf\n  -- Hint:\
    \ use math.floor\n  -- Hint: use math.modf\n  -- Hint: use math.floor\n  -- Hint:\
    \ use math.modf\n  -- Hint: use math.floor\n  -- Hint: use math.modf\n  -- Hint:\
    \ use math.floor\n  -- Hint: use math.modf\n  -- Hint: use math.floor\n  -- Hint:\
    \ use math.modf\n  -- Hint: use math.floor\n  -- Hint: use math.modf\n  -- Hint:\
    \ use math.floor\n  -- Hint: use ", "  -- Your code here\nend", "  -- Your code\
    \ here\nend", "  -- Write your solution here\nend", "  -- Write your code here\n\
    end", "  -- Write your solution here\nend", "  -- Write your solution here\nend",
  "  -- Write your solution here\nend", "  -- Write your solution here\nend", "  --\
    \ Write your solution here\nend", "  -- Write your solution here\nend", "  --\
    \ Write your solution here\nend", "  -- Write your solution here\nend", "  --\
    \ Write your solution here\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

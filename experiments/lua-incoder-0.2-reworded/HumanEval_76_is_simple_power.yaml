name: HumanEval_76_is_simple_power
language: lua
prompt: "-- Your task is to write a function that returns true if a number x is a\
  \ simple\n-- power of n and false in other cases.\n-- x is a simple power of n if\
  \ n**int=x\n-- For example:\n-- >>> is_simple_power(1, 4)\n-- true\n-- >>> is_simple_power(2,\
  \ 2)\n-- true\n-- >>> is_simple_power(8, 2)\n-- true\n-- >>> is_simple_power(3,\
  \ 2)\n-- false\n-- >>> is_simple_power(3, 1)\n-- false\n-- >>> is_simple_power(5,\
  \ 3)\n-- false\nlocal function is_simple_power(x, n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_simple_power\n\
  \    lu.assertEquals(candidate(16, 2), true)\n    lu.assertEquals(candidate(143214,\
  \ 16), false)\n    lu.assertEquals(candidate(4, 2), true)\n    lu.assertEquals(candidate(9,\
  \ 3), true)\n    lu.assertEquals(candidate(16, 4), true)\n    lu.assertEquals(candidate(24,\
  \ 2), false)\n    lu.assertEquals(candidate(128, 4), false)\n    lu.assertEquals(candidate(12,\
  \ 6), false)\n    lu.assertEquals(candidate(1, 1), true)\n    lu.assertEquals(candidate(1,\
  \ 12), true)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if n == 1 then return true end\n  if x == 1 then return false end\n\
    \  if x ~= n then return false end\n  local i = 1\n  while i < n do\n    if x\
    \ ~= n then\n      x = x * x\n    end\n    i = i + 1\n  end\n  return true\nend",
  "  if n == 1 then\n    return true\n  end\n  if x == 1 then\n    return false\n\
    \  end\n  if x == 0 then\n    return false\n  end\n  if n % 2 == 0 then\n    return\
    \ is_simple_power(x / 2, n-1)\n  end\n  return is_simple_power(x, n-1)\nend",
  "  if x == n then\n    return true\n  end\n  if x < n then\n    return false\n \
    \ end\n  local i = 1\n  while i <= n do\n    if x%n == 0 then\n      return false\n\
    \    end\n    x = x*x\n    i = i + 1\n  end\n  return true\nend", "  if x == n\
    \ then\n    return true\n  end\n  if x < n then\n    return false\n  end\n  local\
    \ i = 1\n  while i <= n do\n    local t = x * x\n    if t > n then\n      return\
    \ false\n    end\n    if t % n == 0 then\n      return true\n    end\n    i =\
    \ i + 1\n  end\n  return false\nend", "  if n == 1 then\n    return x == 1\n \
    \ else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if\
    \ x == n then\n    return true\n  elseif x < n then\n    return false\n  else\n\
    \    return is_simple_power(x//n, n) or is_simple_power(x, n-1)\n  end\nend",
  "  if n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if x == n then\n    return true\n  end\n  if x < n\
    \ then\n    return false\n  end\n  local r = 1\n  while n > 1 do\n    r = r *\
    \ x\n    n = n - 1\n  end\n  return r == x\nend", "  if x == n then\n    return\
    \ true\n  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend", "  if n == 1 then\n    return x == 1\n  else\n    return\
    \ x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if n == 1 then\n \
    \   return x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n\
    \  end\nend", "  if n == 1 then\n    return true\n  end\n  if n == 0 then\n  \
    \  return false\n  end\n  if n <= 0 then\n    return false\n  end\n  if x == 1\
    \ then\n    return true\n  end\n  if x == 0 then\n    return false\n  end\n  if\
    \ x == -1 then\n    return false\n  end\n  if x == -2 then\n    return false\n\
    \  end\n  if x == -3 then\n    return false\n  end\n  if x == -4 then\n    return\
    \ false\n  end\n  if x == -5 then\n    return false\n  end\n  if x == -6 then\n\
    \    return false\n  end\n  if x == -7 then\n    return false\n  end\n  if x ==\
    \ -8 then\n    return false\n  end\n  if x == -9 then\n    return false\n  end\n\
    \  if x == -10 then\n    return false\n  end\n  if x == -11 then\n    return false\n\
    \  end\n  if x == -12 then\n    return false\n  end\n  if x == -13 then\n    return\
    \ false\n  end\n  if x == -14 then\n    return false\n  end\n  if x == -15 then\n\
    \    return false\n  end\n  if x == -16 then\n    return false\n  end\n  if x\
    \ == -17 then\n    return false\n  end\n  if x == -18 then\n    return false\n\
    \  end\n  if x == -19 then\n    return false\n  end\n  if x == -20 then\n    return\
    \ false\n  end\n  if x == -21 then\n    return false\n  end\n  if x == -22 then\n\
    \    return false\n  end\n  if x == -23 then\n    return false\n  end\n  if x\
    \ == -24 then\n    return false\n  end\n  if x == -25 then\n    return false\n\
    \  end\n  if x == -26 then\n    return false\n  end\n  if x == -27 then\n    return\
    \ false\n  end\n  if x == -28 then\n    return false\n  end\n  if x == -29 then\n\
    \    return false\n  end\n  if x == -30 then\n    return false\n  end\n  if x\
    \ == -31 then\n    return false\n  end\n  if x == -32 then\n    return false\n\
    \  end\n  if x == -33 then\n    return false\n  end\n  if x == -34 then\n    return\
    \ false\n  end\n  if x == -35 then\n    return false\n  end\n  if x == -36 then\n\
    \    return false\n  end\n  if x == -37 then\n    return false\n  end\n  if x\
    \ == -38 then\n    return false\n  end\n  if x == -39 then\n    return false\n\
    \  end\n  if x == -40 then\n    return false\n  end\n  if x == -41 then\n    return\
    \ false\n  end\n  if x == -42 then\n    return false", "  if n == 0 then return\
    \ true end\n  if n == 1 then return x == 1 end\n  if n % 2 == 0 then return x\
    \ == (x * x) or is_simple_power(x, n / 2) end\n  return x == (x * x) or is_simple_power(x,\
    \ n / 2) or is_simple_power(x, n / 2)\nend", "  if n == 1 then\n    return x ==\
    \ 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\nend",
  "  if n == 1 then return true end\n  if x == 1 then return false end\n  if x ==\
    \ 0 then return false end\n  if x == -1 then return false end\n  if n == -1 then\
    \ return false end\n  if x == -n then return true end\n  if x == -n*n then return\
    \ true end\n  if n == -n*n then return true end\n  if x == -n*(n-1) or x == -n*(n+1)\
    \ then return true end\n  return false\nend", "  if n == 1 then return true end\n\
    \  if n == 0 then return false end\n  if n == -1 then return is_simple_power(x,\
    \ n+1) end\n  if x < 0 then return false end\n  if x < 1 then return is_simple_power(x,\
    \ n) end\n  if x == 1 then return true end\n  if x == 0 then return false end\n\
    \  if x == -1 then return is_simple_power(x, n) end\n  if x == -2 then return\
    \ is_simple_power(x, n-1) end\n  if x == -3 then return is_simple_power(x, n-2)\
    \ end\n  if x == -4 then return is_simple_power(x, n-3) end\n  if x == -5 then\
    \ return is_simple_power(x, n-4) end\n  if x == -6 then return is_simple_power(x,\
    \ n-5) end\n  if x == -7 then return is_simple_power(x, n-6) end\n  if x == -8\
    \ then return is_simple_power(x, n-7) end\n  if x == -9 then return is_simple_power(x,\
    \ n-8) end\n  if x == -10 then return is_simple_power(x, n-9) end\n  if x == -11\
    \ then return is_simple_power(x, n-10) end\n  if x == -12 then return is_simple_power(x,\
    \ n-11) end\n  if x == -13 then return is_simple_power(x, n-12) end\n  if x ==\
    \ -14 then return is_simple_power(x, n-13) end\n  if x == -15 then return is_simple_power(x,\
    \ n-14) end\n  if x == -16 then return is_simple_power(x, n-15) end\n  if x ==\
    \ -17 then return is_simple_power(x, n-16) end\n  if x == -18 then return is_simple_power(x,\
    \ n-17) end\n  if x == -19 then return is_simple_power(x, n-18) end\n  if x ==\
    \ -20 then return is_simple_power(x, n-19) end\n  if x == -21 then return is_simple_power(x,\
    \ n-20) end\n  if x == -22 then return is_simple_power(x, n-21) end\n  if x ==\
    \ -23 then return is_simple_power(x, n-22) end\n  if x == -24 then return is_simple_power(x,\
    \ n-23) end\n  if x == -25 then return is_simple_power(x, n-24) end\n  if x ==\
    \ -26 then return is_simple_power(x, n-25) end\n  if x == -27 then return is_simple_power(x,\
    \ n-26) end\n  if x == -28 then return is_simple_power(x, n-27) end\n  if x ==\
    \ -29 then return is_simple_power(x, n-28) end\n  if x == -30 then return is_simple_power(x,\
    \ n-29) end", "  if n == 1 then\n    return true\n  end\n  if n == 0 then\n  \
    \  return false\n  end\n  if n == -1 then\n    return false\n  end\n  if x ==\
    \ 1 then\n    return true\n  end\n  if x == 0 then\n    return false\n  end\n\
    \  if x == -1 then\n    return false\n  end\n  if x == -2 then\n    return false\n\
    \  end\n  if x == -3 then\n    return false\n  end\n  if x == -4 then\n    return\
    \ false\n  end\n  if x == -5 then\n    return false\n  end\n  if x == -6 then\n\
    \    return false\n  end\n  if x == -7 then\n    return false\n  end\n  if x ==\
    \ -8 then\n    return false\n  end\n  if x == -9 then\n    return false\n  end\n\
    \  if x == -10 then\n    return false\n  end\n  if x == -11 then\n    return false\n\
    \  end\n  if x == -12 then\n    return false\n  end\n  if x == -13 then\n    return\
    \ false\n  end\n  if x == -14 then\n    return false\n  end\n  if x == -15 then\n\
    \    return false\n  end\n  if x == -16 then\n    return false\n  end\n  if x\
    \ == -17 then\n    return false\n  end\n  if x == -18 then\n    return false\n\
    \  end\n  if x == -19 then\n    return false\n  end\n  if x == -20 then\n    return\
    \ false\n  end\n  if x == -21 then\n    return false\n  end\n  if x == -22 then\n\
    \    return false\n  end\n  if x == -23 then\n    return false\n  end\n  if x\
    \ == -24 then\n    return false\n  end\n  if x == -25 then\n    return false\n\
    \  end\n  if x == -26 then\n    return false\n  end\n  if x == -27 then\n    return\
    \ false\n  end\n  if x == -28 then\n    return false\n  end\n  if x == -29 then\n\
    \    return false\n  end\n  if x == -30 then\n    return false\n  end\n  if x\
    \ == -31 then\n    return false\n  end\n  if x == -32 then\n    return false\n\
    \  end\n  if x == -33 then\n    return false\n  end\n  if x == -34 then\n    return\
    \ false\n  end\n  if x == -35 then\n    return false\n  end\n  if x == -36 then\n\
    \    return false\n  end\n  if x == -37 then\n    return false\n  end\n  if x\
    \ == -38 then\n    return false\n  end\n  if x == -39 then\n    return false\n\
    \  end\n  if x == -40 then\n    return false\n  end\n  if x == -41 then\n    return\
    \ false\n  end\n  if x == -42 then\n    return false\n", "  if n == 1 then\n \
    \   return true\n  end\n  if n == 0 then\n    return false\n  end\n  if n % 2\
    \ == 0 then\n    return is_simple_power(x, n / 2)\n  end\n  if n % 3 == 0 then\n\
    \    return is_simple_power(x, n / 3)\n  end\n  return false\nend", "  if x ==\
    \ n then\n    return true\n  elseif x < n then\n    return false\n  else\n   \
    \ return is_simple_power(x, n-1)\n  end\nend", "  if n == 0 then return true end\n\
    \  if n == 1 then return x == 1 end\n  if n == 2 then return x == x end\n  if\
    \ n % 2 == 0 then return x == (x * x) or is_simple_power(x, n / 2) end\n  return\
    \ false\nend", "  if n == 0 then return true end\n  if n == 1 then return x ==\
    \ 1 end\n  if n == 2 then return x == x end\n  if n % 2 == 0 then\n    return\
    \ is_simple_power(x, n / 2) and\n           is_simple_power(x, n / 2)\n  end\n\
    \  return false\nend", "  if x == n then\n    return true\n  elseif x < n then\n\
    \    return false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", " \
    \ if n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if x == n then\n    return true\n  elseif x < n then\n\
    \    return false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", " \
    \ if n == 1 then\n    return true\n  end\n  if n == 0 then\n    return false\n\
    \  end\n  if x ~= x or n ~= n then\n    return false\n  end\n  if n == 1 then\n\
    \    return true\n  end\n  if x == 1 or x == x then\n    return true\n  end\n\
    \  if x == -1 then\n    return false\n  end\n  if x == -x then\n    return false\n\
    \  end\n  if x == -x or x == -x then\n    return true\n  end\n  if x == 1 or x\
    \ == x or x == -x then\n    return true\n  end\n  if x == -1 or x == -x then\n\
    \    return false\n  end\n  if x == -x or x == -x or x == -x then\n    return\
    \ true\n  end\n  if x == 1 or x == x or x == -x or x == -x then\n    return true\n\
    \  end\n  if x == -1 or x == -x or x == -x or x == -x then\n    return false\n\
    \  end\n  if x == -x or x == -x or x == -x or x == -x then\n    return true\n\
    \  end\n  if x == 1 or x == x or x == -x or x == -x or x == -x then\n    return\
    \ true\n  end\n  if x == -1 or x == -x or x == -x or x == -x or x == -x then\n\
    \    return false\n  end\n  if x == -x or x == -x or x == -x or x == -x or x ==\
    \ -x then\n    return true\n  end\n  if x == 1 or x == x or x == -x or x == -x\
    \ or x == -x or x == -x then\n    return true\n  end\n  if x == -1 or x == -x\
    \ or x == -x or x == -x or x == -x or x == -x then\n    return false\n  end\n\
    \  if x == -x or x == -x or x == -x or x == -x or x == -x or x == -x then\n  \
    \  return true\n  end\n  if x == 1 or x == x or x == -x or x == -x or x == -x\
    \ or x == -x or x == -x then\n    return true\n  end\n  if x == -1 or x == -x\
    \ or x == -x or x == -x or x == -x or x == -x or x == -x then\n    return false\n\
    \  end\n  if x == -x or x == -x or x == -x or x == -x or x == -x or x == -x or\
    \ x == -x then\n    return true\n  end\n  if x == 1 or x == x or x == -x or x\
    \ == -x or x == -x or x == -x or x == -x or x == -x then\n    return true\n  end\n",
  "  if x == n then\n    return true\n  elseif x < n then\n    return false\n  else\n\
    \    return is_simple_power(x, n-1)\n  end\nend", "  if n == 1 then\n    return\
    \ x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\n\
    end", "  if x == n then\n    return true\n  elseif x < n then\n    return false\n\
    \  else\n    return is_simple_power(x, n-1)\n  end\nend", "  if n == 1 then\n\
    \    return true\n  end\n  if n == 0 then\n    return false\n  end\n  if n ==\
    \ -1 then\n    return false\n  end\n  if n == -2 then\n    return false\n  end\n\
    \  if n == -3 then\n    return false\n  end\n  if n == -4 then\n    return false\n\
    \  end\n  if n == -5 then\n    return false\n  end\n  if n == -6 then\n    return\
    \ false\n  end\n  if n == -7 then\n    return false\n  end\n  if n == -8 then\n\
    \    return false\n  end\n  if n == -9 then\n    return false\n  end\n  if n ==\
    \ -10 then\n    return false\n  end\n  if n == -11 then\n    return false\n  end\n\
    \  if n == -12 then\n    return false\n  end\n  if n == -13 then\n    return false\n\
    \  end\n  if n == -14 then\n    return false\n  end\n  if n == -15 then\n    return\
    \ false\n  end\n  if n == -16 then\n    return false\n  end\n  if n == -17 then\n\
    \    return false\n  end\n  if n == -18 then\n    return false\n  end\n  if n\
    \ == -19 then\n    return false\n  end\n  if n == -20 then\n    return false\n\
    \  end\n  if n == -21 then\n    return false\n  end\n  if n == -22 then\n    return\
    \ false\n  end\n  if n == -23 then\n    return false\n  end\n  if n == -24 then\n\
    \    return false\n  end\n  if n == -25 then\n    return false\n  end\n  if n\
    \ == -26 then\n    return false\n  end\n  if n == -27 then\n    return false\n\
    \  end\n  if n == -28 then\n    return false\n  end\n  if n == -29 then\n    return\
    \ false\n  end\n  if n == -30 then\n    return false\n  end\n  if n == -31 then\n\
    \    return false\n  end\n  if n == -32 then\n    return false\n  end\n  if n\
    \ == -33 then\n    return false\n  end\n  if n == -34 then\n    return false\n\
    \  end\n  if n == -35 then\n    return false\n  end\n  if n == -36 then\n    return\
    \ false\n  end\n  if n == -37 then\n    return false\n  end\n  if n == -38 then\n\
    \    return false\n  end\n  if n == -39 then\n    return false\n  end\n  if n\
    \ == -40 then\n    return false\n  end\n  if n == -41 then\n    return false\n\
    \  end\n  if n == -42 then\n    return false\n  end\n  if n == -43 then\n    return\
    \ false\n  end\n  if n == -44 then\n    return false\n  end\n  if n == -45 then\n",
  "  if n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if n == 0 then\n    return true\n  end\n  if n == 1\
    \ then\n    return x == 1\n  end\n  if n == 2 then\n    return x == 1\n  end\n\
    \  if n % 2 == 0 then\n    return is_simple_power(x, n / 2)\n  end\n  return false\n\
    end", "  if x == 1 then return true end\n  if n == 0 then return false end\n \
    \ if n == 1 then return x == n end\n  if n % 2 == 0 then return is_simple_power(x,\
    \ n / 2) end\n  return false\nend", "  if x == n then\n    return true\n  end\n\
    \  if x < n then\n    return false\n  end\n  local i = 1\n  while i <= n do\n\
    \    if x%i == 0 then\n      return false\n    end\n    i = i * 2\n  end\n  return\
    \ true\nend", "  if x == n then\n    return true\n  end\n  if x < n then\n   \
    \ return false\n  end\n  local r = 1\n  while n ~= 1 do\n    r = r * x\n    n,\
    \ x = x / n, n\n  end\n  return r == x\nend", "  if x == 1 then return true end\n\
    \  if x == 0 then return false end\n  if n == 0 then return false end\n  if n\
    \ == 1 then return x == n end\n  if n % 2 == 0 then return is_simple_power(x//2,\
    \ n-1) or is_simple_power(x//2, n) end\n  return false\nend", "  if n == 1 then\n\
    \    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n\
    \  end\nend", "  if n == 1 then\n    return true\n  end\n  if x == 1 then\n  \
    \  return false\n  end\n  if x == 0 then\n    return false\n  end\n  if n == 0\
    \ then\n    return false\n  end\n  if n % 2 == 1 then\n    return false\n  end\n\
    \  if n % 3 == 0 then\n    return false\n  end\n  if n % 5 == 0 then\n    return\
    \ false\n  end\n  if n % 7 == 0 then\n    return false\n  end\n  if n % 9 == 0\
    \ then\n    return false\n  end\n  if n % 11 == 0 then\n    return false\n  end\n\
    \  if n % 13 == 0 then\n    return false\n  end\n  if n % 17 == 0 then\n    return\
    \ false\n  end\n  if n % 19 == 0 then\n    return false\n  end\n  if n % 23 ==\
    \ 0 then\n    return false\n  end\n  if n % 29 == 0 then\n    return false\n \
    \ end\n  if n % 31 == 0 then\n    return false\n  end\n  if n % 37 == 0 then\n\
    \    return false\n  end\n  if n % 41 == 0 then\n    return false\n  end\n  if\
    \ n % 43 == 0 then\n    return false\n  end\n  if n % 47 == 0 then\n    return\
    \ false\n  end\n  if n % 53 == 0 then\n    return false\n  end\n  if n % 59 ==\
    \ 0 then\n    return false\n  end\n  if n % 61 == 0 then\n    return false\n \
    \ end\n  if n % 67 == 0 then\n    return false\n  end\n  if n % 71 == 0 then\n\
    \    return false\n  end\n  if n % 73 == 0 then\n    return false\n  end\n  if\
    \ n % 79 == 0 then\n    return false\n  end\n  if n % 83 == 0 then\n    return\
    \ false\n  end\n  if n % 89 == 0 then\n    return false\n  end\n  if n % 97 ==\
    \ 0 then\n    return false\n  end\n  if n % 101 == 0 then\n    return false\n\
    \  end\n  if n % 103 == 0 then\n    return false\n  end\n  if n % 107 == 0 then\n\
    \    return false\n  end\n  if n % 109 == 0 then\n    return false\n  end\n  if\
    \ n % 113 == 0 then\n    return false\n  end\n  if n % 117 == 0 then\n    return\
    \ false\n  end\n  if n % 121 == 0 then\n    return false\n  end\n  if n % 123\
    \ == 0 then\n    return false\n  end\n  if n % 127 == 0 then\n    return false\n\
    \  end\n  if n % 131 == 0 then\n    return false\n  end\n  if n % 137 == 0 then\n\
    \    return false\n  end\n  if n % 139 == 0 then\n    return false\n  end\n  if\
    \ n % 143 == 0 then\n    return false\n  end\n  if n % 147 == 0 then", "  if n\
    \ == 1 then\n    return true\n  end\n  if n == 0 then\n    return false\n  end\n\
    \  if n == -1 then\n    return false\n  end\n  if n == -2 then\n    return false\n\
    \  end\n  if n == -3 then\n    return false\n  end\n  if n == -4 then\n    return\
    \ false\n  end\n  if n == -5 then\n    return false\n  end\n  if n == -6 then\n\
    \    return false\n  end\n  if n == -7 then\n    return false\n  end\n  if n ==\
    \ -8 then\n    return false\n  end\n  if n == -9 then\n    return false\n  end\n\
    \  if n == -10 then\n    return false\n  end\n  if n == -11 then\n    return false\n\
    \  end\n  if n == -12 then\n    return false\n  end\n  if n == -13 then\n    return\
    \ false\n  end\n  if n == -14 then\n    return false\n  end\n  if n == -15 then\n\
    \    return false\n  end\n  if n == -16 then\n    return false\n  end\n  if n\
    \ == -17 then\n    return false\n  end\n  if n == -18 then\n    return false\n\
    \  end\n  if n == -19 then\n    return false\n  end\n  if n == -20 then\n    return\
    \ false\n  end\n  if n == -21 then\n    return false\n  end\n  if n == -22 then\n\
    \    return false\n  end\n  if n == -23 then\n    return false\n  end\n  if n\
    \ == -24 then\n    return false\n  end\n  if n == -25 then\n    return false\n\
    \  end\n  if n == -26 then\n    return false\n  end\n  if n == -27 then\n    return\
    \ false\n  end\n  if n == -28 then\n    return false\n  end\n  if n == -29 then\n\
    \    return false\n  end\n  if n == -30 then\n    return false\n  end\n  if n\
    \ == -31 then\n    return false\n  end\n  if n == -32 then\n    return false\n\
    \  end\n  if n == -33 then\n    return false\n  end\n  if n == -34 then\n    return\
    \ false\n  end\n  if n == -35 then\n    return false\n  end\n  if n == -36 then\n\
    \    return false\n  end\n  if n == -37 then\n    return false\n  end\n  if n\
    \ == -38 then\n    return false\n  end\n  if n == -39 then\n    return false\n\
    \  end\n  if n == -40 then\n    return false\n  end\n  if n == -41 then\n    return\
    \ false\n  end\n  if n == -42 then\n    return false\n  end\n  if n == -43 then\n\
    \    return false\n  end\n  if n == -44 then\n    return false\n  end\n  if n\
    \ == -45 then\n", "  if n == 1 then return true end\n  if n == 0 then return false\
    \ end\n  if n <= 0 then return false end\n  if x == 1 then return true end\n \
    \ if x == 0 then return false end\n  if x ~= x then return false end\n  if n ~=\
    \ n then return false end\n  if n <= 1 then return true end\n  if n == x then\
    \ return true end\n  if n == x*x then return true end\n  if n == x*x*x then return\
    \ true end\n  if n == x*x*x*x then return true end\n  if n == x*x*x*x*x then return\
    \ true end\n  return false\nend", "  if x == 1 then return true end\n  if x ==\
    \ 0 then return false end\n  if n == 0 then return false end\n  if n == 1 then\
    \ return x == n end\n  if n % 2 == 0 then return not is_simple_power(x, n / 2)\
    \ end\n  return not is_simple_power(x * x, n / 2)\nend", "  -- Base case\n  if\
    \ n==1 then\n    return true\n  end\n  -- Recursive case\n  if x%n==0 then\n \
    \   return true\n  end\n  return false\nend", "  if n == 1 then\n    return x\
    \ == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\nend",
  "  if n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if n == 1 then\n    return true\n  end\n  if n == 0\
    \ then\n    return false\n  end\n  if n == -1 then\n    return false\n  end\n\
    \  if n == -2 then\n    return false\n  end\n  if n == -3 then\n    return false\n\
    \  end\n  if n == -4 then\n    return false\n  end\n  if n == -5 then\n    return\
    \ false\n  end\n  if n == -6 then\n    return false\n  end\n  if n == -7 then\n\
    \    return false\n  end\n  if n == -8 then\n    return false\n  end\n  if n ==\
    \ -9 then\n    return false\n  end\n  if n == -10 then\n    return false\n  end\n\
    \  if n == -11 then\n    return false\n  end\n  if n == -12 then\n    return false\n\
    \  end\n  if n == -13 then\n    return false\n  end\n  if n == -14 then\n    return\
    \ false\n  end\n  if n == -15 then\n    return false\n  end\n  if n == -16 then\n\
    \    return false\n  end\n  if n == -17 then\n    return false\n  end\n  if n\
    \ == -18 then\n    return false\n  end\n  if n == -19 then\n    return false\n\
    \  end\n  if n == -20 then\n    return false\n  end\n  if n == -21 then\n    return\
    \ false\n  end\n  if n == -22 then\n    return false\n  end\n  if n == -23 then\n\
    \    return false\n  end\n  if n == -24 then\n    return false\n  end\n  if n\
    \ == -25 then\n    return false\n  end\n  if n == -26 then\n    return false\n\
    \  end\n  if n == -27 then\n    return false\n  end\n  if n == -28 then\n    return\
    \ false\n  end\n  if n == -29 then\n    return false\n  end\n  if n == -30 then\n\
    \    return false\n  end\n  if n == -31 then\n    return false\n  end\n  if n\
    \ == -32 then\n    return false\n  end\n  if n == -33 then\n    return false\n\
    \  end\n  if n == -34 then\n    return false\n  end\n  if n == -35 then\n    return\
    \ false\n  end\n  if n == -36 then\n    return false\n  end\n  if n == -37 then\n\
    \    return false\n  end\n  if n == -38 then\n    return false\n  end\n  if n\
    \ == -39 then\n    return false\n  end\n  if n == -40 then\n    return false\n\
    \  end\n  if n == -41 then\n    return false\n  end\n  if n == -42 then\n    return\
    \ false\n  end\n  if n == -43 then\n    return false\n  end\n  if n == -44 then\n\
    \    return false\n  end\n  if n == -45 then\n", "  if x == n then\n    return\
    \ true\n  elseif n < 0 then\n    return false\n  elseif n == 0 then\n    return\
    \ false\n  elseif n < 1 then\n    return is_simple_power(x, n/2)\n  else\n   \
    \ return is_simple_power(x*x, n/2)\n  end\nend", "  if x == 1 then\n    return\
    \ true\n  elseif x == n then\n    return true\n  elseif n <= 0 then\n    return\
    \ false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", "  if n == 1\
    \ then\n    return true\n  end\n  if n == 0 then\n    return false\n  end\n  if\
    \ n == -1 then\n    return false\n  end\n  if x == 0 then\n    return false\n\
    \  end\n  if x == 1 then\n    return true\n  end\n  if x == -1 then\n    return\
    \ true\n  end\n  if x == -1 and n == -1 then\n    return true\n  end\n  if x ==\
    \ -1 and n == 1 then\n    return true\n  end\n  if x == -1 and n == 0 then\n \
    \   return true\n  end\n  if x == -1 and n == -1 then\n    return true\n  end\n\
    \  if x == -1 and n == 1 then\n    return true\n  end\n  if x == -1 and n == 0\
    \ then\n    return true\n  end\n  if x == -1 and n == -1 then\n    return true\n\
    \  end\n  if x == -1 and n == 1 then\n    return true\n  end\n  if x == -1 and\
    \ n == 0 then\n    return true\n  end\n  if x == -1 and n == -1 then\n    return\
    \ true\n  end\n  if x == -1 and n == 1 then\n    return true\n  end\n  if x ==\
    \ -1 and n == 0 then\n    return true\n  end\n  if x == -1 and n == -1 then\n\
    \    return true\n  end\n  if x == -1 and n == 1 then\n    return true\n  end\n\
    \  if x == -1 and n == 0 then\n    return true\n  end\n  if x == -1 and n == -1\
    \ then\n    return true\n  end\n  if x == -1 and n == 1 then\n    return true\n\
    \  end\n  if x == -1 and n == 0 then\n    return true\n  end\n  if x == -1 and\
    \ n == -1 then\n    return true\n  end\n  if x == -1 and n == 1 then\n    return\
    \ true\n  end\n  if x == -1 and n == 0 then\n    return true\n  end\n  if x ==\
    \ -1 and n == -1 then\n    return true\n  end\n  if x == -1 and n == 1 then\n\
    \    return true\n  end\n  if x == -1 and n == 0 then\n    return true\n  end\n\
    \  if x == -1 and n == -1 then\n    return true\n  end\n  if x == -1 and n ==\
    \ 1 then\n    return true\n  end\n  if x == -1 and n == 0 then\n    return true\n\
    \  end\n  if x == -1 and n == -1 then\n    return true\n  end\n  if x == -1 and\
    \ n == 1 then\n    return true\n  end\n  if x == -1 and n == 0 then\n    return\
    \ true\n  end\n  if x == -1 and n == -1 then\n    return true\n  end\n  if x ==\
    \ -1 and n == 1 then\n    return true\n  end\n  if x == -1 and n == 0 then\n \
    \   return true\n  end\n  if x == -1 and n == -1 then\n    return true\n  end\n\
    \  if x == -1 and n == 1 then\n    return true", "  if n == 1 then\n    return\
    \ x == 1\n  elseif n < 0 then\n    return false\n  else\n    return x == n*n\n\
    \  end\nend", "  if x == 1 then return true end\n  if n == 0 then return false\
    \ end\n  if n == 1 then return x == n end\n  if n % 2 == 0 then return is_simple_power(x,\
    \ n / 2) end\n  return is_simple_power(x * x, n / 2)\nend", "  if n == 1 then\n\
    \    return true\n  end\n  if n == 0 then\n    return false\n  end\n  if n ==\
    \ -1 then\n    return false\n  end\n  if n == -2 then\n    return false\n  end\n\
    \  if n == -3 then\n    return false\n  end\n  if n == -4 then\n    return false\n\
    \  end\n  if n == -5 then\n    return false\n  end\n  if n == -6 then\n    return\
    \ false\n  end\n  if n == -7 then\n    return false\n  end\n  if n == -8 then\n\
    \    return false\n  end\n  if n == -9 then\n    return false\n  end\n  if n ==\
    \ -10 then\n    return false\n  end\n  if n == -11 then\n    return false\n  end\n\
    \  if n == -12 then\n    return false\n  end\n  if n == -13 then\n    return false\n\
    \  end\n  if n == -14 then\n    return false\n  end\n  if n == -15 then\n    return\
    \ false\n  end\n  if n == -16 then\n    return false\n  end\n  if n == -17 then\n\
    \    return false\n  end\n  if n == -18 then\n    return false\n  end\n  if n\
    \ == -19 then\n    return false\n  end\n  if n == -20 then\n    return false\n\
    \  end\n  if n == -21 then\n    return false\n  end\n  if n == -22 then\n    return\
    \ false\n  end\n  if n == -23 then\n    return false\n  end\n  if n == -24 then\n\
    \    return false\n  end\n  if n == -25 then\n    return false\n  end\n  if n\
    \ == -26 then\n    return false\n  end\n  if n == -27 then\n    return false\n\
    \  end\n  if n == -28 then\n    return false\n  end\n  if n == -29 then\n    return\
    \ false\n  end\n  if n == -30 then\n    return false\n  end\n  if n == -31 then\n\
    \    return false\n  end\n  if n == -32 then\n    return false\n  end\n  if n\
    \ == -33 then\n    return false\n  end\n  if n == -34 then\n    return false\n\
    \  end\n  if n == -35 then\n    return false\n  end\n  if n == -36 then\n    return\
    \ false\n  end\n  if n == -37 then\n    return false\n  end\n  if n == -38 then\n\
    \    return false\n  end\n  if n == -39 then\n    return false\n  end\n  if n\
    \ == -40 then\n    return false\n  end\n  if n == -41 then\n    return false\n\
    \  end\n  if n == -42 then\n    return false\n  end\n  if n == -43 then\n    return\
    \ false\n  end\n  if n == -44 then\n    return false\n  end\n  if n == -45 then\n",
  "  if x == n then\n    return true\n  end\n  if x < n then\n    return false\n \
    \ end\n  local i = 1\n  while i <= n do\n    if x%i == 0 then\n      return false\n\
    \    end\n    i = i * 2\n  end\n  return true\nend", "  if x == n then\n    return\
    \ true\n  end\n  if x < n then\n    return false\n  end\n  local power = 1\n \
    \ while power < n do\n    power = power * x\n  end\n  return power == x\nend",
  "  if n == 0 then return true end\n  if n == 1 then return x == 1 end\n  if n ==\
    \ 2 then return x == x end\n  if n % 2 == 0 then return x % n == 0 end\n  return\
    \ false\nend", "  if n == 1 then\n    return x == 1\n  else\n    return x % n\
    \ == 0 and is_simple_power(x / n, n)\n  end\nend", "  if n == 0 then return false\
    \ end\n  if n == 1 then return x == 1 end\n  if n % 2 == 0 then return not is_simple_power(x,\
    \ n / 2) end\n  if x % n == 0 then return true end\n  return false\nend", "  --\
    \ Base case\n  if n == 1 then\n    return x == 1\n  end", "  if n == 1 then\n\
    \    return true\n  elseif n < 0 then\n    return false\n  elseif n == 0 then\n\
    \    return false\n  else\n    return (x == math.pow(x, n))\n  end\nend", "  if\
    \ x == n then\n    return true\n  end\n  if x ~= n then\n    return false\n  end\n\
    \  if n == 1 then\n    return true\n  end\n  if n == 2 then\n    return x == 1\n\
    \  end\n  if n % 2 == 0 then\n    return is_simple_power(x, n / 2)\n  end\n  return\
    \ is_simple_power(x * x, n / 2)\nend", "  if x == n then\n    return true\n  elseif\
    \ x < n then\n    return false\n  else\n    return is_simple_power(x, n-1)\n \
    \ end\nend", "  if n == 1 then\n    return true\n  end\n  if n == 0 then\n   \
    \ return false\n  end\n  if n == -1 then\n    return false\n  end\n  if n == -2\
    \ then\n    return false\n  end\n  if n == -3 then\n    return false\n  end\n\
    \  if n == -4 then\n    return false\n  end\n  if n == -5 then\n    return false\n\
    \  end\n  if n == -6 then\n    return false\n  end\n  if n == -7 then\n    return\
    \ false\n  end\n  if n == -8 then\n    return false\n  end\n  if n == -9 then\n\
    \    return false\n  end\n  if n == -10 then\n    return false\n  end\n  if n\
    \ == -11 then\n    return false\n  end\n  if n == -12 then\n    return false\n\
    \  end\n  if n == -13 then\n    return false\n  end\n  if n == -14 then\n    return\
    \ false\n  end\n  if n == -15 then\n    return false\n  end\n  if n == -16 then\n\
    \    return false\n  end\n  if n == -17 then\n    return false\n  end\n  if n\
    \ == -18 then\n    return false\n  end\n  if n == -19 then\n    return false\n\
    \  end\n  if n == -20 then\n    return false\n  end\n  if n == -21 then\n    return\
    \ false\n  end\n  if n == -22 then\n    return false\n  end\n  if n == -23 then\n\
    \    return false\n  end\n  if n == -24 then\n    return false\n  end\n  if n\
    \ == -25 then\n    return false\n  end\n  if n == -26 then\n    return false\n\
    \  end\n  if n == -27 then\n    return false\n  end\n  if n == -28 then\n    return\
    \ false\n  end\n  if n == -29 then\n    return false\n  end\n  if n == -30 then\n\
    \    return false\n  end\n  if n == -31 then\n    return false\n  end\n  if n\
    \ == -32 then\n    return false\n  end\n  if n == -33 then\n    return false\n\
    \  end\n  if n == -34 then\n    return false\n  end\n  if n == -35 then\n    return\
    \ false\n  end\n  if n == -36 then\n    return false\n  end\n  if n == -37 then\n\
    \    return false\n  end\n  if n == -38 then\n    return false\n  end\n  if n\
    \ == -39 then\n    return false\n  end\n  if n == -40 then\n    return false\n\
    \  end\n  if n == -41 then\n    return false\n  end\n  if n == -42 then\n    return\
    \ false\n  end\n  if n == -43 then\n    return false\n  end\n  if n == -44 then\n\
    \    return false\n  end\n  if n == -45 then\n", "  -- Base case\n  if n == 1\
    \ then\n    return x == 1\n  end\n  -- Recursive case\n  if x % n == 0 then\n\
    \    return is_simple_power(x / n, n)\n  end\n  return false\nend", "  if x ==\
    \ n then\n    return true\n  end\n  if x < n then\n    return false\n  end\n \
    \ if n == 1 then\n    return true\n  end\n  if x % n ~= 0 then\n    return false\n\
    \  end\n  local i = 1\n  while i <= n do\n    if x % n == 0 then\n      return\
    \ false\n    end\n    i = i + 1\n  end\n  return true\nend", "  if x == n then\n\
    \    return true\n  elseif x < n then\n    return false\n  else\n    return is_simple_power(x^n,\
    \ n)\n  end\nend", "  if x == 1 then return true end\n  if x == 0 then return\
    \ false end\n  if n == 0 then return false end\n  if n == 1 then return x == n\
    \ end\n  if n == 2 then return x == n*n end\n  if n % 2 == 0 then return x ==\
    \ n*n or x == n*n*n end\n  return false\nend", "  if x == n then\n    return true\n\
    \  elseif x < n then\n    return false\n  else\n    return is_simple_power(x *\
    \ x, n)\n  end\nend", "  if n == 1 then return true end\n  if n == 0 then return\
    \ false end\n  if n % 2 == 0 then return is_simple_power(x, n / 2) end\n  return\
    \ is_simple_power(x * x, n / 2)\nend", "  if x == n then\n    return true\n  end\n\
    \  if x < n then\n    return false\n  end\n  local r = 1\n  while n > 1 do\n \
    \   r = r * x\n    n = n - 1\n  end\n  return r == x\nend", "  if x == n then\n\
    \    return true\n  end\n  if x ~= n then\n    return false\n  end\n  if n ==\
    \ 1 then\n    return true\n  end\n  if n == 0 then\n    return false\n  end\n\
    \  if n ~= 1 then\n    return is_simple_power(x, n-1)\n  end\n  return is_simple_power(x,\
    \ n-1)\nend", "  if n == 1 then\n    return x == 1\n  else\n    return x % n ==\
    \ 0 and is_simple_power(x / n, n)\n  end\nend", "  if n == 1 then\n    return\
    \ x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\n\
    end", "  if x == n then\n    return true\n  end\n  if x < n then\n    return false\n\
    \  end\n  if n == 1 then\n    return true\n  end\n  if x ~= n then\n    return\
    \ is_simple_power(x^n, n)\n  end\n  return true\nend", "  if n == 1 then\n   \
    \ return x == 1\n  elseif n == 0 then\n    return false\n  elseif n < 0 then\n\
    \    return not is_simple_power(x, -n)\n  end\n  local function is_power_of_two(n)\n\
    \    local x = tonumber(string.format(\"%g\", n))\n    return x == 0 and n ~=\
    \ 0\n  end\n  local function is_power_of_two_or_zero(n)\n    return is_power_of_two(n)\
    \ or n == 0\n  end\n  local function is_power_of_two_or_one(n)\n    return is_power_of_two(n)\
    \ or n == 1\n  end\n  local function is_power_of_two_or_zero(n)\n    return is_power_of_two(n)\
    \ or n == 0\n  end\n  local function is_power_of_two_or_one(n)\n    return is_power_of_two(n)\
    \ or n == 1\n  end\n  local function is_power_of_two_or_zero(n)\n    return is_power_of_two(n)\
    \ or n == 0\n  end\n  local function is_power_of_two_or_one(n)\n    return is_power_of_two(n)\
    \ or n == 1\n  end\n  local function is_power_of_two_or_zero(n)\n    return is_power_of_two(n)\
    \ or n == 0\n  end\n  local function is_power_of_two_or_one(n)\n    return is_power_of_two(n)\
    \ or n == 1\n  end\n  local function is_power_of_two_or_zero(n)\n    return is_power_of_two(n)\
    \ or n == 0\n  end\n  local function is_power_of_two_or_one(n)\n    return is_power_of_two(n)\
    \ or n == 1\n  end\n  local function is_power_of_two_or_zero(n)\n    return is_power_of_two(n)\
    \ or n == 0\n  end\n  local function is_power_of_two_or_one(n)\n    return is_power_of_two(n)\
    \ or n == 1\n  end\n  local function is_power_of_two_or_zero(n)\n    return is_power_of_two(n)\
    \ or n == 0\n  end\n  local function is_power_of_two_or_one(n)\n    return is_power_of_two(n)\
    \ or n == 1\n  end\n  local function is_power_of_two_or_zero(n)\n    return is_power_of_two(n)\
    \ or n == 0\n  end\n  local function is_power_of_two_or_one(n)\n    return is_power_of_two(n)\
    \ or n == 1\n  end\n  local function is_power_of_two_or_zero(n)\n    return is_power_of_two(n)\
    \ or n == 0\n  end\n  local function is_power_of_two_or_one(n)\n    return is_power_of_two(n)\
    \ or n == 1\n  end\n  local function is_power_of_two_or_zero(n)\n    return is_power_of_two(n)\
    \ or n == 0\n  end\n  local function is_power_of_", "  if x == n then\n    return\
    \ true\n  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend", "  if n == 1 then\n    return x == 1\n  else\n    return\
    \ x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if n == 1 then\n \
    \   return true\n  end\n  if x == n then\n    return true\n  end\n  if x ~= n\
    \ then\n    return false\n  end\n  local i = 1\n  while i <= n do\n    if x %\
    \ n == 0 then\n      return false\n    end\n    i = i + 1\n  end\n  return true\n\
    end", "  if x == n then\n    return true\n  end\n  if x < n then\n    return false\n\
    \  end\n  local power = 1\n  while power < n do\n    power = power * x\n  end\n\
    \  return power == x\nend", "  if n == 1 then return true end\n  if n == 0 then\
    \ return false end\n  if n < 0 then return false end\n  if x == 0 then return\
    \ false end\n  if x == 1 then return true end\n  if x == -1 then return true end\n\
    \  if x == -1 then return true end\n  if x == -2 then return true end\n  if x\
    \ == -3 then return true end\n  if x == -4 then return true end\n  if x == -5\
    \ then return true end\n  if x == -6 then return true end\n  if x == -7 then return\
    \ true end\n  if x == -8 then return true end\n  if x == -9 then return true end\n\
    \  if x == -10 then return true end\n  if x == -11 then return true end\n  if\
    \ x == -12 then return true end\n  if x == -13 then return true end\n  if x ==\
    \ -14 then return true end\n  if x == -15 then return true end\n  if x == -16\
    \ then return true end\n  if x == -17 then return true end\n  if x == -18 then\
    \ return true end\n  if x == -19 then return true end\n  if x == -20 then return\
    \ true end\n  if x == -21 then return true end\n  if x == -22 then return true\
    \ end\n  if x == -23 then return true end\n  if x == -24 then return true end\n\
    \  if x == -25 then return true end\n  if x == -26 then return true end\n  if\
    \ x == -27 then return true end\n  if x == -28 then return true end\n  if x ==\
    \ -29 then return true end\n  if x == -30 then return true end\n  if x == -31\
    \ then return true end\n  if x == -32 then return true end\n  if x == -33 then\
    \ return true end\n  if x == -34 then return true end\n  if x == -35 then return\
    \ true end\n  if x == -36 then return true end\n  if x == -37 then return true\
    \ end\n  if x == -38 then return true end\n  if x == -39 then return true end\n\
    \  if x == -40 then return true end\n  if x == -41 then return true end\n  if\
    \ x == -42 then return true end\n  if x == -43 then return true end\n  if x ==\
    \ -44 then return true end\n  if x == -45 then return true end\n  if x == -46\
    \ then return true end\n  if x == -47 then return true end\n  if x == -48 then\
    \ return true end\n  if x == -49 then return true end\n  if x == -50 then return\
    \ true end\n  if x == -51 then return true end", "  if n == 0 then return false\
    \ end\n  if n == 1 then return x == 1 end\n  if n == 2 then return x == x end\n\
    \  if n % 2 == 0 then return x == (x * x) or x == (x * x) or x == (x * x * x)\
    \ end\n  return x == (x * x * x * x) or x == (x * x * x * x * x) or x == (x *\
    \ x * x * x * x * x)\nend", "  if n == 1 then\n    return x == 1\n  else\n   \
    \ return x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if n == 1 then\
    \ return true end\n  if x ~= n then return false end\n  if n <= 1 then return\
    \ true end\n  if x == 1 then return true end\n  if x == n then return true end\n\
    \  if x ~= n then return false end\n  if x ~= n then return false end\n  if x\
    \ ~= n then return false end\n  if x ~= n then return false end\n  if x ~= n then\
    \ return false end\n  if x ~= n then return false end\n  if x ~= n then return\
    \ false end\n  if x ~= n then return false end\n  if x ~= n then return false\
    \ end\n  if x ~= n then return false end\n  if x ~= n then return false end\n\
    \  if x ~= n then return false end\n  if x ~= n then return false end\n  if x\
    \ ~= n then return false end\n  if x ~= n then return false end\n  if x ~= n then\
    \ return false end\n  if x ~= n then return false end\n  if x ~= n then return\
    \ false end\n  if x ~= n then return false end\n  if x ~= n then return false\
    \ end\n  if x ~= n then return false end\n  if x ~= n then return false end\n\
    \  if x ~= n then return false end\n  if x ~= n then return false end\n  if x\
    \ ~= n then return false end\n  if x ~= n then return false end\n  if x ~= n then\
    \ return false end\n  if x ~= n then return false end\n  if x ~= n then return\
    \ false end\n  if x ~= n then return false end\n  if x ~= n then return false\
    \ end\n  if x ~= n then return false end\n  if x ~= n then return false end\n\
    \  if x ~= n then return false end\n  if x ~= n then return false end\n  if x\
    \ ~= n then return false end\n  if x ~= n then return false end\n  if x ~= n then\
    \ return false end\n  if x ~= n then return false end\n  if x ~= n then return\
    \ false end\n  if x ~= n then return false end\n  if x ~= n then return false\
    \ end\n  if x ~= n then return false end\n  if x ~= n then return false end\n\
    \  if x ~= n then return false end\n  if x ~= n then return false end\n  if x\
    \ ~= n then return false end", "  if n == 1 then\n    return x == 1\n  else\n\
    \    return x == n*n\n  end\nend", "  if x == n then\n    return true\n  end\n\
    \  if x < n then\n    return false\n  end\n  if n == 1 then\n    return true\n\
    \  end\n  if n % 2 == 0 then\n    return is_simple_power(x, n / 2)\n  end\n  return\
    \ is_simple_power(x, n / 2) or\n         is_simple_power(x * x, n / 2)\nend",
  "  if n == 0 then\n    return true\n  end\n  if n == 1 then\n    return x == 1\n\
    \  end\n  if n % 2 == 0 then\n    return is_simple_power(x, n / 2)\n  end\n  return\
    \ is_simple_power(x * x, n / 2)\nend", "  if x == 1 then return true end\n  if\
    \ n == 0 then return false end\n  if n < 0 then return false end\n  if x ~= x*x\
    \ then return false end\n  if n <= 1 then return true end\n  if x == n then return\
    \ true end\n  if x ~= x*x then return false end\n  if n <= 1 then return true\
    \ end\n  if x == n then return true end\n  if x ~= x*x then return false end\n\
    \  if n <= 1 then return true end\n  if x == n then return true end\n  if x ~=\
    \ x*x then return false end\n  if n <= 1 then return true end\n  if x == n then\
    \ return true end\n  if x ~= x*x then return false end\n  if n <= 1 then return\
    \ true end\n  if x == n then return true end\n  if x ~= x*x then return false\
    \ end\n  if n <= 1 then return true end\n  if x == n then return true end\n  if\
    \ x ~= x*x then return false end\n  if n <= 1 then return true end\n  if x ==\
    \ n then return true end\n  if x ~= x*x then return false end\n  if n <= 1 then\
    \ return true end\n  if x == n then return true end\n  if x ~= x*x then return\
    \ false end\n  if n <= 1 then return true end\n  if x == n then return true end\n\
    \  if x ~= x*x then return false end\n  if n <= 1 then return true end\n  if x\
    \ == n then return true end\n  if x ~= x*x then return false end\n  if n <= 1\
    \ then return true end\n  if x == n then return true end\n  if x ~= x*x then return\
    \ false end\n  if n <= 1 then return true end\n  if x == n then return true end\n\
    \  if x ~= x*x then return false end\n  if n <= 1 then return true end\n  if x\
    \ == n then return true end\n  if x ~= x*x then return false end\n  if n <= 1\
    \ then return true end\n  if x == n then return true end\n  if x ~= x*x then return\
    \ false end\n  if n <= 1 then return true end\n  if x == n then return true end\n\
    \  if x ~= x*x then return false end\n  if n <= 1 then return true end\n  if x\
    \ == n then return true end\n  if x ~= x*x then return false end\n  if n <= 1\
    \ then return true end\n  if x == n then return true end\n  if x ~= x*x then return\
    \ false end\n  if ", "  if x == n then\n    return true\n  elseif x < n then\n\
    \    return false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", " \
    \ if n == 1 then return true end\n  if n == 0 then return false end\n  if n ==\
    \ -1 then return false end\n  if n == -2 then return false end\n  if n == -3 then\
    \ return false end\n  if n == -4 then return false end\n  if n == -5 then return\
    \ false end\n  if n == -6 then return false end\n  if n == -7 then return false\
    \ end\n  if n == -8 then return false end\n  if n == -9 then return false end\n\
    \  if n == -10 then return false end\n  if n == -11 then return false end\n  if\
    \ n == -12 then return false end\n  if n == -13 then return false end\n  if n\
    \ == -14 then return false end\n  if n == -15 then return false end\n  if n ==\
    \ -16 then return false end\n  if n == -17 then return false end\n  if n == -18\
    \ then return false end\n  if n == -19 then return false end\n  if n == -20 then\
    \ return false end\n  if n == -21 then return false end\n  if n == -22 then return\
    \ false end\n  if n == -23 then return false end\n  if n == -24 then return false\
    \ end\n  if n == -25 then return false end\n  if n == -26 then return false end\n\
    \  if n == -27 then return false end\n  if n == -28 then return false end\n  if\
    \ n == -29 then return false end\n  if n == -30 then return false end\n  if n\
    \ == -31 then return false end\n  if n == -32 then return false end\n  if n ==\
    \ -33 then return false end\n  if n == -34 then return false end\n  if n == -35\
    \ then return false end\n  if n == -36 then return false end\n  if n == -37 then\
    \ return false end\n  if n == -38 then return false end\n  if n == -39 then return\
    \ false end\n  if n == -40 then return false end\n  if n == -41 then return false\
    \ end\n  if n == -42 then return false end\n  if n == -43 then return false end\n\
    \  if n == -44 then return false end\n  if n == -45 then return false end\n  if\
    \ n == -46 then return false end\n  if n == -47 then return false end\n  if n\
    \ == -48 then return false end\n  if n == -49 then return false end\n  if n ==\
    \ -50 then return false end\n  if n == -51 then return false end\n  if n == -52\
    \ then return false end\n  if n == -53 then return false end\n  if n == -54 then\
    \ return false end\n  if n == -", "  if x == n then\n    return true\n  end\n\
    \  if x < n then\n    return false\n  end\n  local i = 1\n  while i < n do\n \
    \   i = i * 2\n    if x % i == 0 then\n      return false\n    end\n  end\n  return\
    \ true\nend", "  if x == n then\n    return true\n  elseif x < n then\n    return\
    \ false\n  else\n    return is_simple_power(x * x, n)\n  end\nend", "  if x ==\
    \ 1 then return true end\n  if x == 0 then return false end\n  if n == 0 then\
    \ return false end\n  if n < 0 then return false end\n  if n == 1 then return\
    \ x == n end\n  if x == n then return true end\n  if x % n == 0 then return is_simple_power(x\
    \ / n, n) end\n  return false\nend", "  if x == n then\n    return true\n  elseif\
    \ x < n then\n    return false\n  else\n    return is_simple_power(x, n-1)\n \
    \ end\nend", "  if x == n then\n    return true\n  elseif x < n then\n    return\
    \ false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", "  if n == 1\
    \ then return true end\n  if n == 0 then return false end\n  if n == -1 then return\
    \ false end\n  if n == -2 then return true end\n  if n == -3 then return false\
    \ end\n  if n == -4 then return true end\n  if n == -5 then return false end\n\
    \  if n == -6 then return true end\n  if n == -7 then return false end\n  if n\
    \ == -8 then return true end\n  if n == -9 then return false end\n  if n == -10\
    \ then return true end\n  if n == -11 then return false end\n  if n == -12 then\
    \ return true end\n  if n == -13 then return false end\n  if n == -14 then return\
    \ true end\n  if n == -15 then return false end\n  if n == -16 then return true\
    \ end\n  if n == -17 then return false end\n  if n == -18 then return true end\n\
    \  if n == -19 then return false end\n  if n == -20 then return true end\n  if\
    \ n == -21 then return false end\n  if n == -22 then return true end\n  if n ==\
    \ -23 then return false end\n  if n == -24 then return true end\n  if n == -25\
    \ then return false end\n  if n == -26 then return true end\n  if n == -27 then\
    \ return false end\n  if n == -28 then return true end\n  if n == -29 then return\
    \ false end\n  if n == -30 then return true end\n  if n == -31 then return false\
    \ end\n  if n == -32 then return true end\n  if n == -33 then return false end\n\
    \  if n == -34 then return true end\n  if n == -35 then return false end\n  if\
    \ n == -36 then return true end\n  if n == -37 then return false end\n  if n ==\
    \ -38 then return true end\n  if n == -39 then return false end\n  if n == -40\
    \ then return true end\n  if n == -41 then return false end\n  if n == -42 then\
    \ return true end\n  if n == -43 then return false end\n  if n == -44 then return\
    \ true end\n  if n == -45 then return false end\n  if n == -46 then return true\
    \ end\n  if n == -47 then return false end\n  if n == -48 then return true end\n\
    \  if n == -49 then return false end\n  if n == -50 then return true end\n  if\
    \ n == -51 then return false end\n  if n == -52 then return true end\n  if n ==\
    \ -53 then return false end\n  if n == -54 then return true end\n  if n == -",
  "  -- Base case\n  if n == 1 then\n    return x == 1\n  else\n    -- Recursive case\n\
    \    local x_square = x * x\n    local x_cube = x * x * x\n    return x_square\
    \ == x_cube and is_simple_power(x_square, n-1)\n  end\nend", "  if n == 1 then\n\
    \    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n\
    \  end\nend", "  if n == 0 then return false end\n  if n == 1 then return x ==\
    \ 1 end\n  if x == 1 then return true end\n  if x % n == 0 then return false end\n\
    \  local m = math.floor(x/n)\n  return m == n and is_simple_power(x, m) or is_simple_power(x,\
    \ m+1)\nend", "  if x == n then\n    return true\n  end\n  if x < n then\n   \
    \ return false\n  end\n  local i = 1\n  while i <= n do\n    if x%n == 0 then\n\
    \      return false\n    end\n    x = x/n\n    i = i + 1\n  end\n  return true\n\
    end", "  if n == 1 then return true end\n  if n == 0 then return false end\n \
    \ if n == -1 then return false end\n  if x < 0 then return false end\n  if x ==\
    \ 0 then return false end\n  if x == 1 then return true end\n  if x == -1 then\
    \ return true end\n  if x == -2 then return true end\n  if x == -3 then return\
    \ true end\n  if x == -4 then return true end\n  if x == -5 then return true end\n\
    \  if x == -6 then return true end\n  if x == -7 then return true end\n  if x\
    \ == -8 then return true end\n  if x == -9 then return true end\n  if x == -10\
    \ then return true end\n  if x == -11 then return true end\n  if x == -12 then\
    \ return true end\n  if x == -13 then return true end\n  if x == -14 then return\
    \ true end\n  if x == -15 then return true end\n  if x == -16 then return true\
    \ end\n  if x == -17 then return true end\n  if x == -18 then return true end\n\
    \  if x == -19 then return true end\n  if x == -20 then return true end\n  if\
    \ x == -21 then return true end\n  if x == -22 then return true end\n  if x ==\
    \ -23 then return true end\n  if x == -24 then return true end\n  if x == -25\
    \ then return true end\n  if x == -26 then return true end\n  if x == -27 then\
    \ return true end\n  if x == -28 then return true end\n  if x == -29 then return\
    \ true end\n  if x == -30 then return true end\n  if x == -31 then return true\
    \ end\n  if x == -32 then return true end\n  if x == -33 then return true end\n\
    \  if x == -34 then return true end\n  if x == -35 then return true end\n  if\
    \ x == -36 then return true end\n  if x == -37 then return true end\n  if x ==\
    \ -38 then return true end\n  if x == -39 then return true end\n  if x == -40\
    \ then return true end\n  if x == -41 then return true end\n  if x == -42 then\
    \ return true end\n  if x == -43 then return true end\n  if x == -44 then return\
    \ true end\n  if x == -45 then return true end\n  if x == -46 then return true\
    \ end\n  if x == -47 then return true end\n  if x == -48 then return true end\n\
    \  if x == -49 then return true end\n  if x == -50 then return true end\n  if\
    \ x == -51 then return true end", "  if n == 1 then\n    return x == 1\n  else\n\
    \    return x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if x ==\
    \ n then\n    return true\n  end\n  if x < n then\n    return false\n  end\n \
    \ local i = 1\n  while i <= n do\n    if x%n == 0 then\n      return false\n \
    \   end\n    x = x/n\n    i = i + 1\n  end\n  return true\nend", "  if n == 1\
    \ then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if x == 1 then return true end\n  if x == 0 then return\
    \ false end\n  if n == 0 then return false end\n  if n == 1 then return x == n\
    \ end\n  if n % 2 == 0 then return is_simple_power(x, n / 2) end\n  return false\n\
    end", "  if n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and\
    \ is_simple_power(x / n, n)\n  end\nend", "  if x == 1 then return true end\n\
    \  if x == 0 then return false end\n  if n == 0 then return false end\n  if n\
    \ == 1 then return x == n end\n  if n % 2 == 0 then return not is_simple_power(x,\
    \ n / 2) end\n  return is_simple_power(x * x, n / 2)\nend", "  if x == n then\n\
    \    return true\n  elseif x < n then\n    return false\n  else\n    return is_simple_power(x%n,\
    \ n)\n  end\nend", "  if n == 1 then return true end\n  if n == 0 then return\
    \ false end\n  if n % 2 == 0 then return is_simple_power(x, n / 2) end\n  return\
    \ is_simple_power(x * x, n / 2)\nend", "  if x == 1 then\n    return true\n  elseif\
    \ x == 0 then\n    return false\n  elseif n <= 0 then\n    return false\n  elseif\
    \ n == 1 then\n    return x == n\n  else\n    return is_simple_power(x, n-1) and\
    \ is_simple_power(x*x, n)\n  end\nend", "  if n == 1 then\n    return true\n \
    \ end\n  if n == 0 then\n    return false\n  end\n  if n % 2 == 0 then\n    return\
    \ is_simple_power(x, n / 2)\n  end\n  if x % n == 0 then\n    return true\n  end\n\
    \  return false\nend", "  if n == 1 then\n    return true\n  end\n  if x == 1\
    \ then\n    return false\n  end\n  if x == 0 then\n    return false\n  end\n \
    \ if n % 2 == 0 then\n    return is_simple_power(x / 2, n)\n  end\n  return is_simple_power(x,\
    \ n / 2)\nend", "  if n == 1 then\n    return x == 1\n  else\n    return x % n\
    \ == 0 and is_simple_power(x / n, n)\n  end\nend", "  if n == 1 then\n    return\
    \ x == 1\n  else\n    return x == n*n\n  end\nend", "  if n == 1 then\n    return\
    \ x == 1\n  else\n    return x == n and is_simple_power(x, n - 1)\n  end\nend",
  "  if n == 0 then return true end\n  if n == 1 then return x == 1 end\n  if n %\
    \ 2 == 0 then return is_simple_power(x, n / 2) end\n  return x == x * x\nend",
  "  if n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if n == 1 then\n    return x == 1\n  else\n    return\
    \ x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if x == 1 then\n \
    \   return true\n  end\n  if n == 0 then\n    return false\n  end\n  if n == 1\
    \ then\n    return x == n\n  end\n  if n % 2 == 0 then\n    return is_simple_power(x,\
    \ n / 2)\n  end\n  return is_simple_power(x * x, n / 2)\nend", "  if x == n then\n\
    \    return true\n  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend", "  if n == 1 then\n    return x == 1\n  else\n    return\
    \ x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if n == 1 then\n \
    \   return x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n\
    \  end\nend", "  if x == n then\n    return true\n  elseif n < 0 then\n    return\
    \ false\n  elseif n < 1 then\n    return x == 1\n  elseif n < 2 then\n    return\
    \ x == 1\n  elseif n < 4 then\n    return x == 1\n  elseif n < 8 then\n    return\
    \ x == 1\n  elseif n < 16 then\n    return x == 1\n  elseif n < 32 then\n    return\
    \ x == 1\n  elseif n < 64 then\n    return x == 1\n  elseif n < 128 then\n   \
    \ return x == 1\n  elseif n < 256 then\n    return x == 1\n  elseif n < 512 then\n\
    \    return x == 1\n  elseif n < 1024 then\n    return x == 1\n  elseif n < 2048\
    \ then\n    return x == 1\n  elseif n < 4096 then\n    return x == 1\n  elseif\
    \ n < 8192 then\n    return x == 1\n  elseif n < 16384 then\n    return x == 1\n\
    \  elseif n < 32768 then\n    return x == 1\n  elseif n < 65536 then\n    return\
    \ x == 1\n  elseif n < 131072 then\n    return x == 1\n  elseif n < 262144 then\n\
    \    return x == 1\n  elseif n < 524288 then\n    return x == 1\n  elseif n <\
    \ 1048576 then\n    return x == 1\n  elseif n < 2097152 then\n    return x ==\
    \ 1\n  elseif n < 4194304 then\n    return x == 1\n  elseif n < 8388608 then\n\
    \    return x == 1\n  elseif n < 16777216 then\n    return x == 1\n  elseif n\
    \ < 33554432 then\n    return x == 1\n  elseif n < 67108864 then\n    return x\
    \ == 1\n  elseif n < 134217728 then\n    return x == 1\n  elseif n < 268435456\
    \ then\n    return x == 1\n  elseif n < 536870912 then\n    return x == 1\n  elseif\
    \ n < 1073741824 then\n    return x == 1\n  elseif n < 2147483648 then\n    return\
    \ x == 1\n  elseif n < 4294967296 then\n    return x == 1\n  elseif n < 8589934592\
    \ then\n    return x == 1\n  elseif n < 17179869184 then\n    return x == 1\n\
    \  elseif n < 34359738368 then\n    return x == 1\n  elseif n < 68719476736 then\n\
    \    return x == 1\n  elseif n < 137438953472 ", "  if n == 1 then\n    return\
    \ true\n  end\n  if x == 1 then\n    return false\n  end\n  if x == 0 then\n \
    \   return false\n  end\n  if n == 0 then\n    return false\n  end\n  if n ==\
    \ -1 then\n    return false\n  end\n  if x == -1 then\n    return false\n  end\n\
    \  if x == -2 then\n    return false\n  end\n  if x == -3 then\n    return false\n\
    \  end\n  if x == -4 then\n    return false\n  end\n  if x == -5 then\n    return\
    \ false\n  end\n  if x == -6 then\n    return false\n  end\n  if x == -7 then\n\
    \    return false\n  end\n  if x == -8 then\n    return false\n  end\n  if x ==\
    \ -9 then\n    return false\n  end\n  if x == -10 then\n    return false\n  end\n\
    \  if x == -11 then\n    return false\n  end\n  if x == -12 then\n    return false\n\
    \  end\n  if x == -13 then\n    return false\n  end\n  if x == -14 then\n    return\
    \ false\n  end\n  if x == -15 then\n    return false\n  end\n  if x == -16 then\n\
    \    return false\n  end\n  if x == -17 then\n    return false\n  end\n  if x\
    \ == -18 then\n    return false\n  end\n  if x == -19 then\n    return false\n\
    \  end\n  if x == -20 then\n    return false\n  end\n  if x == -21 then\n    return\
    \ false\n  end\n  if x == -22 then\n    return false\n  end\n  if x == -23 then\n\
    \    return false\n  end\n  if x == -24 then\n    return false\n  end\n  if x\
    \ == -25 then\n    return false\n  end\n  if x == -26 then\n    return false\n\
    \  end\n  if x == -27 then\n    return false\n  end\n  if x == -28 then\n    return\
    \ false\n  end\n  if x == -29 then\n    return false\n  end\n  if x == -30 then\n\
    \    return false\n  end\n  if x == -31 then\n    return false\n  end\n  if x\
    \ == -32 then\n    return false\n  end\n  if x == -33 then\n    return false\n\
    \  end\n  if x == -34 then\n    return false\n  end\n  if x == -35 then\n    return\
    \ false\n  end\n  if x == -36 then\n    return false\n  end\n  if x == -37 then\n\
    \    return false\n  end\n  if x == -38 then\n    return false\n  end\n  if x\
    \ == -39 then\n    return false\n  end\n  if x == -40 then\n    return false\n\
    \  end\n  if x == -41 then\n    return false\n  end\n  if x == -42 then\n    return\
    \ false\n", "  if x == n then\n    return true\n  end\n  if x < n then\n    return\
    \ false\n  end\n  local r = 1\n  while n > 1 do\n    r = r * x\n    n = n - 1\n\
    \  end\n  return r == x\nend", "  if n == 1 then\n    return x == 1\n  else\n\
    \    return x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if n ==\
    \ 1 then\n    return true\n  end\n  if n == 0 then\n    return false\n  end\n\
    \  if n == -1 then\n    return false\n  end\n  if n == -2 then\n    return false\n\
    \  end\n  if n == -3 then\n    return false\n  end\n  if n == -4 then\n    return\
    \ false\n  end\n  if n == -5 then\n    return false\n  end\n  if n == -6 then\n\
    \    return false\n  end\n  if n == -7 then\n    return false\n  end\n  if n ==\
    \ -8 then\n    return false\n  end\n  if n == -9 then\n    return false\n  end\n\
    \  if n == -10 then\n    return false\n  end\n  if n == -11 then\n    return false\n\
    \  end\n  if n == -12 then\n    return false\n  end\n  if n == -13 then\n    return\
    \ false\n  end\n  if n == -14 then\n    return false\n  end\n  if n == -15 then\n\
    \    return false\n  end\n  if n == -16 then\n    return false\n  end\n  if n\
    \ == -17 then\n    return false\n  end\n  if n == -18 then\n    return false\n\
    \  end\n  if n == -19 then\n    return false\n  end\n  if n == -20 then\n    return\
    \ false\n  end\n  if n == -21 then\n    return false\n  end\n  if n == -22 then\n\
    \    return false\n  end\n  if n == -23 then\n    return false\n  end\n  if n\
    \ == -24 then\n    return false\n  end\n  if n == -25 then\n    return false\n\
    \  end\n  if n == -26 then\n    return false\n  end\n  if n == -27 then\n    return\
    \ false\n  end\n  if n == -28 then\n    return false\n  end\n  if n == -29 then\n\
    \    return false\n  end\n  if n == -30 then\n    return false\n  end\n  if n\
    \ == -31 then\n    return false\n  end\n  if n == -32 then\n    return false\n\
    \  end\n  if n == -33 then\n    return false\n  end\n  if n == -34 then\n    return\
    \ false\n  end\n  if n == -35 then\n    return false\n  end\n  if n == -36 then\n\
    \    return false\n  end\n  if n == -37 then\n    return false\n  end\n  if n\
    \ == -38 then\n    return false\n  end\n  if n == -39 then\n    return false\n\
    \  end\n  if n == -40 then\n    return false\n  end\n  if n == -41 then\n    return\
    \ false\n  end\n  if n == -42 then\n    return false\n  end\n  if n == -43 then\n\
    \    return false\n  end\n  if n == -44 then\n    return false\n  end\n  if n\
    \ == -45 then\n", "  if x == 1 then\n    return true\n  end\n  if x == 0 then\n\
    \    return false\n  end\n  if n == 0 then\n    return false\n  end\n  if n ==\
    \ 1 then\n    return x == n\n  end\n  if n % 2 == 0 then\n    return is_simple_power(x,\
    \ n / 2)\n  end\n  return false\nend", "  if x == n then\n    return true\n  elseif\
    \ x < n then\n    return false\n  else\n    return is_simple_power(x, n-1)\n \
    \ end\nend", "  if x == n then\n    return true\n  end\n  if x < n then\n    return\
    \ false\n  end\n  if n == 1 then\n    return true\n  end\n  if x == 1 then\n \
    \   return true\n  end\n  if x ~= n then\n    return false\n  end\n  local i =\
    \ 1\n  while i <= n do\n    if x ~= n and x % n == 0 then\n      return false\n\
    \    end\n    i = i + 1\n  end\n  return true\nend", "  if x == 1 then return\
    \ true end\n  if x == 0 then return false end\n  if n == 0 then return false end\n\
    \  if n == 1 then return x == n end\n  if n % 2 == 0 then return is_simple_power(x//2,\
    \ n-1) or is_simple_power(x//2, n) end\n  return false\nend", "  -- Base case\n\
    \  if x == 1 then\n    return true\n  end", "  if x == n then\n    return true\n\
    \  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend", "  if x == n then\n    return true\n  elseif x < n then\n\
    \    return false\n  else\n    return is_simple_power(x^n, n)\n  end\nend", " \
    \ if n == 1 then\n    return true\n  end\n  if n == 0 then\n    return false\n\
    \  end\n  if n == -1 then\n    return false\n  end\n  if x == 0 then\n    return\
    \ false\n  end\n  if x == 1 then\n    return true\n  end\n  if x == -1 then\n\
    \    return true\n  end\n  if x == -2 then\n    return true\n  end\n  if x ==\
    \ -3 then\n    return true\n  end\n  if x == -4 then\n    return true\n  end\n\
    \  if x == -5 then\n    return true\n  end\n  if x == -6 then\n    return true\n\
    \  end\n  if x == -7 then\n    return true\n  end\n  if x == -8 then\n    return\
    \ true\n  end\n  if x == -9 then\n    return true\n  end\n  if x == -10 then\n\
    \    return true\n  end\n  if x == -11 then\n    return true\n  end\n  if x ==\
    \ -12 then\n    return true\n  end\n  if x == -13 then\n    return true\n  end\n\
    \  if x == -14 then\n    return true\n  end\n  if x == -15 then\n    return true\n\
    \  end\n  if x == -16 then\n    return true\n  end\n  if x == -17 then\n    return\
    \ true\n  end\n  if x == -18 then\n    return true\n  end\n  if x == -19 then\n\
    \    return true\n  end\n  if x == -20 then\n    return true\n  end\n  if x ==\
    \ -21 then\n    return true\n  end\n  if x == -22 then\n    return true\n  end\n\
    \  if x == -23 then\n    return true\n  end\n  if x == -24 then\n    return true\n\
    \  end\n  if x == -25 then\n    return true\n  end\n  if x == -26 then\n    return\
    \ true\n  end\n  if x == -27 then\n    return true\n  end\n  if x == -28 then\n\
    \    return true\n  end\n  if x == -29 then\n    return true\n  end\n  if x ==\
    \ -30 then\n    return true\n  end\n  if x == -31 then\n    return true\n  end\n\
    \  if x == -32 then\n    return true\n  end\n  if x == -33 then\n    return true\n\
    \  end\n  if x == -34 then\n    return true\n  end\n  if x == -35 then\n    return\
    \ true\n  end\n  if x == -36 then\n    return true\n  end\n  if x == -37 then\n\
    \    return true\n  end\n  if x == -38 then\n    return true\n  end\n  if x ==\
    \ -39 then\n    return true\n  end\n  if x == -40 then\n    return true\n  end\n\
    \  if x == -41 then\n    return true\n  end\n  if x == -42 then\n    return true\n",
  "  if n == 1 then\n    return true\n  end\n  if x == 1 then\n    return false\n\
    \  end\n  if x == 0 then\n    return false\n  end\n  if n == 0 then\n    return\
    \ false\n  end\n  if n % 2 == 0 then\n    return is_simple_power(x / 2, n-1)\n\
    \  end\n  return is_simple_power(x, n-1)\nend", "  if n == 0 then return true\
    \ end\n  if n == 1 then return x == 1 end\n  if n == 2 then return x == x end\n\
    \  if n % 2 == 0 then return x == (x * x) or is_simple_power(x, n / 2) end\n \
    \ return false\nend", "  if n == 1 then return true end\n  if n == 0 then return\
    \ false end\n  if n % 2 == 0 then return is_simple_power(x, n / 2) end\n  return\
    \ is_simple_power(x * x, n / 2)\nend", "  -- Base case\n  if n == 1 then\n   \
    \ return x == 1\n  else\n    -- Recursive case\n    return is_simple_power(x^n,\
    \ n-1)\n  end\nend", "  if x == 1 then\n    return true\n  end\n  if x == 0 then\n\
    \    return false\n  end\n  if n == 0 then\n    return false\n  end\n  if n ==\
    \ 1 then\n    return true\n  end\n  if x == n then\n    return true\n  end\n \
    \ if n % 2 == 0 then\n    return is_simple_power(x, n / 2)\n  end\n  return false\n\
    end", "  if n == 0 then return false end\n  if n == 1 then return x == 1 end\n\
    \  if n == 2 then return x == x end\n  if n % 2 == 0 then return x == (x * x)\
    \ or x == (x * x * x) or x == (x * x * x * x) end\n  return x == (x * x * x *\
    \ x * x) or x == (x * x * x * x * x * x) or x == (x * x * x * x * x * x * x)\n\
    end", "  if x == n then\n    return true\n  elseif x < n then\n    return false\n\
    \  else\n    return is_simple_power(x, n-1)\n  end\nend", "  if x == n then\n\
    \    return true\n  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend", "  if n == 1 then\n    return x == 1\n  else\n    return\
    \ x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if n == 1 then return\
    \ true end\n  if n == 0 then return false end\n  if n == -1 then return false\
    \ end\n  if n == -2 then return false end\n  if n == -3 then return false end\n\
    \  if n == -4 then return false end\n  if n == -5 then return false end\n  if\
    \ n == -6 then return false end\n  if n == -7 then return false end\n  if n ==\
    \ -8 then return false end\n  if n == -9 then return false end\n  if n == -10\
    \ then return false end\n  if n == -11 then return false end\n  if n == -12 then\
    \ return false end\n  if n == -13 then return false end\n  if n == -14 then return\
    \ false end\n  if n == -15 then return false end\n  if n == -16 then return false\
    \ end\n  if n == -17 then return false end\n  if n == -18 then return false end\n\
    \  if n == -19 then return false end\n  if n == -20 then return false end\n  if\
    \ n == -21 then return false end\n  if n == -22 then return false end\n  if n\
    \ == -23 then return false end\n  if n == -24 then return false end\n  if n ==\
    \ -25 then return false end\n  if n == -26 then return false end\n  if n == -27\
    \ then return false end\n  if n == -28 then return false end\n  if n == -29 then\
    \ return false end\n  if n == -30 then return false end\n  if n == -31 then return\
    \ false end\n  if n == -32 then return false end\n  if n == -33 then return false\
    \ end\n  if n == -34 then return false end\n  if n == -35 then return false end\n\
    \  if n == -36 then return false end\n  if n == -37 then return false end\n  if\
    \ n == -38 then return false end\n  if n == -39 then return false end\n  if n\
    \ == -40 then return false end\n  if n == -41 then return false end\n  if n ==\
    \ -42 then return false end\n  if n == -43 then return false end\n  if n == -44\
    \ then return false end\n  if n == -45 then return false end\n  if n == -46 then\
    \ return false end\n  if n == -47 then return false end\n  if n == -48 then return\
    \ false end\n  if n == -49 then return false end\n  if n == -50 then return false\
    \ end\n  if n == -51 then return false end\n  if n == -52 then return false end\n\
    \  if n == -53 then return false end\n  if n == -54 then return false end\n  if\
    \ n == -", "  if n == 1 then\n    return true\n  end\n  if x == 1 then\n    return\
    \ false\n  end\n  if x ~= n then\n    return false\n  end\n  local i = 1\n  while\
    \ i * i <= x do\n    if x % i == 0 then\n      return false\n    end\n    i =\
    \ i + 1\n  end\n  return true\nend", "  if x == 1 then return true end\n  if n\
    \ == 0 then return false end\n  if n == 1 then return x == n end\n  if n % 2 ==\
    \ 0 then return not is_simple_power(x, n / 2) end\n  return not is_simple_power(x,\
    \ (n - 1) / 2)\nend", "  if n == 1 then\n    return x == 1\n  else\n    return\
    \ x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if n == 1 then\n \
    \   return x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n\
    \  end\nend", "  if n == 1 then\n    return x == 1\n  else\n    return x % n ==\
    \ 0 and is_simple_power(x / n, n)\n  end\nend", "  if n == 0 then return false\
    \ end\n  if n == 1 then return x == 1 end\n  if n == 2 then return x == x end\n\
    \  if n % 2 == 0 then return x == (x * x) or is_simple_power(x, n//2) end\n  return\
    \ x == (x * x) or is_simple_power(x, n-1)\nend", "  if x == n then\n    return\
    \ true\n  end\n  if x < n then\n    return false\n  end\n  local i = 1\n  while\
    \ i < n do\n    if x%n == 0 then\n      return false\n    end\n    x = x*x\n \
    \   i = i + 1\n  end\n  return true\nend", "  if n == 1 then\n    return x ==\
    \ 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\nend",
  "  if n == 0 then return true end\n  if n == 1 then return x == 1 end\n  if n %\
    \ 2 == 0 then return is_simple_power(x, n / 2) end\n  return is_simple_power(x\
    \ * x, n / 2)\nend", "  if n == 1 then\n    return true\n  end\n  if n == 0 then\n\
    \    return false\n  end\n  if n == -1 then\n    return false\n  end\n  if n ==\
    \ -2 then\n    return false\n  end\n  if n == -3 then\n    return false\n  end\n\
    \  if n == -4 then\n    return false\n  end\n  if n == -5 then\n    return false\n\
    \  end\n  if n == -6 then\n    return false\n  end\n  if n == -7 then\n    return\
    \ false\n  end\n  if n == -8 then\n    return false\n  end\n  if n == -9 then\n\
    \    return false\n  end\n  if n == -10 then\n    return false\n  end\n  if n\
    \ == -11 then\n    return false\n  end\n  if n == -12 then\n    return false\n\
    \  end\n  if n == -13 then\n    return false\n  end\n  if n == -14 then\n    return\
    \ false\n  end\n  if n == -15 then\n    return false\n  end\n  if n == -16 then\n\
    \    return false\n  end\n  if n == -17 then\n    return false\n  end\n  if n\
    \ == -18 then\n    return false\n  end\n  if n == -19 then\n    return false\n\
    \  end\n  if n == -20 then\n    return false\n  end\n  if n == -21 then\n    return\
    \ false\n  end\n  if n == -22 then\n    return false\n  end\n  if n == -23 then\n\
    \    return false\n  end\n  if n == -24 then\n    return false\n  end\n  if n\
    \ == -25 then\n    return false\n  end\n  if n == -26 then\n    return false\n\
    \  end\n  if n == -27 then\n    return false\n  end\n  if n == -28 then\n    return\
    \ false\n  end\n  if n == -29 then\n    return false\n  end\n  if n == -30 then\n\
    \    return false\n  end\n  if n == -31 then\n    return false\n  end\n  if n\
    \ == -32 then\n    return false\n  end\n  if n == -33 then\n    return false\n\
    \  end\n  if n == -34 then\n    return false\n  end\n  if n == -35 then\n    return\
    \ false\n  end\n  if n == -36 then\n    return false\n  end\n  if n == -37 then\n\
    \    return false\n  end\n  if n == -38 then\n    return false\n  end\n  if n\
    \ == -39 then\n    return false\n  end\n  if n == -40 then\n    return false\n\
    \  end\n  if n == -41 then\n    return false\n  end\n  if n == -42 then\n    return\
    \ false\n  end\n  if n == -43 then\n    return false\n  end\n  if n == -44 then\n\
    \    return false\n  end\n  if n == -45 then\n", "  if x == n then\n    return\
    \ true\n  end\n  if x ~= n then\n    return false\n  end\n  if n == 1 then\n \
    \   return true\n  end\n  if n == 0 then\n    return false\n  end\n  if n % 2\
    \ == 0 then\n    return is_simple_power(x % n, n / 2)\n  end\n  return is_simple_power(x\
    \ % n, n / 2)\nend", "  if n == 1 then\n    return x == 1\n  else\n    return\
    \ x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  -- Base case\n  if\
    \ n == 1 then\n    return x == 1\n  else\n    -- Recursive case\n    return is_simple_power(x^n,\
    \ n-1)\n  end\nend", "  if x == n then\n    return true\n  elseif n < 0 then\n\
    \    return false\n  elseif n == 0 then\n    return false\n  elseif n == 1 then\n\
    \    return true\n  else\n    return is_simple_power(x, n - 1) or is_simple_power(x\
    \ * x, n)\n  end\nend", "  if x == 1 then\n    return true\n  end\n  if x == 0\
    \ then\n    return false\n  end\n  if n == 0 then\n    return false\n  end\n \
    \ if n == 1 then\n    return true\n  end\n  if x == n then\n    return true\n\
    \  end\n  if x ~= n then\n    return false\n  end\n  local i = 1\n  while i <=\
    \ n do\n    if x % n == 0 then\n      return false\n    end\n    i = i + 1\n \
    \ end\n  return true\nend", "  if n == 1 then return true end\n  if x == 1 then\
    \ return false end\n  if x == 0 then return false end\n  if n == 0 then return\
    \ false end\n  if n % 2 == 0 then return false end\n  if n % 3 == 0 then return\
    \ false end\n  if n % 5 == 0 then return false end\n  if n % 7 == 0 then return\
    \ false end\n  if x % n == 0 then return false end\n  if x % 3 == 0 then return\
    \ false end\n  if x % 5 == 0 then return false end\n  if x % 7 == 0 then return\
    \ false end\n  if x % n == 0 then return false end\n  if x % 3 == 0 then return\
    \ false end\n  if x % 5 == 0 then return false end\n  if x % 7 == 0 then return\
    \ false end\n  if x % n == 0 then return false end\n  if x % 3 == 0 then return\
    \ false end\n  if x % 5 == 0 then return false end\n  if x % 7 == 0 then return\
    \ false end\n  if x % n == 0 then return false end\n  if x % 3 == 0 then return\
    \ false end\n  if x % 5 == 0 then return false end\n  if x % 7 == 0 then return\
    \ false end\n  if x % n == 0 then return false end\n  if x % 3 == 0 then return\
    \ false end\n  if x % 5 == 0 then return false end\n  if x % 7 == 0 then return\
    \ false end\n  if x % n == 0 then return false end\n  if x % 3 == 0 then return\
    \ false end\n  if x % 5 == 0 then return false end\n  if x % 7 == 0 then return\
    \ false end\n  if x % n == 0 then return false end\n  if x % 3 == 0 then return\
    \ false end\n  if x % 5 == 0 then return false end\n  if x % 7 == 0 then return\
    \ false end\n  if x % n == 0 then return false end\n  if x % 3 == 0 then return\
    \ false end\n  if x % 5 == 0 then return false end\n  if x % 7 == 0 then return\
    \ false end\n  if x % n == 0 then return false end\n  if x % 3 == 0 then return\
    \ false end\n  if x % 5 == 0 then return false end\n  if x % 7 == 0 then return\
    \ false end\n  if x % n == 0 then return false end\n  if x % 3 == 0 then return\
    \ false end\n  if x % 5 == 0 then return false end\n  if x % 7 == 0 then return\
    \ false end\n  if x % n == 0 then return false end\n  if x % 3 == 0 then return\
    \ false end\n  if x ", "  if n == 1 then return true end\n  if n == 0 then return\
    \ false end\n  if n == -1 then return false end\n  if n == -2 then return false\
    \ end\n  if n == -3 then return false end\n  if n == -4 then return false end\n\
    \  if n == -5 then return false end\n  if n == -6 then return false end\n  if\
    \ n == -7 then return false end\n  if n == -8 then return false end\n  if n ==\
    \ -9 then return false end\n  if n == -10 then return false end\n  if n == -11\
    \ then return false end\n  if n == -12 then return false end\n  if n == -13 then\
    \ return false end\n  if n == -14 then return false end\n  if n == -15 then return\
    \ false end\n  if n == -16 then return false end\n  if n == -17 then return false\
    \ end\n  if n == -18 then return false end\n  if n == -19 then return false end\n\
    \  if n == -20 then return false end\n  if n == -21 then return false end\n  if\
    \ n == -22 then return false end\n  if n == -23 then return false end\n  if n\
    \ == -24 then return false end\n  if n == -25 then return false end\n  if n ==\
    \ -26 then return false end\n  if n == -27 then return false end\n  if n == -28\
    \ then return false end\n  if n == -29 then return false end\n  if n == -30 then\
    \ return false end\n  if n == -31 then return false end\n  if n == -32 then return\
    \ false end\n  if n == -33 then return false end\n  if n == -34 then return false\
    \ end\n  if n == -35 then return false end\n  if n == -36 then return false end\n\
    \  if n == -37 then return false end\n  if n == -38 then return false end\n  if\
    \ n == -39 then return false end\n  if n == -40 then return false end\n  if n\
    \ == -41 then return false end\n  if n == -42 then return false end\n  if n ==\
    \ -43 then return false end\n  if n == -44 then return false end\n  if n == -45\
    \ then return false end\n  if n == -46 then return false end\n  if n == -47 then\
    \ return false end\n  if n == -48 then return false end\n  if n == -49 then return\
    \ false end\n  if n == -50 then return false end\n  if n == -51 then return false\
    \ end\n  if n == -52 then return false end\n  if n == -53 then return false end\n\
    \  if n == -54 then return false end\n  if n == -", "  if n == 1 then\n    return\
    \ x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\n\
    end", "  if x == n then\n    return true\n  end\n  if x < n then\n    return false\n\
    \  end\n  if n == 1 then\n    return true\n  end\n  if n % 2 == 0 then\n    return\
    \ is_simple_power(x, n / 2)\n  end\n  return is_simple_power(x, n / 2) or\n  \
    \       is_simple_power(x, n / 2) or\n         is_simple_power(x, n / 2)\nend",
  "  if n == 0 then return false end\n  if n == 1 then return x == 1 end\n  if n ==\
    \ 2 then return x == x end\n  if n % 2 == 0 then\n    return is_simple_power(x,\
    \ n / 2) and\n           is_simple_power(x, n / 2)\n  else\n    return is_simple_power(x,\
    \ n / 2) and\n           is_simple_power(x, (n - 1) / 2)\n  end\nend", "  if x\
    \ == n then\n    return true\n  elseif x < n then\n    return false\n  else\n\
    \    return is_simple_power(x, n-1)\n  end\nend", "  if x == n then\n    return\
    \ true\n  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend", "  if x == n then\n    return true\n  elseif n < 0 then\n\
    \    return false\n  elseif n < 1 then\n    return x == 1 and n == 1\n  elseif\
    \ n == 0 then\n    return false\n  elseif n == 1 then\n    return x == 1\n  elseif\
    \ n == -1 then\n    return x == 1 and n ~= 1\n  else\n    return true\n  end\n\
    end", "  if x == n then\n    return true\n  elseif n < 0 then\n    return false\n\
    \  elseif n == 0 then\n    return false\n  elseif n == 1 then\n    return true\n\
    \  else\n    return is_simple_power(x, n - 1) and is_simple_power(x * x, n)\n\
    \  end\nend", "  if x == n then\n    return true\n  elseif x < n then\n    return\
    \ false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", "  if n == 1\
    \ then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if x == n then\n    return true\n  end\n  if x < n\
    \ then\n    return false\n  end\n  local power = 1\n  while power < n do\n   \
    \ power = power * x\n  end\n  return power == x\nend", "  if n == 0 then return\
    \ false end\n  if n == 1 then return true end\n  if n % 2 == 0 then return is_simple_power(x,\
    \ n / 2) end\n  if x % n == 0 then return true end\n  return false\nend", "  if\
    \ n == 0 then return true end\n  if n == 1 then return x == 1 end\n  if n % 2\
    \ == 0 then return is_simple_power(x, n / 2) end\n  return is_simple_power(x *\
    \ x, n / 2)\nend", "  if x == 1 then return true end\n  if x == 0 then return\
    \ false end\n  if n == 0 then return false end\n  if n == 1 then return x == n\
    \ end\n  if n % 2 == 0 then return is_simple_power(x, n / 2) end\n  return is_simple_power(x\
    \ * x, n / 2)\nend", "  if x == n then\n    return true\n  end\n  if x < n then\n\
    \    return false\n  end\n  local i = 1\n  while i <= n do\n    if x % n == 0\
    \ then\n      return false\n    end\n    i = i + 1\n  end\n  return true\nend",
  "  if n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if n == 1 then\n    return x == 1\n  elseif n <= 0\
    \ then\n    return false\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if n == 1 then\n    return x == 1\n  else\n    return\
    \ x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if n == 1 then\n \
    \   return x == 1\n  elseif n == 0 then\n    return x == 0\n  elseif n < 0 then\n\
    \    return x == 0 and is_simple_power(x, -n)\n  end\n  local function is_power_of_two(num)\n\
    \    local log2 = math.log(num)\n    return log2 <= math.log(math.log(2)) and\
    \ log2 <= math.log(math.log(math.log(2)))\n  end\n  local function is_power_of_two_or_zero(num)\n\
    \    return is_power_of_two(num) or num == 0\n  end\n  local function is_power_of_two_or_one(num)\n\
    \    return is_power_of_two(num) or num == 1\n  end\n  local function is_power_of_two_or_one_or_zero(num)\n\
    \    return is_power_of_two(num) or num == 0 or num == 1\n  end\n  local function\
    \ is_power_of_two_or_one_or_zero_or_zero(num)\n    return is_power_of_two(num)\
    \ or num == 0 or num == 1 or num == 0\n  end\n  local function is_power_of_two_or_one_or_zero_or_one_or_zero(num)\n\
    \    return is_power_of_two(num) or num == 0 or num == 1 or num == 0 or num ==\
    \ 1\n  end\n  local function is_power_of_two_or_one_or_zero_or_one_or_one_or_zero(num)\n\
    \    return is_power_of_two(num) or num == 0 or num == 1 or num == 0 or num ==\
    \ 1 or num == 0\n  end\n  local function is_power_of_two_or_one_or_zero_or_one_or_one_or_one_or_zero(num)\n\
    \    return is_power_of_two(num) or num == 0 or num == 1 or num == 0 or num ==\
    \ 1 or num == 0 or num == 1\n  end\n  local function is_power_of_two_or_one_or_zero_or_one_or_one_or_one_or_one_or_zero(num)\n\
    \    return is_power_of_two(num) or num == 0 or num == 1 or num == 0 or num ==\
    \ 1 or num == 0 or num == 1 or num == 0\n  end\n  local function is_power_of_two_or_one_or_zero_or_one_or_one_or_one_or_one_or_one_or_zero(num)\n\
    \    return is_power_of_two(num) or num == 0 or num == 1 or num == 0 or num ==\
    \ 1 or num == 0 or num == 1 or num == 0 or num == 1\n  end\n  local function is_power_of_two_or_one_or_zero_or_one_or_one_or_one_or_one_or_one_or_zero(num)\n\
    \    return is_power_of_two(num) or num == 0 or num == 1 or num == 0 or num ==\
    \ 1 or num == 0 or num == 1 or num == 0 or num == 1 or num == 0\n  end\n  local\
    \ function is_power_of_two_or_one_or_zero_or_one_or_one_or_one_or_one_or_one_",
  "  if x == n then\n    return true\n  end\n  if x < n then\n    return false\n \
    \ end\n  local r = 1\n  while n > 1 do\n    r = r * x\n    n = n - 1\n  end\n\
    \  return r == x\nend", "  -- Base cases\n  if x == 1 then\n    return n == 1\n\
    \  elseif x == 0 then\n    return false\n  elseif n == 0 then\n    return false\n\
    \  else\n    -- Recursion\n    return is_simple_power(x % n, n) or is_simple_power(x,\
    \ n-1)\n  end\nend", "  if x == n then\n    return true\n  end\n  if x < n then\n\
    \    return false\n  end\n  if n == 1 then\n    return true\n  end\n  if x % n\
    \ == 0 then\n    return is_simple_power(x / n, n)\n  end\n  return false\nend",
  "  if n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if n == 0 then return true end\n  if n == 1 then return\
    \ x == 1 end\n  if n % 2 == 0 then return is_simple_power(x, n / 2) end\n  return\
    \ x == x * x\nend", "  if n == 1 then\n    return true\n  end\n  if n == 0 then\n\
    \    return false\n  end\n  if n % 2 == 0 then\n    return is_simple_power(x,\
    \ n / 2)\n  end\n  return is_simple_power(x * x, n / 2)\nend", "  if x == n then\n\
    \    return true\n  end\n  if x < n then\n    return false\n  end\n  local r =\
    \ 1\n  while n ~= 1 do\n    r = r * n\n    n = n / 2\n  end\n  return x == r\n\
    end", "  if n == 1 then\n    return true\n  end\n  if n == 0 then\n    return\
    \ false\n  end\n  if n == -1 then\n    return false\n  end\n  if x == 1 then\n\
    \    return false\n  end\n  if x == 0 then\n    return false\n  end\n  if x ==\
    \ -1 then\n    return false\n  end\n  if x == -2 then\n    return false\n  end\n\
    \  if x == -3 then\n    return false\n  end\n  if x == -4 then\n    return false\n\
    \  end\n  if x == -5 then\n    return false\n  end\n  if x == -6 then\n    return\
    \ false\n  end\n  if x == -7 then\n    return false\n  end\n  if x == -8 then\n\
    \    return false\n  end\n  if x == -9 then\n    return false\n  end\n  if x ==\
    \ -10 then\n    return false\n  end\n  if x == -11 then\n    return false\n  end\n\
    \  if x == -12 then\n    return false\n  end\n  if x == -13 then\n    return false\n\
    \  end\n  if x == -14 then\n    return false\n  end\n  if x == -15 then\n    return\
    \ false\n  end\n  if x == -16 then\n    return false\n  end\n  if x == -17 then\n\
    \    return false\n  end\n  if x == -18 then\n    return false\n  end\n  if x\
    \ == -19 then\n    return false\n  end\n  if x == -20 then\n    return false\n\
    \  end\n  if x == -21 then\n    return false\n  end\n  if x == -22 then\n    return\
    \ false\n  end\n  if x == -23 then\n    return false\n  end\n  if x == -24 then\n\
    \    return false\n  end\n  if x == -25 then\n    return false\n  end\n  if x\
    \ == -26 then\n    return false\n  end\n  if x == -27 then\n    return false\n\
    \  end\n  if x == -28 then\n    return false\n  end\n  if x == -29 then\n    return\
    \ false\n  end\n  if x == -30 then\n    return false\n  end\n  if x == -31 then\n\
    \    return false\n  end\n  if x == -32 then\n    return false\n  end\n  if x\
    \ == -33 then\n    return false\n  end\n  if x == -34 then\n    return false\n\
    \  end\n  if x == -35 then\n    return false\n  end\n  if x == -36 then\n    return\
    \ false\n  end\n  if x == -37 then\n    return false\n  end\n  if x == -38 then\n\
    \    return false\n  end\n  if x == -39 then\n    return false\n  end\n  if x\
    \ == -40 then\n    return false\n  end\n  if x == -41 then\n    return false\n\
    \  end\n  if x == -42 then\n    return false\n", "  if n == 1 then\n    return\
    \ x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\n\
    end", "  if n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and\
    \ is_simple_power(x / n, n)\n  end\nend", "  if n == 1 then\n    return x == 1\n\
    \  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\nend", " \
    \ if x == n then\n    return true\n  end\n  if x < n then\n    return false\n\
    \  end\n  local r = 1\n  while n > 1 do\n    r = r * x\n    n = n - 1\n  end\n\
    \  return r == x\nend", "  if x == 1 then return true end\n  if x == 0 then return\
    \ false end\n  if n == 0 then return false end\n  if n == 1 then return x == n\
    \ end\n  if n % 2 == 0 then return is_simple_power(x * x, n / 2) end\n  return\
    \ false\nend", "  if x == n then\n    return true\n  elseif x < n then\n    return\
    \ false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", "  if x == n\
    \ then\n    return true\n  elseif x < n then\n    return false\n  else\n    return\
    \ is_simple_power(x, n-1)\n  end\nend", "  if x == n then\n    return true\n \
    \ elseif x < n then\n    return false\n  else\n    return is_simple_power(x, n-1)\n\
    \  end\nend", "  if n == 0 then return false end\n  if n == 1 then return true\
    \ end\n  if n % 2 == 0 then return is_simple_power(x, n / 2) end\n  return is_simple_power(x\
    \ * x, n / 2)\nend", "  if x == 1 then\n    return true\n  end\n  if x == 0 then\n\
    \    return false\n  end\n  if n == 0 then\n    return false\n  end\n  if n ==\
    \ 1 then\n    return x == n\n  end\n  if n % 2 == 0 then\n    return is_simple_power(x,\
    \ n / 2)\n  end\n  return is_simple_power(x, n / 2) or\n         is_simple_power(x\
    \ * x, n / 2)\nend", "  if x == n then\n    return true\n  elseif x < n then\n\
    \    return false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", " \
    \ if x == n then\n    return true\n  end\n  if x < n then\n    return false\n\
    \  end\n  if x ~= n and x % n ~= 0 then\n    return false\n  end\n  return true\n\
    end", "  if x == n then\n    return true\n  elseif x < n then\n    return false\n\
    \  else\n    return is_simple_power(x, n-1)\n  end\nend", "  if x == n then\n\
    \    return true\n  end\n  if x < n then\n    return false\n  end\n  local i =\
    \ 1\n  while i * i <= x do\n    if x % i == 0 then\n      return false\n    end\n\
    \    i = i * i\n  end\n  return true\nend", "  if n == 1 then\n    return x ==\
    \ 1\n  else\n    return x == n and is_simple_power(x, n - 1)\n  end\nend", " \
    \ if n == 1 then\n    return true\n  end\n  if x == 1 then\n    return false\n\
    \  end\n  if x == 0 then\n    return false\n  end\n  if n <= 0 then\n    return\
    \ false\n  end\n  if n == x then\n    return true\n  end\n  if n % x == 0 then\n\
    \    return false\n  end\n  return is_simple_power(x / n, n)\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_102_choose_num
language: lua
prompt: "-- This function takes two positive numbers x and y and returns the\n-- biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n-- there's no\
  \ such number, then the function should return -1.\n-- For example:\n-- >>> choose_num(12,\
  \ 15)\n-- 14\n-- >>> choose_num(13, 12)\n-- -1\nlocal function choose_num(x, y)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = choose_num\n\
  \    lu.assertEquals(candidate(12, 15), 14)\n    lu.assertEquals(candidate(13, 12),\
  \ -1)\n    lu.assertEquals(candidate(33, 12354), 12354)\n    lu.assertEquals(candidate(5234,\
  \ 5233), -1)\n    lu.assertEquals(candidate(6, 29), 28)\n    lu.assertEquals(candidate(27,\
  \ 10), -1)\n    lu.assertEquals(candidate(7, 7), -1)\n    lu.assertEquals(candidate(546,\
  \ 546), 546)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local function is_even(n)\n    return n % 2 == 0\n  end\n  \n  local\
    \ function is_odd(n)\n    return n % 2 == 1\n  end\n  \n  local function is_between(n,\
    \ x, y)\n    return n >= x and n <= y\n  end\n  \n  local function is_in_range(n,\
    \ x, y)\n    return is_between(n, x, y) or is_even(n) or is_odd(n)\n  end\n  \n\
    \  local function choose_num_in_range(n, x, y)\n    if is_in_range(n, x, y) then\n\
    \      return n\n    end\n    if is_even(n) then\n      return choose_num_in_range(2\
    \ * n, x, y)\n    end\n    if is_odd(n) then\n      return choose_num_in_range(2\
    \ * n + 1, x, y)\n    end\n    return -1\n  end\n  \n  return choose_num_in_range(x,\
    \ y, x)\nend", "    if x < y then\n        local x_even = x % 2\n        local\
    \ y_even = y % 2\n        if x_even and y_even then\n            local max_even\
    \ = x_even * y_even\n            if max_even > x and max_even > y then\n     \
    \           return max_even\n            end\n        end\n    end\n    return\
    \ -1\nend", "   if x < y then\n      x, y = y, x\n   end\n   local max_num = x\n\
    \   for i = y, 1, -1 do\n      if max_num % i == 0 then\n         max_num = max_num\
    \ / i\n      else\n         return -1\n      end\n   end\n   return max_num\n\
    end", "    if x < y then\n        x, y = y, x\n    end\n    if x == y then\n \
    \       return x\n    end\n    if x % 2 == 0 then\n        return choose_num(x\
    \ / 2, y)\n    else\n        return choose_num(3 * x + 1, y)\n    end\nend", " \
    \ if x < y then\n    return choose_num(y, x)\n  end\n  if x == y then\n    return\
    \ x\n  end\n  if x % 2 == 0 and y % 2 == 0 then\n    return choose_num(x / 2,\
    \ y / 2)\n  end\n  if x % 2 == 0 and y % 2 != 0 then\n    return choose_num(x\
    \ / 2, y)\n  end\n  if x % 2 != 0 and y % 2 == 0 then\n    return choose_num(x,\
    \ y / 2)\n  end\n  if x % 2 != 0 and y % 2 != 0 then\n    return choose_num(x,\
    \ y)\n  end\n  return -1\nend", "  local x_even = x % 2\n  local x_odd = x % 2\
    \ + 1\n  local y_even = y % 2\n  local y_odd = y % 2 + 1\n  if x_even > y_even\
    \ then\n    return x_even\n  elseif x_odd > y_odd then\n    return x_odd\n  else\n\
    \    return -1\n  end\nend", "   if x < y then\n      local m = math.max(x, y)\n\
    \      return m % 2 == 0 and m or -1\n   end\n   if x > y then\n      local m\
    \ = math.min(x, y)\n      return m % 2 == 0 and m or -1\n   end\n   return -1\n\
    end", "    local function is_even(n)\n        return n % 2 == 0\n    end\n   \
    \ local function is_odd(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between(lower, upper)\n        return lower <= upper and lower >= 0 and upper\
    \ <= x\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ x) and is_between(n + 1, y)\n    end\n    local function is_in_range_even(n)\n\
    \        return is_between(n, x) and is_even(n + 1)\n    end\n    local function\
    \ is_in_range_odd(n)\n        return is_between(n, x) and is_odd(n + 1)\n    end\n\
    \    local function is_in_range_odd_even(n)\n        return is_between(n, x) and\
    \ is_odd(n) and is_even(n + 1)\n    end\n    local function is_in_range_odd_odd(n)\n\
    \        return is_between(n, x) and is_odd(n) and is_odd(n + 1)\n    end\n  \
    \  local function is_in_range_odd_even_even(n)\n        return is_between(n, x)\
    \ and is_odd(n) and is_even(n) and is_even(n + 1)\n    end\n    local function\
    \ is_in_range_odd_even_odd(n)\n        return is_between(n, x) and is_odd(n) and\
    \ is_odd(n) and is_odd(n + 1)\n    end\n    local function is_in_range_odd_even_even_even(n)\n\
    \        return is_between(n, x) and is_odd(n) and is_even(n) and is_even(n) and\
    \ is_even(n + 1)\n    end\n    local function is_in_range_odd_even_even_odd(n)\n\
    \        return is_between(n, x) and is_odd(n) and is_odd(n) and is_even(n) and\
    \ is_odd(n + 1)\n    end\n    local function is_in_range_odd_even_odd_even(n)\n\
    \        return is_between(n, x) and is_odd(n) and is_odd(n) and is_even(n) and\
    \ is_odd(n) and is_even(n + 1)\n    end\n    local function is_in_range_odd_even_odd_odd(n)\n\
    \        return is_between(n, x) and is_odd(n) and is_odd(n) and is_even(n) and\
    \ is_odd(n) and is_odd(n + 1)\n    end\n    local function is_in_range_odd_even_odd_even_even(n)\n\
    \        return is_between(n, x) and is_odd(n) and is_odd(n) and is_even(n) and\
    \ is_odd(n) and is_even(n) and is_even(n + 1)\n    end\n    local function is_in_range_odd_even_odd_even_odd(n)\n\
    \        return is_between(n, x", "   if x < y then\n      local m = x\n     \
    \ x = y\n      y = m\n   end\n   if x < 1 then\n      return -1\n   end\n   if\
    \ y < 1 then\n      return -1\n   end\n   if x == 1 then\n      return y\n   end\n\
    \   if y == 1 then\n      return x\n   end\n   local m = math.floor((x + y) /\
    \ 2)\n   return choose_num(x, m) + choose_num(m, y)\nend", "\tlocal function is_even(n)\n\
    \t\treturn n % 2 == 0\n\tend", "  if x < y then\n    return choose_num(y, x)\n\
    \  end\n  if x > y then\n    return choose_num(x, y)\n  end\n  if x == y then\n\
    \    return x\n  end\n  if x % 2 == 0 then\n    return choose_num(x / 2, y)\n\
    \  end\n  if y % 2 == 0 then\n    return choose_num(x, y / 2)\n  end\n  return\
    \ -1\nend", "  if x < y then\n    x, y = y, x\n  end\n  local max_num = x\n  local\
    \ max_num2 = y\n  local i = 1\n  while i <= max_num2 do\n    local num = max_num\
    \ + i\n    if num % 2 == 0 then\n      max_num = num\n    end\n    i = i + 1\n\
    \  end\n  if max_num == x then\n    return -1\n  end\n  return max_num\nend",
  "    local max_num = x\n    local min_num = y\n    local i = x\n    local j = y\n\
    \    while i <= j do\n        if ((i ^ y) % 2) == 0 then\n            i = i +\
    \ 1\n        else\n            j = j - 1\n        end\n        if ((i ^ y) % 2)\
    \ == 0 then\n            max_num = i\n            min_num = j\n        end\n \
    \   end\n    return max_num\nend", "\tlocal x_even = x % 2\n\tlocal y_even = y\
    \ % 2\n\tif x_even and y_even then\n\t\tlocal x_odd = x % 2 - x_even\n\t\tlocal\
    \ y_odd = y % 2 - y_even\n\t\tif x_odd > y_odd then\n\t\t\treturn x_even + y_even\n\
    \t\telse\n\t\t\treturn x_even - y_even\n\t\tend\n\telse\n\t\treturn -1\n\tend\n\
    end", "  if x < y then\n    return choose_num(y, x)\n  elseif x == y then\n  \
    \  return x\n  else\n    return choose_num(y - 1, x + 1)\n  end\nend", "    if\
    \ x < y then\n        x, y = y, x\n    end\n    for i = x, y + 1 do\n        if\
    \ i % 2 == 0 then\n            return i\n        end\n    end\n    return -1\n\
    end", "  if x < y then\n    return choose_num(y, x)\n  end\n  local even = 1\n\
    \  local odd = 0\n  while even < y do\n    even = even + 2\n  end\n  while odd\
    \ < y do\n    odd = odd + 2\n  end\n  if even > y then\n    return even\n  else\n\
    \    return odd\n  end\nend", "  if x < y then\n    return choose_num(y, x)\n\
    \  end\n  if x == y then\n    return x\n  end\n  if x % 2 == 0 then\n    return\
    \ choose_num(x / 2, y)\n  end\n  if y % 2 == 0 then\n    return choose_num(x,\
    \ y / 2)\n  end\n  local m = math.floor(x/2) + math.floor(y/2)\n  if m <= y then\n\
    \    return choose_num(m, y)\n  end\n  return choose_num(x, y)\nend", "  if x\
    \ > y then\n    x, y = y, x\n  end\n  local max_num = x\n  local max_num2 = y\n\
    \  local i = 1\n  while i <= y do\n    if max_num2 % 2 == 0 then\n      max_num\
    \ = max_num2\n    else\n      max_num2 = max_num / 2\n    end\n    i = i + 1\n\
    \  end\n  return max_num\nend", "\tlocal function is_even(n)\n\t\treturn n % 2\
    \ == 0\n\tend", "\tlocal x_even = x % 2\n\tlocal y_even = y % 2\n\tlocal x_odd\
    \ = x % 2 + 1\n\tlocal y_odd = y % 2 + 1\n\tlocal max_even = x_even > y_even and\
    \ x_even or y_even\n\tlocal max_odd = x_odd > y_odd and x_odd or y_odd\n\treturn\
    \ max_even > max_odd or max_even < max_odd or -1\nend", "  if x > y then\n   \
    \ x, y = y, x\n  end\n  local z = x + y\n  while z <= z do\n    if z % 2 == 0\
    \ then\n      return z\n    end\n    z = z + 1\n  end\n  return -1\nend", "  if\
    \ x < y then\n    x, y = y, x\n  end\n  local max_num = x\n  local min_num = y\n\
    \  while max_num - min_num > 1 do\n    local mid = (max_num + min_num) / 2\n \
    \   if mid % 2 == 0 then\n      max_num = mid\n    else\n      min_num = mid\n\
    \    end\n  end\n  return max_num\nend", "    if x < y then\n        x, y = y,\
    \ x\n    end\n    for i = x, y + 1 do\n        if i % 2 == 0 then\n          \
    \  return i\n        end\n    end\n    return -1\nend", "\tlocal max_num\n\tlocal\
    \ min_num\n\tlocal i\n\t\n\t-- If x is bigger than y, then swap them.\n\tif x\
    \ > y then\n\t\tx, y = y, x\n\tend\n\t\n\t-- Find the smallest number in the range.\n\
    \tmin_num = x\n\t\n\t-- Find the biggest number in the range.\n\tfor i = y, 1,\
    \ -1 do\n\t\tif i % 2 == 0 then\n\t\t\tmax_num = i\n\t\t\tbreak\n\t\tend\n\tend\n\
    \t\n\t-- If there's no such number, then return -1.\n\tif max_num == nil then\n\
    \t\treturn -1\n\tend\n\t\n\t-- If x is smaller than y, then swap them.\n\tif x\
    \ < y then\n\t\tx, y = y, x\n\tend\n\t\n\t-- Find the smallest number in the range.\n\
    \tmin_num = x\n\t\n\t-- Find the biggest number in the range.\n\tfor i = y, 1,\
    \ -1 do\n\t\tif i % 2 == 0 then\n\t\t\tmax_num = i\n\t\t\tbreak\n\t\tend\n\tend\n\
    \t\n\t-- If there's no such number, then return -1.\n\tif max_num == nil then\n\
    \t\treturn -1\n\tend\n\t\n\t-- If x is smaller than y, then swap them.\n\tif x\
    \ < y then\n\t\tx, y = y, x\n\tend\n\t\n\t-- Find the smallest number in the range.\n\
    \tmin_num = x\n\t\n\t-- Find the biggest number in the range.\n\tfor i = y, 1,\
    \ -1 do\n\t\tif i % 2 == 0 then\n\t\t\tmax_num = i\n\t\t\tbreak\n\t\tend\n\tend\n\
    \t\n\t-- If there's no such number, then return -1.\n\tif max_num == nil then\n\
    \t\treturn -1\n\tend\n\t\n\t-- If x is smaller than y, then swap them.\n\tif x\
    \ < y then\n\t\tx, y = y, x\n\tend\n\t\n\t-- Find the smallest number in the range.\n\
    \tmin_num = x\n\t\n\t-- Find the biggest number in the range.\n\tfor i = y, 1,\
    \ -1 do\n\t\tif i % 2 == 0 then\n\t\t\tmax_num = i\n\t\t\tbreak\n\t\tend\n\tend\n\
    \t\n\t-- If there's no such number, then return -1.\n\tif max_num == nil then\n\
    \t\treturn -1\n\tend\n\t\n\t-- If x is smaller than y, then swap them.\n\tif x\
    \ < y then\n\t\tx, y = y, x\n\tend\n\t\n\t-- Find the smallest number in the range.\n\
    \tmin_num = x\n\t\n\t-- Find the biggest number in the range.\n\tfor i = y, 1,\
    \ -1 do\n\t\tif i % 2 == 0 then\n\t\t\tmax_num = i\n\t\t\t", "    if x < y then\n\
    \        local x_even = x % 2\n        local y_even = y % 2\n        if x_even\
    \ and y_even then\n            return y\n        else\n            return x\n\
    \        end\n    else\n        local x_even = x % 2\n        local y_even = y\
    \ % 2\n        if x_even and y_even then\n            return x\n        else\n\
    \            return y\n        end\n    end\nend", "   if x >= y then\n      return\
    \ -1\n   end\n   local z = 0\n   while x < y do\n      z = z + 2\n      x = x\
    \ + 1\n   end\n   return z\nend", "    if x < y then\n        x, y = y, x\n  \
    \  end\n    for i = x, y + 1 do\n        if i % 2 == 0 then\n            return\
    \ i\n        end\n    end\n    return -1\nend", "\tlocal function is_even(n)\n\
    \t\treturn n % 2 == 0\n\tend\n\tlocal function is_odd(n)\n\t\treturn n % 2 ==\
    \ 1\n\tend\n\tlocal function is_between(n1, n2)\n\t\treturn n1 <= n2 and n2 <=\
    \ n1\n\tend\n\tlocal function is_in_range(n1, n2)\n\t\treturn is_even(n1) and\
    \ is_even(n2) and is_between(n1, n2)\n\tend\n\tlocal function is_in_range_odd(n1,\
    \ n2)\n\t\treturn is_odd(n1) and is_odd(n2) and is_between(n1, n2)\n\tend\n\t\
    local function is_in_range_even(n1, n2)\n\t\treturn is_even(n1) and is_even(n2)\
    \ and is_between(n1, n2)\n\tend\n\tlocal function is_in_range_odd_even(n1, n2)\n\
    \t\treturn is_odd(n1) and is_odd(n2) and is_even(n1) and is_even(n2)\n\tend\n\t\
    local function is_in_range_odd_odd(n1, n2)\n\t\treturn is_odd(n1) and is_odd(n2)\
    \ and is_odd(n1) and is_odd(n2)\n\tend\n\tlocal function is_in_range_odd_even_odd(n1,\
    \ n2)\n\t\treturn is_odd(n1) and is_odd(n2) and is_even(n1) and is_even(n2)\n\t\
    end\n\tlocal function is_in_range_even_odd(n1, n2)\n\t\treturn is_even(n1) and\
    \ is_even(n2) and is_odd(n1) and is_odd(n2)\n\tend\n\tlocal function is_in_range_odd_even_even(n1,\
    \ n2)\n\t\treturn is_odd(n1) and is_odd(n2) and is_even(n1) and is_even(n2)\n\t\
    end\n\tlocal function is_in_range_even_even(n1, n2)\n\t\treturn is_even(n1) and\
    \ is_even(n2) and is_even(n1) and is_even(n2)\n\tend\n\tlocal function is_in_range_odd_even_odd_even(n1,\
    \ n2)\n\t\treturn is_odd(n1) and is_odd(n2) and is_even(n1) and is_even(n2)\n\t\
    end\n\tlocal function is_in_range_odd_odd_odd(n1, n2)\n\t\treturn is_odd(n1) and\
    \ is_odd(n2) and is_odd(n1) and is_odd(n2)\n\tend\n\tlocal function is_in_range_odd_even_odd_even(n1,\
    \ n2)\n\t\treturn is_odd(n1) and is_odd(n2) and is_even(n1) and is_even(n2)",
  "  if x < y then\n    x, y = y, x\n  end\n  local z = math.floor((x + y) / 2)\n\
    \  if z * z == x + y then\n    return z\n  else\n    return -1\n  end\nend", " \
    \ if x < y then\n    return -1\n  end\n  if x == y then\n    return x\n  end\n\
    \  if x % 2 == 0 then\n    return choose_num(x + 1, y)\n  end\n  if y % 2 == 0\
    \ then\n    return choose_num(x, y + 1)\n  end\n  if x > y then\n    return choose_num(x\
    \ + 1, y + 1)\n  end\n  return -1\nend", "   if x < y then\n      x, y = y, x\n\
    \   end\n   local max_num = 0\n   for i = x, y + 1 do\n      if i % 2 == 0 then\n\
    \         max_num = i\n         break\n      end\n   end\n   return max_num\n\
    end", "    local function is_even(n)\n        return n % 2 == 0\n    end\n   \
    \ local function is_odd(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between(a, b)\n        return a <= b and a >= b\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(x - 1, n) and is_between(n + 1, y)\n\
    \    end\n    local function is_in_range_even(n)\n        return is_in_range(n)\
    \ and is_even(n)\n    end\n    local function is_in_range_odd(n)\n        return\
    \ is_in_range(n) and is_odd(n)\n    end\n    local function is_in_range_odd_or_even(n)\n\
    \        return is_in_range(n) and is_odd(n) or is_even(n)\n    end\n    local\
    \ function is_in_range_odd_or_even_or_zero(n)\n        return is_in_range(n) and\
    \ is_odd(n) or is_even(n) or n == 0\n    end\n    local function is_in_range_odd_or_even_or_zero_or_negative(n)\n\
    \        return is_in_range(n) and is_odd(n) or is_even(n) or n == 0 or n < 0\n\
    \    end\n    local function is_in_range_odd_or_even_or_zero_or_negative_n(n)\n\
    \        return is_in_range(n) and is_odd(n) or is_even(n) or n == 0 or n < 0\n\
    \    end\n    local function is_in_range_odd_or_even_or_zero_or_negative_n(n)\n\
    \        return is_in_range(n) and is_odd(n) or is_even(n) or n == 0 or n < 0\n\
    \    end\n    local function is_in_range_odd_or_even_or_zero_or_negative_n(n)\n\
    \        return is_in_range(n) and is_odd(n) or is_even(n) or n == 0 or n < 0\n\
    \    end\n    local function is_in_range_odd_or_even_or_zero_or_negative_n(n)\n\
    \        return is_in_range(n) and is_odd(n) or is_even(n) or n == 0 or n < 0\n\
    \    end\n    local function is_in_range_odd_or_even_or_zero_or_negative_n(n)\n\
    \        return is_in_range(n) and is_odd(n) or is_even(n) or n == 0 or n < 0\n\
    \    end\n    local function is_in_range_odd_or_even_or_zero_or_negative_n(n)\n\
    \        return is_in_range(n) and is_odd(n) or is_even(n) or n == 0 or n < 0\n\
    \    end\n    local function is_in_range_odd_or_even_or_zero_or_negative_n(n)\n\
    \        return is_in_range(n) and is_odd(n) or is_even(n) or n == 0 or n < 0\n\
    \    end\n    local function is_in_range_odd_or_even_or_zero_or_", "  if x < y\
    \ then\n    x, y = y, x\n  end\n  local max_num = x\n  local max_num2 = y\n  local\
    \ max_num3 = max_num * max_num\n  local max_num4 = max_num2 * max_num\n  local\
    \ max_num5 = max_num3 * max_num\n  local max_num6 = max_num4 * max_num\n  local\
    \ max_num7 = max_num5 * max_num\n  local max_num8 = max_num6 * max_num\n  local\
    \ max_num9 = max_num7 * max_num\n  local max_num10 = max_num8 * max_num\n  local\
    \ max_num11 = max_num9 * max_num\n  local max_num12 = max_num10 * max_num\n  local\
    \ max_num13 = max_num11 * max_num\n  local max_num14 = max_num12 * max_num\n \
    \ local max_num15 = max_num13 * max_num\n  local max_num16 = max_num14 * max_num\n\
    \  local max_num17 = max_num15 * max_num\n  local max_num18 = max_num16 * max_num\n\
    \  local max_num19 = max_num17 * max_num\n  local max_num20 = max_num18 * max_num\n\
    \  local max_num21 = max_num19 * max_num\n  local max_num22 = max_num20 * max_num\n\
    \  local max_num23 = max_num21 * max_num\n  local max_num24 = max_num22 * max_num\n\
    \  local max_num25 = max_num23 * max_num\n  local max_num26 = max_num24 * max_num\n\
    \  local max_num27 = max_num25 * max_num\n  local max_num28 = max_num26 * max_num\n\
    \  local max_num29 = max_num27 * max_num\n  local max_num30 = max_num28 * max_num\n\
    \  local max_num31 = max_num29 * max_num\n  local max_num32 = max_num30 * max_num\n\
    \  local max_num33 = max_num31 * max_num\n  local max_num34 = max_num32 * max_num\n\
    \  local max_num35 = max_num33 * max_num\n  local max_num36 = max_num34 * max_num\n\
    \  local max_num37 = max_num35 * max_num\n  local max_num38 = max_num36 * max_num\n\
    \  local max_num39 = max_num37 * max_num\n  local max_num40 = max_num38 * max_num\n\
    \  local max_num41 = max_num39 * ", "   if x < y then\n      x, y = y, x\n   end\n\
    \   local max_num = x\n   for i = y, 1, -1 do\n      if max_num % i == 0 then\n\
    \         max_num = max_num / i\n      else\n         return -1\n      end\n \
    \  end\n   return max_num\nend", "    if x <= y then\n        return -1\n    end\n\
    \    local max_num = x\n    local min_num = y\n    while true do\n        local\
    \ num = math.floor(math.random() * (max_num - min_num + 1) + min_num)\n      \
    \  if num % 2 == 0 then\n            return num\n        end\n        if num >\
    \ max_num then\n            max_num = num\n        end\n        if num < min_num\
    \ then\n            min_num = num\n        end\n    end\nend", "   if x < y then\n\
    \      local m = x\n      x = y\n      y = m\n   end\n   local m = math.floor(x/2)\
    \ + math.floor(y/2)\n   if x == m then\n      return m\n   elseif y == m then\n\
    \      return -1\n   else\n      return m\n   end\nend", "    local x_even = x\
    \ % 2\n    local y_even = y % 2\n    if x_even and y_even then\n        if x_even\
    \ > y_even then\n            return x\n        else\n            return y\n  \
    \      end\n    elseif x_even then\n        return x\n    else\n        return\
    \ y\n    end\nend", "   if x < y then\n      local t = x\n      x = y\n      y\
    \ = t\n   end\n   if x < 2 then\n      return -1\n   end\n   if y < 2 then\n \
    \     return -1\n   end\n   local m = math.floor((x + y) / 2)\n   if m % 2 ==\
    \ 0 then\n      return choose_num(x, m)\n   else\n      return choose_num(m, y)\n\
    \   end\nend", "  if x < y then\n    x, y = y, x\n  end\n  local z = x + 1\n \
    \ while z <= y do\n    if z & 1 then\n      return z\n    end\n    z = z * 2 +\
    \ 1\n  end\n  return -1\nend", "  if x < y then\n    return choose_num(y, x)\n\
    \  end\n  if x == y then\n    return x\n  end\n  if x % 2 == 0 then\n    return\
    \ choose_num(x / 2, y)\n  end\n  if y % 2 == 0 then\n    return choose_num(x,\
    \ y / 2)\n  end\n  return -1\nend", "\tlocal function is_even(n)\n\t\treturn n\
    \ % 2 == 0\n\tend", "\tlocal x_even = x % 2 == 0\n\tlocal y_even = y % 2 == 0\n\
    \tlocal x_odd = not x_even\n\tlocal y_odd = not y_even\n\t\n\tif x_even and y_even\
    \ then\n\t\treturn x\n\telseif x_even and y_odd then\n\t\treturn y\n\telseif x_odd\
    \ and y_even then\n\t\treturn x\n\telseif x_odd and y_odd then\n\t\treturn y\n\
    \telse\n\t\treturn -1\n\tend\nend", "  if x < y then\n    return choose_num(y,\
    \ x)\n  elseif x == y then\n    return x\n  else\n    return choose_num(y - 1,\
    \ x + 1)\n  end\nend", "  if x < y then\n    return -1\n  elseif x == y then\n\
    \    return x\n  else\n    return x + 1\n  end\nend", "   if x < y then\n    \
    \  local m = x\n      x = y\n      y = m\n   end\n   if x < 1 then\n      return\
    \ -1\n   end\n   if y < 1 then\n      return -1\n   end\n   if x == 1 then\n \
    \     return y\n   end\n   if y == 1 then\n      return x\n   end\n   if x % 2\
    \ == 0 then\n      return choose_num(x / 2, y)\n   end\n   if y % 2 == 0 then\n\
    \      return choose_num(x, y / 2)\n   end\n   if x % 2 == y % 2 then\n      return\
    \ choose_num(x / 2, y / 2)\n   end\n   return -1\nend", "   if x < y then\n  \
    \    return choose_num(y, x)\n   end\n   if x == y then\n      return x\n   end\n\
    \   if x % 2 == 0 then\n      return choose_num(x / 2, y)\n   end\n   if y % 2\
    \ == 0 then\n      return choose_num(x, y / 2)\n   end\n   if x > y then\n   \
    \   return choose_num(y, x)\n   end\n   return -1\nend", "    if x < y then\n\
    \        x, y = y, x\n    end\n    if x == y then\n        return x\n    end\n\
    \    if x % 2 == 0 then\n        return choose_num(x / 2, y)\n    else\n     \
    \   return choose_num(3 * x + 1, y)\n    end\nend", "   if x >= y and x >= x then\n\
    \      return x\n   elseif y >= y and y >= y then\n      return y\n   else\n \
    \     return -1\n   end\nend", "\tlocal function is_even(n)\n\t\treturn n % 2\
    \ == 0\n\tend\n\t\n\tlocal function is_odd(n)\n\t\treturn n % 2 == 1\n\tend\n\t\
    \n\tlocal function is_between(n, x, y)\n\t\treturn n >= x and n <= y\n\tend\n\t\
    \n\tlocal function is_in_range(n, x, y)\n\t\treturn is_between(n, x, y) or is_even(n)\n\
    \tend\n\t\n\tlocal function is_in_range_or_even(n, x, y)\n\t\treturn is_in_range(n,\
    \ x, y) or is_even(n)\n\tend\n\t\n\tlocal function is_in_range_or_odd(n, x, y)\n\
    \t\treturn is_in_range(n, x, y) or is_odd(n)\n\tend\n\t\n\tlocal function is_in_range_or_even_in_range(n,\
    \ x, y)\n\t\treturn is_in_range_or_even(n, x, y) or is_in_range_or_odd(n, x, y)\n\
    \tend\n\t\n\tlocal function is_in_range_or_odd_in_range(n, x, y)\n\t\treturn is_in_range_or_odd(n,\
    \ x, y) or is_in_range_or_even(n, x, y)\n\tend\n\t\n\tlocal function is_in_range_or_even_in_range_or_odd(n,\
    \ x, y)\n\t\treturn is_in_range_or_even(n, x, y) or is_in_range_or_odd(n, x, y)\n\
    \tend\n\t\n\tlocal function is_in_range_or_odd_in_range_or_even(n, x, y)\n\t\t\
    return is_in_range_or_odd(n, x, y) or is_in_range_or_even(n, x, y)\n\tend\n\t\n\
    \tlocal function is_in_range_or_even_in_range_or_odd_in_range(n, x, y)\n\t\treturn\
    \ is_in_range_or_even(n, x, y) or is_in_range_or_odd(n, x, y)\n\tend\n\t\n\tlocal\
    \ function is_in_range_or_odd_in_range_or_even_in_range(n, x, y)\n\t\treturn is_in_range_or_odd(n,\
    \ x, y) or is_in_range_or_even(n, x, y)\n\tend\n\t\n\tlocal function is_in_range_or_even_in_range_or_odd_in_range_or_even(n,\
    \ x, y)\n\t\treturn is_in_range_or_even(n, x, y) or is_in_range_or_odd(n, x, y)\n\
    \tend\n\t\n\tlocal function is_in_range_or_odd_in_range_or_even_in_range_or_odd(n,\
    \ x, y)\n\t\treturn is_in_range_or_odd(n, x, y) or is_in_range_or_even(n, x, y)\n\
    \tend\n\t\n\tlocal function is_in_range_or_even_in_range_or_odd_in_range_or_even(n,\
    \ x, y)\n\t\treturn is_in_range_or_even(n, x, y) or is_in_range_or_odd(n, x, y)\n\
    \tend\n\t\n\tlocal function is_in_range_or_odd_in_range_or_even", "  if x < y\
    \ then\n    x, y = y, x\n  end\n  local max_num = x\n  local max_num_pos = 1\n\
    \  local max_num_neg = 1\n  local i = 1\n  while i <= y do\n    local num = x\
    \ + i\n    if num % 2 == 0 then\n      if num > max_num then\n        max_num\
    \ = num\n        max_num_pos = 1\n      else\n        max_num_pos = max_num_pos\
    \ + 1\n      end\n    else\n      if num < max_num then\n        max_num = num\n\
    \        max_num_neg = 1\n      else\n        max_num_neg = max_num_neg + 1\n\
    \      end\n    end\n    i = i + 1\n  end\n  if max_num_neg > max_num_pos then\n\
    \    return -1\n  else\n    return max_num\n  end\nend", "    if x < y then\n\
    \        x, y = y, x\n    end\n    local max_num = x\n    local max_num_pos =\
    \ 1\n    for i = y, 1, -1 do\n        if max_num % i == 0 then\n            max_num\
    \ = max_num / i\n            max_num_pos = i\n        end\n    end\n    return\
    \ max_num\nend", "  if x < y then\n    return choose_num(y, x)\n  end\n  if x\
    \ > y then\n    return choose_num(x, y)\n  end\n  if x == y then\n    return x\n\
    \  end\n  if x % 2 == 0 and y % 2 == 0 then\n    return choose_num(x / 2, y /\
    \ 2)\n  end\n  if x % 2 == 0 and y % 2 ~= 0 then\n    return choose_num(x / 2,\
    \ y)\n  end\n  if x % 2 ~= 0 and y % 2 == 0 then\n    return choose_num(x, y /\
    \ 2)\n  end\n  if x % 2 ~= 0 and y % 2 ~= 0 then\n    return choose_num(x, y)\n\
    \  end\n  return -1\nend", "   if x < y then\n      x, y = y, x\n   end\n   if\
    \ x == y then\n      return x\n   end\n   if x % 2 == 0 then\n      return choose_num(x\
    \ / 2, y)\n   else\n      return choose_num(3 * x + 1, y)\n   end\nend", "   \
    \ local max_num = x\n    local min_num = y\n    local max_even = 1\n    local\
    \ max_odd = 1\n    local max_even_in_range = 1\n    local max_odd_in_range = 1\n\
    \    local max_even_in_range_plus_one = 1\n    local max_odd_in_range_plus_one\
    \ = 1\n    local max_even_in_range_plus_two = 1\n    local max_odd_in_range_plus_two\
    \ = 1\n    local max_even_in_range_plus_three = 1\n    local max_odd_in_range_plus_three\
    \ = 1\n    local max_even_in_range_plus_four = 1\n    local max_odd_in_range_plus_four\
    \ = 1\n    local max_even_in_range_plus_five = 1\n    local max_odd_in_range_plus_five\
    \ = 1\n    local max_even_in_range_plus_six = 1\n    local max_odd_in_range_plus_six\
    \ = 1\n    local max_even_in_range_plus_seven = 1\n    local max_odd_in_range_plus_seven\
    \ = 1\n    local max_even_in_range_plus_eight = 1\n    local max_odd_in_range_plus_eight\
    \ = 1\n    local max_even_in_range_plus_nine = 1\n    local max_odd_in_range_plus_nine\
    \ = 1\n    local max_even_in_range_plus_ten = 1\n    local max_odd_in_range_plus_ten\
    \ = 1\n    local max_even_in_range_plus_eleven = 1\n    local max_odd_in_range_plus_eleven\
    \ = 1\n    local max_even_in_range_plus_twelve = 1\n    local max_odd_in_range_plus_twelve\
    \ = 1\n    local max_even_in_range_plus_thirteen = 1\n    local max_odd_in_range_plus_thirteen\
    \ = 1\n    local max_even_in_range_plus_fourteen = 1\n    local max_odd_in_range_plus_fourteen\
    \ = 1\n    local max_even_in_range_plus_fifteen = 1\n    local max_odd_in_range_plus_fifteen\
    \ = 1\n    local max_even_in_range_plus_sixteen = 1\n    local max_odd_in_range_plus_sixteen\
    \ = 1\n    local max_even_in_range_plus_seventeen = 1\n    local max_odd_in_range_plus_seventeen\
    \ = 1\n    local max_even_in_range_plus_eighteen = 1\n    local max_odd_in_range_plus_eighteen\
    \ = 1\n    local max_even_in_range_plus_nineteen = 1\n    local max_odd_in_range_plus_nineteen\
    \ = 1\n    local max_even_in_range_plus_twenty = 1\n    local max_odd_in_range_plus_twenty\
    \ = 1\n    local max_even_in_range_plus_twenty_", "\tlocal function is_even(n)\n\
    \t\treturn n % 2 == 0\n\tend", "    if x < y then\n        x, y = y, x\n    end\n\
    \    for i = x, y + 1 do\n        if i % 2 == 0 then\n            return i\n \
    \       end\n    end\n    return -1\nend", "  local function is_even(n)\n    return\
    \ n % 2 == 0\n  end\n  \n  local function is_odd(n)\n    return n % 2 == 1\n \
    \ end\n  \n  local function is_between(lower, upper)\n    return lower <= upper\
    \ and lower % 2 == 0 and upper % 2 == 0\n  end\n  \n  local function is_in_range(lower,\
    \ upper)\n    return lower <= x and x <= upper\n  end\n  \n  local function is_in_range_or_equal(lower,\
    \ upper)\n    return lower <= x and x <= upper\n  end\n  \n  local function is_in_range_or_equal_to(lower,\
    \ upper)\n    return lower <= x and x <= upper\n  end\n  \n  local function is_in_range_or_equal_to_or_equal(lower,\
    \ upper)\n    return lower <= x and x <= upper\n  end\n  \n  local function is_in_range_or_equal_to_or_equal_to(lower,\
    \ upper)\n    return lower <= x and x <= upper\n  end\n  \n  local function is_in_range_or_equal_to_or_equal_to_or_equal(lower,\
    \ upper)\n    return lower <= x and x <= upper\n  end\n  \n  local function is_in_range_or_equal_to_or_equal_to_or_equal_to(lower,\
    \ upper)\n    return lower <= x and x <= upper\n  end\n  \n  local function is_in_range_or_equal_to_or_equal_to_or_equal_to_or_equal(lower,\
    \ upper)\n    return lower <= x and x <= upper\n  end\n  \n  local function is_in_range_or_equal_to_or_equal_to_or_equal_to_or_equal_to(lower,\
    \ upper)\n    return lower <= x and x <= upper\n  end\n  \n  local function is_in_range_or_equal_to_or_equal_to_or_equal_to_or_equal_to_or_equal(lower,\
    \ upper)\n    return lower <= x and x <= upper\n  end\n  \n  local function is_in_range_or_equal_to_or_equal_to_or_equal_to_or_equal_to_or_equal_to(lower,\
    \ upper)\n    return lower <= x and x <= upper\n  end\n  \n  local function is_in_range_or_equal_to_or_equal_to_or_equal_to_or_equal_to_or_equal_to_or_equal(lower,\
    \ upper)\n    return lower <= x and x <= upper\n  end\n  \n  local function is_in_range_or_equal_to_or_equal_to_or_equal_to_or_equal_to_or_equal_to_or_equal_to(lower,\
    \ upper)\n    return lower <= x and x <= upper\n  end\n  \n  local function is_in_range_or_equal_to_or_equal_to_or_equal_to_or_equal_to_or_equal_to_or_equal_to_or_equal(lower,\
    \ upper)\n    return lower <= x and x <= upper\n  end\n  \n  local ", "\tlocal\
    \ max_num = x\n\tlocal min_num = y\n\tlocal max_even = 1\n\tlocal max_odd = 1\n\
    \tlocal max_even_in_range = max_even\n\tlocal max_odd_in_range = max_odd\n\tlocal\
    \ max_even_in_range_even = max_even\n\tlocal max_odd_in_range_odd = max_odd\n\t\
    local max_even_in_range_odd_even = max_even\n\tlocal max_odd_in_range_odd_odd\
    \ = max_odd\n\tlocal max_even_in_range_odd_odd_even = max_even\n\tlocal max_odd_in_range_odd_odd_odd\
    \ = max_odd\n\tlocal max_even_in_range_odd_odd_odd_even = max_even\n\tlocal max_odd_in_range_odd_odd_odd_odd\
    \ = max_odd\n\tlocal max_even_in_range_odd_odd_odd_odd_even = max_even\n\tlocal\
    \ max_odd_in_range_odd_odd_odd_odd_odd = max_odd\n\tlocal max_even_in_range_odd_odd_odd_odd_odd_even\
    \ = max_even\n\tlocal max_odd_in_range_odd_odd_odd_odd_odd_odd = max_odd\n\tlocal\
    \ max_even_in_range_odd_odd_odd_odd_odd_even = max_even\n\tlocal max_odd_in_range_odd_odd_odd_odd_odd_odd\
    \ = max_odd\n\tlocal max_even_in_range_odd_odd_odd_odd_odd_odd_even = max_even\n\
    \tlocal max_odd_in_range_odd_odd_odd_odd_odd_odd_odd = max_odd\n\tlocal max_even_in_range_odd_odd_odd_odd_odd_odd_even\
    \ = max_even\n\tlocal max_odd_in_range_odd_odd_odd_odd_odd_odd_odd = max_odd\n\
    \tlocal max_even_in_range_odd_odd_odd_odd_odd_odd_even = max_even\n\tlocal max_odd_in_range_odd_odd_odd_odd_odd_odd_odd\
    \ = max_odd\n\tlocal max_even_in_range_odd_odd_odd_odd_odd_odd_even = max_even\n\
    \tlocal max_odd_in_range_odd_odd_odd_odd_odd_odd_odd = max_odd\n\tlocal max_even_in_range_odd_odd_odd_odd_odd_odd_even\
    \ = max_even\n\tlocal max_odd_in_range_odd_odd_odd_odd_od", "   if x < y then\n\
    \      x, y = y, x\n   end\n   if x == y then\n      return x\n   end\n   if x\
    \ % 2 == 0 then\n      return choose_num(x / 2, y)\n   else\n      return choose_num(3\
    \ * x + 1, y)\n   end\nend", "    if x < y then\n        x, y = y, x\n    end\n\
    \    for i = x, y + 1 do\n        if i ~= math.floor(i) then\n            return\
    \ i\n        end\n    end\n    return -1\nend", "  if x > y then\n    x, y = y,\
    \ x\n  end\n  local z = math.floor((x + y) / 2)\n  if z * z == x then\n    return\
    \ z\n  else\n    return choose_num(y, z)\n  end\nend", "   if x < y then\n   \
    \   local m = x\n      x = y\n      y = m\n   end\n   if x < 1 then\n      return\
    \ -1\n   end\n   if y < 1 then\n      return -1\n   end\n   if x == y then\n \
    \     return x\n   end\n   if x % 2 == 0 then\n      return choose_num(x / 2,\
    \ y)\n   end\n   if y % 2 == 0 then\n      return choose_num(x, y / 2)\n   end\n\
    \   local m = math.floor(x/2)\n   if m % 2 == 0 then\n      return choose_num(m,\
    \ y)\n   end\n   return choose_num(m, y + 1)\nend", "    if x < y then\n     \
    \   x, y = y, x\n    end\n    for i = x, y + 1 do\n        if i % 2 == 0 then\n\
    \            return i\n        end\n    end\n    return -1\nend", "  if x < y\
    \ then\n    return choose_num(y, x)\n  end\n  if x == y then\n    return x\n \
    \ end\n  if x % 2 == 0 then\n    return choose_num(x / 2, y)\n  end\n  if y %\
    \ 2 == 0 then\n    return choose_num(x, y / 2)\n  end\n  return -1\nend", "  \
    \ if x < y then\n      local m = x\n      x = y\n      y = m\n   end\n   if x\
    \ < 1 then\n      return -1\n   end\n   if y < 1 then\n      return -1\n   end\n\
    \   if x == y then\n      return x\n   end\n   if x % 2 == 0 then\n      return\
    \ choose_num(x / 2, y)\n   end\n   if y % 2 == 0 then\n      return choose_num(x,\
    \ y / 2)\n   end\n   if x % 2 == y % 2 then\n      return choose_num(x / 2, y\
    \ / 2)\n   end\n   return -1\nend", "    local max_num = x\n    for i = y, 1,\
    \ -1 do\n        if max_num % i == 0 then\n            max_num = i\n        end\n\
    \    end\n    return max_num\nend", "    if x < y then\n        x, y = y, x\n\
    \    end\n    local max_num = x\n    local max_num2 = y\n    local max_num3 =\
    \ x\n    local max_num4 = y\n    for i = x, y + 1 do\n        if i % 2 == 0 then\n\
    \            if max_num < i then\n                max_num = i\n            end\n\
    \            if max_num2 < i then\n                max_num2 = i\n            end\n\
    \            if max_num3 < i then\n                max_num3 = i\n            end\n\
    \            if max_num4 < i then\n                max_num4 = i\n            end\n\
    \        end\n    end\n    if max_num == x or max_num2 == x or max_num3 == x or\
    \ max_num4 == x then\n        return -1\n    end\n    return max_num\nend", " \
    \   if x < y then\n        local temp = x\n        x = y\n        y = temp\n \
    \   end\n    local ans = -1\n    local i = 1\n    while i <= y do\n        if\
    \ x % i == 0 then\n            ans = i\n            break\n        end\n     \
    \   i = i + 1\n    end\n    return ans\nend", "  if x < y then\n    x, y = y,\
    \ x\n  end\n  local max_num = x\n  local max_num2 = y\n  local i = 1\n  while\
    \ i <= max_num2 do\n    local num = max_num + i\n    if num % 2 == 0 then\n  \
    \    max_num = num\n    end\n    i = i + 1\n  end\n  return max_num\nend", " \
    \  if x < y then\n      local m = x\n      x = y\n      y = m\n   end\n   if x\
    \ < 1 then\n      return -1\n   end\n   if y < 1 then\n      return -1\n   end\n\
    \   if x == y then\n      return x\n   end\n   if x % 2 == 0 then\n      return\
    \ choose_num(x / 2, y)\n   end\n   if y % 2 == 0 then\n      return choose_num(x,\
    \ y / 2)\n   end\n   if x > y then\n      return choose_num(x - 1, y)\n   end\n\
    \   if y > x then\n      return choose_num(x, y - 1)\n   end\nend", "   if x <\
    \ y then\n      local m = x\n      x = y\n      y = m\n   end\n   if x < 1 then\n\
    \      return -1\n   end\n   if y < 1 then\n      return -1\n   end\n   if x ==\
    \ y then\n      return x\n   end\n   if x % 2 == 0 then\n      return choose_num(x\
    \ / 2, y)\n   end\n   if y % 2 == 0 then\n      return choose_num(x, y / 2)\n\
    \   end\n   if x % 2 == y % 2 then\n      return choose_num(x / 2, y / 2)\n  \
    \ end\n   return -1\nend", "\tlocal max_num = 0\n\tlocal max_num_index = 0\n\t\
    local i = x\n\tlocal j = y\n\twhile i <= j do\n\t\tif i % 2 == 0 then\n\t\t\t\
    i = i + 1\n\t\telse\n\t\t\tj = j - 1\n\t\tend\n\t\tif i == j then\n\t\t\tbreak\n\
    \t\tend\n\t\tmax_num = max_num + 1\n\tend\n\tif max_num > 0 then\n\t\treturn max_num\n\
    \telse\n\t\treturn -1\n\tend\nend", "  local max_num = x\n  local min_num = y\n\
    \  local max_even = 1\n  local max_odd = 1\n  local max_even_in_range = max_even\n\
    \  local max_odd_in_range = max_odd\n  local i = x\n  local j = y\n  while i <=\
    \ j do\n    local even = math.floor(i/2)\n    local odd = math.floor((i+1)/2)\n\
    \    if even > max_even then\n      max_even = even\n      max_even_in_range =\
    \ even\n    end\n    if odd > max_odd then\n      max_odd = odd\n      max_odd_in_range\
    \ = odd\n    end\n    i = i+1\n    j = j-1\n  end\n  if max_even > max_odd then\n\
    \    return max_even_in_range\n  else\n    return max_odd_in_range\n  end\nend",
  "   if x < y then\n      return choose_num(y, x)\n   end\n   if x == y then\n  \
    \    return x\n   end\n   if x % 2 == 0 and y % 2 == 0 then\n      return choose_num(x\
    \ / 2, y / 2)\n   end\n   return -1\nend", "\tlocal x_even = x % 2\n\tlocal y_even\
    \ = y % 2\n\tlocal x_odd = x % 2 + 1\n\tlocal y_odd = y % 2 + 1\n\tlocal max_even\
    \ = x_even > y_even and x_even or y_even\n\tlocal max_odd = x_odd > y_odd and\
    \ x_odd or y_odd\n\tif max_even > max_odd then\n\t\treturn max_even\n\telse\n\t\
    \treturn max_odd\n\tend\nend", "  local even = 1\n  local odd = 0\n  local biggest\
    \ = -1\n  local biggest_even = -1\n  local biggest_odd = -1\n  local x_even =\
    \ math.floor(x)\n  local x_odd = x_even + 1\n  local y_even = math.floor(y)\n\
    \  local y_odd = y_even + 1\n  while even <= x_even and odd <= y_even do\n   \
    \ if even % 2 == 1 then\n      biggest = even\n      biggest_even = even\n   \
    \   biggest_odd = odd\n    else\n      biggest = odd\n      biggest_even = even\n\
    \      biggest_odd = odd\n    end\n    even = even + 2\n    odd = odd + 2\n  end\n\
    \  if biggest == -1 then\n    return -1\n  end\n  if biggest_even > biggest then\n\
    \    return biggest_even\n  end\n  if biggest_odd > biggest then\n    return biggest_odd\n\
    \  end\n  return biggest\nend", "  local function is_even(n)\n    return n % 2\
    \ == 0\n  end\n  local function is_odd(n)\n    return n % 2 == 1\n  end\n  local\
    \ function is_between(n, x, y)\n    return n >= x and n <= y\n  end\n  local function\
    \ is_in_range(n, x, y)\n    return is_between(n, x, y) or is_even(n) or is_odd(n)\n\
    \  end\n  local function is_in_range_or_even(n, x, y)\n    return is_in_range(n,\
    \ x, y) or is_even(n)\n  end\n  local function is_in_range_or_odd(n, x, y)\n \
    \   return is_in_range(n, x, y) or is_odd(n)\n  end\n  local function is_in_range_or_even_in_range(n,\
    \ x, y)\n    return is_in_range_or_even(n, x, y) or is_in_range_or_odd(n, x, y)\n\
    \  end\n  local function is_in_range_or_odd_in_range(n, x, y)\n    return is_in_range_or_even(n,\
    \ x, y) or is_in_range_or_odd(n, x, y)\n  end\n  local function is_in_range_or_even_in_range_or_odd(n,\
    \ x, y)\n    return is_in_range_or_even(n, x, y) or is_in_range_or_odd(n, x, y)\n\
    \  end\n  local function is_in_range_or_odd_in_range_or_even(n, x, y)\n    return\
    \ is_in_range_or_even(n, x, y) or is_in_range_or_odd(n, x, y)\n  end\n  local\
    \ function is_in_range_or_even_in_range_or_odd_in_range(n, x, y)\n    return is_in_range_or_even(n,\
    \ x, y) or is_in_range_or_odd(n, x, y)\n  end\n  local function is_in_range_or_odd_in_range_or_even_in_range(n,\
    \ x, y)\n    return is_in_range_or_even(n, x, y) or is_in_range_or_odd(n, x, y)\n\
    \  end\n  local function is_in_range_or_even_in_range_or_odd_in_range_or_even(n,\
    \ x, y)\n    return is_in_range_or_even(n, x, y) or is_in_range_or_odd(n, x, y)\n\
    \  end\n  local function is_in_range_or_odd_in_range_or_even_in_range_or_even(n,\
    \ x, y)\n    return is_in_range_or_even(n, x, y) or is_in_range_or_odd(n, x, y)\n\
    \  end\n  local function is_in_range_or_even_in_range_or_odd_in_range_or_even(n,\
    \ x, y)\n    return is_in_range_or_even(n, x, y) or is_in_range_or_odd(n, x, y)\n\
    \  end\n  local function is_in_range_or_odd_in_range_or_even_in_range_or_even(n,\
    \ x, y)\n    return is_in_range_or_even(n, x, y) or is_in_range_or_odd(n, x, y)\n\
    \  end\n  local function is_in_range_or_even_in_range_or_odd_in_", "   if x <\
    \ y then\n      return -1\n   end\n   if x == y then\n      return x\n   end\n\
    \   local m = math.floor((x + y) / 2)\n   return choose_num(x, m) if m % 2 ==\
    \ 0 and m <= y else choose_num(y, m)\nend", "    if x < y then\n        x, y =\
    \ y, x\n    end\n    local z = x + 1\n    while z <= y do\n        if z & 1 then\n\
    \            return z\n        end\n        z = z * 2\n    end\n    return -1\n\
    end", "  if x < y then\n    x, y = y, x\n  end\n  local max_num = x\n  local min_num\
    \ = y\n  while max_num - min_num > 1 do\n    local mid = (max_num + min_num) /\
    \ 2\n    if mid % 2 == 0 then\n      max_num = mid\n    else\n      min_num =\
    \ mid\n    end\n  end\n  return max_num\nend", "\tlocal function is_even(i)\n\t\
    \treturn i % 2 == 0\n\tend", "  if x < y then\n    x, y = y, x\n  end\n  local\
    \ max_num = x\n  local max_num2 = y\n  local i = 1\n  while i <= max_num2 do\n\
    \    if max_num2 % i == 0 then\n      max_num = max_num2\n    end\n    max_num2\
    \ = max_num2 / i\n    i = i + 1\n  end\n  return max_num\nend", "  local function\
    \ is_even(n)\n    return n % 2 == 0\n  end\n  local function is_odd(n)\n    return\
    \ n % 2 == 1\n  end\n  local function is_between(low, high)\n    return low <=\
    \ high\n  end\n  local function is_in_range(low, high)\n    return low <= x and\
    \ x <= high\n  end\n  local function is_in_range_or_none(low, high)\n    return\
    \ low <= x and x <= high or nil\n  end\n  local function is_in_range_or_zero(low,\
    \ high)\n    return low <= x and x <= high or 0\n  end\n  local function is_in_range_or_one(low,\
    \ high)\n    return low <= x and x <= high or 1\n  end\n  local function is_in_range_or_zero(low,\
    \ high)\n    return low <= x and x <= high or 0\n  end\n  local function is_in_range_or_one(low,\
    \ high)\n    return low <= x and x <= high or 1\n  end\n  local function is_in_range_or_zero(low,\
    \ high)\n    return low <= x and x <= high or 0\n  end\n  local function is_in_range_or_one(low,\
    \ high)\n    return low <= x and x <= high or 1\n  end\n  local function is_in_range_or_zero(low,\
    \ high)\n    return low <= x and x <= high or 0\n  end\n  local function is_in_range_or_one(low,\
    \ high)\n    return low <= x and x <= high or 1\n  end\n  local function is_in_range_or_zero(low,\
    \ high)\n    return low <= x and x <= high or 0\n  end\n  local function is_in_range_or_one(low,\
    \ high)\n    return low <= x and x <= high or 1\n  end\n  local function is_in_range_or_zero(low,\
    \ high)\n    return low <= x and x <= high or 0\n  end\n  local function is_in_range_or_one(low,\
    \ high)\n    return low <= x and x <= high or 1\n  end\n  local function is_in_range_or_zero(low,\
    \ high)\n    return low <= x and x <= high or 0\n  end\n  local function is_in_range_or_one(low,\
    \ high)\n    return low <= x and x <= high or 1\n  end\n  local function is_in_range_or_zero(low,\
    \ high)\n    return low <= x and x <= high or 0\n  end\n  local function is_in_range_or_one(low,\
    \ high)\n    return low <= x and x <= high or 1\n  end\n  local function is_in_range_or_zero(low,\
    \ high)\n    return low <= x and x <= high or 0\n  end\n  local function is_in_range_or_one(low,\
    \ high)\n    return low <= x and x <= high or 1\n  end\n", "\tlocal max_num =\
    \ x\n\tlocal min_num = y\n\tlocal max_num2 = y\n\tlocal min_num2 = x\n\tlocal\
    \ max_num3 = y\n\tlocal min_num3 = x\n\tlocal max_num4 = y\n\tlocal min_num4 =\
    \ x\n\tlocal max_num5 = y\n\tlocal min_num5 = x\n\tlocal max_num6 = y\n\tlocal\
    \ min_num6 = x\n\tlocal max_num7 = y\n\tlocal min_num7 = x\n\tlocal max_num8 =\
    \ y\n\tlocal min_num8 = x\n\tlocal max_num9 = y\n\tlocal min_num9 = x\n\tlocal\
    \ max_num10 = y\n\tlocal min_num10 = x\n\tlocal max_num11 = y\n\tlocal min_num11\
    \ = x\n\tlocal max_num12 = y\n\tlocal min_num12 = x\n\tlocal max_num13 = y\n\t\
    local min_num13 = x\n\tlocal max_num14 = y\n\tlocal min_num14 = x\n\tlocal max_num15\
    \ = y\n\tlocal min_num15 = x\n\tlocal max_num16 = y\n\tlocal min_num16 = x\n\t\
    local max_num17 = y\n\tlocal min_num17 = x\n\tlocal max_num18 = y\n\tlocal min_num18\
    \ = x\n\tlocal max_num19 = y\n\tlocal min_num19 = x\n\tlocal max_num20 = y\n\t\
    local min_num20 = x\n\tlocal max_num21 = y\n\tlocal min_num21 = x\n\tlocal max_num22\
    \ = y\n\tlocal min_num22 = x\n\tlocal max_num23 = y\n\tlocal min_num23 = x\n\t\
    local max_num24 = y\n\tlocal min_num24 = x\n\tlocal max_num25 = y\n\tlocal min_num25\
    \ = x\n\tlocal max_num26 = y\n\tlocal min_num26 = x\n\tlocal max_num27 = y\n\t\
    local min_num27 = x\n\tlocal max_num28 = y\n\tlocal min_num28 = x\n\tlocal max_num29\
    \ = y\n\tlocal min_num29 = x\n\tlocal max_num30 = y\n\tlocal min_num30 = x\n\t\
    local max_num31 = y\n\tlocal min_num31 = x\n\tlocal max_num32 = y\n\tlocal min_num32\
    \ = x\n\tlocal max_num33 = y\n\tlocal min_num33 = x\n\tlocal max_num34 = y\n\t\
    local min_num34 = x\n\tlocal max_num35 = y\n\tlocal min_num35 = x", "  if x <\
    \ y then\n    return choose_num(y, x)\n  else\n    if x % 2 == 0 and y % 2 ==\
    \ 0 then\n      return x + (y / 2)\n    else\n      if x % 2 == 0 and y % 2 ==\
    \ 1 then\n        return x + (y / 2)\n      else\n        if x % 2 == 1 and y\
    \ % 2 == 0 then\n          return x + (y / 2)\n        else\n          if x %\
    \ 2 == 1 and y % 2 == 1 then\n            return x\n          else\n         \
    \   return -1\n          end\n        end\n      end\n    end\n  end\nend", " \
    \   if x < y then\n        local m = x\n        x = y\n        y = m\n    end\n\
    \    local m = math.floor(x/2)\n    if m % 2 == 0 then\n        return m\n   \
    \ else\n        return choose_num(y, x)\n    end\nend", "\tlocal function is_even(n)\n\
    \t\treturn n % 2 == 0\n\tend\n\tlocal function is_odd(n)\n\t\treturn n % 2 ==\
    \ 1\n\tend\n\tlocal function is_between(x, a, b)\n\t\treturn x >= a and x <= b\n\
    \tend\n\tlocal function is_in_range(n)\n\t\treturn is_between(n, x, x + 1)\n\t\
    end\n\tlocal function is_in_range_odd(n)\n\t\treturn is_between(n, x, x + 1)\n\
    \tend\n\tlocal function is_in_range_even(n)\n\t\treturn is_between(n, x, x + 2)\n\
    \tend\n\tlocal function is_in_range_odd_even(n)\n\t\treturn is_between(n, x, x\
    \ + 2)\n\tend\n\tlocal function is_in_range_odd_odd(n)\n\t\treturn is_between(n,\
    \ x, x + 3)\n\tend\n\tlocal function is_in_range_even(n) \n\t\treturn is_between(n,\
    \ x, x + 2)\n\tend\n\tlocal function is_in_range_odd_even(n) \n\t\treturn is_between(n,\
    \ x, x + 3)\n\tend\n\tlocal function is_in_range_odd_odd(n) \n\t\treturn is_between(n,\
    \ x, x + 4)\n\tend\n\tlocal function is_in_range_even(n) \n\t\treturn is_between(n,\
    \ x, x + 2)\n\tend\n\tlocal function is_in_range_odd_even(n) \n\t\treturn is_between(n,\
    \ x, x + 4)\n\tend\n\tlocal function is_in_range_odd_odd(n) \n\t\treturn is_between(n,\
    \ x, x + 5)\n\tend\n\tlocal function is_in_range_even(n) \n\t\treturn is_between(n,\
    \ x, x + 2)\n\tend\n\tlocal function is_in_range_odd_even(n) \n\t\treturn is_between(n,\
    \ x, x + 5)\n\tend\n\tlocal function is_in_range_odd_odd(n) \n\t\treturn is_between(n,\
    \ x, x + 6)\n\tend\n\tlocal function is_in_range_even(n) \n\t\treturn is_between(n,\
    \ x, x + 2)\n\tend\n\tlocal function is_in_range_odd_even(n) \n\t\treturn is_between(n,\
    \ x, x + 6)\n\tend\n\tlocal function is_in_range_odd_odd(n) \n\t\treturn is_between(n,\
    \ x, x + 7)\n\tend\n\tlocal function is_in_range_even(n) \n\t\treturn is_between(n,\
    \ x, x + 2)\n\tend\n\tlocal function is_in_range_odd_even(n) \n\t\treturn is_between(n,\
    \ x, x + 7)\n\tend\n\tlocal function is_in_range_odd_odd(n) \n\t\treturn is_between(n,\
    \ x, x + 8)\n\tend\n\tlocal function is_in_range_even(n) \n\t\treturn is_between(n,\
    \ x, x + 2)\n", "    if x < y then\n        x, y = y, x\n    end\n    for i =\
    \ x, y + 1 do\n        if i % 2 == 0 then\n            return i\n        end\n\
    \    end\n    return -1\nend", "   if x < y then\n      x, y = y, x\n   end\n\
    \   local x_even = x % 2 == 0\n   local y_even = y % 2 == 0\n   if x_even and\
    \ y_even then\n      return x + (y / 2)\n   elseif x_even then\n      return x\n\
    \   else\n      return y\n   end\nend", "   if x < y then\n      local z = x\n\
    \      x = y\n      y = z\n   end\n   local max_num = x\n   local max_num2 = y\n\
    \   for i = x, y do\n      if i % 2 == 0 then\n         if max_num > i then\n\
    \            max_num = i\n         end\n      else\n         if max_num2 < i then\n\
    \            max_num2 = i\n         end\n      end\n   end\n   return max_num\n\
    end", "    local function is_even(n)\n        return n % 2 == 0\n    end\n   \
    \ local function is_odd(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between(n, x, y)\n        return x >= n and x <= y\n    end\n    local function\
    \ is_in_range(n)\n        return is_even(n) or is_odd(n)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n    end\n    local function\
    \ is_in_range(n)\n        return is_between(n, x, y)\n", "\tlocal x_even = x %\
    \ 2 == 0\n\tlocal y_even = y % 2 == 0\n\tlocal x_odd = not x_even\n\tlocal y_odd\
    \ = not y_even\n\tlocal x_bigger = math.max(x, y)\n\tlocal y_bigger = math.max(y,\
    \ x)\n\tlocal x_smaller = math.min(x, y)\n\tlocal y_smaller = math.min(y, x)\n\
    \tlocal x_even_smaller = x_even and x_smaller\n\tlocal y_even_smaller = y_even\
    \ and y_smaller\n\tlocal x_odd_smaller = x_odd and x_smaller\n\tlocal y_odd_smaller\
    \ = y_odd and y_smaller\n\tlocal x_bigger_even = x_bigger % 2 == 0\n\tlocal y_bigger_even\
    \ = y_bigger % 2 == 0\n\tlocal x_bigger_odd = x_bigger % 2 == 1\n\tlocal y_bigger_odd\
    \ = y_bigger % 2 == 1\n\tlocal x_smaller_even = x_smaller % 2 == 0\n\tlocal y_smaller_even\
    \ = y_smaller % 2 == 0\n\tlocal x_smaller_odd = x_smaller % 2 == 1\n\tlocal y_smaller_odd\
    \ = y_smaller % 2 == 1\n\tlocal x_even_smaller_bigger = x_even and x_bigger_even\n\
    \tlocal y_even_smaller_bigger = y_even and y_bigger_even\n\tlocal x_odd_smaller_bigger\
    \ = x_odd and x_bigger_odd\n\tlocal y_odd_smaller_bigger = y_odd and y_bigger_odd\n\
    \tlocal x_bigger_even_smaller = x_bigger_even and x_smaller_even\n\tlocal y_bigger_even_smaller\
    \ = y_bigger_even and y_smaller_even\n\tlocal x_bigger_odd_smaller = x_bigger_odd\
    \ and x_smaller_odd\n\tlocal y_bigger_odd_smaller = y_bigger_odd and y_smaller_odd\n\
    \tlocal x_smaller_even_smaller = x_smaller_even and x_bigger_even\n\tlocal y_smaller_even_smaller\
    \ = y_smaller_even and y_bigger_even\n\tlocal x_smaller_odd_smaller = x_smaller_odd\
    \ and x_bigger_odd\n\tlocal y_smaller_odd_smaller = y_smaller_odd and y_bigger_odd\n\
    \tlocal x_even_smaller_smaller = x_even and x_smaller_even\n\tlocal y_even_smaller_smaller\
    \ = ", "\tlocal function is_even(n)\n\t\treturn n % 2 == 0\n\tend", "  if x >\
    \ y then\n    x, y = y, x\n  end\n  local max_num = x\n  local max_num_pos = 1\n\
    \  local max_num_neg = 1\n  local i = y\n  while i <= x do\n    if i ~= x then\n\
    \      if i % 2 == 0 then\n        max_num = i\n        max_num_pos = 1\n    \
    \  else\n        max_num = max_num * 10 + i - 1\n        max_num_neg = max_num_neg\
    \ * 10 + i - 1\n      end\n    end\n    i = i + 1\n  end\n  if max_num_neg > max_num\
    \ then\n    return -1\n  end\n  return max_num\nend", "  if x < y then\n    x,\
    \ y = y, x\n  end\n  local max_num = 0\n  local max_num_index = 1\n  for i = 1,\
    \ y do\n    if max_num < x then\n      max_num = x\n      max_num_index = i\n\
    \    end\n    x = x - (x % 2)\n  end\n  return max_num_index\nend", "  if x >\
    \ y then\n    x, y = y, x\n  end\n  local x_even = x % 2\n  local y_even = y %\
    \ 2\n  if x_even and y_even then\n    return y\n  elseif x_even then\n    return\
    \ y\n  else\n    return x\n  end\nend", "\tlocal function is_even(n)\n\t\treturn\
    \ n % 2 == 0\n\tend", "   if x < y then\n      return -1\n   end\n   if x == y\
    \ then\n      return x\n   end\n   if x % 2 == 0 then\n      return choose_num(x\
    \ / 2, y)\n   end\n   if y % 2 == 0 then\n      return choose_num(x, y / 2)\n\
    \   end\n   if x > y then\n      return choose_num(x / 2, y / 2)\n   end\n   return\
    \ -1\nend", "  if x < y then\n    return choose_num(y, x)\n  end\n  if x == y\
    \ then\n    return x\n  end\n  if x % 2 == 0 then\n    return choose_num(x / 2,\
    \ y)\n  end\n  if y % 2 == 0 then\n    return choose_num(x, y / 2)\n  end\n  if\
    \ x > y then\n    return choose_num(y / 2, x)\n  end\n  return -1\nend", "\tlocal\
    \ function is_even(n)\n\t\treturn n % 2 == 0\n\tend\n\tlocal function is_odd(n)\n\
    \t\treturn n % 2 == 1\n\tend\n\tlocal function is_between(a, b)\n\t\treturn a\
    \ <= b and a >= b\n\tend\n\tlocal function is_in_range(n)\n\t\treturn is_even(n)\
    \ or is_odd(n)\n\tend\n\tlocal function is_in_range_or_none(a, b)\n\t\treturn\
    \ is_in_range(a) or is_in_range(b)\n\tend\n\tlocal function is_in_range_or_none_reversed(a,\
    \ b)\n\t\treturn is_in_range_or_none(b, a)\n\tend\n\tlocal function is_in_range_or_none_odd(a,\
    \ b)\n\t\treturn is_in_range_or_none(a, b) or is_in_range_or_none(b, a)\n\tend\n\
    \tlocal function is_in_range_or_none_even(a, b)\n\t\treturn is_in_range_or_none(a,\
    \ b) or is_in_range_or_none(b, a)\n\tend\n\tlocal function is_in_range_or_none_even_reversed(a,\
    \ b)\n\t\treturn is_in_range_or_none_even(a, b) or is_in_range_or_none_even(b,\
    \ a)\n\tend\n\tlocal function is_in_range_or_none_odd_reversed(a, b)\n\t\treturn\
    \ is_in_range_or_none_odd(a, b) or is_in_range_or_none_odd(b, a)\n\tend\n\tlocal\
    \ function is_in_range_or_none_even_reversed(a, b)\n\t\treturn is_in_range_or_none_even(a,\
    \ b) or is_in_range_or_none_even(b, a)\n\tend\n\tlocal function is_in_range_or_none_odd_reversed(a,\
    \ b)\n\t\treturn is_in_range_or_none_odd(a, b) or is_in_range_or_none_odd(b, a)\n\
    \tend\n\tlocal function is_in_range_or_none_even_reversed(a, b)\n\t\treturn is_in_range_or_none_even(a,\
    \ b) or is_in_range_or_none_even(b, a)\n\tend\n\tlocal function is_in_range_or_none_odd_reversed(a,\
    \ b)\n\t\treturn is_in_range_or_none_odd(a, b) or is_in_range_or_none_odd(b, a)\n\
    \tend\n\tlocal function is_in_range_or_none_even_reversed(a, b)\n\t\treturn is_in_range_or_none_even(a,\
    \ b) or is_in_range_or_none_even(b, a)\n\tend\n\tlocal function is_in_range_or_none_odd_reversed(a,\
    \ b)\n\t\treturn is_in_range_or_none_odd(a, b) or is_in_range_or_none_odd(b, a)\n\
    \tend\n\tlocal function is_in_range_or_none_even_reversed(a, b)\n\t\treturn is_in_range_or_none_even(a,\
    \ b) or is_in_range_or_none_even(b, a)\n", "    local max_num = x\n    local min_num\
    \ = y\n    local max_num2 = max_num\n    local min_num2 = min_num\n    local max_num3\
    \ = max_num\n    local min_num3 = min_num\n    local max_num4 = max_num\n    local\
    \ min_num4 = min_num\n    local max_num5 = max_num\n    local min_num5 = min_num\n\
    \    local max_num6 = max_num\n    local min_num6 = min_num\n    local max_num7\
    \ = max_num\n    local min_num7 = min_num\n    local max_num8 = max_num\n    local\
    \ min_num8 = min_num\n    local max_num9 = max_num\n    local min_num9 = min_num\n\
    \    local max_num10 = max_num\n    local min_num10 = min_num\n    local max_num11\
    \ = max_num\n    local min_num11 = min_num\n    local max_num12 = max_num\n  \
    \  local min_num12 = min_num\n    local max_num13 = max_num\n    local min_num13\
    \ = min_num\n    local max_num14 = max_num\n    local min_num14 = min_num\n  \
    \  local max_num15 = max_num\n    local min_num15 = min_num\n    local max_num16\
    \ = max_num\n    local min_num16 = min_num\n    local max_num17 = max_num\n  \
    \  local min_num17 = min_num\n    local max_num18 = max_num\n    local min_num18\
    \ = min_num\n    local max_num19 = max_num\n    local min_num19 = min_num\n  \
    \  local max_num20 = max_num\n    local min_num20 = min_num\n    local max_num21\
    \ = max_num\n    local min_num21 = min_num\n    local max_num22 = max_num\n  \
    \  local min_num22 = min_num\n    local max_num23 = max_num\n    local min_num23\
    \ = min_num\n    local max_num24 = max_num\n    local min_num24 = min_num\n  \
    \  local max_num25 = max_num\n    local min_num25 = min_num\n    local max_num26\
    \ = max_num\n    local min_num26 = min_num\n    local max_num27 = max_num\n  \
    \  local min_num27 = min_num\n    local max_num28 = max_num\n    local min_num28\
    \ = min_num\n    local max_num29 = max_num\n    local min_num29 = min_num\n  \
    \  local max_num30 = max_num\n    local min_num30 = min_num\n", "  if x < y then\n\
    \    x, y = y, x\n  end\n  local max_num = 0\n  local max_num_pos = nil\n  local\
    \ max_num_neg = nil\n  for i = x, y do\n    if i % 2 == 0 then\n      if max_num\
    \ < i then\n        max_num = i\n        max_num_pos = i\n      else\n       \
    \ max_num_neg = i\n      end\n    end\n  end\n  if max_num == 0 then\n    return\
    \ -1\n  end\n  if max_num_neg > max_num then\n    return max_num_neg\n  end\n\
    \  return max_num_pos\nend", "\tlocal xx = math.floor(x)\n\tlocal yy = math.floor(y)\n\
    \tif xx < yy then\n\t\treturn xx + ((xx - yy) * (math.floor((x - xx) / yy) + 1))\n\
    \telse\n\t\treturn yy + ((yy - xx) * (math.floor((y - yy) / xx) + 1))\n\tend\n\
    end", "  if x < y then\n    x, y = y, x\n  end\n  local x_even = x % 2\n  local\
    \ y_even = y % 2\n  if x_even and y_even then\n    return y\n  elseif x_even then\n\
    \    return y\n  else\n    return x\n  end\nend", "    if x < y then\n       \
    \ x, y = y, x\n    end\n    if x > y then\n        x, y = y, x\n    end\n    if\
    \ x == y then\n        return x\n    end\n    if x % 2 == 0 then\n        return\
    \ choose_num(x / 2, y)\n    end\n    if y % 2 == 0 then\n        return choose_num(x,\
    \ y / 2)\n    end\n    if x > y then\n        return choose_num(x - y, y)\n  \
    \  end\n    return choose_num(x, y - x)\nend", "  if x < y then\n    x, y = y,\
    \ x\n  end\n  local max_num = x\n  local min_num = y\n  while max_num < y do\n\
    \    max_num = max_num * 2 + 1\n  end\n  while min_num > x do\n    min_num = min_num\
    \ / 2\n  end\n  if max_num > min_num then\n    return max_num\n  else\n    return\
    \ -1\n  end\nend", "    local x_even = x % 2 == 0\n    local y_even = y % 2 ==\
    \ 0\n    if x_even and y_even then\n        return x + (y - x)\n    elseif x_even\
    \ then\n        return x - y\n    else\n        return y\n    end\nend", "\tlocal\
    \ function is_even(n)\n\t\treturn n % 2 == 0\n\tend\n\tlocal function is_odd(n)\n\
    \t\treturn n % 2 == 1\n\tend\n\tlocal function is_between(a, b)\n\t\treturn a\
    \ <= b and b >= a\n\tend\n\tlocal function is_in_range(n)\n\t\treturn is_between(x,\
    \ n) and is_between(y, n)\n\tend\n\tlocal function is_in_range_or_even(n)\n\t\t\
    return is_in_range(n) or is_even(n)\n\tend\n\tlocal function is_in_range_or_odd(n)\n\
    \t\treturn is_in_range(n) or is_odd(n)\n\tend\n\tlocal function is_in_range_or_even_in_range(n)\n\
    \t\treturn is_in_range_or_even(n) or is_in_range_or_odd(n)\n\tend\n\tlocal function\
    \ is_in_range_or_odd_in_range(n)\n\t\treturn is_in_range_or_odd(n) or is_in_range_or_even(n)\n\
    \tend\n\tlocal function is_in_range_or_even_in_range_or_odd(n)\n\t\treturn is_in_range_or_even_in_range(n)\
    \ or is_in_range_or_odd_in_range(n)\n\tend\n\tlocal function is_in_range_or_odd_in_range_or_even(n)\n\
    \t\treturn is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_range(n)\n\
    \tend\n\tlocal function is_in_range_or_even_in_range_or_odd_in_range(n)\n\t\t\
    return is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range(n)\n\tend\n\
    \tlocal function is_in_range_or_odd_in_range_or_even_in_range(n)\n\t\treturn is_in_range_or_odd_in_range(n)\
    \ or is_in_range_or_even_in_range(n)\n\tend\n\tlocal function is_in_range_or_even_in_range_or_odd_in_range_or_even(n)\n\
    \t\treturn is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range_or_even(n)\n\
    \tend\n\tlocal function is_in_range_or_odd_in_range_or_even_in_range_or_odd(n)\n\
    \t\treturn is_in_range_or_odd_in_range_or_even(n) or is_in_range_or_even_in_range(n)\n\
    \tend\n\tlocal function is_in_range_or_even_in_range_or_odd_in_range_or_even(n)\n\
    \t\treturn is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range_or_even(n)\n\
    \tend\n\tlocal function is_in_range_or_odd_in_range_or_even_in_range_or_odd(n)\n\
    \t\treturn is_in_range_or_odd_in_range_or_even(n) or is_in_range_or_even_in_range(n)",
  "   if x < y then\n      local t = x\n      x = y\n      y = t\n   end\n   if x\
    \ == y then\n      return x\n   end\n   if x % 2 == 0 and y % 2 == 0 then\n  \
    \    return x\n   end\n   if x % 2 == 0 and y % 2 ~= 0 then\n      return y\n\
    \   end\n   if x % 2 ~= 0 and y % 2 == 0 then\n      return y\n   end\n   if x\
    \ % 2 ~= 0 and y % 2 ~= 0 then\n      return x\n   end\nend", "   if x < y then\n\
    \      local m = x\n      x = y\n      y = m\n   end\n   if x < 1 then\n     \
    \ return -1\n   end\n   if y < 1 then\n      return -1\n   end\n   if x == y then\n\
    \      return x\n   end\n   if x % 2 == 0 then\n      return choose_num(x / 2,\
    \ y)\n   end\n   if y % 2 == 0 then\n      return choose_num(x, y / 2)\n   end\n\
    \   if x > y then\n      return choose_num(x - 1, y)\n   end\n   return choose_num(x,\
    \ y - 1)\nend", "   if x < y then\n      local x_even = x % 2\n      local y_even\
    \ = y % 2\n      local x_odd = x % 2 + 1\n      local y_odd = y % 2 + 1\n    \
    \  if x_even > y_even then\n         return x_even\n      else\n         return\
    \ y_even\n      end\n   else\n      local x_even = x % 2\n      local y_even =\
    \ y % 2\n      local x_odd = x % 2 + 1\n      local y_odd = y % 2 + 1\n      if\
    \ x_odd > y_odd then\n         return x_odd\n      else\n         return y_odd\n\
    \      end\n   end\nend", "\tlocal function is_even(n)\n\t\treturn n % 2 == 0\n\
    \tend", "  if x < y then\n    return choose_num(y, x)\n  elseif x == y then\n\
    \    return x\n  else\n    return -1\n  end\nend", "    if x < y then\n      \
    \  x, y = y, x\n    end\n    local z = math.floor((x + y) / 2)\n    if z * z ==\
    \ x then\n        return z\n    else\n        return -1\n    end\nend", "   if\
    \ x < y then\n      local m = x\n      x = y\n      y = m\n   end\n   local m\
    \ = math.floor(x/y)\n   if m == 0 then\n      return -1\n   end\n   if m == y\
    \ then\n      return x\n   end\n   if m > y then\n      return choose_num(m, y)\n\
    \   end\n   return choose_num(m, y)\nend", "\tlocal function is_even(n)\n\t\t\
    return n % 2 == 0\n\tend\n\tlocal function is_odd(n)\n\t\treturn n % 2 == 1\n\t\
    end\n\tlocal function is_between(x, y)\n\t\treturn x >= y and x <= y\n\tend\n\t\
    local function is_in_range(n)\n\t\treturn is_even(n) and is_between(n - 2, n)\n\
    \tend\n\tlocal function is_in_range_odd(n)\n\t\treturn is_odd(n) and is_between(n\
    \ - 2, n)\n\tend\n\tlocal function is_in_range_even(n)\n\t\treturn is_even(n)\
    \ and is_between(n, n - 2)\n\tend\n\tlocal function is_in_range_odd_even(n)\n\t\
    \treturn is_odd(n) and is_even(n) and is_between(n - 2, n)\n\tend\n\tlocal function\
    \ is_in_range_odd_odd(n)\n\t\treturn is_odd(n) and is_odd(n) and is_between(n\
    \ - 2, n)\n\tend\n\tlocal function is_in_range_odd_even_even(n)\n\t\treturn is_odd(n)\
    \ and is_even(n) and is_between(n, n - 2)\n\tend\n\tlocal function is_in_range_odd_even_odd(n)\n\
    \t\treturn is_odd(n) and is_odd(n) and is_between(n, n - 2)\n\tend\n\tlocal function\
    \ is_in_range_odd_even_even_even(n)\n\t\treturn is_odd(n) and is_even(n) and is_between(n,\
    \ n - 2)\n\tend\n\tlocal function is_in_range_odd_even_even_odd(n)\n\t\treturn\
    \ is_odd(n) and is_odd(n) and is_between(n, n - 2)\n\tend\n\tlocal function is_in_range_odd_even_odd_even(n)\n\
    \t\treturn is_odd(n) and is_odd(n) and is_between(n, n - 2)\n\tend\n\tlocal function\
    \ is_in_range_odd_even_odd_odd(n)\n\t\treturn is_odd(n) and is_odd(n) and is_between(n,\
    \ n - 2)\n\tend\n\tlocal function is_in_range_odd_even_odd_even_even(n)\n\t\t\
    return is_odd(n) and is_odd(n) and is_even(n) and is_between(n - 2, n)\n\tend\n\
    \tlocal function is_in_range_odd_even_odd_even_odd(n)\n\t\treturn is_odd(n) and\
    \ is_odd(n) and is_odd(n) and is_between(n - 2, n)\n\tend\n\tlocal function is_in_range_odd_even_odd_even_even_even(n)\n\
    \t\treturn is_odd(n) and is_odd(n) and is_even(n) and is_between", "    if x <\
    \ y then\n        x, y = y, x\n    end\n    local max_num = x\n    for i = y,\
    \ 1, -1 do\n        if max_num % i == 0 then\n            max_num = max_num /\
    \ i\n        end\n    end\n    return max_num\nend", "\tlocal x_even = x % 2 ==\
    \ 0\n\tlocal y_even = y % 2 == 0\n\tlocal x_odd = not x_even\n\tlocal y_odd =\
    \ not y_even\n\t\n\tif x_even and y_even then\n\t\treturn x\n\telseif x_even and\
    \ y_odd then\n\t\treturn y\n\telseif x_odd and not y_even then\n\t\treturn x\n\
    \telseif x_odd and not y_odd then\n\t\treturn y\n\telse\n\t\treturn -1\n\tend\n\
    end", "    if x < y then\n        x, y = y, x\n    end\n    if x < 2 then\n  \
    \      return -1\n    end\n    if y < 2 then\n        return -1\n    end\n   \
    \ if x == 2 then\n        return y\n    end\n    if y == 2 then\n        return\
    \ x\n    end\n    if x % 2 == 0 then\n        return choose_num(x / 2, y)\n  \
    \  end\n    if y % 2 == 0 then\n        return choose_num(x, y / 2)\n    end\n\
    \    return choose_num(x / 2, y / 2)\nend", "  if x > y then\n    x, y = y, x\n\
    \  end\n  if x < 1 then\n    return -1\n  end\n  local max_num = 1\n  local max_num\
    \ = max_num * 2\n  while x <= y do\n    if x % 2 == 0 then\n      max_num = max_num\
    \ * 2\n    else\n      max_num = max_num + 1\n    end\n    x = x + 1\n  end\n\
    \  return max_num\nend", "    local xx = math.floor(x)\n    local yy = math.floor(y)\n\
    \    local xx_even = math.mod(xx, 2)\n    local yy_even = math.mod(yy, 2)\n  \
    \  local xx_odd = math.mod(xx, 1)\n    local yy_odd = math.mod(yy, 1)\n    if\
    \ xx_even > 0 and yy_even > 0 and xx_odd > 0 and yy_odd > 0 then\n        if xx_even\
    \ > xx_odd then\n            return xx_even * yy_even\n        else\n        \
    \    return yy_even * xx_even\n        end\n    else\n        return -1\n    end\n\
    end", "    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local max_num\n    local min_num\n\
    \    local max_num\n    local min_num\n    local ", "\tlocal function is_even(i)\n\
    \t\treturn i % 2 == 0\n\tend\n\tlocal function is_odd(i)\n\t\treturn i % 2 ==\
    \ 1\n\tend\n\tlocal function is_between(i, min, max)\n\t\treturn min <= i and\
    \ i <= max\n\tend\n\tlocal function is_in_range(i, min, max)\n\t\treturn is_between(i,\
    \ min, max) or is_even(i)\n\tend\n\tlocal function is_in_range_or_even(i, min,\
    \ max)\n\t\treturn is_in_range(i, min, max) or is_even(i)\n\tend\n\tlocal function\
    \ is_in_range_or_odd(i, min, max)\n\t\treturn is_in_range(i, min, max) or is_odd(i)\n\
    \tend\n\tlocal function is_in_range_or_odd_or_even(i, min, max)\n\t\treturn is_in_range(i,\
    \ min, max) or is_odd(i) or is_even(i)\n\tend\n\tlocal function is_in_range_or_odd_or_even_or_even(i,\
    \ min, max)\n\t\treturn is_in_range(i, min, max) or is_odd(i) or is_even(i)\n\t\
    end\n\tlocal function is_in_range_or_odd_or_even_or_odd(i, min, max)\n\t\treturn\
    \ is_in_range(i, min, max) or is_odd(i) or is_even(i)\n\tend\n\tlocal function\
    \ is_in_range_or_odd_or_even_or_odd_or_even(i, min, max)\n\t\treturn is_in_range(i,\
    \ min, max) or is_odd(i) or is_even(i)\n\tend\n\tlocal function is_in_range_or_odd_or_even_or_odd_or_even(i,\
    \ min, max)\n\t\treturn is_in_range(i, min, max) or is_odd(i) or is_even(i)\n\t\
    end\n\tlocal function is_in_range_or_odd_or_even_or_odd_or_even(i, min, max)\n\
    \t\treturn is_in_range(i, min, max) or is_odd(i) or is_even(i)\n\tend\n\tlocal\
    \ function is_in_range_or_odd_or_even_or_odd_or_even(i, min, max)\n\t\treturn\
    \ is_in_range(i, min, max) or is_odd(i) or is_even(i)\n\tend\n\tlocal function\
    \ is_in_range_or_odd_or_even_or_odd_or_even(i, min, max)\n\t\treturn is_in_range(i,\
    \ min, max) or is_odd(i) or is_even(i)\n\tend\n\tlocal function is_in_range_or_odd_or_even_or_odd_or_even(i,\
    \ min, max)\n\t\treturn is_in_range(i, min, max) or is_odd(i) or is_even(i)\n\t\
    end\n\tlocal function is_in_range_or_odd_or_even_or_odd_or_even(i, min, max)\n\
    \t\treturn is_in_", "  if x < y then\n    x, y = y, x\n  end\n  local max_num\
    \ = x\n  local max_num2 = y\n  local max_num3 = x\n  local max_num4 = y\n  local\
    \ max_num5 = x\n  local max_num6 = y\n  local max_num7 = x\n  local max_num8 =\
    \ y\n  local max_num9 = x\n  local max_num10 = y\n  local max_num11 = x\n  local\
    \ max_num12 = y\n  local max_num13 = x\n  local max_num14 = x\n  local max_num15\
    \ = x\n  local max_num16 = x\n  local max_num17 = x\n  local max_num18 = x\n \
    \ local max_num19 = x\n  local max_num20 = x\n  local max_num21 = x\n  local max_num22\
    \ = x\n  local max_num23 = x\n  local max_num24 = x\n  local max_num25 = x\n \
    \ local max_num26 = x\n  local max_num27 = x\n  local max_num28 = x\n  local max_num29\
    \ = x\n  local max_num30 = x\n  local max_num31 = x\n  local max_num32 = x\n \
    \ local max_num33 = x\n  local max_num34 = x\n  local max_num35 = x\n  local max_num36\
    \ = x\n  local max_num37 = x\n  local max_num38 = x\n  local max_num39 = x\n \
    \ local max_num40 = x\n  local max_num41 = x\n  local max_num42 = x\n  local max_num43\
    \ = x\n  local max_num44 = x\n  local max_num45 = x\n  local max_num46 = x\n \
    \ local max_num47 = x\n  local max_num48 = x\n  local max_num49 = x\n  local max_num50\
    \ = x\n  local max_num51 = x\n  local max_num52 = x\n  local max_num53 = x\n \
    \ local max_num54 = x\n  local max_num55 = x\n  local max_num56 = x\n  local max_num57\
    \ = x\n  local max_num58 = x\n  local max_num59 = x\n  local max_num60 = x\n \
    \ local max_num61 = x\n  local max_num62 = x\n  local max_num63 = x\n  local max_num64\
    \ = x\n  local max_num65 = x\n  local max_num66 = x\n  local max_num67 = x\n \
    \ local max_num68 = x\n  local max_num69 = x\n  local max_num70", "   if x < y\
    \ then\n      x, y = y, x\n   end\n   local max_num = x\n   local max_num2 = y\n\
    \   for i = x, y + 1 do\n      if i ~= max_num and i ~= max_num2 then\n      \
    \   max_num = i\n      end\n   end\n   return max_num\nend", "  if x < y then\n\
    \    return choose_num(y, x)\n  end\n  if x == y then\n    return x\n  end\n \
    \ local max_num = x\n  local max_num_pos = 1\n  local max_num_neg = 1\n  for i\
    \ = y, 1, -1 do\n    if i % 2 == 0 then\n      if max_num > i then\n        max_num\
    \ = i\n        max_num_pos = max_num_pos + 1\n      else\n        max_num = i\n\
    \        max_num_neg = max_num_neg + 1\n      end\n    end\n  end\n  if max_num_neg\
    \ > max_num_pos then\n    return -1\n  end\n  return max_num\nend", "   if x <\
    \ y then\n      x, y = y, x\n   end\n   for i = x, y + 1 do\n      if i ~= math.floor(i)\
    \ then\n         return i\n      end\n   end\n   return -1\nend", "  if x > y\
    \ then\n    x, y = y, x\n  end\n  local x_even = x % 2\n  local y_even = y % 2\n\
    \  if x_even and y_even then\n    return x + (y - x)\n  elseif x_even then\n \
    \   return x - y\n  else\n    return y\n  end\nend", "  if x >= y then\n    return\
    \ -1\n  elseif x == y then\n    return x\n  else\n    local m = math.floor((x\
    \ + y) / 2)\n    if m % 2 == 0 then\n      return choose_num(x, y)\n    else\n\
    \      return choose_num(m, y)\n    end\n  end\nend", "  if x < y then\n    x,\
    \ y = y, x\n  end\n  local max_num = x\n  local max_num2 = y\n  local i = 2\n\
    \  while i <= max_num2 do\n    local num = max_num * i\n    if num % 2 == 0 then\n\
    \      max_num = num\n    end\n    i = i + 1\n  end\n  return max_num\nend", " \
    \  if x < y then\n      return choose_num(y, x)\n   end\n   if x == y then\n \
    \     return x\n   end\n   if x % 2 == 0 then\n      return choose_num(x / 2,\
    \ y) + 1\n   else\n      return choose_num(x / 2, y)\n   end\nend", "  if x <\
    \ y then\n    x, y = y, x\n  end\n  local max_num = x\n  local min_num = y\n \
    \ while max_num < min_num do\n    max_num = max_num * 2 + 1\n    min_num = min_num\
    \ * 2 - 1\n  end\n  if max_num > min_num then\n    return max_num\n  else\n  \
    \  return -1\n  end\nend", "  if x < y then\n    x, y = y, x\n  end\n  local z\
    \ = math.floor(x/y)\n  if z * y == x then\n    return z\n  else\n    return -1\n\
    \  end\nend", "    if x < y then\n        local x_even = x % 2\n        local\
    \ y_even = y % 2\n        if x_even and y_even then\n            return x\n  \
    \      else\n            return y\n        end\n    else\n        local x_even\
    \ = x % 2\n        local y_even = y % 2\n        if x_even and y_even then\n \
    \           return y\n        else\n            return x\n        end\n    end\n\
    end", "\tlocal function is_even(n)\n\t\treturn n % 2 == 0\n\tend\n\t\n\tlocal\
    \ function is_odd(n)\n\t\treturn n % 2 == 1\n\tend\n\t\n\tlocal function is_between(x,\
    \ y)\n\t\treturn x >= y and x <= y\n\tend\n\t\n\tlocal function is_in_range(n)\n\
    \t\treturn is_even(n) and is_between(x - 1, n)\n\tend\n\t\n\tlocal function is_in_range_odd(n)\n\
    \t\treturn is_odd(n) and is_between(x - 1, n)\n\tend\n\t\n\tlocal function is_in_range_even(n)\n\
    \t\treturn is_even(n) and is_between(x, n)\n\tend\n\t\n\tlocal function is_in_range_odd_even(n)\n\
    \t\treturn is_odd(n) and is_even(n) and is_between(x - 1, n)\n\tend\n\t\n\tlocal\
    \ function is_in_range_odd_odd(n)\n\t\treturn is_odd(n) and is_odd(n) and is_between(x\
    \ - 1, n)\n\tend\n\t\n\tlocal function is_in_range_even_between(n)\n\t\treturn\
    \ is_even(n) and is_between(x, n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_between(n)\n\
    \t\treturn is_odd(n) and is_even(n) and is_between(x - 1, n)\n\tend\n\t\n\tlocal\
    \ function is_in_range_odd_odd_between(n)\n\t\treturn is_odd(n) and is_odd(n)\
    \ and is_between(x - 1, n)\n\tend\n\t\n\tlocal function is_in_range_even_between(n)\n\
    \t\treturn is_even(n) and is_between(x, n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_between(n)\n\
    \t\treturn is_odd(n) and is_even(n) and is_between(x - 1, n)\n\tend\n\t\n\tlocal\
    \ function is_in_range_odd_odd_between(n)\n\t\treturn is_odd(n) and is_odd(n)\
    \ and is_between(x - 1, n)\n\tend\n\t\n\tlocal function is_in_range_even_between(n)\n\
    \t\treturn is_even(n) and is_between(x, n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_between(n)\n\
    \t\treturn is_odd(n) and is_even(n) and is_between(x - 1, n)\n\tend\n\t\n\tlocal\
    \ function is_in_range_odd_odd_between(n)\n\t\treturn is_odd(n) and is_odd(n)\
    \ and is_between(x - 1, n)\n\tend\n\t\n\tlocal function is_in_range_even_between(n)\n\
    \t\treturn is_even(n) and is_between(x, n)\n\tend\n\t\n\tlocal function is_",
  "\tlocal num = nil\n\tlocal i = 1\n\twhile i <= y do\n\t\tif ((x % i) == 0) then\n\
    \t\t\tnum = i\n\t\t\tbreak\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn num\nend",
  "   if x < y then\n      return -1\n   end\n   if x == y then\n      return x\n\
    \   end\n   if x % 2 == 0 then\n      return choose_num(x / 2, y)\n   end\n  \
    \ if y % 2 == 0 then\n      return choose_num(x, y / 2)\n   end\n   if x > y then\n\
    \      return choose_num(x / 2, y)\n   end\n   return choose_num(x, y / 2)\nend",
  "   if x < y then\n      local m = x\n      x = y\n      y = m\n   end\n   if x\
    \ < 2 then\n      return -1\n   end\n   if y < 2 then\n      return -1\n   end\n\
    \   if x == y then\n      return x\n   end\n   if x % 2 == 0 then\n      return\
    \ choose_num(x / 2, y)\n   end\n   if y % 2 == 0 then\n      return choose_num(x,\
    \ y / 2)\n   end\n   if x > y then\n      return choose_num(x - 2, y)\n   end\n\
    \   if y > x then\n      return choose_num(x, y - 2)\n   end\nend", "  if x <\
    \ y then\n    return -1\n  else\n    local m = math.floor(x / 2)\n    if x % 2\
    \ == 0 then\n      return m\n    else\n      return choose_num(m, y)\n    end\n\
    \  end\nend", "  if x < y then\n    return choose_num(y, x)\n  end\n  if x ==\
    \ y then\n    return x\n  end\n  if x % 2 == 0 and y % 2 == 0 then\n    return\
    \ choose_num(x / 2, y / 2)\n  end\n  if x % 2 == 0 and y % 2 ~= 0 then\n    return\
    \ choose_num(x / 2, y)\n  end\n  if x % 2 ~= 0 and y % 2 == 0 then\n    return\
    \ choose_num(x, y / 2)\n  end\n  if x % 2 ~= 0 and y % 2 ~= 0 then\n    return\
    \ choose_num(x, y)\n  end\n  return -1\nend", "\tlocal function is_even(n)\n\t\
    \treturn n % 2 == 0\n\tend\n\tlocal function is_odd(n)\n\t\treturn n % 2 == 1\n\
    \tend\n\tlocal function is_between(x, a, b)\n\t\treturn x >= a and x <= b\n\t\
    end\n\tlocal function is_in_range(n)\n\t\treturn is_between(n, x, y)\n\tend\n\t\
    local function is_in_range_or_even(n)\n\t\treturn is_in_range(n) or is_even(n)\n\
    \tend\n\tlocal function is_in_range_or_odd(n)\n\t\treturn is_in_range(n) or is_odd(n)\n\
    \tend\n\tlocal function is_in_range_or_even_in_range(n)\n\t\treturn is_in_range_or_even(n)\
    \ or is_in_range_or_odd(n)\n\tend\n\tlocal function is_in_range_or_odd_in_range(n)\n\
    \t\treturn is_in_range_or_odd(n) or is_in_range_or_even(n)\n\tend\n\tlocal function\
    \ is_in_range_or_even_in_range_or_odd(n)\n\t\treturn is_in_range_or_even_in_range(n)\
    \ or is_in_range_or_odd_in_range(n)\n\tend\n\tlocal function is_in_range_or_odd_in_range_or_even(n)\n\
    \t\treturn is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_range(n)\n\
    \tend\n\tlocal function is_in_range_or_even_in_range_or_odd_in_range(n)\n\t\t\
    return is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range(n)\n\tend\n\
    \tlocal function is_in_range_or_odd_in_range_or_even_in_range(n)\n\t\treturn is_in_range_or_odd_in_range(n)\
    \ or is_in_range_or_even_in_range(n)\n\tend\n\tlocal function is_in_range_or_even_in_range_or_odd_in_range_or_even(n)\n\
    \t\treturn is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range_or_even(n)\n\
    \tend\n\tlocal function is_in_range_or_odd_in_range_or_even_in_range_or_odd(n)\n\
    \t\treturn is_in_range_or_odd_in_range_or_even(n) or is_in_range_or_even_in_range(n)\n\
    \tend\n\tlocal function is_in_range_or_even_in_range_or_odd_in_range_or_even(n)\n\
    \t\treturn is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range_or_even(n)\n\
    \tend\n\tlocal function is_in_range_or_odd_in_range_or_even_in_range_or_odd(n)\n\
    \t\treturn is_in_range_or_odd_in_range_or_even(n) or is_in_range_or_even_in_range(n)\n\
    \tend\n\t", "   if x < y then\n      x, y = y, x\n   end\n   local max_num = x\n\
    \   for i = y, 1, -1 do\n      if max_num % i == 0 then\n         max_num = max_num\
    \ / i\n      else\n         return -1\n      end\n   end\n   return max_num\n\
    end", "\tlocal function is_even(n)\n\t\treturn n % 2 == 0\n\tend\n\t\n\tlocal\
    \ function is_odd(n)\n\t\treturn n % 2 == 1\n\tend\n\t\n\tlocal function is_between(lower,\
    \ upper)\n\t\treturn lower <= upper and lower >= 0 and upper >= 0\n\tend\n\t\n\
    \tlocal function is_in_range(lower, upper)\n\t\treturn is_between(lower, upper)\
    \ and is_even(lower) and is_even(upper)\n\tend\n\t\n\tlocal function is_in_range_odd(lower,\
    \ upper)\n\t\treturn is_between(lower, upper) and is_odd(lower) and is_odd(upper)\n\
    \tend\n\t\n\tlocal function is_in_range_even(lower, upper)\n\t\treturn is_between(lower,\
    \ upper) and is_even(lower) and is_even(upper)\n\tend\n\t\n\tlocal function is_in_range_odd_even(lower,\
    \ upper)\n\t\treturn is_between(lower, upper) and is_odd(lower) and is_even(upper)\n\
    \tend\n\t\n\tlocal function is_in_range_odd_odd(lower, upper)\n\t\treturn is_between(lower,\
    \ upper) and is_odd(lower) and is_odd(upper)\n\tend\n\t\n\tlocal function is_in_range_odd_odd_even(lower,\
    \ upper)\n\t\treturn is_between(lower, upper) and is_odd(lower) and is_odd(upper)\
    \ and is_even(upper)\n\tend\n\t\n\tlocal function is_in_range_odd_odd_odd(lower,\
    \ upper)\n\t\treturn is_between(lower, upper) and is_odd(lower) and is_odd(upper)\
    \ and is_odd(upper)\n\tend\n\t\n\tlocal function is_in_range_odd_odd_odd_even(lower,\
    \ upper)\n\t\treturn is_between(lower, upper) and is_odd(lower) and is_odd(upper)\
    \ and is_odd(upper) and is_even(upper)\n\tend\n\t\n\tlocal function is_in_range_odd_odd_odd_odd(lower,\
    \ upper)\n\t\treturn is_between(lower, upper) and is_odd(lower) and is_odd(upper)\
    \ and is_odd(upper) and is_odd(upper)\n\tend\n\t\n\tlocal function is_in_range_odd_odd_odd_odd_even(lower,\
    \ upper)\n\t\treturn is_between(lower, upper) and is_odd(lower) and is_odd(upper)\
    \ and is_odd(upper) and is_odd(upper) and is_even(upper)\n\tend\n\t\n\tlocal function\
    \ is_in_range_odd_odd_odd_odd_odd(low", "    local max_num = -1\n    local max_num2\
    \ = -1\n    for i = x, y do\n        if max_num2 == -1 or max_num2 > i then\n\
    \            max_num = i\n            max_num2 = i\n        elseif max_num2 ==\
    \ i then\n            max_num2 = i\n        end\n    end\n    return max_num\n\
    end", "\tlocal x_even = x % 2 == 0\n\tlocal y_even = y % 2 == 0\n\tlocal x_odd\
    \ = not x_even\n\tlocal y_odd = not y_even\n\t\n\tif x_even and y_even then\n\t\
    \treturn x\n\telseif x_even and y_odd then\n\t\treturn y\n\telseif x_odd then\n\
    \t\treturn x\n\telseif y_even then\n\t\treturn y\n\telse\n\t\treturn -1\n\tend\n\
    end", "  if x < y then\n    x, y = y, x\n  end\n  local x_even = x % 2 == 0\n\
    \  local y_even = y % 2 == 0\n  if x_even and y_even then\n    return y\n  elseif\
    \ x_even then\n    return x + 1\n  elseif y_even then\n    return x - 1\n  else\n\
    \    return -1\n  end\nend", "  local function is_even(n)\n    return n % 2 ==\
    \ 0\n  end", "    if x < y then\n        x, y = y, x\n    end\n    local z = x\n\
    \    while z <= y do\n        if z & 1 ~= 0 then\n            return z\n     \
    \   end\n        z = z >> 1\n    end\n    return -1\nend", "    local function\
    \ is_even(n)\n        return n % 2 == 0\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(n, x, y)\n\
    \        return n >= x and n <= y\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range_or_none(n,\
    \ x, y)\n        if is_in_range(n) then\n            return n\n        else\n\
    \            return nil\n        end\n    end\n    local function is_in_range_or_zero(n,\
    \ x, y)\n        if is_in_range(n) then\n            return n\n        else\n\
    \            return 0\n        end\n    end\n    local function is_in_range_or_one(n,\
    \ x, y)\n        if is_in_range(n) then\n            return n\n        else\n\
    \            return 1\n        end\n    end\n    local function is_in_range_or_zero_to_one(n,\
    \ x, y)\n        if is_in_range(n) then\n            return n\n        else\n\
    \            return x - 1\n        end\n    end\n    local function is_in_range_or_one_to_zero(n,\
    \ x, y)\n        if is_in_range(n) then\n            return n\n        else\n\
    \            return x + 1\n        end\n    end\n    local function is_in_range_or_zero_to_one_to_zero(n,\
    \ x, y)\n        if is_in_range(n) then\n            return n\n        else\n\
    \            return x - 1\n        end\n    end\n    local function is_in_range_or_one_to_zero(n,\
    \ x, y)\n        if is_in_range(n) then\n            return n\n        else\n\
    \            return x + 1\n        end\n    end\n    local function is_in_range_or_zero_to_one_to_one(n,\
    \ x, y)\n        if is_in_range(n) then\n            return n\n        else\n\
    \            return x - 1\n        end\n    end\n    local function is_in_range_or_one_to_one(n,\
    \ x, y)\n        if is_in_range(n) then\n            return n\n        else\n\
    \            return x + 1\n        end\n    end\n    local function is_in_range_or_zero_to_one_to_one(n,\
    \ x, y)\n        if is_in_range(n) then\n            return n\n        else\n\
    \            return x - 1\n        end\n    end\n    local function is_in_range_or_one_to_one(n,\
    \ x, y)\n        if is_in_range(n) then\n            return n\n        else\n\
    \            return x + 1\n        end\n    end\n    local function is_in_range_or_zero_to_one_to_one_to_zero(n,\
    \ x, y)\n        if is_in_range(n) then\n            return n\n        else\n\
    \            return x - 1\n        end\n    end\n    local function is_in_range_or_one_to_one_to_zero(n,\
    \ x, y)\n        if is_in_range(n) then\n            return n\n        else\n\
    \            return x + 1\n        end\n    end\n    local function is_in_range_or_zero_to_one_to_one_to_one",
  "  if x < y then\n    x, y = y, x\n  end\n  local max_num = x\n  local min_num =\
    \ y\n  while max_num < min_num do\n    max_num = max_num * 2 + 1\n    min_num\
    \ = min_num * 2 - 1\n  end\n  return max_num\nend", "    if x > y then\n     \
    \   x, y = y, x\n    end\n    if x < 1 then\n        return -1\n    end\n    if\
    \ x == 1 then\n        return x\n    end\n    if y == 1 then\n        return y\n\
    \    end\n    if x % 2 == 0 then\n        return choose_num(x / 2, y)\n    end\n\
    \    if y % 2 == 0 then\n        return choose_num(x, y / 2)\n    end\n    if\
    \ x % 2 == y % 2 then\n        return choose_num(x / 2, y / 2)\n    end\n    return\
    \ -1\nend", "  if x < y then\n    x, y = y, x\n  end\n  local max_num = x\n  local\
    \ max_num2 = y\n  local i = 2\n  while i <= max_num2 do\n    if max_num % i ==\
    \ 0 then\n      max_num = max_num / i\n      max_num2 = max_num2 - i\n    else\n\
    \      i = i + 1\n    end\n  end\n  return max_num\nend", "   if x < y then\n\
    \      x, y = y, x\n   end\n   if x > y then\n      x, y = y, x\n   end\n   if\
    \ x == y then\n      return x\n   end\n   if x % 2 == 0 and y % 2 == 0 then\n\
    \      return choose_num(x / 2, y) / 2\n   elseif x % 2 == 0 and y % 2 ~= 0 then\n\
    \      return choose_num(x / 2, y)\n   elseif x % 2 ~= 0 and y % 2 == 0 then\n\
    \      return choose_num(x, y / 2)\n   elseif x % 2 ~= 0 and y % 2 ~= 0 then\n\
    \      return choose_num(x, y)\n   end\nend", "  if x < y then\n    x, y = y,\
    \ x\n  end\n  local z = math.floor(x/y)\n  if z * y <= x then\n    return z *\
    \ y\n  else\n    return -1\n  end\nend", "  local function is_even(n)\n    return\
    \ n % 2 == 0\n  end\n  local function is_odd(n)\n    return not is_even(n)\n \
    \ end\n  local function is_between(x, y)\n    return x >= y and x <= y\n  end\n\
    \  local function is_in_range(n)\n    return is_between(n - 1, n + 1)\n  end\n\
    \  local function is_in_range_or_even(n)\n    return is_in_range(n) or is_even(n)\n\
    \  end\n  local function is_in_range_or_odd(n)\n    return is_in_range(n) or is_odd(n)\n\
    \  end\n  local function is_in_range_or_even_in_range(n)\n    return is_in_range_or_even(n)\
    \ or is_in_range_or_odd(n)\n  end\n  local function is_in_range_or_odd_in_range(n)\n\
    \    return is_in_range_or_odd(n) or is_in_range_or_even(n)\n  end\n  local function\
    \ is_in_range_or_even_in_range_or_odd(n)\n    return is_in_range_or_even_in_range(n)\
    \ or is_in_range_or_odd_in_range(n)\n  end\n  local function is_in_range_or_odd_in_range_or_even(n)\n\
    \    return is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_range(n)\n\
    \  end\n  local function is_in_range_or_even_in_range_or_odd_in_range(n)\n   \
    \ return is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range(n)\n \
    \ end\n  local function is_in_range_or_odd_in_range_or_even_in_range(n)\n    return\
    \ is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_range(n)\n  end\n \
    \ local function is_in_range_or_even_in_range_or_odd_in_range_or_even(n)\n   \
    \ return is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range_or_even(n)\n\
    \  end\n  local function is_in_range_or_odd_in_range_or_even_in_range_or_odd(n)\n\
    \    return is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_range_or_odd(n)\n\
    \  end\n  local function is_in_range_or_even_in_range_or_odd_in_range_or_even(n)\n\
    \    return is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range_or_even(n)\n\
    \  end\n  local function is_in_range_or_odd_in_range_or_even_in_range_or_odd(n)\n\
    \    return is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_range_or_odd(n)\n\
    \  end\n  local function is_in_range_or_even_in_range_or_odd_", "    local function\
    \ is_even(n)\n        return n % 2 == 0\n    end", "\tlocal xx = math.floor(x)\n\
    \tlocal yy = math.floor(y)\n\tlocal xx_mod = xx - x\n\tlocal yy_mod = yy - y\n\
    \tlocal xx_mod_2 = xx_mod * xx_mod\n\tlocal yy_mod_2 = yy_mod * yy_mod\n\tlocal\
    \ xx_mod_3 = xx_mod_2 * xx_mod\n\tlocal yy_mod_3 = yy_mod_2 * yy_mod\n\tlocal\
    \ xx_mod_4 = xx_mod_3 * xx_mod\n\tlocal yy_mod_4 = yy_mod_3 * yy_mod\n\tlocal\
    \ xx_mod_5 = xx_mod_4 * xx_mod\n\tlocal yy_mod_5 = yy_mod_4 * yy_mod\n\tlocal\
    \ xx_mod_6 = xx_mod_5 * xx_mod\n\tlocal yy_mod_6 = yy_mod_5 * yy_mod\n\tlocal\
    \ xx_mod_7 = xx_mod_6 * xx_mod\n\tlocal yy_mod_7 = yy_mod_6 * yy_mod\n\tlocal\
    \ xx_mod_8 = xx_mod_7 * xx_mod\n\tlocal yy_mod_8 = yy_mod_7 * yy_mod\n\tlocal\
    \ xx_mod_9 = xx_mod_8 * xx_mod\n\tlocal yy_mod_9 = yy_mod_8 * yy_mod\n\tlocal\
    \ xx_mod_10 = xx_mod_9 * xx_mod\n\tlocal yy_mod_10 = yy_mod_9 * yy_mod\n\tlocal\
    \ xx_mod_11 = xx_mod_10 * xx_mod\n\tlocal yy_mod_11 = yy_mod_10 * yy_mod\n\tlocal\
    \ xx_mod_12 = xx_mod_11 * xx_mod\n\tlocal yy_mod_12 = yy_mod_11 * yy_mod\n\tlocal\
    \ xx_mod_13 = xx_mod_12 * xx_mod\n\tlocal yy_mod_13 = yy_mod_12 * yy_mod\n\tlocal\
    \ xx_mod_14 = xx_mod_13 * xx_mod\n\tlocal yy_mod_14 = yy_mod_13 * yy_mod\n\tlocal\
    \ xx_mod_15 = xx_mod_14 * xx_mod\n\tlocal yy_mod_15 = yy_mod_14 * yy_mod\n\tlocal\
    \ xx_mod_16 = xx_mod_15 * xx_mod\n\tlocal yy_mod_16 = yy_mod_15 * yy_mod\n\tlocal\
    \ xx_mod_17 = xx_mod_16 * xx_mod\n\tlocal yy_mod_17 = yy_mod_16 * yy_mod\n\tlocal\
    \ xx_mod_18 = xx_mod_17 * xx_mod\n\tlocal yy_mod_18 = yy_mod_17 * yy_mod\n\tlocal\
    \ xx_mod_19 = xx_mod_18 * xx_mod\n\tlocal yy_mod_19 = yy_mod_18 * yy_mod\n", " \
    \   if x < y then\n        x, y = y, x\n    end\n    local max_num = x\n    for\
    \ i = y, 1, -1 do\n        if max_num % i == 0 then\n            max_num = max_num\
    \ / i\n        end\n    end\n    return max_num\nend", "  if x < y then\n    x,\
    \ y = y, x\n  end\n  local max_num = x\n  local min_num = y\n  while max_num <\
    \ y do\n    max_num = max_num * 2 + 1\n  end\n  while min_num > x do\n    min_num\
    \ = min_num / 2\n  end\n  return max_num\nend", "    local function is_even(n)\n\
    \        return n % 2 == 0\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(x, min, max)\n        return\
    \ min <= x and x <= max\n    end\n    local function is_in_range(n)\n        return\
    \ is_between(n, x, y)\n    end\n    local function is_in_range_or_even(n)\n  \
    \      return is_in_range(n) or is_even(n)\n    end\n    local function is_in_range_or_odd(n)\n\
    \        return is_in_range(n) or is_odd(n)\n    end\n    local function is_in_range_or_even_in_range(n)\n\
    \        return is_in_range_or_even(n) or is_in_range_or_odd(n)\n    end\n   \
    \ local function is_in_range_or_odd_in_range(n)\n        return is_in_range_or_odd(n)\
    \ or is_in_range_or_even(n)\n    end\n    local function is_in_range_or_even_in_range_or_odd(n)\n\
    \        return is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range(n)\n\
    \    end\n    local function is_in_range_or_odd_in_range_or_even(n)\n        return\
    \ is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_range(n)\n    end\n\
    \    local function is_in_range_or_even_in_range_or_odd_in_range(n)\n        return\
    \ is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range(n)\n    end\n\
    \    local function is_in_range_or_odd_in_range_or_even_in_range(n)\n        return\
    \ is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_range(n)\n    end\n\
    \    local function is_in_range_or_even_in_range_or_odd_in_range_or_even(n)\n\
    \        return is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range_or_even(n)\n\
    \    end\n    local function is_in_range_or_odd_in_range_or_even_in_range_or_odd(n)\n\
    \        return is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_range_or_odd(n)\n\
    \    end\n    local function is_in_range_or_even_in_range_or_odd_in_range_or_even(n)\n\
    \        return is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range_or_even(n)\n\
    \    end\n    local function is_in_range_or_odd_in_range_or_even_in_range_or_odd(n)\n\
    \        return is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_range_or_odd(n)\n\
    \    end\n    local function is_in_range_or_even_in_range_or_odd_in_", "  if x\
    \ > y then\n    x, y = y, x\n  end\n  local result = x\n  while result < y do\n\
    \    if result % 2 == 0 then\n      result = result + 1\n    else\n      result\
    \ = result - 1\n    end\n  end\n  return result\nend", "  local function is_even(n)\n\
    \    return n % 2 == 0\n  end\n  local function is_odd(n)\n    return n % 2 ==\
    \ 1\n  end\n  local function is_between(x, y)\n    return x >= y and x <= y\n\
    \  end\n  local function is_in_range(n)\n    return is_even(n) and is_between(n\
    \ - 2, n)\n  end\n  local function is_in_range_or_not(n)\n    return is_even(n)\
    \ or is_odd(n)\n  end\n  local function is_in_range_or_not_or_not(n)\n    return\
    \ is_even(n) or is_odd(n) or is_in_range_or_not(n)\n  end\n  local function is_in_range_or_not_or_not_or_not(n)\n\
    \    return is_even(n) or is_odd(n) or is_in_range_or_not(n) or is_in_range_or_not_or_not(n)\n\
    \  end\n  local function is_in_range_or_not_or_not_or_not_or_not(n)\n    return\
    \ is_even(n) or is_odd(n) or is_in_range_or_not(n) or is_in_range_or_not_or_not(n)\
    \ or is_in_range_or_not_or_not_or_not(n)\n  end\n  local function is_in_range_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_even(n) or is_odd(n) or is_in_range_or_not(n) or is_in_range_or_not_or_not(n)\
    \ or is_in_range_or_not_or_not_or_not(n) or is_in_range_or_not_or_not_or_not_or_not(n)\n\
    \  end\n  local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_even(n) or is_odd(n) or is_in_range_or_not(n) or is_in_range_or_not_or_not(n)\
    \ or is_in_range_or_not_or_not_or_not(n) or is_in_range_or_not_or_not_or_not_or_not(n)\
    \ or is_in_range_or_not_or_not_or_not_or_not_or_not(n)\n  end\n  local function\
    \ is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n    return\
    \ is_even(n) or is_odd(n) or is_in_range_or_not(n) or is_in_range_or_not_or_not(n)\
    \ or is_in_range_or_not_or_not_or_not(n) or is_in_range_or_not_or_not_or_not_or_not(n)\
    \ or is_in_range_or_not_or_not_or_not_or_not(n) or is_in_range_or_not_or_not_or_not_or_not_or_not(n)\n\
    \  end\n  local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_even(n) or is_odd(n) or is_in_range_", "  local function is_even(n)\n\
    \    return n % 2 == 0\n  end\n  \n  local function is_odd(n)\n    return n %\
    \ 2 == 1\n  end\n  \n  local function is_between(a, b)\n    return a <= b and\
    \ b >= a\n  end\n  \n  local function is_in_range(n)\n    return is_even(n) and\
    \ is_between(x - 1, n) or is_odd(n) and is_between(n + 1, x)\n  end\n  \n  local\
    \ function is_in_range_or_none(n)\n    return is_in_range(n) or n\n  end\n  \n\
    \  local function is_in_range_or_none2(n)\n    return is_in_range_or_none(n) or\
    \ n\n  end\n  \n  local function is_in_range_or_none3(n)\n    return is_in_range_or_none(n)\
    \ or n\n  end\n  \n  local function is_in_range_or_none4(n)\n    return is_in_range_or_none(n)\
    \ or n\n  end\n  \n  local function is_in_range_or_none5(n)\n    return is_in_range_or_none(n)\
    \ or n\n  end\n  \n  local function is_in_range_or_none6(n)\n    return is_in_range_or_none(n)\
    \ or n\n  end\n  \n  local function is_in_range_or_none7(n)\n    return is_in_range_or_none(n)\
    \ or n\n  end\n  \n  local function is_in_range_or_none8(n)\n    return is_in_range_or_none(n)\
    \ or n\n  end\n  \n  local function is_in_range_or_none9(n)\n    return is_in_range_or_none(n)\
    \ or n\n  end\n  \n  local function is_in_range_or_none10(n)\n    return is_in_range_or_none(n)\
    \ or n\n  end\n  \n  local function is_in_range_or_none11(n)\n    return is_in_range_or_none(n)\
    \ or n\n  end\n  \n  local function is_in_range_or_none12(n)\n    return is_in_range_or_none(n)\
    \ or n\n  end\n  \n  local function is_in_range_or_none13(n)\n    return is_in_range_or_none(n)\
    \ or n\n  end\n  \n  local function is_in_range_or_none14(n)\n    return is_in_range_or_none(n)\
    \ or n\n  end\n  \n  local function is_in_range_or_none15(n)\n    return is_in_range_or_none(n)\
    \ or n\n  end\n  \n  local function is_in_range_or_none16(n)\n    return is_in_range_or_none(n)\
    \ or n\n  end\n  \n  local function is_in_range_or_none17(n)\n    return is_in_range_or_none(n)\
    \ or n\n  end\n  \n  local function ", "    local x_even = x % 2\n    local y_even\
    \ = y % 2\n    if x_even and y_even then\n        return x + (y - x)\n    elseif\
    \ x_even then\n        return -1\n    else\n        return y\n    end\nend", " \
    \  if x < y then\n      x, y = y, x\n   end\n   if x > y then\n      x, y = y,\
    \ x\n   end\n   if x == y then\n      return x\n   end\n   if x % 2 == 0 then\n\
    \      return choose_num(x / 2, y)\n   end\n   if y % 2 == 0 then\n      return\
    \ choose_num(x, y / 2)\n   end\n   if x % 2 == 0 and y % 2 == 0 then\n      return\
    \ x\n   end\n   if x % 2 == 0 and y % 2 ~= 0 then\n      return choose_num(x /\
    \ 2, y / 2)\n   end\n   if x % 2 ~= 0 and y % 2 == 0 then\n      return choose_num(x,\
    \ y / 2)\n   end\n   if x % 2 ~= 0 and y % 2 ~= 0 then\n      return choose_num(x\
    \ / 2, y)\n   end\n   return -1\nend", "   if x < y then\n      return choose_num(y,\
    \ x)\n   end\n   if x == y then\n      return x\n   end\n   if x % 2 == 0 then\n\
    \      return choose_num(x / 2, y)\n   else\n      return choose_num(3 * x + 1,\
    \ y)\n   end\nend", "    local x_even = x % 2\n    local y_even = y % 2\n    if\
    \ x_even and y_even then\n        return x + (y - x)\n    elseif x_even then\n\
    \        return x - y\n    else\n        return y\n    end\nend", "\tlocal num\
    \ = nil\n\tlocal i = 1\n\twhile i <= y do\n\t\tif ((x % 2) == 0) then\n\t\t\t\
    num = x\n\t\t\tbreak\n\t\tend\n\t\tx = x + 1\n\tend\n\tif num == nil then\n\t\t\
    num = -1\n\tend\n\treturn num\nend", "   if x < y then\n      x, y = y, x\n  \
    \ end\n   local z = 1\n   while x < y do\n      z = z * 2\n      x = x + 1\n \
    \  end\n   return z\nend", "  local function is_even(n)\n    return n % 2 == 0\n\
    \  end\n  \n  local function is_odd(n)\n    return n % 2 == 1\n  end\n  \n  local\
    \ function is_between(n, x, y)\n    return n >= x and n <= y\n  end\n  \n  local\
    \ function is_in_range(n)\n    return is_even(n) or is_odd(n)\n  end\n  \n  local\
    \ function is_in_range_or_not(n)\n    return is_in_range(n) or is_between(n, x,\
    \ y)\n  end\n  \n  local function is_in_range_or_not_or_not(n)\n    return is_in_range_or_not(n)\
    \ or is_between(n, x, y)\n  end\n  \n  local function is_in_range_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not(n) or is_between(n, x, y)\n  end\n  \n \
    \ local function is_in_range_or_not_or_not_or_not_or_not(n)\n    return is_in_range_or_not_or_not_or_not(n)\
    \ or is_between(n, x, y)\n  end\n  \n  local function is_in_range_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not_or_not_or_not(n) or is_between(n, x, y)\n\
    \  end\n  \n  local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not_or_not_or_not_or_not(n) or is_between(n,\
    \ x, y)\n  end\n  \n  local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n) or is_between(n,\
    \ x, y)\n  end\n  \n  local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n) or is_between(n,\
    \ x, y)\n  end\n  \n  local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n) or is_between(n,\
    \ x, y)\n  end\n  \n  local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n) or is_between(n,\
    \ x, y)\n  end\n  \n  local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_",
  "  if x < y then\n    return choose_num(y, x)\n  else\n    if x == y then\n    \
    \  return x\n    else\n      local m = math.floor((x + y) / 2)\n      if m % 2\
    \ == 0 then\n        return choose_num(m, y)\n      else\n        return choose_num(x,\
    \ m)\n      end\n    end\n  end\nend", "  if x < y then\n    x, y = y, x\n  end\n\
    \  local max_num = x\n  local max_num_id = x\n  local i = 1\n  while i <= y do\n\
    \    if max_num + i > y then\n      max_num = y\n      max_num_id = y\n    elseif\
    \ max_num + i == y then\n      max_num = max_num + i\n      max_num_id = i\n \
    \   end\n    i = i + 1\n  end\n  return max_num_id\nend", "  local function is_even(n)\n\
    \    return n % 2 == 0\n  end\n  \n  local function is_odd(n)\n    return n %\
    \ 2 == 1\n  end\n  \n  local function is_between(n, x, y)\n    return n >= x and\
    \ n <= y\n  end\n  \n  local function is_in_range(n, x, y)\n    return is_between(n,\
    \ x, y) or is_even(n)\n  end\n  \n  local function is_in_range_or_even(n, x, y)\n\
    \    return is_in_range(n, x, y) or is_even(n)\n  end\n  \n  local function is_in_range_or_odd(n,\
    \ x, y)\n    return is_in_range(n, x, y) or is_odd(n)\n  end\n  \n  local function\
    \ is_in_range_or_even_in_range(n, x, y)\n    return is_in_range_or_even(n, x,\
    \ y) or is_in_range_or_odd(n, x, y)\n  end\n  \n  local function is_in_range_or_odd_in_range(n,\
    \ x, y)\n    return is_in_range_or_odd(n, x, y) or is_in_range_or_even(n, x, y)\n\
    \  end\n  \n  local function is_in_range_or_even_in_range_or_odd(n, x, y)\n  \
    \  return is_in_range_or_even_in_range(n, x, y) or is_in_range_or_odd_in_range(n,\
    \ x, y)\n  end\n  \n  local function is_in_range_or_odd_in_range_or_even(n, x,\
    \ y)\n    return is_in_range_or_odd_in_range(n, x, y) or is_in_range_or_even_in_range(n,\
    \ x, y)\n  end\n  \n  local function is_in_range_or_even_in_range_or_odd_in_range(n,\
    \ x, y)\n    return is_in_range_or_even_in_range(n, x, y) or is_in_range_or_odd_in_range(n,\
    \ x, y)\n  end\n  \n  local function is_in_range_or_odd_in_range_or_even_in_range(n,\
    \ x, y)\n    return is_in_range_or_odd_in_range(n, x, y) or is_in_range_or_even_in_range(n,\
    \ x, y)\n  end\n  \n  local function is_in_range_or_even_in_range_or_odd_in_range_or_even(n,\
    \ x, y)\n    return is_in_range_or_even_in_range(n, x, y) or is_in_range_or_odd_in_range(n,\
    \ x, y)\n  end\n  \n  local function is_in_range_or_odd_in_range_or_even_in_range_or_odd(n,\
    \ x, y)\n    return is_in_range_or_odd_in_range(n, x, y) or is_in_range_or_even_in_range(n,\
    \ x, y)\n  end\n  \n  local function is_in_range_or_even_in_range_or_odd_in_range_or_even(n,\
    \ x, y)\n    return is_in_range_or_even_in_range(n, x, y) or is_in_range_or_odd_in_range(n,\
    \ x, y)\n  end\n  \n", "\tlocal function is_even(n)\n\t\treturn n % 2 == 0\n\t\
    end\n\t\n\tlocal function is_odd(n)\n\t\treturn n % 2 == 1\n\tend\n\t\n\tlocal\
    \ function is_between(a, b)\n\t\treturn a <= b and b >= a\n\tend\n\t\n\tlocal\
    \ function is_in_range(n)\n\t\treturn is_between(x, n) and is_between(y, n)\n\t\
    end\n\t\n\tlocal function is_in_range_or_even(n)\n\t\treturn is_in_range(n) or\
    \ is_even(n)\n\tend\n\t\n\tlocal function is_in_range_or_odd(n)\n\t\treturn is_in_range(n)\
    \ or is_odd(n)\n\tend\n\t\n\tlocal function is_in_range_or_even_in_range(n)\n\t\
    \treturn is_in_range_or_even(n) and is_in_range_or_even(n)\n\tend\n\t\n\tlocal\
    \ function is_in_range_or_odd_in_range(n)\n\t\treturn is_in_range_or_odd(n) and\
    \ is_in_range_or_odd(n)\n\tend\n\t\n\tlocal function is_in_range_or_even_in_range_or_odd(n)\n\
    \t\treturn is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range(n)\n\
    \tend\n\t\n\tlocal function is_in_range_or_odd_in_range_or_even(n)\n\t\treturn\
    \ is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_range(n)\n\tend\n\t\
    \n\tlocal function is_in_range_or_even_in_range_or_odd_in_range(n)\n\t\treturn\
    \ is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_range(n)\n\
    \tend\n\t\n\tlocal function is_in_range_or_odd_in_range_or_even_in_range(n)\n\t\
    \treturn is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_range(n) or\
    \ is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_range(n)\n\tend\n\t\
    \n\tlocal function is_in_range_or_even_in_range_or_odd_in_range_or_even_in_range(n)\n\
    \t\treturn is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range(n) or\
    \ is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_range(n)\n\
    \tend\n\t\n\tlocal function is_in_range_or_odd_in_range_or_even_in_range_or_odd_in_range(n)\n\
    \t\treturn is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_range(n) or\
    \ is_in_range_or_od", "\tlocal function is_even(n)\n\t\treturn n % 2 == 0\n\t\
    end\n\tlocal function is_odd(n)\n\t\treturn n % 2 == 1\n\tend\n\tlocal function\
    \ is_between(x, y)\n\t\treturn x >= y and x <= y\n\tend\n\tlocal function is_in_range(n)\n\
    \t\treturn is_between(x - 1, n) and is_between(n + 1, y)\n\tend\n\tlocal function\
    \ is_in_range_even(n)\n\t\treturn is_between(x - 1, n) and is_even(n + 1)\n\t\
    end\n\tlocal function is_in_range_odd(n)\n\t\treturn is_between(x - 1, n) and\
    \ is_odd(n + 1)\n\tend\n\tlocal function is_in_range_odd_even(n)\n\t\treturn is_between(x\
    \ - 1, n) and is_odd(n) and is_even(n + 1)\n\tend\n\tlocal function is_in_range_odd_odd(n)\n\
    \t\treturn is_between(x - 1, n) and is_odd(n) and is_odd(n + 1)\n\tend\n\tlocal\
    \ function is_in_range_odd_even_even(n)\n\t\treturn is_between(x - 1, n) and is_odd(n)\
    \ and is_even(n + 1) and\n\t\t\tis_even(n + 2)\n\tend\n\tlocal function is_in_range_odd_even_odd(n)\n\
    \t\treturn is_between(x - 1, n) and is_odd(n) and is_odd(n + 1) and\n\t\t\tis_odd(n\
    \ + 2)\n\tend\n\tlocal function is_in_range_odd_even_even_even(n)\n\t\treturn\
    \ is_between(x - 1, n) and is_odd(n) and is_even(n + 1) and\n\t\t\tis_even(n +\
    \ 2) and is_even(n + 3)\n\tend\n\tlocal function is_in_range_odd_even_even_odd(n)\n\
    \t\treturn is_between(x - 1, n) and is_odd(n) and is_odd(n + 1) and\n\t\t\tis_odd(n\
    \ + 2) and is_even(n + 3)\n\tend\n\tlocal function is_in_range_odd_even_odd_even(n)\n\
    \t\treturn is_between(x - 1, n) and is_odd(n) and is_odd(n + 1) and\n\t\t\tis_odd(n\
    \ + 2) and is_even(n + 3) and is_even(n + 4)\n\tend\n\tlocal function is_in_range_odd_even_odd_odd(n)\n\
    \t\treturn is_between(x - 1, n) and is_odd(n) and is_odd(n + 1) and\n\t\t\tis_odd(n\
    \ + 2) and is_even(n + 3) and is_even(n + 4) and is_even(n + 5)\n\tend\n\tlocal\
    \ function ", "  if x < y then\n    x, y = y, x\n  end\n  local m = math.floor((x\
    \ + y) / 2)\n  if m % 2 == 0 then\n    return m\n  else\n    return choose_num(x,\
    \ y)\n  end\nend", "    local max_num = x\n    for i = y, 1, -1 do\n        if\
    \ max_num % i == 0 then\n            max_num = i\n        end\n    end\n    return\
    \ max_num\nend", "    if x < y then\n        x, y = y, x\n    end\n    local max_num\
    \ = x\n    for i = y, 1, -1 do\n        if max_num % i == 0 then\n           \
    \ max_num = max_num / i\n        else\n            return -1\n        end\n  \
    \  end\n    return max_num\nend", "   if x < y then\n      return choose_num(y,\
    \ x)\n   end\n   if x == y then\n      return x\n   end\n   if x % 2 == 0 then\n\
    \      return choose_num(x / 2, y)\n   else\n      return choose_num(3 * x + 1,\
    \ y)\n   end\nend", "  if x < y then\n    x, y = y, x\n  end\n  local max_num\
    \ = x\n  local max_num2 = y\n  while max_num2 > max_num do\n    max_num2 = max_num2\
    \ * 2\n  end\n  while max_num2 > max_num do\n    if max_num2 % 2 == 0 then\n \
    \     max_num = max_num / 2\n    else\n      max_num2 = max_num2 / 2\n    end\n\
    \  end\n  return max_num\nend", "  local max_num = x\n  local min_num = y\n  local\
    \ max_even = 1\n  local max_odd = 0\n  local max_even_in_range = false\n  local\
    \ max_odd_in_range = false\n  local i = x\n  while i <= y do\n    if i % 2 ==\
    \ 0 then\n      max_even = i\n      if max_even > max_even then\n        max_even_in_range\
    \ = true\n      end\n    else\n      max_odd = i\n      if max_odd > max_odd then\n\
    \        max_odd_in_range = true\n      end\n    end\n    i = i + 1\n  end\n \
    \ if max_even_in_range then\n    return max_even\n  elseif max_odd_in_range then\n\
    \    return max_odd\n  else\n    return -1\n  end\nend", "    if x < y then\n\
    \        x, y = y, x\n    end\n    local max_num = x\n    local max_num_pos =\
    \ 1\n    for i = y, 1, -1 do\n        if max_num % i == 0 then\n            max_num\
    \ = max_num / i\n            max_num_pos = i\n        end\n    end\n    return\
    \ max_num\nend", "    local function is_even(n)\n        return n % 2 == 0\n \
    \   end\n    local function is_odd(n)\n        return n % 2 == 1\n    end\n  \
    \  local function is_between(lower, upper)\n        return lower <= upper and\
    \ lower >= 0 and upper >= 0\n    end\n    local function is_in_range(lower, upper)\n\
    \        return lower <= x and x <= upper\n    end\n    local function is_in_range_odd(lower,\
    \ upper)\n        return lower <= x and x <= upper\n    end\n    local function\
    \ is_in_range_even(lower, upper)\n        return lower <= x and x <= upper\n \
    \   end\n    if is_between(x, y) and is_odd(y) and is_even(y) then\n        return\
    \ y\n    elseif is_between(x, y) and is_even(y) then\n        return y\n    elseif\
    \ is_between(x, y) and is_odd(y) then\n        return y\n    elseif is_in_range_odd(x,\
    \ y) then\n        return y\n    elseif is_in_range_even(x, y) then\n        return\
    \ y\n    elseif is_in_range(x, y) then\n        return x\n    else\n        return\
    \ -1\n    end\nend", "    if x < y then\n        x, y = y, x\n    end\n    for\
    \ i = x, y + 1 do\n        if i ~= math.floor(i) then\n            return i\n\
    \        end\n    end\n    return -1\nend", "  local function is_even(n)\n   \
    \ return n % 2 == 0\n  end\n  \n  local function is_odd(n)\n    return n % 2 ==\
    \ 1\n  end\n  \n  local function is_between(x, y)\n    return x >= y and x <=\
    \ y\n  end\n  \n  local function is_in_range(n)\n    return is_even(n) and is_between(n\
    \ - 2, n)\n  end\n  \n  local function is_in_range_or_negative(n)\n    return\
    \ is_even(n) and is_in_range(n) or is_in_range(n-1)\n  end\n  \n  local function\
    \ is_in_range_or_negative_2(n)\n    return is_even(n) and is_in_range_or_negative(n)\
    \ or is_in_range_or_negative(n-1)\n  end\n  \n  local function is_in_range_or_negative_3(n)\n\
    \    return is_even(n) and is_in_range_or_negative_2(n) or is_in_range_or_negative_2(n-1)\n\
    \  end\n  \n  local function is_in_range_or_negative_4(n)\n    return is_even(n)\
    \ and is_in_range_or_negative_3(n) or is_in_range_or_negative_3(n-1)\n  end\n\
    \  \n  local function is_in_range_or_negative_5(n)\n    return is_even(n) and\
    \ is_in_range_or_negative_4(n) or is_in_range_or_negative_4(n-1)\n  end\n  \n\
    \  local function is_in_range_or_negative_6(n)\n    return is_even(n) and is_in_range_or_negative_5(n)\
    \ or is_in_range_or_negative_5(n-1)\n  end\n  \n  local function is_in_range_or_negative_7(n)\n\
    \    return is_even(n) and is_in_range_or_negative_6(n) or is_in_range_or_negative_6(n-1)\n\
    \  end\n  \n  local function is_in_range_or_negative_8(n)\n    return is_even(n)\
    \ and is_in_range_or_negative_7(n) or is_in_range_or_negative_7(n-1)\n  end\n\
    \  \n  local function is_in_range_or_negative_9(n)\n    return is_even(n) and\
    \ is_in_range_or_negative_8(n) or is_in_range_or_negative_8(n-1)\n  end\n  \n\
    \  local function is_in_range_or_negative_10(n)\n    return is_even(n) and is_in_range_or_negative_9(n)\
    \ or is_in_range_or_negative_9(n-1)\n  end\n  \n  local function is_in_range_or_negative_11(n)\n\
    \    return is_even(n) and is_in_range_or_negative_10(n) or is_in_range_or_negative_10(n-1)\n\
    \  end\n  \n  local function is_in_range_or_negative_12(n)\n    return is_even(n)\
    \ and is_in_range_or_negative_11(n) or is_in_range_or_negative_11(n-1)\n  end\n\
    \  \n  local function ", "    local max_num = -1\n    local max_num_index\n  \
    \  for i = 1, y do\n        if x % i == 0 then\n            max_num = i\n    \
    \        max_num_index = i\n        end\n    end\n    return max_num_index\nend",
  "  if x > y then\n    x, y = y, x\n  end\n  local max_num = x\n  local min_num =\
    \ y\n  while max_num < min_num do\n    max_num = max_num * 2 + 1\n    min_num\
    \ = min_num * 2 - 1\n  end\n  return max_num\nend", "\tlocal function is_even(n)\n\
    \t\treturn n % 2 == 0\n\tend", "  local function is_even(n)\n    return n % 2\
    \ == 0\n  end\n  local function is_odd(n)\n    return n % 2 == 1\n  end\n  local\
    \ function is_between(a, b)\n    return a <= b and a >= b\n  end\n  local function\
    \ is_in_range(n)\n    return is_even(n) or is_odd(n)\n  end\n  local function\
    \ is_in_range_or_not(n)\n    return is_in_range(n) or is_between(n, n + 2)\n \
    \ end\n  local function is_in_range_or_not_or_not(n)\n    return is_in_range_or_not(n)\
    \ or is_between(n, n + 3)\n  end\n  local function is_in_range_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not(n) or is_between(n, n + 4)\n  end\n  local\
    \ function is_in_range_or_not_or_not_or_not_or_not(n)\n    return is_in_range_or_not_or_not_or_not(n)\
    \ or is_between(n, n + 5)\n  end\n  local function is_in_range_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not_or_not_or_not(n) or is_between(n, n + 6)\n\
    \  end\n  local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not_or_not_or_not_or_not(n) or is_between(n,\
    \ n + 7)\n  end\n  local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n) or is_between(n,\
    \ n + 8)\n  end\n  local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n) or is_between(n,\
    \ n + 9)\n  end\n  local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n) or is_between(n,\
    \ n + 10)\n  end\n  local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n) or is_between(n,\
    \ n + 11)\n  end\n  local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_", "  if x < y then\n    return choose_num(y, x)\n\
    \  end\n  if x == y then\n    return x\n  end\n  if x % 2 == 0 and y % 2 == 0\
    \ then\n    return x + (y - x)\n  end\n  if x % 2 == 0 and y % 2 ~= 0 then\n \
    \   return choose_num(x / 2, y)\n  end\n  if x % 2 ~= 0 and y % 2 == 0 then\n\
    \    return choose_num(x, y / 2)\n  end\n  if x % 2 ~= 0 and y % 2 ~= 0 then\n\
    \    return choose_num(x / 2, y / 2)\n  end\n  return -1\nend", "  if x < y then\n\
    \    x, y = y, x\n  end\n  local max_num = x\n  local max_num2 = y\n  local i\
    \ = 1\n  while i <= max_num2 do\n    local num = max_num + i\n    if num % 2 ==\
    \ 0 then\n      max_num = num\n    end\n    i = i + 1\n  end\n  return max_num\n\
    end", "\tlocal function is_even(n)\n\t\treturn n % 2 == 0\n\tend\n\tlocal function\
    \ is_odd(n)\n\t\treturn n % 2 == 1\n\tend\n\tlocal function is_between(a, b)\n\
    \t\treturn a <= b and b >= a\n\tend\n\tlocal function is_in_range(n)\n\t\treturn\
    \ is_even(n) or is_odd(n)\n\tend\n\tlocal function is_in_range_or_not(n)\n\t\t\
    return is_in_range(n) or is_between(n, n + 1)\n\tend\n\tlocal function is_in_range_or_not_or_not(n)\n\
    \t\treturn is_in_range_or_not(n) or is_between(n, n + 1)\n\tend\n\tlocal function\
    \ is_in_range_or_not_or_not_or_not(n)\n\t\treturn is_in_range_or_not_or_not(n)\
    \ or is_between(n, n + 1)\n\tend\n\tlocal function is_in_range_or_not_or_not_or_not_or_not(n)\n\
    \t\treturn is_in_range_or_not_or_not_or_not(n) or is_between(n, n + 1)\n\tend\n\
    \tlocal function is_in_range_or_not_or_not_or_not_or_not_or_not(n)\n\t\treturn\
    \ is_in_range_or_not_or_not_or_not_or_not(n) or is_between(n, n + 1)\n\tend\n\t\
    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\t\t\
    return is_in_range_or_not_or_not_or_not_or_not_or_not(n) or is_between(n, n +\
    \ 1)\n\tend\n\tlocal function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \t\treturn is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n) or is_between(n,\
    \ n + 1)\n\tend\n\tlocal function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \t\treturn is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n) or\
    \ is_between(n, n + 1)\n\tend\n\tlocal function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \t\treturn is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n) or\
    \ is_between(n, n + 1)\n\tend\n\tlocal function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \t\treturn is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n) or\
    \ is_between(n, n + 1)\n\tend\n\tlocal function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_",
  "   if x < y then\n      return -1\n   end\n   if x == y then\n      return x\n\
    \   end\n   if x % 2 == 0 then\n      return choose_num(x / 2, y)\n   end\n  \
    \ if y % 2 == 0 then\n      return choose_num(x, y / 2)\n   end\n   return choose_num(x\
    \ + 1, y)\nend", "   if x < y then\n      local m = math.max(x, y)\n      if m\
    \ % 2 == 0 then\n         return m\n      else\n         return -1\n      end\n\
    \   else\n      local m = math.min(x, y)\n      if m % 2 == 0 then\n         return\
    \ m\n      else\n         return -1\n      end\n   end\nend", "   if x >= y then\n\
    \      return -1\n   end\n   if x < y then\n      local m = math.floor((x + y)\
    \ / 2)\n      if m % 2 == 0 then\n         return m\n      else\n         return\
    \ choose_num(x, y)\n      end\n   end\nend", "    if x < y then\n        x, y\
    \ = y, x\n    end\n    local max_num = x\n    local min_num = y\n    while true\
    \ do\n        local num = math.floor((max_num + min_num) / 2)\n        if num\
    \ % 2 == 0 then\n            max_num = num\n        else\n            min_num\
    \ = num\n        end\n        if max_num == min_num then\n            return max_num\n\
    \        end\n    end\nend", "    if x < y then\n        x, y = y, x\n    end\n\
    \    for i = x, y + 1 do\n        if i ~= math.floor(i) then\n            return\
    \ i\n        end\n    end\n    return -1\nend", "  if x < y then\n    x, y = y,\
    \ x\n  end\n  local x_even = x % 2\n  local y_even = y % 2\n  if x_even and y_even\
    \ then\n    return x + (y - x)\n  elseif x_even then\n    return x - y\n  else\n\
    \    return y - x\n  end\nend", "   if x < y then\n      local m = x\n      x\
    \ = y\n      y = m\n   end\n   local i = 1\n   while i <= y do\n      if x % 2\
    \ == 0 then\n         return x\n      else\n         x = x * 2\n      end\n  \
    \    i = i + 1\n   end\n   return -1\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

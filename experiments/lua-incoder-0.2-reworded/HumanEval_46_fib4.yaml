name: HumanEval_46_fib4
language: lua
prompt: "-- The Fib4 number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n-- fib4(0) -> 0\n-- fib4(1) -> 0\n-- fib4(2) -> 2\n\
  -- fib4(3) -> 0\n-- fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
  -- Please write a function to efficiently compute the n-th element of the fib4 number\
  \ sequence.  Do not use recursion.\n-- >>> fib4(5)\n-- 4\n-- >>> fib4(6)\n-- 8\n\
  -- >>> fib4(7)\n-- 14\nlocal function fib4(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib4\n\
  \    lu.assertEquals(candidate(5), 4)\n    lu.assertEquals(candidate(8), 28)\n \
  \   lu.assertEquals(candidate(10), 104)\n    lu.assertEquals(candidate(12), 386)\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if n < 0 then\n    return 0\n  elseif n < 4 then\n    return n\n\
    \  else\n    return fib4(n - 4) + fib4(n - 3) + fib4(n - 2) + fib4(n - 1)\n  end\n\
    end", "  if n < 0 then return nil end\n  if n < 4 then return n end\n  return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend", "  if n < 0 then\n\
    \    return 0\n  elseif n < 1 then\n    return 1\n  elseif n < 2 then\n    return\
    \ 2\n  elseif n < 3 then\n    return 0\n  else\n    return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\n  end\nend", "  if n < 0 then\n    return\
    \ 0\n  elseif n < 4 then\n    return n\n  else\n    return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\n  end\nend", "  if n < 0 then return nil end\n\
    \  if n < 4 then return n end\n  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3)\
    \ + fib4(n - 4)\nend", "  if n < 0 then\n    return 0\n  elseif n < 1 then\n \
    \   return 1\n  elseif n < 2 then\n    return 2\n  elseif n < 3 then\n    return\
    \ 0\n  else\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n\
    \  end\nend", "  if n < 1 then return 0 end\n  if n < 3 then return n end\n  return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend", "  if n < 0 then\n\
    \    return 0\n  elseif n < 4 then\n    return n\n  else\n    return fib4(n -\
    \ 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n  end\nend", "  if n < 0 then\n\
    \    return 0\n  elseif n == 0 then\n    return 0\n  elseif n == 1 then\n    return\
    \ 1\n  elseif n == 2 then\n    return 2\n  elseif n == 3 then\n    return 0\n\
    \  elseif n == 4 then\n    return 0\n  else\n    return fib4(n - 1) + fib4(n -\
    \ 2) + fib4(n - 3) + fib4(n - 4)\n  end\nend", "  if n < 0 then\n    return 0\n\
    \  elseif n < 1 then\n    return 1\n  elseif n < 2 then\n    return 2\n  elseif\
    \ n < 3 then\n    return 0\n  else\n    return fib4(n - 1) + fib4(n - 2) + fib4(n\
    \ - 3) + fib4(n - 4)\n  end\nend", "  if n < 0 then\n    return 0\n  elseif n\
    \ < 4 then\n    return n\n  else\n    return fib4(n - 1) + fib4(n - 2) + fib4(n\
    \ - 3) + fib4(n - 4)\n  end\nend", "  if n < 0 then\n    return 0\n  elseif n\
    \ < 4 then\n    return n\n  else\n    return fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4)\n  end\nend", "  if n < 0 then return nil end\n  if n < 4 then return\
    \ n end\n  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend",
  "  if n < 0 then\n    return 0\n  elseif n < 4 then\n    return n\n  else\n    return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n  end\nend", "  if n\
    \ < 0 then return nil end\n  if n < 4 then return n end\n  return fib4(n - 1)\
    \ + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend", "  if n < 0 then\n    return\
    \ 0\n  elseif n < 4 then\n    return n\n  else\n    return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\n  end\nend", "  if n < 0 then\n    return\
    \ 0\n  elseif n < 4 then\n    return n\n  else\n    return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\n  end\nend", "  if n < 0 then\n    return\
    \ nil\n  elseif n < 4 then\n    return n\n  else\n    return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\n  end\nend", "  if n < 0 then\n    return\
    \ 0\n  elseif n < 4 then\n    return n\n  else\n    return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\n  end\nend", "  if n < 0 then\n    return\
    \ 0\n  elseif n < 4 then\n    return n\n  else\n    return fib4(n - 4) + fib4(n\
    \ - 3) + fib4(n - 2) + fib4(n - 1)\n  end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_141_file_name_check
language: lua
prompt: "-- Create a function which takes a string representing a file's name, and\
  \ returns\n-- 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  -- A file's name is considered to be valid if and only if all the following conditions\
  \ \n-- are met:\n-- - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n-- - The file's name contains exactly one dot '.'\n-- - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n-- the\
  \ latin alphapet ('a'-'z' and 'A'-'Z').\n-- - The substring after the dot should\
  \ be one of these: ['txt', 'exe', 'dll']\n-- Examples:\n-- >>> file_name_check('example.txt')\n\
  -- 'Yes'\n-- >>> file_name_check('1example.dll')\n-- 'No'\nlocal function file_name_check(file_name)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = file_name_check\n\
  \    lu.assertEquals(candidate('example.txt'), 'Yes')\n    lu.assertEquals(candidate('1example.dll'),\
  \ 'No')\n    lu.assertEquals(candidate('s1sdf3.asd'), 'No')\n    lu.assertEquals(candidate('K.dll'),\
  \ 'Yes')\n    lu.assertEquals(candidate('MY16FILE3.exe'), 'Yes')\n    lu.assertEquals(candidate('His12FILE94.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('_Y.txt'), 'No')\n    lu.assertEquals(candidate('?aREYA.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('/this_is_valid.dll'), 'No')\n    lu.assertEquals(candidate('this_is_valid.wow'),\
  \ 'No')\n    lu.assertEquals(candidate('this_is_valid.txt'), 'Yes')\n    lu.assertEquals(candidate('this_is_valid.txtexe'),\
  \ 'No')\n    lu.assertEquals(candidate('#this2_i4s_5valid.ten'), 'No')\n    lu.assertEquals(candidate('@this1_is6_valid.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('this_is_12valid.6exe4.txt'), 'No')\n   \
  \ lu.assertEquals(candidate('all.exe.txt'), 'No')\n    lu.assertEquals(candidate('I563_No.exe'),\
  \ 'Yes')\n    lu.assertEquals(candidate('Is3youfault.txt'), 'Yes')\n    lu.assertEquals(candidate('no_one#knows.dll'),\
  \ 'Yes')\n    lu.assertEquals(candidate('1I563_Yes3.exe'), 'No')\n    lu.assertEquals(candidate('I563_Yes3.txtt'),\
  \ 'No')\n    lu.assertEquals(candidate('final..txt'), 'No')\n    lu.assertEquals(candidate('final132'),\
  \ 'No')\n    lu.assertEquals(candidate('_f4indsartal132.'), 'No')\n    lu.assertEquals(candidate('.txt'),\
  \ 'No')\n    lu.assertEquals(candidate('s.'), 'No')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  -- Check that the file name contains exactly one dot '.'\n  if file_name:sub(1,1)\
    \ ~= '.' then\n    return 'No'\n  end\n  -- Check that the substring before the\
    \ dot should not be empty, and it starts with a letter from \n  -- latin alphapet\
    \ ('a'-'z' and 'A'-'Z')\n  if file_name:sub(1,1) == '' then\n    return 'No'\n\
    \  end\n  -- Check that the substring after the dot should be one of these: ['txt',\
    \ 'exe', 'dll']\n  if string.find(file_name, '.') ~= nil then\n    local extension\
    \ = file_name:sub(string.rep('.', #file_name))\n    if string.find(extension,\
    \ 'exe') ~= nil then\n      return 'Yes'\n    end\n    if string.find(extension,\
    \ 'dll') ~= nil then\n      return 'Yes'\n    end\n  end\n  return 'No'\nend",
  "   if #file_name > 3 then\n      return 'No'\n   end\n   if #file_name < 1 then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '.' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '0' then\n      return 'No'\n   end\n\
    \   if file_name:sub(1, 1) ~= '9' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'a' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'z'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'A' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'Z' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 2) ~= '.' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 2) ~= 'txt' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 2) ~= 'exe' then\n      return 'No'\n   end\n   if file_name:sub(1, 2) ~= 'dll'\
    \ then\n      return 'No'\n   end\n   return 'Yes'\nend", "  -- Check that the\
    \ file name contains exactly one dot '.'\n  if string.find(file_name, '.') ~=\
    \ nil then\n    -- Check that the substring before the dot should not be empty,\
    \ and it starts with a letter from the latin alphapet ('a'-'z' and 'A'-'Z')\n\
    \    if string.sub(file_name,1,1) ~= '' then\n      -- Check that the substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n      local allowed_extensions\
    \ = {'txt', 'exe', 'dll'}\n      if string.find(file_name, allowed_extensions)\
    \ ~= nil then\n        return 'Yes'\n      else\n        return 'No'\n      end\n\
    \    else\n      return 'No'\n    end\n  else\n    return 'No'\n  end\nend", " \
    \  if #file_name > 3 then\n      return 'No'\n   end\n   if #file_name == 0 then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\\\' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= '-' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= '0' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '9' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '-'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'a' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'z' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'A' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= 'Z' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'a' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'z'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'A' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'Z' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= '0' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= '9' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '-' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'a'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'z' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'A' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'Z' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= '0' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '9' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '-'\
    \ then\n      return 'No'\n   end\n   if file_name:sub", "   if file_name == nil\
    \ then\n      return nil\n   end", "   if file_name == nil then\n      return\
    \ 'No'\n   end\n   if #file_name < 3 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.') ~= nil then\n      if string.find(file_name, '.') ~= 1 then\n         return\
    \ 'No'\n      end\n   end\n   if string.find(file_name, '.') ~= 1 then\n     \
    \ return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name", "  local file_name =\
    \ file_name:gsub('.*/','')\n  local file_name = file_name:gsub('%.','')\n  local\
    \ file_name = file_name:gsub('^%[a-z_]','')\n  local file_name = file_name:gsub('%[A-z_]','')\n\
    \  local file_name = file_name:gsub('%0[a-z_]','')\n  local file_name = file_name:gsub('%0[A-z_]','')\n\
    \  local file_name = file_name:gsub('%[a-z_][0-9]','')\n  local file_name = file_name:gsub('%[A-z_][0-9]','')\n\
    \  local file_name = file_name:gsub('%0[a-z_][0-9]','')\n  local file_name = file_name:gsub('%0[A-z_][0-9]','')\n\
    \  local file_name = file_name:gsub('%[a-z_][0-9][0-9]','')\n  local file_name\
    \ = file_name:gsub('%[A-z_][0-9][0-9]','')\n  local file_name = file_name:gsub('%0[a-z_][0-9][0-9]','')\n\
    \  local file_name = file_name:gsub('%0[A-z_][0-9][0-9]','')\n  local file_name\
    \ = file_name:gsub('%[a-z_][0-9][0-9][0-9]','')\n  local file_name = file_name:gsub('%[A-z_][0-9][0-9][0-9]','')\n\
    \  local file_name = file_name:gsub('%0[a-z_][0-9][0-9][0-9]','')\n  local file_name\
    \ = file_name:gsub('%0[A-z_][0-9][0-9][0-9]','')\n  local file_name = file_name:gsub('%[a-z_][0-9][0-9][0-9][0-9]','')\n\
    \  local file_name = file_name:gsub('%[A-z_][0-9][0-9][0-9][0-9]','')\n  local\
    \ file_name = file_name:gsub('%0[a-z_][0-9][0-9][0-9][0-9]','')\n  local file_name\
    \ = file_name:gsub('%0[A-z_][0-9][0-9][0-9][0-9]','')\n  local file_name = file_name:gsub('%[a-z_][0-9][0-9][0-9][0-9][0-9]','')\n\
    \  local file_name = file_name:gsub('%[A-z_][0-9][0-9][0-9][0-9][0-9]','')\n \
    \ local file_name = file_name:gsub('%0[a-z_][0-9][0-9][0-9][0-9][0-9]','')\n \
    \ local file_name = file_name:gsub('%0[A-z_][0-9][0-9][0-9][0-9][0-9]','')\n \
    \ local file_name = file_name:", "   if file_name == nil then\n      return nil\n\
    \   end\n   if #file_name < 3 then\n      return nil\n   end\n   if string.find(file_name,\
    \ '.') ~= 1 then\n      return nil\n   end\n   if string.sub(file_name,1,1) ~=\
    \ 'a' then\n      return nil\n   end\n   if string.sub(file_name,1,1) ~= 'z' then\n\
    \      return nil\n   end\n   if string.sub(file_name,1,1) ~= 'A' then\n     \
    \ return nil\n   end\n   if string.sub(file_name,1,1) ~= 'Z' then\n      return\
    \ nil\n   end\n   if string.find(file_name, '.', 1) ~= 1 then\n      return nil\n\
    \   end\n   if string.find(file_name, '.', 2) ~= 1 then\n      return nil\n  \
    \ end\n   if string.find(file_name, '.', 3) ~= 1 then\n      return nil\n   end\n\
    \   if string.find(file_name, '.', 4) ~= 1 then\n      return nil\n   end\n  \
    \ if string.find(file_name, '.', 5) ~= 1 then\n      return nil\n   end\n   if\
    \ string.find(file_name, '.', 6) ~= 1 then\n      return nil\n   end\n   if string.find(file_name,\
    \ '.', 7) ~= 1 then\n      return nil\n   end\n   if string.find(file_name, '.',\
    \ 8) ~= 1 then\n      return nil\n   end\n   if string.find(file_name, '.', 9)\
    \ ~= 1 then\n      return nil\n   end\n   return 'Yes'\nend", "   -- Check that\
    \ the file name contains exactly one dot '.'\n   if file_name ~= nil then\n  \
    \    if string.find(file_name, \".\") ~= nil then\n         -- Check that the\
    \ substring before the dot should not be empty, and it starts with a letter from\
    \ the latin alphapet ('a'-'z' and 'A'-'Z')\n         if string.find(file_name,\
    \ \".\", 1, 1) ~= nil then\n            if string.find(file_name, \".\", 1, 1)\
    \ ~= nil then\n               if string.find(file_name, \".\", 1, 1) ~= nil then\n\
    \                  if string.find(file_name, \".\", 1, 1) ~= nil then\n      \
    \               if string.find(file_name, \".\", 1, 1) ~= nil then\n         \
    \                if string.find(file_name, \".\", 1, 1) ~= nil then\n        \
    \                    if string.find(file_name, \".\", 1, 1) ~= nil then\n    \
    \                           if string.find(file_name, \".\", 1, 1) ~= nil then\n\
    \                                  if string.find(file_name, \".\", 1, 1) ~= nil\
    \ then\n                                     if string.find(file_name, \".\",\
    \ 1, 1) ~= nil then\n                                         if string.find(file_name,\
    \ \".\", 1, 1) ~= nil then\n                                            if string.find(file_name,\
    \ \".\", 1, 1) ~= nil then\n                                               if\
    \ string.find(file_name, \".\", 1, 1) ~= nil then\n                          \
    \                        if string.find(file_name, \".\", 1, 1) ~= nil then\n\
    \                                                     if string.find(file_name,\
    \ \".\", 1, 1) ~= nil then\n                                                 \
    \        if string.find(file_name, \".\", 1, 1) ~= nil then\n                \
    \                                             if string.find(file_name, \".\"\
    , 1, 1) ~= nil then\n                                                        \
    \         if string.find(file_name, \".\", 1, 1) ~= nil then\n               \
    \                                                     if string.find(file_name,\
    \ \".\", 1, 1) ~= nil then\n                                                 \
    \                        if string.find(file_name, \".\", 1, 1) ~= nil then\n\
    \                                                                            if\
    \ string.find(file_name, \".\", 1, 1) ~= nil then\n                          \
    \                                                     if string.find(file_name,\
    \ \".\", 1, 1) ~= nil then\n                                                 \
    \                                 if string.find(file_name, \".\", 1, 1) ~= nil\
    \ then\n                                                                     \
    \                if string.find(file_name, \".\", 1, 1) ~= nil then\n        \
    \                                                                            \
    \    if string.find(file_name, \".\", 1, 1) ~= nil then\n                    \
    \                                                                       if string.find(file_name,\
    \ \".\", 1, 1) ~= nil then\n                                                 \
    \                                             if string.find(file_name, \".\"\
    , 1, 1) ~= nil then\n                                                        \
    \                                         if string.find(file_name, \".", "  \
    \ -- Check that the file name contains exactly one dot '.'\n   if file_name ~=\
    \ nil then\n      if file_name:sub(1, 1) ~= '.' then\n         return 'No'\n \
    \     end\n   end\n   -- Check that the substring before the dot is not empty,\
    \ and it starts with a letter \n   -- from the latin alphapet ('a'-'z' and 'A'-'Z')\n\
    \   if file_name ~= nil then\n      if file_name:sub(1, 1) ~= '.' then\n     \
    \    if file_name:sub(1, 1) ~= 'a' then\n            if file_name:sub(1, 1) ~=\
    \ 'A' then\n               return 'No'\n            end\n         end\n      end\n\
    \   end\n   -- Check that the substring after the dot should be one of these:\
    \ ['txt', 'exe', 'dll']\n   if file_name ~= nil then\n      if file_name:sub(1,\
    \ 4) ~= '.' then\n         if file_name:sub(1, 4) ~= 'exe' then\n            if\
    \ file_name:sub(1, 4) ~= 'dll' then\n               return 'No'\n            end\n\
    \         end\n      end\n   end\n   return 'Yes'\nend", "   if file_name == nil\
    \ then\n      return nil\n   end\n   if string.len(file_name) > 3 then\n     \
    \ return 'No'\n   end\n   if string.find(file_name, '.') then\n      return 'No'\n\
    \   end\n   if string.find(file_name, '^[a-zA-Z]') then\n      return 'No'\n \
    \  end\n   if string.find(file_name, '^[0-9]') then\n      return 'No'\n   end\n\
    \   return 'Yes'\nend", "    local file_name = file_name:gsub('.*/','')\n    local\
    \ file_name = file_name:gsub('%.','')\n    local file_name = file_name:gsub('^%[Aa][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Bb][Zz]','')\n    local file_name = file_name:gsub('%[Cc][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Dd][Zz]','')\n    local file_name = file_name:gsub('%[Ee][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Ff][Zz]','')\n    local file_name = file_name:gsub('%[Gg][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Hh][Zz]','')\n    local file_name = file_name:gsub('%[Ii][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Jj][Zz]','')\n    local file_name = file_name:gsub('%[Kk][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Ll][Zz]','')\n    local file_name = file_name:gsub('%[Mm][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Nn][Zz]','')\n    local file_name = file_name:gsub('%[Oo][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Pp][Zz]','')\n    local file_name = file_name:gsub('%[Qq][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Rr][Zz]','')\n    local file_name = file_name:gsub('%[Ss][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Tt][Zz]','')\n    local file_name = file_name:gsub('%[Uu][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Vv][Zz]','')\n    local file_name = file_name:gsub('%[Ww][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Xx][Zz]','')\n    local file_name = file_name:gsub",
  "   if file_name == nil then\n      return nil\n   end\n   if #file_name > 3 then\n\
    \      return nil\n   end\n   if file_name ~= string.sub(file_name, 1, string.find(file_name,\
    \ \".\", 1, true)) then\n      return nil\n   end\n   if string.sub(file_name,\
    \ 1, string.find(file_name, \".\", 1, true)) ~= string.sub(file_name,\n      string.find(file_name,\
    \ \".\", 1, true) + 1, string.find(file_name, \".\", 1, true)) then\n      return\
    \ nil\n   end\n   if string.sub(file_name,\n      string.find(file_name, \".\"\
    , 1, true) + 1, string.find(file_name, \".\", 1, true)) ~= string.sub(file_name,\n\
    \      string.find(file_name, \".\", 1, true) + 1, string.find(file_name, \".\"\
    , 1, true)) then\n      return nil\n   end\n   if string.sub(file_name,\n    \
    \  string.find(file_name, \".\", 1, true) + 1, string.find(file_name, \".\", 1,\
    \ true)) ~= 'a' then\n      return nil\n   end\n   if string.sub(file_name,\n\
    \      string.find(file_name, \".\", 1, true) + 1, string.find(file_name, \".\"\
    , 1, true)) ~= 'z' then\n      return nil\n   end\n   if string.sub(file_name,\n\
    \      string.find(file_name, \".\", 1, true) + 1, string.find(file_name, \".\"\
    , 1, true)) ~= 'A' then\n      return nil\n   end\n   if string.sub(file_name,\n\
    \      string.find(file_name, \".\", 1, true) + 1, string.find(file_name, \".\"\
    , 1, true)) ~= 'Z' then\n      return nil\n   end\n   return 'Yes'\nend", "  \
    \ if #file_name > 3 then\n      return 'No'\n   end\n   if #file_name == 0 then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\' then\n      return 'No'\n  \
    \ end\n   if file_name:sub(1, 1) ~= '\\' then\n      return 'No'\n   end\n   if\
    \ file_name:sub(1, 1) ~= '\\' or file_name:sub(2, 1) ~= '\\' or file_name:sub(3,\
    \ 1) ~= '\\' or file_name:sub(4, 1) ~= '\\' or file_name:sub(6, 1) ~= '\\' or\
    \ file_name:sub(7, 1) ~= '\\' or file_name:sub(8, 1) ~= '\\' or file_name:sub(9,\
    \ 1) ~= '\\' or file_name:sub(10, 1) ~= '\\' or file_name:sub(11, 1) ~= '\\' or\
    \ file_name:sub(12, 1) ~= '\\' or file_name:sub(13, 1) ~= '\\' or file_name:sub(14,\
    \ 1) ~= '\\' or file_name:sub(15, 1) ~= '\\' or file_name:sub(16, 1) ~= '\\' or\
    \ file_name:sub(17, 1) ~= '\\' or file_name:sub(18, 1) ~= '\\' or file_name:sub(19,\
    \ 1) ~= '\\' or file_name:sub(20, 1) ~= '\\' or file_name:sub(21, 1) ~= '\\' or\
    \ file_name:sub(22, 1) ~= '\\' or file_name:sub(23, 1) ~= '\\' or file_name:sub(24,\
    \ 1) ~= '\\' or file_name:sub(25, 1) ~= '\\' or file_name:sub(26, 1) ~= '\\' or\
    \ file_name:sub(27, 1) ~= '\\' or file_name:sub(28, 1) ~= '\\' or file_name:sub(29,\
    \ 1) ~= '\\' or file_name:sub(30, 1) ~= '\\' or file_name:sub(31, 1) ~= '\\' or\
    \ file_name:sub(32, 1) ~= '\\' or file_name:sub(33, 1) ~= '\\' or file_name:sub(34,\
    \ 1) ~= '\\' or file_name:sub(35, 1) ~= '\\' or file_name:sub(36, 1) ~= '\\' or\
    \ file_name:sub(37, 1) ~= '\\' or file_name:sub(38, 1) ~= '\\' or file_name:sub(39,\
    \ 1) ~= '\\' or file_name:sub(40, 1) ~= '\\' or file_name:sub(41, 1) ~= '\\' or\
    \ file_name:sub(42, 1) ~= '\\' or file_name:sub(43, 1) ~= '\\' or file_name:sub(44,\
    \ 1) ~= '\\' or file_name:sub(45, 1) ~= '\\' or file_name:sub(46, 1) ~= '\\' or\
    \ file_name:sub(47, 1) ~= '\\' or file_name:sub(48, 1) ", "  local file_name =\
    \ file_name:gsub(\"^%w+\", \"\")\n  local file_name = file_name:gsub(\"%.\", \"\
    \")\n  local file_name = file_name:gsub(\"^%l\", \"\")\n  local file_name = file_name:gsub(\"\
    ^%w\", \"\")\n  local file_name = file_name:gsub(\"^%S\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%w\", \"\")\n  local file_name = file_name:gsub(\"^%S\"\
    , \"\")\n  local file_name = file_name:gsub(\"^%l\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%l\", \"\")\n  local file_name = file_name:gsub(\"^%w\"\
    , \"\")\n  local file_name = file_name:gsub(\"^%S\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%S\", \"\")\n  local file_name = file_name:gsub(\"^%l\"\
    , \"\")\n  local file_name = file_name:gsub(\"^%l\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%w\", \"\")\n  local file_name = file_name:gsub(\"^%S\"\
    , \"\")\n  local file_name = file_name:gsub(\"^%S\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%l\", \"\")\n  local file_name = file_name:gsub(\"^%l\"\
    , \"\")\n  local file_name = file_name:gsub(\"^%w\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%S\", \"\")\n  local file_name = file_name:gsub(\"^%S\"\
    , \"\")\n  local file_name = file_name:gsub(\"^%l\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%l\", \"\")\n  local file_name = file_name:gsub(\"^%w\"\
    , \"\")\n  local file_name = file_name:gsub(\"^%S\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%S\", \"\")\n  local file_name = file_name:gsub(\"^%l\"\
    , \"\")\n  local file_name = file_name:gsub(\"^%l\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%w\", \"\")\n  local file_name = file_name:gsub(\"^%S\"\
    , \"\")\n  local file_name = file_name:gsub(\"^%S\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%l\", \"\")\n  local file_name = file_name:gsub(\"^%l\"\
    , \"\")\n  local file_name = file_name:gsub(\"^%w\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%S\", \"\")\n  local file_name = file_name:gsub(\"^", " \
    \  if file_name == nil then\n      return nil\n   end\n   if #file_name < 3 then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '-' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '0' then\n      return 'No'\n   end\n\
    \   if file_name:sub(1, 1) ~= '9' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '-' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'a'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'z' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'A' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'Z' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= '.' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'txt' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'exe'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'dll' then\n \
    \     return 'No'\n   end\n   return 'Yes'\nend", "  -- Check that the file name\
    \ contains exactly one dot '.'\n  if file_name ~= nil and file_name ~= '' then\n\
    \    if file_name:sub(1, 1) ~= '.' then\n      return 'No'\n    end\n    -- Check\
    \ that the substring before the dot should not be empty, and it starts with a\
    \ letter \n    -- from the latin alphapet ('a'-'z' and 'A'-'Z')\n    if file_name:sub(1,\
    \ 1) ~= '' then\n      local letter = file_name:sub(1, 1):lower()\n      if letter\
    \ ~= 'a' and letter ~= 'z' and letter ~= 'A' and letter ~= 'Z' then\n        return\
    \ 'No'\n      end\n    end\n    -- Check that the substring after the dot should\
    \ be one of these: ['txt', 'exe', 'dll']\n    local extension = file_name:sub(2)\n\
    \    if extension == 'txt' or extension == 'exe' or extension == 'dll' then\n\
    \      return 'Yes'\n    end\n  end\n  return 'No'\nend", "   local file_name\
    \ = file_name:lower()\n   if #file_name == 0 then\n      return 'No'\n   end\n\
    \   if #file_name ~= 1 then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '.' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'a'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'z' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'A' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'Z' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 2) ~= '.' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 2) ~= 'txt' then\n      return 'No'\n   end\n   if file_name:sub(1, 2) ~= 'exe'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 2) ~= 'dll' then\n \
    \     return 'No'\n   end\n   return 'Yes'\nend", "    local file_name = file_name:lower()\n\
    \    local dot_index = file_name:find('.')\n    if dot_index == nil then\n   \
    \     return 'No'\n    end\n    local first_letter = file_name:sub(1, 1)\n   \
    \ local second_letter = file_name:sub(2, 1)\n    if first_letter ~= 'a' and first_letter\
    \ ~= 'A' then\n        return 'No'\n    end\n    if second_letter ~= '0' and second_letter\
    \ ~= '9' then\n        return 'No'\n    end\n    if file_name:sub(1, 1) ~= ''\
    \ then\n        return 'No'\n    end\n    if file_name:sub(2, 1) ~= 'txt' and\
    \ file_name:sub(2, 1) ~= 'exe' and file_name:sub(2, 1) ~= 'dll' then\n       \
    \ return 'No'\n    end\n    return 'Yes'\nend", "   -- Check that the file name\
    \ contains exactly one dot '.'\n   if file_name ~= nil and file_name ~= '' then\n\
    \      if file_name:sub(1, 1) ~= '.' then\n         return 'No'\n      end\n \
    \  end\n   -- Check that the file's name contains exactly three digits ('0'-'9')\n\
    \   if file_name ~= nil and file_name ~= '' then\n      if file_name:sub(1, 3)\
    \ ~= string.gsub(file_name, '.', '') then\n         return 'No'\n      end\n \
    \  end\n   -- Check that the file's name starts with a letter from the latin alphabet\
    \ ('a'-'z')\n   if file_name ~= nil and file_name ~= '' then\n      if file_name:sub(1,\
    \ 1) ~= string.gsub(file_name, '.', '') then\n         if string.gsub(file_name,\
    \ '.', '') ~= '' and string.gsub(file_name, '.', '') ~= '..' then\n          \
    \  if string.gsub(file_name, '.', '') ~= string.gsub(file_name, '.', '..') then\n\
    \               if string.gsub(file_name, '.', '') ~= string.gsub(file_name, '.',\
    \ '..') then\n                  if string.gsub(file_name, '.', '') ~= string.gsub(file_name,\
    \ '.', '..') then\n                     if string.gsub(file_name, '.', '') ~=\
    \ string.gsub(file_name, '.', '..') then\n                        if string.gsub(file_name,\
    \ '.', '') ~= string.gsub(file_name, '.', '..') then\n                       \
    \    if string.gsub(file_name, '.', '') ~= string.gsub(file_name, '.', '..') then\n\
    \                              if string.gsub(file_name, '.', '') ~= string.gsub(file_name,\
    \ '.', '..') then\n                                 if string.gsub(file_name,\
    \ '.', '') ~= string.gsub(file_name, '.', '..') then\n                       \
    \             if string.gsub(file_name, '.', '') ~= string.gsub(file_name, '.',\
    \ '..') then\n                                       if string.gsub(file_name,\
    \ '.', '') ~= string.gsub(file_name, '.', '..') then\n                       \
    \                  if string.gsub(file_name, '.', '') ~= string.gsub(file_name,\
    \ '.', '..') then\n                                            if string.gsub(file_name,\
    \ '.', '') ~= string.gsub(file_name, '.', '..') then\n                       \
    \                        if string.gsub(file_name, '.', '') ~= string.gsub", " \
    \  -- Check that the file name contains exactly one dot '.'\n   if file_name ~=\
    \ nil then\n      -- Check that the substring before the dot should not be empty,\
    \ and it starts with a letter from the latin alphapet ('a'-'z' and 'A'-'Z')\n\
    \      if string.find(file_name, '.') ~= nil then\n         if string.len(file_name)\
    \ > 1 then\n            -- Check that the substring after the dot should be one\
    \ of these: ['txt', 'exe', 'dll']\n            if string.find(file_name, '.',\
    \ 1) ~= nil then\n               if string.find(file_name, '.', 2) ~= nil then\n\
    \                  if string.find(file_name, '.', 3) ~= nil then\n           \
    \          return 'Yes'\n                  else\n                     return 'No'\n\
    \                  end\n               else\n                  return 'No'\n \
    \              end\n            else\n               return 'No'\n           \
    \ end\n         else\n            return 'No'\n         end\n      else\n    \
    \     return 'No'\n      end\n   else\n      return 'No'\n   end\nend", "    local\
    \ file_name = file_name:lower()\n    local dot_index = file_name:find('.')\n \
    \   local dot_string = file_name:sub(1, dot_index)\n    local dot_string_length\
    \ = #dot_string\n    local dot_string_start = dot_index - 1\n    local dot_string_end\
    \ = dot_string_start + dot_string_length\n    local dot_string_valid = false\n\
    \    local dot_string_valid = false\n    local dot_string_valid = false\n    local\
    \ dot_string_valid = false\n    local dot_string_valid = false\n    local dot_string_valid\
    \ = false\n    local dot_string_valid = false\n    local dot_string_valid = false\n\
    \    local dot_string_valid = false\n    local dot_string_valid = false\n    local\
    \ dot_string_valid = false\n    local dot_string_valid = false\n    local dot_string_valid\
    \ = false\n    local dot_string_valid = false\n    local dot_string_valid = false\n\
    \    local dot_string_valid = false\n    local dot_string_valid = false\n    local\
    \ dot_string_valid = false\n    local dot_string_valid = false\n    local dot_string_valid\
    \ = false\n    local dot_string_valid = false\n    local dot_string_valid = false\n\
    \    local dot_string_valid = false\n    local dot_string_valid = false\n    local\
    \ dot_string_valid = false\n    local dot_string_valid = false\n    local dot_string_valid\
    \ = false\n    local dot_string_valid = false\n    local dot_string_valid = false\n\
    \    local dot_string_valid = false\n    local dot_string_valid = false\n    local\
    \ dot_string_valid = false\n    local dot_string_valid = false\n    local dot_string_valid\
    \ = false\n    local dot_string_valid = false\n    local dot_string_valid = false\n\
    \    local dot_string_valid = false\n    local dot_string_valid = false\n    local\
    \ dot_string_valid = false\n    local dot_string_valid = false\n    local dot_string_valid\
    \ = false\n    local dot_string_valid = false\n    local dot_string_valid = false\n\
    \    local dot_string_valid = false\n    local dot_string_valid = false\n    local\
    \ dot_string_valid = false\n    local dot_string_valid = false\n    local dot_string_valid\
    \ = false\n    local dot_string_valid = false\n    local dot_string_valid = false\n\
    \    local dot_string_valid = false\n    local dot_string_valid = false\n    local\
    \ dot_string_valid = false\n    local dot_string_valid = false\n    local dot_string_valid\
    \ = false\n    local dot_string_valid = false\n    local dot_string_valid = false\n\
    \    local dot_string_valid = false\n    local dot_string_valid = false\n    local\
    \ dot_string_valid = false\n    local dot_string_valid = false\n    local dot_string_valid\
    \ = false\n    local dot_string_valid = false\n    local dot_string_valid = false\n\
    \    local dot_string_valid = false", "    local file_name = file_name:gsub('.*/','')\n\
    \    local file_name = file_name:gsub('%.','')\n    local file_name = file_name:gsub('%.%.','')\n\
    \    local file_name = file_name:gsub('%.%.%.','')\n    local file_name = file_name:gsub('%.%.%.%.','')\n\
    \    local file_name = file_name:gsub('%.%.%.%.%.','')\n    local file_name =\
    \ file_name:gsub('%.%.%.%.%.%.','')\n    local file_name = file_name:gsub('%.%.%.%.%.%.%.','')\n\
    \    local file_name = file_name:gsub('%.%.%.%.%.%.%.%.','')\n    local file_name\
    \ = file_name:gsub('%.%.%.%.%.%.%.%.%.','')\n    local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.','')\n\
    \    local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.','')\n    local\
    \ file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.','')\n    local file_name\
    \ = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.','')\n    local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.%.','')\n\
    \    local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.%.','')\n    local\
    \ file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.%.%.','')\n    local file_name\
    \ = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.%.%.','')\n    local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.','')\n\
    \    local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.','')\n\
    \    local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.','')\n\
    \    local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.','')\n\
    \    local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.','')\n\
    \    local file_name = file_name", "   -- Check that the file name contains exactly\
    \ one dot '.'\n   if file_name ~= nil and file_name ~= '' then\n      if file_name:sub(1,\
    \ 1) ~= '.' then\n         return 'No'\n      end\n   end\n   -- Check that the\
    \ substring before the dot is not empty, and it starts with a letter \n   -- from\
    \ the latin alphapet ('a'-'z' and 'A'-'Z')\n   if file_name ~= nil and file_name\
    \ ~= '' then\n      if file_name:sub(1, 1) ~= '.' then\n         if file_name:sub(1,\
    \ 1) ~= 'a' then\n            if file_name:sub(1, 1) ~= 'A' then\n           \
    \    return 'No'\n            end\n         end\n      end\n   end\n   -- Check\
    \ that the substring after the dot is one of these: ['txt', 'exe', 'dll']\n  \
    \ if file_name ~= nil and file_name ~= '' then\n      if file_name:sub(1, 1) ~=\
    \ '.' then\n         if file_name:sub(1, 2) ~= 'txt' then\n            if file_name:sub(1,\
    \ 2) ~= 'exe' then\n               if file_name:sub(1, 2) ~= 'dll' then\n    \
    \              return 'No'\n               end\n            end\n         end\n\
    \      end\n   end\n   return 'Yes'\nend", "   if file_name == nil then\n    \
    \  return 'No'\n   end\n   if #file_name < 3 then\n      return 'No'\n   end\n\
    \   if string.find(file_name, '.') ~= nil then\n      if string.find(file_name,\
    \ '.') ~= 1 then\n         return 'No'\n      end\n   end\n   if string.find(file_name,\
    \ '.') ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name, '.',\
    \ 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name",
  "  -- Check that the file name contains exactly one dot '.'\n  if file_name ~= nil\
    \ and file_name ~= '' then\n    local dot_index = string.find(file_name, '.')\n\
    \    if dot_index == nil then\n      return 'No'\n    end\n    -- Check that the\
    \ substring before the dot is not empty\n    if string.sub(file_name,1,1) ~= ''\
    \ then\n      return 'No'\n    end\n    -- Check that the substring after the\
    \ dot is one of these: ['txt', 'exe', 'dll']\n    local extension = string.sub(file_name,dot_index+1)\n\
    \    if extension ~= 'txt' and extension ~= 'exe' and extension ~= 'dll' then\n\
    \      return 'No'\n    end\n    -- Check that the substring before the dot starts\
    \ with a letter from the latin alphapet ('a'-'z' and 'A'-'Z')\n    local letter_index\
    \ = string.find(file_name, '.', dot_index+1)\n    if letter_index == nil then\n\
    \      return 'No'\n    end\n    local letter = string.sub(file_name,letter_index+1)\n\
    \    if letter ~= string.sub(file_name,1,1) then\n      return 'No'\n    end\n\
    \  end\n  return 'Yes'\nend", "   -- Check that the file name contains exactly\
    \ one dot '.'\n   if file_name ~= nil then\n      -- Get the substring before\
    \ the dot\n      local file_prefix = file_name:sub(1, file_name:find('%.'))\n\
    \      -- Check that the substring starts with a letter from the latin alphapet\
    \ ('a'-'z' and 'A'-'Z')\n      if file_prefix ~= nil then\n         if file_prefix:find('[%a..%z]')\
    \ ~= nil then\n            -- Check that the substring after the dot is one of\
    \ these: ['txt', 'exe', 'dll']\n            if file_prefix:find('%.') ~= nil then\n\
    \               if file_prefix:find('txt') ~= nil then\n                  return\
    \ 'Yes'\n               elseif file_prefix:find('exe') ~= nil then\n         \
    \         return 'Yes'\n               elseif file_prefix:find('dll') ~= nil then\n\
    \                  return 'Yes'\n               else\n                  return\
    \ 'No'\n               end\n            else\n               return 'No'\n   \
    \         end\n         else\n            return 'No'\n         end\n      else\n\
    \         return 'No'\n      end\n   else\n      return 'No'\n   end\nend", " \
    \  if #file_name > 3 then\n      return 'No'\n   end\n   if file_name ~= file_name:sub(1,\
    \ 3) then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'a' then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 2) ~= 'z' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 3) ~= 'A' then\n      return 'No'\n   end\n\
    \   if file_name:sub(1, 4) ~= 'Z' then\n      return 'No'\n   end\n   return 'Yes'\n\
    end", "   -- Check that the file name contains exactly one dot '.'\n   if file_name\
    \ ~= nil then\n      -- Check that the file's name contains exactly one dot '.'\n\
    \      if file_name ~= '' then\n         -- Check that the substring before the\
    \ dot should not be empty, and it starts with a letter from the latin alphapet\
    \ ('a'-'z' and 'A'-'Z')\n         if file_name:sub(1, 1) ~= '' then\n        \
    \    -- Check that the substring after the dot should be one of these: ['txt',\
    \ 'exe', 'dll']\n            if file_name:sub(1, 3) ~= '.' then\n            \
    \   if string.match(file_name, '^[a-zA-Z][a-zA-Z0-9]*$') then\n              \
    \    return 'Yes'\n               else\n                  return 'No'\n      \
    \         end\n            else\n               return 'No'\n            end\n\
    \         else\n            return 'No'\n         end\n      else\n         return\
    \ 'No'\n      end\n   else\n      return 'No'\n   end\nend", "   if file_name\
    \ == nil then\n      return nil\n   end\n   if #file_name > 3 then\n      return\
    \ nil\n   end\n   if file_name ~= string.sub(file_name, 1, 1) then\n      return\
    \ nil\n   end\n   if string.sub(file_name, 1, 1) ~= 'a' then\n      return nil\n\
    \   end\n   if string.sub(file_name, 1, 1) ~= 'z' then\n      return nil\n   end\n\
    \   if string.sub(file_name, 1, 1) ~= 'A' then\n      return nil\n   end\n   if\
    \ string.sub(file_name, 1, 1) ~= 'Z' then\n      return nil\n   end\n   if string.sub(file_name,\
    \ 1, 2) ~= '.' then\n      return nil\n   end\n   if string.sub(file_name, 1,\
    \ 3) ~= '.' then\n      return nil\n   end\n   if string.sub(file_name, 1, 4)\
    \ ~= '.' then\n      return nil\n   end\n   if string.sub(file_name, 1, 5) ~=\
    \ '.' then\n      return nil\n   end\n   if string.sub(file_name, 1, 6) ~= '.'\
    \ then\n      return nil\n   end\n   if string.sub(file_name, 1, 7) ~= '.' then\n\
    \      return nil\n   end\n   if string.sub(file_name, 1, 8) ~= '.' then\n   \
    \   return nil\n   end\n   if string.sub(file_name, 1, 9) ~= '.' then\n      return\
    \ nil\n   end\n   return 'Yes'\nend", "   if file_name == nil then\n      return\
    \ nil\n   end", "   if file_name == nil then\n      return nil\n   end\n   if\
    \ #file_name < 3 then\n      return nil\n   end\n   if string.find(file_name,\
    \ \".\") then\n      return nil\n   end\n   if string.find(file_name, \"..\")\
    \ then\n      return nil\n   end\n   if string.find(file_name, \"%\") then\n \
    \     return nil\n   end\n   if string.find(file_name, \":\") then\n      return\
    \ nil\n   end\n   if string.find(file_name, \"/\") then\n      return nil\n  \
    \ end\n   if string.find(file_name, \"\\\\\") then\n      return nil\n   end\n\
    \   if string.find(file_name, \"<\") then\n      return nil\n   end\n   if string.find(file_name,\
    \ \">\") then\n      return nil\n   end\n   if string.find(file_name, \"|\") then\n\
    \      return nil\n   end\n   if string.find(file_name, \"?\") then\n      return\
    \ nil\n   end\n   if string.find(file_name, \"*\") then\n      return nil\n  \
    \ end\n   if string.find(file_name, \"[\") then\n      return nil\n   end\n  \
    \ if string.find(file_name, \"]\") then\n      return nil\n   end\n   if string.find(file_name,\
    \ \"{\") then\n      return nil\n   end\n   if string.find(file_name, \"}\") then\n\
    \      return nil\n   end\n   if string.find(file_name, \"(\") then\n      return\
    \ nil\n   end\n   if string.find(file_name, \")\") then\n      return nil\n  \
    \ end\n   if string.find(file_name, \"%\") then\n      return nil\n   end\n  \
    \ if string.find(file_name, \"!\") then\n      return nil\n   end\n   if string.find(file_name,\
    \ \"$\") then\n      return nil\n   end\n   if string.find(file_name, \"&\") then\n\
    \      return nil\n   end\n   if string.find(file_name, \"'\") then\n      return\
    \ nil\n   end\n   if string.find(file_name, \"(\") then\n      return nil\n  \
    \ end\n   if string.find(file_name, \")\") then\n      return nil\n   end\n  \
    \ if string.find(file_name, \"+\") then\n      return nil\n   end\n   if string.find(file_name,\
    \ \"-\") then\n      return nil\n   end\n   if string.find(file_name, \".\") then\n\
    \      return nil\n   end\n   if string.find(file_name, \"/\") then\n      return\
    \ nil\n   end\n   if string.find(file_name, \"\\\\\") then\n      return nil\n\
    \   end\n   if string.find(file_name, \"|\") then\n      return nil\n   end\n\
    \   if string.find(file_name, \"?", "   if file_name == nil then\n      return\
    \ nil\n   end\n   if string.find(file_name, '.') ~= nil then\n      if string.find(file_name,\
    \ '.') ~= 1 then\n         return 'No'\n      end\n   end\n   if string.find(file_name,\
    \ '.') == nil then\n      return 'No'\n   end\n   if string.find(file_name, '.',\
    \ 1, true) ~= nil then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n", "   local file_name =\
    \ file_name:gsub('[^0-9.]', '')\n   if file_name == nil then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= '.' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= 'a' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'z' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'A'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 2) ~= 'txt' then\n \
    \     return 'No'\n   end\n   if file_name:sub(1, 2) ~= 'exe' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 2) ~= 'dll' then\n      return 'No'\n \
    \  end\n   return 'Yes'\nend", "   if #file_name > 3 then\n      return 'No'\n\
    \   end\n   if #file_name == 0 then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '-' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= string.lower(string.sub(file_name:sub(1,\
    \ 1), 1, 1)) then\n      return 'No'\n   end\n   if file_name:sub(1, #file_name)\
    \ ~= '.' then\n      return 'No'\n   end\n   if file_name:sub(1, #file_name) ~=\
    \ 'exe' then\n      return 'No'\n   end\n   if file_name:sub(1, #file_name) ~=\
    \ 'dll' then\n      return 'No'\n   end\n   return 'Yes'\nend", "   -- Check that\
    \ the file name contains exactly one dot '.'\n   if file_name ~= nil then\n  \
    \    -- Get the substring before the dot\n      local file_name = string.sub(file_name,1,string.find(file_name,'.')-1)\n\
    \      -- Check that it starts with a letter from the latin alphapet\n      if\
    \ string.find(file_name,'^[%a%z]') ~= nil then\n         -- Check that it contains\
    \ only three digits\n         if string.find(file_name,'^[0-9][0-9][0-9]') ~=\
    \ nil then\n            -- Return Yes if the file's name is valid\n          \
    \  return 'Yes'\n         else\n            -- Return No if the file's name is\
    \ invalid\n            return 'No'\n         end\n      else\n         -- Return\
    \ No if the file's name is invalid\n         return 'No'\n      end\n   else\n\
    \      -- Return No if the file's name is nil\n      return 'No'\n   end\nend",
  "    local num_digits = string.len(file_name)\n    if num_digits > 3 then\n    \
    \    return 'No'\n    end\n    local first_dot = string.find(file_name, '.')\n\
    \    if first_dot == nil then\n        return 'No'\n    end\n    local first_char_lower\
    \ = string.sub(file_name, 1, 1)\n    local first_char_upper = string.sub(file_name,\
    \ 1, 1)\n    if first_char_lower ~= 'a' and first_char_lower ~= 'A' then\n   \
    \     return 'No'\n    end\n    if first_char_upper ~= 'A' and first_char_upper\
    \ ~= 'a' then\n        return 'No'\n    end\n    if string.find(file_name, '..')\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "   -- Check that\
    \ the file name contains exactly one dot '.'\n   if string.find(file_name, '.')\
    \ ~= nil then\n      -- Check that the substring before the dot should not be\
    \ empty, and it starts with a letter from the latin alphapet ('a'-'z' and 'A'-'Z')\n\
    \      if string.sub(file_name,1,1) ~= '' then\n         if string.sub(file_name,1,1)\
    \ ~= string.sub(file_name,1,1) then\n            -- Check that the substring after\
    \ the dot should be one of these: ['txt', 'exe', 'dll']\n            if string.find(string.lower(file_name),'exe,dll,txt')\
    \ ~= nil then\n               return 'Yes'\n            else\n               return\
    \ 'No'\n            end\n         else\n            return 'No'\n         end\n\
    \      else\n         return 'No'\n      end\n   else\n      return 'No'\n   end\n\
    end", "   local file_name = file_name:gsub('.*/','')\n   local file_name = file_name:gsub('[^0-9]','')\n\
    \   local file_name = file_name:gsub('^','')\n   local file_name = file_name:gsub('[.]','')\n\
    \   local file_name = file_name:gsub('[.]','')\n   local file_name = file_name:gsub('[.]','')\n\
    \   local file_name = file_name:gsub('[.]','')\n   local file_name = file_name:gsub('[.]','')\n\
    \   local file_name = file_name:gsub('[.]','')\n   local file_name = file_name:gsub('[.]','')\n\
    \   local file_name = file_name:gsub('[.]','')\n   local file_name = file_name:gsub('[.]','')\n\
    \   local file_name = file_name:gsub('[.]','')\n   local file_name = file_name:gsub('[.]','')\n\
    \   local file_name = file_name:gsub('[.]','')\n   local file_name = file_name:gsub('[.]','')\n\
    \   local file_name = file_name:gsub('[.]','')\n   local file_name = file_name:gsub('[.]','')\n\
    \   local file_name = file_name:gsub('[.]','')\n   local file_name = file_name:gsub('[.]','')\n\
    \   local file_name = file_name:gsub('[.]','')\n   local file_name = file_name:gsub('[.]','')\n\
    \   local file_name = file_name:gsub('[.]','')\n   local file_name = file_name:gsub('[.]','')\n\
    \   local file_name = file_name:gsub('[.]','')\n   local file_name = file_name:gsub('[.]','')\n\
    \   local file_name = file_name:gsub('[.]','')\n   local file_name = file_name:gsub('[.]','')\n\
    \   local file_name = file_name:gsub('[.]','')\n   local file_name = file_name:gsub('[.]','')\n\
    \   local file_name = file_name:gsub('[.]','')\n   local file_name = file_name:gsub('[.]','')\n\
    \   local file_name = file_name:gsub('[.]','')\n   local file_name = file_name:gsub('[.]','')\n\
    \   local file_name = file_name:gsub('[.]','')\n   local file_name = file_name:gsub('[.]','')\n\
    \   local file_name = file_name:gsub('[.", "   if file_name == nil then\n    \
    \  return 'No'\n   end\n   if #file_name > 3 then\n      return 'No'\n   end\n\
    \   if #file_name < 1 then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '\\\\' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\\
    \\' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\\\' then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\\\' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\\\' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= '\\\\' then\n      return 'No'\n   end\n\
    \   if file_name:sub(1, 1) ~= '\\\\' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '\\\\' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\\
    \\' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\\\' then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\\\' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\\\' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= '\\\\' then\n      return 'No'\n   end\n\
    \   if file_name:sub(1, 1) ~= '\\\\' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '\\\\' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\\
    \\' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\\\' then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\\\' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\\\' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= '\\\\' then\n      return 'No'\n   end\n\
    \   if file_name:sub(1, 1) ~= '\\\\' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '\\\\' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\\
    \\' then\n      return 'No'\n   end\n   if file_name:sub", "   if file_name ==\
    \ nil then\n      return nil\n   end\n   if string.find(file_name, \"..\") then\n\
    \      return \"No\"\n   end\n   if string.find(file_name, \".\") then\n     \
    \ if string.find(file_name, \".\") then\n         return \"No\"\n      end\n \
    \  end\n   if string.find(file_name, \".txt\") then\n      return \"Yes\"\n  \
    \ end\n   if string.find(file_name, \".exe\") then\n      return \"Yes\"\n   end\n\
    \   if string.find(file_name, \".dll\") then\n      return \"Yes\"\n   end\n \
    \  return nil\nend", "   -- Check that the file name contains exactly one dot\
    \ '.'\n   if string.find(file_name, \".\") ~= nil then\n      -- Check that the\
    \ substring before the dot should not be empty, and it starts with a letter from\
    \ the latin alphapet ('a'-'z' and 'A'-'Z')\n      if string.sub(file_name,1,1)\
    \ ~= \"\" then\n         if string.sub(file_name,1,1) ~= string.sub(file_name,1,1)\
    \ then\n            -- Check that the substring after the dot should be one of\
    \ these: ['txt', 'exe', 'dll']\n            if string.find(string.lower(file_name),\"\
    exe\") ~= nil then\n               if string.find(string.lower(file_name),\"dll\"\
    ) ~= nil then\n                  return \"Yes\"\n               else\n       \
    \           return \"No\"\n               end\n            else\n            \
    \   return \"No\"\n            end\n         else\n            return \"No\"\n\
    \         end\n      else\n         return \"No\"\n      end\n   else\n      return\
    \ \"No\"\n   end\nend", "   if file_name == nil then\n      return 'No'\n   end\n\
    \   if string.find(file_name, '.') ~= nil then\n      if string.find(file_name,\
    \ '.') ~= 1 then\n         return 'No'\n      end\n      if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n         return 'No'\n      end\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'", "   -- Check that the file name\
    \ contains exactly one dot '.'\n   if file_name ~= nil then\n      if string.find(file_name,\
    \ \".\") ~= nil then\n         -- Check that the substring before the dot should\
    \ not be empty, and it starts with a letter from the latin alphapet ('a'-'z' and\
    \ 'A'-'Z')\n         if string.sub(file_name,1,1) ~= \"\" then\n            if\
    \ string.find(string.lower(string.sub(file_name,1,1)),string.letters(string.sub(file_name,1,1)))\
    \ ~= nil then\n               -- Check that the substring after the dot should\
    \ be one of these: ['txt', 'exe', 'dll']\n               if string.find(string.lower(string.sub(file_name,string.find(file_name,\
    \ \".\"),string.find(file_name, \".\"))),{'txt','exe','dll'}) ~= nil then\n  \
    \                return \"Yes\"\n               else\n                  return\
    \ \"No\"\n               end\n            else\n               return \"No\"\n\
    \            end\n         else\n            return \"No\"\n         end\n   \
    \   else\n         return \"No\"\n      end\n   else\n      return \"No\"\n  \
    \ end\nend", "    local num_digits = string.len(file_name)\n    if num_digits\
    \ > 3 then\n        return 'No'\n    end\n    local first_char = string.sub(file_name,\
    \ 1, 1)\n    local dot_index = string.find(file_name, '.', 2)\n    if dot_index\
    \ == nil then\n        return 'No'\n    end\n    local dot_char = string.sub(file_name,\
    \ dot_index + 1, 1)\n    if first_char ~= 'a' and first_char ~= 'A' then\n   \
    \     return 'No'\n    end\n    if dot_char ~= 'txt' and dot_char ~= 'exe' and\
    \ dot_char ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
  "   -- Check that the file name contains only digits and one dot.\n   if string.find(file_name,\
    \ '%%d') ~= nil then\n      return 'No'\n   end\n   -- Check that the file name\
    \ contains only latin alphabet letters.\n   if string.find(file_name, '%a') ~=\
    \ nil then\n      return 'No'\n   end\n   -- Check that the file name contains\
    \ only latin alphabet letters.\n   if string.find(file_name, '%A') ~= nil then\n\
    \      return 'No'\n   end\n   -- Check that the file name contains only latin\
    \ alphabet letters.\n   if string.find(file_name, '%z') ~= nil then\n      return\
    \ 'No'\n   end\n   -- Check that the file name contains only latin alphabet letters.\n\
    \   if string.find(file_name, '%Z') ~= nil then\n      return 'No'\n   end\n \
    \  -- Check that the file name contains only latin alphabet letters.\n   if string.find(file_name,\
    \ '%0') ~= nil then\n      return 'No'\n   end\n   -- Check that the file name\
    \ contains only latin alphabet letters.\n   if string.find(file_name, '%9') ~=\
    \ nil then\n      return 'No'\n   end\n   -- Check that the file name contains\
    \ only latin alphabet letters.\n   if string.find(file_name, '%A') ~= nil then\n\
    \      return 'No'\n   end\n   -- Check that the file name contains only latin\
    \ alphabet letters.\n   if string.find(file_name, '%z') ~= nil then\n      return\
    \ 'No'\n   end\n   -- Check that the file name contains only latin alphabet letters.\n\
    \   if string.find(file_name, '%Z') ~= nil then\n      return 'No'\n   end\n \
    \  -- Check that the file name contains only latin alphabet letters.\n   if string.find(file_name,\
    \ '%0') ~= nil then\n      return 'No'\n   end\n   -- Check that the file name\
    \ contains only latin alphabet letters.\n   if string.find(file_name, '%9') ~=\
    \ nil then\n      return 'No'\n   end\n   -- Check that the file name contains\
    \ only latin alphabet letters.\n   if string.find(file_name, '%A') ~= nil then\n\
    \      return 'No'\n   end\n   -- Check that the file name contains only latin\
    \ alphabet letters.\n   if string.find(file_name, '%z') ~= nil then\n      return\
    \ 'No'\n   end\n   -- Check that the file name contains only latin ", "   if file_name\
    \ == nil then\n      return nil\n   end\n   if #file_name < 3 then\n      return\
    \ nil\n   end\n   if file_name:sub(1, 1) ~= '-' or file_name:sub(1, 1) ~= '0'\
    \ then\n      return nil\n   end\n   if file_name:sub(1, 2) ~= '.' or file_name:sub(1,\
    \ 2) ~= '-' or file_name:sub(1, 2) ~= '0' then\n      return nil\n   end\n   if\
    \ file_name:sub(1, 3) ~= '.' or file_name:sub(1, 3) ~= '-' or file_name:sub(1,\
    \ 3) ~= '0' then\n      return nil\n   end\n   if file_name:sub(1, 4) ~= '.' or\
    \ file_name:sub(1, 4) ~= '-' or file_name:sub(1, 4) ~= '0' then\n      return\
    \ nil\n   end\n   if file_name:sub(1, 5) ~= '.' or file_name:sub(1, 5) ~= '-'\
    \ or file_name:sub(1, 5) ~= '0' then\n      return nil\n   end\n   if file_name:sub(1,\
    \ 6) ~= '.' or file_name:sub(1, 6) ~= '-' or file_name:sub(1, 6) ~= '0' then\n\
    \      return nil\n   end\n   if file_name:sub(1, 7) ~= '.' or file_name:sub(1,\
    \ 7) ~= '-' or file_name:sub(1, 7) ~= '0' then\n      return nil\n   end\n   if\
    \ file_name:sub(1, 8) ~= '.' or file_name:sub(1, 8) ~= '-' or file_name:sub(1,\
    \ 8) ~= '0' then\n      return nil\n   end\n   if file_name:sub(1, 9) ~= '.' or\
    \ file_name:sub(1, 9) ~= '-' or file_name:sub(1, 9) ~= '0' then\n      return\
    \ nil\n   end\n   if file_name:sub(1, 10) ~= '.' or file_name:sub(1, 10) ~= '-'\
    \ or file_name:sub(1, 10) ~= '0' then\n      return nil\n   end\n   if file_name:sub(1,\
    \ 11) ~= '.' or file_name:sub(1, 11) ~= '-' or file_name:sub(1, 11) ~= '0' then\n\
    \      return nil\n   end\n   if file_name:sub(1, 12) ~= '.' or file_name:sub(1,\
    \ 12) ~= '-' or file_name:sub(1, 12) ~= '0' then\n      return nil\n   end\n \
    \  if file_name:sub(1, 13) ~= '.' or file_name:sub(1, 13) ~= '-' or file_name:sub(1,\
    \ 13) ~= '0' then\n      return nil\n   end\n   if file_name:sub(1, 14) ~= '.'\
    \ or ", "   -- Check that the file name contains exactly one dot '.'\n   if file_name\
    \ ~= nil and file_name ~= '' then\n      if file_name:sub(1, 1) ~= '.' then\n\
    \         return 'No'\n      end\n   end\n   -- Check that the file name starts\
    \ with a letter from the latin alphabet ('a' \n   -- to 'z' and 'A' to 'Z')\n\
    \   if file_name ~= nil and file_name ~= '' then\n      if file_name:sub(1, 1)\
    \ ~= 'a' and file_name:sub(1, 1) ~= 'A' then\n         return 'No'\n      end\n\
    \   end\n   -- Check that the file name contains exactly one dot '.'\n   if file_name\
    \ ~= nil and file_name ~= '' then\n      if file_name:sub(2, 2) ~= '.' then\n\
    \         return 'No'\n      end\n   end\n   -- Check that the file name contains\
    \ exactly one dot '.'\n   if file_name ~= nil and file_name ~= '' then\n     \
    \ if file_name:sub(3, 3) ~= '.' then\n         return 'No'\n      end\n   end\n\
    \   -- Check that the file name contains exactly one dot '.'\n   if file_name\
    \ ~= nil and file_name ~= '' then\n      if file_name:sub(4, 4) ~= '.' then\n\
    \         return 'No'\n      end\n   end\n   -- Check that the file name contains\
    \ exactly one dot '.'\n   if file_name ~= nil and file_name ~= '' then\n     \
    \ if file_name:sub(5, 5) ~= '.' then\n         return 'No'\n      end\n   end\n\
    \   -- Check that the file name contains exactly one dot '.'\n   if file_name\
    \ ~= nil and file_name ~= '' then\n      if file_name:sub(6, 6) ~= '.' then\n\
    \         return 'No'\n      end\n   end\n   -- Check that the file name contains\
    \ exactly one dot '.'\n   if file_name ~= nil and file_name ~= '' then\n     \
    \ if file_name:sub(7, 7) ~= '.' then\n         return 'No'\n      end\n   end\n\
    \   -- Check that the file name contains exactly one dot '.'\n   if file_name\
    \ ~= nil and file_name ~= '' then\n      if file_name:sub(8, 8) ~= '.' then\n\
    \         return 'No'\n      end\n   end\n   -- Check that the file name contains\
    \ exactly one dot '.'\n   if file_name ~= nil and file_name ~= '' then\n     \
    \ if ", "   -- Check that the file name contains exactly one dot '.'\n   if string.find(file_name,\
    \ '.') ~= nil then\n      -- Check that the substring before the dot is not empty,\
    \ and it starts with a letter from the latin alphapet ('a'-'z' and 'A'-'Z')\n\
    \      if string.sub(file_name,1,1) ~= '' then\n         if string.sub(file_name,1,1)\
    \ ~= '0' and string.sub(file_name,1,1) ~= '9' then\n            -- Check that\
    \ the substring after the dot is one of these: ['txt', 'exe', 'dll']\n       \
    \     if string.find(file_name, 'exe') ~= nil then\n               return 'Yes'\n\
    \            elseif string.find(file_name, 'dll') ~= nil then\n              \
    \ return 'Yes'\n            else\n               return 'No'\n            end\n\
    \         else\n            return 'No'\n         end\n      else\n         return\
    \ 'No'\n      end\n   else\n      return 'No'\n   end\nend", "   if file_name\
    \ == nil then\n      return nil\n   end\n   if #file_name < 3 then\n      return\
    \ nil\n   end\n   if string.find(file_name, '.') ~= 1 then\n      return nil\n\
    \   end\n   if string.sub(file_name,1,1) ~= 'a' then\n      return nil\n   end\n\
    \   if string.sub(file_name,1,1) ~= 'z' then\n      return nil\n   end\n   if\
    \ string.sub(file_name,1,1) ~= 'A' then\n      return nil\n   end\n   if string.sub(file_name,1,1)\
    \ ~= 'Z' then\n      return nil\n   end\n   if string.find(file_name, '.') ~=\
    \ 1 then\n      return nil\n   end\n   if string.find(file_name, '.') ~= 1 then\n\
    \      return nil\n   end\n   if string.find(file_name, '.') ~= 1 then\n     \
    \ return nil\n   end\n   if string.find(file_name, '.') ~= 1 then\n      return\
    \ nil\n   end\n   if string.find(file_name, '.') ~= 1 then\n      return nil\n\
    \   end\n   if string.find(file_name, '.') ~= 1 then\n      return nil\n   end\n\
    \   if string.find(file_name, '.') ~= 1 then\n      return nil\n   end\n   return\
    \ 'Yes'\nend", "    local file_name = file_name:gsub('%.', '')\n    local file_name\
    \ = file_name:gsub('.[^a-z]', '')\n    local file_name = file_name:gsub('^[^a-z]',\
    \ '')\n    local file_name = file_name:gsub('[^a-z]$', '')\n    local file_name\
    \ = file_name:gsub('[^a-z]$', '')\n    local file_name = file_name:gsub('[^a-z]$',\
    \ '')\n    local file_name = file_name:gsub('[^a-z]$', '')\n    local file_name\
    \ = file_name:gsub('[^a-z]$', '')\n    local file_name = file_name:gsub('[^a-z]$',\
    \ '')\n    local file_name = file_name:gsub('[^a-z]$', '')\n    local file_name\
    \ = file_name:gsub('[^a-z]$', '')\n    local file_name = file_name:gsub('[^a-z]$',\
    \ '')\n    local file_name = file_name:gsub('[^a-z]$', '')\n    local file_name\
    \ = file_name:gsub('[^a-z]$', '')\n    local file_name = file_name:gsub('[^a-z]$',\
    \ '')\n    local file_name = file_name:gsub('[^a-z]$', '')\n    local file_name\
    \ = file_name:gsub('[^a-z]$', '')\n    local file_name = file_name:gsub('[^a-z]$',\
    \ '')\n    local file_name = file_name:gsub('[^a-z]$', '')\n    local file_name\
    \ = file_name:gsub('[^a-z]$', '')\n    local file_name = file_name:gsub('[^a-z]$',\
    \ '')\n    local file_name = file_name:gsub('[^a-z]$', '')\n    local file_name\
    \ = file_name:gsub('[^a-z]$', '')\n    local file_name = file_name:gsub('[^a-z]$',\
    \ '')\n    local file_name = file_name:gsub('[^a-z]$', '')\n    local file_name\
    \ = file_name:gsub('[^a-z]$', '')\n    local file_name = file_name:gsub('[^a-z]$',\
    \ '')\n    local file_name = file_name:gsub('[^a-z]$', '')\n    local file_name\
    \ = file_name:gsub('[^a-z]$', '')\n    local file_name = file_name:gsub('[^a-z]$',\
    \ '')\n    local file_name = file_name:gsub('[^a-z]$', '')\n    local file_name\
    \ = file_name:gsub('[^a-z]$', '')\n    local file_name = file_name:gsub('[^a-z]$',\
    \ '')\n    local file_name = file_name:gsub('[^a-z]$', '')\n    local file_name\
    \ = file_name:g", "   if #file_name > 3 then\n      return 'No'\n   end\n   if\
    \ file_name:sub(1, 1) ~= '\\' or file_name:sub(1, 1) ~= '.' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= string.lower(string.sub(file_name:sub(1,\
    \ 2), 1, 1)) then\n      return 'No'\n   end\n   if string.find(file_name:sub(2,\
    \ #file_name), 'exe') ~= nil then\n      return 'No'\n   end\n   if string.find(file_name:sub(2,\
    \ #file_name), 'dll') ~= nil then\n      return 'No'\n   end\n   return 'Yes'\n\
    end", "   if file_name == nil then\n      return nil\n   end", "   if file_name\
    \ == nil then\n      return nil\n   end\n   local file_ext = string.sub(file_name,\
    \ string.find(file_name, \".\"))\n   if file_ext == nil then\n      return nil\n\
    \   end\n   if string.len(file_name) ~= 3 then\n      return nil\n   end\n   if\
    \ string.sub(file_name, 1, 1) ~= 'a' then\n      return nil\n   end\n   if string.sub(file_name,\
    \ 1, 1) ~= 'z' then\n      return nil\n   end\n   if string.sub(file_name, 1,\
    \ 1) ~= 'A' then\n      return nil\n   end\n   if string.sub(file_name, 1, 1)\
    \ ~= 'Z' then\n      return nil\n   end\n   if string.sub(file_ext, 1, 3) ~= 'txt'\
    \ then\n      return nil\n   end\n   if string.sub(file_ext, 1, 3) ~= 'exe' then\n\
    \      return nil\n   end\n   if string.sub(file_ext, 1, 3) ~= 'dll' then\n  \
    \    return nil\n   end\n   return 'Yes'\nend", "   if file_name == nil then\n\
    \      return nil\n   end\n   if #file_name > 3 then\n      return 'No'\n   end\n\
    \   if #file_name < 1 then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '\\' or file_name:sub(1, 1) ~= '~' then\n      return 'No'\n   end\n \
    \  if file_name:sub(1, 1) ~= 'a' or file_name:sub(1, 1) ~= 'A' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 2) ~= '0' or file_name:sub(1, 2) ~= '9'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, #file_name) ~= '.' then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, #file_name) ~= 'txt' or file_name:sub(1,\
    \ #file_name) ~= 'exe' or file_name:sub(1, #file_name) ~= 'dll' then\n      return\
    \ 'No'\n   end\n   return 'Yes'\nend", "   if file_name == nil then\n      return\
    \ nil\n   end\n   local file_name = file_name:lower()\n   if #file_name < 3 then\n\
    \      return nil\n   end\n   if file_name:sub(1, 1) ~= '\\' or file_name:sub(1,\
    \ 1) ~= '.' then\n      return nil\n   end\n   if file_name:sub(2, 2) ~= '.' or\
    \ file_name:sub(2, 2) ~= 'exe' or file_name:sub(2, 2) ~= 'dll' then\n      return\
    \ nil\n   end\n   if file_name:sub(1, 1) ~= string.upper(string.sub(file_name:sub(1,\
    \ 1), 1, 1)) then\n      return nil\n   end\n   return 'Yes'\nend", "   -- Check\
    \ that the file name contains exactly one dot '.'\n   if file_name ~= nil and\
    \ file_name ~= '' then\n      if file_name:sub(1, 1) ~= '.' then\n         return\
    \ 'No'\n      end\n   end\n   -- Check that the substring before the dot should\
    \ not be empty, and it starts with a letter from the latin alphapet ('a'-'z' and\
    \ 'A'-'Z')\n   if file_name ~= nil and file_name ~= '' then\n      if file_name:sub(1,\
    \ 1) ~= '.' then\n         if file_name:sub(1, 1) ~= 'a' and file_name:sub(1,\
    \ 1) ~= 'A' then\n            return 'No'\n         end\n      end\n   end\n \
    \  -- Check that the substring after the dot should be one of these: ['txt', 'exe',\
    \ 'dll']\n   if file_name ~= nil and file_name ~= '' then\n      if file_name:sub(1,\
    \ 2) ~= 'txt' and file_name:sub(1, 2) ~= 'exe' and file_name:sub(1, 2) ~= 'dll'\
    \ then\n         return 'No'\n      end\n   end\n   return 'Yes'\nend", "   --\
    \ Check that the file name contains exactly one dot '.'\n   if file_name ~= nil\
    \ then\n      -- Get the substring before the dot\n      local file_name = file_name:sub(1,\
    \ file_name:find('%.'))\n      -- Check that the substring starts with a letter\
    \ from the latin alphabet ('a' \n      -- to 'z' and 'A' to 'Z')\n      if file_name:sub(1,\
    \ 1) ~= 'a' and file_name:sub(1, 1) ~= 'A' then\n         return 'No'\n      end\n\
    \      -- Check that the substring after the dot is one of these: ['txt', 'exe',\
    \ 'dll']\n      if file_name:sub((file_name:find('%.') + 1), (file_name:find('%.')\
    \ + 3)) ~= 'txt' and file_name:sub((file_name:find('%.') + 1), (file_name:find('%.')\
    \ + 3)) ~= 'exe' and file_name:sub((file_name:find('%.') + 1), (file_name:find('%.')\
    \ + 3)) ~= 'dll' then\n         return 'No'\n      end\n   end\n   return 'Yes'\n\
    end", "   if file_name == nil then\n      return nil\n   end\n   if string.find(file_name,\
    \ '.') ~= nil then\n      local sub_string = string.sub(file_name,1,string.find(file_name,\
    \ '.'))\n      if string.len(sub_string) == 0 then\n         return 'No'\n   \
    \   elseif string.find(sub_string, 'a') ~= nil or\n         string.find(sub_string,\
    \ 'A') ~= nil then\n         return 'No'\n      elseif string.find(sub_string,\
    \ '0') ~= nil or\n         string.find(sub_string, '9') ~= nil then\n        \
    \ return 'No'\n      else\n         return 'Yes'\n      end\n   else\n      return\
    \ 'No'\n   end\nend", "    local num_digits = string.len(file_name)\n    if num_digits\
    \ > 3 then\n        return 'No'\n    end\n    local first_letter = string.sub(file_name,\
    \ 1, 1)\n    if first_letter ~= 'a' and first_letter ~= 'A' then\n        return\
    \ 'No'\n    end\n    local dot_index = string.find(file_name, '.', 2)\n    if\
    \ dot_index == nil then\n        return 'No'\n    end\n    local dot_string =\
    \ string.sub(file_name, dot_index + 1, dot_index)\n    if dot_string ~= 'txt'\
    \ and dot_string ~= 'exe' and dot_string ~= 'dll' then\n        return 'No'\n\
    \    end\n    return 'Yes'\nend", "   -- Check that the file name contains only\
    \ digits and one dot\n   if string.find(file_name, \"%.\") ~= nil then\n     \
    \ -- Check that the file name does not contain more than three digits\n      if\
    \ string.find(file_name, \"%0\") ~= nil then\n         return 'No'\n      else\n\
    \         return 'Yes'\n      end\n   else\n      return 'No'\n   end\nend", " \
    \  local file_name = file_name:gsub('.*/','')\n   if #file_name > 3 then\n   \
    \   return 'No'\n   end\n   if #file_name == 0 then\n      return 'No'\n   end\n\
    \   if #file_name ~= 1 then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'a' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'z'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'A' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'Z' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 2) ~= 'txt' then\n      return 'No'\n   end\n\
    \   if file_name:sub(1, 2) ~= 'exe' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 2) ~= 'dll' then\n      return 'No'\n   end\n   return 'Yes'\nend", "   if file_name\
    \ == nil then\n      return nil\n   end", "    local file_name = file_name:lower()\n\
    \    local dot_index = file_name:find('.')\n    local file_name = file_name:sub(1,\
    \ dot_index)\n    local first_letter = file_name:sub(1, 1)\n    local valid_letters\
    \ = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    local valid_letters_length\
    \ = valid_letters:len()\n    local first_letter_length = first_letter:len()\n\
    \    local is_valid_letter = valid_letters:find(first_letter)\n    local is_valid_letter_length\
    \ = is_valid_letter:len()\n    local is_valid_first_letter = valid_letters:find(first_letter,\
    \ 1)\n    local is_valid_first_letter_length = is_valid_first_letter:len()\n \
    \   local is_valid_dot_index = dot_index\n    local is_valid_dot_index_length\
    \ = is_valid_dot_index:len()\n    local is_valid_dot_index = is_valid_dot_index\
    \ > 0 and is_valid_dot_index < is_valid_dot_index_length\n    local is_valid_dot_index\
    \ = is_valid_dot_index and is_valid_dot_index == is_valid_dot_index_length\n \
    \   local is_valid_dot_index = is_valid_dot_index and is_valid_dot_index == is_valid_dot_index_length\n\
    \    local is_valid_dot_index = is_valid_dot_index and is_valid_dot_index == is_valid_dot_index_length\n\
    \    local is_valid_dot_index = is_valid_dot_index and is_valid_dot_index == is_valid_dot_index_length\n\
    \    local is_valid_dot_index = is_valid_dot_index and is_valid_dot_index == is_valid_dot_index_length\n\
    \    local is_valid_dot_index = is_valid_dot_index and is_valid_dot_index == is_valid_dot_index_length\n\
    \    local is_valid_dot_index = is_valid_dot_index and is_valid_dot_index == is_valid_dot_index_length\n\
    \    local is_valid_dot_index = is_valid_dot_index and is_valid_dot_index == is_valid_dot_index_length\n\
    \    local is_valid_dot_index = is_valid_dot_index and is_valid_dot_index == is_valid_dot_index_length\n\
    \    local is_valid_dot_index = is_valid_dot_index and is_valid_dot_index == is_valid_dot_index_length\n\
    \    local is_valid_dot_index = is_valid_dot_index and is_valid_dot_index == is_valid_dot_index_length\n\
    \    local is_valid_dot_index = is_valid_dot_index and is_valid_dot_index == is_valid_dot_index_length\n\
    \    local is_valid_dot_index = is_valid_dot_index and is_valid_dot_index == is_valid_dot_index_length\n\
    \    local is_valid_dot_index = is_valid_dot_index and is_valid_dot_index == is_valid_dot_index_length\n\
    \    local is_valid_dot_index = is_valid_", "   -- Check that the file name contains\
    \ exactly one dot '.'\n   if file_name ~= nil and file_name ~= '' then\n     \
    \ -- Check that the substring before the dot is not empty\n      if file_name:sub(1,\
    \ 1) ~= '' then\n         -- Check that the substring after the dot starts with\
    \ a letter from the latin alphapet\n         if file_name:sub(1, 1) ~= 'a' and\
    \ file_name:sub(1, 1) ~= 'A' then\n            -- Check that the substring after\
    \ the dot is one of these: ['txt', 'exe', 'dll']\n            if file_name:sub(1,\
    \ 2) ~= 'txt' and file_name:sub(1, 2) ~= 'exe' and file_name:sub(1, 2) ~= 'dll'\
    \ then\n               return 'No'\n            end\n         end\n      end\n\
    \   end\n   return 'Yes'\nend", "   local file_name = file_name:gsub('%.', '')\n\
    \   if #file_name > 3 then\n      return 'No'\n   elseif #file_name == 0 then\n\
    \      return 'No'\n   elseif file_name:sub(1, 1) ~= 'a' then\n      return 'No'\n\
    \   elseif file_name:sub(1, 2) ~= 'z' then\n      return 'No'\n   elseif file_name:sub(1,\
    \ 3) ~= 'A' then\n      return 'No'\n   elseif file_name:sub(1, 4) ~= 'Z' then\n\
    \      return 'No'\n   elseif file_name:sub(1, 5) ~= 'txt' then\n      return\
    \ 'No'\n   elseif file_name:sub(1, 6) ~= 'exe' then\n      return 'No'\n   elseif\
    \ file_name:sub(1, 7) ~= 'dll' then\n      return 'No'\n   else\n      return\
    \ 'Yes'\n   end\nend", "   -- Checks if the file name contains only digits and\
    \ one dot '.'\n   if string.find(file_name, '%.') then\n      return 'No'\n  \
    \ end\n   -- Checks if the file name contains only latin alphabet letters ('a'-'z'\
    \ and 'A'-'Z')\n   if string.find(file_name, '%[a-Z]') then\n      return 'No'\n\
    \   end\n   -- Checks if the file name contains only latin alphabet letters ('a'-'z'\
    \ and 'A'-'Z')\n   if string.find(file_name, '%[A-z]') then\n      return 'No'\n\
    \   end\n   -- Checks if the file name contains only latin alphabet letters ('a'-'z'\
    \ and 'A'-'Z')\n   if string.find(file_name, '%[A-z]') then\n      return 'No'\n\
    \   end\n   -- Checks if the file name contains only latin alphabet letters ('a'-'z'\
    \ and 'A'-'Z')\n   if string.find(file_name, '%[A-z]') then\n      return 'No'\n\
    \   end\n   -- Checks if the file name contains only latin alphabet letters ('a'-'z'\
    \ and 'A'-'Z')\n   if string.find(file_name, '%[A-z]') then\n      return 'No'\n\
    \   end\n   -- Checks if the file name contains only latin alphabet letters ('a'-'z'\
    \ and 'A'-'Z')\n   if string.find(file_name, '%[A-z]') then\n      return 'No'\n\
    \   end\n   -- Checks if the file name contains only latin alphabet letters ('a'-'z'\
    \ and 'A'-'Z')\n   if string.find(file_name, '%[A-z]') then\n      return 'No'\n\
    \   end\n   -- Checks if the file name contains only latin alphabet letters ('a'-'z'\
    \ and 'A'-'Z')\n   if string.find(file_name, '%[A-z]') then\n      return 'No'\n\
    \   end\n   -- Checks if the file name contains only latin alphabet letters ('a'-'z'\
    \ and 'A'-'Z')\n   if string.find(file_name, '%[A-z]') then\n      return 'No'\n\
    \   end\n   -- Checks if the file name contains only latin alphabet letters ('a'-'z'\
    \ and 'A'-'Z')\n   if string.find(file_name, '%[A-z]') then\n      return 'No'\n\
    \   end\n   -- Checks if the file name contains only latin alphabet letters ('a'-'z'\
    \ and 'A'-'Z')\n   if string.find(file_name, '%", "    local file_name = file_name:gsub('%w+%.',\
    \ '')\n    local file_name = file_name:gsub('.+%w+%.', '')\n    local file_name\
    \ = file_name:gsub('%w+%.+', '')\n    local file_name = file_name:gsub('.+%w+%.+',\
    \ '')\n    local file_name = file_name:gsub('%w+%.+%w+%.+', '')\n    local file_name\
    \ = file_name:gsub('.+%w+%.+%w+%.+', '')\n    local file_name = file_name:gsub('%w+%.+%w+%.+%w+%.+',\
    \ '')\n    local file_name = file_name:gsub('%w+%.+%w+%.+%w+%.+%w+%.+', '')\n\
    \    local file_name = file_name:gsub('%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+',\
    \ '')\n    local file_name = file_name:gsub('%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+',\
    \ '')\n    local file_name = file_name:gsub('%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+',\
    \ '')\n    local file_name = file_name:gsub('%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+',\
    \ '')\n    local file_name = file_name:gsub('%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+',\
    \ '')\n    local file_name = file_name:gsub('%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+',\
    \ '')\n    local file_name = file_name:gsub('%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+%w+%.+",
  "   -- Check that the file name contains exactly one dot '.'\n   if file_name ~=\
    \ nil then\n      -- Get the substring before the dot\n      local file_name =\
    \  file_name:sub(1, file_name:find('%.'))\n      -- Check that the substring starts\
    \ with a letter from the latin alphapet ('a'-'z' and 'A'-'Z')\n      if file_name:sub(1,\
    \ 1) ~= 'a' and file_name:sub(1, 1) ~= 'A' then\n         return 'No'\n      end\n\
    \      -- Check that the substring after the dot is one of these: ['txt', 'exe',\
    \ 'dll']\n      if file_name:sub((file_name:find('%.') + 1), (file_name:find('%.')\
    \ + 4)) ~= 'txt' and file_name:sub((file_name:find('%.') + 1), (file_name:find('%.')\
    \ + 4)) ~= 'exe' and file_name:sub((file_name:find('%.') + 1), (file_name:find('%.')\
    \ + 4)) ~= 'dll' then\n         return 'No'\n      end\n   end\n   return 'Yes'\n\
    end", "    local file_name = file_name:gsub('.', '') -- Remove any dots in the\
    \ name\n    local file_name = file_name:gsub('[^0-9a-zA-Z]', '') -- Remove any\
    \ non-alphanumeric characters\n    local file_name = file_name:gsub('^[^a-zA-Z]',\
    \ '') -- Remove any non-alphanumeric characters at the beginning\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z]$', '') -- Remove any non-alphanumeric characters\
    \ at the end\n    local file_name = file_name:gsub('^[^a-zA-Z]', '') -- Remove\
    \ any non-alphanumeric characters at the beginning\n    local file_name = file_name:gsub('[^a-zA-Z]$',\
    \ '') -- Remove any non-alphanumeric characters at the end\n    local file_name\
    \ = file_name:gsub('^[^a-zA-Z]', '') -- Remove any non-alphanumeric characters\
    \ at the beginning\n    local file_name = file_name:gsub('[^a-zA-Z]$', '') --\
    \ Remove any non-alphanumeric characters at the end\n    local file_name = file_name:gsub('^[^a-zA-Z]',\
    \ '') -- Remove any non-alphanumeric characters at the beginning\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z]$', '') -- Remove any non-alphanumeric characters\
    \ at the end\n    local file_name = file_name:gsub('^[^a-zA-Z]', '') -- Remove\
    \ any non-alphanumeric characters at the beginning\n    local file_name = file_name:gsub('[^a-zA-Z]$',\
    \ '') -- Remove any non-alphanumeric characters at the end\n    local file_name\
    \ = file_name:gsub('^[^a-zA-Z]', '') -- Remove any non-alphanumeric characters\
    \ at the beginning\n    local file_name = file_name:gsub('[^a-zA-Z]$', '') --\
    \ Remove any non-alphanumeric characters at the end\n    local file_name = file_name:gsub('^[^a-zA-Z]',\
    \ '') -- Remove any non-alphanumeric characters at the beginning\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z]$', '') -- Remove any non-alphanumeric characters\
    \ at the end\n    local file_name = file_name:gsub('^[^a-zA-Z]', '') -- Remove\
    \ any non-alphanumeric characters at the beginning\n    local file_name = file_name:gsub('[^a-zA-Z]$',\
    \ '') -- Remove any non-alphanumeric characters at the end\n    local file_name\
    \ = file_name:gsub('^[^a-zA-Z]', '') -- Remove any non-alphanumeric characters\
    \ at the beginning\n    local file_name = file_name:gsub('[^a-zA-Z]$', '') --\
    \ Remove any non-alphanumeric characters at the end\n    local file_name = file_name:gsub('^[^a-zA-Z",
  "   if file_name == nil then\n      return nil\n   end\n   if string.len(file_name)\
    \ <= 3 then\n      return nil\n   end\n   if string.sub(file_name,1,1) ~= '^'\
    \ then\n      return nil\n   end\n   if string.sub(file_name,1,1) ~= 'a' then\n\
    \      return nil\n   end\n   if string.sub(file_name,1,1) ~= 'z' then\n     \
    \ return nil\n   end\n   if string.sub(file_name,1,1) ~= 'A' then\n      return\
    \ nil\n   end\n   if string.sub(file_name,1,1) ~= 'Z' then\n      return nil\n\
    \   end\n   if string.sub(file_name,2,1) ~= '.' then\n      return nil\n   end\n\
    \   if string.sub(file_name,3,1) ~= 'txt' then\n      return nil\n   end\n   if\
    \ string.sub(file_name,3,1) ~= 'exe' then\n      return nil\n   end\n   if string.sub(file_name,3,1)\
    \ ~= 'dll' then\n      return nil\n   end\n   return 'Yes'\nend", "   if file_name\
    \ == nil then\n      return nil\n   end\n   if string.len(file_name) > 3 then\n\
    \      return nil\n   end\n   if string.find(file_name, \".\") then\n      return\
    \ nil\n   end\n   if string.sub(file_name,1,1) ~= 'a' then\n      return nil\n\
    \   end\n   if string.sub(file_name,1,1) ~= 'z' then\n      return nil\n   end\n\
    \   if string.sub(file_name,1,1) ~= 'A' then\n      return nil\n   end\n   if\
    \ string.sub(file_name,1,1) ~= 'Z' then\n      return nil\n   end\n   if string.find(file_name,\
    \ \".txt\") then\n      return \"Yes\"\n   end\n   if string.find(file_name, \"\
    .exe\") then\n      return \"Yes\"\n   end\n   if string.find(file_name, \".dll\"\
    ) then\n      return \"Yes\"\n   end\n   return \"No\"\nend", "   if #file_name\
    \ > 3 then\n      return 'No'\n   end\n   if #file_name == 0 then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\\\' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= '.' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= string.lower(string.sub(file_name:sub(1, 2), 1, 1))\
    \ then\n      return 'No'\n   end\n   if string.find(file_name:sub(2, #file_name),\
    \ 'exe') ~= nil then\n      return 'No'\n   end\n   if string.find(file_name:sub(2,\
    \ #file_name), 'dll') ~= nil then\n      return 'No'\n   end\n   return 'Yes'\n\
    end", "   -- Check that the file name contains exactly one dot '.'\n   if file_name\
    \ == nil then\n      return 'No'\n   end\n   -- Check that the file name contains\
    \ exactly one dot '.'\n   if #file_name ~= 1 then\n      return 'No'\n   end\n\
    \   -- Check that the substring before the dot should not be empty, and it starts\
    \ with a letter \n   -- from the latin alphapet ('a'-'z' and 'A'-'Z')\n   if file_name:sub(1,\
    \ 1) ~= '.' then\n      return 'No'\n   end\n   -- Check that the substring after\
    \ the dot should be one of these: ['txt', 'exe', 'dll']\n   if #{'txt', 'exe',\
    \ 'dll'} ~= #file_name:sub(1, #file_name) then\n      return 'No'\n   end\n  \
    \ return 'Yes'\nend", "   if file_name == nil then\n      return nil\n   end\n\
    \   if #file_name < 3 then\n      return nil\n   end\n   if file_name:sub(1, 1)\
    \ ~= '-' then\n      return nil\n   end\n   if file_name:sub(1, 2) ~= '-' then\n\
    \      return nil\n   end\n   if file_name:sub(1, 3) ~= '-' then\n      return\
    \ nil\n   end\n   if file_name:sub(1, 4) ~= '.' then\n      return nil\n   end\n\
    \   if file_name:sub(1, 5) ~= '.' then\n      return nil\n   end\n   if file_name:sub(1,\
    \ 6) ~= '.' then\n      return nil\n   end\n   if file_name:sub(1, 7) ~= '.' then\n\
    \      return nil\n   end\n   if file_name:sub(1, 8) ~= '.' then\n      return\
    \ nil\n   end\n   if file_name:sub(1, 9) ~= '.' then\n      return nil\n   end\n\
    \   if file_name:sub(1, 10) ~= '.' then\n      return nil\n   end\n   if file_name:sub(1,\
    \ 11) ~= '.' then\n      return nil\n   end\n   if file_name:sub(1, 12) ~= '.'\
    \ then\n      return nil\n   end\n   if file_name:sub(1, 13) ~= '.' then\n   \
    \   return nil\n   end\n   if file_name:sub(1, 14) ~= '.' then\n      return nil\n\
    \   end\n   if file_name:sub(1, 15) ~= '.' then\n      return nil\n   end\n  \
    \ if file_name:sub(1, 16) ~= '.' then\n      return nil\n   end\n   if file_name:sub(1,\
    \ 17) ~= '.' then\n      return nil\n   end\n   if file_name:sub(1, 18) ~= '.'\
    \ then\n      return nil\n   end\n   if file_name:sub(1, 19) ~= '.' then\n   \
    \   return nil\n   end\n   if file_name:sub(1, 20) ~= '.' then\n      return nil\n\
    \   end\n   if file_name:sub(1, 21) ~= '.' then\n      return nil\n   end\n  \
    \ if file_name:sub(1, 22) ~= '.' then\n      return nil\n   end\n   if file_name:sub(1,\
    \ 23) ~= '.' then\n      return nil\n   end\n   if file_name:sub(1, 24) ~= '.'\
    \ then\n      return nil\n   end\n   if file_name:sub(1, 25) ~= '.' ", "   if\
    \ file_name == nil then\n      return nil\n   end", "   if file_name == nil then\n\
    \      return nil\n   end\n   if #file_name < 3 then\n      return nil\n   end\n\
    \   if string.find(file_name, '.') ~= 1 then\n      return nil\n   end\n   if\
    \ string.sub(file_name,1,1) ~= 'a' then\n      return nil\n   end\n   if string.sub(file_name,1,1)\
    \ ~= 'z' then\n      return nil\n   end\n   if string.sub(file_name,1,1) ~= 'A'\
    \ then\n      return nil\n   end\n   if string.sub(file_name,1,1) ~= 'Z' then\n\
    \      return nil\n   end\n   if string.find(file_name, '.') ~= 1 then\n     \
    \ return nil\n   end\n   if string.find(file_name, '.') ~= 1 then\n      return\
    \ nil\n   end\n   if string.find(file_name, '.') ~= 1 then\n      return nil\n\
    \   end\n   if string.find(file_name, '.') ~= 1 then\n      return nil\n   end\n\
    \   return 'Yes'\nend", "   if string.find(file_name, \"..\") then\n      return\
    \ \"No\"\n   end\n   if string.find(file_name, \".\") then\n      local first_dot\
    \ = string.find(file_name, \".\")\n      local last_dot = string.find(file_name,\
    \ \".\", first_dot + 1)\n      if last_dot == nil then\n         return \"No\"\
    \n      else\n         if string.sub(file_name,1,first_dot) ~= string.sub(file_name,first_dot,first_dot-1)\
    \ then\n            return \"No\"\n         end\n         if string.sub(file_name,last_dot,last_dot+1)\
    \ ~= string.sub(file_name,last_dot+1,last_dot+3) then\n            return \"No\"\
    \n         end\n      end\n   end\n   if string.find(file_name, \"^[a-Z]\") then\n\
    \      return \"No\"\n   end\n   return \"Yes\"\nend", "    local num_digits =\
    \ string.gsub(file_name, '^%d+', '') -- Remove all digits from the string\n  \
    \  local num_dots = string.gsub(num_digits, '%.', '') -- Remove all dots from\
    \ the string\n    local num_letters = string.gsub(num_dots, '%.', '') -- Remove\
    \ all letters from the string\n    local num_letters_before_dot = string.gsub(num_letters,\
    \ '%.', '') -- Remove all letters from the string\n    local num_letters_after_dot\
    \ = string.gsub(num_letters, '%.', '') -- Remove all letters from the string\n\
    \    local num_letters_before_dot_is_letter = string.gsub(num_letters_before_dot,\
    \ '%.', '') -- Remove all letters from the string\n    local num_letters_after_dot_is_letter\
    \ = string.gsub(num_letters_after_dot, '%.', '') -- Remove all letters from the\
    \ string\n    local num_letters_before_dot_is_letter = string.gsub(num_letters_before_dot_is_letter,\
    \ '%.', '') -- Remove all letters from the string\n    local num_letters_after_dot_is_letter\
    \ = string.gsub(num_letters_after_dot_is_letter, '%.', '') -- Remove all letters\
    \ from the string\n    local num_letters_before_dot_is_letter = string.gsub(num_letters_before_dot_is_letter,\
    \ '%.', '') -- Remove all letters from the string\n    local num_letters_after_dot_is_letter\
    \ = string.gsub(num_letters_after_dot_is_letter, '%.', '') -- Remove all letters\
    \ from the string\n    local num_letters_before_dot_is_letter = string.gsub(num_letters_before_dot_is_letter,\
    \ '%.', '') -- Remove all letters from the string\n    local num_letters_after_dot_is_letter\
    \ = string.gsub(num_letters_after_dot_is_letter, '%.', '') -- Remove all letters\
    \ from the string\n    local num_letters_before_dot_is_letter = string.gsub(num_letters_before_dot_is_letter,\
    \ '%.', '') -- Remove all letters from the string\n    local num_letters_after_dot_is_letter\
    \ = string.gsub(num_letters_after_dot_is_letter, '%.', '') -- Remove all letters\
    \ from the string\n    local num_letters_before_dot_is_letter = string.gsub(num_letters_before_dot_is_letter,\
    \ '%.', '') -- Remove all letters from the string\n    local num_letters_after_dot_is_letter\
    \ = string.gsub(num_letters_after_dot_is_letter, '%.', '') -- Remove all letters\
    \ from the string\n    local num_letters_before_dot_is_letter = string.gsub(num_letters_before_dot_is_letter,\
    \ '%.', '') -- Remove all letters from the string\n", "   -- Check if file name\
    \ contains only digits and one dot.\n   if string.find(file_name, '%D') then\n\
    \      return 'No'\n   end", "   -- Check that the file name contains exactly\
    \ one dot '.'\n   if string.find(file_name, \".\") ~= nil then\n      -- Check\
    \ that the substring before the dot should not be empty, and it starts with \n\
    \      -- a letter from the latin alphapet ('a'-'z' and 'A'-'Z')\n      if string.sub(file_name,1,1)\
    \ ~= \"\" then\n         if string.sub(file_name,1,1) ~= string.sub(file_name,1,1)\
    \ then\n            return nil\n         end\n      end\n      -- Check that the\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n    \
    \  if string.find(file_name, \"exe\") ~= nil then\n         if string.find(file_name,\
    \ \"dll\") ~= nil then\n            return nil\n         end\n      end\n   end\n\
    \   -- Check that the file's name contains exactly three digits ('0'-'9')\n  \
    \ if string.find(file_name, \".\") ~= nil then\n      -- Check that the file's\
    \ name contains exactly three digits ('0'-'9')\n      if string.find(file_name,\
    \ \".\") ~= nil then\n         if string.find(file_name, \".\") ~= nil then\n\
    \            return nil\n         end\n      end\n   end\n   -- Check that the\
    \ file's name contains exactly three digits ('0'-'9')\n   if string.find(file_name,\
    \ \".\") ~= nil then\n      -- Check that the file's name contains exactly three\
    \ digits ('0'-'9')\n      if string.find(file_name, \".\") ~= nil then\n     \
    \    if string.find(file_name, \".\") ~= nil then\n            return nil\n  \
    \       end\n      end\n   end\n   -- Check that the file's name contains exactly\
    \ three digits ('0'-'9')\n   if string.find(file_name, \".\") ~= nil then\n  \
    \    -- Check that the file's name contains exactly three digits ('0'-'9')\n \
    \     if string.find(file_name, \".\") ~= nil then\n         if string.find(file_name,\
    \ \".\") ~= nil then\n            return nil\n         end\n      end\n   end\n\
    \   -- Check that the file's name contains exactly three digits ('0'-'9')\n  \
    \ if string.find(file_name, \".\") ~= nil then\n      -- Check that the file's\
    \ name contains exactly three digits ('0'-'9')\n      if string.find(file_name,\
    \ \".\") ~= nil then\n         if string.find(file_name, \".\") ~= nil then\n\
    \            return nil\n         end\n      end\n   end\n   -- Check that the\
    \ file", "   if file_name == nil then\n      return nil\n   end\n   if string.len(file_name)\
    \ <= 3 then\n      return 'No'\n   end\n   if string.sub(file_name, 1, 1) ~= 'a'\
    \ then\n      return 'No'\n   end\n   if string.sub(file_name, 1, 2) ~= 'z' then\n\
    \      return 'No'\n   end\n   if string.sub(file_name, 1, 3) ~= 'A' then\n  \
    \    return 'No'\n   end\n   if string.sub(file_name, string.len(file_name) -\
    \ 1, string.len(file_name)) ~= 'exe' then\n      return 'No'\n   end\n   return\
    \ 'Yes'\nend", "  local file_name = file_name:gsub('.*/','')\n  local file_name\
    \ = file_name:gsub('%.','')\n  local file_name = file_name:gsub('^[%w]','')\n\
    \  local file_name = file_name:gsub('%.$','')\n  local file_name = file_name:gsub('%.','')\n\
    \  local file_name = file_name:gsub('^%[%w]','')\n  local file_name = file_name:gsub('%%.$','')\n\
    \  local file_name = file_name:gsub('%%.','')\n  local file_name = file_name:gsub('^%[%w]','')\n\
    \  local file_name = file_name:gsub('%%.$','')\n  local file_name = file_name:gsub('%%.','')\n\
    \  local file_name = file_name:gsub('^%[%w]','')\n  local file_name = file_name:gsub('%%.$','')\n\
    \  local file_name = file_name:gsub('%%.','')\n  local file_name = file_name:gsub('^%[%w]','')\n\
    \  local file_name = file_name:gsub('%%.$','')\n  local file_name = file_name:gsub('%%.','')\n\
    \  local file_name = file_name:gsub('^%[%w]','')\n  local file_name = file_name:gsub('%%.$','')\n\
    \  local file_name = file_name:gsub('%%.','')\n  local file_name = file_name:gsub('^%[%w]','')\n\
    \  local file_name = file_name:gsub('%%.$','')\n  local file_name = file_name:gsub('%%.','')\n\
    \  local file_name = file_name:gsub('^%[%w]','')\n  local file_name = file_name:gsub('%%.$','')\n\
    \  local file_name = file_name:gsub('%%.','')\n  local file_name = file_name:gsub('^%[%w]','')\n\
    \  local file_name = file_name:gsub('%%.$','')\n  local file_name = file_name:gsub('%%.','')\n\
    \  local file_name = file_name:gsub('^%[%w]','')\n  local file_name = file_name:gsub('%%.$','')\n\
    \  local file_name = file_name:gsub('%%.','')\n  local file_name = file_name:gsub('^%[%w]','')\n\
    \  local file_name = file_name:gsub('%%.$", "   local result = true\n   if #file_name\
    \ > 3 then\n      result = false\n   elseif #file_name == 0 then\n      result\
    \ = false\n   elseif #file_name ~= 1 then\n      result = false\n   elseif file_name:sub(1,\
    \ 1) ~= '0' then\n      result = false\n   elseif file_name:sub(1, 1) ~= '9' then\n\
    \      result = false\n   elseif file_name:sub(1, 2) ~= '.' then\n      result\
    \ = false\n   elseif file_name:sub(1, 3) ~= '' then\n      result = false\n  \
    \ elseif file_name:sub(1, 3) ~= 'exe' then\n      result = false\n   elseif file_name:sub(1,\
    \ 3) ~= 'dll' then\n      result = false\n   else\n      result = true\n   end\n\
    \   return result\nend", "    local file_name = file_name:gsub('.*/','')\n   \
    \ local file_name = file_name:gsub('%.','')\n    local file_name = file_name:gsub('^%[A-z]','')\n\
    \    local file_name = file_name:gsub('%[A-z]$','')\n    local file_name = file_name:gsub('%.%.%.%','')\n\
    \    local file_name = file_name:gsub('%.%.%','')\n    local file_name = file_name:gsub('%.%','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('%$','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('%','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('%','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('%','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('%','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('%','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('%','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('%','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('%','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('%','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('%','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('%','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('%','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('%','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('%','')\n\
    \    local file_name = file_name:gsub('%','')\n    local ", "   if file_name ==\
    \ nil then\n      return nil\n   end\n   if #file_name > 3 then\n      return\
    \ nil\n   end\n   if #file_name < 1 then\n      return nil\n   end\n   if file_name:sub(1,\
    \ 1) ~= '-' then\n      return nil\n   end\n   if file_name:sub(1, 1) ~= '0' then\n\
    \      return nil\n   end\n   if file_name:sub(1, 1) ~= '9' then\n      return\
    \ nil\n   end\n   if file_name:sub(1, 1) ~= '.' then\n      return nil\n   end\n\
    \   if file_name:sub(1, 1) ~= 'a' then\n      return nil\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'z' then\n      return nil\n   end\n   if file_name:sub(1, 1) ~= 'A' then\n\
    \      return nil\n   end\n   if file_name:sub(1, 1) ~= 'Z' then\n      return\
    \ nil\n   end\n   if file_name:sub(1, 2) ~= '.' then\n      return nil\n   end\n\
    \   if file_name:sub(1, 2) ~= 'txt' then\n      return nil\n   end\n   if file_name:sub(1,\
    \ 2) ~= 'exe' then\n      return nil\n   end\n   if file_name:sub(1, 2) ~= 'dll'\
    \ then\n      return nil\n   end\n   return 'Yes'\nend", "   if #file_name > 3\
    \ then\n      return 'No'\n   end\n   if #file_name == 0 then\n      return 'No'\n\
    \   end\n   if #file_name ~= 1 then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '0' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '9'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 2) ~= '.' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 3) ~= '' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 3) ~= 'exe' then\n      return 'No'\n   end\n\
    \   if file_name:sub(1, 3) ~= 'dll' then\n      return 'No'\n   end\n   return\
    \ 'Yes'\nend", "    local file_name = file_name:lower()\n    local dot_index =\
    \ file_name:find('.')\n    if dot_index == nil then\n        return 'No'\n   \
    \ end\n    local sub_string = file_name:sub(1, dot_index)\n    if sub_string:match('^[a-z_]+$')\
    \ == nil then\n        return 'No'\n    end\n    if sub_string:match('%^0[%-]?%d+$')\
    \ ~= nil then\n        return 'No'\n    end\n    return 'Yes'\nend", "   if string.find(file_name,\
    \ \"..\") then\n      return 'No'\n   end\n   if string.find(file_name, \".\"\
    ) then\n      if string.find(file_name, \"..\") then\n         return 'No'\n \
    \     end\n      local first_letter = string.sub(file_name, 1, 1)\n      local\
    \ last_letter = string.sub(file_name, string.len(file_name) - 1, 1)\n      if\
    \ string.find(first_letter, \"a\") then\n         if string.find(last_letter,\
    \ \"z\") then\n            return 'Yes'\n         else\n            return 'No'\n\
    \         end\n      elseif string.find(first_letter, \"A\") then\n         if\
    \ string.find(last_letter, \"Z\") then\n            return 'Yes'\n         else\n\
    \            return 'No'\n         end\n      else\n         return 'No'\n   \
    \   end\n   else\n      return 'No'\n   end\nend", "   -- Check if file name contains\
    \ only digits and one dot '.'\n   if string.find(file_name, '%w+%.') then\n  \
    \    -- Check if file name starts with latin letter\n      if string.find(file_name,\
    \ '%w+') then\n         -- Check if file name contains only latin letters and\
    \ one dot '.'\n         if string.find(file_name, '%w+%.') then\n            --\
    \ Check if file name contains only latin letters and one dot '.'\n           \
    \ if string.find(file_name, '%w+%.') then\n               return 'Yes'\n     \
    \       else\n               return 'No'\n            end\n         else\n   \
    \         return 'No'\n         end\n      else\n         return 'No'\n      end\n\
    \   else\n      return 'No'\n   end\nend", "   if #file_name > 3 then\n      return\
    \ 'No'\n   end\n   if #file_name == 0 then\n      return 'No'\n   end\n   if #file_name\
    \ ~= 1 then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '0' then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '9' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 2) ~= '.' then\n      return 'No'\n   end\n\
    \   if file_name:sub(1, 3) ~= '' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 3) ~= 'a' then\n      return 'No'\n   end\n   if file_name:sub(1, 3) ~= 'z'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 3) ~= 'A' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 3) ~= 'Z' then\n      return 'No'\n\
    \   end\n   return 'Yes'\nend", "    local file_name = file_name:gsub('.*/','')\n\
    \    local file_name = file_name:gsub('[^0-9]','')\n    local file_name = file_name:gsub('^','')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z]','')\n    local file_name = file_name:gsub('.','')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z.]','')\n    local file_name =\
    \ file_name:gsub('[^a-zA-Z0-9]','')\n    local file_name = file_name:gsub('[^a-zA-Z0-9.]','')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z0-9.-]','')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z0-9.-]','')\n    local file_name = file_name:gsub('[^a-zA-Z0-9.-]','')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z0-9.-]','')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z0-9.-]','')\n    local file_name = file_name:gsub('[^a-zA-Z0-9.-]','')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z0-9.-]','')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z0-9.-]','')\n    local file_name = file_name:gsub('[^a-zA-Z0-9.-]','')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z0-9.-]','')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z0-9.-]','')\n    local file_name = file_name:gsub('[^a-zA-Z0-9.-]','')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z0-9.-]','')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z0-9.-]','')\n    local file_name = file_name:gsub('[^a-zA-Z0-9.-]','')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z0-9.-]','')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z0-9.-]','')\n    local file_name = file_name:gsub('[^a-zA-Z0-9.-]','')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z0-9.-]','')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z0-9.-]','')\n    local file_name = file_name:gsub('[^a-zA-Z0-9.-]','')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z0-9.-]','')\n", "   if file_name\
    \ == nil then\n      return nil\n   end\n   if #file_name > 3 then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\' or file_name:sub(1, 1) ~= '.'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= string.byte(string.sub(file_name:sub(1,\
    \ 2), 1, 1)) then\n      return 'No'\n   end\n   if string.find(file_name:sub(2,\
    \ #file_name), '[') ~= nil then\n      return 'No'\n   end\n   return 'Yes'\n\
    end", "   -- Check that the file name contains exactly one dot '.'\n   if file_name\
    \ == nil then\n      return 'No'\n   end\n   -- Check that the substring before\
    \ the dot is not empty\n   if string.sub(file_name,1,1) ~= '' then\n      return\
    \ 'No'\n   end\n   -- Check that the substring after the dot is one of these:\
    \ ['txt', 'exe', 'dll']\n   if string.sub(file_name,string.len(file_name),string.len(file_name))\
    \ ~= 'txt' then\n      return 'No'\n   end\n   if string.sub(file_name,string.len(file_name),string.len(file_name))\
    \ ~= 'exe' then\n      return 'No'\n   end\n   if string.sub(file_name,string.len(file_name),string.len(file_name))\
    \ ~= 'dll' then\n      return 'No'\n   end\n   -- Check that the file's name contains\
    \ only digits and '0'-'9'\n   if string.find(file_name,'[^0-9]') then\n      return\
    \ 'No'\n   end\n   -- Check that the file's name starts with a letter from the\
    \ latin alphabet ('a'-'z' and 'A'-'Z')\n   if string.find(file_name,'^[%aA]')\
    \ then\n      return 'No'\n   end\n   -- Check that the file's name does not start\
    \ with a digit\n   if string.find(file_name,'^[0-9]') then\n      return 'No'\n\
    \   end\n   -- Check that the file's name does not start with a letter\n   if\
    \ string.find(file_name,'^[%aA]') then\n      return 'No'\n   end\n   -- Check\
    \ that the file's name does not start with a letter\n   if string.find(file_name,'^[0-9]')\
    \ then\n      return 'No'\n   end\n   -- Check that the file's name does not start\
    \ with a letter\n   if string.find(file_name,'^[%aA]') then\n      return 'No'\n\
    \   end\n   -- Check that the file's name does not start with a letter\n   if\
    \ string.find(file_name,'^[0-9]') then\n      return 'No'\n   end\n   -- Check\
    \ that the file's name does not start with a letter\n   if string.find(file_name,'^[%aA]')\
    \ then\n      return 'No'\n   end\n   -- Check that the file's name does not start\
    \ with a letter\n   if string.find(file_name,'^[0-9]') then\n      return 'No'\n\
    \   end\n   -- Check that the file's name does not start with a letter\n   if\
    \ string.find(file_name,'^[%aA]') then\n      return 'No'\n   end\n   -- Check\
    \ that the file's name does not start with a ", "   if file_name == nil then\n\
    \      return nil\n   end\n   local file_name = file_name:lower()\n   if #file_name\
    \ == 0 then\n      return nil\n   end\n   if file_name:sub(1, 1) ~= '\\' then\n\
    \      return nil\n   end\n   if file_name:sub(1, 1) ~= '\\\\' then\n      return\
    \ nil\n   end\n   if file_name:sub(2, 2) ~= '\\\\' then\n      return nil\n  \
    \ end\n   if file_name:sub(1, 1) ~= 'a' then\n      return nil\n   end\n   if\
    \ file_name:sub(1, 1) ~= 'z' then\n      return nil\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'A' then\n      return nil\n   end\n   if file_name:sub(1, 1) ~= 'Z' then\n\
    \      return nil\n   end\n   if file_name:sub(1, 1) ~= '0' then\n      return\
    \ nil\n   end\n   if file_name:sub(1, 1) ~= '9' then\n      return nil\n   end\n\
    \   if file_name:sub(1, 1) ~= '.' then\n      return nil\n   end\n   if file_name:sub(1,\
    \ 2) ~= '' then\n      return nil\n   end\n   if file_name:sub(1, 2) ~= 'exe'\
    \ then\n      return nil\n   end\n   if file_name:sub(1, 2) ~= 'dll' then\n  \
    \    return nil\n   end\n   return 'Yes'\nend", "   if #file_name > 3 then\n \
    \     return 'No'\n   end\n   if #file_name == 0 then\n      return 'No'\n   end\n\
    \   if file_name:sub(1, 1) ~= '.' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'a' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'z'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'A' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'Z' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 2) ~= '.' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 2) ~= 'txt' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 2) ~= 'exe' then\n      return 'No'\n   end\n   if file_name:sub(1, 2) ~= 'dll'\
    \ then\n      return 'No'\n   end\n   return 'Yes'\nend", "   if #file_name >\
    \ 3 then\n      return 'No'\n   end\n   if #file_name == 0 then\n      return\
    \ 'No'\n   end\n   if #file_name ~= 1 then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '.' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'a'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'z' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'A' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'Z' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 2) ~= '.' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 2) ~= 'txt' then\n      return 'No'\n   end\n   if file_name:sub(1, 2) ~= 'exe'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 2) ~= 'dll' then\n \
    \     return 'No'\n   end\n   return 'Yes'\nend", "  -- Check that the file name\
    \ contains exactly one dot '.'\n  if string.find(file_name, '.') then\n    --\
    \ Check that the substring before the dot is not empty, and it starts with a letter\
    \ \n    -- from the latin alphapet ('a'-'z' and 'A'-'Z')\n    if string.sub(file_name,1,1)\
    \ ~= 'a' and string.sub(file_name,1,1) ~= 'A' then\n      return 'No'\n    end\n\
    \    -- Check that the substring after the dot is one of these: ['txt', 'exe',\
    \ 'dll']\n    if string.find(file_name, 'exe') then\n      return 'Yes'\n    end\n\
    \    return 'No'\n  end\n  return 'No'\nend", "   if file_name == nil then\n \
    \     return nil\n   end\n   if #file_name < 3 then\n      return nil\n   end\n\
    \   if file_name:sub(1, 1) ~= '0' then\n      return nil\n   end\n   if file_name:sub(1,\
    \ 1) ~= '9' then\n      return nil\n   end\n   if file_name:sub(1, 2) ~= '.' then\n\
    \      return nil\n   end\n   if file_name:sub(1, 3) ~= '' then\n      return\
    \ nil\n   end\n   if file_name:sub(1, 3) ~= '_' then\n      return nil\n   end\n\
    \   if file_name:sub(1, 4) ~= '_' then\n      return nil\n   end\n   if file_name:sub(1,\
    \ 5) ~= '_' then\n      return nil\n   end\n   if file_name:sub(1, 6) ~= '_' then\n\
    \      return nil\n   end\n   if file_name:sub(1, 7) ~= '_' then\n      return\
    \ nil\n   end\n   if file_name:sub(1, 8) ~= '_' then\n      return nil\n   end\n\
    \   if file_name:sub(1, 9) ~= '_' then\n      return nil\n   end\n   return 'Yes'\n\
    end", "    local num_digits = string.len(file_name) - string.len(string.sub(file_name,1,1))\n\
    \    if num_digits > 3 then\n        return 'No'\n    end\n    local dot_index\
    \ = string.find(file_name, '.')\n    if dot_index == nil then\n        return\
    \ 'No'\n    end\n    local first_letter = string.sub(file_name,1,1)\n    if string.len(first_letter)\
    \ > 1 then\n        return 'No'\n    end\n    if string.find(first_letter, 'a')\
    \ == nil then\n        return 'No'\n    end\n    if string.find(first_letter,\
    \ 'A') == nil then\n        return 'No'\n    end\n    local extensions = { ['txt']\
    \ = true, ['exe'] = true, ['dll'] = true }\n    if extensions[file_name] then\n\
    \        return 'Yes'\n    end\nend", "   if string.find(file_name, '.') ~= nil\
    \ then\n      if string.find(file_name, '.') ~= 1 then\n         return 'No'\n\
    \      end\n      local sub_string = string.sub(file_name, 1, string.find(file_name,\
    \ '.'))\n      if string.find(sub_string, '.') ~= nil then\n         return 'No'\n\
    \      end\n      if string.find(sub_string, 'a' .. 'z' .. 'A' .. 'Z') ~= nil\
    \ then\n         return 'No'\n      end\n   end\n   return 'Yes'\nend", "  --\
    \ Check that the file name contains exactly one dot '.'\n  if file_name ~= nil\
    \ and file_name ~= '' then\n    if string.find(file_name, '.') ~= nil then\n \
    \     -- Check that the substring before the dot should not be empty, and it starts\
    \ with \n      -- a letter from the latin alphapet ('a'-'z' and 'A'-'Z')\n   \
    \   if string.sub(file_name,1,1) ~= nil and string.sub(file_name,1,1) ~= '' then\n\
    \        -- Check that the substring after the dot should be one of these: ['txt',\
    \ 'exe', 'dll']\n        if string.find(string.sub(file_name,2,string.len(file_name)),\
    \ 'txt') ~= nil or\n            string.find(string.sub(file_name,2,string.len(file_name)),\
    \ 'exe') ~= nil or\n            string.find(string.sub(file_name,2,string.len(file_name)),\
    \ 'dll') ~= nil then\n          return 'Yes'\n        else\n          return 'No'\n\
    \        end\n      else\n        return 'No'\n      end\n    else\n      return\
    \ 'No'\n    end\n  else\n    return 'No'\n  end\nend", "   -- Check that the file\
    \ name contains only digits and one dot\n   if string.find(file_name, \".\") ~=\
    \ nil then\n      -- Check that the file name contains only digits and one dot\n\
    \      if string.find(file_name, \".\") ~= nil then\n         -- Check that the\
    \ substring before the dot is not empty\n         if string.sub(file_name,1,1)\
    \ ~= \"\" then\n            -- Check that the substring before the dot starts\
    \ with a letter from the latin alphabet\n            if string.sub(file_name,1,1)\
    \ ~= string.sub(string.sub(file_name,1,1),1,1) then\n               -- Check that\
    \ the substring after the dot is one of these\n               if string.find(string.sub(file_name,string.find(file_name,\"\
    .\")+1),\"txt\") ~= nil then\n                  if string.find(string.sub(file_name,string.find(file_name,\"\
    .\")+1),\"exe\") ~= nil then\n                     if string.find(string.sub(file_name,string.find(file_name,\"\
    .\")+1),\"dll\") ~= nil then\n                        -- Return Yes\n        \
    \                return \"Yes\"\n                     else\n                 \
    \       -- Return No\n                        return \"No\"\n                \
    \     end\n                  else\n                     -- Return No\n       \
    \                 return \"No\"\n                  end\n               else\n\
    \                  -- Return No\n                  return \"No\"\n           \
    \    end\n            else\n               -- Return No\n               return\
    \ \"No\"\n            end\n         else\n            -- Return No\n         \
    \   return \"No\"\n         end\n      else\n         -- Return No\n         return\
    \ \"No\"\n      end\n   else\n      -- Return No\n      return \"No\"\n   end\n\
    end", "   if #file_name > 3 then\n      return 'No'\n   end\n   if #file_name\
    \ == 0 then\n      return 'No'\n   end\n   if #file_name ~= 1 then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '.' then\n      return 'No'\n   end\n\
    \   if file_name:sub(1, 1) ~= 'a' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'z' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'A'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'Z' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(2, 1) ~= 'txt' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(2, 1) ~= 'exe' then\n      return 'No'\n \
    \  end\n   if file_name:sub(2, 1) ~= 'dll' then\n      return 'No'\n   end\n \
    \  return 'Yes'\nend", "   local file_name = file_name:gsub('.', '') -- Remove\
    \ all dots from the string\n   local file_name = file_name:gsub('[^0-9a-zA-Z]',\
    \ '') -- Remove all non-alphanumeric characters\n   local file_name = file_name:gsub('^[^a-zA-Z]',\
    \ '') -- Remove all non-alphanumeric characters from the beginning\n   local file_name\
    \ = file_name:gsub('[^a-zA-Z]$', '') -- Remove all non-alphanumeric characters\
    \ from the end\n   local file_name = file_name:gsub('^[^a-zA-Z]', '') -- Remove\
    \ all non-alphanumeric characters from the beginning\n   local file_name = file_name:gsub('[^a-zA-Z]$',\
    \ '') -- Remove all non-alphanumeric characters from the end\n   local file_name\
    \ = file_name:gsub('^[^a-zA-Z]', '') -- Remove all non-alphanumeric characters\
    \ from the beginning\n   local file_name = file_name:gsub('[^a-zA-Z]$', '') --\
    \ Remove all non-alphanumeric characters from the end\n   local file_name = file_name:gsub('^[^a-zA-Z]',\
    \ '') -- Remove all non-alphanumeric characters from the beginning\n   local file_name\
    \ = file_name:gsub('[^a-zA-Z]$', '') -- Remove all non-alphanumeric characters\
    \ from the end\n   local file_name = file_name:gsub('^[^a-zA-Z]', '') -- Remove\
    \ all non-alphanumeric characters from the beginning\n   local file_name = file_name:gsub('[^a-zA-Z]$',\
    \ '') -- Remove all non-alphanumeric characters from the end\n   local file_name\
    \ = file_name:gsub('^[^a-zA-Z]', '') -- Remove all non-alphanumeric characters\
    \ from the beginning\n   local file_name = file_name:gsub('[^a-zA-Z]$', '') --\
    \ Remove all non-alphanumeric characters from the end\n   local file_name = file_name:gsub('^[^a-zA-Z]',\
    \ '') -- Remove all non-alphanumeric characters from the beginning\n   local file_name\
    \ = file_name:gsub('[^a-zA-Z]$', '') -- Remove all non-alphanumeric characters\
    \ from the end\n   local file_name = file_name:gsub('^[^a-zA-Z]', '') -- Remove\
    \ all non-alphanumeric characters from the beginning\n   local file_name = file_name:gsub('[^a-zA-Z]$',\
    \ '') -- Remove all non-alphanumeric characters from the end\n   local file_name\
    \ = file_name:gsub('^[^a-zA-Z]', '') -- Remove all non-alphanumeric characters\
    \ from the beginning\n   local file_name = file_name:gsub('[^a-zA-Z]$', '') --\
    \ Remove all non-alphanumeric characters from the end\n   local file_name = file_name:gsub('^[^a-zA-Z",
  "  -- Check that the file name contains exactly one dot '.'\n  if file_name ~= nil\
    \ then\n    if string.find(file_name, \".\") ~= nil then\n      -- Check that\
    \ the substring before the dot should not be empty, and it starts with a letter\
    \ from the latin alphapet ('a'-'z' and 'A'-'Z')\n      if string.sub(file_name,1,1)\
    \ ~= \"\" then\n        -- Check that the substring after the dot should be one\
    \ of these: ['txt', 'exe', 'dll']\n        if string.find(string.lower(string.sub(file_name,1,string.find(file_name,\"\
    .\"))),\"exe\") ~= nil then\n          return \"Yes\"\n        elseif string.find(string.lower(string.sub(file_name,1,string.find(file_name,\"\
    .\"))),\"dll\") ~= nil then\n          return \"Yes\"\n        else\n        \
    \  return \"No\"\n        end\n      else\n        return \"No\"\n      end\n\
    \    else\n      return \"No\"\n    end\n  else\n    return \"No\"\n  end\nend",
  "   -- Check that the file name contains exactly one dot '.'\n   if file_name ~=\
    \ nil then\n      if string.find(file_name, \".\") ~= nil then\n         -- Check\
    \ that the substring before the dot should not be empty, and it starts with a\
    \ letter from the latin alphapet ('a'-'z' and 'A'-'Z')\n         if string.sub(file_name,1,1)\
    \ ~= nil then\n            if string.sub(file_name,1,1) ~= string.sub(file_name,1,1)\
    \ then\n               if string.sub(file_name,1,1) ~= string.sub(file_name,1,1)\
    \ then\n                  if string.sub(file_name,1,1) ~= string.sub(file_name,1,1)\
    \ then\n                     if string.sub(file_name,1,1) ~= string.sub(file_name,1,1)\
    \ then\n                        -- Check that the substring after the dot should\
    \ be one of these: ['txt', 'exe', 'dll']\n                        if string.find(file_name,\
    \ \"exe\") ~= nil then\n                           return 'Yes'\n            \
    \            elseif string.find(file_name, \"dll\") ~= nil then\n            \
    \               return 'Yes'\n                        elseif string.find(file_name,\
    \ \"txt\") ~= nil then\n                           return 'Yes'\n            \
    \            else\n                           return 'No'\n                  \
    \      end\n                     else\n                        -- Check that the\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n    \
    \                    if string.find(file_name, \"exe\") ~= nil then\n        \
    \                   return 'No'\n                        elseif string.find(file_name,\
    \ \"dll\") ~= nil then\n                           return 'No'\n             \
    \           elseif string.find(file_name, \"txt\") ~= nil then\n             \
    \              return 'No'\n                        else\n                   \
    \        return 'No'\n                        end\n                     end\n\
    \                  end\n               end\n            end\n         end\n  \
    \    end\n   end\nend", "   local num_digits = string.len(file_name)\n   if num_digits\
    \ > 3 then\n      return 'No'\n   end\n   local first_char = string.sub(file_name,\
    \ 1, 1)\n   if first_char ~= 'a' and first_char ~= 'A' then\n      return 'No'\n\
    \   end\n   local last_char = string.sub(file_name, string.len(file_name) - 1,\
    \ 1)\n   if last_char ~= 'a' and last_char ~= 'A' then\n      return 'No'\n  \
    \ end\n   local dot_index = string.find(file_name, '.')\n   if dot_index == nil\
    \ then\n      return 'No'\n   end\n   local dot_string = string.sub(file_name,\
    \ 1, dot_index)\n   if dot_string ~= '.' then\n      return 'No'\n   end\n   local\
    \ dot_string_length = string.len(dot_string)\n   if dot_string_length == 1 then\n\
    \      return 'No'\n   end\n   if dot_string_length > 1 then\n      return 'No'\n\
    \   end\n   if string.sub(dot_string, 1, 1) ~= 'a' and string.sub(dot_string,\
    \ 1, 1) ~= 'A' then\n      return 'No'\n   end\n   if string.sub(dot_string, dot_string_length\
    \ - 1, 1) ~= 'a' and string.sub(dot_string, dot_string_length - 1, 1) ~= 'A' then\n\
    \      return 'No'\n   end\n   return 'Yes'\nend", "    local file_name = file_name:lower()\n\
    \    local dot_index = file_name:find('.')\n    if dot_index == nil then\n   \
    \     return 'No'\n    end\n    local file_name = file_name:sub(1, dot_index)\n\
    \    local first_letter = file_name:sub(1, 1)\n    if first_letter ~= 'a' and\
    \ first_letter ~= 'A' then\n        return 'No'\n    end\n    local last_letter\
    \ = file_name:sub((dot_index + 1), (#file_name))\n    if last_letter ~= '.' and\
    \ last_letter ~= 'txt' and last_letter ~= 'exe' and last_letter ~= 'dll' then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "   -- Check that the file\
    \ name contains exactly one dot '.'\n   if file_name ~= nil and file_name ~= ''\
    \ then\n      if file_name:sub(1, 1) ~= '.' then\n         return 'No'\n     \
    \ end\n   end\n   -- Check that the file's name starts with a letter from the\
    \ latin alphapet ('a'-'z' and 'A'-'Z')\n   if file_name ~= nil and file_name ~=\
    \ '' then\n      if file_name:sub(1, 1) ~= string.upper(string.sub(file_name:sub(1,\
    \ 1), 1, 1)) then\n         return 'No'\n      end\n   end\n   -- Check that the\
    \ file's name contains only 'txt', 'exe', 'dll'\n   if file_name ~= nil and file_name\
    \ ~= '' then\n      if string.find(file_name, 'exe') ~= nil then\n         return\
    \ 'No'\n      end\n      if string.find(file_name, 'dll') ~= nil then\n      \
    \   return 'No'\n      end\n      if string.find(file_name, 'txt') ~= nil then\n\
    \         return 'Yes'\n      end\n   end\nend", "   if #file_name > 3 then\n\
    \      return 'No'\n   end\n   if #file_name == 0 then\n      return 'No'\n  \
    \ end\n   if #file_name ~= 1 then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '.' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'a'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'z' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'A' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'Z' then\n      return 'No'\n   end\n  \
    \ return 'Yes'\nend", "   -- Check that the file name contains exactly one dot\
    \ '.'\n   if file_name ~= nil then\n      if string.find(file_name, \".\") ~=\
    \ nil then\n         -- Check that the substring before the dot is not empty,\
    \ and it starts with a letter from the latin alphapet ('a'-'z' and 'A'-'Z')\n\
    \         if string.find(file_name, \".\", 1, 1) ~= nil then\n            -- Check\
    \ that the substring after the dot is one of these: ['txt', 'exe', 'dll']\n  \
    \          if string.find(file_name, \".\", 1, 2) ~= nil then\n              \
    \ if string.find(file_name, \".\", 1, 3) ~= nil then\n                  if string.find(file_name,\
    \ \".\", 1, 4) ~= nil then\n                     if string.find(file_name, \"\
    .\", 1, 5) ~= nil then\n                        if string.find(file_name, \".\"\
    , 1, 6) ~= nil then\n                           if string.find(file_name, \".\"\
    , 1, 7) ~= nil then\n                              if string.find(file_name, \"\
    .\", 1, 8) ~= nil then\n                                 if string.find(file_name,\
    \ \".\", 1, 9) ~= nil then\n                                    if string.find(file_name,\
    \ \".\", 1, 10) ~= nil then\n                                       if string.find(file_name,\
    \ \".\", 1, 11) ~= nil then\n                                          if string.find(file_name,\
    \ \".\", 1, 12) ~= nil then\n                                             if string.find(file_name,\
    \ \".\", 1, 13) ~= nil then\n                                                if\
    \ string.find(file_name, \".\", 1, 14) ~= nil then\n                         \
    \                          if string.find(file_name, \".\", 1, 15) ~= nil then\n\
    \                                                      if string.find(file_name,\
    \ \".\", 1, 16) ~= nil then\n                                                \
    \         return 'Yes'\n                                                     \
    \ end\n                                                   end\n              \
    \                                  end\n                                     \
    \        end\n                                        end\n                  \
    \                   end\n                                  end\n             \
    \                  end\n                           end\n                     \
    \   end\n                     end\n                  end\n               end\n\
    \            end\n         end\n      end\n   end\n   return 'No'\nend", "   if\
    \ #file_name > 3 then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~=\
    \ '\\.' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= string.lower('z')\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= string.lower('a')\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= string.lower('A')\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= string.lower('0')\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= string.lower('9')\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '.' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 2) ~= string.lower('txt') then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 2) ~= string.lower('exe') then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 2) ~= string.lower('dll') then\n\
    \      return 'No'\n   end\n   return 'Yes'\nend", "   -- Check that the file\
    \ name contains exactly one dot '.'\n   if file_name ~= nil then\n      -- Get\
    \ the substring before the dot\n      local file_name = string.sub(file_name,1,string.find(file_name,'.')-1)\n\
    \      -- Check that it starts with a letter from the latin alphapet ('a'-'z'\
    \ and 'A'-'Z')\n      if string.find(file_name,'^[%a%z]') ~= nil then\n      \
    \   -- Check that it contains exactly three digits ('0'-'9')\n         if string.find(file_name,'^[0-9][0-9][0-9]')\
    \ ~= nil then\n            -- Return Yes if the file's name is valid\n       \
    \     return 'Yes'\n         else\n            -- Return No if the file's name\
    \ is invalid\n            return 'No'\n         end\n      else\n         -- Return\
    \ No if the file's name is invalid\n         return 'No'\n      end\n   else\n\
    \      -- Return No if the file's name is invalid\n      return 'No'\n   end\n\
    end", "   if #file_name > 3 then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '\\.' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= string.upper(string.sub(file_name:sub(1,\
    \ 1), 1, 1)) then\n      return 'No'\n   end\n   if #file_name ~= 1 then\n   \
    \   return 'No'\n   end\n   if file_name:sub(2, 3) ~= '.txt' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(2, 3) ~= '.exe' then\n      return 'No'\n\
    \   end\n   if file_name:sub(2, 3) ~= '.dll' then\n      return 'No'\n   end\n\
    \   return 'Yes'\nend", "    local file_name = file_name:lower()\n    local dot_index\
    \ = file_name:find('.')\n    local dot_string = file_name:sub(1, dot_index)\n\
    \    local dot_string_length = #dot_string\n    local dot_string_first_letter\
    \ = string.sub(dot_string, 1, 1)\n    local dot_string_last_letter = string.sub(dot_string,\
    \ dot_string_length-1, 1)\n    local dot_string_first_letter_uppercase = string.upper(dot_string_first_letter)\n\
    \    local dot_string_last_letter_uppercase = string.upper(dot_string_last_letter)\n\
    \    local dot_string_first_letter_lowercase = string.lower(dot_string_first_letter)\n\
    \    local dot_string_last_letter_lowercase = string.lower(dot_string_last_letter)\n\
    \    local dot_string_first_letter_not_empty = string.len(dot_string_first_letter)\
    \ > 0\n    local dot_string_last_letter_not_empty = string.len(dot_string_last_letter)\
    \ > 0\n    local dot_string_first_letter_not_empty = string.len(dot_string_first_letter)\
    \ > 0\n    local dot_string_last_letter_not_empty = string.len(dot_string_last_letter)\
    \ > 0\n    local dot_string_first_letter_not_empty = string.len(dot_string_first_letter)\
    \ > 0\n    local dot_string_last_letter_not_empty = string.len(dot_string_last_letter)\
    \ > 0\n    local dot_string_first_letter_not_empty = string.len(dot_string_first_letter)\
    \ > 0\n    local dot_string_last_letter_not_empty = string.len(dot_string_last_letter)\
    \ > 0\n    local dot_string_first_letter_not_empty = string.len(dot_string_first_letter)\
    \ > 0\n    local dot_string_last_letter_not_empty = string.len(dot_string_last_letter)\
    \ > 0\n    local dot_string_first_letter_not_empty = string.len(dot_string_first_letter)\
    \ > 0\n    local dot_string_last_letter_not_empty = string.len(dot_string_last_letter)\
    \ > 0\n    local dot_string_first_letter_not_empty = string.len(dot_string_first_letter)\
    \ > 0\n    local dot_string_last_letter_not_empty = string.len(dot_string_last_letter)\
    \ > 0\n    local dot_string_first_letter_not_empty = string.len(dot_string_first_letter)\
    \ > 0\n    local dot_string_last_letter_not_empty = string.len(dot_string_last_letter)\
    \ > 0\n    local dot_string_first_letter_not_empty = string.len(dot_string_first_letter)\
    \ > 0\n    local dot_string_last_letter_not_empty = string.len(dot_string_last_letter)\
    \ > 0\n    local dot_string_first_letter_not_empty = string.len(dot_string_first_letter)\
    \ > 0\n    local dot_string_last_letter_not_empty = string.len(dot_string_last_letter)\
    \ > 0\n    local dot_string_first_letter_not_empty = string.len(dot_string_first_letter)\
    \ > 0\n    local dot_string_last_letter_not_empty = string.len(dot_string_last_letter)\
    \ > 0\n    local dot_string_first_", "   if file_name == nil then\n      return\
    \ nil\n   end\n   if string.len(file_name) <= 3 then\n      return nil\n   end\n\
    \   if string.sub(file_name, 1, 1) ~= 'a' then\n      return nil\n   end\n   if\
    \ string.sub(file_name, 1, 1) ~= 'z' then\n      return nil\n   end\n   if string.sub(file_name,\
    \ 1, 1) ~= 'A' then\n      return nil\n   end\n   if string.sub(file_name, 1,\
    \ 1) ~= 'Z' then\n      return nil\n   end\n   if string.sub(file_name, string.len(file_name)\
    \ - 1, string.len(file_name)) ~= 'txt' then\n      return nil\n   end\n   if string.sub(file_name,\
    \ string.len(file_name) - 1, string.len(file_name)) ~= 'exe' then\n      return\
    \ nil\n   end\n   if string.sub(file_name, string.len(file_name) - 1, string.len(file_name))\
    \ ~= 'dll' then\n      return nil\n   end\n   return 'Yes'\nend", "    local num_digits\
    \ = string.len(file_name)\n    if num_digits > 3 then\n        return 'No'\n \
    \   end\n    local first_char = string.sub(file_name, 1, 1)\n    if first_char\
    \ ~= 'a' and first_char ~= 'A' and first_char ~= '0' then\n        return 'No'\n\
    \    end\n    local dot_index = string.find(file_name, '.')\n    if dot_index\
    \ == nil then\n        return 'No'\n    end\n    local extension = string.sub(file_name,\
    \ dot_index + 1, string.len(file_name))\n    if extension ~= 'txt' and extension\
    \ ~= 'exe' and extension ~= 'dll' then\n        return 'No'\n    end\n    return\
    \ 'Yes'\nend", "   local file_name = file_name:lower()\n   if #file_name > 3 then\n\
    \      return nil\n   end\n   if file_name ~= file_name then\n      return nil\n\
    \   end\n   if file_name:sub(1, 1) ~= '~' then\n      return nil\n   end\n   if\
    \ file_name:sub(1, 1) ~= '~' then\n      return nil\n   end\n   if file_name:sub(1,\
    \ 1) ~= '~' then\n      return nil\n   end\n   if file_name:sub(1, 1) ~= '~' then\n\
    \      return nil\n   end\n   if file_name:sub(1, 1) ~= '~' then\n      return\
    \ nil\n   end\n   if file_name:sub(1, 1) ~= '~' then\n      return nil\n   end\n\
    \   if file_name:sub(1, 1) ~= '~' then\n      return nil\n   end\n   if file_name:sub(1,\
    \ 1) ~= '~' then\n      return nil\n   end\n   if file_name:sub(1, 1) ~= '~' then\n\
    \      return nil\n   end\n   if file_name:sub(1, 1) ~= '~' then\n      return\
    \ nil\n   end\n   if file_name:sub(1, 1) ~= '~' then\n      return nil\n   end\n\
    \   if file_name:sub(1, 1) ~= '~' then\n      return nil\n   end\n   if file_name:sub(1,\
    \ 1) ~= '~' then\n      return nil\n   end\n   if file_name:sub(1, 1) ~= '~' then\n\
    \      return nil\n   end\n   if file_name:sub(1, 1) ~= '~' then\n      return\
    \ nil\n   end\n   if file_name:sub(1, 1) ~= '~' then\n      return nil\n   end\n\
    \   if file_name:sub(1, 1) ~= '~' then\n      return nil\n   end\n   if file_name:sub(1,\
    \ 1) ~= '~' then\n      return nil\n   end\n   if file_name:sub(1, 1) ~= '~' then\n\
    \      return nil\n   end\n   if file_name:sub(1, 1) ~= '~' then\n      return\
    \ nil\n   end\n   if file_name:sub(1, 1) ~= '~' then\n      return nil\n   end\n\
    \   if file_name:sub(1, 1) ~= '~' then\n      return nil\n   end\n   if file_name:sub(1,\
    \ 1) ~= '~' then\n      return nil\n   end\n   if file_name:sub(1, 1) ~= '~' then\n\
    \      return nil\n   end\n   if file_name:sub(1, 1) ~= '~' then\n      return\
    \ nil\n   ", "    local file_name = file_name:gsub('%.', '')\n    local file_name\
    \ = file_name:gsub('.[%w]', '')\n    local file_name = file_name:gsub('%w+', '')\n\
    \    local file_name = file_name:gsub('^%w+', '')\n    local file_name = file_name:gsub('%w+$',\
    \ '')\n    local file_name = file_name:gsub('%w+%.', '')\n    local file_name\
    \ = file_name:gsub('%w+%.[%w]', '')\n    local file_name = file_name:gsub('%w+%.[%w]',\
    \ '')\n    local file_name = file_name:gsub('%w+%.[%w]', '')\n    local file_name\
    \ = file_name:gsub('%w+%.[%w]', '')\n    local file_name = file_name:gsub('%w+%.[%w]',\
    \ '')\n    local file_name = file_name:gsub('%w+%.[%w]', '')\n    local file_name\
    \ = file_name:gsub('%w+%.[%w]', '')\n    local file_name = file_name:gsub('%w+%.[%w]',\
    \ '')\n    local file_name = file_name:gsub('%w+%.[%w]', '')\n    local file_name\
    \ = file_name:gsub('%w+%.[%w]', '')\n    local file_name = file_name:gsub('%w+%.[%w]',\
    \ '')\n    local file_name = file_name:gsub('%w+%.[%w]', '')\n    local file_name\
    \ = file_name:gsub('%w+%.[%w]', '')\n    local file_name = file_name:gsub('%w+%.[%w]',\
    \ '')\n    local file_name = file_name:gsub('%w+%.[%w]', '')\n    local file_name\
    \ = file_name:gsub('%w+%.[%w]', '')\n    local file_name = file_name:gsub('%w+%.[%w]',\
    \ '')\n    local file_name = file_name:gsub('%w+%.[%w]', '')\n    local file_name\
    \ = file_name:gsub('%w+%.[%w]', '')\n    local file_name = file_name:gsub('%w+%.[%w]',\
    \ '')\n    local file_name = file_name:gsub('%w+%.[%w]', '')\n    local file_name\
    \ = file_name:gsub('%w+%.[%w]', '')\n    local file_name = file_name:gsub('%w+%.[%w]',\
    \ '')\n    local file_name = file_name:gsub('%w+%.[%w]', '')", "   if file_name\
    \ == nil then\n      return 'No'\n   end\n   if #file_name > 3 then\n      return\
    \ 'No'\n   end\n   if file_name ~= file_name:sub(1, #file_name) then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, #file_name) ~= '' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, #file_name:sub(1, #file_name)) ~= 'a' then\n \
    \     return 'No'\n   end\n   if file_name:sub(1, #file_name:sub(1, #file_name))\
    \ ~= 'z' then\n      return 'No'\n   end\n   if file_name:sub(1, #file_name:sub(1,\
    \ #file_name)) ~= 'A' then\n      return 'No'\n   end\n   return 'Yes'\nend",
  "   if #file_name > 3 then\n      return 'No'\n   end\n   if #file_name == 0 then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\\\' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= '-' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= '_' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'a' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'b'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'c' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'd' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'e' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= 'f' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'g' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'h'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'i' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'j' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'k' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= 'l' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'm' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'n'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'o' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'p' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'q' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= 'r' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 's' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 't'\
    \ then\n      return 'No'\n   end\n   if file_name", "   if file_name == nil then\n\
    \      return nil\n   end\n   if #file_name > 3 then\n      return nil\n   end\n\
    \   if file_name ~= string.sub(file_name, 1, 3) then\n      return nil\n   end\n\
    \   if string.sub(file_name, 1, 1) ~= 'a' then\n      return nil\n   end\n   if\
    \ string.sub(file_name, 1, 1) ~= 'z' then\n      return nil\n   end\n   if string.sub(file_name,\
    \ 1, 1) ~= 'A' then\n      return nil\n   end\n   if string.sub(file_name, 1,\
    \ 1) ~= 'Z' then\n      return nil\n   end\n   if string.sub(file_name, 1, 4)\
    \ ~= '.' then\n      return nil\n   end\n   if string.sub(file_name, 1, 4) ~=\
    \ 'exe' then\n      return nil\n   end\n   if string.sub(file_name, 1, 4) ~= 'dll'\
    \ then\n      return nil\n   end\n   return 'Yes'\nend", "  -- Check if file name\
    \ contains only digits and one dot '.'\n  if string.find(file_name, '%w+%.') then\n\
    \    return 'No'\n  end\n  -- Check if file name contains only digits and one\
    \ dot '.'\n  if string.find(file_name, '%w+%.') then\n    return 'No'\n  end\n\
    \  -- Check if file name contains only digits and one dot '.'\n  if string.find(file_name,\
    \ '%w+%.') then\n    return 'No'\n  end\n  -- Check if file name contains only\
    \ digits and one dot '.'\n  if string.find(file_name, '%w+%.') then\n    return\
    \ 'No'\n  end\n  -- Check if file name contains only digits and one dot '.'\n\
    \  if string.find(file_name, '%w+%.') then\n    return 'No'\n  end\n  -- Check\
    \ if file name contains only digits and one dot '.'\n  if string.find(file_name,\
    \ '%w+%.') then\n    return 'No'\n  end\n  -- Check if file name contains only\
    \ digits and one dot '.'\n  if string.find(file_name, '%w+%.') then\n    return\
    \ 'No'\n  end\n  -- Check if file name contains only digits and one dot '.'\n\
    \  if string.find(file_name, '%w+%.') then\n    return 'No'\n  end\n  -- Check\
    \ if file name contains only digits and one dot '.'\n  if string.find(file_name,\
    \ '%w+%.') then\n    return 'No'\n  end\n  -- Check if file name contains only\
    \ digits and one dot '.'\n  if string.find(file_name, '%w+%.') then\n    return\
    \ 'No'\n  end\n  -- Check if file name contains only digits and one dot '.'\n\
    \  if string.find(file_name, '%w+%.') then\n    return 'No'\n  end\n  -- Check\
    \ if file name contains only digits and one dot '.'\n  if string.find(file_name,\
    \ '%w+%.') then\n    return 'No'\n  end\n  -- Check if file name contains only\
    \ digits and one dot '.'\n  if string.find(file_name, '%w+%.') then\n    return\
    \ 'No'\n  end\n  -- Check if file name contains only digits and one dot '.'\n\
    \  if string.find(file_name, '%w+%.') then\n    return 'No'\n  end\n  -- Check\
    \ if file name contains only digits and one dot '.'\n  if string.find(file_name,\
    \ '%w+%.') then\n    return 'No'\n  end\n  -- Check if file name contains only\
    \ digits and one dot '.'\n  if string.find(file_name, '%w+%.') then\n    return\
    \ 'No'\n  end\n  -- Check if file name contains only digits and one dot '.'\n\
    \  if string.find(file_name, '%w+%.') then\n    return 'No'\n  end\n  -- ", " \
    \   local file_name = file_name:gsub('.*/','')\n    local file_name = file_name:gsub('%.%.%.%-','')\n\
    \    local file_name = file_name:gsub('%.%.%.%','')\n    local file_name = file_name:gsub('%.%.%','')\n\
    \    local file_name = file_name:gsub('%.%','')\n    local file_name = file_name:gsub('%','')\n\
    \    local file_name = file_name:gsub('-','')\n    local file_name = file_name:gsub('%-','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('%-','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('-','')\n\
    \    local file_name = file_name:gsub('%-','')\n    local file_name = file_name:gsub('%','')\n\
    \    local file_name = file_name:gsub('-','')\n    local file_name = file_name:gsub('%-','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('-','')\n\
    \    local file_name = file_name:gsub('%-','')\n    local file_name = file_name:gsub('%','')\n\
    \    local file_name = file_name:gsub('-','')\n    local file_name = file_name:gsub('%-','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('-','')\n\
    \    local file_name = file_name:gsub('%-','')\n    local file_name = file_name:gsub('%','')\n\
    \    local file_name = file_name:gsub('-','')\n    local file_name = file_name:gsub('%-','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('-','')\n\
    \    local file_name = file_name:gsub('%-','')\n    local file_name = file_name:gsub('%','')\n\
    \    local file_name = file_name:gsub('-','')\n    local file_name = file_name:gsub('%-','')\n\
    \    local file_name = file_name:gsub('%','')\n    local file_name = file_name:gsub('-','')\n\
    \    local file_name = file_name:gsub('%-','')\n    local file_name = file_name:gsub('%','')\n\
    \    local file_name = file_name:g", "   -- Check that the file name contains\
    \ exactly one dot '.'\n   if file_name ~= nil then\n      if string.find(file_name,\
    \ \".\") then\n         -- Check that the substring before the dot should not\
    \ be empty, and it starts with a letter from the latin alphapet ('a'-'z' and 'A'-'Z')\n\
    \         if string.find(file_name, \".\", 1, 1) then\n            -- Check that\
    \ the substring after the dot should be one of these: ['txt', 'exe', 'dll']\n\
    \            if string.find(file_name, \".\", 1, 2) then\n               if string.find(file_name,\
    \ \".\", 1, 3) then\n                  return 'Yes'\n               else\n   \
    \               return 'No'\n               end\n            else\n          \
    \     return 'No'\n            end\n         else\n            return 'No'\n \
    \        end\n      else\n         return 'No'\n      end\n   else\n      return\
    \ 'No'\n   end\nend", "   if file_name == nil then\n      return 'No'\n   end\n\
    \   if #file_name < 3 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.') then\n      return 'No'\n   end\n   if string.sub(file_name,1,1) ~= 'a'\
    \ then\n      return 'No'\n   end\n   if string.sub(file_name,2,1) ~= 'z' then\n\
    \      return 'No'\n   end\n   if string.sub(file_name,1,2) ~= 'A' then\n    \
    \  return 'No'\n   end\n   if string.sub(file_name,2,2) ~= 'Z' then\n      return\
    \ 'No'\n   end\n   return 'Yes'\nend", "    local file_name = file_name:lower()\n\
    \    local file_name = file_name:gsub('%w+%.', '')\n    local file_name = file_name:gsub('.+%w+%.',\
    \ '')\n    local file_name = file_name:gsub('.+%w+', '')\n    local file_name\
    \ = file_name:gsub('%w+', '')\n    local file_name = file_name:gsub('%w+%.', '')\n\
    \    local file_name = file_name:gsub('.+%w+%.', '')\n    local file_name = file_name:gsub('.+%w+',\
    \ '')\n    local file_name = file_name:gsub('%w+', '')\n    local file_name =\
    \ file_name:gsub('%w+%.', '')\n    local file_name = file_name:gsub('.+%w+%.',\
    \ '')\n    local file_name = file_name:gsub('.+%w+', '')\n    local file_name\
    \ = file_name:gsub('%w+', '')\n    local file_name = file_name:gsub('%w+%.', '')\n\
    \    local file_name = file_name:gsub('.+%w+%.', '')\n    local file_name = file_name:gsub('.+%w+',\
    \ '')\n    local file_name = file_name:gsub('%w+', '')\n    local file_name =\
    \ file_name:gsub('%w+%.', '')\n    local file_name = file_name:gsub('.+%w+%.',\
    \ '')\n    local file_name = file_name:gsub('.+%w+', '')\n    local file_name\
    \ = file_name:gsub('%w+', '')\n    local file_name = file_name:gsub('%w+%.', '')\n\
    \    local file_name = file_name:gsub('.+%w+%.', '')\n    local file_name = file_name:gsub('.+%w+',\
    \ '')\n    local file_name = file_name:gsub('%w+', '')\n    local file_name =\
    \ file_name:gsub('%w+%.', '')\n    local file_name = file_name:gsub('.+%w+%.',\
    \ '')\n    local file_name = file_name:gsub('.+%w+', '')\n    local file_name\
    \ = file_name:gsub('%w+', '')\n    local file_name = file_name:gsub('%w+%.', '')\n\
    \    local file_name = file_name:gsub('.+%w+%.', '')\n    local file_name = file_name:gsub('.+%w+',\
    \ '')\n    local file_name = file_name:gsub('%w+', '')\n    local file_name =\
    \ file_name:gsub('%w+%.', '')\n    local file_name = file_name:gsub('.+%w+%.',\
    \ '')\n    local file_name = file_name:gsub('.+%w+', '')\n    local file_name\
    \ = file_name:gsub('%w+', '')\n", "   -- Check that the file name contains exactly\
    \ one dot '.'\n   if string.find(file_name, \".\") ~= nil then\n      -- Check\
    \ that the substring before the dot should not be empty, and it starts with a\
    \ letter from the latin alphapet ('a'-'z' and 'A'-'Z')\n      if string.sub(file_name,1,1)\
    \ ~= \"\" then\n         if string.sub(file_name,1,1) ~= string.sub(file_name,1,1)\
    \ then\n            -- Check that the substring after the dot should be one of\
    \ these: ['txt', 'exe', 'dll']\n            if string.find(file_name, \".\") ~=\
    \ nil then\n               if string.find(file_name, \".\") ~= nil then\n    \
    \              if string.find(file_name, \".\") ~= nil then\n                \
    \     return \"No\"\n                  else\n                     return \"Yes\"\
    \n                  end\n               else\n                  return \"Yes\"\
    \n               end\n            else\n               return \"Yes\"\n      \
    \      end\n         else\n            return \"Yes\"\n         end\n      else\n\
    \         return \"Yes\"\n      end\n   else\n      return \"Yes\"\n   end\nend",
  "   -- Check that the file name contains exactly one dot '.'\n   if file_name ~=\
    \ nil then\n      if string.find(file_name, \".\") ~= nil then\n         -- Check\
    \ that the substring before the dot should not be empty, and it starts with a\
    \ letter from the latin alphapet ('a'-'z' and 'A'-'Z')\n         if string.find(file_name,\
    \ \".\", 1, true) ~= nil then\n            if string.find(file_name, \".\", 1,\
    \ true) ~= nil then\n               if string.find(file_name, \".\", 1, true)\
    \ ~= nil then\n                  if string.find(file_name, \".\", 1, true) ~=\
    \ nil then\n                     -- Check that the substring after the dot should\
    \ be one of these: ['txt', 'exe', 'dll']\n                     if string.find(file_name,\
    \ \".\", 1, true) ~= nil then\n                        if string.find(file_name,\
    \ \".\", 1, true) ~= nil then\n                           if string.find(file_name,\
    \ \".\", 1, true) ~= nil then\n                              if string.find(file_name,\
    \ \".\", 1, true) ~= nil then\n                                 return 'Yes'\n\
    \                              end\n                           end\n         \
    \               end\n                     end\n                  end\n       \
    \        end\n            end\n         end\n      end\n   end\n   return 'No'\n\
    end", "   local file_name = file_name:gsub('%w+%.', '')\n   local file_name =\
    \ file_name:gsub('.{3,}', '')\n   local file_name = file_name:gsub('^[^A-Za-z]',\
    \ '')\n   local file_name = file_name:gsub('[^A-Za-z]$', '')\n   if file_name\
    \ ~= '' and file_name ~= nil then\n      local file_name = file_name:lower()\n\
    \      if file_name:match('^[0-9][0-9][0-9]') then\n         return 'No'\n   \
    \   elseif file_name:match('^[0-9][0-9]') then\n         return 'No'\n      elseif\
    \ file_name:match('^[0-9]') then\n         return 'No'\n      elseif file_name:match('^[a-z]')\
    \ then\n         return 'No'\n      elseif file_name:match('^[A-Za-z]') then\n\
    \         return 'No'\n      elseif file_name:match('^[a-z][a-z]') then\n    \
    \     return 'No'\n      elseif file_name:match('^[A-Za-z][A-Za-z]') then\n  \
    \       return 'No'\n      elseif file_name:match('^[a-z][A-Za-z][a-z]') then\n\
    \         return 'No'\n      elseif file_name:match('^[A-Za-z][a-z][A-Za-z]')\
    \ then\n         return 'No'\n      elseif file_name:match('^[a-z][A-Za-z][A-Za-z][a-z]')\
    \ then\n         return 'No'\n      elseif file_name:match('^[A-Za-z][a-z][a-z][A-Za-z]')\
    \ then\n         return 'No'\n      elseif file_name:match('^[a-z][a-z][A-Za-z][A-Za-z][a-z]')\
    \ then\n         return 'No'\n      elseif file_name:match('^[A-Za-z][a-z][a-z][a-z][A-Za-z]')\
    \ then\n         return 'No'\n      elseif file_name:match('^[a-z][a-z][a-z][A-Za-z][A-Za-z][a-z]')\
    \ then\n         return 'No'\n      elseif file_name:match('^[A-Za-z][a-z][a-z][a-z][a-z][A-Za-z]')\
    \ then\n         return 'No'\n      elseif file_name:match('^[a-z][a-z][a-z][a-z][A-Za-z][A-Za-z][a-z]')\
    \ then\n         return 'No'\n      elseif file_name:match('^[A-Za-z][a-z][a-z][a-z][a-z][a-z][A-Za-z]')\
    \ then\n         return 'No'\n      elseif file_name:match('^[a-z][a-z][a-z][a-z][a-z][",
  "    local file_name = file_name:gsub('%w+%.', '')\n    local file_name = file_name:gsub('.{0,3}',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name\
    \ = file_name:gsub('^%l', '')\n    local file_name = file_name:gsub('%l', '')\n\
    \    local file_name = file_name:gsub('%l', '')\n    local file_name = file_name:gsub('%l',\
    \ '')\n    local file_name = file_name:gsub('%l', '')\n    local file_name = file_name:gsub('%l',\
    \ '')\n    local file_name = file_name:gsub('%l', '')\n    local file_name = file_name:gsub('%l',\
    \ '')\n    local file_name = file_name:gsub('%l', '')\n    local file_name = file_name:gsub('%l',\
    \ '')\n    local file_name = file_name:gsub('%l', '')\n    local file_name = file_name:gsub('%l',\
    \ '')\n    local file_name = file_name:gsub('%l', '')\n    local file_name = file_name:gsub('%l',\
    \ '')\n    local file_name = file_name:gsub('%l', '')\n    local file_name = file_name:gsub('%l',\
    \ '')\n    local file_name = file_name:gsub('%l', '')\n    local file_name = file_name:gsub('%l',\
    \ '')\n    local file_name = file_name:gsub('%l', '')\n    local file_name = file_name:gsub('%l',\
    \ '')\n    local file_name = file_name:gsub('%l', '')\n    local file_name = file_name:gsub('%l',\
    \ '')\n    local file_name = file_name:gsub('%l', '')\n    local file_name = file_name:gsub('%l',\
    \ '')\n    local file_name = file_name:gsub('%l', '')\n    local file_name = file_name:gsub('%l',\
    \ '')\n    local file_name = file_name:gsub('%l', '')\n    local file_name = file_name:gsub('%l',\
    \ '')\n    local file_name = file_name:gsub('%l', '')\n    local file_name = file_name:gsub('%l',\
    \ '')\n    local file_name = file_name:gsub('%l', '')\n    local file_name = file_name:gsub('%l',\
    \ '')\n    local file_name = file_name:gsub('%l', '')\n    local file_name = file_name:gsub('%l',\
    \ '')\n    local file_name = file_name:gsub('%l', '')\n    local file_name = file_name:gsub('%l',\
    \ '')\n    ", "   if #file_name > 3 then\n      return 'No'\n   end\n   if #file_name\
    \ == 0 then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\' or file_name:sub(1,\
    \ 1) ~= '~' then\n      return 'No'\n   end\n   if file_name:sub(2, 2) ~= '.'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= string.lower(string.sub(file_name:sub(1,\
    \ 1), 1, 1)) then\n      return 'No'\n   end\n   if string.find(file_name:sub(2,\
    \ 2), {'txt', 'exe', 'dll'}) == nil then\n      return 'No'\n   end\n   return\
    \ 'Yes'\nend", "   if #file_name > 3 then\n      return 'No'\n   elseif #file_name\
    \ == 0 then\n      return 'No'\n   elseif file_name:sub(1, 1) ~= '\\' or file_name:sub(1,\
    \ 1) ~= '-' or file_name:sub(1, 1) ~= '0' then\n      return 'No'\n   elseif file_name:sub(1,\
    \ #file_name) ~= '.' or file_name:sub(1, #file_name) ~= '-' or file_name:sub(1,\
    \ #file_name) ~= '0' then\n      return 'No'\n   elseif file_name:sub(1, #file_name)\
    \ ~= 'txt' or file_name:sub(1, #file_name) ~= 'exe' or file_name:sub(1, #file_name)\
    \ ~= 'dll' then\n      return 'No'\n   else\n      return 'Yes'\n   end\nend",
  "   -- Check that the file name contains exactly one dot '.'\n   if file_name ~=\
    \ nil and file_name ~= '' then\n      if file_name:sub(1, 1) ~= '.' then\n   \
    \      return 'No'\n      end\n   end\n   -- Check that the file name starts with\
    \ a letter from the latin alphapet ('a'-'z' and 'A'-'Z')\n   if file_name ~= nil\
    \ and file_name ~= '' then\n      if file_name:sub(1, 1) ~= string.lower(string.sub(file_name:sub(1,\
    \ 1), 1, 1)) then\n         return 'No'\n      end\n   end\n   -- Check that the\
    \ file name contains exactly three digits ('0'-'9')\n   if file_name ~= nil and\
    \ file_name ~= '' then\n      if string.find(file_name, '%[0-9]') ~= nil then\n\
    \         return 'No'\n      end\n   end\n   return 'Yes'\nend", "   -- Check\
    \ that the file name contains exactly one dot '.'\n   if file_name ~= nil then\n\
    \      -- Check that the file's name contains exactly one dot '.'\n      if file_name:sub(1,\
    \ 1) ~= '.' then\n         return 'No'\n      end\n      -- Check that the substring\
    \ before the dot should not be empty, and it starts with a letter from the latin\
    \ alphapet ('a'-'z' and 'A'-'Z')\n      if file_name:sub(1, 1) ~= '' then\n  \
    \       if file_name:sub(1, 1) ~= 'a' then\n            if file_name:sub(1, 1)\
    \ ~= 'A' then\n               return 'No'\n            end\n         end\n   \
    \   end\n      -- Check that the substring after the dot should be one of these:\
    \ ['txt', 'exe', 'dll']\n      if file_name:sub(2, 3) ~= '.txt' then\n       \
    \  if file_name:sub(2, 3) ~= '.exe' then\n            if file_name:sub(2, 3) ~=\
    \ '.dll' then\n               return 'No'\n            end\n         end\n   \
    \   end\n   end\n   return 'Yes'\nend", "   if file_name == nil then\n      return\
    \ nil\n   end\n   if #file_name < 3 then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '0' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '9'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 2) ~= '.' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 3) ~= '' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 3) ~= '.' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 4) ~= '' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 4) ~= '.' then\n      return 'No'\n   end\n   if file_name:sub(1, 5) ~= '' then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 5) ~= '.' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 6) ~= '' then\n      return 'No'\n   end\n\
    \   if file_name:sub(1, 6) ~= '.' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 7) ~= '' then\n      return 'No'\n   end\n   if file_name:sub(1, 7) ~= '.' then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 8) ~= '' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 8) ~= '.' then\n      return 'No'\n   end\n\
    \   if file_name:sub(1, 9) ~= '' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 9) ~= '.' then\n      return 'No'\n   end\n   return 'Yes'\nend", "   if file_name\
    \ == nil then\n      return nil\n   end\n   if #file_name < 3 then\n      return\
    \ nil\n   end\n   if string.find(file_name, \".\") ~= 1 then\n      return nil\n\
    \   end\n   if string.sub(file_name,1,1) ~= 'a' then\n      return nil\n   end\n\
    \   if string.sub(file_name,1,1) ~= 'z' then\n      return nil\n   end\n   if\
    \ string.sub(file_name,1,2) ~= 'A' then\n      return nil\n   end\n   if string.sub(file_name,1,2)\
    \ ~= 'Z' then\n      return nil\n   end\n   return 'Yes'\nend", "  -- Check that\
    \ the file name contains exactly one dot '.'\n  if file_name ~= nil then\n   \
    \ if string.find(file_name, '.') ~= nil then\n      -- Check that the substring\
    \ before the dot should not be empty, and it starts with a letter from the latin\
    \ alphapet ('a'-'z' and 'A'-'Z')\n      if string.find(file_name, '.') ~= nil\
    \ then\n        -- Check that the substring after the dot should be one of these:\
    \ ['txt', 'exe', 'dll']\n        if string.find(file_name, '.') ~= nil then\n\
    \          -- Check that the substring after the dot is one of these: ['txt',\
    \ 'exe', 'dll']\n          if string.find(file_name, '.') ~= nil then\n      \
    \      -- Check that the substring after the dot is one of these: ['txt', 'exe',\
    \ 'dll']\n            if string.find(file_name, '.') ~= nil then\n           \
    \   -- Check that the substring after the dot is one of these: ['txt', 'exe',\
    \ 'dll']\n              if string.find(file_name, '.') ~= nil then\n         \
    \       -- Check that the substring after the dot is one of these: ['txt', 'exe',\
    \ 'dll']\n                if string.find(file_name, '.') ~= nil then\n       \
    \           -- Check that the substring after the dot is one of these: ['txt',\
    \ 'exe', 'dll']\n                  if string.find(file_name, '.') ~= nil then\n\
    \                    -- Check that the substring after the dot is one of these:\
    \ ['txt', 'exe', 'dll']\n                    if string.find(file_name, '.') ~=\
    \ nil then\n                      -- Check that the substring after the dot is\
    \ one of these: ['txt', 'exe', 'dll']\n                      if string.find(file_name,\
    \ '.') ~= nil then\n                        -- Check that the substring after\
    \ the dot is one of these: ['txt', 'exe', 'dll']\n                        if string.find(file_name,\
    \ '.') ~= nil then\n                          -- Check that the substring after\
    \ the dot is one of these: ['txt', 'exe', 'dll']\n                          return\
    \ 'Yes'\n                        else\n                          -- Check that\
    \ the substring after the dot is one of these: ['txt', 'exe', 'dll']\n       \
    \                   return 'No'\n                        end\n               \
    \       else\n                        -- Check that the substring after the dot\
    \ is one of these: ['txt', 'exe', 'dll']\n                        return 'No'\n\
    \                      end\n                    else\n                      --\
    \ Check that the substring after the dot is one of these: ['txt', 'exe', 'dll']\n\
    \                      return 'No'\n                    end\n                \
    \  else\n                    -- Check that the substring after the dot is one\
    \ of these: ['txt', 'exe', 'dll']\n                    return 'No", "   -- Check\
    \ that the file name contains exactly one dot '.'\n   if file_name ~= nil and\
    \ file_name ~= '' then\n      if file_name:sub(1, 1) ~= '.' then\n         return\
    \ 'No'\n      end\n   end\n   -- Check that the substring before the dot is not\
    \ empty, and it starts with a letter \n   -- from the latin alphapet ('a'-'z'\
    \ and 'A'-'Z')\n   if file_name ~= nil and file_name ~= '' then\n      if file_name:sub(1,\
    \ 1) ~= '.' then\n         if file_name:sub(1, 1) ~= 'a' and file_name:sub(1,\
    \ 1) ~= 'A' then\n            return 'No'\n         end\n      end\n   end\n \
    \  -- Check that the substring after the dot is one of these: ['txt', 'exe', 'dll']\n\
    \   if file_name ~= nil and file_name ~= '' then\n      if file_name:sub(-2, 2)\
    \ ~= 'exe' and file_name:sub(-2, 2) ~= 'dll' then\n         return 'No'\n    \
    \  end\n   end\n   -- Check that the file's name contains exactly three digits\
    \ ('0'-'9')\n   if file_name ~= nil and file_name ~= '' then\n      if file_name:sub(1,\
    \ 3) ~= '0' and file_name:sub(1, 3) ~= '9' then\n         return 'No'\n      end\n\
    \   end\n   return 'Yes'\nend", "  -- Check that the file name contains exactly\
    \ one dot '.'\n  if file_name ~= nil then\n    if string.find(file_name, \".\"\
    ) then\n      -- Check that the substring before the dot is not empty, and it\
    \ starts with a letter from the latin alphapet ('a'-'z' and 'A'-'Z')\n      if\
    \ string.find(file_name, \".\", 1, true) and string.sub(file_name,1,1) ~= nil\
    \ then\n        -- Check that the substring after the dot is one of these: ['txt',\
    \ 'exe', 'dll']\n        if string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name,\
    \ \".\", 1, true) and string.find(file_name, \".\", 1, true) and string.find(file_name",
  "    local file_name = file_name:gsub('.', '') -- Remove dot\n    local file_name\
    \ = file_name:gsub('[^0-9a-zA-Z]', '') -- Remove non-alphanumeric characters\n\
    \    local file_name = file_name:gsub('^[^a-zA-Z]', '') -- Remove non-alphabetic\
    \ characters\n    local file_name = file_name:gsub('[^a-zA-Z.]', '') -- Remove\
    \ non-alphabetic characters\n    local file_name = file_name:gsub('[^a-zA-Z0-9]',\
    \ '') -- Remove non-alphanumeric characters\n    local file_name = file_name:gsub('[^a-zA-Z0-9.]',\
    \ '') -- Remove non-alphanumeric characters\n    local file_name = file_name:gsub('[^a-zA-Z0-9_]',\
    \ '') -- Remove non-alphanumeric characters\n    local file_name = file_name:gsub('[^a-zA-Z0-9_.]',\
    \ '') -- Remove non-alphanumeric characters\n    local file_name = file_name:gsub('[^a-zA-Z0-9_]',\
    \ '') -- Remove non-alphanumeric characters\n    local file_name = file_name:gsub('[^a-zA-Z0-9_.]',\
    \ '') -- Remove non-alphanumeric characters\n    local file_name = file_name:gsub('[^a-zA-Z0-9_]',\
    \ '') -- Remove non-alphanumeric characters\n    local file_name = file_name:gsub('[^a-zA-Z0-9_.]',\
    \ '') -- Remove non-alphanumeric characters\n    local file_name = file_name:gsub('[^a-zA-Z0-9_]',\
    \ '') -- Remove non-alphanumeric characters\n    local file_name = file_name:gsub('[^a-zA-Z0-9_.]',\
    \ '') -- Remove non-alphanumeric characters\n    local file_name = file_name:gsub('[^a-zA-Z0-9_]',\
    \ '') -- Remove non-alphanumeric characters\n    local file_name = file_name:gsub('[^a-zA-Z0-9_.]',\
    \ '') -- Remove non-alphanumeric characters\n    local file_name = file_name:gsub('[^a-zA-Z0-9_]',\
    \ '') -- Remove non-alphanumeric characters\n    local file_name = file_name:gsub('[^a-zA-Z0-9_.]',\
    \ '') -- Remove non-alphanumeric characters\n    local file_name = file_name:gsub('[^a-zA-Z0-9_]',\
    \ '') -- Remove non-alphanumeric characters\n    local file_name = file_name:gsub('[^a-zA-Z0-9_.]',\
    \ '') -- Remove non-alphanumeric characters\n    local file_name = file_name:gsub('[^a-zA-Z0-9_]',\
    \ '') -- Remove non-alphanumeric characters\n    local file_name = file_name:gsub('[^a-zA-Z0-9_.]',\
    \ '') -- Remove non-alphanumeric ", "    local file_name = file_name:gsub('.',\
    \ '')\n    local file_name = file_name:gsub('[^0-9a-zA-Z]', '')\n    local file_name\
    \ = file_name:gsub('^[^a-zA-Z]', '')\n    local file_name = file_name:gsub('[^a-zA-Z]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z.]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z]', '')\n    local file_name = file_name:gsub('[^a-zA-Z]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z]', '')\n    local file_name = file_name:gsub('[^a-zA-Z]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z]', '')\n    local file_name = file_name:gsub('[^a-zA-Z]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z]', '')\n    local file_name = file_name:gsub('[^a-zA-Z]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z]', '')\n    local file_name = file_name:gsub('[^a-zA-Z]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z]', '')\n    local file_name = file_name:gsub('[^a-zA-Z]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z]', '')\n    local file_name = file_name:gsub('[^a-zA-Z]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z]', '')\n    local file_name = file_name:gsub('[^a-zA-Z]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z]', '')\n    local file_name = file_name:gsub('[^a-zA-Z]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z]', '')\n    local file_name = file_name:gsub('[^a-zA-Z]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z]', '')\n    local file_name = file_name:gsub('",
  "    local file_name = file_name:gsub('.*/','')\n    local file_name = file_name:gsub('[^0-9a-zA-Z]','')\n\
    \    local file_name = file_name:gsub('^','')\n    local file_name = file_name:gsub('$','')\n\
    \    local file_name = file_name:gsub('\\.','')\n    local file_name = file_name:gsub('[^a-z]','')\n\
    \    local file_name = file_name:gsub('[^A-Z]','')\n    local file_name = file_name:gsub('[^A-Za-z0-9]','')\n\
    \    local file_name = file_name:gsub('[^A-Za-z0-9.]','')\n    local file_name\
    \ = file_name:gsub('[^A-Za-z0-9]','')\n    local file_name = file_name:gsub('[^A-Za-z0-9.]','')\n\
    \    local file_name = file_name:gsub('[^A-Za-z0-9]','')\n    local file_name\
    \ = file_name:gsub('[^A-Za-z0-9.]','')\n    local file_name = file_name:gsub('[^A-Za-z0-9]','')\n\
    \    local file_name = file_name:gsub('[^A-Za-z0-9.]','')\n    local file_name\
    \ = file_name:gsub('[^A-Za-z0-9]','')\n    local file_name = file_name:gsub('[^A-Za-z0-9.]','')\n\
    \    local file_name = file_name:gsub('[^A-Za-z0-9]','')\n    local file_name\
    \ = file_name:gsub('[^A-Za-z0-9.]','')\n    local file_name = file_name:gsub('[^A-Za-z0-9]','')\n\
    \    local file_name = file_name:gsub('[^A-Za-z0-9.]','')\n    local file_name\
    \ = file_name:gsub('[^A-Za-z0-9]','')\n    local file_name = file_name:gsub('[^A-Za-z0-9.]','')\n\
    \    local file_name = file_name:gsub('[^A-Za-z0-9]','')\n    local file_name\
    \ = file_name:gsub('[^A-Za-z0-9.]','')\n    local file_name = file_name:gsub('[^A-Za-z0-9]','')\n\
    \    local file_name = file_name:gsub('[^A-Za-z0-9.]','')\n    local file_name\
    \ = file_name:gsub('[^A-Za-z0-9]','')\n    local file_name = file_name:gsub('[^A-Za-z0-9.]','')\n\
    \    local file_name = file_name:gsub('[^A-Za-z0-9]','')\n    local file_name\
    \ = file_name:gsub('[^A-Za-z0-9.]','')\n    local file_name = file_name:gsub('[^A-Za-z0-9]','')\n\
    \    local file_name = ", "   -- Check if file name contains only numbers and\
    \ one dot\n   if string.find(file_name, '%[%d%.]') then\n      return 'No'\n \
    \  end", "   if #file_name > 3 then\n      return 'No'\n   elseif #file_name ==\
    \ 0 then\n      return 'No'\n   elseif file_name:sub(1, 1) ~= '.' then\n     \
    \ return 'No'\n   elseif file_name:sub(1, 1) ~= 'a' then\n      return 'No'\n\
    \   elseif file_name:sub(1, 1) ~= 'z' then\n      return 'No'\n   elseif file_name:sub(1,\
    \ 1) ~= 'A' then\n      return 'No'\n   elseif file_name:sub(1, 1) ~= 'Z' then\n\
    \      return 'No'\n   elseif file_name:sub(2, 1) ~= 'txt' then\n      return\
    \ 'No'\n   elseif file_name:sub(2, 1) ~= 'exe' then\n      return 'No'\n   elseif\
    \ file_name:sub(2, 1) ~= 'dll' then\n      return 'No'\n   else\n      return\
    \ 'Yes'\n   end\nend", "   if file_name == nil then\n      return nil\n   end",
  "   -- Check that the file name contains exactly one dot '.'\n   if file_name ==\
    \ nil then\n      return 'No'\n   end\n   -- Check that the file's name contains\
    \ exactly one dot '.'\n   if string.find(file_name, '.') ~= nil then\n      return\
    \ 'No'\n   end\n   -- Check that the substring before the dot should not be empty,\
    \ and it starts with a letter from the latin alphapet ('a'-'z' and 'A'-'Z')\n\
    \   if string.sub(file_name,1,1) ~= nil then\n      -- Check that the substring\
    \ before the dot should not be empty, and it starts with a letter from the latin\
    \ alphapet ('a'-'z' and 'A'-'Z')\n      if string.sub(file_name,1,1) ~= string.sub(file_name,1,1)\
    \ then\n         return 'No'\n      end\n   end\n   -- Check that the substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n   if string.find(file_name,\
    \ 'exe') ~= nil then\n      return 'Yes'\n   end\n   if string.find(file_name,\
    \ 'dll') ~= nil then\n      return 'Yes'\n   end\n   if string.find(file_name,\
    \ 'txt') ~= nil then\n      return 'Yes'\n   end\nend", "   if file_name == nil\
    \ then\n      return nil\n   end\n   if string.find(file_name, \".\") ~= nil then\n\
    \      if string.find(file_name, \".\") ~= 1 then\n         return nil\n     \
    \ end\n   end\n   if string.find(file_name, \".\") ~= 1 then\n      return nil\n\
    \   end\n   if string.find(file_name, \".\") ~= 1 then\n      return nil\n   end\n\
    \   if string.find(file_name, \".\") ~= 1 then\n      return nil\n   end\n   if\
    \ string.find(file_name, \".\") ~= 1 then\n      return nil\n   end\n   if string.find(file_name,\
    \ \".\") ~= 1 then\n      return nil\n   end\n   if string.find(file_name, \"\
    .\") ~= 1 then\n      return nil\n   end\n   if string.find(file_name, \".\")\
    \ ~= 1 then\n      return nil\n   end\n   if string.find(file_name, \".\") ~=\
    \ 1 then\n      return nil\n   end\n   if string.find(file_name, \".\") ~= 1 then\n\
    \      return nil\n   end\n   if string.find(file_name, \".\") ~= 1 then\n   \
    \   return nil\n   end\n   if string.find(file_name, \".\") ~= 1 then\n      return\
    \ nil\n   end\n   if string.find(file_name, \".\") ~= 1 then\n      return nil\n\
    \   end\n   if string.find(file_name, \".\") ~= 1 then\n      return nil\n   end\n\
    \   if string.find(file_name, \".\") ~= 1 then\n      return nil\n   end\n   if\
    \ string.find(file_name, \".\") ~= 1 then\n      return nil\n   end\n   if string.find(file_name,\
    \ \".\") ~= 1 then\n      return nil\n   end\n   if string.find(file_name, \"\
    .\") ~= 1 then\n      return nil\n   end\n   if string.find(file_name, \".\")\
    \ ~= 1 then\n      return nil\n   end\n   if string.find(file_name, \".\") ~=\
    \ 1 then\n      return nil\n   end\n   if string.find(file_name, \".\") ~= 1 then\n\
    \      return nil\n   end\n   if string.find(file_name, \".\") ~= 1 then\n   \
    \   return nil\n   end\n   if string.find(file_name, \".\") ~= 1 then\n      return\
    \ nil\n   end\n   if string.find(file_name, \".\") ~= 1 then\n      return nil\n\
    \   end\n   if string.find(file_name, \".\") ~= 1 then\n      return nil\n   end\n\
    \   if string.find(file_name, \"", "   if file_name == nil then\n      return\
    \ nil\n   end\n   if string.len(file_name) ~= 3 then\n      return nil\n   end\n\
    \   if string.find(file_name, \".\") ~= 1 then\n      return nil\n   end\n   if\
    \ string.sub(file_name,1,1) ~= 'a' then\n      return nil\n   end\n   if string.sub(file_name,1,1)\
    \ ~= 'z' then\n      return nil\n   end\n   if string.sub(file_name,1,2) ~= 'A'\
    \ then\n      return nil\n   end\n   if string.sub(file_name,1,2) ~= 'Z' then\n\
    \      return nil\n   end\n   return 'Yes'\nend", "   local num_digits = string.len(file_name:sub(1,-1))\n\
    \   if num_digits > 3 then\n      return 'No'\n   end\n   local first_letter =\
    \ file_name:sub(1,1)\n   if first_letter ~= 'a' and first_letter ~= 'A' then\n\
    \      return 'No'\n   end\n   local dot_index = file_name:find('.')\n   if dot_index\
    \ == nil then\n      return 'No'\n   end\n   if string.len(file_name:sub(1,dot_index-1))\
    \ ~= 1 then\n      return 'No'\n   end\n   local extensions = { ['txt'] = true,\
    \ ['exe'] = true, ['dll'] = true }\n   if extensions[file_name:sub(1,dot_index-1)]\
    \ == nil then\n      return 'No'\n   end\n   return 'Yes'\nend", "   -- Check\
    \ that the file name contains exactly one dot '.'\n   if file_name ~= nil then\n\
    \      -- Get the substring before the dot '.'\n      local file_name = string.sub(file_name,\
    \ 1, string.find(file_name, \".\"))\n      -- Check that it starts with a letter\
    \ from the latin alphapet ('a'-'z' and 'A'-'Z')\n      if string.find(file_name,\
    \ \"^[%a%z]\") then\n         return 'Yes'\n      else\n         return 'No'\n\
    \      end\n   else\n      return 'No'\n   end\nend", "    local file_name = file_name:gsub('%.',\
    \ '')\n    local file_name = file_name:gsub('.[^a-zA-Z0-9]', '')\n    local file_name\
    \ = file_name:gsub('^[^a-zA-Z]', '')\n    local file_name = file_name:gsub('[^a-zA-Z0-9]$',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z0-9]', '')\n    local file_name = file_name:gsub('[^a-zA-Z]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z0-9]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z]', '')\n    local file_name = file_name:gsub('[^a-zA-Z0-9]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z0-9]', '')\n    local file_name = file_name:gsub('[^a-zA-Z]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z0-9]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z]', '')\n    local file_name = file_name:gsub('[^a-zA-Z0-9]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z0-9]', '')\n    local file_name = file_name:gsub('[^a-zA-Z]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z0-9]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z]', '')\n    local file_name = file_name:gsub('[^a-zA-Z0-9]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z0-9]', '')\n    local file_name = file_name:gsub('[^a-zA-Z]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z0-9]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z]', '')\n    local file_name = file_name:gsub('[^a-zA-Z0-9]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z0-9]', '')\n    local file_name = file_name:gsub('[^a-zA-Z]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z0-9]', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z]', '')\n    local file_name = file_name:gsub('[^a-zA-Z0-9]',\
    \ '')\n    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name\
    \ = file_name:", "    local file_name = file_name:lower()\n    local dot_index\
    \ = file_name:find('.')\n    local dot_string = file_name:sub(1, dot_index)\n\
    \    local dot_length = dot_index:len() - 1\n    local dot_index = string.find(dot_string,\
    \ '%w[a-z_]')\n    local dot_string = string.sub(dot_string, dot_index)\n    local\
    \ dot_length = dot_length:len() - 1\n    local dot_index = string.find(dot_string,\
    \ '%w[a-z_%w[a-z_]]')\n    local dot_string = string.sub(dot_string, dot_index)\n\
    \    local dot_length = dot_length:len() - 1\n    local dot_index = string.find(dot_string,\
    \ '%w[a-z_%w[a-z_%w[a-z_]]]')\n    local dot_string = string.sub(dot_string, dot_index)\n\
    \    local dot_length = dot_length:len() - 1\n    local dot_index = string.find(dot_string,\
    \ '%w[a-z_%w[a-z_%w[a-z_%w[a-z_]]]')\n    local dot_string = string.sub(dot_string,\
    \ dot_index)\n    local dot_length = dot_length:len() - 1\n    local dot_index\
    \ = string.find(dot_string, '%w[a-z_%w[a-z_%w[a-z_%w[a-z_%w[a-z_]]]')\n    local\
    \ dot_string = string.sub(dot_string, dot_index)\n    local dot_length = dot_length:len()\
    \ - 1\n    local dot_index = string.find(dot_string, '%w[a-z_%w[a-z_%w[a-z_%w[a-z_%w[a-z_%w[a-z_]]]')\n\
    \    local dot_string = string.sub(dot_string, dot_index)\n    local dot_length\
    \ = dot_length:len() - 1\n    local dot_index = string.find(dot_string, '%w[a-z_%w[a-z_%w[a-z_%w[a-z_%w[a-z_%w[a-z_%w[a-z_]]]')\n\
    \    local dot_string = string.sub(dot_string, dot_index)\n    local dot_length\
    \ = dot_length:len() - 1\n    local dot_index = string.find(dot_string, '%w[a-z_%w[a-z_%w[a-z_%w[a-z_%w[a-z_%w[a-z_%w[a-z_%w[a-z_]]]')\n\
    \    local dot_string = string.sub(dot_string, dot_index)\n    local dot_length\
    \ = dot_length:len() - 1\n    local dot_index = string.find(dot_string, '%w[a-z_%w[a-z_%w[a-z_%w[a-z_%w[a-z_%w[a-z_%",
  "    local file_name = file_name:lower()\n    local dot_index = file_name:find('.')\n\
    \    local dot_string = file_name:sub(1, dot_index)\n    local dot_string_length\
    \ = #dot_string\n    local dot_string_first_letter = string.sub(dot_string, 1,\
    \ 1)\n    local dot_string_last_letter = string.sub(dot_string, dot_string_length-1,\
    \ 1)\n    local dot_string_first_letter_upper = string.upper(dot_string_first_letter)\n\
    \    local dot_string_last_letter_upper = string.upper(dot_string_last_letter)\n\
    \    local dot_string_first_letter_lower = string.lower(dot_string_first_letter)\n\
    \    local dot_string_last_letter_lower = string.lower(dot_string_last_letter)\n\
    \    local dot_string_first_letter_upper = string.upper(dot_string_first_letter)\n\
    \    local dot_string_last_letter_upper = string.upper(dot_string_last_letter)\n\
    \    local dot_string_first_letter_lower = string.lower(dot_string_first_letter)\n\
    \    local dot_string_last_letter_lower = string.lower(dot_string_last_letter)\n\
    \    local dot_string_first_letter_upper = string.upper(dot_string_first_letter)\n\
    \    local dot_string_last_letter_upper = string.upper(dot_string_last_letter)\n\
    \    local dot_string_first_letter_lower = string.lower(dot_string_first_letter)\n\
    \    local dot_string_last_letter_lower = string.lower(dot_string_last_letter)\n\
    \    local dot_string_first_letter_upper = string.upper(dot_string_first_letter)\n\
    \    local dot_string_last_letter_upper = string.upper(dot_string_last_letter)\n\
    \    local dot_string_first_letter_lower = string.lower(dot_string_first_letter)\n\
    \    local dot_string_last_letter_lower = string.lower(dot_string_last_letter)\n\
    \    local dot_string_first_letter_upper = string.upper(dot_string_first_letter)\n\
    \    local dot_string_last_letter_upper = string.upper(dot_string_last_letter)\n\
    \    local dot_string_first_letter_lower = string.lower(dot_string_first_letter)\n\
    \    local dot_string_last_letter_lower = string.lower(dot_string_last_letter)\n\
    \    local dot_string_first_letter_upper = string.upper(dot_string_first_letter)\n\
    \    local dot_string_last_letter_upper = string.upper(dot_string_last_letter)\n\
    \    local dot_string_first_letter_lower = string.lower(dot_string_first_letter)\n\
    \    local dot_string_last_letter_lower = string.lower(dot_string_last_letter)\n\
    \    local dot_string_first_letter_upper = string.upper(dot_string_first_letter)\n\
    \    local dot_string_last_letter_upper = string.upper(dot_string_last_letter)\n\
    \    local dot_string_first_letter_lower = string.lower(dot_string_first_letter)",
  "   if file_name == nil then\n      return nil\n   end\n   if string.find(file_name,\
    \ \"^[0-9]\") then\n      return nil\n   end\n   if string.find(file_name, \"\
    .\") then\n      if string.find(file_name, \"^.\") then\n         return nil\n\
    \      end\n   end\n   if string.find(file_name, \"^[a-zA-Z]\") then\n      return\
    \ nil\n   end\n   return \"Yes\"\nend", "  -- Check that the file name contains\
    \ exactly one dot '.'\n  if file_name ~= nil and file_name ~= '' then\n    local\
    \ dot_index = file_name:find('.')\n    if dot_index == nil then\n      return\
    \ 'No'\n    end\n    -- Check that there is only one digit in the file's name\n\
    \    local digits_index = file_name:find('%0*d', 1, dot_index)\n    if digits_index\
    \ == nil then\n      return 'No'\n    end\n    -- Check that there is only one\
    \ digit in the file's name\n    local letters_index = file_name:find('%0*l', 1,\
    \ dot_index)\n    if letters_index == nil then\n      return 'No'\n    end\n \
    \   -- Check that there is only one digit in the file's name\n    local letters_index\
    \ = file_name:find('%0*l', 1, dot_index)\n    if letters_index == nil then\n \
    \     return 'No'\n    end\n    -- Check that there is only one digit in the file's\
    \ name\n    local letters_index = file_name:find('%0*l', 1, dot_index)\n    if\
    \ letters_index == nil then\n      return 'No'\n    end\n    -- Check that there\
    \ is only one digit in the file's name\n    local letters_index = file_name:find('%0*l',\
    \ 1, dot_index)\n    if letters_index == nil then\n      return 'No'\n    end\n\
    \    -- Check that there is only one digit in the file's name\n    local letters_index\
    \ = file_name:find('%0*l', 1, dot_index)\n    if letters_index == nil then\n \
    \     return 'No'\n    end\n    -- Check that there is only one digit in the file's\
    \ name\n    local letters_index = file_name:find('%0*l', 1, dot_index)\n    if\
    \ letters_index == nil then\n      return 'No'\n    end\n    -- Check that there\
    \ is only one digit in the file's name\n    local letters_index = file_name:find('%0*l',\
    \ 1, dot_index)\n    if letters_index == nil then\n      return 'No'\n    end\n\
    \    -- Check that there is only one digit in the file's name\n    local letters_index\
    \ = file_name:find('%0*l', 1, dot_index)\n    if letters_index == nil then\n \
    \     return 'No'\n    end\n    -- Check that there is only one digit in the file's\
    \ name\n    local letters_index = file_name:find('%0*l', 1, dot_index)\n    if\
    \ letters_index == nil then\n      return 'No'\n    end\n    -- Check that there\
    \ is only one digit in the file's name\n    local letters_index = file_name:find('%0*l',\
    \ 1, dot_index)\n    if letters_index == nil then\n      return 'No'\n    end\n\
    \    -- Check that there is only one digit in the file's name\n    local ", " \
    \  if file_name == nil then\n      return nil\n   end\n   if string.len(file_name)\
    \ <= 3 then\n      return nil\n   end\n   if string.sub(file_name,1,1) ~= '^'\
    \ then\n      return nil\n   end\n   if string.sub(file_name,1,2) ~= '[0-9]' then\n\
    \      return nil\n   end\n   if string.sub(file_name,1,3) ~= '\\.' then\n   \
    \   return nil\n   end\n   if string.sub(file_name,1,4) ~= '[a-z]' then\n    \
    \  return nil\n   end\n   if string.sub(file_name,1,5) ~= '[A-Z]' then\n     \
    \ return nil\n   end\n   return 'Yes'\nend", "    local file_name = file_name:gsub('%w+%.',\
    \ '')\n    local file_name = file_name:gsub('.+%w+', '')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z]', '')\n    local file_name = file_name:gsub('%w+',\
    \ '')\n    local file_name = file_name:gsub('%w+%.', '')\n    local file_name\
    \ = file_name:gsub('.+%w+', '')\n    local file_name = file_name:gsub('[^a-zA-Z]',\
    \ '')\n    local file_name = file_name:gsub('%w+', '')\n    local file_name =\
    \ file_name:gsub('%w+%.', '')\n    local file_name = file_name:gsub('.+%w+', '')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name =\
    \ file_name:gsub('%w+', '')\n    local file_name = file_name:gsub('%w+%.', '')\n\
    \    local file_name = file_name:gsub('.+%w+', '')\n    local file_name = file_name:gsub('[^a-zA-Z]',\
    \ '')\n    local file_name = file_name:gsub('%w+', '')\n    local file_name =\
    \ file_name:gsub('%w+%.', '')\n    local file_name = file_name:gsub('.+%w+', '')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name =\
    \ file_name:gsub('%w+', '')\n    local file_name = file_name:gsub('%w+%.', '')\n\
    \    local file_name = file_name:gsub('.+%w+', '')\n    local file_name = file_name:gsub('[^a-zA-Z]',\
    \ '')\n    local file_name = file_name:gsub('%w+', '')\n    local file_name =\
    \ file_name:gsub('%w+%.', '')\n    local file_name = file_name:gsub('.+%w+', '')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name =\
    \ file_name:gsub('%w+', '')\n    local file_name = file_name:gsub('%w+%.', '')\n\
    \    local file_name = file_name:gsub('.+%w+', '')\n    local file_name = file_name:gsub('[^a-zA-Z]',\
    \ '')\n    local file_name = file_name:gsub('%w+', '')\n    local file_name =\
    \ file_name:gsub('%w+%.', '')\n    local file_name = file_name:gsub('.+%w+', '')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z]', '')\n    local file_name =\
    \ file_name:gsub('%w+', '')\n    local file_name = file_name:gsub('%w+%.', '')\n\
    \    local file", "   if string.find(file_name, \".\") then\n      return \"No\"\
    \n   elseif string.find(file_name, \"..\") then\n      return \"No\"\n   elseif\
    \ string.find(file_name, \"%\") then\n      return \"No\"\n   elseif string.find(file_name,\
    \ \"/\") then\n      return \"No\"\n   elseif string.find(file_name, \"\\\\\"\
    ) then\n      return \"No\"\n   elseif string.find(file_name, \".\") then\n  \
    \    if string.find(file_name, \".\") == 1 then\n         return \"No\"\n    \
    \  else\n         return \"Yes\"\n      end\n   elseif string.find(file_name,\
    \ \".\") == 1 then\n      return \"Yes\"\n   else\n      return \"No\"\n   end\n\
    end", "   if file_name == nil then\n      return nil\n   end\n   if string.len(file_name)\
    \ <= 3 then\n      return nil\n   end\n   if string.find(file_name, '.') ~= 1\
    \ then\n      return nil\n   end\n   if string.sub(file_name, 1, 1) ~= 'a' then\n\
    \      return nil\n   end\n   if string.sub(file_name, 1, 1) ~= 'z' then\n   \
    \   return nil\n   end\n   if string.sub(file_name, 1, 1) ~= 'A' then\n      return\
    \ nil\n   end\n   if string.sub(file_name, 1, 1) ~= 'Z' then\n      return nil\n\
    \   end\n   if string.sub(file_name, 1, 2) ~= 'txt' then\n      return nil\n \
    \  end\n   if string.sub(file_name, 1, 2) ~= 'exe' then\n      return nil\n  \
    \ end\n   if string.sub(file_name, 1, 2) ~= 'dll' then\n      return nil\n   end\n\
    \   return 'Yes'\nend", "   -- Check that the file name contains exactly one dot\
    \ '.'\n   if string.find(file_name, '.') ~= nil then\n      -- Check that the\
    \ substring before the dot is not empty, and it starts with a letter \n      --\
    \ from the latin alphapet ('a'-'z' and 'A'-'Z')\n      if string.sub(file_name,1,1)\
    \ ~= '' then\n         if string.sub(file_name,1,1) ~= string.char(string.byte('a')\
    \ .. string.byte('A')) then\n            -- Check that the substring after the\
    \ dot is one of these: ['txt', 'exe', 'dll']\n            if string.find(string.lower(file_name),'exe,dll,txt')\
    \ ~= nil then\n               return 'Yes'\n            else\n               return\
    \ 'No'\n            end\n         else\n            return 'No'\n         end\n\
    \      else\n         return 'No'\n      end\n   else\n      return 'No'\n   end\n\
    end", "    local file_name = file_name:gsub('.*/','')\n    local file_name = file_name:gsub('%.','')\n\
    \    local file_name = file_name:gsub('^%[A-z]','')\n    local file_name = file_name:gsub('%[A-z]$','')\n\
    \    local file_name = file_name:gsub('%.%.','')\n    local file_name = file_name:gsub('%.%.%.','')\n\
    \    local file_name = file_name:gsub('%.%.%.%.','')\n    local file_name = file_name:gsub('%.%.%.%.%.','')\n\
    \    local file_name = file_name:gsub('%.%.%.%.%.%.','')\n    local file_name\
    \ = file_name:gsub('%.%.%.%.%.%.%.','')\n    local file_name = file_name:gsub('%.%.%.%.%.%.%.%.','')\n\
    \    local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.','')\n    local file_name\
    \ = file_name:gsub('%.%.%.%.%.%.%.%.%.%.','')\n    local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.','')\n\
    \    local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.','')\n    local\
    \ file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.','')\n    local file_name\
    \ = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.','')\n    local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.%.','')\n\
    \    local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.%.','')\n    local\
    \ file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.%.%.','')\n    local file_name\
    \ = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.','')\n    local file_name\
    \ = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.','')\n    local file_name\
    \ = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.','')\n    local file_name\
    \ = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.','')\n    local file_name\
    \ = ", "   if file_name == nil then\n      return nil\n   end\n   if string.len(file_name)\
    \ ~= 3 then\n      return nil\n   end\n   if string.sub(file_name,1,1) ~= '0'\
    \ then\n      return nil\n   end\n   if string.sub(file_name,1,2) ~= '..' then\n\
    \      return nil\n   end\n   if string.sub(file_name,1,1) ~= 'a' then\n     \
    \ return nil\n   end\n   if string.sub(file_name,1,1) ~= 'A' then\n      return\
    \ nil\n   end\n   if string.sub(file_name,2,3) ~= '.' then\n      return nil\n\
    \   end\n   if string.sub(file_name,1,2) ~= 'txt' then\n      return nil\n   end\n\
    \   if string.sub(file_name,1,2) ~= 'exe' then\n      return nil\n   end\n   if\
    \ string.sub(file_name,1,2) ~= 'dll' then\n      return nil\n   end\n   return\
    \ 'Yes'\nend", "   if string.find(file_name, \".\") ~= nil then\n      local file_ext\
    \ = string.sub(file_name,string.find(file_name, \".\") + 1)\n      if file_ext\
    \ ~= 'txt' and file_ext ~= 'exe' and file_ext ~= 'dll' then\n         return 'No'\n\
    \      else\n         if string.find(file_name, \".\") ~= 1 then\n           \
    \ local file_ext = string.sub(file_name,string.find(file_name, \".\") + 1)\n \
    \           if file_ext ~= 'txt' and file_ext ~= 'exe' and file_ext ~= 'dll' then\n\
    \               return 'No'\n            else\n               if string.find(file_name,\
    \ \".\") ~= 1 then\n                  local file_ext = string.sub(file_name,string.find(file_name,\
    \ \".\") + 1)\n                  if file_ext ~= 'txt' and file_ext ~= 'exe' and\
    \ file_ext ~= 'dll' then\n                     return 'No'\n                 \
    \ else\n                     return 'Yes'\n                  end\n           \
    \    end\n            end\n         end\n      end\n   else\n      return 'No'\n\
    \   end\nend", "   if file_name == nil then\n      return nil\n   end\n   if string.find(file_name,\
    \ '.') ~= nil then\n      if string.find(file_name, '.') ~= 1 then\n         return\
    \ 'No'\n      end\n   end\n   if string.find(file_name, '.') ~= 1 then\n     \
    \ return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n", "   if string.find(file_name, '.') then\n     \
    \ return false\n   end\n   if string.find(file_name, '^[%aA][%aZ%0]') then\n \
    \     return false\n   end\n   if string.find(file_name, '^%0') then\n      return\
    \ false\n   end\n   if string.find(file_name, '^%9') then\n      return false\n\
    \   end\n   if string.find(file_name, '^%0') then\n      return false\n   end\n\
    \   if string.find(file_name, '^%9') then\n      return false\n   end\n   if string.find(file_name,\
    \ '^%0') then\n      return false\n   end\n   if string.find(file_name, '^%9')\
    \ then\n      return false\n   end\n   if string.find(file_name, '^%0') then\n\
    \      return false\n   end\n   if string.find(file_name, '^%9') then\n      return\
    \ false\n   end\n   if string.find(file_name, '^%0') then\n      return false\n\
    \   end\n   if string.find(file_name, '^%9') then\n      return false\n   end\n\
    \   if string.find(file_name, '^%0') then\n      return false\n   end\n   if string.find(file_name,\
    \ '^%9') then\n      return false\n   end\n   if string.find(file_name, '^%0')\
    \ then\n      return false\n   end\n   if string.find(file_name, '^%9') then\n\
    \      return false\n   end\n   if string.find(file_name, '^%0') then\n      return\
    \ false\n   end\n   if string.find(file_name, '^%9') then\n      return false\n\
    \   end\n   if string.find(file_name, '^%0') then\n      return false\n   end\n\
    \   if string.find(file_name, '^%9') then\n      return false\n   end\n   if string.find(file_name,\
    \ '^%0') then\n      return false\n   end\n   if string.find(file_name, '^%9')\
    \ then\n      return false\n   end\n   if string.find(file_name, '^%0') then\n\
    \      return false\n   end\n   if string.find(file_name, '^%9') then\n      return\
    \ false\n   end\n   if string.find(file_name, '^%0') then\n      return false\n\
    \   end\n   if string.find(file_name, '^%9') then\n      return false\n   end\n\
    \   if string.find(file_name, '^%0') then\n      return false\n   end\n   if string.find(file_name,\
    \ '^%9') then\n      return false\n   end\n   if ", "   if file_name == nil then\n\
    \      return nil\n   end\n   if string.len(file_name) > 3 then\n      return\
    \ nil\n   end\n   if string.find(file_name, \".\") then\n      return nil\n  \
    \ end\n   if string.find(file_name, \"^[a-z_]\") then\n      return nil\n   end\n\
    \   if string.find(file_name, \"^[A-z_]\") then\n      return nil\n   end\n  \
    \ return 'Yes'\nend", "   -- Check that the file name contains only digits and\
    \ one dot\n   if string.find(file_name, '%w+') ~= nil then\n      -- Check that\
    \ the file name contains only digits and one dot\n      if string.find(file_name,\
    \ '%w+') ~= nil then\n         -- Check that the file name contains only digits\
    \ and one dot\n         if string.find(file_name, '%w+') ~= nil then\n       \
    \     -- Check that the file name contains only digits and one dot\n         \
    \   if string.find(file_name, '%w+') ~= nil then\n               -- Check that\
    \ the file name contains only digits and one dot\n               if string.find(file_name,\
    \ '%w+') ~= nil then\n                  -- Check that the file name contains only\
    \ digits and one dot\n                  if string.find(file_name, '%w+') ~= nil\
    \ then\n                     -- Check that the file name contains only digits\
    \ and one dot\n                     return 'Yes'\n                  else\n   \
    \                  return 'No'\n                  end\n               else\n \
    \                 return 'No'\n               end\n            else\n        \
    \       return 'No'\n            end\n         else\n            return 'No'\n\
    \         end\n      else\n         return 'No'\n      end\n   else\n      return\
    \ 'No'\n   end\nend", "  -- Check that the file name contains exactly one dot\
    \ '.'\n  if file_name ~= nil and file_name ~= '' then\n    -- Get the substring\
    \ before the dot\n    local file_name = file_name:sub(1, file_name:find('%.'))\n\
    \    -- Check that it starts with a letter from the latin alphapet ('a'-'z' and\
    \ 'A'-'Z')\n    if file_name ~= nil and file_name ~= '' then\n      -- Check that\
    \ it contains only letters ('a'-'z' and 'A'-'Z')\n      if file_name:find('%a')\
    \ ~= nil then\n        -- Check that it contains only letters ('a'-'z' and 'A'-'Z')\n\
    \        if file_name:find('%A') ~= nil then\n          -- Check that it contains\
    \ only letters ('a'-'z' and 'A'-'Z')\n          if file_name:find('%z') ~= nil\
    \ then\n            -- Check that it contains only letters ('a'-'z' and 'A'-'Z')\n\
    \            if file_name:find('%Z') ~= nil then\n              -- Check that\
    \ it contains only letters ('a'-'z' and 'A'-'Z')\n              if file_name:find('%0')\
    \ ~= nil then\n                -- Check that it contains only letters ('a'-'z'\
    \ and 'A'-'Z')\n                if file_name:find('%9') ~= nil then\n        \
    \          -- Check that it contains only letters ('a'-'z' and 'A'-'Z')\n    \
    \              if file_name:find('%%') ~= nil then\n                    -- Check\
    \ that it contains only letters ('a'-'z' and 'A'-'Z')\n                    if\
    \ file_name:find('%.txt') ~= nil then\n                      -- Check that it\
    \ contains only letters ('a'-'z' and 'A'-'Z')\n                      if file_name:find('%.exe')\
    \ ~= nil then\n                        -- Check that it contains only letters\
    \ ('a'-'z' and 'A'-'Z')\n                        if file_name:find('%.dll') ~=\
    \ nil then\n                          -- Check that it contains only letters ('a'-'z'\
    \ and 'A'-'Z')\n                          if file_name:find('%') ~= nil then\n\
    \                            -- Check that it contains only letters ('a'-'z' and\
    \ 'A'-'Z')\n                            if file_name:find('%.txt') ~= nil then\n\
    \                              -- Check that it contains only letters ('a'-'z'\
    \ and 'A'-'Z')\n                              return 'Yes'\n                 \
    \           else\n                              -- Check that it contains only\
    \ letters ('a'-'z' and '", "   -- Check that the file name contains exactly one\
    \ dot '.'\n   if file_name ~= nil and file_name ~= '' then\n      if file_name:sub(1,\
    \ 1) ~= '.' then\n         return 'No'\n      end\n   end\n   -- Check that the\
    \ file name starts with a letter from the latin alphapet ('a'-'z' and 'A'-'Z')\n\
    \   if file_name ~= nil and file_name ~= '' then\n      if file_name:sub(1, 1)\
    \ ~= string.upper(string.sub(file_name:sub(1, 1), 1, 1)) then\n         return\
    \ 'No'\n      end\n   end\n   -- Check that the file name contains only 'txt',\
    \ 'exe', 'dll'\n   if file_name ~= nil and file_name ~= '' then\n      if string.find(file_name,\
    \ 'exe') ~= nil then\n         return 'No'\n      end\n      if string.find(file_name,\
    \ 'dll') ~= nil then\n         return 'No'\n      end\n      if string.find(file_name,\
    \ 'txt') ~= nil then\n         return 'No'\n      end\n   end\n   -- Check that\
    \ the file name contains only 'txt', 'exe', 'dll'\n   return 'Yes'\nend", "  \
    \ if #file_name > 3 then\n      return 'No'\n   end\n   if #file_name == 0 then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\\\' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= '-' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= '_' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'a' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'b'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'c' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'd' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'e' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= 'f' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'g' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'h'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'i' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'j' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'k' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= 'l' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'm' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'n'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'o' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'p' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'q' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= 'r' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 's' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 't'\
    \ then\n      return 'No'\n   end\n   if file_name", "   -- Get the length of\
    \ the file's name.\n   local name_length = string.len(file_name)\n   -- If the\
    \ file's name length is less than or equal to 3, return 'No'.\n   if name_length\
    \ <= 3 then\n      return 'No'\n   end\n   -- If the file's name length is greater\
    \ than 3, return 'No'.\n   if name_length > 3 then\n      return 'No'\n   end\n\
    \   -- If the file's name contains more than one dot, return 'No'.\n   if string.find(file_name,\
    \ \".\") then\n      return 'No'\n   end\n   -- If the file's name does not contain\
    \ any dot, return 'No'.\n   if string.find(file_name, \".\") == nil then\n   \
    \   return 'No'\n   end\n   -- If the file's name does not start with a letter\
    \ from the latin alphabet, return 'No'.\n   if string.find(file_name, \".\") ==\
    \ nil then\n      return 'No'\n   end\n   -- If the file's name does not end with\
    \ one of these: ['txt', 'exe', 'dll'], return 'No'.\n   if string.find(file_name,\
    \ \".\") == nil then\n      return 'No'\n   end\n   -- If the file's name does\
    \ not end with one of these: ['txt', 'exe', 'dll'], return 'No'.\n   if string.find(file_name,\
    \ \".\") == nil then\n      return 'No'\n   end\n   -- If the file's name does\
    \ not end with one of these: ['txt', 'exe', 'dll'], return 'No'.\n   if string.find(file_name,\
    \ \".\") == nil then\n      return 'No'\n   end\n   -- If the file's name does\
    \ not end with one of these: ['txt', 'exe', 'dll'], return 'No'.\n   if string.find(file_name,\
    \ \".\") == nil then\n      return 'No'\n   end\n   -- If the file's name does\
    \ not end with one of these: ['txt', 'exe', 'dll'], return 'No'.\n   if string.find(file_name,\
    \ \".\") == nil then\n      return 'No'\n   end\n   -- If the file's name does\
    \ not end with one of these: ['txt', 'exe', 'dll'], return 'No'.\n   if string.find(file_name,\
    \ \".\") == nil then\n      return 'No'\n   end\n   -- If the file's name does\
    \ not end with one of these: ['txt', 'exe', 'dll'], return 'No'.\n   if string.find(file_name,\
    \ \".\") == nil then\n      return 'No'\n   end\n   -- If the file's name does\
    \ not end with one of these: ['txt', 'exe', 'dll'], return 'No'.\n   if string.find(file_name,\
    \ \".\") == nil then\n      return 'No", "   -- Check that the file name contains\
    \ exactly one dot '.'\n   if file_name ~= nil then\n      if string.find(file_name,\
    \ \".\") ~= nil then\n         -- Check that the substring before the dot should\
    \ not be empty, and it starts with \n         -- a letter from the latin alphapet\
    \ ('a'-'z' and 'A'-'Z')\n         if string.find(file_name, \".\", 1, 1) ~= nil\
    \ then\n            if string.find(file_name, \".\", 1, 1) ~= nil then\n     \
    \          if string.find(file_name, \".\", 1, 1) ~= nil then\n              \
    \    if string.find(file_name, \".\", 1, 1) ~= nil then\n                    \
    \ -- Check that the substring after the dot should be one of these:\n        \
    \             -- - 'txt', 'exe', 'dll'\n                     if string.find(file_name,\
    \ \".\", 1, 2) ~= nil then\n                         if string.find(file_name,\
    \ \".\", 1, 2) ~= nil then\n                            if string.find(file_name,\
    \ \".\", 1, 2) ~= nil then\n                               if string.find(file_name,\
    \ \".\", 1, 2) ~= nil then\n                                  if string.find(file_name,\
    \ \".\", 1, 2) ~= nil then\n                                     if string.find(file_name,\
    \ \".\", 1, 2) ~= nil then\n                                        -- Check that\
    \ the substring after the dot should be one of these:\n                      \
    \                  -- - 'txt', 'exe', 'dll'\n                                \
    \        if string.find(file_name, \".\", 1, 3) ~= nil then\n                \
    \                           if string.find(file_name, \".\", 1, 3) ~= nil then\n\
    \                                              if string.find(file_name, \".\"\
    , 1, 3) ~= nil then\n                                                if string.find(file_name,\
    \ \".\", 1, 3) ~= nil then\n                                                 \
    \  if string.find(file_name, \".\", 1, 3) ~= nil then\n                      \
    \                                if string.find(file_name, \".\", 1, 3) ~= nil\
    \ then\n                                                         return 'Yes'\n\
    \                                                      end\n                 \
    \                                  end\n                                     \
    \           end\n                                             end\n          \
    \                                 end\n                                      \
    \ end\n                                   end\n                              \
    \  end\n                            end\n                         end\n      \
    \               end\n                  end\n               end\n            end\n\
    \         end\n      end\n   end\n   return 'No'\nend", "   if #file_name > 3\
    \ then\n      return 'No'\n   end\n   if #file_name == 0 then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= '\\' or file_name:sub(1, 1) ~= '~' then\n\
    \      return 'No'\n   end\n   if file_name:sub(2, 2) ~= '.' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= 'a' or file_name:sub(1, 1) ~= 'A'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(2, 2) ~= 'txt' or file_name:sub(2,\
    \ 2) ~= 'exe' or file_name:sub(2, 2) ~= 'dll' then\n      return 'No'\n   end\n\
    \   return 'Yes'\nend", "   if file_name == nil then\n      return nil\n   end",
  "   if #file_name > 3 then\n      return 'No'\n   end\n   if #file_name == 0 then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\\\' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= '-' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= '_' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'a' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'b'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'c' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'd' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'e' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= 'f' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'g' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'h'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'i' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'j' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'k' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= 'l' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'm' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'n'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'o' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'p' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'q' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= 'r' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 's' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 't'\
    \ then\n      return 'No'\n   end\n   if file_name", "    local file_name = file_name:lower()\n\
    \    local file_name = file_name:gsub('.', '')\n    local file_name = file_name:gsub('[^0-9a-z]',\
    \ '')\n    local file_name = file_name:gsub('^[^a-z]', '')\n    local file_name\
    \ = file_name:gsub('[^a-z]', '')\n    local file_name = file_name:gsub('[^0-9a-z]',\
    \ '')\n    local file_name = file_name:gsub('^[^0-9a-z]', '')\n    local file_name\
    \ = file_name:gsub('[^0-9a-z]', '')\n    local file_name = file_name:gsub('^[^0-9a-z]',\
    \ '')\n    local file_name = file_name:gsub('[^0-9a-z]', '')\n    local file_name\
    \ = file_name:gsub('^[^0-9a-z]', '')\n    local file_name = file_name:gsub('[^0-9a-z]',\
    \ '')\n    local file_name = file_name:gsub('^[^0-9a-z]', '')\n    local file_name\
    \ = file_name:gsub('[^0-9a-z]', '')\n    local file_name = file_name:gsub('^[^0-9a-z]',\
    \ '')\n    local file_name = file_name:gsub('[^0-9a-z]', '')\n    local file_name\
    \ = file_name:gsub('^[^0-9a-z]', '')\n    local file_name = file_name:gsub('[^0-9a-z]',\
    \ '')\n    local file_name = file_name:gsub('^[^0-9a-z]', '')\n    local file_name\
    \ = file_name:gsub('[^0-9a-z]', '')\n    local file_name = file_name:gsub('^[^0-9a-z]',\
    \ '')\n    local file_name = file_name:gsub('[^0-9a-z]', '')\n    local file_name\
    \ = file_name:gsub('^[^0-9a-z]', '')\n    local file_name = file_name:gsub('[^0-9a-z]',\
    \ '')\n    local file_name = file_name:gsub('^[^0-9a-z]', '')\n    local file_name\
    \ = file_name:gsub('[^0-9a-z]', '')\n    local file_name = file_name:gsub('^[^0-9a-z]',\
    \ '')\n    local file_name = file_name:gsub('[^0-9a-z]', '')\n    local file_name\
    \ = file_name:gsub('^[^0-9a-z]', '')\n    local file_name = file_name:gsub('[^0-9a-z]',\
    \ '')\n    local file_name = file_name:gsub('^[^0-9a-z]', '')\n    local file_name\
    \ = file_name:gsub('[^0-9a-z]', '')\n    local file_name = file_name:gsub('^[^0-9a-z]',\
    \ '')\n    local file_name = file_name:gsub('[^0-9a-z]', '')\n    local file_name\
    \ = file_name:gsub('^[^0-9a-z]', '')\n", "   if file_name == nil then\n      return\
    \ nil\n   end\n   if string.find(file_name, '.') ~= nil then\n      if string.find(file_name,\
    \ '.') ~= 1 then\n         return 'No'\n      end\n   end\n   if string.find(file_name,\
    \ '.') ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name, '.',\
    \ 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.', 1, true) ~= 1 then\n      return 'No'\n   end\n", "  local file_name =\
    \ file_name:gsub('%.', '')\n  local file_name = file_name:gsub('%.%.', '')\n \
    \ local file_name = file_name:gsub('%.%.%.', '')\n  local file_name = file_name:gsub('%.%.%.%.',\
    \ '')\n  local file_name = file_name:gsub('%.%.%.%.%.', '')\n  local file_name\
    \ = file_name:gsub('%.%.%.%.%.%.', '')\n  local file_name = file_name:gsub('%.%.%.%.%.%.%.',\
    \ '')\n  local file_name = file_name:gsub('%.%.%.%.%.%.%.%.', '')\n  local file_name\
    \ = file_name:gsub('%.%.%.%.%.%.%.%.', '')\n  local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.',\
    \ '')\n  local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.', '')\n  local file_name\
    \ = file_name:gsub('%.%.%.%.%.%.%.%.%.%.', '')\n  local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.',\
    \ '')\n  local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.', '')\n  local\
    \ file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.', '')\n  local file_name =\
    \ file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.', '')\n  local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.',\
    \ '')\n  local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.', '')\n  local\
    \ file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.', '')\n  local file_name\
    \ = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.', '')\n  local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.',\
    \ '')\n  local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.', '')\n  local\
    \ file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.', '')\n  local file_name\
    \ = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.', '')\n  local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.',\
    \ '')\n  local file_name = file_name:gsub('%.%.%.%.%.%.%.%.%.%.%.%.", "    local\
    \ file_name = file_name:lower()\n    local dot_index = file_name:find('.')\n \
    \   if dot_index == nil then\n        return 'No'\n    end\n    local file_name\
    \ = file_name:sub(1, dot_index)\n    local first_letter = file_name:sub(1, 1)\n\
    \    if first_letter ~= first_letter:lower():byte() then\n        return 'No'\n\
    \    end\n    local extensions = { \n        'txt', 'exe', 'dll', 'pyd', 'dll',\
    \ 'so', 'dylib', 'so', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll',\
    \ 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll',\
    \ 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll',\
    \ 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll',\
    \ 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll',\
    \ 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll',\
    \ 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll',\
    \ 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll',\
    \ 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll',\
    \ 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll',\
    \ 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll',\
    \ 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll',\
    \ 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll',\
    \ 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll',\
    \ 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll',\
    \ 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll',\
    \ 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll',\
    \ 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll',\
    \ 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll', 'dll',\
    \ 'dll', 'dll", "    local file_name = file_name:gsub('.*/','')\n    local file_name\
    \ = file_name:gsub('[^0-9a-zA-Z]','')\n    local file_name = file_name:gsub('^[^a-zA-Z]','')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z.]','')\n    local file_name =\
    \ file_name:gsub('[^a-zA-Z0-9]','')\n    local file_name = file_name:gsub('[^a-zA-Z0-9.]','')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z0-9.]','')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z0-9.]','')\n    local file_name = file_name:gsub('[^a-zA-Z0-9.]','')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z0-9.]','')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z0-9.]','')\n    local file_name = file_name:gsub('[^a-zA-Z0-9.]','')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z0-9.]','')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z0-9.]','')\n    local file_name = file_name:gsub('[^a-zA-Z0-9.]','')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z0-9.]','')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z0-9.]','')\n    local file_name = file_name:gsub('[^a-zA-Z0-9.]','')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z0-9.]','')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z0-9.]','')\n    local file_name = file_name:gsub('[^a-zA-Z0-9.]','')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z0-9.]','')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z0-9.]','')\n    local file_name = file_name:gsub('[^a-zA-Z0-9.]','')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z0-9.]','')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z0-9.]','')\n    local file_name = file_name:gsub('[^a-zA-Z0-9.]','')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z0-9.]','')\n    local file_name\
    \ = file_name:gsub('[^a-zA-Z0-9.]','')\n    local file_name = file_name:gsub('[^a-zA-Z0-9.]','')\n\
    \    local file_name = file_name:gsub('[^a-zA-Z", "   if #file_name > 3 then\n\
    \      return 'No'\n   end\n   if #file_name == 0 then\n      return 'No'\n  \
    \ end\n   if #file_name ~= 1 then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '0' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '9'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 2) ~= '.' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 3) ~= '' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 3) ~= 'txt' then\n      return 'No'\n   end\n\
    \   if file_name:sub(1, 3) ~= 'exe' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 3) ~= 'dll' then\n      return 'No'\n   end\n   return 'Yes'\nend", "   -- Check\
    \ if there are more than 3 digits in file's name\n   if string.find(file_name,\
    \ '%%d') then\n      return 'No'\n   end\n   -- Check if there is exactly one\
    \ dot '.'\n   if string.find(file_name, '%.') then\n      return 'No'\n   end\n\
    \   -- Check if there is exactly one dot '.'\n   if string.find(file_name, '%.')\
    \ then\n      return 'No'\n   end\n   -- Check if there is exactly one dot '.'\n\
    \   if string.find(file_name, '%.') then\n      return 'No'\n   end\n   -- Check\
    \ if there is exactly one dot '.'\n   if string.find(file_name, '%.') then\n \
    \     return 'No'\n   end\n   -- Check if there is exactly one dot '.'\n   if\
    \ string.find(file_name, '%.') then\n      return 'No'\n   end\n   -- Check if\
    \ there is exactly one dot '.'\n   if string.find(file_name, '%.') then\n    \
    \  return 'No'\n   end\n   -- Check if there is exactly one dot '.'\n   if string.find(file_name,\
    \ '%.') then\n      return 'No'\n   end\n   -- Check if there is exactly one dot\
    \ '.'\n   if string.find(file_name, '%.') then\n      return 'No'\n   end\n  \
    \ -- Check if there is exactly one dot '.'\n   if string.find(file_name, '%.')\
    \ then\n      return 'No'\n   end\n   -- Check if there is exactly one dot '.'\n\
    \   if string.find(file_name, '%.') then\n      return 'No'\n   end\n   -- Check\
    \ if there is exactly one dot '.'\n   if string.find(file_name, '%.') then\n \
    \     return 'No'\n   end\n   -- Check if there is exactly one dot '.'\n   if\
    \ string.find(file_name, '%.') then\n      return 'No'\n   end\n   -- Check if\
    \ there is exactly one dot '.'\n   if string.find(file_name, '%.') then\n    \
    \  return 'No'\n   end\n   -- Check if there is exactly one dot '.'\n   if string.find(file_name,\
    \ '%.') then\n      return 'No'\n   end\n   -- Check if there is exactly one dot\
    \ '.'\n   if string.find(file_name, '%.') then\n      return 'No'\n   end\n  \
    \ -- Check if there is exactly one dot '.'\n   if string.find(file_name, '%.')\
    \ then\n      return 'No'\n   end\n   -- Check if there is exactly one dot '.'\n\
    \   if string.find(file_name, '%.') then\n      return 'No'\n   end\n   -- Check\
    \ if there is exactly one dot '.'\n   if string.find(file_name, '%.') then\n \
    \     return 'No'", "    local file_name = file_name:gsub('[^0-9.]', '')\n   \
    \ local file_name = file_name:gsub('.+', '')\n    local file_name = file_name:gsub('^[^a-z]',\
    \ '')\n    local file_name = file_name:gsub('[^a-z]$', '')\n    local file_name\
    \ = file_name:gsub('[^a-z.]', '')\n    local file_name = file_name:gsub('[^a-z.]$',\
    \ '')\n    local file_name = file_name:gsub('[^a-z.]', '')\n    local file_name\
    \ = file_name:gsub('[^a-z.]$', '')\n    local file_name = file_name:gsub('[^a-z.]',\
    \ '')\n    local file_name = file_name:gsub('[^a-z.]$', '')\n    local file_name\
    \ = file_name:gsub('[^a-z.]', '')\n    local file_name = file_name:gsub('[^a-z.]$',\
    \ '')\n    local file_name = file_name:gsub('[^a-z.]', '')\n    local file_name\
    \ = file_name:gsub('[^a-z.]$', '')\n    local file_name = file_name:gsub('[^a-z.]',\
    \ '')\n    local file_name = file_name:gsub('[^a-z.]$', '')\n    local file_name\
    \ = file_name:gsub('[^a-z.]', '')\n    local file_name = file_name:gsub('[^a-z.]$',\
    \ '')\n    local file_name = file_name:gsub('[^a-z.]', '')\n    local file_name\
    \ = file_name:gsub('[^a-z.]$', '')\n    local file_name = file_name:gsub('[^a-z.]',\
    \ '')\n    local file_name = file_name:gsub('[^a-z.]$', '')\n    local file_name\
    \ = file_name:gsub('[^a-z.]', '')\n    local file_name = file_name:gsub('[^a-z.]$',\
    \ '')\n    local file_name = file_name:gsub('[^a-z.]', '')\n    local file_name\
    \ = file_name:gsub('[^a-z.]$', '')\n    local file_name = file_name:gsub('[^a-z.]',\
    \ '')\n    local file_name = file_name:gsub('[^a-z.]$', '')\n    local file_name\
    \ = file_name:gsub('[^a-z.]', '')\n    local file_name = file_name:gsub('[^a-z.]$',\
    \ '')\n    local file_name = file_name:gsub('[^a-z.]', '')\n    local file_name\
    \ = file_name:gsub('[^a-z.]$', '')\n    local file_name = file_name:gsub('[^a-z.]',\
    \ '')\n    local file_name = file_name:g", "   if string.find(file_name, \".\"\
    ) ~= nil then\n      local file_name = string.gsub(file_name, \" \", \"\")\n \
    \     local file_name = string.gsub(file_name, \" \", \"\")\n      local file_name\
    \ = string.gsub(file_name, \" \", \"\")\n      local file_name = string.gsub(file_name,\
    \ \" \", \"\")\n      local file_name = string.gsub(file_name, \" \", \"\")\n\
    \      local file_name = string.gsub(file_name, \" \", \"\")\n      local file_name\
    \ = string.gsub(file_name, \" \", \"\")\n      local file_name = string.gsub(file_name,\
    \ \" \", \"\")\n      local file_name = string.gsub(file_name, \" \", \"\")\n\
    \      local file_name = string.gsub(file_name, \" \", \"\")\n      local file_name\
    \ = string.gsub(file_name, \" \", \"\")\n      local file_name = string.gsub(file_name,\
    \ \" \", \"\")\n      local file_name = string.gsub(file_name, \" \", \"\")\n\
    \      local file_name = string.gsub(file_name, \" \", \"\")\n      local file_name\
    \ = string.gsub(file_name, \" \", \"\")\n      local file_name = string.gsub(file_name,\
    \ \" \", \"\")\n      local file_name = string.gsub(file_name, \" \", \"\")\n\
    \      local file_name = string.gsub(file_name, \" \", \"\")\n      local file_name\
    \ = string.gsub(file_name, \" \", \"\")\n      local file_name = string.gsub(file_name,\
    \ \" \", \"\")\n      local file_name = string.gsub(file_name, \" \", \"\")\n\
    \      local file_name = string.gsub(file_name, \" \", \"\")\n      local file_name\
    \ = string.gsub(file_name, \" \", \"\")\n      local file_name = string.gsub(file_name,\
    \ \" \", \"\")\n      local file_name = string.gsub(file_name, \" \", \"\")\n\
    \      local file_name = string.gsub(file_name, \" \", \"\")\n      local file_name\
    \ = string.gsub(file_name, \" \", \"\")\n      local file_name = string.gsub(file_name,\
    \ \" \", \"\")\n      local file_name = string.gsub(file_name, \" \", \"\")\n\
    \      local file_name = string.gsub(file_name, \" \", \"\")\n      local file_name\
    \ = string.gsub(file_name, \" \", \"\")\n      local file_name = string.gsub(file_name,\
    \ \" \", \"\")\n      local file_name = string.gsub(file_name, \" \", \"\")\n\
    \      local file_name = string.gsub(file_name, \" \", \"\")\n      local file_name\
    \ = string.gsub(file_name, \" \", \"\")\n      local file_name = string.gsub(file_name,\
    \ \" \", \"\")\n      local file_name = string.gsub(file_name, \" \", \"\")\n\
    \      local file_name = string.gsub(file_name, \" \", \"\")\n      local file_name\
    \ = string.gsub(file_name, \" \", \"\")\n      local file_name = string.gsub(file_name,\
    \ \" \", \"\")\n      local file_name = string.gsub(file_name, \" \", \"\")\n\
    \      local file_name = string.g", "   if #file_name > 3 then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= '-' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= '0' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '9' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '-'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'a' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'z' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'A' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= 'Z' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '-' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 't'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'e' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'x' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 't' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= 'e' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'x' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 't'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'e' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'x' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 't' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= 'e' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'x' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 't'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'e' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'x' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 't' then\n      return 'No'\n", "   if #file_name\
    \ > 3 then\n      return 'No'\n   end\n   if #file_name == 0 then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\' or file_name:sub(1, 1) ~= '.'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= string.upper(file_name:sub(1,\
    \ 1)) then\n      return 'No'\n   end\n   if file_name:sub(2, 2) ~= '.' or file_name:sub(3,\
    \ 3) ~= '.' or file_name:sub(1, 1) ~= string.lower(file_name:sub(1, 1)) then\n\
    \      return 'No'\n   end\n   return 'Yes'\nend", "   local file_name = file_name:gsub('%w+%.',\
    \ '')\n   local file_name = file_name:gsub('.%w+', '')\n   local file_name = file_name:gsub('%w+',\
    \ '')\n   local file_name = file_name:gsub('%w+%.', '')\n   local file_name =\
    \ file_name:gsub('.%w+', '')\n   local file_name = file_name:gsub('%w+', '')\n\
    \   local file_name = file_name:gsub('%w+%.', '')\n   local file_name = file_name:gsub('.%w+',\
    \ '')\n   local file_name = file_name:gsub('%w+', '')\n   local file_name = file_name:gsub('%w+%.',\
    \ '')\n   local file_name = file_name:gsub('.%w+', '')\n   local file_name = file_name:gsub('%w+',\
    \ '')\n   local file_name = file_name:gsub('%w+%.', '')\n   local file_name =\
    \ file_name:gsub('.%w+', '')\n   local file_name = file_name:gsub('%w+', '')\n\
    \   local file_name = file_name:gsub('%w+%.', '')\n   local file_name = file_name:gsub('.%w+',\
    \ '')\n   local file_name = file_name:gsub('%w+', '')\n   local file_name = file_name:gsub('%w+%.',\
    \ '')\n   local file_name = file_name:gsub('.%w+', '')\n   local file_name = file_name:gsub('%w+',\
    \ '')\n   local file_name = file_name:gsub('%w+%.', '')\n   local file_name =\
    \ file_name:gsub('.%w+', '')\n   local file_name = file_name:gsub('%w+', '')\n\
    \   local file_name = file_name:gsub('%w+%.', '')\n   local file_name = file_name:gsub('.%w+',\
    \ '')\n   local file_name = file_name:gsub('%w+', '')\n   local file_name = file_name:gsub('%w+%.',\
    \ '')\n   local file_name = file_name:gsub('.%w+', '')\n   local file_name = file_name:gsub('%w+',\
    \ '')\n   local file_name = file_name:gsub('%w+%.', '')\n   local file_name =\
    \ file_name:gsub('.%w+', '')\n   local file_name = file_name:gsub('%w+', '')\n\
    \   local file_name = file_name:gsub('%w+%.', '')\n   local file_name = file_name:gsub('.%w+',\
    \ '')\n   local file_name = file_name:gsub('%w+', '')\n   local file_name = file_name:gsub('%w+%.',\
    \ '')\n   local file_name = file_name:gsub('.%w+', '')\n   local file_name = file_name",
  "   if #file_name > 3 then\n      return 'No'\n   end\n   if #file_name < 1 then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '.' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '0' then\n      return 'No'\n   end\n\
    \   if file_name:sub(1, 1) ~= '9' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'a' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'z'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'A' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'Z' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 2) ~= '.txt' then\n      return 'No'\n   end\n\
    \   if file_name:sub(1, 2) ~= '.exe' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 2) ~= '.dll' then\n      return 'No'\n   end\n   return 'Yes'\nend", "    local\
    \ digits = string.gsub(file_name, '[^0-9]', '')\n    if digits ~= '' then\n  \
    \      return 'No'\n    end\n    local dot_index = string.find(file_name, '.',\
    \ 1)\n    if dot_index == nil then\n        return 'No'\n    end\n    local dot_string\
    \ = string.sub(file_name,dot_index + 1, dot_index)\n    if dot_string ~= '' then\n\
    \        if string.find(dot_string, '.') ~= nil then\n            return 'No'\n\
    \        end\n        if string.find(dot_string, '.') ~= 1 then\n            return\
    \ 'No'\n        end\n        if string.find(dot_string, '.') ~= 1 then\n     \
    \       return 'No'\n        end\n        if string.find(dot_string, '.') ~= 1\
    \ then\n            return 'No'\n        end\n        if string.find(dot_string,\
    \ '.') ~= 1 then\n            return 'No'\n        end\n        if string.find(dot_string,\
    \ '.') ~= 1 then\n            return 'No'\n        end\n        if string.find(dot_string,\
    \ '.') ~= 1 then\n            return 'No'\n        end\n        if string.find(dot_string,\
    \ '.') ~= 1 then\n            return 'No'\n        end\n        if string.find(dot_string,\
    \ '.') ~= 1 then\n            return 'No'\n        end\n        if string.find(dot_string,\
    \ '.') ~= 1 then\n            return 'No'\n        end\n        if string.find(dot_string,\
    \ '.') ~= 1 then\n            return 'No'\n        end\n        if string.find(dot_string,\
    \ '.') ~= 1 then\n            return 'No'\n        end\n        if string.find(dot_string,\
    \ '.') ~= 1 then\n            return 'No'\n        end\n        if string.find(dot_string,\
    \ '.') ~= 1 then\n            return 'No'\n        end\n        if string.find(dot_string,\
    \ '.') ~= 1 then\n            return 'No'\n        end\n        if string.find(dot_string,\
    \ '.') ~= 1 then\n            return 'No'\n        end\n        if string.find(dot_string,\
    \ '.') ~= 1 then\n            return 'No'\n        end\n        if string.find(dot_string,\
    \ '.') ~= 1 then\n            return 'No'\n        end\n        if string.find(dot_string,\
    \ '.') ~= 1 then\n            return 'No'\n        end\n        if string.find(dot_string,\
    \ '.') ~= 1 then\n            return 'No'\n        end\n        if string.find(dot_string,\
    \ '.') ~= 1 then\n            return 'No'\n        end\n        if string.find(dot_string,\
    \ '.') ~= 1 then\n            return 'No'\n        end\n        if string.find(dot_string,\
    \ '.') ~= 1 then\n            return 'No'\n        end", "    local file_name\
    \ = file_name:lower()\n    local file_name = file_name:gsub('.', '')\n    local\
    \ file_name = file_name:gsub('[^0-9a-z]', '')\n    local file_name = file_name:gsub('^[^A-Za-z]',\
    \ '')\n    local file_name = file_name:gsub('[^A-Za-z]', '')\n    local file_name\
    \ = file_name:gsub('[^A-Za-z]', '')\n    local file_name = file_name:gsub('[^A-Za-z]',\
    \ '')\n    local file_name = file_name:gsub('[^A-Za-z]', '')\n    local file_name\
    \ = file_name:gsub('[^A-Za-z]', '')\n    local file_name = file_name:gsub('[^A-Za-z]',\
    \ '')\n    local file_name = file_name:gsub('[^A-Za-z]', '')\n    local file_name\
    \ = file_name:gsub('[^A-Za-z]', '')\n    local file_name = file_name:gsub('[^A-Za-z]',\
    \ '')\n    local file_name = file_name:gsub('[^A-Za-z]', '')\n    local file_name\
    \ = file_name:gsub('[^A-Za-z]', '')\n    local file_name = file_name:gsub('[^A-Za-z]',\
    \ '')\n    local file_name = file_name:gsub('[^A-Za-z]', '')\n    local file_name\
    \ = file_name:gsub('[^A-Za-z]', '')\n    local file_name = file_name:gsub('[^A-Za-z]',\
    \ '')\n    local file_name = file_name:gsub('[^A-Za-z]', '')\n    local file_name\
    \ = file_name:gsub('[^A-Za-z]', '')\n    local file_name = file_name:gsub('[^A-Za-z]',\
    \ '')\n    local file_name = file_name:gsub('[^A-Za-z]', '')\n    local file_name\
    \ = file_name:gsub('[^A-Za-z]', '')\n    local file_name = file_name:gsub('[^A-Za-z]',\
    \ '')\n    local file_name = file_name:gsub('[^A-Za-z]', '')\n    local file_name\
    \ = file_name:gsub('[^A-Za-z]', '')\n    local file_name = file_name:gsub('[^A-Za-z]',\
    \ '')\n    local file_name = file_name:gsub('[^A-Za-z]', '')\n    local file_name\
    \ = file_name:gsub('[^A-Za-z]', '')\n    local file_name = file_name:gsub('[^A-Za-z]',\
    \ '')\n    local file_name = file_name:gsub('[^A-Za-z]', '')\n    local file_name\
    \ = file_name:gsub('[^A-Za-z]', '')\n    local file_name = file_name:gsub('[^A-Za-z]',\
    \ '')\n    local file_name = file_name:gsub('[^A-Za-z]", "   local file_name =\
    \ file_name:gsub('%.', '')\n   if #file_name > 3 then\n      return 'No'\n   end\n\
    \   if file_name:sub(1, 1) ~= 'a' then\n      return 'No'\n   end\n   if file_name:sub(2,\
    \ 2) ~= 'z' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'A'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(3, 3) ~= {'txt', 'exe',\
    \ 'dll'} then\n      return 'No'\n   end\n   return 'Yes'\nend", "   if file_name\
    \ == nil then\n      return nil\n   end\n   if #file_name < 3 then\n      return\
    \ nil\n   end\n   if file_name:sub(1, 1) ~= '-' then\n      return nil\n   end\n\
    \   if file_name:sub(1, 1) ~= '0' then\n      return nil\n   end\n   if file_name:sub(1,\
    \ 1) ~= '9' then\n      return nil\n   end\n   if file_name:sub(1, 2) ~= '.' then\n\
    \      return nil\n   end\n   if file_name:sub(1, 3) ~= '' then\n      return\
    \ nil\n   end\n   if file_name:sub(1, 3) ~= 'exe' then\n      return nil\n   end\n\
    \   if file_name:sub(1, 3) ~= 'dll' then\n      return nil\n   end\n   return\
    \ 'Yes'\nend", "   if file_name == nil then\n      return nil\n   end\n   if #file_name\
    \ < 3 then\n      return nil\n   end\n   if file_name:sub(1, 1) ~= '^' then\n\
    \      return nil\n   end\n   if file_name:sub(1, 1) ~= 'a' then\n      return\
    \ nil\n   end\n   if file_name:sub(1, 1) ~= 'z' then\n      return nil\n   end\n\
    \   if file_name:sub(1, 1) ~= 'A' then\n      return nil\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'Z' then\n      return nil\n   end\n   if file_name:sub(1, 2) ~= '.' then\n\
    \      return nil\n   end\n   if file_name:sub(2, 3) ~= '.' then\n      return\
    \ nil\n   end\n   if file_name:sub(3, 3) ~= 'txt' then\n      return nil\n   end\n\
    \   if file_name:sub(3, 3) ~= 'exe' then\n      return nil\n   end\n   if file_name:sub(3,\
    \ 3) ~= 'dll' then\n      return nil\n   end\n   return 'Yes'\nend", "   if file_name\
    \ == nil then\n      return nil\n   end\n   if #file_name > 3 then\n      return\
    \ 'No'\n   end\n   if #file_name < 1 then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '\\' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\\
    \\' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '/'  then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '~'  then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\'' then\n      return 'No'\n \
    \  end\n   if file_name:sub(1, 1) ~= '-'  then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= '_'  then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '~'  then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '^'\
    \  then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '`'  then\n \
    \     return 'No'\n   end\n   if file_name:sub(1, 1) ~= '<'  then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '='  then\n      return 'No'\n  \
    \ end\n   if file_name:sub(1, 1) ~= '?'  then\n      return 'No'\n   end\n   if\
    \ file_name:sub(1, 1) ~= '|'  then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '\"'  then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '&'\
    \  then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '('  then\n \
    \     return 'No'\n   end\n   if file_name:sub(1, 1) ~= ')'  then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '['  then\n      return 'No'\n  \
    \ end\n   if file_name:sub(1, 1) ~= ']'  then\n      return 'No'\n   end\n   if\
    \ file_name:sub(1, 1) ~= '{'  then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '}'  then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '|'\
    \  then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ", "   -- Check\
    \ that the file name contains exactly one dot '.'\n   if file_name ~= nil and\
    \ file_name ~= '' then\n      -- Get the substring before the dot\n      local\
    \ file_name =  file_name:sub(1, file_name:find('%.'))\n      -- Check that the\
    \ substring starts with a letter from the latin alphabet\n      local letter =\
    \ file_name:sub(1, 1)\n      -- Check that the substring after the dot is one\
    \ of these\n      local extensions = {'txt', 'exe', 'dll'}\n      if extensions\
    \ ~= nil and extensions ~= '' then\n         if #extensions ~= 0 then\n      \
    \      -- Check that the substring after the dot is one of these\n           \
    \ for i = 1, #extensions do\n               if file_name == extensions[i] then\n\
    \                  return 'Yes'\n               end\n            end\n       \
    \  else\n            return 'No'\n         end\n      else\n         return 'No'\n\
    \      end\n   else\n      return 'No'\n   end\nend", "   if string.find(file_name,\
    \ '.') ~= nil then\n      local file_ext = string.sub(file_name, string.find(file_name,\
    \ '.') + 1)\n      if file_ext ~= 'txt' and file_ext ~= 'exe' and file_ext ~=\
    \ 'dll' then\n         return 'No'\n      else\n         if string.find(file_name,\
    \ '.') ~= 1 then\n            local file_ext = string.sub(file_name, 1, string.find(file_name,\
    \ '.'))\n            if file_ext ~= 'txt' and file_ext ~= 'exe' and file_ext ~=\
    \ 'dll' then\n               return 'No'\n            else\n               if\
    \ string.find(file_name, '.') ~= 1 then\n                  local file_ext = string.sub(file_name,\
    \ 1, string.find(file_name, '.'))\n                  if file_ext ~= 'txt' and\
    \ file_ext ~= 'exe' and file_ext ~= 'dll' then\n                     return 'No'\n\
    \                  else\n                     return 'Yes'\n                 \
    \ end\n               else\n                  return 'Yes'\n               end\n\
    \            end\n         else\n            return 'Yes'\n         end\n    \
    \  end\n   else\n      return 'Yes'\n   end\nend", "   if file_name == nil then\n\
    \      return nil\n   end\n   if #file_name > 3 then\n      return 'No'\n   end\n\
    \   if #file_name == 1 then\n      return 'No'\n   end\n   if #file_name ~= 1\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '.' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'a' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'z' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= 'A' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'Z' then\n      return 'No'\n   end\n   return 'Yes'\nend", "   -- Check\
    \ if file name contains only digits and one dot\n   if string.find(file_name,\
    \ \"%[%d%.]\") then\n      return \"No\"\n   end\n   -- Check if file name contains\
    \ only latin alphabet letters and one dot\n   if string.find(file_name, \"%[%a%.]\"\
    ) then\n      return \"No\"\n   end\n   -- Check if file name contains only latin\
    \ alphabet letters and one dot\n   if string.find(file_name, \"%[%A%.]\") then\n\
    \      return \"No\"\n   end\n   -- Check if file name contains only latin alphabet\
    \ letters and one dot\n   if string.find(file_name, \"%[%a%]\") then\n      return\
    \ \"No\"\n   end\n   -- Check if file name contains only latin alphabet letters\
    \ and one dot\n   if string.find(file_name, \"%[%A%]\") then\n      return \"\
    No\"\n   end\n   -- Check if file name contains only latin alphabet letters and\
    \ one dot\n   if string.find(file_name, \"%[%a%]\") then\n      return \"No\"\n\
    \   end\n   -- Check if file name contains only latin alphabet letters and one\
    \ dot\n   if string.find(file_name, \"%[%A%]\") then\n      return \"No\"\n  \
    \ end\n   -- Check if file name contains only latin alphabet letters and one dot\n\
    \   if string.find(file_name, \"%[%a%]\") then\n      return \"No\"\n   end\n\
    \   -- Check if file name contains only latin alphabet letters and one dot\n \
    \  if string.find(file_name, \"%[%A%]\") then\n      return \"No\"\n   end\n \
    \  -- Check if file name contains only latin alphabet letters and one dot\n  \
    \ if string.find(file_name, \"%[%a%]\") then\n      return \"No\"\n   end\n  \
    \ -- Check if file name contains only latin alphabet letters and one dot\n   if\
    \ string.find(file_name, \"%[%A%]\") then\n      return \"No\"\n   end\n   --\
    \ Check if file name contains only latin alphabet letters and one dot\n   if string.find(file_name,\
    \ \"%[%a%]\") then\n      return \"No\"\n   end\n   -- Check if file name contains\
    \ only latin alphabet letters and one dot\n   if string.find(file_name, \"%[%A%]\"\
    ) then\n      return \"No\"\n   end\n   -- Check if file name contains only latin\
    \ alphabet letters and one dot\n   if string.find(file_name, \"%["]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

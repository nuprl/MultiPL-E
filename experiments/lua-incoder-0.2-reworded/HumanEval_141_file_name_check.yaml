name: HumanEval_141_file_name_check
language: lua
prompt: "-- Create a function which takes a string representing a file's name, and\
  \ returns\n-- 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  -- A file's name is considered to be valid if and only if all the following conditions\
  \ \n-- are met:\n-- - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n-- - The file's name contains exactly one dot '.'\n-- - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n-- the\
  \ latin alphapet ('a'-'z' and 'A'-'Z').\n-- - The substring after the dot should\
  \ be one of these: ['txt', 'exe', 'dll']\n-- Examples:\n-- >>> file_name_check('example.txt')\n\
  -- 'Yes'\n-- >>> file_name_check('1example.dll')\n-- 'No'\nlocal function file_name_check(file_name)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = file_name_check\n\
  \    lu.assertEquals(candidate('example.txt'), 'Yes')\n    lu.assertEquals(candidate('1example.dll'),\
  \ 'No')\n    lu.assertEquals(candidate('s1sdf3.asd'), 'No')\n    lu.assertEquals(candidate('K.dll'),\
  \ 'Yes')\n    lu.assertEquals(candidate('MY16FILE3.exe'), 'Yes')\n    lu.assertEquals(candidate('His12FILE94.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('_Y.txt'), 'No')\n    lu.assertEquals(candidate('?aREYA.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('/this_is_valid.dll'), 'No')\n    lu.assertEquals(candidate('this_is_valid.wow'),\
  \ 'No')\n    lu.assertEquals(candidate('this_is_valid.txt'), 'Yes')\n    lu.assertEquals(candidate('this_is_valid.txtexe'),\
  \ 'No')\n    lu.assertEquals(candidate('#this2_i4s_5valid.ten'), 'No')\n    lu.assertEquals(candidate('@this1_is6_valid.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('this_is_12valid.6exe4.txt'), 'No')\n   \
  \ lu.assertEquals(candidate('all.exe.txt'), 'No')\n    lu.assertEquals(candidate('I563_No.exe'),\
  \ 'Yes')\n    lu.assertEquals(candidate('Is3youfault.txt'), 'Yes')\n    lu.assertEquals(candidate('no_one#knows.dll'),\
  \ 'Yes')\n    lu.assertEquals(candidate('1I563_Yes3.exe'), 'No')\n    lu.assertEquals(candidate('I563_Yes3.txtt'),\
  \ 'No')\n    lu.assertEquals(candidate('final..txt'), 'No')\n    lu.assertEquals(candidate('final132'),\
  \ 'No')\n    lu.assertEquals(candidate('_f4indsartal132.'), 'No')\n    lu.assertEquals(candidate('.txt'),\
  \ 'No')\n    lu.assertEquals(candidate('s.'), 'No')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  -- Check that the file name contains exactly one dot '.'\n  if file_name:sub(1,1)\
    \ ~= '.' then\n    return 'No'\n  end\n  -- Check that the substring before the\
    \ dot should not be empty, and it starts with a letter from \n  -- latin alphapet\
    \ ('a'-'z' and 'A'-'Z')\n  if file_name:sub(1,1) == '' then\n    return 'No'\n\
    \  end\n  -- Check that the substring after the dot should be one of these: ['txt',\
    \ 'exe', 'dll']\n  if string.find(file_name, '.') ~= nil then\n    local extension\
    \ = file_name:sub(string.rep('.', #file_name))\n    if string.find(extension,\
    \ 'exe') ~= nil then\n      return 'Yes'\n    end\n    if string.find(extension,\
    \ 'dll') ~= nil then\n      return 'Yes'\n    end\n  end\n  return 'No'\nend",
  "   if #file_name > 3 then\n      return 'No'\n   end\n   if #file_name < 1 then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '.' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '0' then\n      return 'No'\n   end\n\
    \   if file_name:sub(1, 1) ~= '9' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'a' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'z'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'A' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'Z' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 2) ~= '.' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 2) ~= 'txt' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 2) ~= 'exe' then\n      return 'No'\n   end\n   if file_name:sub(1, 2) ~= 'dll'\
    \ then\n      return 'No'\n   end\n   return 'Yes'\nend", "  -- Check that the\
    \ file name contains exactly one dot '.'\n  if string.find(file_name, '.') ~=\
    \ nil then\n    -- Check that the substring before the dot should not be empty,\
    \ and it starts with a letter from the latin alphapet ('a'-'z' and 'A'-'Z')\n\
    \    if string.sub(file_name,1,1) ~= '' then\n      -- Check that the substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n      local allowed_extensions\
    \ = {'txt', 'exe', 'dll'}\n      if string.find(file_name, allowed_extensions)\
    \ ~= nil then\n        return 'Yes'\n      else\n        return 'No'\n      end\n\
    \    else\n      return 'No'\n    end\n  else\n    return 'No'\n  end\nend", " \
    \  if #file_name > 3 then\n      return 'No'\n   end\n   if #file_name == 0 then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\\\' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= '-' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= '0' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '9' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '-'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'a' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'z' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'A' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= 'Z' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'a' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'z'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'A' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'Z' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= '0' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= '9' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '-' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'a'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'z' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'A' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'Z' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= '0' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '9' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '-'\
    \ then\n      return 'No'\n   end\n   if file_name:sub", "   if file_name == nil\
    \ then\n      return nil\n   end", "   if file_name == nil then\n      return\
    \ 'No'\n   end\n   if #file_name < 3 then\n      return 'No'\n   end\n   if string.find(file_name,\
    \ '.') ~= nil then\n      if string.find(file_name, '.') ~= 1 then\n         return\
    \ 'No'\n      end\n   end\n   if string.find(file_name, '.') ~= 1 then\n     \
    \ return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name, '.', 1, true) ~= 1 then\n\
    \      return 'No'\n   end\n   if string.find(file_name", "  local file_name =\
    \ file_name:gsub('.*/','')\n  local file_name = file_name:gsub('%.','')\n  local\
    \ file_name = file_name:gsub('^%[a-z_]','')\n  local file_name = file_name:gsub('%[A-z_]','')\n\
    \  local file_name = file_name:gsub('%0[a-z_]','')\n  local file_name = file_name:gsub('%0[A-z_]','')\n\
    \  local file_name = file_name:gsub('%[a-z_][0-9]','')\n  local file_name = file_name:gsub('%[A-z_][0-9]','')\n\
    \  local file_name = file_name:gsub('%0[a-z_][0-9]','')\n  local file_name = file_name:gsub('%0[A-z_][0-9]','')\n\
    \  local file_name = file_name:gsub('%[a-z_][0-9][0-9]','')\n  local file_name\
    \ = file_name:gsub('%[A-z_][0-9][0-9]','')\n  local file_name = file_name:gsub('%0[a-z_][0-9][0-9]','')\n\
    \  local file_name = file_name:gsub('%0[A-z_][0-9][0-9]','')\n  local file_name\
    \ = file_name:gsub('%[a-z_][0-9][0-9][0-9]','')\n  local file_name = file_name:gsub('%[A-z_][0-9][0-9][0-9]','')\n\
    \  local file_name = file_name:gsub('%0[a-z_][0-9][0-9][0-9]','')\n  local file_name\
    \ = file_name:gsub('%0[A-z_][0-9][0-9][0-9]','')\n  local file_name = file_name:gsub('%[a-z_][0-9][0-9][0-9][0-9]','')\n\
    \  local file_name = file_name:gsub('%[A-z_][0-9][0-9][0-9][0-9]','')\n  local\
    \ file_name = file_name:gsub('%0[a-z_][0-9][0-9][0-9][0-9]','')\n  local file_name\
    \ = file_name:gsub('%0[A-z_][0-9][0-9][0-9][0-9]','')\n  local file_name = file_name:gsub('%[a-z_][0-9][0-9][0-9][0-9][0-9]','')\n\
    \  local file_name = file_name:gsub('%[A-z_][0-9][0-9][0-9][0-9][0-9]','')\n \
    \ local file_name = file_name:gsub('%0[a-z_][0-9][0-9][0-9][0-9][0-9]','')\n \
    \ local file_name = file_name:gsub('%0[A-z_][0-9][0-9][0-9][0-9][0-9]','')\n \
    \ local file_name = file_name:", "   if file_name == nil then\n      return nil\n\
    \   end\n   if #file_name < 3 then\n      return nil\n   end\n   if string.find(file_name,\
    \ '.') ~= 1 then\n      return nil\n   end\n   if string.sub(file_name,1,1) ~=\
    \ 'a' then\n      return nil\n   end\n   if string.sub(file_name,1,1) ~= 'z' then\n\
    \      return nil\n   end\n   if string.sub(file_name,1,1) ~= 'A' then\n     \
    \ return nil\n   end\n   if string.sub(file_name,1,1) ~= 'Z' then\n      return\
    \ nil\n   end\n   if string.find(file_name, '.', 1) ~= 1 then\n      return nil\n\
    \   end\n   if string.find(file_name, '.', 2) ~= 1 then\n      return nil\n  \
    \ end\n   if string.find(file_name, '.', 3) ~= 1 then\n      return nil\n   end\n\
    \   if string.find(file_name, '.', 4) ~= 1 then\n      return nil\n   end\n  \
    \ if string.find(file_name, '.', 5) ~= 1 then\n      return nil\n   end\n   if\
    \ string.find(file_name, '.', 6) ~= 1 then\n      return nil\n   end\n   if string.find(file_name,\
    \ '.', 7) ~= 1 then\n      return nil\n   end\n   if string.find(file_name, '.',\
    \ 8) ~= 1 then\n      return nil\n   end\n   if string.find(file_name, '.', 9)\
    \ ~= 1 then\n      return nil\n   end\n   return 'Yes'\nend", "   -- Check that\
    \ the file name contains exactly one dot '.'\n   if file_name ~= nil then\n  \
    \    if string.find(file_name, \".\") ~= nil then\n         -- Check that the\
    \ substring before the dot should not be empty, and it starts with a letter from\
    \ the latin alphapet ('a'-'z' and 'A'-'Z')\n         if string.find(file_name,\
    \ \".\", 1, 1) ~= nil then\n            if string.find(file_name, \".\", 1, 1)\
    \ ~= nil then\n               if string.find(file_name, \".\", 1, 1) ~= nil then\n\
    \                  if string.find(file_name, \".\", 1, 1) ~= nil then\n      \
    \               if string.find(file_name, \".\", 1, 1) ~= nil then\n         \
    \                if string.find(file_name, \".\", 1, 1) ~= nil then\n        \
    \                    if string.find(file_name, \".\", 1, 1) ~= nil then\n    \
    \                           if string.find(file_name, \".\", 1, 1) ~= nil then\n\
    \                                  if string.find(file_name, \".\", 1, 1) ~= nil\
    \ then\n                                     if string.find(file_name, \".\",\
    \ 1, 1) ~= nil then\n                                         if string.find(file_name,\
    \ \".\", 1, 1) ~= nil then\n                                            if string.find(file_name,\
    \ \".\", 1, 1) ~= nil then\n                                               if\
    \ string.find(file_name, \".\", 1, 1) ~= nil then\n                          \
    \                        if string.find(file_name, \".\", 1, 1) ~= nil then\n\
    \                                                     if string.find(file_name,\
    \ \".\", 1, 1) ~= nil then\n                                                 \
    \        if string.find(file_name, \".\", 1, 1) ~= nil then\n                \
    \                                             if string.find(file_name, \".\"\
    , 1, 1) ~= nil then\n                                                        \
    \         if string.find(file_name, \".\", 1, 1) ~= nil then\n               \
    \                                                     if string.find(file_name,\
    \ \".\", 1, 1) ~= nil then\n                                                 \
    \                        if string.find(file_name, \".\", 1, 1) ~= nil then\n\
    \                                                                            if\
    \ string.find(file_name, \".\", 1, 1) ~= nil then\n                          \
    \                                                     if string.find(file_name,\
    \ \".\", 1, 1) ~= nil then\n                                                 \
    \                                 if string.find(file_name, \".\", 1, 1) ~= nil\
    \ then\n                                                                     \
    \                if string.find(file_name, \".\", 1, 1) ~= nil then\n        \
    \                                                                            \
    \    if string.find(file_name, \".\", 1, 1) ~= nil then\n                    \
    \                                                                       if string.find(file_name,\
    \ \".\", 1, 1) ~= nil then\n                                                 \
    \                                             if string.find(file_name, \".\"\
    , 1, 1) ~= nil then\n                                                        \
    \                                         if string.find(file_name, \".", "  \
    \ -- Check that the file name contains exactly one dot '.'\n   if file_name ~=\
    \ nil then\n      if file_name:sub(1, 1) ~= '.' then\n         return 'No'\n \
    \     end\n   end\n   -- Check that the substring before the dot is not empty,\
    \ and it starts with a letter \n   -- from the latin alphapet ('a'-'z' and 'A'-'Z')\n\
    \   if file_name ~= nil then\n      if file_name:sub(1, 1) ~= '.' then\n     \
    \    if file_name:sub(1, 1) ~= 'a' then\n            if file_name:sub(1, 1) ~=\
    \ 'A' then\n               return 'No'\n            end\n         end\n      end\n\
    \   end\n   -- Check that the substring after the dot should be one of these:\
    \ ['txt', 'exe', 'dll']\n   if file_name ~= nil then\n      if file_name:sub(1,\
    \ 4) ~= '.' then\n         if file_name:sub(1, 4) ~= 'exe' then\n            if\
    \ file_name:sub(1, 4) ~= 'dll' then\n               return 'No'\n            end\n\
    \         end\n      end\n   end\n   return 'Yes'\nend", "   if file_name == nil\
    \ then\n      return nil\n   end\n   if string.len(file_name) > 3 then\n     \
    \ return 'No'\n   end\n   if string.find(file_name, '.') then\n      return 'No'\n\
    \   end\n   if string.find(file_name, '^[a-zA-Z]') then\n      return 'No'\n \
    \  end\n   if string.find(file_name, '^[0-9]') then\n      return 'No'\n   end\n\
    \   return 'Yes'\nend", "    local file_name = file_name:gsub('.*/','')\n    local\
    \ file_name = file_name:gsub('%.','')\n    local file_name = file_name:gsub('^%[Aa][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Bb][Zz]','')\n    local file_name = file_name:gsub('%[Cc][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Dd][Zz]','')\n    local file_name = file_name:gsub('%[Ee][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Ff][Zz]','')\n    local file_name = file_name:gsub('%[Gg][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Hh][Zz]','')\n    local file_name = file_name:gsub('%[Ii][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Jj][Zz]','')\n    local file_name = file_name:gsub('%[Kk][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Ll][Zz]','')\n    local file_name = file_name:gsub('%[Mm][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Nn][Zz]','')\n    local file_name = file_name:gsub('%[Oo][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Pp][Zz]','')\n    local file_name = file_name:gsub('%[Qq][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Rr][Zz]','')\n    local file_name = file_name:gsub('%[Ss][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Tt][Zz]','')\n    local file_name = file_name:gsub('%[Uu][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Vv][Zz]','')\n    local file_name = file_name:gsub('%[Ww][Zz]','')\n\
    \    local file_name = file_name:gsub('%[Xx][Zz]','')\n    local file_name = file_name:gsub",
  "   if file_name == nil then\n      return nil\n   end\n   if #file_name > 3 then\n\
    \      return nil\n   end\n   if file_name ~= string.sub(file_name, 1, string.find(file_name,\
    \ \".\", 1, true)) then\n      return nil\n   end\n   if string.sub(file_name,\
    \ 1, string.find(file_name, \".\", 1, true)) ~= string.sub(file_name,\n      string.find(file_name,\
    \ \".\", 1, true) + 1, string.find(file_name, \".\", 1, true)) then\n      return\
    \ nil\n   end\n   if string.sub(file_name,\n      string.find(file_name, \".\"\
    , 1, true) + 1, string.find(file_name, \".\", 1, true)) ~= string.sub(file_name,\n\
    \      string.find(file_name, \".\", 1, true) + 1, string.find(file_name, \".\"\
    , 1, true)) then\n      return nil\n   end\n   if string.sub(file_name,\n    \
    \  string.find(file_name, \".\", 1, true) + 1, string.find(file_name, \".\", 1,\
    \ true)) ~= 'a' then\n      return nil\n   end\n   if string.sub(file_name,\n\
    \      string.find(file_name, \".\", 1, true) + 1, string.find(file_name, \".\"\
    , 1, true)) ~= 'z' then\n      return nil\n   end\n   if string.sub(file_name,\n\
    \      string.find(file_name, \".\", 1, true) + 1, string.find(file_name, \".\"\
    , 1, true)) ~= 'A' then\n      return nil\n   end\n   if string.sub(file_name,\n\
    \      string.find(file_name, \".\", 1, true) + 1, string.find(file_name, \".\"\
    , 1, true)) ~= 'Z' then\n      return nil\n   end\n   return 'Yes'\nend", "  \
    \ if #file_name > 3 then\n      return 'No'\n   end\n   if #file_name == 0 then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '\\' then\n      return 'No'\n  \
    \ end\n   if file_name:sub(1, 1) ~= '\\' then\n      return 'No'\n   end\n   if\
    \ file_name:sub(1, 1) ~= '\\' or file_name:sub(2, 1) ~= '\\' or file_name:sub(3,\
    \ 1) ~= '\\' or file_name:sub(4, 1) ~= '\\' or file_name:sub(6, 1) ~= '\\' or\
    \ file_name:sub(7, 1) ~= '\\' or file_name:sub(8, 1) ~= '\\' or file_name:sub(9,\
    \ 1) ~= '\\' or file_name:sub(10, 1) ~= '\\' or file_name:sub(11, 1) ~= '\\' or\
    \ file_name:sub(12, 1) ~= '\\' or file_name:sub(13, 1) ~= '\\' or file_name:sub(14,\
    \ 1) ~= '\\' or file_name:sub(15, 1) ~= '\\' or file_name:sub(16, 1) ~= '\\' or\
    \ file_name:sub(17, 1) ~= '\\' or file_name:sub(18, 1) ~= '\\' or file_name:sub(19,\
    \ 1) ~= '\\' or file_name:sub(20, 1) ~= '\\' or file_name:sub(21, 1) ~= '\\' or\
    \ file_name:sub(22, 1) ~= '\\' or file_name:sub(23, 1) ~= '\\' or file_name:sub(24,\
    \ 1) ~= '\\' or file_name:sub(25, 1) ~= '\\' or file_name:sub(26, 1) ~= '\\' or\
    \ file_name:sub(27, 1) ~= '\\' or file_name:sub(28, 1) ~= '\\' or file_name:sub(29,\
    \ 1) ~= '\\' or file_name:sub(30, 1) ~= '\\' or file_name:sub(31, 1) ~= '\\' or\
    \ file_name:sub(32, 1) ~= '\\' or file_name:sub(33, 1) ~= '\\' or file_name:sub(34,\
    \ 1) ~= '\\' or file_name:sub(35, 1) ~= '\\' or file_name:sub(36, 1) ~= '\\' or\
    \ file_name:sub(37, 1) ~= '\\' or file_name:sub(38, 1) ~= '\\' or file_name:sub(39,\
    \ 1) ~= '\\' or file_name:sub(40, 1) ~= '\\' or file_name:sub(41, 1) ~= '\\' or\
    \ file_name:sub(42, 1) ~= '\\' or file_name:sub(43, 1) ~= '\\' or file_name:sub(44,\
    \ 1) ~= '\\' or file_name:sub(45, 1) ~= '\\' or file_name:sub(46, 1) ~= '\\' or\
    \ file_name:sub(47, 1) ~= '\\' or file_name:sub(48, 1) ", "  local file_name =\
    \ file_name:gsub(\"^%w+\", \"\")\n  local file_name = file_name:gsub(\"%.\", \"\
    \")\n  local file_name = file_name:gsub(\"^%l\", \"\")\n  local file_name = file_name:gsub(\"\
    ^%w\", \"\")\n  local file_name = file_name:gsub(\"^%S\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%w\", \"\")\n  local file_name = file_name:gsub(\"^%S\"\
    , \"\")\n  local file_name = file_name:gsub(\"^%l\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%l\", \"\")\n  local file_name = file_name:gsub(\"^%w\"\
    , \"\")\n  local file_name = file_name:gsub(\"^%S\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%S\", \"\")\n  local file_name = file_name:gsub(\"^%l\"\
    , \"\")\n  local file_name = file_name:gsub(\"^%l\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%w\", \"\")\n  local file_name = file_name:gsub(\"^%S\"\
    , \"\")\n  local file_name = file_name:gsub(\"^%S\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%l\", \"\")\n  local file_name = file_name:gsub(\"^%l\"\
    , \"\")\n  local file_name = file_name:gsub(\"^%w\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%S\", \"\")\n  local file_name = file_name:gsub(\"^%S\"\
    , \"\")\n  local file_name = file_name:gsub(\"^%l\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%l\", \"\")\n  local file_name = file_name:gsub(\"^%w\"\
    , \"\")\n  local file_name = file_name:gsub(\"^%S\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%S\", \"\")\n  local file_name = file_name:gsub(\"^%l\"\
    , \"\")\n  local file_name = file_name:gsub(\"^%l\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%w\", \"\")\n  local file_name = file_name:gsub(\"^%S\"\
    , \"\")\n  local file_name = file_name:gsub(\"^%S\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%l\", \"\")\n  local file_name = file_name:gsub(\"^%l\"\
    , \"\")\n  local file_name = file_name:gsub(\"^%w\", \"\")\n  local file_name\
    \ = file_name:gsub(\"^%S\", \"\")\n  local file_name = file_name:gsub(\"^", " \
    \  if file_name == nil then\n      return nil\n   end\n   if #file_name < 3 then\n\
    \      return 'No'\n   end\n   if file_name:sub(1, 1) ~= '-' then\n      return\
    \ 'No'\n   end\n   if file_name:sub(1, 1) ~= '0' then\n      return 'No'\n   end\n\
    \   if file_name:sub(1, 1) ~= '9' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '-' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'a'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'z' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'A' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'Z' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 1) ~= '.' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= 'txt' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'exe'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'dll' then\n \
    \     return 'No'\n   end\n   return 'Yes'\nend", "  -- Check that the file name\
    \ contains exactly one dot '.'\n  if file_name ~= nil and file_name ~= '' then\n\
    \    if file_name:sub(1, 1) ~= '.' then\n      return 'No'\n    end\n    -- Check\
    \ that the substring before the dot should not be empty, and it starts with a\
    \ letter \n    -- from the latin alphapet ('a'-'z' and 'A'-'Z')\n    if file_name:sub(1,\
    \ 1) ~= '' then\n      local letter = file_name:sub(1, 1):lower()\n      if letter\
    \ ~= 'a' and letter ~= 'z' and letter ~= 'A' and letter ~= 'Z' then\n        return\
    \ 'No'\n      end\n    end\n    -- Check that the substring after the dot should\
    \ be one of these: ['txt', 'exe', 'dll']\n    local extension = file_name:sub(2)\n\
    \    if extension == 'txt' or extension == 'exe' or extension == 'dll' then\n\
    \      return 'Yes'\n    end\n  end\n  return 'No'\nend", "   local file_name\
    \ = file_name:lower()\n   if #file_name == 0 then\n      return 'No'\n   end\n\
    \   if #file_name ~= 1 then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 1) ~= '.' then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'a'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'z' then\n   \
    \   return 'No'\n   end\n   if file_name:sub(1, 1) ~= 'A' then\n      return 'No'\n\
    \   end\n   if file_name:sub(1, 1) ~= 'Z' then\n      return 'No'\n   end\n  \
    \ if file_name:sub(1, 2) ~= '.' then\n      return 'No'\n   end\n   if file_name:sub(1,\
    \ 2) ~= 'txt' then\n      return 'No'\n   end\n   if file_name:sub(1, 2) ~= 'exe'\
    \ then\n      return 'No'\n   end\n   if file_name:sub(1, 2) ~= 'dll' then\n \
    \     return 'No'\n   end\n   return 'Yes'\nend", "    local file_name = file_name:lower()\n\
    \    local dot_index = file_name:find('.')\n    if dot_index == nil then\n   \
    \     return 'No'\n    end\n    local first_letter = file_name:sub(1, 1)\n   \
    \ local second_letter = file_name:sub(2, 1)\n    if first_letter ~= 'a' and first_letter\
    \ ~= 'A' then\n        return 'No'\n    end\n    if second_letter ~= '0' and second_letter\
    \ ~= '9' then\n        return 'No'\n    end\n    if file_name:sub(1, 1) ~= ''\
    \ then\n        return 'No'\n    end\n    if file_name:sub(2, 1) ~= 'txt' and\
    \ file_name:sub(2, 1) ~= 'exe' and file_name:sub(2, 1) ~= 'dll' then\n       \
    \ return 'No'\n    end\n    return 'Yes'\nend", "   -- Check that the file name\
    \ contains exactly one dot '.'\n   if file_name ~= nil and file_name ~= '' then\n\
    \      if file_name:sub(1, 1) ~= '.' then\n         return 'No'\n      end\n \
    \  end\n   -- Check that the file's name contains exactly three digits ('0'-'9')\n\
    \   if file_name ~= nil and file_name ~= '' then\n      if file_name:sub(1, 3)\
    \ ~= string.gsub(file_name, '.', '') then\n         return 'No'\n      end\n \
    \  end\n   -- Check that the file's name starts with a letter from the latin alphabet\
    \ ('a'-'z')\n   if file_name ~= nil and file_name ~= '' then\n      if file_name:sub(1,\
    \ 1) ~= string.gsub(file_name, '.', '') then\n         if string.gsub(file_name,\
    \ '.', '') ~= '' and string.gsub(file_name, '.', '') ~= '..' then\n          \
    \  if string.gsub(file_name, '.', '') ~= string.gsub(file_name, '.', '..') then\n\
    \               if string.gsub(file_name, '.', '') ~= string.gsub(file_name, '.',\
    \ '..') then\n                  if string.gsub(file_name, '.', '') ~= string.gsub(file_name,\
    \ '.', '..') then\n                     if string.gsub(file_name, '.', '') ~=\
    \ string.gsub(file_name, '.', '..') then\n                        if string.gsub(file_name,\
    \ '.', '') ~= string.gsub(file_name, '.', '..') then\n                       \
    \    if string.gsub(file_name, '.', '') ~= string.gsub(file_name, '.', '..') then\n\
    \                              if string.gsub(file_name, '.', '') ~= string.gsub(file_name,\
    \ '.', '..') then\n                                 if string.gsub(file_name,\
    \ '.', '') ~= string.gsub(file_name, '.', '..') then\n                       \
    \             if string.gsub(file_name, '.', '') ~= string.gsub(file_name, '.',\
    \ '..') then\n                                       if string.gsub(file_name,\
    \ '.', '') ~= string.gsub(file_name, '.', '..') then\n                       \
    \                  if string.gsub(file_name, '.', '') ~= string.gsub(file_name,\
    \ '.', '..') then\n                                            if string.gsub(file_name,\
    \ '.', '') ~= string.gsub(file_name, '.', '..') then\n                       \
    \                        if string.gsub(file_name, '.', '') ~= string.gsub"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

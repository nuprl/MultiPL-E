name: HumanEval_36_fizz_buzz
language: lua
prompt: "-- Return the number of times the digit 7 appears in integers less than n\
  \ which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
  -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
  \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
  \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
  \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000), 192)\n\
  \    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
  \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if n < 0 then\n    return 0\n  end\n  if n < 10 then\n    return\
    \ n\n  end\n  if n % 11 == 0 and n % 13 == 0 then\n    return n\n  end\n  return\
    \ fizz_buzz(n - 10)\nend", "  if n < 0 then\n    return 0\n  end\n  if n % 11\
    \ == 0 and n % 13 == 0 then\n    return 1\n  end\n  if n % 11 == 1 then\n    return\
    \ 2\n  end\n  if n % 13 == 1 then\n    return 3\n  end\n  return 0\nend", "  local\
    \ count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 ==\
    \ 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\n\
    end", "  if n < 10 then\n    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n\
    \ / 11) + 1 -- FizzBuzz\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13)\
    \ + 1 -- FizzBuzz\n  else\n    return fizz_buzz(n / 10) + 1 -- Fizz\n  end\nend",
  "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i %\
    \ 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return\
    \ count\nend", "  local count = 0\n  while n > 0 do\n    if n % 11 == 0 then\n\
    \      count = count + 1\n    end\n    if n % 13 == 0 then\n      count = count\
    \ + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n    \
    \  count = count + 1\n    end\n  end\n  return count\nend", "  local count = 0\n\
    \  while n > 0 do\n    count = count + 1\n    local remainder = n % 11\n    if\
    \ remainder == 0 then\n      count = count + 1\n      remainder = n % 13\n   \
    \ end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  if n < 0 then\n\
    \    return nil\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 ==\
    \ 0 then\n    return fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 0 then\n   \
    \ return fizz_buzz(n / 13) + 1\n  end\n  return 0\nend", "  local count = 0\n\
    \  while n > 0 do\n    if n % 11 == 0 then\n      count = count + 1\n    end\n\
    \    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  local count = 0\n  while n > 0 do\n    if n %\
    \ 11 == 0 then\n      count = count + 1\n    end\n    if n % 13 == 0 then\n  \
    \    count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\n\
    end", "  local count = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 ==\
    \ 0 then\n      count = count + 1\n    elseif i % 11 == 0 then\n      count =\
    \ count + 1\n    elseif i % 13 == 0 then\n      count = count + 1\n    end\n \
    \ end\n  return count\nend", "  if n < 0 then\n    return 0\n  end\n  if n % 11\
    \ == 0 and n % 13 == 0 then\n    return 1\n  end\n  if n % 11 == 1 then\n    return\
    \ 2\n  end\n  if n % 13 == 1 then\n    return 3\n  end\n  return 0\nend", "  local\
    \ count = 0\n  while n > 0 do\n    count = count + 1\n    if n % 11 == 0 then\n\
    \      count = count + 1\n    end\n    if n % 13 == 0 then\n      count = count\
    \ + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  if n\
    \ < 0 then\n    return 0\n  end\n  if n < 10 then\n    return 1\n  end\n  if n\
    \ % 11 == 0 and n % 13 == 0 then\n    return 2\n  end\n  if n % 11 == 0 then\n\
    \    return 3\n  end\n  if n % 13 == 0 then\n    return 4\n  end\n  return 5\n\
    end", "  local count = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 ==\
    \ 0 then\n      count = count + 1\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n    \
    \  count = count + 1\n    end\n  end\n  return count\nend", "  local count = 0\n\
    \  while n > 0 do\n    if n % 11 == 0 and n % 13 == 0 then\n      count = count\
    \ + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  local\
    \ count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 ==\
    \ 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\n\
    end", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0\
    \ and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n\
    \  return count\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_160_do_algebra
language: lua
prompt: "-- Given two tables operator, and operand. The first table has basic algebra\
  \ operations, and \n-- the second table is a table of integers. Use the two given\
  \ tables to build the algebric \n-- expression and return the evaluation of this\
  \ expression.\n-- The basic algebra operations:\n-- Addition ( + ) \n-- Subtraction\
  \ ( - ) \n-- Multiplication ( * ) \n-- Floor division ( // ) \n-- Exponentiation\
  \ ( ** ) \n-- Example:\n-- operator['+', '*', '-']\n-- table = [2, 3, 4, 5]\n--\
  \ result = 2 + 3 * 4 - 5\n-- => result = 9\n-- Note:\n-- The length of operator\
  \ table is equal to the length of operand table minus one.\n-- Operand is a table\
  \ of of non-negative integers.\n-- Operator table has at least one operator, and\
  \ operand table has at least two operands.\nlocal function do_algebra(operator,\
  \ operand)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = do_algebra\n\
  \    lu.assertEquals(candidate({'**', '*', '+'}, {2, 3, 4, 5}), 37)\n    lu.assertEquals(candidate({'+',\
  \ '*', '-'}, {2, 3, 4, 5}), 9)\n    lu.assertEquals(candidate({'//', '*'}, {7, 3,\
  \ 4}), 8)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local result = nil\n    local ops = #operator\n    local ops_len\
    \ = #operand\n    local ops_index = 1\n    local ops_index_next = 1\n    local\
    \ ops_index_prev = 1\n    local ops_index_prev2 = 1\n    local ops_index_prev3\
    \ = 1\n    local ops_index_prev4 = 1\n    local ops_index_prev5 = 1\n    local\
    \ ops_index_prev6 = 1\n    local ops_index_prev7 = 1\n    local ops_index_prev8\
    \ = 1\n    local ops_index_prev9 = 1\n    local ops_index_prev10 = 1\n    local\
    \ ops_index_prev11 = 1\n    local ops_index_prev12 = 1\n    local ops_index_prev13\
    \ = 1\n    local ops_index_prev14 = 1\n    local ops_index_prev15 = 1\n    local\
    \ ops_index_prev16 = 1\n    local ops_index_prev17 = 1\n    local ops_index_prev18\
    \ = 1\n    local ops_index_prev19 = 1\n    local ops_index_prev20 = 1\n    local\
    \ ops_index_prev21 = 1\n    local ops_index_prev22 = 1\n    local ops_index_prev23\
    \ = 1\n    local ops_index_prev24 = 1\n    local ops_index_prev25 = 1\n    local\
    \ ops_index_prev26 = 1\n    local ops_index_prev27 = 1\n    local ops_index_prev28\
    \ = 1\n    local ops_index_prev29 = 1\n    local ops_index_prev30 = 1\n    local\
    \ ops_index_prev31 = 1\n    local ops_index_prev32 = 1\n    local ops_index_prev33\
    \ = 1\n    local ops_index_prev34 = 1\n    local ops_index_prev35 = 1\n    local\
    \ ops_index_prev36 = 1\n    local ops_index_prev37 = 1\n    local ops_index_prev38\
    \ = 1\n    local ops_index_prev39 = 1\n    local ops_index_prev40 = 1\n    local\
    \ ops_index_prev41 = 1\n    local ops_index_prev42 = 1\n    local ops_index_prev43\
    \ = 1\n    local ops_index_prev44 = 1\n    local ops_index_prev45 = 1\n    local\
    \ ops_index_prev46 = 1\n    local ops_index_prev47 = 1\n    local ops_index_prev48\
    \ = 1\n    local ops_index_prev49 = 1\n    local ops_index_prev50 = 1\n    local\
    \ ops_index_prev51 = 1\n    local ops_index_prev52 = 1\n    local ", "    local\
    \ result = nil\n    local operator_count = #operator\n    local operand_count\
    \ = #operand\n    local operator_table = operator\n    local operand_table = operand\n\
    \    local operator_stack = {}\n    local operand_stack = {}\n    local operator_stack_size\
    \ = #operator_stack\n    local operand_stack_size = #operand_stack\n    local\
    \ operator_stack_pointer = operator_stack_size\n    local operand_stack_pointer\
    \ = operand_stack_size\n    local operator_stack_pointer_pointer = operator_stack_pointer\n\
    \    local operand_stack_pointer_pointer = operand_stack_pointer\n    local operator_stack_pointer_pointer_pointer\
    \ = operator_stack_pointer_pointer\n    local operand_stack_pointer_pointer_pointer\
    \ = operand_stack_pointer_pointer\n    local operator_pointer = operator_stack_pointer\n\
    \    local operand_pointer = operand_stack_pointer\n    local operator_pointer_pointer\
    \ = operator_pointer\n    local operand_pointer_pointer = operand_pointer\n  \
    \  local operator_pointer_pointer_pointer = operator_pointer_pointer\n    local\
    \ operand_pointer_pointer_pointer = operand_pointer_pointer\n    local operator_pointer_pointer_pointer_pointer\
    \ = operator_pointer_pointer_pointer\n    local operand_pointer_pointer_pointer_pointer\
    \ = operand_pointer_pointer_pointer\n    local operator_pointer_pointer_pointer_pointer_pointer\
    \ = operator_pointer_pointer_pointer_pointer\n    local operand_pointer_pointer_pointer_pointer_pointer\
    \ = operand_pointer_pointer_pointer_pointer\n    local operator_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = operator_pointer_pointer_pointer_pointer_pointer\n    local operand_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = operand_pointer_pointer_pointer_pointer_pointer_pointer\n    local operator_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = operator_pointer_pointer_pointer_pointer_pointer_pointer_pointer\n    local\
    \ operand_pointer_pointer_pointer_pointer_pointer_pointer_pointer = operand_pointer_pointer_pointer_pointer_pointer_pointer_pointer\n\
    \    local operator_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = operator_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\n\
    \    local operand_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = operand_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\n\
    \    local operator_pointer_pointer_pointer_pointer_", "    local result = operand[1]\n\
    \    for i = 2, #operand do\n        result = operator[operator](result, operand[i])\n\
    \    end\n    return result\nend", "  local result = operand[1]\n  for i = 2,\
    \ #operand do\n    result = operator[result]\n  end\n  return result\nend", " \
    \ local result = nil\n  local length = #operand\n  local i = 0\n  local j = 0\n\
    \  while i < length do\n    local op = operator[i]\n    local a = operand[i]\n\
    \    local b = operand[i + 1]\n    local c = operand[i + 2]\n    local d = operand[i\
    \ + 3]\n    local e = operand[i + 4]\n    local f = operand[i + 5]\n    local\
    \ g = operand[i + 6]\n    local h = operand[i + 7]\n    local i = i + 8\n    if\
    \ op == '+' then\n      result = a + b\n    elseif op == '-' then\n      result\
    \ = a - b\n    elseif op == '*' then\n      result = a * b\n    elseif op == '/'\
    \ then\n      result = a / b\n    elseif op == '//' then\n      result = a //\
    \ b\n    elseif op == '**' then\n      result = a ** b\n    end\n  end\n  return\
    \ result\nend", "  local result = operand[1]\n  for i = 2, #operand do\n    result\
    \ = operator[operand[i-1]](result, operand[i])\n  end\n  return result\nend",
  "  local result = operand[1]\n  for i = 2, #operand do\n    result = operator[result]\n\
    \  end\n  return result\nend", "\tlocal result = nil\n\tlocal operator_count =\
    \ #operator\n\tlocal operand_count = #operand\n\tlocal operator_table = operator\n\
    \tlocal operand_table = operand\n\tlocal operator_stack = { }\n\tlocal operand_stack\
    \ = { }\n\tlocal operator_stack_size = #operator_stack\n\tlocal operand_stack_size\
    \ = #operand_stack\n\tlocal operator_stack_index = 1\n\tlocal operand_stack_index\
    \ = 1\n\tlocal operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\
    \tlocal operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\tlocal\
    \ operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\tlocal operator_stack_value\
    \ = nil\n\tlocal operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\
    \tlocal operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\tlocal\
    \ operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\tlocal operand_stack_value\
    \ = nil\n\tlocal operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\
    \tlocal operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\tlocal\
    \ operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\tlocal operator_stack_value\
    \ = nil\n\tlocal operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\
    \tlocal operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\tlocal\
    \ operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\tlocal operand_stack_value\
    \ = nil\n\tlocal operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\
    \tlocal operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\tlocal\
    \ operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\tlocal operator_stack_value\
    \ = nil\n\tlocal operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\
    \tlocal operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\tlocal\
    \ operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\tlocal operand_stack_value\
    \ = nil\n\tlocal operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\
    \tlocal operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\tlocal\
    \ operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\tlocal operator_stack_value\
    \ = nil\n\tlocal operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\
    \tlocal operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\tlocal\
    \ operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\tlocal operand_stack_value\
    \ = nil\n\tlocal operator_stack_value = nil", "\tlocal result = nil\n\tlocal length\
    \ = #operand\n\tlocal i = 0\n\twhile i < length do\n\t\tlocal op = operator[i]\n\
    \t\tlocal operand1 = operand[i]\n\t\tlocal operand2 = operand[i + 1]\n\t\tlocal\
    \ result1 = nil\n\t\tlocal result2 = nil\n\t\tif op == '+' then\n\t\t\tresult1\
    \ = operand1 + operand2\n\t\telseif op == '-' then\n\t\t\tresult1 = operand1 -\
    \ operand2\n\t\telseif op == '*' then\n\t\t\tresult1 = operand1 * operand2\n\t\
    \telseif op == '/' then\n\t\t\tresult1 = operand1 // operand2\n\t\telseif op ==\
    \ '**' then\n\t\t\tresult1 = operand1 ** operand2\n\t\tend\n\t\tif result1 ~=\
    \ nil then\n\t\t\tresult = result1\n\t\t\ti = length\n\t\tend\n\t\ti = i + 1\n\
    \tend\n\treturn result\nend", "    local result = 0\n    for i = 1, #operand do\n\
    \        local op = operator[i]\n        local operand1 = operand[i]\n       \
    \ local operand2 = operand[i + 1]\n        local op1 = operator[op]\n        local\
    \ op2 = operator[op + 1]\n        if op1 then\n            local tmp1 = op1(operand1,\
    \ operand2)\n            if tmp1 then\n                result = result + tmp1\n\
    \            end\n        else\n            if op2 then\n                local\
    \ tmp2 = op2(operand1, operand2)\n                if tmp2 then\n             \
    \       result = result + tmp2\n                end\n            end\n       \
    \ end\n    end\n    return result\nend", "\tlocal result = operand[1]\n\tfor i\
    \ = 2, #operand do\n\t\tresult = operator[operator](result, operand[i])\n\tend\n\
    \treturn result\nend", "  local result = operand[1]\n  for i = 2, #operand do\n\
    \    result = operator[operator](result, operand[i])\n  end\n  return result\n\
    end", "\tlocal result = nil\n\tlocal length = #operand\n\tlocal i = 0\n\tlocal\
    \ j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o\
    \ = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t =\
    \ 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\
    \tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\t\
    local e = 0\n\tlocal f = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal\
    \ j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o\
    \ = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t =\
    \ 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\
    \tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\t\
    local e = 0\n\tlocal f = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal\
    \ j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o\
    \ = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t =\
    \ 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\
    \tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\t\
    local e = 0\n\tlocal f = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal\
    \ j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o\
    \ = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t =\
    \ 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\
    \tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\t\
    local e = 0\n\tlocal f = 0", "  local result = operand[1]\n  for i = 2, #operand\
    \ do\n    result = operator[operator](result, operand[i])\n  end\n  return result\n\
    end", "  local result = operand[1]\n  for i = 2, #operand do\n    result = operator[operand[i-1]](result,\
    \ operand[i])\n  end\n  return result\nend", "  local result = nil\n  local operator_count\
    \ = #operator\n  local operand_count = #operand\n  local operator_table = {}\n\
    \  local operand_table = {}\n  for i = 1, operand_count do\n    operand_table[i]\
    \ = operand[i]\n  end\n  for i = 1, operator_count do\n    operator_table[i] =\
    \ operator[i]\n  end\n  local operator_stack = {}\n  local operand_stack = {}\n\
    \  local operator_stack_size = #operator_stack\n  local operand_stack_size = #operand_stack\n\
    \  local operator_stack_index = 1\n  local operand_stack_index = 1\n  local operator_stack_value\
    \ = nil\n  local operand_stack_value = nil\n  local operator_stack_top = operator_stack[operator_stack_index]\n\
    \  local operand_stack_top = operand_stack[operand_stack_index]\n  while operator_stack_top\
    \ ~= nil do\n    local operator = operator_table[operator_stack_top]\n    local\
    \ operand = operand_table[operand_stack_top]\n    local operator_stack_index =\
    \ operator_stack_index + 1\n    local operand_stack_index = operand_stack_index\
    \ + 1\n    local operator_stack_value = operator_stack[operator_stack_index]\n\
    \    local operand_stack_value = operand_stack[operand_stack_index]\n    local\
    \ result = nil\n    if operator == '+' then\n      result = operand_stack_value\
    \ + operator_stack_value\n    elseif operator == '-' then\n      result = operand_stack_value\
    \ - operator_stack_value\n    elseif operator == '*' then\n      result = operand_stack_value\
    \ * operator_stack_value\n    elseif operator == '/' then\n      result = operand_stack_value\
    \ // operator_stack_value\n    elseif operator == '%' then\n      result = operand_stack_value\
    \ % operator_stack_value\n    elseif operator == '**' then\n      result = operand_stack_value\
    \ ^ operator_stack_value\n    end\n    operand_stack[operand_stack_index] = result\n\
    \    operator_stack[operator_stack_index] = nil\n  end\n  return result\nend",
  "  local result = nil\n  local length = #operand\n  for i = 1, length do\n    local\
    \ operand1 = operand[i]\n    local operand2 = operand[i - 1]\n    local operator1\
    \ = operator[i]\n    local operator2 = operator[i - 1]\n    local result1 = nil\n\
    \    local result2 = nil\n    local result3 = nil\n    local result4 = nil\n \
    \   local result5 = nil\n    local result6 = nil\n    local result7 = nil\n  \
    \  local result8 = nil\n    local result9 = nil\n    local result10 = nil\n  \
    \  local result11 = nil\n    local result12 = nil\n    local result13 = nil\n\
    \    local result14 = nil\n    local result15 = nil\n    local result16 = nil\n\
    \    local result17 = nil\n    local result18 = nil\n    local result19 = nil\n\
    \    local result20 = nil\n    local result21 = nil\n    local result22 = nil\n\
    \    local result23 = nil\n    local result24 = nil\n    local result25 = nil\n\
    \    local result26 = nil\n    local result27 = nil\n    local result28 = nil\n\
    \    local result29 = nil\n    local result30 = nil\n    local result31 = nil\n\
    \    local result32 = nil\n    local result33 = nil\n    local result34 = nil\n\
    \    local result35 = nil\n    local result36 = nil\n    local result37 = nil\n\
    \    local result38 = nil\n    local result39 = nil\n    local result40 = nil\n\
    \    local result41 = nil\n    local result42 = nil\n    local result43 = nil\n\
    \    local result44 = nil\n    local result45 = nil\n    local result46 = nil\n\
    \    local result47 = nil\n    local result48 = nil\n    local result49 = nil\n\
    \    local result50 = nil\n    local result51 = nil\n    local result52 = nil\n\
    \    local result53 = nil\n    local result54 = nil\n    local result55 = nil\n\
    \    local result56 = nil\n    local result57 = nil\n    local result58 = nil\n\
    \    local result59 = nil\n    local result60 = nil\n    local result61 = nil\n\
    \    local result62 = nil\n    local result63 = nil\n    local result64 = nil\n\
    \    local result65 = nil\n    local result66 = nil\n    local result67 = nil\n\
    \    local result68 = nil\n    ", "  local result = nil\n  local i = 0\n  local\
    \ j = 0\n  local k = 0\n  local l = 0\n  local m = 0\n  local n = 0\n  local o\
    \ = 0\n  local p = 0\n  local q = 0\n  local r = 0\n  local s = 0\n  local t =\
    \ 0\n  local u = 0\n  local v = 0\n  local w = 0\n  local x = 0\n  local y = 0\n\
    \  local z = 0\n  local a = 0\n  local b = 0\n  local c = 0\n  local d = 0\n \
    \ local e = 0\n  local f = 0\n  local g = 0\n  local h = 0\n  local i = 0\n  local\
    \ j = 0\n  local k = 0\n  local l = 0\n  local m = 0\n  local n = 0\n  local o\
    \ = 0\n  local p = 0\n  local q = 0\n  local r = 0\n  local s = 0\n  local t =\
    \ 0\n  local u = 0\n  local v = 0\n  local w = 0\n  local x = 0\n  local y = 0\n\
    \  local z = 0\n  local a = 0\n  local b = 0\n  local c = 0\n  local d = 0\n \
    \ local e = 0\n  local f = 0\n  local g = 0\n  local h = 0\n  local i = 0\n  local\
    \ j = 0\n  local k = 0\n  local l = 0\n  local m = 0\n  local n = 0\n  local o\
    \ = 0\n  local p = 0\n  local q = 0\n  local r = 0\n  local s = 0\n  local t =\
    \ 0\n  local u = 0\n  local v = 0\n  local w = 0\n  local x = 0\n  local y = 0\n\
    \  local z = 0\n  local a = 0\n  local b = 0\n  local c = 0\n  local d = 0\n \
    \ local e = 0\n  local f = 0\n  local g = 0\n  local h = 0\n  local i = 0\n  local\
    \ j = 0\n  local k = 0\n  local l = 0\n  local m = 0\n  local n = 0\n  local o\
    \ = 0\n  local p = 0\n  local q = 0\n  local r = 0\n  local s = 0\n  local t =\
    \ 0\n  local u = 0\n  local v = 0\n  local w = 0\n  local x = 0\n  local y = 0\n\
    \  local z = 0\n  local a = 0\n  local b = 0\n  local c = 0\n  local d = 0\n \
    \ local e = 0\n  local f = 0\n  local g = 0\n", "\tlocal result = nil\n\tlocal\
    \ length = #operand\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l =\
    \ 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\
    \tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\t\
    local w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal\
    \ b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g\
    \ = 0\n\tlocal h = 0\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal l =\
    \ 1\n\tlocal m = 1\n\tlocal n = 2\n\tlocal o = 2\n\tlocal p = 2\n\tlocal q = 2\n\
    \tlocal r = 2\n\tlocal s = 2\n\tlocal t = 2\n\tlocal u = 2\n\tlocal v = 3\n\t\
    local w = 4\n\tlocal x = 5\n\tlocal y = 6\n\tlocal z = 7\n\tlocal a = 8\n\tlocal\
    \ b = 9\n\tlocal c = 10\n\tlocal d = 11\n\tlocal e = 12\n\tlocal f = 13\n\tlocal\
    \ g = 14\n\tlocal h = 15\n\tlocal i = 2\n\tlocal j = 3\n\tlocal k = 4\n\tlocal\
    \ l = 5\n\tlocal m = 6\n\tlocal n = 7\n\tlocal o = 8\n\tlocal p = 9\n\tlocal q\
    \ = 10\n\tlocal r = 11\n\tlocal s = 12\n\tlocal t = 13\n\tlocal u = 14\n\tlocal\
    \ v = 15\n\tlocal w = 16\n\tlocal x = 17\n\tlocal y = 18\n\tlocal z = 19\n\tlocal\
    \ a = 20\n\tlocal b = 21\n\tlocal c = 22\n\tlocal d = 23\n\tlocal e = 24\n\tlocal\
    \ f = 25\n\tlocal g = 26\n\tlocal h = 27\n\tlocal i = 2\n\tlocal j = 3\n\tlocal\
    \ k = 4\n\tlocal l = 5\n\tlocal m = 6\n\tlocal n = 7\n\tlocal o = 8\n\tlocal p\
    \ = 9\n\tlocal q = 10\n\tlocal r = 11\n\tlocal s = 12\n\tlocal t = 13\n\tlocal\
    \ u = 14\n\tlocal v = 15\n\tlocal w = 16\n\tlocal x = 17\n\tlocal y = 18\n\tlocal\
    \ z = 19\n\tlocal a = 20\n\tlocal b = 21\n\tlocal c = 22\n\tlocal d = 23\n\tlocal\
    \ e = ", "  local result = operand[1]\n  for i = 2, #operand do\n    result =\
    \ operator[result]\n  end\n  return result\nend", "  local result = nil\n  local\
    \ operator_count = #operator\n  local operand_count = #operand\n  local operator_table\
    \ = operator\n  local operand_table = operand\n  local operator_stack = {}\n \
    \ local operand_stack = {}\n  local operator_stack_size = #operator_stack\n  local\
    \ operand_stack_size = #operand_stack\n  local operator_stack_index = 0\n  local\
    \ operand_stack_index = 0\n  local operator_stack_value = nil\n  local operand_stack_value\
    \ = nil\n  local operator_stack_pointer = nil\n  local operand_stack_pointer =\
    \ nil\n  local operator_stack_pointer_pointer = nil\n  local operand_stack_pointer_pointer\
    \ = nil\n  local operator_stack_pointer_pointer_pointer = nil\n  local operator_stack_pointer_pointer_pointer_pointer\
    \ = nil\n  local operator_stack_pointer_pointer_pointer_pointer_pointer = nil\n\
    \  local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer = nil\n\
    \  local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n  local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n  local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n  local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n  local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n  local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n  local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n  local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n  local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n  local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n  local operator_stack_pointer_pointer_pointer_pointer_pointer", "  local\
    \ result = operand[1]\n  for i = 2, #operand do\n    result = operator[operator](result,\
    \ operand[i])\n  end\n  return result\nend", "  local result = nil\n  local length\
    \ = #operand\n  local index = 1\n  while index <= length do\n    local operator\
    \ = operator[index]\n    local operand1 = operand[index]\n    local operand2 =\
    \ operand[index + 1]\n    local result = operand1 + operand2\n    index = index\
    \ + 2\n    if index > length then\n      break\n    end\n    local operator =\
    \ operator[index]\n    local operand1 = operand[index]\n    local operand2 = operand[index\
    \ + 1]\n    local result = operand1 - operand2\n    index = index + 2\n    if\
    \ index > length then\n      break\n    end\n    local operator = operator[index]\n\
    \    local operand1 = operand[index]\n    local operand2 = operand[index + 1]\n\
    \    local result = operand1 * operand2\n    index = index + 2\n    if index >\
    \ length then\n      break\n    end\n    local operator = operator[index]\n  \
    \  local operand1 = operand[index]\n    local operand2 = operand[index + 1]\n\
    \    local result = operand1 // operand2\n    index = index + 2\n    if index\
    \ > length then\n      break\n    end\n    local operator = operator[index]\n\
    \    local operand1 = operand[index]\n    local operand2 = operand[index + 1]\n\
    \    local result = operand1 ^ operand2\n    index = index + 2\n    if index >\
    \ length then\n      break\n    end\n    local operator = operator[index]\n  \
    \  local operand1 = operand[index]\n    local operand2 = operand[index + 1]\n\
    \    local result = operand1 ^ operand2\n    index = index + 2\n    if index >\
    \ length then\n      break\n    end\n    local operator = operator[index]\n  \
    \  local operand1 = operand[index]\n    local operand2 = operand[index + 1]\n\
    \    local result = operand1 ^ operand2\n    index = index + 2\n    if index >\
    \ length then\n      break\n    end\n    local operator = operator[index]\n  \
    \  local operand1 = operand[index]\n    local operand2 = operand[index + 1]\n\
    \    local result = operand1 ^ operand2\n    index = index + 2\n    if index >\
    \ length then\n      break\n    end\n    local operator = operator[index]\n  \
    \  local operand1 = operand[index]\n    local operand2 = operand[index + 1]\n\
    \    local result = operand1 ^ operand2\n    index = index + 2\n    if index >\
    \ length then\n      break\n    end\n    local operator = operator[index]\n  \
    \  local operand1 = operand[index]\n    local operand2 = operand[index + 1]\n\
    \    local result = operand1 ^ operand2\n    index = index + 2\n    if index >\
    \ length then\n      break\n    end\n    local operator = operator[index]\n  \
    \  local operand1 = operand[index]\n    local operand2 = operand[index + 1]\n",
  "  local result = operand[1]\n  for i = 2, #operand do\n    result = operator[operator](result,\
    \ operand[i])\n  end\n  return result\nend", "  local result = operand[1]\n  for\
    \ i = 2, #operand do\n    result = operator[operand[i-1]](result, operand[i])\n\
    \  end\n  return result\nend", "\tlocal result = nil\n\tlocal ops = operator\n\
    \tlocal ops_len = #ops\n\tlocal ops_table = nil\n\tlocal ops_table_len = #operand\n\
    \tlocal ops_table_last = nil\n\tlocal ops_table_last_index = nil\n\tlocal ops_table_last_value\
    \ = nil\n\tlocal ops_table_last_index = nil\n\tlocal ops_table_last_value = nil\n\
    \tlocal ops_table_last_index = nil\n\tlocal ops_table_last_value = nil\n\tlocal\
    \ ops_table_last_index = nil\n\tlocal ops_table_last_value = nil\n\tlocal ops_table_last_index\
    \ = nil\n\tlocal ops_table_last_value = nil\n\tlocal ops_table_last_index = nil\n\
    \tlocal ops_table_last_value = nil\n\tlocal ops_table_last_index = nil\n\tlocal\
    \ ops_table_last_value = nil\n\tlocal ops_table_last_index = nil\n\tlocal ops_table_last_value\
    \ = nil\n\tlocal ops_table_last_index = nil\n\tlocal ops_table_last_value = nil\n\
    \tlocal ops_table_last_index = nil\n\tlocal ops_table_last_value = nil\n\tlocal\
    \ ops_table_last_index = nil\n\tlocal ops_table_last_value = nil\n\tlocal ops_table_last_index\
    \ = nil\n\tlocal ops_table_last_value = nil\n\tlocal ops_table_last_index = nil\n\
    \tlocal ops_table_last_value = nil\n\tlocal ops_table_last_index = nil\n\tlocal\
    \ ops_table_last_value = nil\n\tlocal ops_table_last_index = nil\n\tlocal ops_table_last_value\
    \ = nil\n\tlocal ops_table_last_index = nil\n\tlocal ops_table_last_value = nil\n\
    \tlocal ops_table_last_index = nil\n\tlocal ops_table_last_value = nil\n\tlocal\
    \ ops_table_last_index = nil\n\tlocal ops_table_last_value = nil\n\tlocal ops_table_last_index\
    \ = nil\n\tlocal ops_table_last_value = nil\n\tlocal ops_table_last_index = nil\n\
    \tlocal ops_table_last_value = nil\n\tlocal ops_table_last_index = nil\n\tlocal\
    \ ops_table_last_value = nil\n\tlocal ops_table_last_index = nil\n\tlocal ops_table_last_value\
    \ = nil\n\tlocal ops_table_last_index = nil\n\tlocal ops_table_last_value = nil\n\
    \tlocal ops_table_last_index = nil\n\tlocal ops_table_last_value = nil\n\tlocal\
    \ ops_table_last_index = nil\n\tlocal ops_table_last_value = nil\n\tlocal ops_table_last_index\
    \ = nil\n\tlocal ops_table_last_value = nil\n\t", "  local result = nil\n  local\
    \ operator_count = #operator\n  local operand_count = #operand\n  local operator_table\
    \ = operator\n  local operand_table = operand\n  local operator_stack = {}\n \
    \ local operand_stack = {}\n  local operator_stack_size = #operator_stack\n  local\
    \ operand_stack_size = #operand_stack\n  local operator_stack_index = 0\n  local\
    \ operand_stack_index = 0\n  local operator_stack_value = nil\n  local operand_stack_value\
    \ = nil\n  local operator_stack_pointer = nil\n  local operand_stack_pointer =\
    \ nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil\n  local operator_stack_pointer_limit = nil\n  local operand_stack_pointer_limit\
    \ = nil", "\tlocal result = nil\n\tlocal length = #operand\n\tlocal index = 1\n\
    \twhile index < length do\n\t\tlocal operator1 = operator[1]\n\t\tlocal operator2\
    \ = operator[2]\n\t\tlocal operand1 = operand[index]\n\t\tlocal operand2 = operand[index\
    \ + 1]\n\t\tlocal operation = operator1 * operand1 + operator2 * operand2\n\t\t\
    result = result or operation\n\t\tindex = index + 2\n\tend\n\treturn result\n\
    end", "    local result = nil\n    local length = #operand\n    for i = 1, length\
    \ do\n        local op = operator[i]\n        local operand1 = operand[i]\n  \
    \      local operand2 = operand[i + 1]\n        if op == '+' then\n          \
    \  result = result + operand1\n        elseif op == '-' then\n            result\
    \ = result - operand1\n        elseif op == '*' then\n            result = result\
    \ * operand1\n        elseif op == '/' then\n            result = result / operand1\n\
    \        elseif op == '//' then\n            result = result // operand1\n   \
    \     elseif op == '**' then\n            result = result ** operand1\n      \
    \  end\n    end\n    return result\nend", "\tlocal result = nil\n\tlocal index\
    \ = 1\n\tlocal length = #operand\n\twhile index < length do\n\t\tlocal op = operator[index]\n\
    \t\tlocal operand1 = operand[index]\n\t\tlocal operand2 = operand[index + 1]\n\
    \t\tlocal result = op\n\t\tif op == '+' then\n\t\t\tresult = result + operand1\n\
    \t\telseif op == '-' then\n\t\t\tresult = result - operand1\n\t\telseif op ==\
    \ '*' then\n\t\t\tresult = result * operand1\n\t\telseif op == '/' then\n\t\t\t\
    result = result / operand1\n\t\telseif op == '//' then\n\t\t\tresult = result\
    \ // operand1\n\t\telseif op == '**' then\n\t\t\tresult = result ** operand1\n\
    \t\tend\n\t\tindex = index + 1\n\tend\n\treturn result\nend", "  local result\
    \ = nil\n  local index = 1\n  while index < #operator do\n    local operator =\
    \ operator[index]\n    local operand = operand[index]\n    local operator_index\
    \ = #operand\n    local operand = operand[operator_index]\n    local result =\
    \ operator[result]\n    index = index + 1\n  end\n  return result\nend", "  local\
    \ result = nil\n  local length = #operand\n  local i = 0\n  while i < length do\n\
    \    local op = operator[i]\n    local operand1 = operand[i]\n    local operand2\
    \ = operand[i + 1]\n    local result1 = nil\n    local result2 = nil\n    if op\
    \ == '+' then\n      result1 = operand1 + operand2\n      result2 = operand1 -\
    \ operand2\n    elseif op == '-' then\n      result1 = operand1 - operand2\n \
    \     result2 = operand1 + operand2\n    elseif op == '*' then\n      result1\
    \ = operand1 * operand2\n      result2 = operand1 / operand2\n    elseif op ==\
    \ '/' then\n      result1 = operand1 / operand2\n      result2 = operand1 * operand2\n\
    \    elseif op == '//' then\n      result1 = operand1 // operand2\n      result2\
    \ = operand1 % operand2\n    elseif op == '**' then\n      result1 = operand1\
    \ ** operand2\n      result2 = operand1 ^ operand2\n    end\n    if result1 ~=\
    \ nil and result2 ~= nil then\n      result = result1\n      i = i + 1\n     \
    \ break\n    end\n    i = i + 1\n  end\n  return result\nend", "\tlocal result\
    \ = nil\n\tlocal length = #operand\n\tlocal i = 0\n\twhile i < length do\n\t\t\
    local op = operator[i]\n\t\tlocal operand1 = operand[i]\n\t\tlocal operand2 =\
    \ operand[i + 1]\n\t\tlocal result1 = nil\n\t\tlocal result2 = nil\n\t\tif op\
    \ == '+' then\n\t\t\tresult1 = operand1 + operand2\n\t\telseif op == '-' then\n\
    \t\t\tresult1 = operand1 - operand2\n\t\telseif op == '*' then\n\t\t\tresult1\
    \ = operand1 * operand2\n\t\telseif op == '/' then\n\t\t\tresult1 = operand1 //\
    \ operand2\n\t\telseif op == '**' then\n\t\t\tresult1 = operand1 ** operand2\n\
    \t\tend\n\t\tif result1 == nil then\n\t\t\tprint('Error: Operator \"' .. op ..\
    \ '\" not supported.')\n\t\t\tbreak\n\t\telse\n\t\t\tresult = result1\n\t\tend\n\
    \t\ti = i + 2\n\tend\n\treturn result\nend", "\tlocal result = nil\n\tlocal length\
    \ = #operand\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal\
    \ m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r\
    \ = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w =\
    \ 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\
    \tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g = 0\n\t\
    local h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal\
    \ m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r\
    \ = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w =\
    \ 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\
    \tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g = 0\n\t\
    local h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal\
    \ m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r\
    \ = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w =\
    \ 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\
    \tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g = 0\n\t\
    local h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal\
    \ m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r\
    \ = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w =\
    \ 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\
    \tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0", "\tlocal result =\
    \ nil\n\tlocal index = 1\n\tlocal length = #operand\n\twhile index < length do\n\
    \t\tlocal operator = operator[index + 1]\n\t\tlocal operand1 = operand[index]\n\
    \t\tlocal operand2 = operand[index + 1]\n\t\tlocal result = operand1 + operand2\n\
    \t\tindex = index + 1\n\t\tresult = operator(result)\n\tend\n\treturn result\n\
    end", "  local result = operand[1]\n  for i = 2, #operand do\n    result = operator[result]\
    \ .. operand[i]\n  end\n  return result\nend", "\tlocal result = nil\n\tlocal\
    \ length = #operand\n\tlocal i = 1\n\twhile i < length do\n\t\tlocal op = operator[i]\n\
    \t\tlocal operand1 = operand[i]\n\t\tlocal operand2 = operand[i + 1]\n\t\tlocal\
    \ result1 = nil\n\t\tlocal result2 = nil\n\t\tif op == '+' then\n\t\t\tresult1\
    \ = operand1 + operand2\n\t\t\tresult2 = operand1 - operand2\n\t\telseif op ==\
    \ '-' then\n\t\t\tresult1 = operand1 - operand2\n\t\t\tresult2 = operand1 + operand2\n\
    \t\telseif op == '*' then\n\t\t\tresult1 = operand1 * operand2\n\t\t\tresult2\
    \ = operand1 / operand2\n\t\telseif op == '/' then\n\t\t\tresult1 = operand1 /\
    \ operand2\n\t\t\tresult2 = operand1 * operand2\n\t\telseif op == '//' then\n\t\
    \t\tresult1 = operand1 // operand2\n\t\t\tresult2 = operand1 % operand2\n\t\t\
    elseif op == '**' then\n\t\t\tresult1 = operand1 ** operand2\n\t\t\tresult2 =\
    \ operand1 ^ operand2\n\t\tend\n\t\tresult = result1 or result2 or result\n\t\t\
    i = i + 2\n\tend\n\treturn result\nend", "  local result = nil\n  local length\
    \ = #operand\n  local i = 0\n  local j = 1\n  local k = 1\n  local l = 1\n  local\
    \ m = 1\n  local n = #operator\n  local o = 1\n  local p = 1\n  local q = 1\n\
    \  local r = 1\n  local s = 1\n  local t = 1\n  local u = 1\n  local v = 1\n \
    \ local w = 1\n  local x = 1\n  local y = 1\n  local z = 1\n  local A = 1\n  local\
    \ B = 1\n  local C = 1\n  local D = 1\n  local E = 1\n  local F = 1\n  local G\
    \ = 1\n  local H = 1\n  local I = 1\n  local J = 1\n  local K = 1\n  local L =\
    \ 1\n  local M = 1\n  local N = 1\n  local O = 1\n  local P = 1\n  local Q = 1\n\
    \  local R = 1\n  local S = 1\n  local T = 1\n  local U = 1\n  local V = 1\n \
    \ local W = 1\n  local X = 1\n  local Y = 1\n  local Z = 1\n  local AA = 1\n \
    \ local AB = 1\n  local AC = 1\n  local AD = 1\n  local AE = 1\n  local AF = 1\n\
    \  local AG = 1\n  local AH = 1\n  local AI = 1\n  local AJ = 1\n  local AK =\
    \ 1\n  local AL = 1\n  local AM = 1\n  local AN = 1\n  local AO = 1\n  local AP\
    \ = 1\n  local AQ = 1\n  local AR = 1\n  local AS = 1\n  local AT = 1\n  local\
    \ AU = 1\n  local AV = 1\n  local AW = 1\n  local AX = 1\n  local AY = 1\n  local\
    \ AZ = 1\n  local A = 1\n  local B = 1\n  local C = 1\n  local D = 1\n  local\
    \ E = 1\n  local F = 1\n  local G = 1\n  local H = 1\n  local I = 1\n  local J\
    \ = 1\n  local K = 1\n  local L = 1\n  local M = 1\n  local N = 1\n  local O =\
    \ 1\n  local P = 1\n  local Q = 1\n  local R = 1\n  local S = 1\n  local T = 1\n\
    \  local U = 1\n  local V = 1\n  local W = 1\n  local X = 1\n  local Y = 1\n \
    \ local Z = 1\n  local AA = 1\n  local AB = 1\n  local AC = 1\n  local AD = 1\n\
    \  ", "    local result = nil\n    local op1 = nil\n    local op2 = nil\n    local\
    \ op3 = nil\n    local op4 = nil\n    local op5 = nil\n    local op6 = nil\n \
    \   local op7 = nil\n    local op8 = nil\n    local op9 = nil\n    local op10\
    \ = nil\n    local op11 = nil\n    local op12 = nil\n    local op13 = nil\n  \
    \  local op14 = nil\n    local op15 = nil\n    local op16 = nil\n    local op17\
    \ = nil\n    local op18 = nil\n    local op19 = nil\n    local op20 = nil\n  \
    \  local op21 = nil\n    local op22 = nil\n    local op23 = nil\n    local op24\
    \ = nil\n    local op25 = nil\n    local op26 = nil\n    local op27 = nil\n  \
    \  local op28 = nil\n    local op29 = nil\n    local op30 = nil\n    local op31\
    \ = nil\n    local op32 = nil\n    local op33 = nil\n    local op34 = nil\n  \
    \  local op35 = nil\n    local op36 = nil\n    local op37 = nil\n    local op38\
    \ = nil\n    local op39 = nil\n    local op40 = nil\n    local op41 = nil\n  \
    \  local op42 = nil\n    local op43 = nil\n    local op44 = nil\n    local op45\
    \ = nil\n    local op46 = nil\n    local op47 = nil\n    local op48 = nil\n  \
    \  local op49 = nil\n    local op50 = nil\n    local op51 = nil\n    local op52\
    \ = nil\n    local op53 = nil\n    local op54 = nil\n    local op55 = nil\n  \
    \  local op56 = nil\n    local op57 = nil\n    local op58 = nil\n    local op59\
    \ = nil\n    local op60 = nil\n    local op61 = nil\n    local op62 = nil\n  \
    \  local op63 = nil\n    local op64 = nil\n    local op65 = nil\n    local op66\
    \ = nil\n    local op67 = nil\n    local op68 = nil\n    local op69 = nil\n  \
    \  local op70 = nil\n    local op71 = nil\n    local op72 = nil\n    local op73\
    \ = nil\n    local op74 = nil\n    ", "  local result = nil\n  local length =\
    \ #operand\n  for i = 1, length do\n    local op = operator[i]\n    local operand1\
    \ = operand[i]\n    local operand2 = operand[i - 1]\n    local operand3 = operand[i\
    \ - 2]\n    local operand4 = operand[i - 3]\n    local operand5 = operand[i -\
    \ 4]\n    local operand6 = operand[i - 5]\n    local operand7 = operand[i - 6]\n\
    \    local operand8 = operand[i - 7]\n    local operand9 = operand[i - 8]\n  \
    \  local operand10 = operand[i - 9]\n    local operand11 = operand[i - 10]\n \
    \   local operand12 = operand[i - 11]\n    local operand13 = operand[i - 12]\n\
    \    local operand14 = operand[i - 13]\n    local operand15 = operand[i - 14]\n\
    \    local operand16 = operand[i - 15]\n    local operand17 = operand[i - 16]\n\
    \    local operand18 = operand[i - 17]\n    local operand19 = operand[i - 18]\n\
    \    local operand20 = operand[i - 19]\n    local operand21 = operand[i - 20]\n\
    \    local operand22 = operand[i - 21]\n    local operand23 = operand[i - 22]\n\
    \    local operand24 = operand[i - 23]\n    local operand25 = operand[i - 24]\n\
    \    local operand26 = operand[i - 25]\n    local operand27 = operand[i - 26]\n\
    \    local operand28 = operand[i - 27]\n    local operand29 = operand[i - 28]\n\
    \    local operand30 = operand[i - 29]\n    local operand31 = operand[i - 30]\n\
    \    local operand32 = operand[i - 31]\n    local operand33 = operand[i - 32]\n\
    \    local operand34 = operand[i - 33]\n    local operand35 = operand[i - 34]\n\
    \    local operand36 = operand[i - 35]\n    local operand37 = operand[i - 36]\n\
    \    local operand38 = operand[i - 37]\n    local operand39 = operand[i - 38]\n\
    \    local operand40 = operand[i - 39]\n    local operand41 = operand[i - 40]\n\
    \    local operand42 = operand[i - 41]\n    local operand43 = operand[i - 42]\n\
    \    local operand44 = operand[i - 43]\n    local operand45 = operand[i - 44]\n\
    \    local operand46 = operand[i - 45]\n    local operand47 = operand[i - 46",
  "  local result = 0\n  local operator_count = #operator\n  local operand_count =\
    \ #operand\n  local operator_table = operator\n  local operand_table = operand\n\
    \  for i = 1, operand_count do\n    local operator = operator_table[i - 1]\n \
    \   local operand = operand_table[i - 1]\n    local operator_value = operators[operator]\n\
    \    local operand_value = operands[operand]\n    result = operator_value * operand_value\
    \ + result\n  end\n  return result\nend", "\tlocal result = nil\n\tlocal length\
    \ = #operand\n\tlocal index = 1\n\twhile index < length do\n\t\tlocal operator\
    \ = operator[index]\n\t\tlocal operand1 = operand[index]\n\t\tlocal operand2 =\
    \ operand[index + 1]\n\t\tlocal result = operand1 + operand2\n\t\tindex = index\
    \ + 2\n\t\tif operator == '+' then\n\t\t\tresult = result + operand1\n\t\telseif\
    \ operator == '-' then\n\t\t\tresult = result - operand1\n\t\telseif operator\
    \ == '*' then\n\t\t\tresult = result * operand1\n\t\telseif operator == '/' then\n\
    \t\t\tresult = result / operand1\n\t\telseif operator == '//' then\n\t\t\tresult\
    \ = result // operand1\n\t\telseif operator == '**' then\n\t\t\tresult = result\
    \ ** operand1\n\t\tend\n\tend\n\treturn result\nend", "    local result = operand[1]\n\
    \    for i = 2, #operand do\n        result = operator[operator](result, operand[i])\n\
    \    end\n    return result\nend", "  local result = 0\n  for i = 1, #operand\
    \ do\n    result = result + operand[i] * operator[i]\n  end\n  return result\n\
    end", "    local result = nil\n    local length = #operand\n    for i = 1, length\
    \ do\n        local op = operator[i]\n        local operand1 = operand[i]\n  \
    \      local operand2 = operand[i - 1]\n        local operand3 = operand[i - 2]\n\
    \        local operand4 = operand[i - 3]\n        local operand5 = operand[i -\
    \ 4]\n        local operand6 = operand[i - 5]\n        local operand7 = operand[i\
    \ - 6]\n        local operand8 = operand[i - 7]\n        local operand9 = operand[i\
    \ - 8]\n        local operand10 = operand[i - 9]\n        local operand11 = operand[i\
    \ - 10]\n        local operand12 = operand[i - 11]\n        local operand13 =\
    \ operand[i - 12]\n        local operand14 = operand[i - 13]\n        local operand15\
    \ = operand[i - 14]\n        local operand16 = operand[i - 15]\n        local\
    \ operand17 = operand[i - 16]\n        local operand18 = operand[i - 17]\n   \
    \     local operand19 = operand[i - 18]\n        local operand20 = operand[i -\
    \ 19]\n        local operand21 = operand[i - 20]\n        local operand22 = operand[i\
    \ - 21]\n        local operand23 = operand[i - 22]\n        local operand24 =\
    \ operand[i - 23]\n        local operand25 = operand[i - 24]\n        local operand26\
    \ = operand[i - 25]\n        local operand27 = operand[i - 26]\n        local\
    \ operand28 = operand[i - 27]\n        local operand29 = operand[i - 28]\n   \
    \     local operand30 = operand[i - 29]\n        local operand31 = operand[i -\
    \ 30]\n        local operand32 = operand[i - 31]\n        local operand33 = operand[i\
    \ - 32]\n        local operand34 = operand[i - 33]\n        local operand35 =\
    \ operand[i - 34]\n        local operand36 = operand[i - 35]\n        local operand37\
    \ = operand[i - 36]\n        local operand38 = operand[i - 37]\n        local\
    \ operand39 = operand[i - 38]\n        local operand40 = operand[i - 39]\n   \
    \     local operand41 = operand[i - 40]\n        local operand42 = operand[i -\
    \ 41]\n        local operand43 = operand[i - 42]\n        local operand44 = operand[i\
    \ - 43]\n        local operand45 = operand[i - 44]\n        local operand46 =\
    \ operand[i - 45]\n        local operand47 = operand[i - 46", "\tlocal result\
    \ = nil\n\tlocal length = #operand\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k =\
    \ 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\
    \tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\t\
    local v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal\
    \ a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f\
    \ = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k =\
    \ 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\
    \tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\t\
    local v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal\
    \ a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f\
    \ = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k =\
    \ 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\
    \tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\t\
    local v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal\
    \ a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f\
    \ = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k =\
    \ 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\
    \tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\t\
    local v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal\
    \ a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f\
    \ = 0", "\tlocal result = nil\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\t\
    local l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal\
    \ q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v\
    \ = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a =\
    \ 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\
    \tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\t\
    local l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal\
    \ q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v\
    \ = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a =\
    \ 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\
    \tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\t\
    local l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal\
    \ q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v\
    \ = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a =\
    \ 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\
    \tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\t\
    local l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal\
    \ q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v\
    \ = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a =\
    \ 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\
    \tlocal g = 0\n", "\tlocal result = nil\n\tlocal length = #operand\n\tlocal index\
    \ = 1\n\twhile index < length do\n\t\tlocal op = operator[index]\n\t\tlocal operand1\
    \ = operand[index]\n\t\tlocal operand2 = operand[index + 1]\n\t\tlocal result\
    \ = op * operand1 + op * operand2\n\t\tindex = index + 2\n\tend\n\treturn result\n\
    end", "\tlocal result = nil\n\tlocal length = #operand\n\tlocal index = 1\n\t\
    local operator_index = 1\n\tlocal operand_index = 1\n\twhile index < length do\n\
    \t\tif operator_index < #operator then\n\t\t\tlocal operator = operator[operator_index]\n\
    \t\t\tlocal operand = operand[operand_index]\n\t\t\tif operator == '+' then\n\t\
    \t\t\tresult = result + operand\n\t\t\telseif operator == '-' then\n\t\t\t\tresult\
    \ = result - operand\n\t\t\telseif operator == '*' then\n\t\t\t\tresult = result\
    \ * operand\n\t\t\telseif operator == '/' then\n\t\t\t\tresult = result // operand\n\
    \t\t\telseif operator == '**' then\n\t\t\t\tresult = result ** operand\n\t\t\t\
    end\n\t\t\tindex = index + 1\n\t\telse\n\t\t\tbreak\n\t\tend\n\t\toperator_index\
    \ = operator_index + 1\n\t\toperand_index = operand_index + 1\n\tend\n\treturn\
    \ result\nend", "  local result = operand[1]\n  for i = 2, #operand do\n    result\
    \ = operator[result]\n  end\n  return result\nend", "  local result = 0\n  local\
    \ operator_count = #operator\n  local operand_count = #operand\n  for i = 1, operand_count\
    \ do\n    local operand = operand[i]\n    local operator = operator[i]\n    if\
    \ operator == '+' then\n      result = result + operand\n    elseif operator ==\
    \ '-' then\n      result = result - operand\n    elseif operator == '*' then\n\
    \      result = result * operand\n    elseif operator == '/' then\n      result\
    \ = result / operand\n    elseif operator == '//' then\n      result = result\
    \ // operand\n    elseif operator == '**' then\n      result = result ** operand\n\
    \    end\n  end\n  return result\nend", "  local result = operand[1]\n  for i\
    \ = 2, #operand do\n    result = operator[result] .. operand[i]\n  end\n  return\
    \ result\nend", "  local result = nil\n  local length = #operand\n  local operators\
    \ = operator\n  local operands = operand\n  local length = #operand\n  local index\
    \ = 1\n  local operator = nil\n  local operand = nil\n  local result = nil\n \
    \ local operators = operator\n  local operands = operand\n  local length = #operand\n\
    \  local index = 1\n  local operator = nil\n  local operand = nil\n  local result\
    \ = nil\n  local operators = operator\n  local operands = operand\n  local length\
    \ = #operand\n  local index = 1\n  local operator = nil\n  local operand = nil\n\
    \  local result = nil\n  local operators = operator\n  local operands = operand\n\
    \  local length = #operand\n  local index = 1\n  local operator = nil\n  local\
    \ operand = nil\n  local result = nil\n  local operators = operator\n  local operands\
    \ = operand\n  local length = #operand\n  local index = 1\n  local operator =\
    \ nil\n  local operand = nil\n  local result = nil\n  local operators = operator\n\
    \  local operands = operand\n  local length = #operand\n  local index = 1\n  local\
    \ operator = nil\n  local operand = nil\n  local result = nil\n  local operators\
    \ = operator\n  local operands = operand\n  local length = #operand\n  local index\
    \ = 1\n  local operator = nil\n  local operand = nil\n  local result = nil\n \
    \ local operators = operator\n  local operands = operand\n  local length = #operand\n\
    \  local index = 1\n  local operator = nil\n  local operand = nil\n  local result\
    \ = nil\n  local operators = operator\n  local operands = operand\n  local length\
    \ = #operand\n  local index = 1\n  local operator = nil\n  local operand = nil\n\
    \  local result = nil\n  local operators = operator\n  local operands = operand\n\
    \  local length = #operand\n  local index = 1\n  local operator = nil\n  local\
    \ operand = nil\n  local result = nil\n  local operators = operator\n  local operands\
    \ = operand\n  local length = #operand\n  local index = 1\n  local operator =\
    \ nil\n  local operand = nil\n  local result = nil\n  local operators = operator\n\
    \  local operands = operand\n  local length = #operand\n  local index = 1\n  local\
    \ operator = nil\n  local operand = nil\n  local result = nil\n  local operators\
    \ = operator\n  local operands = operand\n  local length = #operand\n  local index",
  "\tlocal result = nil\n\tlocal length = #operand\n\tlocal i = 0\n\tlocal j = 0\n\
    \tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\t\
    local p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal\
    \ u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z\
    \ = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e =\
    \ 0\n\tlocal f = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 1\n\tlocal j = 1\n\
    \tlocal k = 1\n\tlocal l = 1\n\tlocal m = 1\n\tlocal n = 2\n\tlocal o = 2\n\t\
    local p = 3\n\tlocal q = 4\n\tlocal r = 5\n\tlocal s = 6\n\tlocal t = 7\n\tlocal\
    \ u = 8\n\tlocal v = 9\n\tlocal w = 10\n\tlocal x = 11\n\tlocal y = 12\n\tlocal\
    \ z = 13\n\tlocal a = 14\n\tlocal b = 15\n\tlocal c = 16\n\tlocal d = 17\n\tlocal\
    \ e = 18\n\tlocal f = 19\n\tlocal g = 20\n\tlocal h = 21\n\tlocal i = 2\n\tlocal\
    \ j = 2\n\tlocal k = 2\n\tlocal l = 2\n\tlocal m = 2\n\tlocal n = 2\n\tlocal o\
    \ = 2\n\tlocal p = 3\n\tlocal q = 4\n\tlocal r = 5\n\tlocal s = 6\n\tlocal t =\
    \ 7\n\tlocal u = 8\n\tlocal v = 9\n\tlocal w = 10\n\tlocal x = 11\n\tlocal y =\
    \ 12\n\tlocal z = 13\n\tlocal a = 14\n\tlocal b = 15\n\tlocal c = 16\n\tlocal\
    \ d = 17\n\tlocal e = 18\n\tlocal f = 19\n\tlocal g = 20\n\tlocal h = 21\n\tlocal\
    \ i = 2\n\tlocal j = 2\n\tlocal k = 2\n\tlocal l = 2\n\tlocal m = 2\n\tlocal n\
    \ = 2\n\tlocal o = 2\n\tlocal p = 3\n\tlocal q = 4\n\tlocal r = 5\n\tlocal s =\
    \ 6\n\tlocal t = 7\n\tlocal u = 8\n\tlocal v = 9\n\tlocal w = 10\n\tlocal x =\
    \ 11\n\tlocal y = 12\n\tlocal z = 13\n\tlocal a = 14\n\tlocal b = 15\n\tlocal\
    \ c = 16\n\tlocal d = 17\n\tlocal e = ", "    local result = operand[1]\n    for\
    \ i = 2, #operand do\n        result = operator[result]\n        result = operand[i]\n\
    \    end\n    return result\nend", "    local result = nil\n    local operator_count\
    \ = #operator\n    local operand_count = #operand\n    if operator_count > 0 and\
    \ operand_count > 0 then\n        local operator_table = operator\n        local\
    \ operand_table = operand\n        local operator_pointer = 1\n        local operand_pointer\
    \ = 1\n        local operator_pointer_limit = operator_count - 1\n        local\
    \ operand_pointer_limit = operand_count - 1\n        local operator_pointer_temp\
    \ = operator_pointer\n        local operand_pointer_temp = operand_pointer\n \
    \       local operator_pointer_temp_limit = operator_pointer_limit\n        local\
    \ operand_pointer_temp_limit = operand_pointer_limit\n        local operator_pointer_temp_temp\
    \ = operator_pointer_temp\n        local operand_pointer_temp_temp = operand_pointer_temp\n\
    \        local operator_pointer_temp_temp_limit = operator_pointer_temp_limit\n\
    \        local operand_pointer_temp_temp_limit = operand_pointer_temp_limit\n\
    \        local operator_pointer_temp_temp_temp = operator_pointer_temp_temp\n\
    \        local operand_pointer_temp_temp_temp = operand_pointer_temp_temp\n  \
    \      local operator_pointer_temp_temp_temp_limit = operator_pointer_temp_temp_limit\n\
    \        local operand_pointer_temp_temp_temp_limit = operand_pointer_temp_temp_temp_limit\n\
    \        local operator_pointer_temp_temp_temp_temp = operator_pointer_temp_temp_temp\n\
    \        local operand_pointer_temp_temp_temp_temp = operand_pointer_temp_temp_temp_temp\n\
    \        local operator_pointer_temp_temp_temp_temp_limit = operator_pointer_temp_temp_temp_temp_limit\n\
    \        local operand_pointer_temp_temp_temp_temp_limit = operand_pointer_temp_temp_temp_temp_limit\n\
    \        local operator_pointer_temp_temp_temp_temp_temp = operator_pointer_temp_temp_temp_temp_temp\n\
    \        local operand_pointer_temp_temp_temp_temp_temp = operand_pointer_temp_temp_temp_temp_temp\n\
    \        local operator_pointer_temp_temp_temp_temp_temp_limit = operator_pointer_temp_temp_temp_temp_temp_limit\n\
    \        local operand_pointer_temp_temp_temp_temp_temp_limit = operand_pointer_temp_temp_temp_temp_temp_temp_limit\n\
    \        local operator_pointer_temp_temp_temp_temp_temp_temp = operator_pointer_temp_temp_temp_temp_temp_temp_temp\n\
    \        local operand_pointer_temp_temp_temp_temp_temp_temp = operand_pointer_temp_temp_temp_temp_temp_temp_temp\n\
    \        local operator_pointer_temp_temp_temp_temp_temp_temp_limit = operator_pointer_temp_temp_temp_temp_temp_temp_temp_limit\n\
    \        local operand_pointer_temp_temp_temp_temp_temp_temp_limit = operand_pointer_temp_temp_temp_temp_temp_temp_temp_limit\n\
    \        local operator_pointer_temp_temp_temp_temp_temp_", "\tlocal result =\
    \ operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[result] .. operand[i]\n\
    \tend\n\treturn result\nend", "\tlocal result = nil\n\tlocal operands = #operand\n\
    \tlocal operators = #operator\n\tlocal operand = operand[1]\n\tlocal operator\
    \ = operator[1]\n\tlocal operand1 = operand[2]\n\tlocal operand2 = operand[3]\n\
    \tlocal operator1 = operator[2]\n\tlocal operator2 = operator[3]\n\tlocal operand1_name\
    \ = operand1[1]\n\tlocal operand2_name = operand2[1]\n\tlocal operator1_name =\
    \ operator1[1]\n\tlocal operator2_name = operator2[1]\n\tlocal operator1_value\
    \ = operator1[#operator1]\n\tlocal operator2_value = operator2[#operator2]\n\t\
    local operand1_value = operand1[#operand1]\n\tlocal operand2_value = operand2[#operand2]\n\
    \tlocal operator1_value = operator1[#operator1]\n\tlocal operator2_value = operator2[#operator2]\n\
    \tlocal operand1_value = operand1[#operand1]\n\tlocal operand2_value = operand2[#operand2]\n\
    \tlocal operator1_value = operator1[#operator1]\n\tlocal operator2_value = operator2[#operator2]\n\
    \tlocal operand1_value = operand1[#operand1]\n\tlocal operand2_value = operand2[#operand2]\n\
    \tlocal operator1_value = operator1[#operator1]\n\tlocal operator2_value = operator2[#operator2]\n\
    \tlocal operand1_value = operand1[#operand1]\n\tlocal operand2_value = operand2[#operand2]\n\
    \tlocal operator1_value = operator1[#operator1]\n\tlocal operator2_value = operator2[#operator2]\n\
    \tlocal operand1_value = operand1[#operand1]\n\tlocal operand2_value = operand2[#operand2]\n\
    \tlocal operator1_value = operator1[#operator1]\n\tlocal operator2_value = operator2[#operator2]\n\
    \tlocal operand1_value = operand1[#operand1]\n\tlocal operand2_value = operand2[#operand2]\n\
    \tlocal operator1_value = operator1[#operator1]\n\tlocal operator2_value = operator2[#operator2]\n\
    \tlocal operand1_value = operand1[#operand1]\n\tlocal operand2_value = operand2[#operand2]\n\
    \tlocal operator1_value = operator1[#operator1]\n\tlocal operator2_value = operator2[#operator2]\n\
    \tlocal operand1_value = operand1[#operand1]\n\tlocal operand2_value = operand2[#operand2]\n\
    \tlocal operator1_value = operator1[#operator1]\n\tlocal operator2_value = operator2[#operator2]\n\
    \tlocal operand1_value = operand1[#operand1]\n\tlocal operand2_value = operand2[#operand2]\n\
    \tlocal operator1_value = operator1[#operator1]\n\tlocal operator2_value = operator2[#",
  "    local result = nil\n    local ops = #operator\n    local ops_size = #operand\n\
    \    local ops_index = 1\n    local ops_value = operator[1]\n    local ops_value\
    \ = ops_value\n    local ops_value = ops_value\n    local ops_value = ops_value\n\
    \    local ops_value = ops_value\n    local ops_value = ops_value\n    local ops_value\
    \ = ops_value\n    local ops_value = ops_value\n    local ops_value = ops_value\n\
    \    local ops_value = ops_value\n    local ops_value = ops_value\n    local ops_value\
    \ = ops_value\n    local ops_value = ops_value\n    local ops_value = ops_value\n\
    \    local ops_value = ops_value\n    local ops_value = ops_value\n    local ops_value\
    \ = ops_value\n    local ops_value = ops_value\n    local ops_value = ops_value\n\
    \    local ops_value = ops_value\n    local ops_value = ops_value\n    local ops_value\
    \ = ops_value\n    local ops_value = ops_value\n    local ops_value = ops_value\n\
    \    local ops_value = ops_value\n    local ops_value = ops_value\n    local ops_value\
    \ = ops_value\n    local ops_value = ops_value\n    local ops_value = ops_value\n\
    \    local ops_value = ops_value\n    local ops_value = ops_value\n    local ops_value\
    \ = ops_value\n    local ops_value = ops_value\n    local ops_value = ops_value\n\
    \    local ops_value = ops_value\n    local ops_value = ops_value\n    local ops_value\
    \ = ops_value\n    local ops_value = ops_value\n    local ops_value = ops_value\n\
    \    local ops_value = ops_value\n    local ops_value = ops_value\n    local ops_value\
    \ = ops_value\n    local ops_value = ops_value\n    local ops_value = ops_value\n\
    \    local ops_value = ops_value\n    local ops_value = ops_value\n    local ops_value\
    \ = ops_value\n    local ops_value = ops_value\n    local ops_value = ops_value\n\
    \    local ops_value = ops_value\n    local ops_value = ops_value\n    local ops_value\
    \ = ops_value\n    local ops_value = ops_value\n    local ops_value = ops_value\n",
  "\tlocal result = nil\n\tlocal length = #operand\n\tlocal i = 0\n\tlocal j = 0\n\
    \tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\t\
    local p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal\
    \ u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z\
    \ = 0\n\tlocal A = 0\n\tlocal B = 0\n\tlocal C = 0\n\tlocal D = 0\n\tlocal E =\
    \ 0\n\tlocal F = 0\n\tlocal G = 0\n\tlocal H = 0\n\tlocal I = 0\n\tlocal J = 0\n\
    \tlocal K = 0\n\tlocal L = 0\n\tlocal M = 0\n\tlocal N = 0\n\tlocal O = 0\n\t\
    local P = 0\n\tlocal Q = 0\n\tlocal R = 0\n\tlocal S = 0\n\tlocal T = 0\n\tlocal\
    \ U = 0\n\tlocal V = 0\n\tlocal W = 0\n\tlocal X = 0\n\tlocal Y = 0\n\tlocal Z\
    \ = 0\n\tlocal AA = 0\n\tlocal AB = 0\n\tlocal AC = 0\n\tlocal AD = 0\n\tlocal\
    \ AE = 0\n\tlocal AF = 0\n\tlocal AG = 0\n\tlocal AH = 0\n\tlocal AI = 0\n\tlocal\
    \ AJ = 0\n\tlocal AK = 0\n\tlocal AL = 0\n\tlocal AM = 0\n\tlocal AN = 0\n\tlocal\
    \ AO = 0\n\tlocal AP = 0\n\tlocal AQ = 0\n\tlocal AR = 0\n\tlocal AS = 0\n\tlocal\
    \ AT = 0\n\tlocal AU = 0\n\tlocal AV = 0\n\tlocal AW = 0\n\tlocal AX = 0\n\tlocal\
    \ AY = 0\n\tlocal AZ = 0\n\tlocal AA = 0\n\tlocal AB = 0\n\tlocal AC = 0\n\tlocal\
    \ AD = 0\n\tlocal AE = 0\n\tlocal AF = 0\n\tlocal AG = 0\n\tlocal AH = 0\n\tlocal\
    \ AI = 0\n\tlocal AJ = 0\n\tlocal AK = 0\n\tlocal AL = 0\n\tlocal AM = 0\n\tlocal\
    \ AN = 0\n\tlocal AO = 0\n\tlocal AP = 0\n\tlocal AQ = 0\n\tlocal AR = 0\n\tlocal\
    \ AS = 0\n\tlocal AT = 0\n\tlocal AU = 0\n\tlocal AV = 0\n\tlocal AW = 0\n\tlocal\
    \ AX = 0\n\tlocal AY = 0\n\tlocal AZ = 0\n\tlocal AA = 0\n\tlocal AB = 0\n\tlocal\
    \ AC = 0\n\tlocal AD = 0\n\t", "  local result = nil\n  local length = #operand\n\
    \  for i = 1, length do\n    local op = operator[i]\n    local a = operand[i-1]\n\
    \    local b = operand[i]\n    if op == '+' then\n      result = a + b\n    elseif\
    \ op == '-' then\n      result = a - b\n    elseif op == '*' then\n      result\
    \ = a * b\n    elseif op == '/' then\n      result = a / b\n    elseif op == '//'\
    \ then\n      result = a // b\n    elseif op == '**' then\n      result = a **\
    \ b\n    end\n  end\n  return result\nend", "\tlocal result = nil\n\tlocal length\
    \ = #operand\n\tlocal i = 0\n\t\n\t-- The first table has basic algebra operations.\n\
    \t-- The second table is a table of integers. \n\t-- Use the two given tables\
    \ to build the algebric expression and return the evaluation of this expression.\n\
    \t-- The basic algebra operations:\n\t-- Addition ( + ) \n\t-- Subtraction ( -\
    \ ) \n\t-- Multiplication ( * ) \n\t-- Floor division ( // ) \n\t-- Exponentiation\
    \ ( ** ) \n\t-- Example:\n\t-- operator['+', '*', '-']\n\t-- table = [2, 3, 4,\
    \ 5]\n\t-- result = 2 + 3 * 4 - 5\n\t-- => result = 9\n\t-- Note:\n\t-- The length\
    \ of operator table is equal to the length of operand table minus one.\n\t-- Operand\
    \ is a table of of non-negative integers.\n\t-- Operator table has at least one\
    \ operator, and operand table has at least two operands.\n\t\n\t-- If there are\
    \ two operands, the first operand is added to the result.\n\tif length == 2 then\n\
    \t\tresult = operand[1] + operand[2]\n\telseif length == 1 then\n\t\t-- If there\
    \ is only one operand, just use the first operand.\n\t\tresult = operand[1]\n\t\
    else\n\t\t-- If there are more than two operands, use the first two operands.\n\
    \t\tresult = operand[1] + operand[2]\n\t\t\n\t\t-- If the first operand is negative,\
    \ add it to the result.\n\t\tif operand[1] < 0 then\n\t\t\tresult = result + operand[1]\n\
    \t\tend\n\tend\n\t\n\t-- Iterate through the operator table.\n\tfor i = 1, #operator\
    \ do\n\t\t-- If the current operator is equal to the current operand, just use\
    \ the current operand.\n\t\tif operator[i] == operand[i] then\n\t\t\tresult =\
    \ operand[i]\n\t\telse\n\t\t\t-- Otherwise, use the current operand and current\
    \ operator to build the algebric expression.\n\t\t\tresult = operator[i](result,\
    \ operand[i])\n\t\tend\n\tend\n\t\n\treturn result\nend", "\tlocal result = nil\n\
    \tlocal ops = operator\n\tlocal ops_len = #ops\n\tlocal ops_table = nil\n\tlocal\
    \ ops_table_len = #operand\n\tlocal ops_table_elem = nil\n\tlocal ops_table_elem_len\
    \ = nil\n\tlocal ops_table_elem_value = nil\n\tlocal ops_table_elem_value_len\
    \ = nil\n\tlocal ops_table_elem_value_elem = nil\n\tlocal ops_table_elem_value_elem_len\
    \ = nil\n\tlocal ops_table_elem_value_elem_value = nil\n\tlocal ops_table_elem_value_elem_value_len\
    \ = nil\n\tlocal ops_table_elem_value_elem_value_elem = nil\n\tlocal ops_table_elem_value_elem_value_elem_len\
    \ = nil\n\tlocal ops_table_elem_value_elem_value_elem_value = nil\n\tlocal ops_table_elem_value_elem_value_elem_value_len\
    \ = nil\n\tlocal ops_table_elem_value_elem_value_elem_value_elem = nil\n\tlocal\
    \ ops_table_elem_value_elem_value_elem_value_elem_len = nil\n\tlocal ops_table_elem_value_elem_value_elem_value_elem_value\
    \ = nil\n\tlocal ops_table_elem_value_elem_value_elem_value_elem_value_len = nil\n\
    \tlocal ops_table_elem_value_elem_value_elem_value_elem_value_elem = nil\n\tlocal\
    \ ops_table_elem_value_elem_value_elem_value_elem_value_elem_len = nil\n\tlocal\
    \ ops_table_elem_value_elem_value_elem_value_elem_value_elem_value = nil\n\tlocal\
    \ ops_table_elem_value_elem_value_elem_value_elem_value_elem_value_len = nil\n\
    \tlocal ops_table_elem_value_elem_value_elem_value_elem_value_elem_value_elem\
    \ = nil\n\tlocal ops_table_elem_value_elem_value_elem_value_elem_value_elem_value_elem_len\
    \ = nil\n\tlocal ops_table_elem_value_elem_value_elem_value_elem_value_elem_value_elem_value\
    \ = nil\n\tlocal ops_table_elem_value_elem_value_elem_value_elem_value_elem_value_elem_value_len\
    \ = nil\n\tlocal ops_table_elem_value_elem_value_elem_value_elem_value_elem_value_elem_value_elem\
    \ = nil\n\tlocal ops_table_elem_value_elem_value_elem_value_elem_value_elem_value_elem_value_elem_len\
    \ = nil\n\tlocal ops_table_elem_value_elem_value_elem_value_elem_value_elem_value_elem_value_elem_value\
    \ = nil\n\tlocal ops_table_elem_value_elem_value_elem_value_elem_value_elem_value_elem_value_elem_value_elem_len\
    \ = nil\n\tlocal ops_table_elem_value_elem_value_elem_value_elem_value_elem_value_elem_value_elem_value_elem_elem\
    \ = nil\n\tlocal ops_table_elem_value_elem_value_elem_value_elem_value_elem_value_elem_value_elem_value_elem_value_elem_len\
    \ = nil\n\tlocal ops_table_elem_value_elem_", "\tlocal result = nil\n\tlocal length\
    \ = #operand\n\tlocal i = 1\n\twhile i < length do\n\t\tlocal op = operator[i]\n\
    \t\tlocal a = operand[i-1]\n\t\tlocal b = operand[i]\n\t\tlocal c = operand[i+1]\n\
    \t\tlocal d = operand[i+2]\n\t\tlocal e = operand[i+3]\n\t\tlocal f = operand[i+4]\n\
    \t\tlocal g = operand[i+5]\n\t\tlocal h = operand[i+6]\n\t\tlocal i = i+7\n\t\t\
    local j = i+1\n\t\tlocal k = i+1\n\t\tlocal l = i+1\n\t\tlocal m = i+1\n\t\tlocal\
    \ n = i+1\n\t\tlocal o = i+1\n\t\tlocal p = i+1\n\t\tlocal q = i+1\n\t\tlocal\
    \ r = i+1\n\t\tlocal s = i+1\n\t\tlocal t = i+1\n\t\tlocal u = i+1\n\t\tlocal\
    \ v = i+1\n\t\tlocal w = i+1\n\t\tlocal x = i+1\n\t\tlocal y = i+1\n\t\tlocal\
    \ z = i+1\n\t\tlocal a = operand[i-1]\n\t\tlocal b = operand[i]\n\t\tlocal c =\
    \ operand[i+1]\n\t\tlocal d = operand[i+2]\n\t\tlocal e = operand[i+3]\n\t\tlocal\
    \ f = operand[i+4]\n\t\tlocal g = operand[i+5]\n\t\tlocal h = operand[i+6]\n\t\
    \tlocal i = i+7\n\t\tlocal j = i+1\n\t\tlocal k = i+1\n\t\tlocal l = i+1\n\t\t\
    local m = i+1\n\t\tlocal n = i+1\n\t\tlocal o = i+1\n\t\tlocal p = i+1\n\t\tlocal\
    \ q = i+1\n\t\tlocal r = i+1\n\t\tlocal s = i+1\n\t\tlocal t = i+1\n\t\tlocal\
    \ u = i+1\n\t\tlocal v = i+1\n\t\tlocal w = i+1\n\t\tlocal x = i+1\n\t\tlocal\
    \ y = i+1\n\t\tlocal z = i+1\n\t\tlocal a = operand[i-1]\n\t\tlocal b = operand[i]\n\
    \t\tlocal c = operand[i+1]\n\t\tlocal d = operand[i+2]\n\t\tlocal e = operand[i+3]\n\
    \t\tlocal f = operand[i+4]\n\t\tlocal g = operand[i+5]\n\t\tlocal h = operand[i+6]\n\
    \t\tlocal i = i+7\n\t\tlocal j = i+1\n\t\tlocal k = i+1\n\t\tlocal l = i+1\n\t\
    \tlocal m = i+1\n\t\tlocal n = i+1\n\t\tlocal o = i+1\n\t\tlocal p = i+1\n\t\t\
    local q = i+1\n\t\tlocal r = i+1\n\t\tlocal s = i+1\n\t\tlocal t = i+1\n\t\tlocal\
    \ u = i+1\n\t\tlocal v = i+1\n\t\tlocal w = i+1\n\t\tlocal x = i+1\n\t\tlocal\
    \ y = i+1\n\t\tlocal z = i+1\n\t\t", "\tlocal result = operand[1]\n\tlocal length\
    \ = #operand\n\tfor i = 2, length do\n\t\tresult = operator[result]\n\tend\n\t\
    return result\nend", "  local result = operand[1]\n  for i = 2, #operand do\n\
    \    result = operator[result] .. operand[i]\n  end\n  return result\nend", " \
    \ local result = operand[1]\n  for i = 2, #operand do\n    result = operator[result]\
    \ .. operand[i]\n  end\n  return result\nend", "  local result = operand[1]\n\
    \  for i = 2, #operand do\n    result = operator[result]\n  end\n  return result\n\
    end", "\tlocal result = nil\n\tlocal length = #operand\n\tlocal index = 1\n\t\
    while index < length do\n\t\tlocal operator = operator[index + 1]\n\t\tlocal operand1\
    \ = operand[index]\n\t\tlocal operand2 = operand[index + 1]\n\t\tlocal result\
    \ = nil\n\t\tif operator == '+' then\n\t\t\tresult = operand1 + operand2\n\t\t\
    elseif operator == '-' then\n\t\t\tresult = operand1 - operand2\n\t\telseif operator\
    \ == '*' then\n\t\t\tresult = operand1 * operand2\n\t\telseif operator == '/'\
    \ then\n\t\t\tresult = operand1 / operand2\n\t\telseif operator == '//' then\n\
    \t\t\tresult = operand1 // operand2\n\t\telseif operator == '**' then\n\t\t\t\
    result = operand1 ** operand2\n\t\tend\n\t\tif result ~= nil then\n\t\t\tindex\
    \ = index + 2\n\t\t\tbreak\n\t\tend\n\t\tindex = index + 1\n\tend\n\treturn result\n\
    end", "  local result = nil\n  local length = #operand\n  local ops = operator\n\
    \  local ops_length = #ops\n  local ops_table = nil\n  local ops_table_length\
    \ = nil\n  local ops_table_length = #ops\n  local ops_table_length = #ops\n  local\
    \ ops_table_length = #ops\n  local ops_table_length = #ops\n  local ops_table_length\
    \ = #ops\n  local ops_table_length = #ops\n  local ops_table_length = #ops\n \
    \ local ops_table_length = #ops\n  local ops_table_length = #ops\n  local ops_table_length\
    \ = #ops\n  local ops_table_length = #ops\n  local ops_table_length = #ops\n \
    \ local ops_table_length = #ops\n  local ops_table_length = #ops\n  local ops_table_length\
    \ = #ops\n  local ops_table_length = #ops\n  local ops_table_length = #ops\n \
    \ local ops_table_length = #ops\n  local ops_table_length = #ops\n  local ops_table_length\
    \ = #ops\n  local ops_table_length = #ops\n  local ops_table_length = #ops\n \
    \ local ops_table_length = #ops\n  local ops_table_length = #ops\n  local ops_table_length\
    \ = #ops\n  local ops_table_length = #ops\n  local ops_table_length = #ops\n \
    \ local ops_table_length = #ops\n  local ops_table_length = #ops\n  local ops_table_length\
    \ = #ops\n  local ops_table_length = #ops\n  local ops_table_length = #ops\n \
    \ local ops_table_length = #ops\n  local ops_table_length = #ops\n  local ops_table_length\
    \ = #ops\n  local ops_table_length = #ops\n  local ops_table_length = #ops\n \
    \ local ops_table_length = #ops\n  local ops_table_length = #ops\n  local ops_table_length\
    \ = #ops\n  local ops_table_length = #ops\n  local ops_table_length = #ops\n \
    \ local ops_table_length = #ops\n  local ops_table_length = #ops\n  local ops_table_length\
    \ = #ops\n  local ops_table_length = #ops\n  local ops_table_length = #ops\n \
    \ local ops_table_length = #ops\n  local ops_table_length = #ops\n  local ops_table_length\
    \ = #ops\n  local ops_table_length = #ops\n  local ops_table_length = #ops\n \
    \ local ops_", "\t-- Your code here\n\tlocal result = 0\n\tlocal i = 0\n\tlocal\
    \ j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o\
    \ = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t =\
    \ 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\
    \tlocal z = 0\n\tlocal A = 0\n\tlocal B = 0\n\tlocal C = 0\n\tlocal D = 0\n\t\
    local E = 0\n\tlocal F = 0\n\tlocal G = 0\n\tlocal H = 0\n\tlocal I = 0\n\tlocal\
    \ J = 0\n\tlocal K = 0\n\tlocal L = 0\n\tlocal M = 0\n\tlocal N = 0\n\tlocal O\
    \ = 0\n\tlocal P = 0\n\tlocal Q = 0\n\tlocal R = 0\n\tlocal S = 0\n\tlocal T =\
    \ 0\n\tlocal U = 0\n\tlocal V = 0\n\tlocal W = 0\n\tlocal X = 0\n\tlocal Y = 0\n\
    \tlocal Z = 0\n\tlocal AA = 0\n\tlocal AB = 0\n\tlocal AC = 0\n\tlocal AD = 0\n\
    \tlocal AE = 0\n\tlocal AF = 0\n\tlocal AG = 0\n\tlocal AH = 0\n\tlocal AI = 0\n\
    \tlocal AJ = 0\n\tlocal AK = 0\n\tlocal AL = 0\n\tlocal AM = 0\n\tlocal AN = 0\n\
    \tlocal AO = 0\n\tlocal AP = 0\n\tlocal AQ = 0\n\tlocal AR = 0\n\tlocal AS = 0\n\
    \tlocal AT = 0\n\tlocal AU = 0\n\tlocal AV = 0\n\tlocal AW = 0\n\tlocal AX = 0\n\
    \tlocal AY = 0\n\tlocal AZ = 0\n\tlocal AA = 0\n\tlocal AB = 0\n\tlocal AC = 0\n\
    \tlocal AD = 0\n\tlocal AE = 0\n\tlocal AF = 0\n\tlocal AG = 0\n\tlocal AH = 0\n\
    \tlocal AI = 0\n\tlocal AJ = 0\n\tlocal AK = 0\n\tlocal AL = 0\n\tlocal AM = 0\n\
    \tlocal AN = 0\n\tlocal AO = 0\n\tlocal AP = 0\n\tlocal AQ = 0\n\tlocal AR = 0\n\
    \tlocal AS = 0\n\tlocal AT = 0\n\tlocal AU = 0\n\tlocal AV = 0\n\tlocal AW = 0\n\
    \tlocal AX = 0\n\tlocal AY = 0\n\tlocal AZ = 0\n\tlocal AA = 0\n\tlocal AB = 0\n\
    \tlocal AC = 0\n\tlocal AD = 0\n\t", "  local result = nil\n  local length = #operand\n\
    \  for i = 1, length do\n    local operand1 = operand[i]\n    local operand2 =\
    \ operand[i - 1]\n    local operator1 = operator[i]\n    local operator2 = operator[i\
    \ - 1]\n    local operation = nil\n    if operator1 ~= '-' and operator2 ~= '-'\
    \ then\n      operation = operator1 .. operator2\n    elseif operator1 == '-'\
    \ and operator2 == '-' then\n      operation = '-'\n    elseif operator1 == '-'\
    \ then\n      operation = operator2\n    elseif operator2 == '-' then\n      operation\
    \ = operator1\n    else\n      operation = operator1 .. operator2\n    end\n \
    \   result = result + operand1 * operand2 * operation\n  end\n  return result\n\
    end", "  local result = nil\n  local operator_count = #operator\n  local operand_count\
    \ = #operand\n  if operator_count ~= operand_count then\n    error(\"Operator\
    \ table has \" .. operator_count .. \" operators, and operand table has \" ..\
    \ operand_count .. \" operands.\")\n  end\n  for i = 1, operand_count do\n   \
    \ local operand = operand[i]\n    local operator = operator[i]\n    local result\
    \ = operand\n    if operator == '+' then\n      result = result + operand\n  \
    \  elseif operator == '-' then\n      result = result - operand\n    elseif operator\
    \ == '*' then\n      result = result * operand\n    elseif operator == '/' then\n\
    \      result = result // operand\n    elseif operator == '**' then\n      result\
    \ = result ^ operand\n    end\n  end\n  return result\nend", "  local result =\
    \ operand[1]\n  for i = 2, #operand do\n    result = operator[operator](result,\
    \ operand[i])\n  end\n  return result\nend", "\tlocal result = nil\n\tlocal ops\
    \ = operator\n\tlocal ops_len = #ops\n\tlocal ops_table = nil\n\tlocal ops_table_len\
    \ = #operand\n\tlocal ops_table_elem = nil\n\tlocal ops_table_elem_len = nil\n\
    \tlocal ops_table_elem_value = nil\n\tlocal ops_table_elem_value_len = nil\n\t\
    local ops_table_elem_value_val = nil\n\tlocal ops_table_elem_value_val_len = nil\n\
    \tlocal ops_table_elem_value_val_val = nil\n\tlocal ops_table_elem_value_val_val_len\
    \ = nil\n\tlocal ops_table_elem_value_val_val_val = nil\n\tlocal ops_table_elem_value_val_val_val_len\
    \ = nil\n\tlocal ops_table_elem_value_val_val_val_val = nil\n\tlocal ops_table_elem_value_val_val_val_val_len\
    \ = nil\n\tlocal ops_table_elem_value_val_val_val_val_val = nil\n\tlocal ops_table_elem_value_val_val_val_val_val_len\
    \ = nil\n\tlocal ops_table_elem_value_val_val_val_val_val_val = nil\n\tlocal ops_table_elem_value_val_val_val_val_val_val_len\
    \ = nil\n\tlocal ops_table_elem_value_val_val_val_val_val_val_val = nil\n\tlocal\
    \ ops_table_elem_value_val_val_val_val_val_val_val_len = nil\n\tlocal ops_table_elem_value_val_val_val_val_val_val_val_val\
    \ = nil\n\tlocal ops_table_elem_value_val_val_val_val_val_val_val_val_len = nil\n\
    \tlocal ops_table_elem_value_val_val_val_val_val_val_val_val_val = nil\n\tlocal\
    \ ops_table_elem_value_val_val_val_val_val_val_val_val_val_len = nil\n\tlocal\
    \ ops_table_elem_value_val_val_val_val_val_val_val_val_val_val = nil\n\tlocal\
    \ ops_table_elem_value_val_val_val_val_val_val_val_val_val_val_len = nil\n\tlocal\
    \ ops_table_elem_value_val_val_val_val_val_val_val_val_val_val_val = nil\n\tlocal\
    \ ops_table_elem_value_val_val_val_val_val_val_val_val_val_val_val_len = nil\n\
    \tlocal ops_table_elem_value_val_val_val_val_val_val_val_val_val_val_val_val_val\
    \ = nil\n\tlocal ops_table_elem_value_val_val_val_val_val_val_val_val_val_val_val_val_val_val_len\
    \ = nil\n\tlocal ops_table_elem_value_val_val_val_val_val_val_val_val_val_val_val_val_val_val_val\
    \ = nil\n\tlocal ops_table_elem_value_val_val_val_val_val_val_val_val_val_val_val_val_val_val_val_len\
    \ = nil\n\tlocal ops_table_", "  local result = nil\n  local length = #operand\n\
    \  for i = 1, length do\n    local operand1 = operand[i]\n    local operand2 =\
    \ operand[i - 1]\n    local operator1 = operator[i]\n    local operator2 = operator[i\
    \ - 1]\n    local result1 = nil\n    local result2 = nil\n    local result3 =\
    \ nil\n    local result4 = nil\n    local result5 = nil\n    local result6 = nil\n\
    \    local result7 = nil\n    local result8 = nil\n    local result9 = nil\n \
    \   local result10 = nil\n    local result11 = nil\n    local result12 = nil\n\
    \    local result13 = nil\n    local result14 = nil\n    local result15 = nil\n\
    \    local result16 = nil\n    local result17 = nil\n    local result18 = nil\n\
    \    local result19 = nil\n    local result20 = nil\n    local result21 = nil\n\
    \    local result22 = nil\n    local result23 = nil\n    local result24 = nil\n\
    \    local result25 = nil\n    local result26 = nil\n    local result27 = nil\n\
    \    local result28 = nil\n    local result29 = nil\n    local result30 = nil\n\
    \    local result31 = nil\n    local result32 = nil\n    local result33 = nil\n\
    \    local result34 = nil\n    local result35 = nil\n    local result36 = nil\n\
    \    local result37 = nil\n    local result38 = nil\n    local result39 = nil\n\
    \    local result40 = nil\n    local result41 = nil\n    local result42 = nil\n\
    \    local result43 = nil\n    local result44 = nil\n    local result45 = nil\n\
    \    local result46 = nil\n    local result47 = nil\n    local result48 = nil\n\
    \    local result49 = nil\n    local result50 = nil\n    local result51 = nil\n\
    \    local result52 = nil\n    local result53 = nil\n    local result54 = nil\n\
    \    local result55 = nil\n    local result56 = nil\n    local result57 = nil\n\
    \    local result58 = nil\n    local result59 = nil\n    local result60 = nil\n\
    \    local result61 = nil\n    local result62 = nil\n    local result63 = nil\n\
    \    local result64 = nil\n    local result65 = nil\n    local result66 = nil\n\
    \    local result67 = nil\n    local result68 = nil\n    ", "  local result =\
    \ operand[1]\n  for i = 2, #operand do\n    result = operator[result] .. operand[i]\n\
    \  end\n  return result\nend", "  local result = nil\n  local i = 0\n  local j\
    \ = 0\n  local k = 0\n  local l = 0\n  local m = 0\n  local n = 0\n  local o =\
    \ 0\n  local p = 0\n  local q = 0\n  local r = 0\n  local s = 0\n  local t = 0\n\
    \  local u = 0\n  local v = 0\n  local w = 0\n  local x = 0\n  local y = 0\n \
    \ local z = 0\n  local A = 0\n  local B = 0\n  local C = 0\n  local D = 0\n  local\
    \ E = 0\n  local F = 0\n  local G = 0\n  local H = 0\n  local I = 0\n  local J\
    \ = 0\n  local K = 0\n  local L = 0\n  local M = 0\n  local N = 0\n  local O =\
    \ 0\n  local P = 0\n  local Q = 0\n  local R = 0\n  local S = 0\n  local T = 0\n\
    \  local U = 0\n  local V = 0\n  local W = 0\n  local X = 0\n  local Y = 0\n \
    \ local Z = 0\n  local AA = 0\n  local AB = 0\n  local AC = 0\n  local AD = 0\n\
    \  local AE = 0\n  local AF = 0\n  local AG = 0\n  local AH = 0\n  local AI =\
    \ 0\n  local AJ = 0\n  local AK = 0\n  local AL = 0\n  local AM = 0\n  local AN\
    \ = 0\n  local AO = 0\n  local AP = 0\n  local AQ = 0\n  local AR = 0\n  local\
    \ AS = 0\n  local AT = 0\n  local AU = 0\n  local AV = 0\n  local AW = 0\n  local\
    \ AX = 0\n  local AY = 0\n  local AZ = 0\n  local AA = 0\n  local AB = 0\n  local\
    \ AC = 0\n  local AD = 0\n  local AE = 0\n  local AF = 0\n  local AG = 0\n  local\
    \ AH = 0\n  local AI = 0\n  local AJ = 0\n  local AK = 0\n  local AL = 0\n  local\
    \ AM = 0\n  local AN = 0\n  local AO = 0\n  local AP = 0\n  local AQ = 0\n  local\
    \ AR = 0\n  local AS = 0\n  local AT = 0\n  local AU = 0\n  local AV = 0\n  local\
    \ AW = 0\n  local AX = 0\n  local AY = 0\n  local AZ = 0\n  local AA = 0\n  local\
    \ AB = 0\n  local AC = 0\n  local AD = 0\n  local AE = 0\n  local ", "  local\
    \ result = operand[1]\n  for i = 2, #operand do\n    result = operator[operator](result,\
    \ operand[i])\n  end\n  return result\nend", "\tlocal result = nil\n\tlocal length\
    \ = #operand\n\tlocal i = 0\n\twhile i < length do\n\t\tlocal op = operator[i]\n\
    \t\tlocal a = operand[i]\n\t\tlocal b = operand[i + 1]\n\t\tlocal c = operand[i\
    \ + 2]\n\t\tlocal d = operand[i + 3]\n\t\tlocal e = operand[i + 4]\n\t\tlocal\
    \ f = operand[i + 5]\n\t\tlocal g = operand[i + 6]\n\t\tlocal h = operand[i +\
    \ 7]\n\t\tlocal i = i + 8\n\t\tif op == '+' then\n\t\t\tresult = a + b\n\t\telseif\
    \ op == '-' then\n\t\t\tresult = a - b\n\t\telseif op == '*' then\n\t\t\tresult\
    \ = a * b\n\t\telseif op == '/' then\n\t\t\tresult = a / b\n\t\telseif op == '//'\
    \ then\n\t\t\tresult = a // b\n\t\telseif op == '**' then\n\t\t\tresult = a **\
    \ b\n\t\tend\n\tend\n\treturn result\nend", "\tlocal result = nil\n\tlocal operator_count\
    \ = #operator\n\tlocal operand_count = #operand\n\t\n\t-- If operand table is\
    \ empty, then return nil.\n\tif operand_count == 0 then\n\t\treturn nil\n\tend\n\
    \t\n\t-- If operator table is empty, then return nil.\n\tif operator_count ==\
    \ 0 then\n\t\treturn nil\n\tend\n\t\n\t-- If operator table has more operators\
    \ than operand table, return nil.\n\tif operator_count > operand_count then\n\t\
    \treturn nil\n\tend\n\t\n\t-- If operand table has more operands than operator\
    \ table, return nil.\n\tif operand_count > operator_count then\n\t\treturn nil\n\
    \tend\n\t\n\t-- If operand table has more operands than operator table, return\
    \ nil.\n\tif operand_count > operator_count then\n\t\treturn nil\n\tend\n\t\n\t\
    -- If operand table has more operands than operator table, return nil.\n\tif operand_count\
    \ > operator_count then\n\t\treturn nil\n\tend\n\t\n\t-- If operand table has\
    \ more operands than operator table, return nil.\n\tif operand_count > operator_count\
    \ then\n\t\treturn nil\n\tend\n\t\n\t-- If operand table has more operands than\
    \ operator table, return nil.\n\tif operand_count > operator_count then\n\t\t\
    return nil\n\tend\n\t\n\t-- If operand table has more operands than operator table,\
    \ return nil.\n\tif operand_count > operator_count then\n\t\treturn nil\n\tend\n\
    \t\n\t-- If operand table has more operands than operator table, return nil.\n\
    \tif operand_count > operator_count then\n\t\treturn nil\n\tend\n\t\n\t-- If operand\
    \ table has more operands than operator table, return nil.\n\tif operand_count\
    \ > operator_count then\n\t\treturn nil\n\tend\n\t\n\t-- If operand table has\
    \ more operands than operator table, return nil.\n\tif operand_count > operator_count\
    \ then\n\t\treturn nil\n\tend\n\t\n\t-- If operand table has more operands than\
    \ operator table, return nil.\n\tif operand_count > operator_count then\n\t\t\
    return nil\n\tend\n\t\n\t-- If operand table has more operands than operator table,\
    \ return nil.\n\tif operand_count > operator_count then\n\t\treturn nil\n\tend\n\
    \t\n\t-- If operand table has more operands than operator table, return nil.\n\
    \tif operand_count > operator_count then\n\t\treturn nil\n\tend\n\t\n\t-- If operand\
    \ table has more operand", "\tlocal result = nil\n\tlocal operator_count = #operator\n\
    \tlocal operand_count = #operand\n\t\n\tif operator_count ~= operand_count then\n\
    \t\tprint('Error: operator and operand table lengths mismatch')\n\t\treturn nil\n\
    \tend\n\t\n\tlocal operator_table = operator\n\tlocal operand_table = operand\n\
    \t\n\tlocal operator_pointer = 1\n\tlocal operand_pointer = 1\n\t\n\twhile operator_pointer\
    \ <= operator_count and operand_pointer <= operand_count do\n\t\tlocal operator\
    \ = operator_table[operator_pointer]\n\t\tlocal operand = operand_table[operand_pointer]\n\
    \t\t\n\t\tif operator == '+' then\n\t\t\tresult = result + operand\n\t\telseif\
    \ operator == '-' then\n\t\t\tresult = result - operand\n\t\telseif operator ==\
    \ '*' then\n\t\t\tresult = result * operand\n\t\telseif operator == '/' then\n\
    \t\t\tresult = result // operand\n\t\telseif operator == '**' then\n\t\t\tresult\
    \ = result ** operand\n\t\telse\n\t\t\tprint('Error: unknown operator in algebra\
    \ expression')\n\t\t\treturn nil\n\t\tend\n\t\t\n\t\toperator_pointer = operator_pointer\
    \ + 1\n\t\toperand_pointer = operand_pointer + 1\n\tend\n\t\n\treturn result\n\
    end", "\tlocal result = nil\n\tlocal length = #operand\n\tlocal i = 1\n\twhile\
    \ i < length do\n\t\tlocal operator1 = operator[i]\n\t\tlocal operand1 = operand[i]\n\
    \t\tlocal operator2 = operator[i - 1]\n\t\tlocal operand2 = operand[i - 1]\n\t\
    \tlocal operator3 = operator[i + 1]\n\t\tlocal operand3 = operand[i + 1]\n\t\t\
    local operator4 = operator[i + 2]\n\t\tlocal operand4 = operand[i + 2]\n\t\tlocal\
    \ operator5 = operator[i + 3]\n\t\tlocal operand5 = operand[i + 3]\n\t\tlocal\
    \ operator6 = operator[i + 4]\n\t\tlocal operand6 = operand[i + 4]\n\t\tlocal\
    \ operator7 = operator[i + 5]\n\t\tlocal operand7 = operand[i + 5]\n\t\tlocal\
    \ operator8 = operator[i + 6]\n\t\tlocal operand8 = operand[i + 6]\n\t\tlocal\
    \ operator9 = operator[i + 7]\n\t\tlocal operand9 = operand[i + 7]\n\t\tlocal\
    \ operator10 = operator[i + 8]\n\t\tlocal operand10 = operand[i + 8]\n\t\tlocal\
    \ operator11 = operator[i + 9]\n\t\tlocal operand11 = operand[i + 9]\n\t\tlocal\
    \ operator12 = operator[i + 10]\n\t\tlocal operand12 = operand[i + 10]\n\t\tlocal\
    \ operator13 = operator[i + 11]\n\t\tlocal operand13 = operand[i + 11]\n\t\tlocal\
    \ operator14 = operator[i + 12]\n\t\tlocal operand14 = operand[i + 12]\n\t\tlocal\
    \ operator15 = operator[i + 13]\n\t\tlocal operand15 = operand[i + 13]\n\t\tlocal\
    \ operator16 = operator[i + 14]\n\t\tlocal operand16 = operand[i + 14]\n\t\tlocal\
    \ operator17 = operator[i + 15]\n\t\tlocal operand17 = operand[i + 15]\n\t\tlocal\
    \ operator18 = operator[i + 16]\n\t\tlocal operand18 = operand[i + 16]\n\t\tlocal\
    \ operator19 = operator[i + 17]\n\t\tlocal operand19 = operand[i + 17]\n\t\tlocal\
    \ operator20 = operator[i + 18]\n\t\tlocal operand20 = operand[i + 18]\n\t\tlocal\
    \ operator21 = operator[i + 19]\n\t\tlocal operand21 = operand[i + 19]\n\t\tlocal\
    \ operator22 = operator[i + 20]\n\t\tlocal operand22 = operand[i + 20]\n\t\tlocal\
    \ operator23 = operator[i + 21]\n\t\tlocal operand23 = operand[i + 21]\n\t\tlocal\
    \ operator24 = operator[i + 22]\n\t\tlocal operand24 = operand[i + 22]\n\t\tlocal\
    \ operator25 = operator[i + 23]\n\t\tlocal operand25 = operand[i + 23]\n\t\tlocal\
    \ operator26 = operator[i + 24]\n\t\tlocal operand26 = operand[i + 24]\n\t\tlocal\
    \ operator27 = operator[i + 25]\n\t\tlocal operand27 = operand[i + 25]\n\t\tlocal ",
  "\tlocal result = nil\n\tlocal length = #operand\n\tlocal i = 0\n\t\n\twhile i <\
    \ length do\n\t\tlocal operator = operator[i]\n\t\tlocal operand1 = operand[i]\n\
    \t\tlocal operand2 = operand[i + 1]\n\t\t\n\t\tif operator == '+' then\n\t\t\t\
    result = operand1 + operand2\n\t\telseif operator == '-' then\n\t\t\tresult =\
    \ operand1 - operand2\n\t\telseif operator == '*' then\n\t\t\tresult = operand1\
    \ * operand2\n\t\telseif operator == '/' then\n\t\t\tresult = operand1 // operand2\n\
    \t\telseif operator == '**' then\n\t\t\tresult = operand1 ** operand2\n\t\tend\n\
    \t\t\n\t\ti = i + 2\n\tend\n\t\n\treturn result\nend", "\tlocal result = operand[1]\n\
    \tfor i = 2, #operand do\n\t\tresult = operator[operator](result, operand[i])\n\
    \tend\n\treturn result\nend", "\tlocal result = nil\n\tlocal ops = #operator\n\
    \tlocal ops_size = #operand\n\tlocal ops_index = 1\n\tlocal ops_index_size = ops_size\n\
    \tlocal ops_index_index = 1\n\tlocal ops_index_index_size = ops_size\n\tlocal\
    \ ops_index_index_index = 1\n\tlocal ops_index_index_index_size = ops_size\n\t\
    local ops_index_index_index_size = ops_size\n\tlocal ops_index_index_index_size\
    \ = ops_size\n\tlocal ops_index_index_index_size = ops_size\n\tlocal ops_index_index_index_size\
    \ = ops_size\n\tlocal ops_index_index_index_size = ops_size\n\tlocal ops_index_index_index_size\
    \ = ops_size\n\tlocal ops_index_index_index_size = ops_size\n\tlocal ops_index_index_index_size\
    \ = ops_size\n\tlocal ops_index_index_index_size = ops_size\n\tlocal ops_index_index_index_size\
    \ = ops_size\n\tlocal ops_index_index_index_size = ops_size\n\tlocal ops_index_index_index_size\
    \ = ops_size\n\tlocal ops_index_index_index_size = ops_size\n\tlocal ops_index_index_index_size\
    \ = ops_size\n\tlocal ops_index_index_index_size = ops_size\n\tlocal ops_index_index_index_size\
    \ = ops_size\n\tlocal ops_index_index_index_size = ops_size\n\tlocal ops_index_index_index_size\
    \ = ops_size\n\tlocal ops_index_index_index_size = ops_size\n\tlocal ops_index_index_index_size\
    \ = ops_size\n\tlocal ops_index_index_index_size = ops_size\n\tlocal ops_index_index_index_size\
    \ = ops_size\n\tlocal ops_index_index_index_size = ops_size\n\tlocal ops_index_index_index_size\
    \ = ops_size\n\tlocal ops_index_index_index_size = ops_size\n\tlocal ops_index_index_index_size\
    \ = ops_size\n\tlocal ops_index_index_index_size = ops_size\n\tlocal ops_index_index_index_size\
    \ = ops_size\n\tlocal ops_index_index_index_size = ops_size\n\tlocal ops_index_index_index_size\
    \ = ops_size\n\tlocal ops_index_index_index_size = ops_size\n\tlocal ops_index_index_index_size\
    \ = ops_size\n\tlocal ops_index_index_index_size = ops_size\n\tlocal ops_index_index_index_size\
    \ = ops_size\n\tlocal ops_index_index_index_size = ops_size\n\tlocal ops_index_index_index_size\
    \ = ops_size\n\tlocal op", "    local result = nil\n    local length = #operand\n\
    \    for i = 1, length do\n        local operator = operator[i]\n        local\
    \ operand1 = operand[i]\n        local operand2 = operand[i + 1]\n        if operator\
    \ == '+' then\n            result = result + operand1\n        elseif operator\
    \ == '-' then\n            result = result - operand1\n        elseif operator\
    \ == '*' then\n            result = result * operand1\n        elseif operator\
    \ == '/' then\n            result = result / operand1\n        elseif operator\
    \ == '//' then\n            result = result // operand1\n        elseif operator\
    \ == '**' then\n            result = result ** operand1\n        end\n    end\n\
    \    return result\nend", "    local result = 0\n    for i = 1, #operand do\n\
    \        local op = operator[i]\n        local operand1 = operand[i]\n       \
    \ local operand2 = operand[i + 1]\n        if op == '+' then\n            result\
    \ = result + operand1\n        elseif op == '-' then\n            result = result\
    \ - operand1\n        elseif op == '*' then\n            result = result * operand1\n\
    \        elseif op == '/' then\n            result = result / operand1\n     \
    \   elseif op == '//' then\n            result = result // operand1\n        elseif\
    \ op == '**' then\n            result = result ** operand1\n        else\n   \
    \         assert(false, \"Invalid operator\")\n        end\n    end\n    return\
    \ result\nend", "  local result = nil\n  local length = #operand\n  for i = 1,\
    \ length do\n    local operand1 = operand[i]\n    local operand2 = operand[i -\
    \ 1]\n    local operator1 = operator[i]\n    local operator2 = operator[i - 1]\n\
    \    local operation = nil\n    if operator1 ~= '-' and operator2 ~= '-' then\n\
    \      operation = operator1 .. operator2\n    elseif operator1 == '-' then\n\
    \      operation = operator2\n    elseif operator2 == '-' then\n      operation\
    \ = operator1\n    else\n      operation = operator1 .. operator2\n    end\n \
    \   if operation ~= nil then\n      result = result + operand1 * operand2 * operation\n\
    \    end\n  end\n  return result\nend", "    local result = 0\n    for i = 1,\
    \ #operand do\n        result = result + operand[i] * operator[i]\n    end\n \
    \   return result\nend", "  local result = nil\n  local length = #operand\n  for\
    \ i = 1, length do\n    local operator = operator[i]\n    local operand1 = operand[i]\n\
    \    local operand2 = operand[i - 1]\n    local operator1 = operator[1]\n    local\
    \ operator2 = operator[2]\n    local operator3 = operator[3]\n    local operator4\
    \ = operator[4]\n    local operator5 = operator[5]\n    local operator6 = operator[6]\n\
    \    local operator7 = operator[7]\n    local operator8 = operator[8]\n    local\
    \ operator9 = operator[9]\n    local operator10 = operator[10]\n    local operator11\
    \ = operator[11]\n    local operator12 = operator[12]\n    local operator13 =\
    \ operator[13]\n    local operator14 = operator[14]\n    local operator15 = operator[15]\n\
    \    local operator16 = operator[16]\n    local operator17 = operator[17]\n  \
    \  local operator18 = operator[18]\n    local operator19 = operator[19]\n    local\
    \ operator20 = operator[20]\n    local operator21 = operator[21]\n    local operator22\
    \ = operator[22]\n    local operator23 = operator[23]\n    local operator24 =\
    \ operator[24]\n    local operator25 = operator[25]\n    local operator26 = operator[26]\n\
    \    local operator27 = operator[27]\n    local operator28 = operator[28]\n  \
    \  local operator29 = operator[29]\n    local operator30 = operator[30]\n    local\
    \ operator31 = operator[31]\n    local operator32 = operator[32]\n    local operator33\
    \ = operator[33]\n    local operator34 = operator[34]\n    local operator35 =\
    \ operator[35]\n    local operator36 = operator[36]\n    local operator37 = operator[37]\n\
    \    local operator38 = operator[38]\n    local operator39 = operator[39]\n  \
    \  local operator40 = operator[40]\n    local operator41 = operator[41]\n    local\
    \ operator42 = operator[42]\n    local operator43 = operator[43]\n    local operator44\
    \ = operator[44]\n    local operator45 = operator[45]\n    local operator46 =\
    \ operator[46]\n    local operator47 = operator[47]\n    local operator48 = operator[48]\n\
    \    local operator49 = operator[49]\n    local operator50 = operator[50]\n  \
    \  local operator51 = operator[51]", "  local result = nil\n  local length = #operand\n\
    \  local i = 0\n  local j = 0\n  local k = 0\n  local l = 0\n  local m = 0\n \
    \ local n = 0\n  local o = 0\n  local p = 0\n  local q = 0\n  local r = 0\n  local\
    \ s = 0\n  local t = 0\n  local u = 0\n  local v = 0\n  local w = 0\n  local x\
    \ = 0\n  local y = 0\n  local z = 0\n  local a = 0\n  local b = 0\n  local c =\
    \ 0\n  local d = 0\n  local e = 0\n  local f = 0\n  local g = 0\n  local h = 0\n\
    \  local i = 0\n  local j = 0\n  local k = 0\n  local l = 0\n  local m = 0\n \
    \ local n = 0\n  local o = 0\n  local p = 0\n  local q = 0\n  local r = 0\n  local\
    \ s = 0\n  local t = 0\n  local u = 0\n  local v = 0\n  local w = 0\n  local x\
    \ = 0\n  local y = 0\n  local z = 0\n  local a = 0\n  local b = 0\n  local c =\
    \ 0\n  local d = 0\n  local e = 0\n  local f = 0\n  local g = 0\n  local h = 0\n\
    \  local i = 0\n  local j = 0\n  local k = 0\n  local l = 0\n  local m = 0\n \
    \ local n = 0\n  local o = 0\n  local p = 0\n  local q = 0\n  local r = 0\n  local\
    \ s = 0\n  local t = 0\n  local u = 0\n  local v = 0\n  local w = 0\n  local x\
    \ = 0\n  local y = 0\n  local z = 0\n  local a = 0\n  local b = 0\n  local c =\
    \ 0\n  local d = 0\n  local e = 0\n  local f = 0\n  local g = 0\n  local h = 0\n\
    \  local i = 0\n  local j = 0\n  local k = 0\n  local l = 0\n  local m = 0\n \
    \ local n = 0\n  local o = 0\n  local p = 0\n  local q = 0\n  local r = 0\n  local\
    \ s = 0\n  local t = 0\n  local u = 0\n  local v = 0\n  local w = 0\n  local x\
    \ = 0\n  local y = 0\n  local z = 0\n  local a = 0\n  local b = 0\n  local c =\
    \ 0\n  local d = 0\n  local e = 0\n  local f = 0", "  local result = operand[1]\n\
    \  for i = 2, #operand do\n    result = operator[operator](result, operand[i])\n\
    \  end\n  return result\nend", "  local result = 0\n  local i = 0\n  local j =\
    \ 0\n  local k = 0\n  local l = 0\n  local m = 0\n  local n = 0\n  local o = 0\n\
    \  local p = 0\n  local q = 0\n  local r = 0\n  local s = 0\n  local t = 0\n \
    \ local u = 0\n  local v = 0\n  local w = 0\n  local x = 0\n  local y = 0\n  local\
    \ z = 0\n  local a = 0\n  local b = 0\n  local c = 0\n  local d = 0\n  local e\
    \ = 0\n  local f = 0\n  local g = 0\n  local h = 0\n  local i = 0\n  local j =\
    \ 0\n  local k = 0\n  local l = 0\n  local m = 0\n  local n = 0\n  local o = 0\n\
    \  local p = 0\n  local q = 0\n  local r = 0\n  local s = 0\n  local t = 0\n \
    \ local u = 0\n  local v = 0\n  local w = 0\n  local x = 0\n  local y = 0\n  local\
    \ z = 0\n  local a = 0\n  local b = 0\n  local c = 0\n  local d = 0\n  local e\
    \ = 0\n  local f = 0\n  local g = 0\n  local h = 0\n  local i = 0\n  local j =\
    \ 0\n  local k = 0\n  local l = 0\n  local m = 0\n  local n = 0\n  local o = 0\n\
    \  local p = 0\n  local q = 0\n  local r = 0\n  local s = 0\n  local t = 0\n \
    \ local u = 0\n  local v = 0\n  local w = 0\n  local x = 0\n  local y = 0\n  local\
    \ z = 0\n  local a = 0\n  local b = 0\n  local c = 0\n  local d = 0\n  local e\
    \ = 0\n  local f = 0\n  local g = 0\n  local h = 0\n  local i = 0\n  local j =\
    \ 0\n  local k = 0\n  local l = 0\n  local m = 0\n  local n = 0\n  local o = 0\n\
    \  local p = 0\n  local q = 0\n  local r = 0\n  local s = 0\n  local t = 0\n \
    \ local u = 0\n  local v = 0\n  local w = 0\n  local x = 0\n  local y = 0\n  local\
    \ z = 0\n  local a = 0\n  local b = 0\n  local c = 0\n  local d = 0\n  local e\
    \ = 0\n  local f = 0\n  local g = 0\n", "  local result = nil\n  local length\
    \ = #operand\n  local i = 1\n  while i <= length do\n    local op = operator[i]\n\
    \    local operand1 = operand[i]\n    local operand2 = operand[i + 1]\n    local\
    \ operation = op\n    if op == '+' then\n      result = result + operand1\n  \
    \  elseif op == '-' then\n      result = result - operand1\n    elseif op == '*'\
    \ then\n      result = result * operand1\n    elseif op == '/' then\n      result\
    \ = result / operand1\n    elseif op == '//' then\n      result = result // operand1\n\
    \    elseif op == '**' then\n      result = result ** operand1\n    end\n    i\
    \ = i + 2\n  end\n  return result\nend", "    local result = 0\n    for i = 1,\
    \ #operand do\n        result = result + operand[i] * operator[i]\n    end\n \
    \   return result\nend", "    local result = nil\n    local ops = #operator\n\
    \    local ops_len = #operand\n    local ops_index = 1\n    local ops_value =\
    \ operator[1]\n    local ops_value = operator[ops_index]\n    local ops_value\
    \ = operator[ops_index]\n    local ops_value = operator[ops_index]\n    local\
    \ ops_value = operator[ops_index]\n    local ops_value = operator[ops_index]\n\
    \    local ops_value = operator[ops_index]\n    local ops_value = operator[ops_index]\n\
    \    local ops_value = operator[ops_index]\n    local ops_value = operator[ops_index]\n\
    \    local ops_value = operator[ops_index]\n    local ops_value = operator[ops_index]\n\
    \    local ops_value = operator[ops_index]\n    local ops_value = operator[ops_index]\n\
    \    local ops_value = operator[ops_index]\n    local ops_value = operator[ops_index]\n\
    \    local ops_value = operator[ops_index]\n    local ops_value = operator[ops_index]\n\
    \    local ops_value = operator[ops_index]\n    local ops_value = operator[ops_index]\n\
    \    local ops_value = operator[ops_index]\n    local ops_value = operator[ops_index]\n\
    \    local ops_value = operator[ops_index]\n    local ops_value = operator[ops_index]\n\
    \    local ops_value = operator[ops_index]\n    local ops_value = operator[ops_index]\n\
    \    local ops_value = operator[ops_index]\n    local ops_value = operator[ops_index]\n\
    \    local ops_value = operator[ops_index]\n    local ops_value = operator[ops_index]\n\
    \    local ops_value = operator[ops_index]\n    local ops_value = operator[ops_index]\n\
    \    local ops_value = operator[ops_index]\n    local ops_value = operator[ops_index]\n\
    \    local ops_value = operator[ops_index]\n    local ops_value = operator[ops_index]\n\
    \    local ops_value = operator[ops_index]\n    local ops_value = operator[ops_index]\n\
    \    local ops_value = operator[ops_index]\n    local ops_value = operator[ops_index]\n\
    \    local ops_value = operator[ops_index]\n    local ops_value = operator[ops_index]\n\
    \    local ops_value = operator[ops_index]\n    local ops_value = operator[ops_index]\n\
    \    local ops_", "\tlocal result = nil\n\tlocal index = 1\n\twhile index <= #operand\
    \ do\n\t\tlocal operator1 = operator[index]\n\t\tlocal operand1 = operand[index]\n\
    \t\tlocal operator2 = operator[index + 1]\n\t\tlocal operand2 = operand[index\
    \ + 1]\n\t\tif operator1 ~= '-' and operator1 ~= '*' and operator1 ~= '//' and\
    \ operator1 ~= '**' then\n\t\t\tresult = operand1 + operand2\n\t\telseif operator1\
    \ == '-' then\n\t\t\tresult = operand1 - operand2\n\t\telseif operator1 == '*'\
    \ then\n\t\t\tresult = operand1 * operand2\n\t\telseif operator1 == '//' then\n\
    \t\t\tresult = operand1 // operand2\n\t\telseif operator1 == '**' then\n\t\t\t\
    result = operand1 ** operand2\n\t\tend\n\t\tindex = index + 1\n\tend\n\treturn\
    \ result\nend", "    local result = nil\n    local length = #operand\n    for\
    \ i = 1, length do\n        local left = operand[i-1]\n        local right = operand[i]\n\
    \        local op = operator[i]\n        if op == '+' then\n            result\
    \ = result + left\n        elseif op == '-' then\n            result = result\
    \ - left\n        elseif op == '*' then\n            result = result * left\n\
    \        elseif op == '/' then\n            result = result / left\n        elseif\
    \ op == '//' then\n            result = result // left\n        elseif op == '**'\
    \ then\n            result = result ** left\n        end\n    end\n    return\
    \ result\nend", "  local result = operand[1]\n  for i = 2, #operand do\n    result\
    \ = operator[operator](result, operand[i])\n  end\n  return result\nend", "  \
    \  local result = nil\n    local operator_count = #operator\n    local operand_count\
    \ = #operand\n    local operator_table = operator\n    local operand_table = operand\n\
    \    local operator_operator_table = nil\n    local operand_operator_table = nil\n\
    \    local operator_operand_table = nil\n    local operand_operand_table = nil\n\
    \    local operator_operator_operand_table = nil\n    local operand_operator_operand_table\
    \ = nil\n    local operator_operator_operator_table = nil\n    local operand_operator_operator_table\
    \ = nil\n    local operator_operand_operand_table = nil\n    local operand_operand_table\
    \ = nil\n    local operator_operator_operator_operand_table = nil\n    local operand_operator_operator_operand_table\
    \ = nil\n    local operator_operator_operator_operator_table = nil\n    local\
    \ operand_operator_operator_operator_table = nil\n    local operator_operand_operand_table\
    \ = nil\n    local operand_operand_table = nil\n    local operator_operator_operator_operator_operand_table\
    \ = nil\n    local operand_operator_operator_operator_operand_table = nil\n  \
    \  local operator_operator_operator_operator_operator_table = nil\n    local operand_operator_operator_operator_operator_table\
    \ = nil\n    local operator_operand_operand_table = nil\n    local operand_operand_table\
    \ = nil\n    local operator_operator_operator_operator_operator_operand_table\
    \ = nil\n    local operand_operator_operator_operator_operator_operand_table =\
    \ nil\n    local operator_operator_operator_operator_operator_operator_table =\
    \ nil\n    local operand_operator_operator_operator_operator_operator_table =\
    \ nil\n    local operator_operand_operand_table = nil\n    local operand_operand_table\
    \ = nil\n    local operator_operator_operator_operator_operator_operator_operand_table\
    \ = nil\n    local operand_operator_operator_operator_operator_operator_operand_table\
    \ = nil\n    local operator_operator_operator_operator_operator_operator_table\
    \ = nil\n    local operand_operator_operator_operator_operator_operator_table\
    \ = nil\n    local operator_operand_operand_table = nil\n    local operand_operand_table\
    \ = nil\n    local operator_operator_operator_operator_operator_operator_operator_operand_table\
    \ = nil\n    local operand_operator_operator_operator_operator_operator_operator_operand_table\
    \ = nil\n    local operator_operator_operator_operator_operator_operator_operator_table\
    \ = nil\n    local operand_operator_operator_operator_operator_operator_operator_table\
    \ = nil\n    local operator_operand_operand_table = nil\n    local operand_operand_table\
    \ = nil\n    local operator_operator_operator_operator_operator_operator_operator_operand_table\
    \ = nil\n    local operand_operator_operator_operator_operator_operator_operator_operand_table\
    \ = nil\n    local operator_operator_operator_operator_operator_operator_operator_table\
    \ = nil\n    local operand_operator_operator_operator_operator_operator_operator_table\
    \ = nil\n    local operator_operand_oper", "\t-- Base case: operand is empty\n\
    \tif #operand == 0 then\n\t\treturn operand[1]\n\tend\n\t-- Base case: operator\
    \ is empty\n\tif #operator == 0 then\n\t\treturn do_algebra(operator[1], operand[1])\n\
    \tend\n\t-- Base case: operator is first element in operand table\n\tif #operand\
    \ == 1 then\n\t\treturn do_algebra(operator[1], operand[1]) + do_algebra(operator[2],\
    \ operand[1])\n\tend\n\t-- Base case: operator is last element in operand table\n\
    \tif #operand == 2 then\n\t\treturn do_algebra(operator[1], operand[1]) + do_algebra(operator[2],\
    \ operand[2]) + do_algebra(operator[3], operand[1])\n\tend\n\t-- Recursive case:\
    \ operator is middle element in operand table\n\treturn do_algebra(operator[1],\
    \ operand[1]) + do_algebra(operator[2], operand[2]) + do_algebra(operator[3],\
    \ operand[3]) + do_algebra(operator[4], operand[1])\nend", "    local result =\
    \ nil\n    local operator_count = #operator\n    local operand_count = #operand\n\
    \    local operator_table = operator\n    local operand_table = operand\n    local\
    \ operator_stack = {}\n    local operand_stack = {}\n    local operator_stack_size\
    \ = #operator_stack\n    local operand_stack_size = #operand_stack\n    local\
    \ operator_stack_index = 0\n    local operand_stack_index = 0\n    local operator_stack_value\
    \ = nil\n    local operand_stack_value = nil\n    local operator_stack_pointer\
    \ = 0\n    local operand_stack_pointer = 0\n    local operator_stack_pointer_limit\
    \ = #operator_stack\n    local operand_stack_pointer_limit = #operand_stack\n\
    \    local operator_stack_pointer_limit = #operator_stack\n    local operand_stack_pointer_limit\
    \ = #operand_stack\n    local operator_stack_pointer_limit = #operator_stack\n\
    \    local operand_stack_pointer_limit = #operand_stack\n    local operator_stack_pointer_limit\
    \ = #operator_stack\n    local operand_stack_pointer_limit = #operand_stack\n\
    \    local operator_stack_pointer_limit = #operator_stack\n    local operand_stack_pointer_limit\
    \ = #operand_stack\n    local operator_stack_pointer_limit = #operator_stack\n\
    \    local operand_stack_pointer_limit = #operand_stack\n    local operator_stack_pointer_limit\
    \ = #operator_stack\n    local operand_stack_pointer_limit = #operand_stack\n\
    \    local operator_stack_pointer_limit = #operator_stack\n    local operand_stack_pointer_limit\
    \ = #operand_stack\n    local operator_stack_pointer_limit = #operator_stack\n\
    \    local operand_stack_pointer_limit = #operand_stack\n    local operator_stack_pointer_limit\
    \ = #operator_stack\n    local operand_stack_pointer_limit = #operand_stack\n\
    \    local operator_stack_pointer_limit = #operator_stack\n    local operand_stack_pointer_limit\
    \ = #operand_stack\n    local operator_stack_pointer_limit = #operator_stack\n\
    \    local operand_stack_pointer_limit = #operand_stack\n    local operator_stack_pointer_limit\
    \ = #operator_stack\n    local operand_stack_pointer_limit = #operand_stack\n\
    \    local operator_stack_pointer_limit = #operator_stack\n    local operand_stack_pointer_limit\
    \ = #operand_stack\n    local operator_stack_pointer_limit = #operator_stack\n\
    \    local operand_stack_pointer_limit = #operand_stack\n    local operator_stack_pointer_limit\
    \ = #operator_stack\n    local operand_stack_pointer_limit = #operand_stack\n\
    \    local operator_stack_pointer_limit = #operator_stack\n    local operand_stack_",
  "\tlocal result = nil\n\tlocal ops = #operator\n\tlocal ops_count = #operand\n\t\
    local ops_index = 0\n\tlocal ops_value\n\tlocal ops_value_index\n\tlocal ops_value_value\n\
    \tlocal ops_value_value_index\n\tlocal ops_value_value_value\n\tlocal ops_value_value_value_index\n\
    \tlocal ops_value_value_value_value\n\tlocal ops_value_value_value_value_index\n\
    \tlocal ops_value_value_value_value_value\n\tlocal ops_value_value_value_value_index\n\
    \tlocal ops_value_value_value_value_value\n\tlocal ops_value_value_value_value_value_index\n\
    \tlocal ops_value_value_value_value_value_value\n\tlocal ops_value_value_value_value_value_index\n\
    \tlocal ops_value_value_value_value_value_value\n\tlocal ops_value_value_value_value_value_value_index\n\
    \tlocal ops_value_value_value_value_value_value_value\n\tlocal ops_value_value_value_value_value_value_index\n\
    \tlocal ops_value_value_value_value_value_value_value\n\tlocal ops_value_value_value_value_value_value_index\n\
    \tlocal ops_value_value_value_value_value_value_value\n\tlocal ops_value_value_value_value_value_value_index\n\
    \tlocal ops_value_value_value_value_value_value_value\n\tlocal ops_value_value_value_value_value_value_index\n\
    \tlocal ops_value_value_value_value_value_value_value\n\tlocal ops_value_value_value_value_value_value_value\n\
    \tlocal ops_value_value_value_value_value_value_value\n\tlocal ops_value_value_value_value_value_value_value\n\
    \tlocal ops_value_value_value_value_value_value_value\n\tlocal ops_value_value_value_value_value_value_value\n\
    \tlocal ops_value_value_value_value_value_value_value\n\tlocal ops_value_value_value_value_value_value_value\n\
    \tlocal ops_value_value_value_value_value_value_value\n\tlocal ops_value_value_value_value_value_value_value\n\
    \tlocal ops_value_value_value_value_value_value_value\n\tlocal ops_value_value_value_value_value_value_value_value\n\
    \tlocal ops_value_value_value_value_value_value_value_value\n\tlocal ops_value_value_value_value_value_value_value_value\n\
    \tlocal ops_value_value_value_value_value_value_value_value_value\n\tlocal ops_value_value_value_value_value_value_value_value_value\n\
    \tlocal ops_value_value_value_value_value_value_value_value_value\n\tlocal ops_value_value_value_value_value_value_value_value_value\n\
    \tlocal ops_value_value_value_value_value_value_value_value", "  local result\
    \ = operand[1]\n  for i = 2, #operand do\n    result = operator[operand[i-1]](result,\
    \ operand[i])\n  end\n  return result\nend", "  local result = nil\n  local ops\
    \ = #operator\n  local ops_size = #operand\n  local ops_index = 1\n  local ops_size\
    \ = #operator\n  local ops_index = 1\n  local ops_size = #operator\n  local ops_index\
    \ = 1\n  local ops_size = #operator\n  local ops_index = 1\n  local ops_size =\
    \ #operator\n  local ops_index = 1\n  local ops_size = #operator\n  local ops_index\
    \ = 1\n  local ops_size = #operator\n  local ops_index = 1\n  local ops_size =\
    \ #operator\n  local ops_index = 1\n  local ops_size = #operator\n  local ops_index\
    \ = 1\n  local ops_size = #operator\n  local ops_index = 1\n  local ops_size =\
    \ #operator\n  local ops_index = 1\n  local ops_size = #operator\n  local ops_index\
    \ = 1\n  local ops_size = #operator\n  local ops_index = 1\n  local ops_size =\
    \ #operator\n  local ops_index = 1\n  local ops_size = #operator\n  local ops_index\
    \ = 1\n  local ops_size = #operator\n  local ops_index = 1\n  local ops_size =\
    \ #operator\n  local ops_index = 1\n  local ops_size = #operator\n  local ops_index\
    \ = 1\n  local ops_size = #operator\n  local ops_index = 1\n  local ops_size =\
    \ #operator\n  local ops_index = 1\n  local ops_size = #operator\n  local ops_index\
    \ = 1\n  local ops_size = #operator\n  local ops_index = 1\n  local ops_size =\
    \ #operator\n  local ops_index = 1\n  local ops_size = #operator\n  local ops_index\
    \ = 1\n  local ops_size = #operator\n  local ops_index = 1\n  local ops_size =\
    \ #operator\n  local ops_index = 1\n  local ops_size = #operator\n  local ops_index\
    \ = 1\n  local ops_size = #operator\n  local ops_index = 1\n  local ops_size =\
    \ #operator\n  local ops_index = 1\n  local ops_size = #operator\n  local ops_index\
    \ = 1\n  local ops_size = #operator\n  local ops_index = 1\n  local ops_size =\
    \ #operator\n  local ops_index = 1\n  local ops_size = #operator\n  local ops_index\
    \ = 1\n  local ops_size = ", "\tlocal result = nil\n\tlocal operator_count = #operator\n\
    \tlocal operand_count = #operand\n\tlocal operator_table = operator\n\tlocal operand_table\
    \ = operand\n\tlocal operator_pointer = 1\n\tlocal operand_pointer = 1\n\tlocal\
    \ operator_pointer_limit = operator_count - 1\n\tlocal operand_pointer_limit =\
    \ operand_count - 1\n\tlocal operator_pointer_temp = operator_pointer\n\tlocal\
    \ operand_pointer_temp = operand_pointer\n\tlocal operator_pointer_limit_temp\
    \ = operator_pointer_limit\n\tlocal operand_pointer_limit_temp = operand_pointer_limit\n\
    \tlocal operator_pointer_limit_temp2 = operator_pointer_limit\n\tlocal operand_pointer_limit_temp2\
    \ = operand_pointer_limit\n\tlocal operator_pointer_limit_temp3 = operator_pointer_limit\n\
    \tlocal operand_pointer_limit_temp3 = operand_pointer_limit\n\tlocal operator_pointer_limit_temp4\
    \ = operator_pointer_limit\n\tlocal operand_pointer_limit_temp4 = operand_pointer_limit\n\
    \tlocal operator_pointer_limit_temp5 = operator_pointer_limit\n\tlocal operand_pointer_limit_temp5\
    \ = operand_pointer_limit\n\tlocal operator_pointer_limit_temp6 = operator_pointer_limit\n\
    \tlocal operand_pointer_limit_temp6 = operand_pointer_limit\n\tlocal operator_pointer_limit_temp7\
    \ = operator_pointer_limit\n\tlocal operand_pointer_limit_temp7 = operand_pointer_limit\n\
    \tlocal operator_pointer_limit_temp8 = operator_pointer_limit\n\tlocal operand_pointer_limit_temp8\
    \ = operand_pointer_limit\n\tlocal operator_pointer_limit_temp9 = operator_pointer_limit\n\
    \tlocal operand_pointer_limit_temp9 = operand_pointer_limit\n\tlocal operator_pointer_limit_temp10\
    \ = operator_pointer_limit\n\tlocal operand_pointer_limit_temp10 = operand_pointer_limit\n\
    \tlocal operator_pointer_limit_temp11 = operator_pointer_limit\n\tlocal operand_pointer_limit_temp11\
    \ = operand_pointer_limit\n\tlocal operator_pointer_limit_temp12 = operator_pointer_limit\n\
    \tlocal operand_pointer_limit_temp12 = operand_pointer_limit\n\tlocal operator_pointer_limit_temp13\
    \ = operator_pointer_limit\n\tlocal operand_pointer_limit_temp13 = operand_pointer_limit\n\
    \tlocal operator_pointer_limit_temp14 = operator_pointer_limit\n\tlocal operand_pointer_limit_temp14\
    \ = operand_pointer_limit\n\tlocal operator_pointer_limit_temp15 = operator_pointer_limit\n\
    \tlocal operand_pointer_limit_temp15 = operand_pointer_limit", "  local result\
    \ = nil\n  local length = #operand\n  for i = 1, length do\n    local op = operator[i]\n\
    \    local operand1 = operand[i]\n    local operand2 = operand[i + 1]\n    if\
    \ op == '+' then\n      result = operand1 + operand2\n    elseif op == '-' then\n\
    \      result = operand1 - operand2\n    elseif op == '*' then\n      result =\
    \ operand1 * operand2\n    elseif op == '/' then\n      result = operand1 // operand2\n\
    \    elseif op == '**' then\n      result = operand1 ** operand2\n    end\n  end\n\
    \  return result\nend", "\tlocal result = nil\n\tlocal operators = #operator\n\
    \tlocal operands = #operand\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal\
    \ l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q\
    \ = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v =\
    \ 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\
    \tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\t\
    local g = 0\n\tlocal h = 0\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal\
    \ l = 1\n\tlocal m = 1\n\tlocal n = 2\n\tlocal o = 2\n\tlocal p = 2\n\tlocal q\
    \ = 2\n\tlocal r = 2\n\tlocal s = 2\n\tlocal t = 2\n\tlocal u = 2\n\tlocal v =\
    \ 3\n\tlocal w = 4\n\tlocal x = 5\n\tlocal y = 6\n\tlocal z = 7\n\tlocal a = 8\n\
    \tlocal b = 9\n\tlocal c = 10\n\tlocal d = 11\n\tlocal e = 12\n\tlocal f = 13\n\
    \tlocal g = 14\n\tlocal h = 15\n\tlocal i = 2\n\tlocal j = 3\n\tlocal k = 3\n\t\
    local l = 4\n\tlocal m = 4\n\tlocal n = 5\n\tlocal o = 6\n\tlocal p = 6\n\tlocal\
    \ q = 7\n\tlocal r = 7\n\tlocal s = 7\n\tlocal t = 7\n\tlocal u = 7\n\tlocal v\
    \ = 8\n\tlocal w = 8\n\tlocal x = 9\n\tlocal y = 10\n\tlocal z = 11\n\tlocal a\
    \ = 12\n\tlocal b = 13\n\tlocal c = 14\n\tlocal d = 15\n\tlocal e = 16\n\tlocal\
    \ f = 17\n\tlocal g = 18\n\tlocal h = 19\n\tlocal i = 2\n\tlocal j = 3\n\tlocal\
    \ k = 3\n\tlocal l = 4\n\tlocal m = 4\n\tlocal n = 5\n\tlocal o = 6\n\tlocal p\
    \ = 6\n\tlocal q = 7\n\tlocal r = 7\n\tlocal s = 7\n\tlocal t = 7\n\tlocal u =\
    \ 7\n\tlocal v = 8\n\tlocal w = 8\n\tlocal x = 9\n\tlocal y = 10\n\tlocal z =\
    \ 11\n\tlocal a = 12\n\tlocal b = 13\n\tlocal c = 14\n", "  local result = nil\n\
    \  local operator_count = #operator\n  local operand_count = #operand\n  local\
    \ operator_table = nil\n  local operand_table = nil\n  local operator_symbol =\
    \ nil\n  local operand_symbol = nil\n  local operator_symbol_index = nil\n  local\
    \ operand_symbol_index = nil\n  local operator_symbol_value = nil\n  local operand_symbol_value\
    \ = nil\n  local operator_symbol_index = nil\n  local operand_symbol_index = nil\n\
    \  local operator_symbol_value = nil\n  local operand_symbol_value = nil\n  local\
    \ operator_symbol_index = nil\n  local operand_symbol_index = nil\n  local operator_symbol_value\
    \ = nil\n  local operand_symbol_value = nil\n  local operator_symbol_index = nil\n\
    \  local operand_symbol_index = nil\n  local operator_symbol_value = nil\n  local\
    \ operand_symbol_value = nil\n  local operator_symbol_index = nil\n  local operand_symbol_index\
    \ = nil\n  local operator_symbol_value = nil\n  local operand_symbol_value = nil\n\
    \  local operator_symbol_index = nil\n  local operand_symbol_index = nil\n  local\
    \ operator_symbol_value = nil\n  local operand_symbol_value = nil\n  local operator_symbol_index\
    \ = nil\n  local operand_symbol_index = nil\n  local operator_symbol_value = nil\n\
    \  local operand_symbol_value = nil\n  local operator_symbol_index = nil\n  local\
    \ operand_symbol_index = nil\n  local operator_symbol_value = nil\n  local operand_symbol_value\
    \ = nil\n  local operator_symbol_index = nil\n  local operand_symbol_index = nil\n\
    \  local operator_symbol_value = nil\n  local operand_symbol_value = nil\n  local\
    \ operator_symbol_index = nil\n  local operand_symbol_index = nil\n  local operator_symbol_value\
    \ = nil\n  local operand_symbol_value = nil\n  local operator_symbol_index = nil\n\
    \  local operand_symbol_index = nil\n  local operator_symbol_value = nil\n  local\
    \ operand_symbol_value = nil\n  local operator_symbol_index = nil\n  local operand_symbol_index\
    \ = nil\n  local operator_symbol_value = nil\n  local operand_symbol_value = nil\n\
    \  local operator_symbol_index = nil\n  local operand_symbol_index = nil\n  local\
    \ operator_symbol_value = nil\n  local operand_symbol_value = nil\n  local operator_symbol_index\
    \ = nil\n  local operand_symbol_index = nil\n  local operator_symbol_value = nil\n\
    \  local operand_symbol_value = nil\n  local operator_symbol_index = nil\n  local\
    \ operand_symbol_index = nil\n  local operator_symbol_value = nil\n  local operand_symbol_value\
    \ = nil\n  local operator_symbol_index = nil\n  local operand_symbol_index = ",
  "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[operator](result,\
    \ operand[i])\n\tend\n\treturn result\nend", "  local result = nil\n  local length\
    \ = #operand\n  local index = 1\n  while index < length do\n    local operator\
    \ = operator[index]\n    local operand1 = operand[index]\n    local operand2 =\
    \ operand[index + 1]\n    local operator1 = operator[1]\n    local operator2 =\
    \ operator[2]\n    local operator3 = operator[3]\n    local operator4 = operator[4]\n\
    \    local operator5 = operator[5]\n    local operator6 = operator[6]\n    local\
    \ operator7 = operator[7]\n    local operator8 = operator[8]\n    local operator9\
    \ = operator[9]\n    local operator10 = operator[10]\n    local operator11 = operator[11]\n\
    \    local operator12 = operator[12]\n    local operator13 = operator[13]\n  \
    \  local operator14 = operator[14]\n    local operator15 = operator[15]\n    local\
    \ operator16 = operator[16]\n    local operator17 = operator[17]\n    local operator18\
    \ = operator[18]\n    local operator19 = operator[19]\n    local operator20 =\
    \ operator[20]\n    local operator21 = operator[21]\n    local operator22 = operator[22]\n\
    \    local operator23 = operator[23]\n    local operator24 = operator[24]\n  \
    \  local operator25 = operator[25]\n    local operator26 = operator[26]\n    local\
    \ operator27 = operator[27]\n    local operator28 = operator[28]\n    local operator29\
    \ = operator[29]\n    local operator30 = operator[30]\n    local operator31 =\
    \ operator[31]\n    local operator32 = operator[32]\n    local operator33 = operator[33]\n\
    \    local operator34 = operator[34]\n    local operator35 = operator[35]\n  \
    \  local operator36 = operator[36]\n    local operator37 = operator[37]\n    local\
    \ operator38 = operator[38]\n    local operator39 = operator[39]\n    local operator40\
    \ = operator[40]\n    local operator41 = operator[41]\n    local operator42 =\
    \ operator[42]\n    local operator43 = operator[43]\n    local operator44 = operator[44]\n\
    \    local operator45 = operator[45]\n    local operator46 = operator[46]\n  \
    \  local operator47 = operator[47]\n    local operator48 = operator[48]\n    local\
    \ operator49 = operator[49]\n    local operator50 = operator[50]\n    local operator",
  "\tlocal result = nil\n\tlocal length = #operand\n\tlocal i = 0\n\tlocal j = 0\n\
    \tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\t\
    local p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal\
    \ u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z\
    \ = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e =\
    \ 0\n\tlocal f = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\
    \tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\t\
    local p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal\
    \ u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z\
    \ = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e =\
    \ 0\n\tlocal f = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\
    \tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\t\
    local p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal\
    \ u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z\
    \ = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e =\
    \ 0\n\tlocal f = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal j = 0\n\
    \tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\t\
    local p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal\
    \ u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z\
    \ = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\tlocal e =\
    \ 0\n\tlocal f = 0", "\tlocal result = nil\n\tlocal i = 0\n\tlocal j = 0\n\tlocal\
    \ k = 0\n\tlocal l = 0\n\tlocal m = #operand\n\tlocal n = #operator\n\tlocal operands\
    \ = operand\n\tlocal operators = operator\n\tlocal ops = #operands\n\tlocal opr\
    \ = #operators\n\tlocal oprs = #operands\n\tlocal oprr = #operators\n\tlocal oprrs\
    \ = #operands\n\tlocal oprrr = #operators\n\tlocal oprrrs = #operands\n\tlocal\
    \ oprrrr = #operators\n\tlocal oprrrrs = #operands\n\tlocal oprrrrr = #operators\n\
    \tlocal oprrrrrs = #operands\n\tlocal oprrrrrr = #operators\n\tlocal oprrrrrrs\
    \ = #operands\n\tlocal oprrrrrrr = #operators\n\tlocal oprrrrrrrs = #operands\n\
    \tlocal oprrrrrrrr = #operators\n\tlocal oprrrrrrrrs = #operands\n\tlocal oprrrrrrrrr\
    \ = #operators\n\tlocal oprrrrrrrrrs = #operands\n\tlocal oprrrrrrrrrr = #operators\n\
    \tlocal oprrrrrrrrrrs = #operands\n\tlocal oprrrrrrrrrrr = #operators\n\tlocal\
    \ oprrrrrrrrrrrs = #operands\n\tlocal oprrrrrrrrrrrr = #operators\n\tlocal oprrrrrrrrrrrrs\
    \ = #operands\n\tlocal oprrrrrrrrrrrrr = #operators\n\tlocal oprrrrrrrrrrrrrs\
    \ = #operands\n\tlocal oprrrrrrrrrrrrrr = #operators\n\tlocal oprrrrrrrrrrrrrrs\
    \ = #operands\n\tlocal oprrrrrrrrrrrrrrr = #operators\n\tlocal oprrrrrrrrrrrrrrrs\
    \ = #operands\n\tlocal oprrrrrrrrrrrrrrrr = #operators\n\tlocal oprrrrrrrrrrrrrrrrs\
    \ = #operands\n\tlocal oprrrrrrrrrrrrrrrrr = #operators\n\tlocal oprrrrrrrrrrrrrrrrrrs\
    \ = #operands\n\tlocal oprrrrrrrrrrrrrrrrrrrr = #operators\n\tlocal oprrrrrrrrrrrrrrrrrrrs\
    \ = #operands\n\tlocal oprrrrrrrrrrrrrrrrrrr", "\tlocal result = nil\n\tlocal\
    \ op1 = nil\n\tlocal op2 = nil\n\tlocal op3 = nil\n\tlocal op4 = nil\n\tlocal\
    \ op5 = nil\n\tlocal op6 = nil\n\tlocal op7 = nil\n\tlocal op8 = nil\n\tlocal\
    \ op9 = nil\n\tlocal op10 = nil\n\tlocal op11 = nil\n\tlocal op12 = nil\n\tlocal\
    \ op13 = nil\n\tlocal op14 = nil\n\tlocal op15 = nil\n\tlocal op16 = nil\n\tlocal\
    \ op17 = nil\n\tlocal op18 = nil\n\tlocal op19 = nil\n\tlocal op20 = nil\n\tlocal\
    \ op21 = nil\n\tlocal op22 = nil\n\tlocal op23 = nil\n\tlocal op24 = nil\n\tlocal\
    \ op25 = nil\n\tlocal op26 = nil\n\tlocal op27 = nil\n\tlocal op28 = nil\n\tlocal\
    \ op29 = nil\n\tlocal op30 = nil\n\tlocal op31 = nil\n\tlocal op32 = nil\n\tlocal\
    \ op33 = nil\n\tlocal op34 = nil\n\tlocal op35 = nil\n\tlocal op36 = nil\n\tlocal\
    \ op37 = nil\n\tlocal op38 = nil\n\tlocal op39 = nil\n\tlocal op40 = nil\n\tlocal\
    \ op41 = nil\n\tlocal op42 = nil\n\tlocal op43 = nil\n\tlocal op44 = nil\n\tlocal\
    \ op45 = nil\n\tlocal op46 = nil\n\tlocal op47 = nil\n\tlocal op48 = nil\n\tlocal\
    \ op49 = nil\n\tlocal op50 = nil\n\tlocal op51 = nil\n\tlocal op52 = nil\n\tlocal\
    \ op53 = nil\n\tlocal op54 = nil\n\tlocal op55 = nil\n\tlocal op56 = nil\n\tlocal\
    \ op57 = nil\n\tlocal op58 = nil\n\tlocal op59 = nil\n\tlocal op60 = nil\n\tlocal\
    \ op61 = nil\n\tlocal op62 = nil\n\tlocal op63 = nil\n\tlocal op64 = nil\n\tlocal\
    \ op65 = nil\n\tlocal op66 = nil\n\tlocal op67 = nil\n\tlocal op68 = nil\n\tlocal\
    \ op69 = nil\n\tlocal op70 = nil\n\tlocal op71 = nil\n\tlocal op72 = nil\n\tlocal\
    \ op73 = nil\n\tlocal op74 = nil\n\t", "  local result = nil\n  local operator_count\
    \ = #operator\n  local operand_count = #operand\n  if operator_count > 1 then\n\
    \    local operator_table = operator\n    local operand_table = operand\n    local\
    \ operator_pointer = 1\n    local operand_pointer = 1\n    local operator_pointer_limit\
    \ = operator_count - 1\n    local operand_pointer_limit = operand_count - 1\n\
    \    while operator_pointer <= operator_pointer_limit and operand_pointer <= operand_pointer_limit\
    \ do\n      local operator = operator_table[operator_pointer]\n      local operand\
    \ = operand_table[operand_pointer]\n      local operator_function = operators[operator]\n\
    \      local operand_function = operands[operand]\n      result = operator_function(result,\
    \ operand_function)\n      operator_pointer = operator_pointer + 1\n      operand_pointer\
    \ = operand_pointer + 1\n    end\n  end\n  return result\nend", "    local result\
    \ = 0\n    local i = 1\n    while i <= #operand do\n        local op1 = operand[i-1]\n\
    \        local op2 = operand[i]\n        local op3 = operator[i-1]\n        local\
    \ op4 = operator[i]\n        local op5 = operator[i+1]\n        local op6 = operator[i+2]\n\
    \        local op7 = operator[i+3]\n        local op8 = operator[i+4]\n      \
    \  local op9 = operator[i+5]\n        local op10 = operator[i+6]\n        local\
    \ op11 = operator[i+7]\n        local op12 = operator[i+8]\n        local op13\
    \ = operator[i+9]\n        local op14 = operator[i+10]\n        local op15 = operator[i+11]\n\
    \        local op16 = operator[i+12]\n        local op17 = operator[i+13]\n  \
    \      local op18 = operator[i+14]\n        local op19 = operator[i+15]\n    \
    \    local op20 = operator[i+16]\n        local op21 = operator[i+17]\n      \
    \  local op22 = operator[i+18]\n        local op23 = operator[i+19]\n        local\
    \ op24 = operator[i+20]\n        local op25 = operator[i+21]\n        local op26\
    \ = operator[i+22]\n        local op27 = operator[i+23]\n        local op28 =\
    \ operator[i+24]\n        local op29 = operator[i+25]\n        local op30 = operator[i+26]\n\
    \        local op31 = operator[i+27]\n        local op32 = operator[i+28]\n  \
    \      local op33 = operator[i+29]\n        local op34 = operator[i+30]\n    \
    \    local op35 = operator[i+31]\n        local op36 = operator[i+32]\n      \
    \  local op37 = operator[i+33]\n        local op38 = operator[i+34]\n        local\
    \ op39 = operator[i+35]\n        local op40 = operator[i+36]\n        local op41\
    \ = operator[i+37]\n        local op42 = operator[i+38]\n        local op43 =\
    \ operator[i+39]\n        local op44 = operator[i+40]\n        local op45 = operator[i+41]\n\
    \        local op46 = operator[i+42]\n        local op47 = operator[i+43]\n  \
    \      local op48 = operator[i+44]\n        local op49 = operator[i+45]\n    \
    \    local op50 = operator[i+46]\n        local op51 = operator[i+47]\n      \
    \  local op52 = operator[i+48]\n        local op53 = operator[i+", "\tlocal result\
    \ = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[result]\n\tend\n\
    \treturn result\nend", "  local result = operand[1]\n  for i = 2, #operand do\n\
    \    result = operator[result]\n  end\n  return result\nend", "\tlocal result\
    \ = nil\n\tlocal operator_count = #operator\n\tlocal operand_count = #operand\n\
    \t\n\tif operator_count ~= operand_count then\n\t\terror(\"Operator and operand\
    \ tables must be of equal length.\")\n\tend\n\t\n\tfor i = 1, operand_count do\n\
    \t\tlocal operand = operand[i]\n\t\tlocal operator = operator[i]\n\t\t\n\t\tif\
    \ operand == nil then\n\t\t\terror(\"Operand table is empty.\")\n\t\tend\n\t\t\
    \n\t\tif operator == nil then\n\t\t\terror(\"Operator table is empty.\")\n\t\t\
    end\n\t\t\n\t\tlocal result = operand\n\t\t\n\t\t-- Perform the basic algebra\
    \ operations.\n\t\t-- Addition ( + ) \n\t\tif operator == '+' then\n\t\t\tresult\
    \ = result + operand\n\t\tend\n\t\t\n\t\t-- Subtraction ( - ) \n\t\tif operator\
    \ == '-' then\n\t\t\tresult = result - operand\n\t\tend\n\t\t\n\t\t-- Multiplication\
    \ ( * ) \n\t\tif operator == '*' then\n\t\t\tresult = result * operand\n\t\tend\n\
    \t\t\n\t\t-- Floor division ( // ) \n\t\tif operator == '//' then\n\t\t\tresult\
    \ = result // operand\n\t\tend\n\t\t\n\t\t-- Exponentiation ( ** ) \n\t\tif operator\
    \ == '**' then\n\t\t\tresult = result ** operand\n\t\tend\n\t\t\n\t\t-- Return\
    \ the result.\n\t\treturn result\n\tend\nend", "  local result = nil\n  local\
    \ length = #operand\n  for i = 1, length do\n    local op = operator[i]\n    local\
    \ a = operand[i]\n    local b = operand[i+1]\n    if op == '+' then\n      result\
    \ = a + b\n    elseif op == '-' then\n      result = a - b\n    elseif op == '*'\
    \ then\n      result = a * b\n    elseif op == '/' then\n      result = a / b\n\
    \    elseif op == '//' then\n      result = a // b\n    elseif op == '**' then\n\
    \      result = a ** b\n    end\n  end\n  return result\nend", "\tlocal result\
    \ = nil\n\tlocal length = #operand\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k =\
    \ 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\
    \tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\t\
    local v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal\
    \ A = 0\n\tlocal B = 0\n\tlocal C = 0\n\tlocal D = 0\n\tlocal E = 0\n\tlocal F\
    \ = 0\n\tlocal G = 0\n\tlocal H = 0\n\tlocal I = 0\n\tlocal J = 0\n\tlocal K =\
    \ 0\n\tlocal L = 0\n\tlocal M = 0\n\tlocal N = 0\n\tlocal O = 0\n\tlocal P = 0\n\
    \tlocal Q = 0\n\tlocal R = 0\n\tlocal S = 0\n\tlocal T = 0\n\tlocal U = 0\n\t\
    local V = 0\n\tlocal W = 0\n\tlocal X = 0\n\tlocal Y = 0\n\tlocal Z = 0\n\tlocal\
    \ AA = 0\n\tlocal AB = 0\n\tlocal AC = 0\n\tlocal AD = 0\n\tlocal AE = 0\n\tlocal\
    \ AF = 0\n\tlocal AG = 0\n\tlocal AH = 0\n\tlocal AI = 0\n\tlocal AJ = 0\n\tlocal\
    \ AK = 0\n\tlocal AL = 0\n\tlocal AM = 0\n\tlocal AN = 0\n\tlocal AO = 0\n\tlocal\
    \ AP = 0\n\tlocal AQ = 0\n\tlocal AR = 0\n\tlocal AS = 0\n\tlocal AT = 0\n\tlocal\
    \ AU = 0\n\tlocal AV = 0\n\tlocal AW = 0\n\tlocal AX = 0\n\tlocal AY = 0\n\tlocal\
    \ AZ = 0\n\tlocal AA = 0\n\tlocal AB = 0\n\tlocal AC = 0\n\tlocal AD = 0\n\tlocal\
    \ AE = 0\n\tlocal AF = 0\n\tlocal AG = 0\n\tlocal AH = 0\n\tlocal AI = 0\n\tlocal\
    \ AJ = 0\n\tlocal AK = 0\n\tlocal AL = 0\n\tlocal AM = 0\n\tlocal AN = 0\n\tlocal\
    \ AO = 0\n\tlocal AP = 0\n\tlocal AQ = 0\n\tlocal AR = 0\n\tlocal AS = 0\n\tlocal\
    \ AT = 0\n\tlocal AU = 0\n\tlocal AV = 0\n\tlocal AW = 0\n\tlocal AX = 0\n\tlocal\
    \ AY = 0\n\tlocal AZ = 0\n\tlocal AA = 0\n\tlocal AB = 0\n\tlocal AC = 0\n\tlocal\
    \ AD = 0\n\t", "  local result = nil\n  local length = #operand\n  for i = 1,\
    \ length do\n    local op = operator[i]\n    local a = operand[i]\n    local b\
    \ = operand[i+1]\n    if op == '+' then\n      result = a + b\n    elseif op ==\
    \ '-' then\n      result = a - b\n    elseif op == '*' then\n      result = a\
    \ * b\n    elseif op == '/' then\n      result = a / b\n    elseif op == '//'\
    \ then\n      result = a // b\n    elseif op == '**' then\n      result = a **\
    \ b\n    end\n  end\n  return result\nend", "\tlocal result = nil\n\tlocal length\
    \ = #operand\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal\
    \ m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r\
    \ = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w =\
    \ 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\
    \tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g = 0\n\t\
    local h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal\
    \ m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r\
    \ = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w =\
    \ 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\
    \tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g = 0\n\t\
    local h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal\
    \ m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r\
    \ = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w =\
    \ 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\
    \tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g = 0\n\t\
    local h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal\
    \ m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r\
    \ = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w =\
    \ 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\
    \tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0", "  local result =\
    \ operand[1]\n  for i = 2, #operand do\n    result = operator[result]\n  end\n\
    \  return result\nend", "  local result = operand[1]\n  for i = 2, #operand do\n\
    \    result = operator[result]\n  end\n  return result\nend", "  local result\
    \ = operand[1]\n  for i = 2, #operand do\n    result = operator[operand[i-1]](result,\
    \ operand[i])\n  end\n  return result\nend", "  local result = nil\n  local length\
    \ = #operand\n  for i = 1, length do\n    local op = operator[i]\n    local operand1\
    \ = operand[i]\n    local operand2 = operand[i - 1]\n    local operand3 = operand[i\
    \ - 2]\n    local operand4 = operand[i - 3]\n    local operand5 = operand[i -\
    \ 4]\n    local operand6 = operand[i - 5]\n    local operand7 = operand[i - 6]\n\
    \    local operand8 = operand[i - 7]\n    local operand9 = operand[i - 8]\n  \
    \  local operand10 = operand[i - 9]\n    local operand11 = operand[i - 10]\n \
    \   local operand12 = operand[i - 11]\n    local operand13 = operand[i - 12]\n\
    \    local operand14 = operand[i - 13]\n    local operand15 = operand[i - 14]\n\
    \    local operand16 = operand[i - 15]\n    local operand17 = operand[i - 16]\n\
    \    local operand18 = operand[i - 17]\n    local operand19 = operand[i - 18]\n\
    \    local operand20 = operand[i - 19]\n    local operand21 = operand[i - 20]\n\
    \    local operand22 = operand[i - 21]\n    local operand23 = operand[i - 22]\n\
    \    local operand24 = operand[i - 23]\n    local operand25 = operand[i - 24]\n\
    \    local operand26 = operand[i - 25]\n    local operand27 = operand[i - 26]\n\
    \    local operand28 = operand[i - 27]\n    local operand29 = operand[i - 28]\n\
    \    local operand30 = operand[i - 29]\n    local operand31 = operand[i - 30]\n\
    \    local operand32 = operand[i - 31]\n    local operand33 = operand[i - 32]\n\
    \    local operand34 = operand[i - 33]\n    local operand35 = operand[i - 34]\n\
    \    local operand36 = operand[i - 35]\n    local operand37 = operand[i - 36]\n\
    \    local operand38 = operand[i - 37]\n    local operand39 = operand[i - 38]\n\
    \    local operand40 = operand[i - 39]\n    local operand41 = operand[i - 40]\n\
    \    local operand42 = operand[i - 41]\n    local operand43 = operand[i - 42]\n\
    \    local operand44 = operand[i - 43]\n    local operand45 = operand[i - 44]\n\
    \    local operand46 = operand[i - 45]\n    local operand47 = operand[i - 46",
  "\tlocal result = nil\n\tlocal operator_count = #operator\n\tlocal operand_count\
    \ = #operand\n\t\n\tif operator_count > 0 and operand_count > 0 then\n\t\tlocal\
    \ operator_table = operator\n\t\tlocal operand_table = operand\n\t\tlocal operator_pointer\
    \ = 1\n\t\tlocal operand_pointer = 1\n\t\t\n\t\twhile operator_pointer <= operator_count\
    \ and operand_pointer <= operand_count do\n\t\t\tlocal operator = operator_table[operator_pointer]\n\
    \t\t\tlocal operand = operand_table[operand_pointer]\n\t\t\t\n\t\t\tif operator\
    \ == '+' then\n\t\t\t\tresult = result + operand\n\t\t\telseif operator == '-'\
    \ then\n\t\t\t\tresult = result - operand\n\t\t\telseif operator == '*' then\n\
    \t\t\t\tresult = result * operand\n\t\t\telseif operator == '//' then\n\t\t\t\t\
    result = result // operand\n\t\t\telseif operator == '**' then\n\t\t\t\tresult\
    \ = result ^ operand\n\t\t\tend\n\t\t\t\n\t\t\toperator_pointer = operator_pointer\
    \ + 1\n\t\t\toperand_pointer = operand_pointer + 1\n\t\tend\n\tend\n\t\n\treturn\
    \ result\nend", "    local result = nil\n    local operator_count = #operator\n\
    \    local operand_count = #operand\n    local operator_table = operator\n   \
    \ local operand_table = operand\n    local operator_stack = { }\n    local operand_stack\
    \ = { }\n    local operator_stack_size = operator_count\n    local operand_stack_size\
    \ = operand_count - 1\n    local operator_stack_index = 0\n    local operand_stack_index\
    \ = 1\n    local operator_stack_value = nil\n    local operand_stack_value = nil\n\
    \    local operator_stack_top = operator_stack[operator_stack_index]\n    local\
    \ operand_stack_top = operand_stack[operand_stack_index]\n    local operator_stack_bottom\
    \ = operator_stack[operator_stack_index + 1]\n    local operand_stack_bottom =\
    \ operand_stack[operand_stack_index + 1]\n    local operator_stack_top = operator_stack_top\n\
    \    local operand_stack_top = operand_stack_top\n    local operator_stack_bottom\
    \ = operator_stack_bottom\n    local operand_stack_bottom = operand_stack_bottom\n\
    \    local operator_stack_top = operator_stack_top\n    local operand_stack_top\
    \ = operand_stack_top\n    local operator_stack_bottom = operator_stack_bottom\n\
    \    local operand_stack_bottom = operand_stack_bottom\n    local operator_stack_top\
    \ = operator_stack_top\n    local operand_stack_top = operand_stack_top\n    local\
    \ operator_stack_bottom = operator_stack_bottom\n    local operand_stack_bottom\
    \ = operand_stack_bottom\n    local operator_stack_top = operator_stack_top\n\
    \    local operand_stack_top = operand_stack_top\n    local operator_stack_bottom\
    \ = operator_stack_bottom\n    local operand_stack_bottom = operand_stack_bottom\n\
    \    local operator_stack_top = operator_stack_top\n    local operand_stack_top\
    \ = operand_stack_top\n    local operator_stack_bottom = operator_stack_bottom\n\
    \    local operand_stack_bottom = operand_stack_bottom\n    local operator_stack_top\
    \ = operator_stack_top\n    local operand_stack_top = operand_stack_top\n    local\
    \ operator_stack_bottom = operator_stack_bottom\n    local operand_stack_bottom\
    \ = operand_stack_bottom\n    local operator_stack_top = operator_stack_top\n\
    \    local operand_stack_top = operand_stack_top\n    local operator_stack_bottom\
    \ = operator_stack_bottom\n    local operand_stack_bottom = operand_stack_bottom\n\
    \    local operator_stack_top = operator_stack_top\n    local operand_stack_top\
    \ = operand_stack_top\n    local operator_stack_bottom = operator_stack_bottom\n\
    \    local operand_stack_bottom = operand_stack_bottom\n    local operator_stack_top\
    \ = operator_stack_top\n    local operand_stack_top = operand_stack_", "\tlocal\
    \ result = nil\n\tlocal ops = #operator\n\tlocal ops_size = #operand\n\tlocal\
    \ ops_index = 1\n\tlocal ops_index_size = #operand\n\tlocal ops_index_index =\
    \ 1\n\tlocal ops_index_index_size = #operand\n\tlocal ops_index_index_index =\
    \ 1\n\tlocal ops_index_index_index_size = #operand\n\tlocal ops_index_index_index_index\
    \ = 1\n\tlocal ops_index_index_index_index_size = #operand\n\tlocal ops_index_index_index_index_index\
    \ = 1\n\tlocal ops_index_index_index_index_size = #operand\n\tlocal ops_index_index_index_index_index\
    \ = 1\n\tlocal ops_index_index_index_index_index_size = #operand\n\tlocal ops_index_index_index_index_index_index\
    \ = 1\n\tlocal ops_index_index_index_index_index_index_size = #operand\n\tlocal\
    \ ops_index_index_index_index_index_index_index = 1\n\tlocal ops_index_index_index_index_index_index_index_size\
    \ = #operand\n\tlocal ops_index_index_index_index_index_index_index_index = 1\n\
    \tlocal ops_index_index_index_index_index_index_index_index_size = #operand\n\t\
    local ops_index_index_index_index_index_index_index_index_index = 1\n\tlocal ops_index_index_index_index_index_index_index_index_index_size\
    \ = #operand\n\tlocal ops_index_index_index_index_index_index_index_index_index_index\
    \ = 1\n\tlocal ops_index_index_index_index_index_index_index_index_index_index_index_size\
    \ = #operand\n\tlocal ops_index_index_index_index_index_index_index_index_index_index_index_index\
    \ = 1\n\tlocal ops_index_index_index_index_index_index_index_index_index_index_index_index_size\
    \ = #operand\n\tlocal ops_index_index_index_index_index_index_index_index_index_index_index_index\
    \ = 1\n\tlocal ops_index_index_index_index_index_index_index_index_index_index_index_index_index_size\
    \ = #operand\n\tlocal ops_index_index_index_index_index_index_index_index_index_index_index_index_index_index\
    \ = 1\n\tlocal ops_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_size\
    \ = #operand\n\tlocal ops_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index\
    \ = 1\n\tlocal ops_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_size\
    \ = #operand\n\tlocal ops_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index\
    \ = 1\n\tlocal ops_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_size\
    \ = #operand", "  local result = nil\n  local i = 0\n  local j = 0\n  local k\
    \ = 0\n  local l = 0\n  local m = 0\n  local n = 0\n  local o = 0\n  local p =\
    \ 0\n  local q = 0\n  local r = 0\n  local s = 0\n  local t = 0\n  local u = 0\n\
    \  local v = 0\n  local w = 0\n  local x = 0\n  local y = 0\n  local z = 0\n \
    \ local a = 0\n  local b = 0\n  local c = 0\n  local d = 0\n  local e = 0\n  local\
    \ f = 0\n  local g = 0\n  local h = 0\n  local i = 0\n  local j = 0\n  local k\
    \ = 0\n  local l = 0\n  local m = 0\n  local n = 0\n  local o = 0\n  local p =\
    \ 0\n  local q = 0\n  local r = 0\n  local s = 0\n  local t = 0\n  local u = 0\n\
    \  local v = 0\n  local w = 0\n  local x = 0\n  local y = 0\n  local z = 0\n \
    \ local a = 0\n  local b = 0\n  local c = 0\n  local d = 0\n  local e = 0\n  local\
    \ f = 0\n  local g = 0\n  local h = 0\n  local i = 0\n  local j = 0\n  local k\
    \ = 0\n  local l = 0\n  local m = 0\n  local n = 0\n  local o = 0\n  local p =\
    \ 0\n  local q = 0\n  local r = 0\n  local s = 0\n  local t = 0\n  local u = 0\n\
    \  local v = 0\n  local w = 0\n  local x = 0\n  local y = 0\n  local z = 0\n \
    \ local a = 0\n  local b = 0\n  local c = 0\n  local d = 0\n  local e = 0\n  local\
    \ f = 0\n  local g = 0\n  local h = 0\n  local i = 0\n  local j = 0\n  local k\
    \ = 0\n  local l = 0\n  local m = 0\n  local n = 0\n  local o = 0\n  local p =\
    \ 0\n  local q = 0\n  local r = 0\n  local s = 0\n  local t = 0\n  local u = 0\n\
    \  local v = 0\n  local w = 0\n  local x = 0\n  local y = 0\n  local z = 0\n \
    \ local a = 0\n  local b = 0\n  local c = 0\n  local d = 0\n  local e = 0\n  local\
    \ f = 0\n  local g = 0\n", "  local result = nil\n  local length = #operand\n\
    \  for i = 1, length do\n    local operand1 = operand[i]\n    local operand2 =\
    \ operand[i - 1]\n    local operator1 = operator[i]\n    local operator2 = operator[i\
    \ - 1]\n    local result = operand1 + operand2\n    if operator1 ~= operator2\
    \ then\n      result = operator1 .. result\n    end\n  end\n  return result\n\
    end", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult = operator[operator](result,\
    \ operand[i])\n\tend\n\treturn result\nend", "  local result = 0\n  local ops\
    \ = operator\n  local ops_count = #ops\n  local ops_table = operand\n  local ops_table_size\
    \ = #ops_table\n  local ops_table_last = ops_table_size\n  local ops_table_first\
    \ = ops_table_size - 1\n  local ops_table_last = ops_table_size - 1\n  local ops_table_first\
    \ = ops_table_size - 1\n  local ops_table_last = ops_table_size - 1\n  local ops_table_first\
    \ = ops_table_size - 1\n  local ops_table_last = ops_table_size - 1\n  local ops_table_first\
    \ = ops_table_size - 1\n  local ops_table_last = ops_table_size - 1\n  local ops_table_first\
    \ = ops_table_size - 1\n  local ops_table_last = ops_table_size - 1\n  local ops_table_first\
    \ = ops_table_size - 1\n  local ops_table_last = ops_table_size - 1\n  local ops_table_first\
    \ = ops_table_size - 1\n  local ops_table_last = ops_table_size - 1\n  local ops_table_first\
    \ = ops_table_size - 1\n  local ops_table_last = ops_table_size - 1\n  local ops_table_first\
    \ = ops_table_size - 1\n  local ops_table_last = ops_table_size - 1\n  local ops_table_first\
    \ = ops_table_size - 1\n  local ops_table_last = ops_table_size - 1\n  local ops_table_first\
    \ = ops_table_size - 1\n  local ops_table_last = ops_table_size - 1\n  local ops_table_first\
    \ = ops_table_size - 1\n  local ops_table_last = ops_table_size - 1\n  local ops_table_first\
    \ = ops_table_size - 1\n  local ops_table_last = ops_table_size - 1\n  local ops_table_first\
    \ = ops_table_size - 1\n  local ops_table_last = ops_table_size - 1\n  local ops_table_first\
    \ = ops_table_size - 1\n  local ops_table_last = ops_table_size - 1\n  local ops_table_first\
    \ = ops_table_size - 1\n  local ops_table_last = ops_table_size - 1\n  local ops_table_first\
    \ = ops_table_size - 1\n  local ops_table_last = ops_table_size - 1\n  local ops_table_first\
    \ = ops_table_size - 1\n  local ops_table_last = ops_table_size - 1\n  local ops_table_first\
    \ = ops_table_size - 1\n  local ops_table_last = ops_table_size - 1\n  local ops_table_first\
    \ = ops_", "\tlocal result = nil\n\tlocal ops = #operator\n\tlocal ops_size =\
    \ #operand\n\tlocal ops_index = 1\n\tlocal ops_value = operator[1]\n\tlocal ops_next\
    \ = operator[ops_index]\n\tlocal ops_next_value = operator[ops_index + 1]\n\t\
    local ops_next_next = operator[ops_index + 2]\n\tlocal ops_next_next_value = operator[ops_index\
    \ + 3]\n\tlocal ops_next_next_next = operator[ops_index + 4]\n\tlocal ops_next_next_next_value\
    \ = operator[ops_index + 5]\n\tlocal ops_next_next_next_next = operator[ops_index\
    \ + 6]\n\tlocal ops_next_next_next_next_value = operator[ops_index + 7]\n\tlocal\
    \ ops_next_next_next_next_next = operator[ops_index + 8]\n\tlocal ops_next_next_next_next_next_value\
    \ = operator[ops_index + 9]\n\tlocal ops_next_next_next_next_next_next = operator[ops_index\
    \ + 10]\n\tlocal ops_next_next_next_next_next_next_value = operator[ops_index\
    \ + 11]\n\tlocal ops_next_next_next_next_next_next_next = operator[ops_index +\
    \ 12]\n\tlocal ops_next_next_next_next_next_next_next_value = operator[ops_index\
    \ + 13]\n\tlocal ops_next_next_next_next_next_next_next_next = operator[ops_index\
    \ + 14]\n\tlocal ops_next_next_next_next_next_next_next_next_value = operator[ops_index\
    \ + 15]\n\tlocal ops_next_next_next_next_next_next_next_next_next = operator[ops_index\
    \ + 16]\n\tlocal ops_next_next_next_next_next_next_next_next_next_value = operator[ops_index\
    \ + 17]\n\tlocal ops_next_next_next_next_next_next_next_next_next_value = operator[ops_index\
    \ + 18]\n\tlocal ops_next_next_next_next_next_next_next_next_next_next = operator[ops_index\
    \ + 19]\n\tlocal ops_next_next_next_next_next_next_next_next_next_next_value =\
    \ operator[ops_index + 20]\n\tlocal ops_next_next_next_next_next_next_next_next_next_next_value\
    \ = operator[ops_index + 21]\n\tlocal ops_next_next_next_next_next_next_next_next_next_next_next_value\
    \ = operator[ops_index + 22]\n\tlocal ops_next_next_next_next_next_next_next_next_next_next_next_next_value\
    \ = operator[ops_index + 23]\n\tlocal ops_next_next_next_next_next_next_next_next_next_next_next_next_value\
    \ = operator[ops_index + 24]\n\tlocal ops_next_next_next_next_next_next_", " \
    \ local result = operand[1]\n  for i = 2, #operand do\n    result = operator[operator](result,\
    \ operand[i])\n  end\n  return result\nend", "\tlocal result = nil\n\tlocal operator_count\
    \ = #operator\n\tlocal operand_count = #operand\n\tlocal operator_table = operator\n\
    \tlocal operand_table = operand\n\tlocal operator_stack = {}\n\tlocal operand_stack\
    \ = {}\n\tlocal operator_stack_size = #operator_stack\n\tlocal operand_stack_size\
    \ = #operand_stack\n\tlocal operator_stack_index = 0\n\tlocal operand_stack_index\
    \ = 0\n\tlocal operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\
    \tlocal operator_stack_pointer = nil\n\tlocal operand_stack_pointer = nil\n\t\
    local operator_stack_pointer_pointer = nil\n\tlocal operand_stack_pointer_pointer\
    \ = nil\n\tlocal operator_stack_pointer_pointer_pointer = nil\n\tlocal operator_stack_pointer_pointer_pointer_pointer\
    \ = nil\n\tlocal operator_stack_pointer_pointer_pointer_pointer_pointer = nil\n\
    \tlocal operator_stack_pointer_pointer_pointer_pointer_pointer_pointer = nil\n\
    \tlocal operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n\tlocal operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n\tlocal operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n\tlocal operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n\tlocal operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n\tlocal operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n\tlocal operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n\tlocal operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n\tlocal operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n\tlocal operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = nil\n\tlocal operator_stack_pointer_pointer", "  local result = nil\n  local\
    \ length = #operand\n  local index = 1\n  while index <= length do\n    local\
    \ operator = operator[index]\n    local operand1 = operand[index]\n    local operand2\
    \ = operand[index + 1]\n    local result = operand1 + operand2\n    index = index\
    \ + 2\n    if index > length then\n      break\n    end\n    local operator =\
    \ operator[index]\n    local operand1 = operand[index]\n    local operand2 = operand[index\
    \ + 1]\n    local result = operand1 - operand2\n    index = index + 2\n    if\
    \ index > length then\n      break\n    end\n    local operator = operator[index]\n\
    \    local operand1 = operand[index]\n    local operand2 = operand[index + 1]\n\
    \    local result = operand1 * operand2\n    index = index + 2\n    if index >\
    \ length then\n      break\n    end\n    local operator = operator[index]\n  \
    \  local operand1 = operand[index]\n    local operand2 = operand[index + 1]\n\
    \    local result = operand1 // operand2\n    index = index + 2\n    if index\
    \ > length then\n      break\n    end\n    local operator = operator[index]\n\
    \    local operand1 = operand[index]\n    local operand2 = operand[index + 1]\n\
    \    local result = operand1 ** operand2\n    index = index + 2\n    if index\
    \ > length then\n      break\n    end\n  end\n  return result\nend", "  local\
    \ result = 0\n  local i = 0\n  local j = 0\n  local k = 0\n  local l = 0\n  local\
    \ m = 0\n  local n = 0\n  local o = 0\n  local p = 0\n  local q = 0\n  local r\
    \ = 0\n  local s = 0\n  local t = 0\n  local u = 0\n  local v = 0\n  local w =\
    \ 0\n  local x = 0\n  local y = 0\n  local z = 0\n  local A = 0\n  local B = 0\n\
    \  local C = 0\n  local D = 0\n  local E = 0\n  local F = 0\n  local G = 0\n \
    \ local H = 0\n  local I = 0\n  local J = 0\n  local K = 0\n  local L = 0\n  local\
    \ M = 0\n  local N = 0\n  local O = 0\n  local P = 0\n  local Q = 0\n  local R\
    \ = 0\n  local S = 0\n  local T = 0\n  local U = 0\n  local V = 0\n  local W =\
    \ 0\n  local X = 0\n  local Y = 0\n  local Z = 0\n  local AA = 0\n  local AB =\
    \ 0\n  local AC = 0\n  local AD = 0\n  local AE = 0\n  local AF = 0\n  local AG\
    \ = 0\n  local AH = 0\n  local AI = 0\n  local AJ = 0\n  local AK = 0\n  local\
    \ AL = 0\n  local AM = 0\n  local AN = 0\n  local AO = 0\n  local AP = 0\n  local\
    \ AQ = 0\n  local AR = 0\n  local AS = 0\n  local AT = 0\n  local AU = 0\n  local\
    \ AV = 0\n  local AW = 0\n  local AX = 0\n  local AY = 0\n  local AZ = 0\n  local\
    \ AA = 0\n  local AB = 0\n  local AC = 0\n  local AD = 0\n  local AE = 0\n  local\
    \ AF = 0\n  local AG = 0\n  local AH = 0\n  local AI = 0\n  local AJ = 0\n  local\
    \ AK = 0\n  local AL = 0\n  local AM = 0\n  local AN = 0\n  local AO = 0\n  local\
    \ AP = 0\n  local AQ = 0\n  local AR = 0\n  local AS = 0\n  local AT = 0\n  local\
    \ AU = 0\n  local AV = 0\n  local AW = 0\n  local AX = 0\n  local AY = 0\n  local\
    \ AZ = 0\n  local AA = 0\n  local AB = 0\n  local AC = 0\n  local AD = 0\n  local\
    \ AE = 0\n  local ", "\tlocal result = nil\n\tlocal i = 1\n\twhile i < #operator\
    \ do\n\t\tlocal op = operator[i]\n\t\tlocal operand1 = operand[i]\n\t\tlocal operand2\
    \ = operand[i+1]\n\t\tif op == '+' then\n\t\t\tresult = result + operand1\n\t\t\
    elseif op == '-' then\n\t\t\tresult = result - operand1\n\t\telseif op == '*'\
    \ then\n\t\t\tresult = result * operand1\n\t\telseif op == '/' then\n\t\t\tresult\
    \ = result / operand1\n\t\telseif op == '//' then\n\t\t\tresult = result // operand1\n\
    \t\telseif op == '**' then\n\t\t\tresult = result ** operand1\n\t\tend\n\t\ti\
    \ = i + 2\n\tend\n\treturn result\nend", "    local result = nil\n    local operator_count\
    \ = #operator\n    local operand_count = #operand\n    local operator_table =\
    \ operator\n    local operand_table = operand\n    local operator_stack = {}\n\
    \    local operand_stack = {}\n    local operator_stack_size = #operator_stack\n\
    \    local operand_stack_size = #operand_stack\n    local operator_stack_index\
    \ = 1\n    local operand_stack_index = 1\n    local operator_stack_value = nil\n\
    \    local operand_stack_value = nil\n    local operator_stack_value = nil\n \
    \   local operand_stack_value = nil\n    local operator_stack_value = nil\n  \
    \  local operand_stack_value = nil\n    local operator_stack_value = nil\n   \
    \ local operand_stack_value = nil\n    local operator_stack_value = nil\n    local\
    \ operand_stack_value = nil\n    local operator_stack_value = nil\n    local operand_stack_value\
    \ = nil\n    local operator_stack_value = nil\n    local operand_stack_value =\
    \ nil\n    local operator_stack_value = nil\n    local operand_stack_value = nil\n\
    \    local operator_stack_value = nil\n    local operand_stack_value = nil\n \
    \   local operator_stack_value = nil\n    local operand_stack_value = nil\n  \
    \  local operator_stack_value = nil\n    local operand_stack_value = nil\n   \
    \ local operator_stack_value = nil\n    local operand_stack_value = nil\n    local\
    \ operator_stack_value = nil\n    local operand_stack_value = nil\n    local operator_stack_value\
    \ = nil\n    local operand_stack_value = nil\n    local operator_stack_value =\
    \ nil\n    local operand_stack_value = nil\n    local operator_stack_value = nil\n\
    \    local operand_stack_value = nil\n    local operator_stack_value = nil\n \
    \   local operand_stack_value = nil\n    local operator_stack_value = nil\n  \
    \  local operand_stack_value = nil\n    local operator_stack_value = nil\n   \
    \ local operand_stack_value = nil\n    local operator_stack_value = nil\n    local\
    \ operand_stack_value = nil\n    local operator_stack_value = nil\n    local operand_stack_value\
    \ = nil\n    local operator_stack_value = nil\n    local operand_stack_value =\
    \ nil\n    local operator_stack_value = nil\n    local operand_stack_value = nil\n\
    \    local operator_stack_value = nil\n    local operand_stack_value = nil\n \
    \   local operator_stack_value = nil\n    local operand_stack_value = nil\n  \
    \  local operator_stack_value = nil\n    local operand_stack_value = nil\n   \
    \ local operator_stack_value = nil\n    local operand_stack_value = nil\n    local\
    \ operator_stack_value = nil\n    local operand_stack_value = nil\n    local operator_stack_value\
    \ = nil\n    local oper", "  local result = operand[1]\n  for i = 2, #operand\
    \ do\n    result = operator[operand[i-1]](result, operand[i])\n  end\n  return\
    \ result\nend", "  local result = operand[1]\n  for i = 2, #operand do\n    result\
    \ = operator[result] .. operand[i]\n  end\n  return result\nend", "    local result\
    \ = 0\n    local i = 0\n    local j = 0\n    local k = 0\n    local l = 0\n  \
    \  local m = 0\n    local n = 0\n    local o = 0\n    local p = 0\n    local q\
    \ = 0\n    local r = 0\n    local s = 0\n    local t = 0\n    local u = 0\n  \
    \  local v = 0\n    local w = 0\n    local x = 0\n    local y = 0\n    local z\
    \ = 0\n    local A = 0\n    local B = 0\n    local C = 0\n    local D = 0\n  \
    \  local E = 0\n    local F = 0\n    local G = 0\n    local H = 0\n    local I\
    \ = 0\n    local J = 0\n    local K = 0\n    local L = 0\n    local M = 0\n  \
    \  local N = 0\n    local O = 0\n    local P = 0\n    local Q = 0\n    local R\
    \ = 0\n    local S = 0\n    local T = 0\n    local U = 0\n    local V = 0\n  \
    \  local W = 0\n    local X = 0\n    local Y = 0\n    local Z = 0\n    local AA\
    \ = 0\n    local AB = 0\n    local AC = 0\n    local AD = 0\n    local AE = 0\n\
    \    local AF = 0\n    local AG = 0\n    local AH = 0\n    local AI = 0\n    local\
    \ AJ = 0\n    local AK = 0\n    local AL = 0\n    local AM = 0\n    local AN =\
    \ 0\n    local AO = 0\n    local AP = 0\n    local AQ = 0\n    local AR = 0\n\
    \    local AS = 0\n    local AT = 0\n    local AU = 0\n    local AV = 0\n    local\
    \ AW = 0\n    local AX = 0\n    local AY = 0\n    local AZ = 0\n    local AA =\
    \ 0\n    local AB = 0\n    local AC = 0\n    local AD = 0\n    local AE = 0\n\
    \    local AF = 0\n    local AG = 0\n    local AH = 0\n    local AI = 0\n    local\
    \ AJ = 0\n    local AK = 0\n    local AL = 0\n    local AM = 0\n    local AN =\
    \ 0\n    local AO = 0\n    local AP = 0\n    local AQ = 0\n    local AR = 0\n\
    \    local AS = 0\n    local AT = 0\n    local AU = 0\n    local AV = 0\n    local\
    \ AW = 0\n    local AX = 0\n    local AY = 0\n    local AZ = 0\n    local AA =\
    \ 0\n    local AB = 0\n    local AC = 0\n    local AD = 0\n    local AE = 0\n\
    \    local ", "  local result = nil\n  local ops = operator\n  local ops_count\
    \ = #ops\n  local ops_table = nil\n  local ops_table_size = #operand\n  local\
    \ ops_table_count = 0\n  local ops_table_element = nil\n  local ops_table_element_count\
    \ = 0\n  local ops_table_element_value = nil\n  local ops_table_element_value_count\
    \ = 0\n  local ops_table_element_value_element = nil\n  local ops_table_element_value_element_count\
    \ = 0\n  local ops_table_element_value_element_value = nil\n  local ops_table_element_value_element_value_count\
    \ = 0\n  local ops_table_element_value_element_value_element = nil\n  local ops_table_element_value_element_value_element_count\
    \ = 0\n  local ops_table_element_value_element_value_element_value = nil\n  local\
    \ ops_table_element_value_element_value_element_value_count = 0\n  local ops_table_element_value_element_value_element_value_element\
    \ = nil\n  local ops_table_element_value_element_value_element_value_element_count\
    \ = 0\n  local ops_table_element_value_element_value_element_value_element_value\
    \ = nil\n  local ops_table_element_value_element_value_element_value_element_value_element_count\
    \ = 0\n  local ops_table_element_value_element_value_element_value_element_value_element\
    \ = nil\n  local ops_table_element_value_element_value_element_value_element_value_element_count\
    \ = 0\n  local ops_table_element_value_element_value_element_value_element_value_element_value\
    \ = nil\n  local ops_table_element_value_element_value_element_value_element_value_element_value_element_count\
    \ = 0\n  local ops_table_element_value_element_value_element_value_element_value_element_value_element_value\
    \ = nil\n  local ops_table_element_value_element_value_element_value_element_value_element_value_element_value_element_count\
    \ = 0\n  local ops_table_element_value_element_value_element_value_element_value_element_value_element_value_element_value\
    \ = nil\n  local ops_table_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_count\
    \ = 0\n  local ops_table_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value\
    \ = nil\n  local ops_table_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_count\
    \ = 0\n  local ops_table_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value\
    \ = nil\n  local ops_table_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_value_element_",
  "  local result = operand[1]\n  for i = 2, #operand do\n    result = operator[operator](result,\
    \ operand[i])\n  end\n  return result\nend", "  local result = operand[1]\n  for\
    \ i = 2, #operand do\n    result = operator[result]\n  end\n  return result\n\
    end", "    local result = nil\n    local operator_count = #operator\n    local\
    \ operand_count = #operand\n    if operator_count ~= operand_count then\n    \
    \    error(\"Operator and operand table lengths do not match\")\n    end\n   \
    \ local operator = operator[1]\n    local operand = operand[1]\n    local operator_table\
    \ = operator[2]\n    local operand_table = operand[2]\n    local operator_table_size\
    \ = #operator_table\n    local operand_table_size = #operand_table\n    local\
    \ operator_table_element = operator_table[1]\n    local operand_table_element\
    \ = operand_table[1]\n    local operator_table_element_count = operator_table[2]\n\
    \    local operand_table_element_count = operand_table[2]\n    local operator_table_element_value\
    \ = operator_table[operator_table_element_count]\n    local operand_table_element_value\
    \ = operand_table[operand_table_element_count]\n    local operator_table_element_value_count\
    \ = operator_table_element_value[1]\n    local operand_table_element_value_count\
    \ = operand_table_element_value[1]\n    local operator_table_element_value_count_value\
    \ = operator_table_element_value[2]\n    local operand_table_element_value_count_value\
    \ = operand_table_element_value[2]\n    local operator_table_element_value_count_value_count\
    \ = operator_table_element_value_count_value[1]\n    local operand_table_element_value_count_value_count\
    \ = operand_table_element_value_count_value[1]\n    local operator_table_element_value_count_value_count_value\
    \ = operator_table_element_value_count_value[2]\n    local operand_table_element_value_count_value_count_value\
    \ = operand_table_element_value_count_value[2]\n    local operator_table_element_value_count_value_count_value_count\
    \ = operator_table_element_value_count_value_count_value[1]\n    local operand_table_element_value_count_value_count_value_count\
    \ = operand_table_element_value_count_value_count_value[1]\n    local operator_table_element_value_count_value_count_value_count_value\
    \ = operator_table_element_value_count_value_count_value[2]\n    local operand_table_element_value_count_value_count_value_count_value\
    \ = operand_table_element_value_count_value_count_value[2]\n    local operator_table_element_value_count_value_count_value_count_value_count\
    \ = operator_table_element_value_count_value_count_value_count_value[1]\n    local\
    \ operand_table_element_value_count_value_count_value_count_value_count = operand_table_element_value_count_value_count_value_count_value[1]\n\
    \    local operator_table_element_value_count_value_count_value_count_value_count_value\
    \ = operator_table_element_value_count_value_count_value_count_value[2]\n    local\
    \ operand_table_element_value_count_value_count_value_count_value_count_value\
    \ = operand_table_element_value_count_value_count_value_count_value[2]\n    local\
    \ operator_table_element_value_count_value_count_value_count_value_count_value_count\
    \ = operator_table_", "\tlocal result = nil\n\tlocal index = 1\n\tlocal length\
    \ = #operand\n\twhile index <= length do\n\t\tlocal operator = operator[index]\n\
    \t\tlocal operand1 = operand[index]\n\t\tlocal operand2 = operand[index + 1]\n\
    \t\tif operator == '+' then\n\t\t\tresult = operand1 + operand2\n\t\telseif operator\
    \ == '-' then\n\t\t\tresult = operand1 - operand2\n\t\telseif operator == '*'\
    \ then\n\t\t\tresult = operand1 * operand2\n\t\telseif operator == '/' then\n\t\
    \t\tresult = operand1 / operand2\n\t\telseif operator == '//' then\n\t\t\tresult\
    \ = operand1 // operand2\n\t\telseif operator == '**' then\n\t\t\tresult = operand1\
    \ ^ operand2\n\t\tend\n\t\tindex = index + 2\n\tend\n\treturn result\nend", " \
    \   local result = nil\n    local length = #operand\n    for i = 1, length do\n\
    \        local operand1 = operand[i]\n        local operand2 = operand[length\
    \ - i - 1]\n        local operator1 = operator[i]\n        local operator2 = operator[length\
    \ - i - 1]\n        local result = operand1 + operand2\n        if operator1 ~=\
    \ '-' then\n            result = operator1 .. result\n        end\n        if\
    \ operator2 ~= '-' then\n            result = result .. operator2\n        end\n\
    \    end\n    return result\nend", "  local result = operand[1]\n  for i = 2,\
    \ #operand do\n    result = operator[operator](result, operand[i])\n  end\n  return\
    \ result\nend", "    local result = operand[1]\n    for i = 2, #operand do\n \
    \       result = operator[operator](result, operand[i])\n    end\n    return result\n\
    end", "\tlocal result = nil\n\tlocal length = #operand\n\tlocal i = 0\n\tlocal\
    \ j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o\
    \ = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t =\
    \ 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\
    \tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\t\
    local e = 0\n\tlocal f = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal\
    \ j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o\
    \ = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t =\
    \ 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\
    \tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\t\
    local e = 0\n\tlocal f = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal\
    \ j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o\
    \ = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t =\
    \ 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\
    \tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\t\
    local e = 0\n\tlocal f = 0\n\tlocal g = 0\n\tlocal h = 0\n\tlocal i = 0\n\tlocal\
    \ j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\tlocal n = 0\n\tlocal o\
    \ = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal s = 0\n\tlocal t =\
    \ 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x = 0\n\tlocal y = 0\n\
    \tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 0\n\tlocal d = 0\n\t\
    local e = 0\n\tlocal f = 0", "    local result = nil\n    local index = 1\n  \
    \  local length = #operand\n    while index < length do\n        local operator\
    \ = operator[index]\n        local operand1 = operand[index]\n        local operand2\
    \ = operand[index + 1]\n        local operator1 = operator[1]\n        local operator2\
    \ = operator[2]\n        local operator3 = operator[3]\n        local operator4\
    \ = operator[4]\n        local operator5 = operator[5]\n        local operator6\
    \ = operator[6]\n        local operator7 = operator[7]\n        local operator8\
    \ = operator[8]\n        local operator9 = operator[9]\n        local operator10\
    \ = operator[10]\n        local operator11 = operator[11]\n        local operator12\
    \ = operator[12]\n        local operator13 = operator[13]\n        local operator14\
    \ = operator[14]\n        local operator15 = operator[15]\n        local operator16\
    \ = operator[16]\n        local operator17 = operator[17]\n        local operator18\
    \ = operator[18]\n        local operator19 = operator[19]\n        local operator20\
    \ = operator[20]\n        local operator21 = operator[21]\n        local operator22\
    \ = operator[22]\n        local operator23 = operator[23]\n        local operator24\
    \ = operator[24]\n        local operator25 = operator[25]\n        local operator26\
    \ = operator[26]\n        local operator27 = operator[27]\n        local operator28\
    \ = operator[28]\n        local operator29 = operator[29]\n        local operator30\
    \ = operator[30]\n        local operator31 = operator[31]\n        local operator32\
    \ = operator[32]\n        local operator33 = operator[33]\n        local operator34\
    \ = operator[34]\n        local operator35 = operator[35]\n        local operator36\
    \ = operator[36]\n        local operator37 = operator[37]\n        local operator38\
    \ = operator[38]\n        local operator39 = operator[39]\n        local operator40\
    \ = operator[40]\n        local operator41 = operator[41]\n        local operator42\
    \ = operator[42]\n        local operator43 = operator[43]\n        local operator44\
    \ = operator[44]\n        local operator45 = operator[45]\n        local operator46\
    \ = operator[46]\n        local operator47 = operator[47]\n        local operator48\
    \ = operator[48]\n        local operator49 = operator[49]\n        local operator50\
    \ = operator[50]\n        local operator5", "    local result = nil\n    local\
    \ operator_count = #operator\n    local operand_count = #operand\n    local operator_table\
    \ = operator\n    local operand_table = operand\n    local operator_pointer =\
    \ 1\n    local operand_pointer = 1\n    local operator_stack = {}\n    local operand_stack\
    \ = {}\n    local operator_pointer_stack = {}\n    local operand_pointer_stack\
    \ = {}\n    local operator_pointer_pointer = 1\n    local operand_pointer_pointer\
    \ = 1\n    local operator_pointer_pointer_pointer = 1\n    local operand_pointer_pointer_pointer\
    \ = 1\n    local operator_pointer_pointer_pointer_pointer = 1\n    local operand_pointer_pointer_pointer_pointer\
    \ = 1\n    local operator_pointer_pointer_pointer_pointer_pointer = 1\n    local\
    \ operand_pointer_pointer_pointer_pointer_pointer = 1\n    local operator_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 1\n    local operand_pointer_pointer_pointer_pointer_pointer_pointer = 1\n\
    \    local operator_pointer_pointer_pointer_pointer_pointer_pointer_pointer =\
    \ 1\n    local operand_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 1\n    local operator_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 1\n    local operand_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 1\n    local operator_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 1\n    local operand_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 1\n    local operator_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 1\n    local operand_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 1\n    local operator_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 1\n    local operand_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 1\n    local operator_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 1\n    local operand_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer",
  "    local result = operand[1]\n    for i = 2, #operand do\n        result = operator[operator](result,\
    \ operand[i])\n    end\n    return result\nend", "  local result = nil\n  local\
    \ length = #operand\n  local i = 0\n  local j = 0\n  local k = 0\n  local l =\
    \ 0\n  local m = 0\n  local n = 0\n  local o = 0\n  local p = 0\n  local q = 0\n\
    \  local r = 0\n  local s = 0\n  local t = 0\n  local u = 0\n  local v = 0\n \
    \ local w = 0\n  local x = 0\n  local y = 0\n  local z = 0\n  local a = 0\n  local\
    \ b = 0\n  local c = 0\n  local d = 0\n  local e = 0\n  local f = 0\n  local g\
    \ = 0\n  local h = 0\n  local i = 1\n  local j = 1\n  local k = 1\n  local l =\
    \ 1\n  local m = 1\n  local n = 2\n  local o = 2\n  local p = 2\n  local q = 2\n\
    \  local r = 2\n  local s = 2\n  local t = 2\n  local u = 2\n  local v = 2\n \
    \ local w = 2\n  local x = 2\n  local y = 2\n  local z = 2\n  local a = 2\n  local\
    \ b = 2\n  local c = 2\n  local d = 2\n  local e = 2\n  local f = 2\n  local g\
    \ = 2\n  local h = 2\n  local i = 2\n  local j = 2\n  local k = 2\n  local l =\
    \ 2\n  local m = 2\n  local n = 2\n  local o = 2\n  local p = 2\n  local q = 2\n\
    \  local r = 2\n  local s = 2\n  local t = 2\n  local u = 2\n  local v = 2\n \
    \ local w = 2\n  local x = 2\n  local y = 2\n  local z = 2\n  local a = 2\n  local\
    \ b = 2\n  local c = 2\n  local d = 2\n  local e = 2\n  local f = 2\n  local g\
    \ = 2\n  local h = 2\n  local i = 2\n  local j = 2\n  local k = 2\n  local l =\
    \ 2\n  local m = 2\n  local n = 2\n  local o = 2\n  local p = 2\n  local q = 2\n\
    \  local r = 2\n  local s = 2\n  local t = 2\n  local u = 2\n  local v = 2\n \
    \ local w = 2\n  local x = 2\n  local y = 2\n  local z = 2\n  local a = 2\n  local\
    \ b = 2\n  local c = 2\n  local d = 2\n  local e", "  local result = nil\n  local\
    \ length = #operand\n  for i = 1, length do\n    local op = operator[i]\n    local\
    \ a = operand[i]\n    local b = operand[i + 1]\n    if op == '+' then\n      result\
    \ = a + b\n    elseif op == '-' then\n      result = a - b\n    elseif op == '*'\
    \ then\n      result = a * b\n    elseif op == '/' then\n      result = a / b\n\
    \    elseif op == '//' then\n      result = a // b\n    elseif op == '**' then\n\
    \      result = a ** b\n    end\n  end\n  return result\nend", "  local result\
    \ = nil\n  local length = #operand\n  for i = 1, length do\n    local operand1\
    \ = operand[i]\n    local operand2 = operand[i + 1]\n    local operator1 = operator[i]\n\
    \    local operator2 = operator[i + 1]\n    local operation = operator1 * operand1\
    \ + operator2 * operand2\n    if operation > result then\n      result = operation\n\
    \    end\n  end\n  return result\nend", "    local result = operand[1]\n    for\
    \ i = 2, #operand do\n        result = operator[operand[i-1]](result, operand[i])\n\
    \    end\n    return result\nend", "  local result = nil\n  local length = #operand\n\
    \  local i = 1\n  while i <= length do\n    local operator1 = operator[i]\n  \
    \  local operand1 = operand[i]\n    local operator2 = operator[i - 1]\n    local\
    \ operand2 = operand[i - 1]\n    local operator3 = operator[i + 1]\n    local\
    \ operand3 = operand[i + 1]\n    local operator4 = operator[i + 2]\n    local\
    \ operand4 = operand[i + 2]\n    local operator5 = operator[i + 3]\n    local\
    \ operand5 = operand[i + 3]\n    local operator6 = operator[i + 4]\n    local\
    \ operand6 = operand[i + 4]\n    local operator7 = operator[i + 5]\n    local\
    \ operand7 = operand[i + 5]\n    local operator8 = operator[i + 6]\n    local\
    \ operand8 = operand[i + 6]\n    local operator9 = operator[i + 7]\n    local\
    \ operand9 = operand[i + 7]\n    local operator10 = operator[i + 8]\n    local\
    \ operand10 = operand[i + 8]\n    local operator11 = operator[i + 9]\n    local\
    \ operand11 = operand[i + 9]\n    local operator12 = operator[i + 10]\n    local\
    \ operand12 = operand[i + 10]\n    local operator13 = operator[i + 11]\n    local\
    \ operand13 = operand[i + 11]\n    local operator14 = operator[i + 12]\n    local\
    \ operand14 = operand[i + 12]\n    local operator15 = operator[i + 13]\n    local\
    \ operand15 = operand[i + 13]\n    local operator16 = operator[i + 14]\n    local\
    \ operand16 = operand[i + 14]\n    local operator17 = operator[i + 15]\n    local\
    \ operand17 = operand[i + 15]\n    local operator18 = operator[i + 16]\n    local\
    \ operand18 = operand[i + 16]\n    local operator19 = operator[i + 17]\n    local\
    \ operand19 = operand[i + 17]\n    local operator20 = operator[i + 18]\n    local\
    \ operand20 = operand[i + 18]\n    local operator21 = operator[i + 19]\n    local\
    \ operand21 = operand[i + 19]\n    local operator22 = operator[i + 20]\n    local\
    \ operand22 = operand[i + 20]\n    local operator23 = operator[i + 21]\n    local\
    \ operand23 = operand[i + 21]\n    local operator24 = operator[i + 22]\n    local\
    \ operand24 = operand[i + 22]\n    local operator25 = operator[i + 23]\n    local\
    \ operand25 = operand[i + 23]\n    local operator26 = operator[i + 24]\n    local\
    \ operand26 = operand[i + 24]\n    local operator27 = operator[i + 25]\n    local\
    \ operand27 = operand[i + 25]\n    local ", "    local result = nil\n    local\
    \ length = #operand\n    for i = 1, length do\n        local op = operator[i]\n\
    \        local a = operand[i-1]\n        local b = operand[i]\n        local c\
    \ = operand[i+1]\n        local d = operand[i+2]\n        local e = operand[i+3]\n\
    \        local f = operand[i+4]\n        local g = operand[i+5]\n        local\
    \ h = operand[i+6]\n        local i = operand[i+7]\n        local j = operand[i+8]\n\
    \        local k = operand[i+9]\n        local l = operand[i+10]\n        local\
    \ m = operand[i+11]\n        local n = operand[i+12]\n        local o = operand[i+13]\n\
    \        local p = operand[i+14]\n        local q = operand[i+15]\n        local\
    \ r = operand[i+16]\n        local s = operand[i+17]\n        local t = operand[i+18]\n\
    \        local u = operand[i+19]\n        local v = operand[i+20]\n        local\
    \ w = operand[i+21]\n        local x = operand[i+22]\n        local y = operand[i+23]\n\
    \        local z = operand[i+24]\n        local a = operand[i+25]\n        local\
    \ b = operand[i+26]\n        local c = operand[i+27]\n        local d = operand[i+28]\n\
    \        local e = operand[i+29]\n        local f = operand[i+30]\n        local\
    \ g = operand[i+31]\n        local h = operand[i+32]\n        local i = operand[i+33]\n\
    \        local j = operand[i+34]\n        local k = operand[i+35]\n        local\
    \ l = operand[i+36]\n        local m = operand[i+37]\n        local n = operand[i+38]\n\
    \        local o = operand[i+39]\n        local p = operand[i+40]\n        local\
    \ q = operand[i+41]\n        local r = operand[i+42]\n        local s = operand[i+43]\n\
    \        local t = operand[i+44]\n        local u = operand[i+45]\n        local\
    \ v = operand[i+46]\n        local w = operand[i+47]\n        local x = operand[i+48]\n\
    \        local y = operand[i+49]\n        local z = operand[i+50]\n        local\
    \ a = operand[i+51]\n        local b = operand[i+52]\n        local c = operand[i+53]\n\
    \        local d = operand[i+54]\n        local e = operand[i+55]\n        local\
    \ f = operand[i+56]\n        local g = operand[i+57]\n        local h = operand[i+58]\n\
    \        local i = operand[i+59]\n        local j = operand[i+60]\n        local\
    \ k = operand[i+61]\n", "  local result = 0\n  local index = 1\n  while index\
    \ <= #operand do\n    local operator1 = operator[1]\n    local operator2 = operator[2]\n\
    \    local operand1 = operand[index]\n    local operand2 = operand[index + 1]\n\
    \    local operation = operator1 * operand1 + operator2 * operand2\n    local\
    \ remainder = operation % operand1\n    local quotient = operation / operand1\n\
    \    result = result + quotient * operand2\n    index = index + 2\n  end\n  return\
    \ result\nend", "    local result = nil\n    local operator_count = #operator\n\
    \    local operand_count = #operand\n    local operator_table = operator\n   \
    \ local operand_table = operand\n    local operator_pointer = 1\n    local operand_pointer\
    \ = 1\n    local operator_pointer_limit = operator_count - 1\n    local operand_pointer_limit\
    \ = operand_count - 1\n    while operator_pointer <= operator_pointer_limit and\
    \ operand_pointer <= operand_pointer_limit do\n        local operator = operator_table[operator_pointer]\n\
    \        local operand = operand_table[operand_pointer]\n        local operator_pointer_next\
    \ = operator_pointer + operator_count\n        local operand_pointer_next = operand_pointer\
    \ + operand_count\n        if operator_pointer_next > operator_pointer_limit then\n\
    \            operator_pointer_next = operator_pointer_limit\n        end\n   \
    \     if operand_pointer_next > operand_pointer_limit then\n            operand_pointer_next\
    \ = operand_pointer_limit\n        end\n        if operator ~= '+' and operator\
    \ ~= '-' and operator ~= '*' and operator ~= '//' and operator ~= '**' then\n\
    \            assert(false, \"Invalid operator: \" .. operator)\n        end\n\
    \        if operand ~= 0 and operand ~= 1 and operand ~= 2 and operand ~= 3 and\
    \ operand ~= 4 and operand ~= 5 then\n            assert(false, \"Invalid operand:\
    \ \" .. operand)\n        end\n        local operator_pointer_next_value = operator_table[operator_pointer_next]\n\
    \        local operand_pointer_next_value = operand_table[operand_pointer_next]\n\
    \        if operand == 0 then\n            if operator_pointer_next_value ~= '-'\
    \ then\n                result = operator_pointer_next_value * operand_pointer_next_value\n\
    \            end\n        elseif operand == 1 then\n            if operator_pointer_next_value\
    \ ~= '*' then\n                result = operator_pointer_next_value * operand_pointer_next_value\n\
    \            end\n        elseif operand == 2 then\n            if operator_pointer_next_value\
    \ ~= '//' then\n                result = operator_pointer_next_value * operand_pointer_next_value\n\
    \            end\n        elseif operand == 3 then\n            if operator_pointer_next_value\
    \ ~= '**' then\n                result = operator_pointer_next_value * operand_pointer_next_value\n\
    \            end\n        elseif operand == 4 then\n            if operator_pointer_next_value\
    \ ~= '**' then\n                result = operator_pointer_next_value * operand_pointer_next_value\n\
    \            end\n        elseif operand == 5 then\n            if operator_pointer_next_value\
    \ ~= '**' then\n                result = operator_pointer_next_value * operand_pointer_next_value",
  "\tlocal result = nil\n\tlocal length = #operand\n\tlocal i = 1\n\twhile i < length\
    \ do\n\t\tlocal operator = operator[i]\n\t\tlocal operand1 = operand[i]\n\t\t\
    local operand2 = operand[i + 1]\n\t\tlocal operator1 = operator[1]\n\t\tlocal\
    \ operator2 = operator[2]\n\t\tlocal operator3 = operator[3]\n\t\tlocal operator4\
    \ = operator[4]\n\t\tlocal operator5 = operator[5]\n\t\tlocal operator6 = operator[6]\n\
    \t\tlocal operator7 = operator[7]\n\t\tlocal operator8 = operator[8]\n\t\tlocal\
    \ operator9 = operator[9]\n\t\tlocal operator10 = operator[10]\n\t\tlocal operator11\
    \ = operator[11]\n\t\tlocal operator12 = operator[12]\n\t\tlocal operator13 =\
    \ operator[13]\n\t\tlocal operator14 = operator[14]\n\t\tlocal operator15 = operator[15]\n\
    \t\tlocal operator16 = operator[16]\n\t\tlocal operator17 = operator[17]\n\t\t\
    local operator18 = operator[18]\n\t\tlocal operator19 = operator[19]\n\t\tlocal\
    \ operator20 = operator[20]\n\t\tlocal operator21 = operator[21]\n\t\tlocal operator22\
    \ = operator[22]\n\t\tlocal operator23 = operator[23]\n\t\tlocal operator24 =\
    \ operator[24]\n\t\tlocal operator25 = operator[25]\n\t\tlocal operator26 = operator[26]\n\
    \t\tlocal operator27 = operator[27]\n\t\tlocal operator28 = operator[28]\n\t\t\
    local operator29 = operator[29]\n\t\tlocal operator30 = operator[30]\n\t\tlocal\
    \ operator31 = operator[31]\n\t\tlocal operator32 = operator[32]\n\t\tlocal operator33\
    \ = operator[33]\n\t\tlocal operator34 = operator[34]\n\t\tlocal operator35 =\
    \ operator[35]\n\t\tlocal operator36 = operator[36]\n\t\tlocal operator37 = operator[37]\n\
    \t\tlocal operator38 = operator[38]\n\t\tlocal operator39 = operator[39]\n\t\t\
    local operator40 = operator[40]\n\t\tlocal operator41 = operator[41]\n\t\tlocal\
    \ operator42 = operator[42]\n\t\tlocal operator43 = operator[43]\n\t\tlocal operator44\
    \ = operator[44]\n\t\tlocal operator45 = operator[45]\n\t\tlocal operator46 =\
    \ operator[46]\n\t\tlocal operator47 = operator[47]\n\t\tlocal operator48 = operator[48]\n\
    \t\tlocal operator49 = operator[49]\n\t\tlocal operator50 = operator[50]\n\t\t\
    local operator5", "  local result = nil\n  local length = #operand\n  for i =\
    \ 1, length do\n    local operand1 = operand[i]\n    local operand2 = operand[i\
    \ - 1]\n    local operator1 = operator[i]\n    local operator2 = operator[i -\
    \ 1]\n    local operation = operator1 + operator2\n    if operation == '+' then\n\
    \      result = result + operand1 + operand2\n    elseif operation == '-' then\n\
    \      result = result - operand1 - operand2\n    elseif operation == '*' then\n\
    \      result = result * operand1 * operand2\n    elseif operation == '/' then\n\
    \      result = result / operand1 / operand2\n    elseif operation == '//' then\n\
    \      result = result // operand1 // operand2\n    elseif operation == '**' then\n\
    \      result = result ** operand1\n    end\n  end\n  return result\nend", " \
    \ local result = nil\n  local operator_count = #operator\n  local operand_count\
    \ = #operand\n  if operator_count > 0 and operand_count > 0 then\n    local operator_index\
    \ = -1\n    local operand_index = -1\n    local operator_stack = {}\n    local\
    \ operand_stack = {}\n    local operator_stack_size = -1\n    local operand_stack_size\
    \ = -1\n    local operator_stack_index = 0\n    local operand_stack_index = 0\n\
    \    local operator_stack_value = 0\n    local operand_stack_value = 0\n    local\
    \ operator_stack_pointer = 0\n    local operand_stack_pointer = 0\n    local operator_stack_pointer_pointer\
    \ = 0\n    local operand_stack_pointer_pointer = 0\n    local operator_stack_pointer_pointer_pointer\
    \ = 0\n    local operator_stack_pointer_pointer_pointer_pointer = 0\n    local\
    \ operator_stack_pointer_pointer_pointer_pointer_pointer = 0\n    local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0\n    local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0\n    local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0\n    local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0\n    local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0\n    local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0\n    local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0\n    local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0\n    local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0\n    local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0\n    local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0\n    local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0\n    local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0\n    local operator_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_",
  "  local result = 0\n  local i = 0\n  local j = 0\n  local k = 0\n  local l = 0\n\
    \  local m = 0\n  local n = 0\n  local o = 0\n  local p = 0\n  local q = 0\n \
    \ local r = 0\n  local s = 0\n  local t = 0\n  local u = 0\n  local v = 0\n  local\
    \ w = 0\n  local x = 0\n  local y = 0\n  local z = 0\n  local a = 0\n  local b\
    \ = 0\n  local c = 0\n  local d = 0\n  local e = 0\n  local f = 0\n  local g =\
    \ 0\n  local h = 0\n  local i = 0\n  local j = 0\n  local k = 0\n  local l = 0\n\
    \  local m = 0\n  local n = 0\n  local o = 0\n  local p = 0\n  local q = 0\n \
    \ local r = 0\n  local s = 0\n  local t = 0\n  local u = 0\n  local v = 0\n  local\
    \ w = 0\n  local x = 0\n  local y = 0\n  local z = 0\n  local a = 0\n  local b\
    \ = 0\n  local c = 0\n  local d = 0\n  local e = 0\n  local f = 0\n  local g =\
    \ 0\n  local h = 0\n  local i = 0\n  local j = 0\n  local k = 0\n  local l = 0\n\
    \  local m = 0\n  local n = 0\n  local o = 0\n  local p = 0\n  local q = 0\n \
    \ local r = 0\n  local s = 0\n  local t = 0\n  local u = 0\n  local v = 0\n  local\
    \ w = 0\n  local x = 0\n  local y = 0\n  local z = 0\n  local a = 0\n  local b\
    \ = 0\n  local c = 0\n  local d = 0\n  local e = 0\n  local f = 0\n  local g =\
    \ 0\n  local h = 0\n  local i = 0\n  local j = 0\n  local k = 0\n  local l = 0\n\
    \  local m = 0\n  local n = 0\n  local o = 0\n  local p = 0\n  local q = 0\n \
    \ local r = 0\n  local s = 0\n  local t = 0\n  local u = 0\n  local v = 0\n  local\
    \ w = 0\n  local x = 0\n  local y = 0\n  local z = 0\n  local a = 0\n  local b\
    \ = 0\n  local c = 0\n  local d = 0\n  local e = 0\n  local f = 0\n  local g =\
    \ 0\n", "\tlocal result = nil\n\tlocal ops = operator\n\tlocal ops_length = #ops\n\
    \tlocal ops_table = nil\n\tlocal ops_table_length = nil\n\tlocal operands = operand\n\
    \tlocal operands_length = #operands\n\tlocal operands_table = nil\n\tlocal operands_table_length\
    \ = nil\n\tlocal operands_table = nil\n\tlocal operands_table_length = nil\n\t\
    local operands_table = nil\n\tlocal operands_table_length = nil\n\tlocal operands_table\
    \ = nil\n\tlocal operands_table_length = nil\n\tlocal operands_table = nil\n\t\
    local operands_table_length = nil\n\tlocal operands_table = nil\n\tlocal operands_table_length\
    \ = nil\n\tlocal operands_table = nil\n\tlocal operands_table_length = nil\n\t\
    local operands_table = nil\n\tlocal operands_table_length = nil\n\tlocal operands_table\
    \ = nil\n\tlocal operands_table_length = nil\n\tlocal operands_table = nil\n\t\
    local operands_table_length = nil\n\tlocal operands_table = nil\n\tlocal operands_table_length\
    \ = nil\n\tlocal operands_table = nil\n\tlocal operands_table_length = nil\n\t\
    local operands_table = nil\n\tlocal operands_table_length = nil\n\tlocal operands_table\
    \ = nil\n\tlocal operands_table_length = nil\n\tlocal operands_table = nil\n\t\
    local operands_table_length = nil\n\tlocal operands_table = nil\n\tlocal operands_table_length\
    \ = nil\n\tlocal operands_table = nil\n\tlocal operands_table_length = nil\n\t\
    local operands_table = nil\n\tlocal operands_table_length = nil\n\tlocal operands_table\
    \ = nil\n\tlocal operands_table_length = nil\n\tlocal operands_table = nil\n\t\
    local operands_table_length = nil\n\tlocal operands_table = nil\n\tlocal operands_table_length\
    \ = nil\n\tlocal operands_table = nil\n\tlocal operands_table_length = nil\n\t\
    local operands_table = nil\n\tlocal operands_table_length = nil\n\tlocal operands_table\
    \ = nil\n\tlocal operands_table_length = nil\n\tlocal operands_table = nil\n\t\
    local operands_table_length = nil\n\tlocal operands_table = nil\n\tlocal operands_table_length\
    \ = nil\n\tlocal operands_table = nil\n\tlocal operands_table_length = nil\n\t\
    local operands_table = nil\n\tlocal operands_table_length = nil\n\tlocal operands_table\
    \ = nil\n\tlocal operands_table_length = nil\n\tlocal operands_table = nil\n\t\
    local operands_table_length = nil\n\tlocal operands_table = nil\n\tlocal operands_table_length\
    \ = ", "\tlocal result = nil\n\tlocal operator_count = #operator\n\tlocal operand_count\
    \ = #operand\n\t\n\tif operator_count ~= operand_count then\n\t\terror(\"Operator\
    \ table has \" .. operator_count .. \" operators, operand table has \" .. operand_count\
    \ .. \" operands.\")\n\tend\n\t\n\tlocal operator_index = -1\n\tlocal operand_index\
    \ = -1\n\tlocal operator = operator[operator_index]\n\tlocal operand = operand[operand_index]\n\
    \t\n\twhile operator_index < operator_count and operand_index < operand_count\
    \ do\n\t\tlocal next_operator = operator[operator_index]\n\t\tlocal next_operand\
    \ = operand[operand_index]\n\t\t\n\t\tif next_operator == '+' then\n\t\t\tresult\
    \ = result + next_operand\n\t\telseif next_operator == '-' then\n\t\t\tresult\
    \ = result - next_operand\n\t\telseif next_operator == '*' then\n\t\t\tresult\
    \ = result * next_operand\n\t\telseif next_operator == '/' then\n\t\t\tresult\
    \ = result // next_operand\n\t\telseif next_operator == '**' then\n\t\t\tresult\
    \ = result ^ next_operand\n\t\tend\n\t\t\n\t\toperator_index = operator_index\
    \ + 1\n\t\toperand_index = operand_index + 1\n\tend\n\t\n\treturn result\nend",
  "\tlocal result = nil\n\tlocal operands = #operand\n\tlocal operators = #operator\n\
    \tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal m = 0\n\t\
    local n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r = 0\n\tlocal\
    \ s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w = 0\n\tlocal x\
    \ = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c =\
    \ 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g = 0\n\tlocal h = 0\n\
    \tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal l = 1\n\tlocal m = 1\n\t\
    local n = 2\n\tlocal o = 2\n\tlocal p = 2\n\tlocal q = 2\n\tlocal r = 2\n\tlocal\
    \ s = 2\n\tlocal t = 2\n\tlocal u = 2\n\tlocal v = 3\n\tlocal w = 4\n\tlocal x\
    \ = 5\n\tlocal y = 6\n\tlocal z = 7\n\tlocal a = 8\n\tlocal b = 9\n\tlocal c =\
    \ 10\n\tlocal d = 11\n\tlocal e = 12\n\tlocal f = 13\n\tlocal g = 14\n\tlocal\
    \ h = 15\n\tlocal i = 2\n\tlocal j = 2\n\tlocal k = 3\n\tlocal l = 4\n\tlocal\
    \ m = 5\n\tlocal n = 6\n\tlocal o = 7\n\tlocal p = 8\n\tlocal q = 9\n\tlocal r\
    \ = 10\n\tlocal s = 11\n\tlocal t = 12\n\tlocal u = 13\n\tlocal v = 14\n\tlocal\
    \ w = 15\n\tlocal x = 2\n\tlocal y = 2\n\tlocal z = 3\n\tlocal a = 4\n\tlocal\
    \ b = 5\n\tlocal c = 6\n\tlocal d = 7\n\tlocal e = 8\n\tlocal f = 9\n\tlocal g\
    \ = 10\n\tlocal h = 11\n\tlocal i = 2\n\tlocal j = 3\n\tlocal k = 4\n\tlocal l\
    \ = 5\n\tlocal m = 6\n\tlocal n = 7\n\tlocal o = 8\n\tlocal p = 9\n\tlocal q =\
    \ 10\n\tlocal r = 11\n\tlocal s = 12\n\tlocal t = 13\n\tlocal u = 14\n\tlocal\
    \ v = 15\n\tlocal w = 16\n\tlocal x = 2\n\tlocal y = 2\n\tlocal z = 3\n\tlocal\
    \ a = 4\n\tlocal b = 5\n\tlocal c = 6\n", "  local result = nil\n  local i = 0\n\
    \  local j = 0\n  local k = 0\n  local l = 0\n  local m = 0\n  local n = 0\n \
    \ local o = 0\n  local p = 0\n  local q = 0\n  local r = 0\n  local s = 0\n  local\
    \ t = 0\n  local u = 0\n  local v = 0\n  local w = 0\n  local x = 0\n  local y\
    \ = 0\n  local z = 0\n  local A = 0\n  local B = 0\n  local C = 0\n  local D =\
    \ 0\n  local E = 0\n  local F = 0\n  local G = 0\n  local H = 0\n  local I = 0\n\
    \  local J = 0\n  local K = 0\n  local L = 0\n  local M = 0\n  local N = 0\n \
    \ local O = 0\n  local P = 0\n  local Q = 0\n  local R = 0\n  local S = 0\n  local\
    \ T = 0\n  local U = 0\n  local V = 0\n  local W = 0\n  local X = 0\n  local Y\
    \ = 0\n  local Z = 0\n  local AA = 0\n  local AB = 0\n  local AC = 0\n  local\
    \ AD = 0\n  local AE = 0\n  local AF = 0\n  local AG = 0\n  local AH = 0\n  local\
    \ AI = 0\n  local AJ = 0\n  local AK = 0\n  local AL = 0\n  local AM = 0\n  local\
    \ AN = 0\n  local AO = 0\n  local AP = 0\n  local AQ = 0\n  local AR = 0\n  local\
    \ AS = 0\n  local AT = 0\n  local AU = 0\n  local AV = 0\n  local AW = 0\n  local\
    \ AX = 0\n  local AY = 0\n  local AZ = 0\n  local Aa = 0\n  local Ab = 0\n  local\
    \ Ac = 0\n  local Ad = 0\n  local Ae = 0\n  local Af = 0\n  local Ag = 0\n  local\
    \ Ah = 0\n  local Ai = 0\n  local Aj = 0\n  local Ak = 0\n  local Al = 0\n  local\
    \ Am = 0\n  local An = 0\n  local Ao = 0\n  local Ap = 0\n  local Aq = 0\n  local\
    \ Ar = 0\n  local As = 0\n  local At = 0\n  local Au = 0\n  local Av = 0\n  local\
    \ Aw = 0\n  local Ax = 0\n  local Ay = 0\n  local Az = 0\n  local Aa = 0\n  local\
    \ Ab = 0\n  local Ac = 0\n  local Ad", "  local result = operand[1]\n  for i =\
    \ 2, #operand do\n    result = operator[result] .. operand[i]\n  end\n  return\
    \ result\nend", "  local result = nil\n  local length = #operand\n  for i = 1,\
    \ length do\n    local operand1 = operand[i]\n    local operand2 = operand[i -\
    \ 1]\n    local operator1 = operator[i]\n    local operator2 = operator[i - 1]\n\
    \    local result = operand1 + operand2\n    if operator1 ~= '-' then\n      result\
    \ = operator1 .. result\n    end\n    if operator2 ~= '-' then\n      result =\
    \ result .. operator2\n    end\n  end\n  return result\nend", "    local result\
    \ = nil\n    local length = #operand\n    for i = 1, length do\n        local\
    \ operation = operator[i]\n        local operand1 = operand[i]\n        local\
    \ operand2 = operand[i + 1]\n        local operation1 = operator[i - 1]\n    \
    \    local operation2 = operator[i - 2]\n        local operation3 = operator[i\
    \ - 3]\n        local operation4 = operator[i - 4]\n        local operation5 =\
    \ operator[i - 5]\n        local operation6 = operator[i - 6]\n        local operation7\
    \ = operator[i - 7]\n        local operation8 = operator[i - 8]\n        local\
    \ operation9 = operator[i - 9]\n        local operation10 = operator[i - 10]\n\
    \        local operation11 = operator[i - 11]\n        local operation12 = operator[i\
    \ - 12]\n        local operation13 = operator[i - 13]\n        local operation14\
    \ = operator[i - 14]\n        local operation15 = operator[i - 15]\n        local\
    \ operation16 = operator[i - 16]\n        local operation17 = operator[i - 17]\n\
    \        local operation18 = operator[i - 18]\n        local operation19 = operator[i\
    \ - 19]\n        local operation20 = operator[i - 20]\n        local operation21\
    \ = operator[i - 21]\n        local operation22 = operator[i - 22]\n        local\
    \ operation23 = operator[i - 23]\n        local operation24 = operator[i - 24]\n\
    \        local operation25 = operator[i - 25]\n        local operation26 = operator[i\
    \ - 26]\n        local operation27 = operator[i - 27]\n        local operation28\
    \ = operator[i - 28]\n        local operation29 = operator[i - 29]\n        local\
    \ operation30 = operator[i - 30]\n        local operation31 = operator[i - 31]\n\
    \        local operation32 = operator[i - 32]\n        local operation33 = operator[i\
    \ - 33]\n        local operation34 = operator[i - 34]\n        local operation35\
    \ = operator[i - 35]\n        local operation36 = operator[i - 36]\n        local\
    \ operation37 = operator[i - 37]\n        local operation38 = operator[i - 38]\n\
    \        local operation39 = operator[i - 39]\n        local operation40 = operator[i\
    \ - 40]\n        local operation41 = operator[i - 41]\n        local operation42\
    \ = operator[i - 42]\n        local operation43 = operator[i - 43]\n        local\
    \ operation44 = operator[i - 44]\n        local operation45 = operator[i - 45]\n\
    \        local ", "  local result = operand[1]\n  for i = 2, #operand do\n   \
    \ result = operator[result]\n  end\n  return result\nend", "\tlocal result = nil\n\
    \tlocal ops = #operator\n\tlocal ops_size = #operand\n\tlocal ops_index = 1\n\t\
    local ops_value = operator[1]\n\tlocal ops_value = operator[ops_index]\n\tlocal\
    \ ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\t\
    local ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\
    \tlocal ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\
    \tlocal ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\
    \tlocal ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\
    \tlocal ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\
    \tlocal ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\
    \tlocal ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\
    \tlocal ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\
    \tlocal ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\
    \tlocal ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\
    \tlocal ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\
    \tlocal ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\
    \tlocal ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\
    \tlocal ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\
    \tlocal ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\
    \tlocal ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\
    \tlocal ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\
    \tlocal ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\
    \tlocal ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\
    \tlocal ops_value = operator[ops_index]\n\tlocal ops_value = operator[ops_index]\n\
    \tlocal ops_", "\tlocal result = nil\n\tlocal operator_count = #operator\n\tlocal\
    \ operand_count = #operand\n\t\n\tif operator_count ~= operand_count then\n\t\t\
    print('Error: Operator and operand tables must be of equal length.')\n\t\treturn\
    \ nil\n\tend\n\t\n\t-- Initialize result to zero.\n\tresult = 0\n\t\n\t-- Iterate\
    \ through each operand and perform the operation.\n\tfor i = 1, operand_count\
    \ do\n\t\t-- Get the current operand and perform the operation.\n\t\tlocal current_operand\
    \ = operand[i]\n\t\tlocal current_operator = operator[i]\n\t\t\n\t\t-- Perform\
    \ the operation.\n\t\tresult = result + current_operand * current_operator\n\t\
    end\n\t\n\t-- Return the result.\n\treturn result\nend", "  local result = operand[1]\n\
    \  for i = 2, #operand do\n    result = operator[operator](result, operand[i])\n\
    \  end\n  return result\nend", "  local result = nil\n  local length = #operand\n\
    \  for i = 1, length do\n    local operand1 = operand[i]\n    local operand2 =\
    \ operand[length - i - 1]\n    local operator1 = operator[i]\n    local operator2\
    \ = operator[length - i - 1]\n    local result = operand1 + operand2\n    if operator1\
    \ ~= operator2 then\n      result = operator1 .. result\n    end\n  end\n  return\
    \ result\nend", "\tlocal result = nil\n\tlocal operator_count = #operator\n\t\
    local operand_count = #operand\n\tlocal operator_table = operator\n\tlocal operand_table\
    \ = operand\n\tlocal operator_stack = { }\n\tlocal operand_stack = { }\n\tlocal\
    \ operator_stack_size = #operator_stack\n\tlocal operand_stack_size = #operand_stack\n\
    \tlocal operator_stack_index = 0\n\tlocal operand_stack_index = 0\n\tlocal operator_stack_value\
    \ = nil\n\tlocal operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\
    \tlocal operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\tlocal\
    \ operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\tlocal operand_stack_value\
    \ = nil\n\tlocal operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\
    \tlocal operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\tlocal\
    \ operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\tlocal operator_stack_value\
    \ = nil\n\tlocal operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\
    \tlocal operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\tlocal\
    \ operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\tlocal operand_stack_value\
    \ = nil\n\tlocal operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\
    \tlocal operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\tlocal\
    \ operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\tlocal operator_stack_value\
    \ = nil\n\tlocal operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\
    \tlocal operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\tlocal\
    \ operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\tlocal operand_stack_value\
    \ = nil\n\tlocal operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\
    \tlocal operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\tlocal\
    \ operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\tlocal operator_stack_value\
    \ = nil\n\tlocal operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\
    \tlocal operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\tlocal\
    \ operand_stack_value = nil\n\tlocal operator_stack_value = nil\n\tlocal operand_stack_value\
    \ = nil\n\tlocal operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\
    \tlocal operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\tlocal\
    \ operator_stack_value = nil\n\tlocal operand_stack_value = nil\n\tlocal operator_stack_value\
    \ = nil", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\t\tresult =\
    \ operator[result] .. operand[i]\n\tend\n\treturn result\nend", "  local result\
    \ = nil\n  local length = #operand\n  local index = 1\n  local ops = operator\n\
    \  local ops_length = #ops\n  local ops_index = 1\n  local ops_value = ops[ops_index]\n\
    \  local ops_value = ops_value\n  local ops_value = ops_value\n  while index <\
    \ length do\n    local value = operand[index]\n    if ops_value == 1 then\n  \
    \    result = result + value\n    elseif ops_value == 2 then\n      result = result\
    \ - value\n    elseif ops_value == 3 then\n      result = result * value\n   \
    \ elseif ops_value == 4 then\n      result = result // value\n    elseif ops_value\
    \ == 5 then\n      result = result ^ value\n    elseif ops_value == 6 then\n \
    \     result = result ** value\n    end\n    index = index + 1\n    ops_index\
    \ = ops_index + 1\n    ops_value = ops[ops_index]\n  end\n  return result\nend",
  "    local result = 0\n    local operator_count = #operator\n    local operand_count\
    \ = #operand\n    local operator_table = operator\n    local operand_table = operand\n\
    \    local operator_index = 1\n    local operand_index = 1\n    local operator_symbol\
    \ = operator[operator_index]\n    local operand_symbol = operand[operand_index]\n\
    \    while operator_index < operator_count and operand_index < operand_count do\n\
    \        local operator_symbol = operator[operator_index]\n        local operand_symbol\
    \ = operand[operand_index]\n        if operator_symbol == '+' or operator_symbol\
    \ == '-' or operator_symbol == '*' or operator_symbol == '/' or operator_symbol\
    \ == '//' or operator_symbol == '**' then\n            local left_operand = operand_table[operand_index]\n\
    \            local right_operand = operand_table[operand_index + 1]\n        \
    \    local left_operand = left_operand and left_operand or 0\n            local\
    \ right_operand = right_operand and right_operand or 0\n            local left_operand\
    \ = left_operand and left_operand or 0\n            local right_operand = right_operand\
    \ and right_operand or 0\n            local left_operand = left_operand and left_operand\
    \ or 0\n            local right_operand = right_operand and right_operand or 0\n\
    \            local left_operand = left_operand and left_operand or 0\n       \
    \     local right_operand = right_operand and right_operand or 0\n           \
    \ local left_operand = left_operand and left_operand or 0\n            local right_operand\
    \ = right_operand and right_operand or 0\n            local left_operand = left_operand\
    \ and left_operand or 0\n            local right_operand = right_operand and right_operand\
    \ or 0\n            local left_operand = left_operand and left_operand or 0\n\
    \            local right_operand = right_operand and right_operand or 0\n    \
    \        local left_operand = left_operand and left_operand or 0\n           \
    \ local right_operand = right_operand and right_operand or 0\n            local\
    \ left_operand = left_operand and left_operand or 0\n            local right_operand\
    \ = right_operand and right_operand or 0\n            local left_operand = left_operand\
    \ and left_operand or 0\n            local right_operand = right_operand and right_operand\
    \ or 0\n            local left_operand = left_operand and left_operand or 0\n\
    \            local right_operand = right_operand and right_operand or 0\n    \
    \        local left_operand = left_operand and left_operand or 0\n           \
    \ local right_operand = right_operand and right_operand or 0\n            local\
    \ left_operand = left_operand and left_operand or 0\n            local right_operand\
    \ = right_operand and right_operand or 0\n            local left_operand = left_operand\
    \ and left_operand ", "\tlocal result = nil\n\tlocal length = #operand\n\tlocal\
    \ index = 1\n\twhile index <= length do\n\t\tlocal operation = operator[index]\n\
    \t\tlocal operand1 = operand[index]\n\t\tlocal operand2 = operand[index + 1]\n\
    \t\tlocal result1 = nil\n\t\tlocal result2 = nil\n\t\tif operation == '+' then\n\
    \t\t\tresult1 = operand1 + operand2\n\t\telseif operation == '-' then\n\t\t\t\
    result1 = operand1 - operand2\n\t\telseif operation == '*' then\n\t\t\tresult1\
    \ = operand1 * operand2\n\t\telseif operation == '/' then\n\t\t\tresult1 = operand1\
    \ // operand2\n\t\telseif operation == '**' then\n\t\t\tresult1 = operand1 **\
    \ operand2\n\t\tend\n\t\tif result1 ~= nil then\n\t\t\tresult = result1\n\t\t\
    end\n\t\tindex = index + 1\n\tend\n\treturn result\nend", "    local result =\
    \ operand[1]\n    for i = 2, #operand do\n        result = operator[operator](result,\
    \ operand[i])\n    end\n    return result\nend", "\tlocal result = nil\n\tlocal\
    \ ops = operator\n\tlocal ops_len = #ops\n\tlocal ops_table = operand\n\tlocal\
    \ ops_table_len = #ops_table\n\tlocal ops_table_last = ops_table[ops_table_len\
    \ - 1]\n\tlocal ops_table_first = ops_table[1]\n\tlocal ops_table_first_last =\
    \ ops_table_first[ops_table_len - 1]\n\tlocal ops_table_first_first = ops_table_first[1]\n\
    \tlocal ops_table_first_first_last = ops_table_first_first[ops_table_len - 1]\n\
    \tlocal ops_table_first_first_first = ops_table_first_first[1]\n\tlocal ops_table_first_first_first_last\
    \ = ops_table_first_first_first[ops_table_len - 1]\n\tlocal ops_table_first_first_first_first_last\
    \ = ops_table_first_first_first_first[ops_table_len - 1]\n\tlocal ops_table_first_first_first_first_first_last\
    \ = ops_table_first_first_first_first_first[ops_table_len - 1]\n\tlocal ops_table_first_first_first_first_first_first_last\
    \ = ops_table_first_first_first_first_first_first[ops_table_len - 1]\n\tlocal\
    \ ops_table_first_first_first_first_first_first_last_last = ops_table_first_first_first_first_first_first_last[ops_table_len\
    \ - 1]\n\tlocal ops_table_first_first_first_first_first_first_last_last_last =\
    \ ops_table_first_first_first_first_first_first_last_last[ops_table_len - 1]\n\
    \tlocal ops_table_first_first_first_first_first_first_last_last_last_last = ops_table_first_first_first_first_first_last_last_last[ops_table_len\
    \ - 1]\n\tlocal ops_table_first_first_first_first_first_last_last_last_last_last\
    \ = ops_table_first_first_first_first_first_last_last_last_last[ops_table_len\
    \ - 1]\n\tlocal ops_table_first_first_first_first_last_last_last_last_last_last\
    \ = ops_table_first_first_first_first_last_last_last_last_last[ops_table_len -\
    \ 1]\n\tlocal ops_table_first_first_first_last_last_last_last_last_last_last =\
    \ ops_table_first_first_first_last_last_last_last_last_last_last[ops_table_len\
    \ - 1]\n\tlocal ops_table_first_first_last_last_last_last_last_last_last_last\
    \ = ops_table_first_first_last_last_last_last_last_last_last_last_last[ops_table_len\
    \ - 1]\n\tlocal ops_table_first_last_last_last_last_last_last_last_last_last_last\
    \ = ops_table_first_last_last_last_last_last_last_last_last_last_last_last[ops_table_len\
    \ - 1]\n\tlocal ops_table_last_last_last_last_last_last_", "  local result = nil\n\
    \  local length = #operand\n  local index = 1\n  local operator_index = 1\n  local\
    \ operand_index = 1\n  while index < length do\n    local operator = operator[operator_index]\n\
    \    local operand = operand[operand_index]\n    local operator_index = (operator_index\
    \ + 1) % #operator\n    local operand_index = (operand_index + 1) % #operand\n\
    \    local result = result + operator * operand\n  end\n  return result\nend",
  "    local result = operand[1]\n    for i = 2, #operand do\n        result = operator[operator](result,\
    \ operand[i])\n    end\n    return result\nend", "    local result = operand[1]\n\
    \    for i = 2, #operand do\n        result = operator[operator](result, operand[i])\n\
    \    end\n    return result\nend", "  local result = nil\n  local length = #operand\n\
    \  local i = 1\n  while i <= length do\n    local op = operator[i]\n    local\
    \ a = operand[i-1]\n    local b = operand[i]\n    local c = operand[i+1]\n   \
    \ local d = operand[i+2]\n    local e = operand[i+3]\n    local f = operand[i+4]\n\
    \    local g = operand[i+5]\n    local h = operand[i+6]\n    local i = i + 7\n\
    \    if op == '+' then\n      result = a + b\n    elseif op == '-' then\n    \
    \  result = a - b\n    elseif op == '*' then\n      result = a * b\n    elseif\
    \ op == '/' then\n      result = a / b\n    elseif op == '//' then\n      result\
    \ = a // b\n    elseif op == '**' then\n      result = a ** b\n    end\n  end\n\
    \  return result\nend", "    local result = nil\n    local operators = #operator\n\
    \    local operands = #operand\n    local i = 0\n    local j = 0\n    local k\
    \ = 0\n    local l = 0\n    local m = 0\n    local n = 0\n    local o = 0\n  \
    \  local p = 0\n    local q = 0\n    local r = 0\n    local s = 0\n    local t\
    \ = 0\n    local u = 0\n    local v = 0\n    local w = 0\n    local x = 0\n  \
    \  local y = 0\n    local z = 0\n    local A = 0\n    local B = 0\n    local C\
    \ = 0\n    local D = 0\n    local E = 0\n    local F = 0\n    local G = 0\n  \
    \  local H = 0\n    local I = 0\n    local J = 0\n    local K = 0\n    local L\
    \ = 0\n    local M = 0\n    local N = 0\n    local O = 0\n    local P = 0\n  \
    \  local Q = 0\n    local R = 0\n    local S = 0\n    local T = 0\n    local U\
    \ = 0\n    local V = 0\n    local W = 0\n    local X = 0\n    local Y = 0\n  \
    \  local Z = 0\n    local AA = 0\n    local AB = 0\n    local AC = 0\n    local\
    \ AD = 0\n    local AE = 0\n    local AF = 0\n    local AG = 0\n    local AH =\
    \ 0\n    local AI = 0\n    local AJ = 0\n    local AK = 0\n    local AL = 0\n\
    \    local AM = 0\n    local AN = 0\n    local AO = 0\n    local AP = 0\n    local\
    \ AQ = 0\n    local AR = 0\n    local AS = 0\n    local AT = 0\n    local AU =\
    \ 0\n    local AV = 0\n    local AW = 0\n    local AX = 0\n    local AY = 0\n\
    \    local AZ = 0\n    local AA = 0\n    local AB = 0\n    local AC = 0\n    local\
    \ AD = 0\n    local AE = 0\n    local AF = 0\n    local AG = 0\n    local AH =\
    \ 0\n    local AI = 0\n    local AJ = 0\n    local AK = 0\n    local AL = 0\n\
    \    local AM = 0\n    local AN = 0\n    local AO = 0\n    local AP = 0\n    local\
    \ AQ = 0\n    local AR = 0\n    local AS = 0\n    local AT = 0\n    local AU =\
    \ 0\n    local AV = 0\n    local AW = 0\n    local AX = 0\n    local AY = 0\n\
    \    local AZ = 0\n    local AA = 0\n    local AB = 0\n    local AC", "\tlocal\
    \ result = nil\n\tlocal length = #operand\n\tlocal i = 0\n\tlocal ops = #operator\n\
    \tlocal op\n\tlocal j\n\t\n\t-- Iterate through each operand and perform the operation.\n\
    \tfor i = 1, length do\n\t\t-- Get the operation from the operator table.\n\t\t\
    op = operator[i]\n\t\t\n\t\t-- Iterate through each operand and perform the operation.\n\
    \t\tfor j = 1, length do\n\t\t\t-- Get the operand from the operand table.\n\t\
    \t\tlocal operand = operand[j]\n\t\t\t\n\t\t\t-- Perform the operation.\n\t\t\t\
    result = result + operand * op\n\t\tend\n\tend\n\t\n\t-- Return the result.\n\t\
    return result\nend", "  local result = nil\n  local ops = operator\n  local ops_length\
    \ = #ops\n  local operands = operand\n  local operands_length = #operands\n  local\
    \ i = 0\n  local j = 0\n  while i < ops_length and j < operands_length do\n  \
    \  local op = ops[i]\n    local operand = operands[j]\n    if op == '+' then\n\
    \      result = result + operand\n    elseif op == '-' then\n      result = result\
    \ - operand\n    elseif op == '*' then\n      result = result * operand\n    elseif\
    \ op == '/' then\n      result = result // operand\n    elseif op == '**' then\n\
    \      result = result ^ operand\n    end\n    i = i + 1\n    j = j + 1\n  end\n\
    \  return result\nend", "\tlocal result = operand[1]\n\tfor i = 2, #operand do\n\
    \t\tresult = operator[operator](result, operand[i])\n\tend\n\treturn result\n\
    end", "  local result = 0\n  local ops = operator\n  local ops_len = #ops\n  local\
    \ ops_table = operand\n  local ops_table_len = #ops_table\n  local ops_table_last\
    \ = ops_table[ops_table_len - 1]\n  local ops_table_first = ops_table[1]\n  local\
    \ ops_table_first_last = ops_table_first[ops_table_len - 1]\n  local ops_table_first_first\
    \ = ops_table_first[1]\n  local ops_table_first_first_last = ops_table_first_first[ops_table_len\
    \ - 1]\n  local ops_table_first_first_first = ops_table_first_first[1]\n  local\
    \ ops_table_first_first_first_last = ops_table_first_first_first[ops_table_len\
    \ - 1]\n  local ops_table_first_first_first_first_last = ops_table_first_first_first_first[1]\n\
    \  local ops_table_first_first_first_first_first_last_last = ops_table_first_first_first_first_last[ops_table_len\
    \ - 1]\n  local ops_table_first_first_first_first_last_last_first = ops_table_first_first_first_last_last[1]\n\
    \  local ops_table_first_first_first_last_last_first_last = ops_table_first_first_last_last_first[ops_table_len\
    \ - 1]\n  local ops_table_first_first_last_last_first_last_first_last = ops_table_first_last_last_first_last_first[1]\n\
    \  local ops_table_first_last_last_first_last_first_last_first_last = ops_table_first_last_last_first_last_first_last_first[ops_table_len\
    \ - 1]\n  local ops_table_first_last_last_first_last_first_last_first_last_last\
    \ = ops_table_first_last_last_first_last_first_last_first_last_last[1]\n  local\
    \ ops_table_first_last_last_first_last_first_last_first_last_last_first = ops_table_first_last_last_first_last_first_last_first_last_last_first_last[ops_table_len\
    \ - 1]\n  local ops_table_first_last_last_first_last_first_last_first_last_first_last_last\
    \ = ops_table_first_last_last_first_last_first_last_first_last_first_last_first_last[1]\n\
    \  local ops_table_first_last_last_first_last_first_last_first_last_first_last_first_last_last\
    \ = ops_table_first_last_last_first_last_first_last_first_last_first_last_first_last_first_last_last[1]\n\
    \  local ops_table_first_last_last_first_last_first_last_first_last_first_last_first_last_first_last_last\
    \ = ops_table_first_last_last_first_last_first_last_first_last_first_last_first_last_first_last_first_last_last_last[1]\n\
    \  local ops_table_first_last_last_first_last_first_last_first_last_first_last_first_last_first_last_first_last_",
  "  local result = nil\n  local ops = operator\n  local ops_length = #ops\n  local\
    \ ops_table = operand\n  local ops_table_length = #ops_table\n  local ops_table_last\
    \ = ops_table[ops_table_length - 1]\n  local ops_table_first = ops_table[1]\n\
    \  local ops_table_first_last = ops_table_first[ops_table_length - 1]\n  local\
    \ ops_table_first_first = ops_table_first[1]\n  local ops_table_first_first_last\
    \ = ops_table_first_first[ops_table_length - 1]\n  local ops_table_first_first_first\
    \ = ops_table_first_first[1]\n  local ops_table_first_first_first_last = ops_table_first_first_first[ops_table_length\
    \ - 1]\n  local ops_table_first_first_first_first_last = ops_table_first_first_first_first[1]\n\
    \  local ops_table_first_first_first_first_last_last = ops_table_first_first_first_first_last[ops_table_length\
    \ - 1]\n  local ops_table_first_first_first_first_last_last_first = ops_table_first_first_first_first_last_last[1]\n\
    \  local ops_table_first_first_first_first_last_last_first_last = ops_table_first_first_first_first_last_last_first[1]\n\
    \  local ops_table_first_first_first_last_last_first_last_first_first = ops_table_first_first_first_last_last_first_first[1]\n\
    \  local ops_table_first_first_first_last_last_first_last_first_last_last = ops_table_first_first_first_last_last_first_last_first_last[1]\n\
    \  local ops_table_first_first_first_last_last_first_last_first_last_last_first\
    \ = ops_table_first_first_first_last_last_first_last_first_last_last[1]\n  local\
    \ ops_table_first_first_first_last_last_first_last_first_last_last_first_last\
    \ = ops_table_first_first_first_last_last_first_last_first_last_last_first_last[1]\n\
    \  local ops_table_first_first_first_last_last_first_last_first_last_first_last_last_first\
    \ = ops_table_first_first_first_last_last_first_last_first_last_first_last_last_first[1]\n\
    \  local ops_table_first_first_first_last_last_first_last_first_last_first_last_first_last_last\
    \ = ops_table_first_first_first_last_last_first_last_first_last_first_last_first_last_last[1]\n\
    \  local ops_table_first_first_first_last_last_first_last_first_last_first_last_first_last_last_first\
    \ = ops_table_first_first_first_last_last_first_last_first_last_first_last_first_last_first_last_last[1]\n\
    \  local ops_table_first_first_first_last_last_first_last_first_last_first_last_first_last_first_last_last\
    \ = ops_table_first_first_first_last_last_first_last_first_last_", "  local result\
    \ = nil\n  local length = #operand\n  local i = 1\n  while i <= length do\n  \
    \  local op = operator[i]\n    local operand1 = operand[i]\n    local operand2\
    \ = operand[i + 1]\n    local result = op * operand1 + op * operand2\n    i =\
    \ i + 2\n  end\n  return result\nend", "\tlocal result = nil\n\tlocal length =\
    \ #operand\n\tlocal i = 0\n\t\n\t-- Iterate through operand table and perform\
    \ the operation.\n\twhile i < length do\n\t\tlocal operation = operator[i]\n\t\
    \tlocal operand1 = operand[i]\n\t\tlocal operand2 = operand[i + 1]\n\t\t\n\t\t\
    -- Perform the operation.\n\t\tresult = result and operand1 .. operation .. operand2\n\
    \t\ti = i + 2\n\tend\n\t\n\t-- Return the result.\n\treturn result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

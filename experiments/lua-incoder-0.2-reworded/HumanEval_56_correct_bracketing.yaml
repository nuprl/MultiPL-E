name: HumanEval_56_correct_bracketing
language: lua
prompt: "-- brackets is a string of \"<\" and \">\".\n-- return true if every opening\
  \ bracket has a corresponding closing bracket.\n-- >>> correct_bracketing('<')\n\
  -- false\n-- >>> correct_bracketing('<>')\n-- true\n-- >>> correct_bracketing('<<><>>')\n\
  -- true\n-- >>> correct_bracketing('><<>')\n-- false\nlocal function correct_bracketing(brackets)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = correct_bracketing\n\
  \    lu.assertEquals(candidate('<>'), true)\n    lu.assertEquals(candidate('<<><>>'),\
  \ true)\n    lu.assertEquals(candidate('<><><<><>><>'), true)\n    lu.assertEquals(candidate('<><><<<><><>><>><<><><<>>>'),\
  \ true)\n    lu.assertEquals(candidate('<<<><>>>>'), false)\n    lu.assertEquals(candidate('><<>'),\
  \ false)\n    lu.assertEquals(candidate('<'), false)\n    lu.assertEquals(candidate('<<<<'),\
  \ false)\n    lu.assertEquals(candidate('>'), false)\n    lu.assertEquals(candidate('<<>'),\
  \ false)\n    lu.assertEquals(candidate('<><><<><>><>><<>'), false)\n    lu.assertEquals(candidate('<><><<><>><>>><>'),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local opening = brackets:find('<')\n  local closing = brackets:find('>')\n\
    \  local opening_brackets = brackets:sub(1, opening - 1)\n  local closing_brackets\
    \ = brackets:sub(closing + 1)\n  local opening_brackets_count = opening_brackets:count('<')\n\
    \  local closing_brackets_count = closing_brackets:count('>')\n  return opening_brackets_count\
    \ == closing_brackets_count\nend", "  local opening_brackets = brackets:gsub('%[(%+)(%-)]+',\
    \ function(x)\n    return x:match('%[<>]')\n  end)\n  local closing_brackets =\
    \ brackets:gsub('%[<>](%+)(%-)', function(x)\n    return x:match('%[<>]')\n  end)\n\
    \  return opening_brackets:len() == closing_brackets:len() and\n    opening_brackets:all()\
    \ ~= closing_brackets:all()\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  for _,opening_bracket in ipairs(opening_brackets) do\n    if not closing_brackets[opening_bracket]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local open_brackets\
    \ = brackets:gsub('(<)', ''):gsub('(>)', '')\n  local close_brackets = brackets:gsub('(<)',\
    \ ''):gsub('(>)', '')\n  return open_brackets:len() == close_brackets:len() and\n\
    \         open_brackets:gsub('(<)', ''):gsub('(>)', '') == close_brackets\nend",
  "  local opening = brackets:gsub('%<', '(')\n  local closing = brackets:gsub('%>',\
    \ ')')\n  return opening:len() == closing:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('%b()', '%s*%b()')\n  local closing_brackets = brackets:gsub('%b()',\
    \ '%s*%b()')\n  local opening_brackets_count = opening_brackets:gsub('%s*%b()',\
    \ '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()',\
    \ '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()',\
    \ '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()',\
    \ '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()',\
    \ '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()',\
    \ '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()',\
    \ '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()',\
    \ '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()',\
    \ '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()',\
    \ '%s*'):gsub('%s*%", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and opening_brackets:all(function(x)\n\
    \    return closing_brackets:find(x) == nil\n  end)\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%+)(%-)]', function(x)\n    return x:sub(1, 1)\n  end)\n\
    \  local closing_brackets = brackets:gsub('%[(%+)(%-)]', function(x)\n    return\
    \ x:sub(2, 2)\n  end)\n  return opening_brackets == closing_brackets\nend", " \
    \ local opening_brackets = brackets:gsub('%b()', '%s*%b()')\n  local closing_brackets\
    \ = brackets:gsub('%b()', '%s*%b()')\n  return opening_brackets:sub(1, #opening_brackets)\
    \ == closing_brackets\nend", "  local opening_brackets = brackets:gsub('%b()',\
    \ '%s*%b')\n  local closing_brackets = brackets:gsub('%b()', '%s*%b()')\n  return\
    \ opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:sub(1,1)\
    \ == closing_brackets:sub(1,1)\nend", "  local opening_brackets = brackets:gsub('(<%%(%+%)%>)',\
    \ '')\n  local closing_brackets = brackets:gsub('(%%(%+%)%>)', '')\n  local opening_brackets_count\
    \ = opening_brackets:gsub('(%+%)', '')\n  local closing_brackets_count = closing_brackets:gsub('(%+%)',\
    \ '')\n  return opening_brackets_count == closing_brackets_count\nend", "   for\
    \ i = 1, #brackets do\n      if brackets[i] ~= '<' then\n         return false\n\
    \      end\n      local opening = brackets[i + 1]\n      local closing = brackets[i\
    \ + 2]\n      if opening ~= closing then\n         return false\n      end\n \
    \     i = i + 3\n   end\n   return true\nend", "  local opening = brackets:gsub('(<%%(%+)(%>%+))',\
    \ function(x)\n    return x:sub(1, 1)\n  end)\n  local closing = brackets:gsub('(<%(%+)(%+%>%+))',\
    \ function(x)\n    return x:sub(2, 2)\n  end)\n  return opening:len() == closing:len()\n\
    end", "  local opening_brackets = brackets:gsub('(<)', '%s*%L+%L+'):gsub('(>)',\
    \ '%L+%L+%s*'):gsub('(<%L+)(%L+)', '%%%1%%%2%%'):gsub('(%L+%L+%L+)', '%%%1%%%2%%')\n\
    \  local closing_brackets = brackets:gsub('(<)', '%s*%L+%L+'):gsub('(>)', '%L+%L+%s*'):gsub('(<%L+)(%L+)',\
    \ '%%%1%%%2%%'):gsub('(%L+%L+%L+)', '%%%1%%%2%%')\n  return opening_brackets:gsub('(%L+%L+)',\
    \ '%%%1%%%2%%') == closing_brackets\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n \
    \ return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = {}\n  local closing_brackets = {}\n  for _, bracket in ipairs(brackets) do\n\
    \    if bracket:sub(1, 1) == '<' then\n      table.insert(opening_brackets, bracket)\n\
    \    elseif bracket:sub(1, 1) == '>' then\n      table.insert(closing_brackets,\
    \ bracket)\n    end\n  end\n  return #opening_brackets == #closing_brackets\n\
    end", "  local opening_brackets = brackets:gsub('(<%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%+)%%(%*)%+%%(%+)(%>%",
  "  local opening_brackets = brackets:gsub('(<)', '%s*%L+%L+')\n  local closing_brackets\
    \ = brackets:gsub('(>)', '%s*%L+%L+')\n  return opening_brackets:gsub('%L+%L+',\
    \ '') ~= closing_brackets:gsub('%L+%L+', '')\nend", "  local opening = brackets:gsub('(<)','%1')\n\
    \  local closing = brackets:gsub('(>)','%1')\n  return opening:len() == closing:len()\n\
    end", "  local opening_brackets = brackets:gsub('(<)', '%s*%L+%L+'):gsub('(>)',\
    \ '%s*%L+%L+')\n  local closing_brackets = brackets:gsub('(<)', '%s*%L+%L+'):gsub('(>)',\
    \ '%s*%L+%L+')\n  return opening_brackets:len() == closing_brackets:len()\nend",
  "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  for i = 1, #opening_brackets do\n    if opening_brackets[i+1] ~= closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening\
    \ = brackets:find('<')\n  local closing = brackets:find('>')\n  local opening_count\
    \ = brackets:count('<')\n  local closing_count = brackets:count('>')\n  local\
    \ opening_open = opening_count > 0 and opening_count ~= opening_open\n  local\
    \ closing_close = closing_count > 0 and closing_count ~= closing_close\n  return\
    \ opening_open and closing_close\nend", "  local open_brackets = brackets:gsub('(<%%(%+)(%*)%>)',\
    \ function(match)\n    return match == '<' and '>' or match\n  end)\n  return\
    \ open_brackets:len() == brackets:len()\nend", "  local opening_brackets = brackets:gsub('(<)',\
    \ '\\0%s*%L'):gsub('(>)', '%1%L\\0')\n  local closing_brackets = brackets:gsub('(<)',\
    \ '%1%L\\0'):gsub('(>)', '\\0%s*%L')\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub('(<)', '\\1'):gsub('(>)', '\\\
    2')\n  local closing_brackets = brackets:gsub('(<)', '\\2'):gsub('(>)', '\\1')\n\
    \  return opening_brackets == closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:all(function(opening,\
    \ closing)\n    return opening:sub(1,1) == '<' and closing:sub(1,1) == '>'\n \
    \ end)\nend", "   local opening_brackets = brackets:gsub('%b()', '%s*%b()')\n\
    \   local closing_brackets = brackets:gsub('%b()', '%s*%b()')\n   local opening_brackets_count\
    \ = opening_brackets:gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()',\
    \ '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()',\
    \ '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()',\
    \ '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()',\
    \ '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()',\
    \ '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()',\
    \ '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()',\
    \ '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()',\
    \ '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()',\
    \ '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%b()', '%s*'):gsub('%s*%", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local opening_brackets_count = opening_brackets:count('<')\n  local closing_brackets_count\
    \ = closing_brackets:count('<')\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local opening_brackets_count = opening_brackets:count('<')\n  local closing_brackets_count\
    \ = closing_brackets:count('<')\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:sub(1,\
    \ -1) == closing_brackets:sub(1, -1)\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('(%1)','%2'):gsub('(%2)','%1'):gsub('(%1)','%2'):gsub('(%2)','%1'):gsub('(%1)','%2'):gsub('(%2)','%1')\n\
    end", "  local open_brackets = brackets:gsub('%b<>', ''):gsub('%b', '')\n  local\
    \ close_brackets = brackets:gsub('%b<>', ''):gsub('%b', '')\n  local open_brackets_count\
    \ = open_brackets:len()\n  local close_brackets_count = close_brackets:len()\n\
    \  for i = 1, open_brackets_count do\n    if open_brackets[i] ~= close_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:sub(1,\
    \ -1) == closing_brackets:sub(1, -1)\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and\n         opening_brackets:sub(1,\
    \ -1) == closing_brackets:sub(1, -1)\nend", "  local opening_brackets = {}\n \
    \ local closing_brackets = {}\n  for i = 1, #brackets do\n    local char = brackets[i]\n\
    \    if char == '<' then\n      table.insert(opening_brackets, char)\n    elseif\
    \ char == '>' then\n      table.insert(closing_brackets, char)\n    end\n  end\n\
    \  for i = 1, #opening_brackets do\n    local opening_char = opening_brackets[i]\n\
    \    local closing_char = closing_brackets[i]\n    if opening_char == closing_char\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub('(<%%(%+)(%*)%%(%+))', function(x)\n    return x:gsub('(%+)(%*)',\
    \ function(y)\n      return y:gsub('(%+)(%*)', function(z)\n        return z:gsub('(%+)(%*)',\
    \ function(w)\n          return w:gsub('(%+)(%*)', function(x)\n            return\
    \ x:gsub('(%+)(%*)', function(y)\n              return y:gsub('(%+)(%*)', function(z)\n\
    \                return z:gsub('(%+)(%*)', function(w)\n                  return\
    \ w:gsub('(%+)(%*)', function(x)\n                    return x:gsub('(%+)(%*)',\
    \ function(y)\n                      return y:gsub('(%+)(%*)', function(z)\n \
    \                       return z:gsub('(%+)(%*)', function(w)\n              \
    \            return w:gsub('(%+)(%*)', function(x)\n                         \
    \   return x:gsub('(%+)(%*)', function(y)\n                              return\
    \ y:gsub('(%+)(%*)', function(z)\n                                return z:gsub('(%+)(%*)',\
    \ function(w)\n                                  return w:gsub('(%+)(%*)', function(x)\n\
    \                                    return x:gsub('(%+)(%*)', function(y)\n \
    \                                     return y:gsub('(%+)(%*)', function(z)\n\
    \                                        return z:gsub('(%+)(%*)', function(w)\n\
    \                                          return w:gsub('(%+)(%*)', function(x)\n\
    \                                            return x:gsub('(%+)(%*)', function(y)\n\
    \                                              return y:gsub('(%+)(%*)', function(z)\n\
    \                                                return z:gsub('(%+)(%*)', function(w)\n\
    \                                                  return w:gsub('(%+)(%*)', function(x)\n\
    \                                                    return x:gsub('(%+)(%*)',\
    \ function(y)\n                                                      return y:gsub('(%+)(%*)',\
    \ function(z)\n                                                        return\
    \ z:gsub('(%+)(%*)', function(w)\n                                           \
    \               return w:gsub('(%+)(%*)', function(x)\n                      \
    \                                      return x:gsub('(%+)(%*)', function(y)\n\
    \                                                              return y:gsub('(%+)(%*)',\
    \ function(z)\n                                                              \
    \  return z:gsub('(%+)(%*)', function(w)\n                                   \
    \                               return w:gsub('(%+)(%*)', function(x)\n      \
    \                                                              return ", "  local\
    \ opening = brackets:find('<')\n  local closing = brackets:find('>')\n  local\
    \ opening_count = brackets:count('<')\n  local closing_count = brackets:count('>')\n\
    \  if opening ~= nil and opening ~= -1 and opening ~= opening_count then\n   \
    \ return false\n  end\n  if closing ~= nil and closing ~= -1 and closing ~= closing_count\
    \ then\n    return false\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub
  "   for i = 1, #brackets do\n      local opening = brackets[i]\n      local closing\
    \ = brackets[i+1]\n      if opening ~= closing then\n         return false\n \
    \     end\n   end\n   return true\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('%1','('):gsub('%1',')')\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n \
    \ return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('%<', ''):gsub('%>', '')\n  local closing_brackets = brackets:gsub('%>',\
    \ ''):gsub('%>', '')\n  return opening_brackets:len() == closing_brackets:len()\
    \ and\n         opening_brackets:sub(1, 1) == closing_brackets:sub(1, 1)\nend",
  "  local opening_brackets = brackets:gsub('%[(%+)(%*)%]', function(match)\n    local\
    \ opening_bracket = match[1]\n    local closing_bracket = match[2]\n    return\
    \ opening_bracket ~= closing_bracket\n  end)\n  return opening_brackets == nil\n\
    end", "  local opening_brackets = brackets:gsub('>*', '><'):gsub('<*', '><')\n\
    \  local closing_brackets = brackets:gsub('>*', '>'):gsub('<*', '<')\n  return\
    \ opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('%b()', '')\n  local closing_brackets = brackets:gsub('%b()',\
    \ '%%%1')\n  return opening_brackets:len() == closing_brackets:len()\nend", " \
    \ local open_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local close_brackets\
    \ = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n  return open_brackets:len()\
    \ == close_brackets:len()\nend", "  local opening_brackets = brackets:gsub('%b()',\
    \ '%s*%b()')\n  local closing_brackets = brackets:gsub('%b()', '%s*%b()')\n  local\
    \ opening_brackets_count = opening_brackets:gsub('%b()', '%s*%d+'):gsub('%d+',\
    \ '%d'):gsub('%d*', '%d'):gsub('%d?', '%d'):gsub('%d*', '%d')\n  local closing_brackets_count\
    \ = closing_brackets:gsub('%b()', '%s*%d+'):gsub('%d+', '%d'):gsub('%d*', '%d'):gsub('%d?',\
    \ '%d'):gsub('%d*', '%d')\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening = brackets:gsub('(<%%(%+%)%>)', '')\n  local closing =\
    \ brackets:gsub('(%%(%+%)%>)', '')\n  return opening:len() == closing:len() and\
    \ opening:len() > 0 and closing:len() > 0\nend", "  local opening = brackets:find('<')\n\
    \  local closing = brackets:find('>')\n  local opening_count = brackets:count('<')\n\
    \  local closing_count = brackets:count('>')", "  local opening = brackets:find('<')\n\
    \  local closing = brackets:find('>')\n  local opening_count = brackets:count('<')\n\
    \  local closing_count = brackets:count('>')\n  return opening_count == closing_count\
    \ and opening ~= nil and closing ~= nil\nend", "  local opening_brackets = brackets:gsub('(<)',\
    \ '\\1'):gsub('(>)', '\\2')\n  local closing_brackets = brackets:gsub('(<)', '\\\
    2'):gsub('(>)', '\\1')\n  return opening_brackets ~= closing_brackets\nend", " \
    \ local opening_brackets = brackets:gsub('(<)([^>]+)$', '\\2')\n  local closing_brackets\
    \ = brackets:gsub('(<)(.+$)', '\\1')\n  return opening_brackets == closing_brackets\n\
    end", "  local opening_brackets = brackets:gsub('(<)([^>]+)(>)', '\\2\\3')\n \
    \ local closing_brackets = brackets:gsub('(<)([^>]+)(>)', '\\1\\3')\n  return\
    \ opening_brackets == closing_brackets\nend", "  local opening_brackets = brackets:gsub('%<',\
    \ '%s*<%s*'):gsub('%>', '%s*>%s*'):gsub('%<', '%s*<%s*'):gsub('%>', '%s*>%s*')\n\
    \  local closing_brackets = brackets:gsub('%<', '%s*<%s*'):gsub('%>', '%s*>%s*'):gsub('%<',\
    \ '%s*<%s*'):gsub('%>', '%s*>%s*')\n  local opening_brackets_count = opening_brackets:count('<')\n\
    \  local closing_brackets_count = closing_brackets:count('<')\n  return opening_brackets_count\
    \ == closing_brackets_count\nend", "  local open_brackets = brackets:gsub('%b()',\
    \ '%s*%c()')\n  local close_brackets = brackets:gsub('%b()', '%c()%s*')\n  return\
    \ open_brackets:sub(1, #open_brackets) == close_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('(<%%(%+)(%*)%>)','%2')\n  local closing_brackets = brackets:gsub('(<%%(%+)(%*)%>)','%3')\n\
    \  return opening_brackets:len() == closing_brackets:len() and\n         opening_brackets:sub(1,\
    \ opening_brackets:len()) == closing_brackets:sub(1, closing_brackets:len())\n\
    end", "  local opening_brackets = brackets:gsub('%<', ''):gsub('%>', '')\n  local\
    \ closing_brackets = brackets:gsub('%>', ''):gsub('%>', '')\n  return opening_brackets\
    \ == closing_brackets\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local opening_brackets_count = opening_brackets:count('<')\n  local closing_brackets_count\
    \ = closing_brackets:count('<')\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub('%b()', '%s*%b')\n  local closing_brackets\
    \ = brackets:gsub('%b()', '%s*%b()')\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n \
    \ return opening_brackets ~= closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)', '\\1'):gsub('(>)', '\\2'):gsub('(<<)', '\\3'):gsub('(>>)',\
    \ '\\4')\n  local closing_brackets = brackets:gsub('(<)', '\\1'):gsub('(>)', '\\\
    2'):gsub('(<<)', '\\3'):gsub('(>>)', '\\4')\n  return opening_brackets ~= closing_brackets\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n \
    \ return opening_brackets ~= closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n\
    \  local opening_brackets_count = opening_brackets:gsub('%2','%1'):gsub('%1','%2'):gsub('%1','%1'):gsub('%1','%1')\n\
    \  local closing_brackets_count = closing_brackets:gsub('%2','%1'):gsub('%1','%2'):gsub('%1','%1'):gsub('%1','%1')\n\
    \  return opening_brackets_count == closing_brackets_count\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local opening_brackets_count = opening_brackets:gsub('%1>','>'):gsub('%1<','<'):gsub('%1<<','<<'):gsub('%1>>','>>'):gsub('%1><<','<<'):gsub('%1>><','>><'):gsub('%1>>>','>>>')\n\
    \  local closing_brackets_count = closing_brackets:gsub('%1>','>'):gsub('%1<','<'):gsub('%1<<','<<'):gsub('%1>>','>>'):gsub('%1><<','<<'):gsub('%1>><','>><'):gsub('%1>>>','>>>')\n\
    \  return opening_brackets_count == closing_brackets_count\nend", "   if brackets\
    \ == '<' then return false end\n   if brackets == '>' then return true end\n \
    \  if brackets == '<>' then return false end\n   if brackets == '<>' then return\
    \ true end\n   if brackets == '<<' then return false end\n   if brackets == '>>'\
    \ then return true end\n   if brackets == '<<<' then return false end\n   if brackets\
    \ == '>>>' then return true end\n   if brackets == '<<>>' then return false end\n\
    \   if brackets == '<><>' then return false end\n   if brackets == '<><<' then\
    \ return false end\n   if brackets == '<><>>' then return false end\n   if brackets\
    \ == '<<<>>' then return false end\n   if brackets == '<><><>' then return false\
    \ end\n   return true\nend", "  local opening_brackets = brackets:gsub('%b()',\
    \ '')\n  local closing_brackets = brackets:gsub('%b()', '%%%1')\n  return opening_brackets:sub(1,\
    \ #opening_brackets) == closing_brackets\nend", "  local opening_brackets = brackets:gsub
  "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local opening_brackets_count = opening_brackets:count('<')\n  local closing_brackets_count\
    \ = closing_brackets:count('<')\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub('%b<>', '')\n  local closing_brackets\
    \ = brackets:gsub('%b<>', '')\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets:find('>')\n  local closing_brackets_index = closing_brackets:find('>')\n\
    \  local opening_brackets_index2 = opening_brackets:find('<')\n  local closing_brackets_index2\
    \ = closing_brackets:find('<')\n  local opening_brackets_index3 = opening_brackets:find('<<')\n\
    \  local closing_brackets_index3 = closing_brackets:find('<<')\n  local opening_brackets_index4\
    \ = opening_brackets:find('>>')\n  local closing_brackets_index4 = closing_brackets:find('>>')\n\
    \  local opening_brackets_index5 = opening_brackets:find('<<<')\n  local closing_brackets_index5\
    \ = closing_brackets:find('<<<')\n  local opening_brackets_index6 = opening_brackets:find('>>>')\n\
    \  local closing_brackets_index6 = closing_brackets:find('>>>')\n  local opening_brackets_index7\
    \ = opening_brackets:find('<<<>>')\n  local closing_brackets_index7 = closing_brackets:find('<<<>>')\n\
    \  local opening_brackets_index8 = opening_brackets:find('>>>>>>')\n  local closing_brackets_index8\
    \ = closing_brackets:find('>>>>>>')\n  local opening_brackets_index9 = opening_brackets:find('<<<>>>')\n\
    \  local closing_brackets_index9 = closing_brackets:find('<<<>>>')\n  local opening_brackets_index10\
    \ = opening_brackets:find('>>>>>>>>>')\n  local closing_brackets_index10 = closing_brackets:find('>>>>>>>>>')\n\
    \  local opening_brackets_index11 = opening_brackets:find('<<<>>>>>>')\n  local\
    \ closing_brackets_index11 = closing_brackets:find('<<<>>>>>>')\n  local opening_bracket",
  "  local open_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local close_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local open_brackets_count = open_brackets:count('<')\n  local close_brackets_count\
    \ = close_brackets:count('<')\n  return open_brackets_count == close_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub('(<)', '\\0\\2\\0')\n  local closing_brackets\
    \ = brackets:gsub('(>)', '\\0\\2\\0')\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing\
    \ = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return opening:len() == closing:len()\n\
    end", "  local opening_brackets = {}\n  local closing_brackets = {}\n  for i =\
    \ 1, #brackets do\n    if brackets[i] == '<' then\n      table.insert(opening_brackets,\
    \ i)\n    elseif brackets[i] == '>' then\n      table.insert(closing_brackets,\
    \ i)\n    end\n  end\n  return #opening_brackets == #closing_brackets\nend", " \
    \ local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('%1','')\n\
    end", "  local opening_brackets = brackets:gsub('(<)', '\\0\\2'):gsub('(>)', '\\\
    0\\2')\n  local closing_brackets = brackets:gsub('(<)', '\\0\\2'):gsub('(>)',\
    \ '\\1\\2')\n  return opening_brackets:len() == closing_brackets:len()\nend",
  "  local opening = brackets:find('<')\n  local closing = brackets:find('>')\n  local\
    \ opening_brackets = brackets:sub(1, opening - 1)\n  local closing_brackets =\
    \ brackets:sub(closing + 1)\n  local opening_brackets_count = opening_brackets:count('<')\n\
    \  local closing_brackets_count = closing_brackets:count('>')\n  return opening_brackets_count\
    \ == closing_brackets_count\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and opening_brackets:sub(1,1)\
    \ == closing_brackets:sub(1,1)\nend", "  local opening_brackets = brackets:gsub('(<%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%",
  "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local\
    \ closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return opening_brackets:len()\
    \ == closing_brackets:len() and\n         opening_brackets:gsub('%1','') == closing_brackets:gsub('%2','')\
    \ \nend", "  local opening_brackets = brackets:gsub('(<%%(%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%",
  "  local opening_brackets = brackets:gsub('<>', ''):gsub('>', '')\n  local closing_brackets\
    \ = brackets:gsub('<', ''):gsub('<', '')\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub('(<)', '\\0\\2\\0')\n  local closing_brackets\
    \ = brackets:gsub('(>)', '\\0\\2\\0')\n  return opening_brackets ~= closing_brackets\n\
    end", "  local opening_brackets = {}\n  local closing_brackets = {}\n  for i =\
    \ 1, #brackets do\n    local opening = brackets[i]\n    if opening == '<' then\n\
    \      table.insert(opening_brackets, i)\n    elseif opening == '>' then\n   \
    \   table.insert(closing_brackets, i)\n    end\n  end\n  for i = 1, #opening_brackets\
    \ do\n    local opening = opening_brackets[i]\n    local closing = closing_brackets[i]\n\
    \    if opening ~= closing then\n      return false\n    end\n  end\n  return\
    \ true\nend", "  local opening_brackets = {}\n  local closing_brackets = {}\n\
    \  for i = 1, #brackets do\n    local opening = brackets[i]\n    if opening ==\
    \ '<' then\n      table.insert(opening_brackets, i)\n    elseif opening == '>'\
    \ then\n      table.insert(closing_brackets, i)\n    end\n  end\n  for i = 1,\
    \ #opening_brackets do\n    local opening = opening_brackets[i]\n    local closing\
    \ = closing_brackets[i]\n    if opening > closing then\n      return false\n \
    \   end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('%b()', '')\n  local closing_brackets = brackets:gsub('%b()',\
    \ '%%%1')\n  local opening_brackets_count = opening_brackets:count('<')\n  local\
    \ closing_brackets_count = closing_brackets:count('>')\n  return opening_brackets_count\
    \ == closing_brackets_count\nend", "  local opening_brackets = brackets:gsub('(<)',\
    \ '%s*%L+%L+')\n  local closing_brackets = brackets:gsub('(>)', '%s*%L+%L+')\n\
    \  local opening_brackets_count = opening_brackets:gsub('%s*%L+%L+', '')\n  local\
    \ closing_brackets_count = closing_brackets:gsub('%s*%L+%L+', '')\n  return opening_brackets_count\
    \ == closing_brackets_count\nend", "  local opening = brackets:find('<')\n  local\
    \ closing = brackets:find('>')\n  local opening_count = brackets:count('<')\n\
    \  local closing_count = brackets:count('>')", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n \
    \ return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local open_brackets\
    \ = brackets:gsub('(<)', ''):gsub('(>)', '')\n  local close_brackets = brackets:gsub('(<)',\
    \ ''):gsub('(>)', '')\n  return open_brackets:len() == close_brackets:len() and\
    \ open_brackets:len() == open_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('%b()', '%s*%b()')\n  local closing_brackets = brackets:gsub('%b()',\
    \ '%s*%b()')\n  local opening_brackets_count = opening_brackets:gsub('%b()', '%s*%b()'):gsub('%s*%b()',\
    \ '%d+'):gsub('%d*%d+', '%d+')\n  local closing_brackets_count = closing_brackets:gsub('%b()',\
    \ '%s*%b()'):gsub('%s*%b()', '%d+'):gsub('%d*%d+', '%d+')\n  return opening_brackets_count\
    \ == closing_brackets_count\nend", "   if brackets == '<>' then return true end\n\
    \   local opening_brackets = brackets:gsub('%b<>', '')\n   local closing_brackets\
    \ = brackets:gsub('%b<>', '>')\n   for i = 1, #opening_brackets do\n      if not\
    \ opening_brackets[i]:sub(1, 1) == '<' then\n         return false\n      end\n\
    \      if not closing_brackets[i]:sub(1, 1) == '>' then\n         return false\n\
    \      end\n   end\n   return true\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('(%1)','%2'):gsub('(%2)','%1'):gsub('(%1)','%2'):gsub('(%2)','%1'):gsub('(%1)','%2'):gsub('(%2)','%1'):gsub('(%1)','%2'):gsub('(%2)','%1')\n\
    end", "  local opening_brackets = {}\n  local closing_brackets = {}\n  for i =\
    \ 1, #brackets do\n    local opening = brackets[i]\n    local closing = brackets[i+1]\n\
    \    if opening == '<' then\n      table.insert(opening_brackets, opening)\n \
    \   elseif opening == '>' then\n      table.insert(closing_brackets, closing)\n\
    \    end\n  end\n  for i = 1, #opening_brackets do\n    local opening = opening_brackets[i]\n\
    \    local closing = closing_brackets[i]\n    if opening ~= closing then\n   \
    \   return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local opening_brackets_count = opening_brackets:count('<')\n  local closing_brackets_count\
    \ = closing_brackets:count('<')\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = {}\n  local closing_brackets = {}\n  for i =\
    \ 1, #brackets do\n    if brackets[i] == '<' then\n      table.insert(opening_brackets,\
    \ i)\n    elseif brackets[i] == '>' then\n      table.insert(closing_brackets,\
    \ i)\n    end\n  end\n  for i = 1, #opening_brackets do\n    local opening_bracket\
    \ = opening_brackets[i]\n    local closing_bracket = closing_brackets[i - 1]\n\
    \    if opening_bracket ~= closing_bracket then\n      return false\n    end\n\
    \  end\n  return true\nend", "  local opening_brackets = brackets:gsub('(<%%(%+%)%>)',\
    \ '')\n  local closing_brackets = brackets:gsub('(%%(%+%)%>)', '')\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local open_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local close_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local open_brackets_count = open_brackets:count('<')\n  local close_brackets_count\
    \ = close_brackets:count('<')\n  return open_brackets_count == close_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub('(<)', ''):gsub('(>)', '')\n \
    \ local closing_brackets = brackets:gsub('(<)', '')\n  local opening_brackets_count\
    \ = opening_brackets:gsub('(<)', ''):gsub('(>)', ''):gsub('(<)', '')\n  local\
    \ closing_brackets_count = closing_brackets:gsub('(<)', '')\n  return opening_brackets_count\
    \ == closing_brackets_count\nend", "  local opening_brackets = brackets:gsub('%b<>',\
    \ '')\n  local closing_brackets = brackets:gsub('%b<>', '>')\n  return opening_brackets:sub(1,\
    \ #opening_brackets) == closing_brackets\nend", "  local opening_brackets = brackets:gsub('(<)([^>]+)$',\
    \ '\\\\2')\n  local closing_brackets = brackets:gsub('(<)(.+?)(>)$', '\\\\2\\\\\
    3')\n  return opening_brackets == closing_brackets\nend", "   if brackets == '<>'\
    \ then return true end\n   if brackets == '<' then return false end\n   if brackets\
    \ == '>' then return true end\n   if brackets == '<>' then return false end\n\
    \   if brackets == '<' then return false end\n   if brackets == '>' then return\
    \ true end\n   return false\nend", "  local opening_brackets = brackets:gsub('(<)',\
    \ ''):gsub('(>)', '')\n  local closing_brackets = brackets:gsub('(<)', ''):gsub('(>)',\
    \ '')\n  return opening_brackets:len() == closing_brackets:len()\nend", "  local\
    \ open_brackets = brackets:gsub('%b<>', ''):gsub('%b', '')\n  local close_brackets\
    \ = open_brackets:gsub('%b', '>')\n  return open_brackets == close_brackets\n\
    end", "  local opening_brackets = brackets:gsub('(<)', '\\1'):gsub('(>)', '\\\
    2'):gsub('(<<)', '\\3'):gsub('(>>)', '\\4')\n  local closing_brackets = brackets:gsub('(<)',\
    \ '\\1'):gsub('(>)', '\\2'):gsub('(<<)', '\\3'):gsub('(>>)', '\\4')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and opening_brackets:sub(1,\
    \ opening_brackets:len()) == closing_brackets:sub(1, closing_brackets:len())\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n \
    \ return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = {}\n  local closing_brackets = {}\n  for i = 1, #brackets do\n    local opening\
    \ = brackets[i]\n    local closing = brackets[i+1]\n    if opening ~= \">\" and\
    \ opening ~= \"<\" then\n      return false\n    end\n    if opening == \"<\"\
    \ then\n      table.insert(opening_brackets, opening)\n    elseif opening == \"\
    >\" then\n      table.insert(closing_brackets, closing)\n    end\n  end\n  for\
    \ i = 1, #opening_brackets do\n    local opening = opening_brackets[i]\n    local\
    \ closing = closing_brackets[i]\n    if opening ~= closing then\n      return\
    \ false\n    end\n  end\n  return true\nend", "   brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \   return brackets:match('%1'):len() == brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('%b()', '')\n  local closing_brackets = brackets:gsub('%b()',\
    \ '%%%1')\n  return opening_brackets:len() == closing_brackets:len()\nend", " \
    \ local opening_brackets = brackets:gsub('%b()', '%s*%b()')\n  local closing_brackets\
    \ = brackets:gsub('%b()', '%s*%b()')\n  local opening_brackets_count = opening_brackets:gsub('%b()',\
    \ '%s*%d+'):gsub('%d+', '%%d+')\n  local closing_brackets_count = closing_brackets:gsub('%b()',\
    \ '%s*%d+'):gsub('%d+', '%%d+')\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local open_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local close_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  for i = 1, #open_brackets do\n    if open_brackets[i+1] ~= close_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n\
    \  return opening_brackets:len() == closing_brackets:len() and\n         opening_brackets:gsub('(%1)','%2'):gsub('(%2)','%1'):gsub('(%1)','%2'):gsub('(%2)','%1')\n\
    end", "  local opening_brackets = brackets:gsub('(<%%(%+)(%>))', function(_, _1,\
    \ _2, _3)\n    return \"<\" .. _2 .. \">\"\n  end)\n  local closing_brackets =\
    \ brackets:gsub('(<%(%+)(%>))', function(_, _1, _2, _3)\n    return \"<\" .. _3\
    \ .. \">\"\n  end)\n  return opening_brackets == closing_brackets\nend", "  local\
    \ opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('%1',''):gsub('%1','')\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('%1','<'):gsub('%2','>'):gsub('%1','<'):gsub('%2','>')\n\
    end", "  local opening_brackets = brackets:gsub('(<)', ''):gsub('(>)', '')\n \
    \ local closing_brackets = brackets:gsub('(<)', ''):gsub('(>)', '')\n  return\
    \ opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('>*', '')\n  local closing_brackets = brackets:gsub('<*', '')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('%b()', '%s*%b()')\n  local closing_brackets = brackets:gsub('%b()',\
    \ '%s*%b()')\n  local opening_brackets_count = opening_brackets:gsub('%s*%b()',\
    \ '%s*%d+'):gsub('%d+', '%d'):gsub('%d*', '%d'):gsub('%d*', '%d')\n  local closing_brackets_count\
    \ = closing_brackets:gsub('%s*%b()', '%s*%d+'):gsub('%d+', '%d'):gsub('%d*', '%d'):gsub('%d*',\
    \ '%d')\n  return opening_brackets_count == closing_brackets_count\nend", "  local\
    \ opening_brackets = brackets:gsub('%[(%+)(%-)]', function(x)\n    local opening_bracket\
    \ = x\n    local closing_bracket = x\n    if opening_bracket == '<' then\n   \
    \   opening_bracket = '<'\n      closing_bracket = '>'\n    end\n    return opening_bracket,\
    \ closing_bracket\n  end)\n  local opening_brackets_count = #opening_brackets\n\
    \  if opening_brackets_count ~= #brackets then\n    return false\n  end\n  for\
    \ i = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets[i]\n\
    \    local closing_bracket = opening_brackets[i + 1]\n    if opening_bracket ~=\
    \ closing_bracket then\n      return false\n    end\n  end\n  return true\nend",
  "  local opening_brackets = brackets:gsub('(<)', '%s*%L+%L+')\n  local closing_brackets\
    \ = brackets:gsub('(>)', '%s*%L+%L+')\n  return opening_brackets:sub(1, #opening_brackets)\
    \ == closing_brackets\nend", "  local opening_brackets = brackets:gsub('%[(%+)(%-)]',\
    \ function(x)\n    return x:sub(1, 1)\n  end)\n  local closing_brackets = brackets:gsub('%[(%-)(%+)]',\
    \ function(x)\n    return x:sub(1, 1)\n  end)\n  for i = 1, #opening_brackets\
    \ do\n    if opening_brackets[i] != closing_brackets[i] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and\n         opening_brackets:sub(1,1)\
    \ == closing_brackets:sub(1,1)\nend", "  local opening_brackets = {}\n  local\
    \ closing_brackets = {}\n  for i, c in ipairs(brackets) do\n    if c == '<' then\n\
    \      table.insert(opening_brackets, i)\n    elseif c == '>' then\n      table.insert(closing_brackets,\
    \ i)\n    end\n  end\n  for _, i in ipairs(opening_brackets) do\n    if not closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub('>*', '>')\n  local closing_brackets = brackets:gsub('<*', '<')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local open_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local close_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  for i = 1, #open_brackets do\n    if open_brackets[i] ~= close_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n\
    \  return opening:len() == closing:len() and opening:len() == 1 and closing:len()\
    \ == 1\nend", "  local opening_brackets = brackets:gsub('(<)', '\\1'):gsub('(>)',\
    \ '\\2')\n  local closing_brackets = brackets:gsub('(<)', '\\2'):gsub('(>)', '\\\
    1')\n  return opening_brackets ~= closing_brackets\nend", "  local open_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local close_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local open_brackets_count = open_brackets:count('<')\n  local close_brackets_count\
    \ = close_brackets:count('<')\n  return open_brackets_count == close_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub('(<)', ''):gsub('(>)', '')\n \
    \ local closing_brackets = brackets:gsub('(<)', '')\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  return opening_brackets_count == closing_brackets_count\nend", "  local opening_brackets\
    \ = brackets:gsub('%b()', '')\n  local closing_brackets = brackets:gsub('%b()',\
    \ '%%%1')\n  return opening_brackets:len() == closing_brackets:len()\nend", " \
    \ local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  for i = 1, #opening_brackets do\n    if opening_brackets[i] ~= closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n\
    \  return opening:len() == closing:len() and opening:sub(1,-1) == closing:sub(1,-1)\n\
    end", "  local opening_brackets = brackets:gsub('(<)([^>]+)(>)', '\\2')\n  local\
    \ closing_brackets = brackets:gsub('(<)([^>]+)(>)', '\\3')\n  return opening_brackets\
    \ == closing_brackets\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and\n         opening_brackets:gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1')\
    \ ~= ''\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and\n         opening_brackets:sub(1,1)\
    \ == closing_brackets:sub(1,1)\nend", "  local open_brackets = brackets:gsub('<>',\
    \ ''):gsub('>', '')\n  local close_brackets = brackets:gsub('<', ''):gsub('<',\
    \ '')\n  for i = 1, #open_brackets do\n    if open_brackets[i] ~= close_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening\
    \ = brackets:gsub('(<)','%1')\n  local closing = brackets:gsub('(>)','%1')\n \
    \ return opening:len() == closing:len()\nend", "  local opening_brackets = brackets:gsub('%b<>',\
    \ ''):gsub('%b', '')\n  local closing_brackets = brackets:gsub('%b<>', ''):gsub('%b',\
    \ '')\n  local opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  for i = 1, opening_brackets_count do\n    if opening_brackets:sub(i,\
    \ i-1) ~= closing_brackets:sub(i, i-1) then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local opening_brackets = brackets:gsub('(<%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%",
  "  local opening_brackets = brackets:gsub('%b()', '%s*%b()')\n  local closing_brackets\
    \ = brackets:gsub('%b()', '%s*%b()')\n  local opening_brackets_count = opening_brackets:gsub('%b()',\
    \ '%s*%d+'):gsub('%d+', '%d'):gsub('%d*', '%d'):gsub('%d?', '%d'):gsub('%d*',\
    \ '%d')\n  local closing_brackets_count = closing_brackets:gsub('%b()', '%s*%d+'):gsub('%d+',\
    \ '%d'):gsub('%d*', '%d'):gsub('%d?', '%d'):gsub('%d*', '%d')\n  return opening_brackets_count\
    \ == closing_brackets_count\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local opening_brackets_count = opening_brackets:count('<')\n  local closing_brackets_count\
    \ = closing_brackets:count('<')\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub
  "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('(%1)',function(x)\n\
    \    return closing_brackets:sub(1,x) == x\n  end)\nend", "  local opening_brackets\
    \ = {}\n  local closing_brackets = {}\n  for _, bracket in ipairs(brackets) do\n\
    \    if bracket:sub(1, 1) == '<' then\n      opening_brackets[#opening_brackets+1]\
    \ = bracket\n    elseif bracket:sub(1, 1) == '>' then\n      closing_brackets[#closing_brackets+1]\
    \ = bracket\n    end\n  end\n  for _, opening_bracket in ipairs(opening_brackets)\
    \ do\n    if not closing_brackets[#closing_brackets] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local opening_brackets_count = opening_brackets:count('<')\n  local closing_brackets_count\
    \ = closing_brackets:count('<')\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n \
    \ return opening_brackets:len() == closing_brackets:len() and opening_brackets:all('%1'..'<')\
    \ and closing_brackets:all('<%1'..'>')\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = {}\n  local closing_brackets = {}\n  for i, c in ipairs(brackets) do\n   \
    \ if c == '<' then\n      table.insert(opening_brackets, i)\n    elseif c == '>'\
    \ then\n      table.insert(closing_brackets, i)\n    end\n  end\n  for i = #opening_brackets,\
    \ 1, -1 do\n    if not closing_brackets[i] then\n      return false\n    end\n\
    \  end\n  return true\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n \
    \ return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('(<%%(%+)(%*)%>)', '%1%2%3')\n  local closing_brackets = brackets:gsub('(%%(%+)(%*)%>)',\
    \ '%1%2%3')\n  return opening_brackets:len() == closing_brackets:len()\nend",
  "  local opening_brackets = brackets:gsub('(<)', ''):gsub('(>)', '')\n  local closing_brackets\
    \ = brackets:gsub('(<)', ''):gsub('(>)', '')\n  local opening_count = opening_brackets:len()\n\
    \  local closing_count = closing_brackets:len()\n  return opening_count == closing_count\n\
    end", "  local opening_brackets = brackets:gsub('(<)', '\\1'):gsub('(>)', '\\\
    2')\n  local closing_brackets = brackets:gsub('(<)', '\\2'):gsub('(>)', '\\1')\n\
    \  return opening_brackets ~= closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)', ''):gsub('(>)', '')\n  local closing_brackets = brackets:gsub('(<)',\
    \ ''):gsub('(>)', '')\n  return opening_brackets ~= closing_brackets\nend", " \
    \ local opening_brackets = brackets:gsub('(<)', ''):gsub('(>)', '')\n  local closing_brackets\
    \ = brackets:gsub('(<)', ''):gsub('(>)', '')\n  return opening_brackets == closing_brackets\n\
    end", "  local open_brackets = brackets:gsub('(<%%(%+)(%*)%>)', function(_, _,\
    \ open_brackets)\n    return open_brackets:gsub('(%+)(%*)', function(_, open_brackets,\
    \ close_brackets)\n      return open_brackets .. close_brackets\n    end)\n  end)\n\
    \  return open_brackets:len() == brackets:len()\nend", "  local open_brackets\
    \ = brackets:gsub('(<)', '%s*%L+%L+'):gsub('(>)', '%L+'):gsub('(<*)', '%L+%L+'):gsub('(>*)',\
    \ '%L+')\n  local close_brackets = brackets:gsub('(<)', '%s*%L+%L+'):gsub('(>)',\
    \ '%L+'):gsub('(<*)', '%L+%L+'):gsub('(>*)', '%L+')\n  local open_brackets_count\
    \ = open_brackets:gsub('%L+', '%d+'):gsub('%d+', '%L+'):gsub('%L+', '%d+')\n \
    \ local close_brackets_count = close_brackets:gsub('%L+', '%d+'):gsub('%d+', '%L+'):gsub('%L+',\
    \ '%d+')\n  return open_brackets_count == close_brackets_count\nend", "   local\
    \ opening_brackets = brackets:gsub('<>','')\n   local closing_brackets = brackets:gsub('<','')\n\
    \   local opening_brackets_count = opening_brackets:len()\n   local closing_brackets_count\
    \ = closing_brackets:len()\n   if opening_brackets_count ~= closing_brackets_count\
    \ then\n      return false\n   end\n   for i = 1, opening_brackets_count do\n\
    \      local opening_bracket = opening_brackets:sub(i,i)\n      local closing_bracket\
    \ = closing_brackets:sub(i,i)\n      if opening_bracket ~= closing_bracket then\n\
    \         return false\n      end\n   end\n   return true\nend", "  local opening_brackets\
    \ = brackets:gsub('>*', '>')\n  local closing_brackets = brackets:gsub('<*', '<')\n\
    \  return opening_brackets == closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('%1',''):gsub('%1',''):gsub('%1','')\n\
    end", "  local opening_brackets = brackets:gsub('(<)', '\\1'):gsub('(>)', '\\\
    2')\n  local closing_brackets = brackets:gsub('(<)', '\\2'):gsub('(>)', '\\1')\n\
    \  return opening_brackets ~= closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('<>', ''):gsub('>', '')\n  local closing_brackets = brackets:gsub('<',\
    \ ''):gsub('<', '')\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "   brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \   return brackets:sub(1,1):sub(2,1):sub(3,1):sub(4,1):sub(5,1):sub(6,1):sub(7,1):sub(8,1):sub(9,1):sub(10,1):sub(11,1):sub(12,1):sub(13,1):sub(14,1):sub(15,1):sub(16,1):sub(17,1):sub(18,1):sub(19,1):sub(20,1):sub(21,1):sub(22,1):sub(23,1):sub(24,1):sub(25,1):sub(26,1):sub(27,1):sub(28,1):sub(29,1):sub(30,1):sub(31,1):sub(32,1):sub(33,1):sub(34,1):sub(35,1):sub(36,1):sub(37,1):sub(38,1):sub(39,1):sub(40,1):sub(41,1):sub(42,1):sub(43,1):sub(44,1):sub(45,1):sub(46,1):sub(47,1):sub(48,1):sub(49,1):sub(50,1):sub(51,1):sub(52,1):sub(53,1):sub(54,1):sub(55,1):sub(56,1):sub(57,1):sub(58,1):sub(59,1):sub(60,1):sub(61,1):sub(62,1):sub(63,1):sub(64,1):sub(65,1):sub(66,1):sub(67,1):sub(68,1):sub(69,1):sub(70,1):sub(71,1):sub(72,1):sub(73,1):sub(74,1):sub(75,1):sub(76,1):sub(77,1):sub(78,1):sub(79,1):sub(80,1):sub(81,1):sub(82,1):sub(83,1):sub(84,1):sub(85,1):sub(86,1):sub(87,1):sub(88,1):sub(89,1):sub(90,1):sub(91,1):sub(92,1):sub(93,1):sub(94,1):sub(95,1):sub(96,1):sub(97,1):sub(98,1):sub(99,1):sub(100,1):sub(101,1):sub(102,1):sub(103,1):",
  "  local opening_brackets = brackets:gsub('%b()', '')\n  local closing_brackets\
    \ = brackets:gsub('%b()', '%%%1')\n  return opening_brackets:sub(1, #opening_brackets)\
    \ == closing_brackets\nend", "  local open_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local close_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  for i = 1, #open_brackets do\n    if open_brackets[i+1] ~= close_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('%1',''):gsub('%1','')\n\
    end", "  local opening_brackets = brackets:gsub('(<)', ''):gsub('(>)', '')\n \
    \ local closing_brackets = brackets:gsub('(<)', ''):gsub('(>)', '')\n  return\
    \ opening_brackets:len() == closing_brackets:len()\nend", "  local open_brackets\
    \ = brackets:gsub('(<)', '%s*%1$*'):gsub('(>)', '%s*%1$*'):gsub('(<*)', '%s*%1$*'):gsub('(>*)',\
    \ '%s*%1$*')\n  local close_brackets = brackets:gsub('(<)', '%s*%1$*'):gsub('(>)',\
    \ '%s*%1$*'):gsub('(<*)', '%s*%1$*'):gsub('(>*)', '%s*%1$*')\n  return open_brackets:gsub('(%s*%1$*)',\
    \ ''):gsub('(%s*%1$*)', ''):gsub('(%s*%1$*)', ''):gsub('(%s*%1$*)', '') == close_brackets\n\
    end", "  local opening_brackets = brackets:gsub('(<%%(%+%)%>)', '')\n  local closing_brackets\
    \ = brackets:gsub('(%%(%+%>)%)', '')\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening = brackets:find('<')\n  local closing = brackets:find('>')\n\
    \  local opening_count = brackets:count('<')\n  local closing_count = brackets:count('>')\n\
    \  local opening_open = opening_count > 0 and opening_count ~= opening_open\n\
    \  local closing_open = closing_count > 0 and closing_count ~= closing_open\n\
    \  return opening_open and closing_open\nend", "   for i = 1, #brackets do\n \
    \     local opening = brackets[i]\n      local closing = brackets[i+1]\n     \
    \ if opening ~= \">\" and opening ~= \"<\" then\n         return false\n     \
    \ end\n      if closing ~= \">\" and closing ~= \"<\" then\n         return false\n\
    \      end\n   end\n   return true\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('(%1)','>'):gsub('(%1)','<'):gsub('(%1)','<<'):gsub('(%1)','>>'):gsub('(%1)','<>'):gsub('(%1)','<>>'):gsub('(%1)','<<<'):gsub('(%1)','>>>'):gsub('(%1)','<>'):gsub('(%1)','<>>'):gsub('(%1)','<<<'):gsub('(%1)','>>>'):gsub('(%1)','<>'):gsub('(%1)','<>>'):gsub('(%1)','<<<'):gsub('(%1)','>>>'):gsub('(%1)','<>'):gsub('(%1)','<>>'):gsub('(%1)','<<<'):gsub('(%1)','>>>'):gsub('(%1)','<>'):gsub('(%1)','<>>'):gsub('(%1)','<<<'):gsub('(%1)','>>>'):gsub('(%1)','<>'):gsub('(%1)','<>>'):gsub('(%1)','<<<'):gsub('(%1)','>>>'):gsub('(%1)','<>'):gsub('(%1)','<>>'):gsub('(%1)','<<<'):gsub('(%1)','>>>'):gsub('(%1)','<>'):gsub('(%1)','<>>'):gsub('(%1)','<<<'):gsub('(%1)','>>>'):gsub('(%1)','<>'):gsub('(%1)','<>>'):gsub('(%1)','<<<'):gsub('(%1)','>>>'):gsub('(%1)','<>'):gsub('(",
  "  local opening_brackets = brackets:gsub('(<)', ''):gsub('(>)', '')\n  local closing_brackets\
    \ = brackets:gsub('(<)', ''):gsub('(>)', '')\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local open_brackets = brackets:gsub('%b()',\
    \ '')\n  local close_brackets = open_brackets:gsub('%b()', '')\n  local open_brackets\
    \ = open_brackets:gsub('%b<>', '')\n  local close_brackets = close_brackets:gsub('%b<>',\
    \ '')\n  return open_brackets == close_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  for i = 1, #opening_brackets do\n    if opening_brackets[i+1] ~= closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)', '\\1'):gsub('(>)', '\\2')\n  local closing_brackets =\
    \ brackets:gsub('(<)', '\\2'):gsub('(>)', '\\1')\n  return opening_brackets ~=\
    \ closing_brackets\nend", "  local opening_brackets = {}\n  local closing_brackets\
    \ = {}\n  for _, bracket in ipairs(brackets) do\n    if bracket:sub(1, 1) == '<'\
    \ then\n      opening_brackets[#opening_brackets+1] = bracket\n    elseif bracket:sub(1,\
    \ 1) == '>' then\n      closing_brackets[#closing_brackets+1] = bracket\n    end\n\
    \  end\n  for i = 1, #opening_brackets do\n    if not closing_brackets[i] then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub('(<%%(%+)(%*)%>)', function(_, _, opening_brackets)\n    return\
    \ opening_brackets\n  end)\n  local closing_brackets = brackets:gsub('(%%(%+)(%*)%>)',\
    \ function(_, _, closing_brackets)\n    return closing_brackets\n  end)\n  local\
    \ opening_brackets_count = opening_brackets:gsub('%+', function(_)\n    return\
    \ 1\n  end)\n  local closing_brackets_count = closing_brackets:gsub('%+', function(_)\n\
    \    return 1\n  end)\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('%b()', '')\n  local closing_brackets = brackets:gsub('%b()',\
    \ '%%%1')\n  return opening_brackets:len() == closing_brackets:len()\nend", " \
    \ local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local\
    \ closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and opening_brackets:all()\
    \ ~= '<>'\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n \
    \ return opening_brackets:len() == closing_brackets:len()\nend", "   local open_brackets\
    \ = brackets:gsub('>*$', '>')\n   local close_brackets = brackets:gsub('^>*',\
    \ '>')\n   local open_brackets_count = open_brackets:count('<')\n   local close_brackets_count\
    \ = close_brackets:count('<')\n   return open_brackets_count == close_brackets_count\n\
    end", "  local opening = brackets:find('<')\n  local closing = brackets:find('>')\n\
    \  local opening_count = brackets:count('<')\n  local closing_count = brackets:count('>')\n\
    \  return opening_count == closing_count and opening ~= nil and closing ~= nil\n\
    end", "  local opening = brackets:find('<')\n  local closing = brackets:find('>')\n\
    \  local opening_brackets = brackets:sub(1, opening - 1)\n  local closing_brackets\
    \ = brackets:sub(opening + 1, closing - 1)\n  return opening_brackets ~= closing_brackets\n\
    end", "   if brackets == '<' then return false end\n   if brackets == '>' then\
    \ return true end\n   if brackets == '<>' then return false end\n   if brackets\
    \ == '<<' then return true end\n   if brackets == '>>' then return false end\n\
    \   if brackets == '<>' then return false end\n   if brackets == '<><' then return\
    \ false end\n   if brackets == '><>' then return true end\n   if brackets == '<<><'\
    \ then return true end\n   if brackets == '>>><' then return false end\n   if\
    \ brackets == '<><<' then return false end\n   if brackets == '><><' then return\
    \ true end\n   if brackets == '<<><>' then return true end\n   if brackets ==\
    \ '>>><>' then return false end\n   if brackets == '<><<<' then return false end\n\
    \   if brackets == '><><>' then return true end\n   if brackets == '<<><><' then\
    \ return true end\n   if brackets == '>>><><' then return false end\n   if brackets\
    \ == '<><<<' then return false end\n   if brackets == '><><><' then return true\
    \ end\n   if brackets == '<<><><>' then return true end\n   if brackets == '>>><><>'\
    \ then return false end\n   return false\nend", "  local opening_brackets = brackets:gsub('%b<>',\
    \ '')\n  local closing_brackets = brackets:gsub('%b<>', '>')\n  return opening_brackets:sub(1,\
    \ #opening_brackets) == closing_brackets\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('%1',''):gsub('%1','')\n\
    end", "  local opening = brackets:gsub('(<)','%1')\n  local closing = brackets:gsub('(>)','%1')\n\
    \  return opening:len() == closing:len()\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n \
    \ return opening_brackets:len() == closing_brackets:len()\nend", "   for i = 1,\
    \ #brackets do\n      if brackets[i] == '<' then\n         if brackets[i+1] ==\
    \ '>' then\n            return true\n         else\n            return false\n\
    \         end\n      else\n         if brackets[i] == '>' then\n            return\
    \ false\n         else\n            return true\n         end\n      end\n   end\n\
    end", "  local opening_brackets = brackets:gsub('(<%%(%+)(%>))', function(_, _,\
    \ opening_brackets)\n    return opening_brackets:gsub('(%+)(%>)', '%1>%2')\n \
    \ end)\n  local closing_brackets = brackets:gsub('(%+)(%>)', '<%1%>')\n  return\
    \ opening_brackets == closing_brackets\nend", "  local opening_brackets = brackets:gsub('%b()',\
    \ '%s*%b()')\n  local closing_brackets = brackets:gsub('%b()', '%s*%b()')\n  local\
    \ opening_brackets_count = opening_brackets:gsub('%b()', '%s*%d+'):gsub('%d+',\
    \ '%d*')\n  local closing_brackets_count = closing_brackets:gsub('%b()', '%s*%d+'):gsub('%d+',\
    \ '%d*')\n  return opening_brackets_count == closing_brackets_count\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_27_flip_case
language: lua
prompt: "-- For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
  \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
  \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
  \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local result = string\n  result:gsub('%l', function(c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U', function(c)\n   \
    \ return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "    local\
    \ result = string\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if char >= 'a' and char <= 'z' then\n            char = string.sub(string.sub(i,\
    \ 1, i), -1)\n        end\n        if char >= 'A' and char <= 'Z' then\n     \
    \       char = string.sub(string.sub(i, 1, i), -1)\n        end\n        result\
    \ = result .. char\n    end\n    return result\nend", "  local result = string\n\
    \  local i, j = 1, #string\n  while i < j do\n    local char = string.sub(i, j)\n\
    \    if char == 'a' then\n      char = 'A'\n    else if char == 'A' then\n   \
    \   char = 'a'\n    end\n    i = i + 1\n    j = j - 1\n    result = result ..\
    \ char\n  end\n  return result\nend", "  local result = string\n  -- Lowercase\
    \ letters.\n  for i = 1, #string do\n    local c = string.sub(i, i)\n    if string.sub(c,\
    \ 1) == string.sub(c, 1) then\n      result = string.sub(c, 2)\n    end\n  end\n\
    \  -- Uppercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i)\n    if string.sub(c, 1) == 'a' then\n      result = string.sub(c, 2)\n \
    \   end\n  end\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = {}\n  for _, c in ipairs(string) do\n    local upper =\
    \ string.upper(c)\n    local lower = string.lower(c)\n    result[#result + 1]\
    \ = upper .. lower\n  end\n  return table.concat(result)\nend", "    local result\
    \ = string\n    for i, c in ipairs(string) do\n        if c:lower() == c then\n\
    \            result = result:upper()\n        elseif c:upper() == c then\n   \
    \         result = result:lower()\n        end\n    end\n    return result\nend",
  "  local result = string\n  -- Lowercase to uppercase.\n  for i = 1, #string do\n\
    \    local c = string.sub(i, i)\n    if c:lower() == c then\n      result = string.sub(i,\
    \ 1, i):upper() .. string.sub(i, i + 1)\n    end\n  end\n  return result\nend",
  "  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ end\n    if c == \"A\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\nend",
  "  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j):upper() .. string.sub(i, j):lower()\n      i = i + 1\n      j = j - 1\n \
    \   else\n      i = i + 1\n    end\n  end\n  return result\nend", "  local result\
    \ = string\n  local length = #string\n  for i = 1, length do\n    local char =\
    \ string.sub(i, i)\n    local upper = char >= 'a' and char < 'z'\n    local lower\
    \ = upper and char >= 'A' and char < 'Z'\n    if upper and lower then\n      result\
    \ = string.sub(i, i-1):upper..string.sub(i, i)\n    end\n  end\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    local char = string.sub(i, j)\n    if char == string.upper(char) then\n \
    \     result = string.sub(i, j):lower() + string.sub(i, j + 1)\n      i = i +\
    \ 1\n      j = j + 2\n    elseif char == string.lower(char) then\n      result\
    \ = string.sub(i, j) + string.sub(i, j + 1)\n      i = i + 1\n      j = j + 2\n\
    \    else\n      result = result .. char\n      i = i + 1\n      j = j + 1\n \
    \   end\n  end\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i < j do\n    local c = string.sub(i, j)\n    i = i +\
    \ 1\n    if c == \"a\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    end\n    if c == \"A\" then\n    \
    \  result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j\
    \ - 1\n    end\n  end\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  -- Lowercase letters.\n  for i = 1, #string\
    \ do\n    local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n\
    \      result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  --\
    \ Uppercase letters.\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if char >= 'A' and char <= 'Z' then\n      result = string.sub(i, i)\
    \ + string.sub(i, i + 1)\n    end\n  end\n  return result\nend", "  local result\
    \ = string\n  local i, j = 1, #string\n  while i <= j do\n    local c = string.sub(i,\
    \ j, i)\n    if c == \"a\" then\n      c = string.sub(i, j, i - 1)\n      result\
    \ = result .. string.upper(c)\n    elseif c == \"A\" then\n      c = string.sub(i,\
    \ j, i - 1)\n      result = result .. string.lower(c)\n    end\n    i = j\n  \
    \  j = i\n  end\n  return result\nend", "    local result = {}\n    for _, character\
    \ in ipairs(string) do\n        if character == character then\n            result[#result\
    \ + 1] = character\n        else\n            result[#result + 1] = character\
    \ .. toupper(character)\n        end\n    end\n    return table.concat(result)\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    local c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j):upper() .. string.sub(i, j):lower()\n      i = i + 1\n      j = j - 1\n \
    \   end\n  end\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_27_flip_case
language: lua
prompt: "-- For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
  \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
  \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
  \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local result = string\n  result:gsub('%l', function(c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U', function(c)\n   \
    \ return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "    local\
    \ result = string\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if char >= 'a' and char <= 'z' then\n            char = string.sub(string.sub(i,\
    \ 1, i), -1)\n        end\n        if char >= 'A' and char <= 'Z' then\n     \
    \       char = string.sub(string.sub(i, 1, i), -1)\n        end\n        result\
    \ = result .. char\n    end\n    return result\nend", "  local result = string\n\
    \  local i, j = 1, #string\n  while i < j do\n    local char = string.sub(i, j)\n\
    \    if char == 'a' then\n      char = 'A'\n    else if char == 'A' then\n   \
    \   char = 'a'\n    end\n    i = i + 1\n    j = j - 1\n    result = result ..\
    \ char\n  end\n  return result\nend", "  local result = string\n  -- Lowercase\
    \ letters.\n  for i = 1, #string do\n    local c = string.sub(i, i)\n    if string.sub(c,\
    \ 1) == string.sub(c, 1) then\n      result = string.sub(c, 2)\n    end\n  end\n\
    \  -- Uppercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i)\n    if string.sub(c, 1) == 'a' then\n      result = string.sub(c, 2)\n \
    \   end\n  end\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = {}\n  for _, c in ipairs(string) do\n    local upper =\
    \ string.upper(c)\n    local lower = string.lower(c)\n    result[#result + 1]\
    \ = upper .. lower\n  end\n  return table.concat(result)\nend", "    local result\
    \ = string\n    for i, c in ipairs(string) do\n        if c:lower() == c then\n\
    \            result = result:upper()\n        elseif c:upper() == c then\n   \
    \         result = result:lower()\n        end\n    end\n    return result\nend",
  "  local result = string\n  -- Lowercase to uppercase.\n  for i = 1, #string do\n\
    \    local c = string.sub(i, i)\n    if c:lower() == c then\n      result = string.sub(i,\
    \ 1, i):upper() .. string.sub(i, i + 1)\n    end\n  end\n  return result\nend",
  "  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ end\n    if c == \"A\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\nend",
  "  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j):upper() .. string.sub(i, j):lower()\n      i = i + 1\n      j = j - 1\n \
    \   else\n      i = i + 1\n    end\n  end\n  return result\nend", "  local result\
    \ = string\n  local length = #string\n  for i = 1, length do\n    local char =\
    \ string.sub(i, i)\n    local upper = char >= 'a' and char < 'z'\n    local lower\
    \ = upper and char >= 'A' and char < 'Z'\n    if upper and lower then\n      result\
    \ = string.sub(i, i-1):upper..string.sub(i, i)\n    end\n  end\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    local char = string.sub(i, j)\n    if char == string.upper(char) then\n \
    \     result = string.sub(i, j):lower() + string.sub(i, j + 1)\n      i = i +\
    \ 1\n      j = j + 2\n    elseif char == string.lower(char) then\n      result\
    \ = string.sub(i, j) + string.sub(i, j + 1)\n      i = i + 1\n      j = j + 2\n\
    \    else\n      result = result .. char\n      i = i + 1\n      j = j + 1\n \
    \   end\n  end\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i < j do\n    local c = string.sub(i, j)\n    i = i +\
    \ 1\n    if c == \"a\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    end\n    if c == \"A\" then\n    \
    \  result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j\
    \ - 1\n    end\n  end\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  -- Lowercase letters.\n  for i = 1, #string\
    \ do\n    local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n\
    \      result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  --\
    \ Uppercase letters.\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if char >= 'A' and char <= 'Z' then\n      result = string.sub(i, i)\
    \ + string.sub(i, i + 1)\n    end\n  end\n  return result\nend", "  local result\
    \ = string\n  local i, j = 1, #string\n  while i <= j do\n    local c = string.sub(i,\
    \ j, i)\n    if c == \"a\" then\n      c = string.sub(i, j, i - 1)\n      result\
    \ = result .. string.upper(c)\n    elseif c == \"A\" then\n      c = string.sub(i,\
    \ j, i - 1)\n      result = result .. string.lower(c)\n    end\n    i = j\n  \
    \  j = i\n  end\n  return result\nend", "    local result = {}\n    for _, character\
    \ in ipairs(string) do\n        if character == character then\n            result[#result\
    \ + 1] = character\n        else\n            result[#result + 1] = character\
    \ .. toupper(character)\n        end\n    end\n    return table.concat(result)\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    local c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j):upper() .. string.sub(i, j):lower()\n      i = i + 1\n      j = j - 1\n \
    \   end\n  end\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "    local result = string\n    for i\
    \ = 1, #string do\n        local char = string.sub(i, i)\n        if char >= 'a'\
    \ and char <= 'z' then\n            char = char - 'a'\n        elseif char >=\
    \ 'A' and char <= 'Z' then\n            char = char - 'A'\n        else\n    \
    \        char = char\n        end\n        result = string.sub(i, 1, i) + char\
    \ + string.sub(i, i + 1)\n    end\n    return result\nend", "  local result =\
    \ {}\n  for _, c in ipairs(string) do\n    result[#result + 1] = c:upper()\n \
    \ end\n  return table.concat(result)\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i <= j do\n\
    \    local c = string.sub(i, j, i)\n    if c:lower() == c then\n      result =\
    \ string.sub(i, 1, i) + string.sub(i, i + 1, j) + string.sub(i, j + 1)\n     \
    \ i = i + 1\n      j = j + 1\n    else\n      result = string.sub(i, 1, i) + string.sub(i,\
    \ i + 1, j) + c\n      i = i + 1\n      j = j + 1\n    end\n  end\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i <= j do\n\
    \    local c = string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, \"A\")\n    end\n    if c == \"A\" then\n      c = string.sub(i, j, \"a\"\
    )\n    end\n    if c ~= nil then\n      result = result .. c\n    end\n    i =\
    \ i + 1\n    j = j + 1\n  end\n  return result\nend", "  local result = string\n\
    \  result:gsub('%l', function(c)\n    return string.char(tonumber(c)) .. string.char(tonumber(string.sub(c,\
    \ 2)))\n  end)\n  return result:gsub('%U', function(c)\n    return string.char(tonumber(string.sub(c,\
    \ 2, 1))) .. string.char(tonumber(c))\n  end)\nend", "  local result = string\n\
    \  local i, j = 1, #string\n  while i < j do\n    if string.sub(i, j, j) ~= \"\
    \" then\n      result = string.sub(i, j, j):upper() .. string.sub(i, j + 1, j):lower()\n\
    \      i = j + 1\n    else\n      i = i + 1\n    end\n  end\n  return result\n\
    end", "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = {}\n  for i = 1, #string\
    \ do\n    local c = string.sub(i, i)\n    if c == 'a' then\n      c = 'A'\n  \
    \  elseif c == 'A' then\n      c = 'a'\n    end\n    result[i] = c\n  end\n  return\
    \ table.concat(result)\nend", "  local result = string\n  result:gsub('%l', function(c)\n\
    \    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U', function(c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = string\n  local i, j = 1, #string\n  while i < j do\n    local char\
    \ = string.sub(i, j)\n    if char == 'a' then\n      char = 'A'\n    else if char\
    \ == 'A' then\n      char = 'a'\n    end\n    i = i + 1\n    j = j - 1\n    result\
    \ = result .. char\n  end\n  return result\nend", "  local result = string\n \
    \ local length = string.len()\n  for i = 1, length do\n    local char = string.sub(i,\
    \ i)\n    if char >= 'a' and char <= 'z' then\n      result = string.sub(i, i\
    \ - 1) .. string.sub(string.sub(i, i + 1), 1, string.len()) .. string.sub(i, i\
    \ + 1)\n    end\n  end\n  return result\nend", "  local result = string\n  local\
    \ i, j = 1, #string\n  while i < j do\n    local char = string.sub(i, j)\n   \
    \ local upper = char >= 'a' and char < 'z'\n    local lower = char >= 'A' and\
    \ char < 'Z'\n    if upper and lower then\n      result = string.sub(i, j) ..\
    \ string.sub(j, i)\n      i = j\n    elseif upper then\n      result = string.sub(i,\
    \ j) .. 'A'\n      i = j\n    elseif lower then\n      result = string.sub(i,\
    \ j) .. 'a'\n      i = j\n    end\n    j = i\n  end\n  return result\nend", " \
    \   local result = string\n    for i, c in ipairs(string) do\n        if c:byte()\
    \ == 32 then\n            string.sub(i, 1, string.len(i) + 1):upper():sub(1, string.len(i)\
    \ + 1):lower()\n        else\n            string.sub(i, 1, string.len(i) + 1):lower()\n\
    \        end\n    end\n    return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  result:gsub(\"([a-z])\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"([A-Z])\", function (c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "    local result = string\n    for i,\
    \ c in ipairs(string) do\n        if c:byte() ~= c:byte():lower() then\n     \
    \       result = result:sub(i, i - 1)\n        end\n    end\n    return result:lower()\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    if string.sub(i, 1, 1) == 'a' then\n      result = string.sub(i, 1, 1) ..\
    \ string.sub(j, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n      i =\
    \ i + 1\n      j = j - 1\n    else\n      result = string.sub(i, 1, 1) .. string.sub(j,\
    \ 1, 1) .. string.sub(i, 2, 2) .. string.sub(j, 2, 2)\n      i = i + 1\n     \
    \ j = j - 1\n    end\n  end\n  return result\nend", "  local result = string\n\
    \  -- Lowercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i)\n    if string.lower(c) == c then\n      result = string.sub(string.upper(c),\
    \ i)\n    end\n  end\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i <= j do\n    if string.sub(i, 1, 1) ~= string.sub(i,\
    \ 1, 1) then\n      result = string.sub(i, 1, 1) .. string.sub(j, 1, #string.sub(i,\
    \ 1, 1))\n      i = i + 1\n      j = j - 1\n    else\n      result = string.sub(i,\
    \ 1, 1) .. string.sub(j, 1, #string.sub(i, 1, 1))\n      i = i + 1\n      j =\
    \ j - 1\n    end\n  end\n  return result\nend", "  local result = string\n  local\
    \ i, j = 1, #string\n  while i < j do\n    local char = string.sub(i, j)\n   \
    \ local upper = string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.", "  local result = string\n  -- Lowercase letters.\n\
    \  for i = 1, #string do\n    local char = string.sub(i, i)\n    if char >= 'a'\
    \ and char <= 'z' then\n      result = string.sub(i, i) + string.sub(i, i + 1)\n\
    \    end\n  end\n  -- Uppercase letters.\n  for i = 1, #string do\n    local char\
    \ = string.sub(i, i)\n    if char >= 'A' and char <= 'Z' then\n      result =\
    \ string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  return result\nend",
  "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i <= j do\n    if string.sub(i, 1, 1) ~= string.sub(j,\
    \ 1, 1) then\n      result = string.sub(j, 1, 1) .. string.sub(i, 1, 1) .. string.sub(j,\
    \ 2, #string) .. string.sub(i, 2, #string)\n      i = i + 1\n      j = j + 1\n\
    \    else\n      i = i + 1\n    end\n  end\n  return result\nend", "  local result\
    \ = string\n  result:gsub(\"([a-z])\", function(c) return c:lower() .. c:upper()\
    \ end)\n  result:gsub(\"([A-Z])\", function(c) return c:upper() .. c:lower() end)\n\
    \  return result\nend", "  local result = string\n  result:gsub(\"%l\", function\
    \ (c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"%U\"\
    , function (c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    local char = string.sub(i, j)\n    if char == string.lower then\n      result\
    \ = string.sub(i, j):upper() .. string.sub(i, j + 1):lower()\n      i = i + 1\n\
    \      j = j + 1\n    elseif char == string.upper then\n      result = string.sub(i,\
    \ j):lower() .. string.sub(i, j + 1):upper()\n      i = i + 1\n      j = j + 1\n\
    \    else\n      i = i + 1\n      j = j + 1\n    end\n  end\n  return result\n\
    end", "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "    local result = string\n    for i,\
    \ c in ipairs(string) do\n        if c:lower() then\n            result = result:upper()\n\
    \        elseif c:upper() then\n            result = result:lower()\n        end\n\
    \    end\n    return result\nend", "  local result = string\n  local i, j = 1,\
    \ #string\n  while i < j do\n    local c = string.sub(i, j)\n    if c ~= nil then\n\
    \      if c == 'a' then\n        c = 'A'\n      elseif c == 'A' then\n       \
    \ c = 'a'\n      end\n    end\n    i = i + 1\n    j = j - 1\n    string.sub(i,\
    \ j + 1, result)\n  end\n  return result\nend", "  local result = {}\n  for _,\
    \ char in ipairs(string) do\n    local lower = char:lower()\n    local upper =\
    \ char:upper()\n    result[#result + 1] = lower .. upper\n  end\n  return table.concat(result)\n\
    end", "  local result = string\n  result:gsub(\"([a-z])\", function(c) return\
    \ c:lower() end)\n  result:gsub(\"([A-Z])\", function(c) return c:upper() end)\n\
    \  return result\nend", "  local result = string\n  result:gsub('%l', function(c)\n\
    \    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U', function(c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = string\n  local i, j = 1, #string\n  while i <= j do\n    if string.sub(i,\
    \ 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j, 1, 1) .. string.sub(i,\
    \ 1, 1) .. string.sub(j, 2, #string) .. string.sub(i, 2, #string)\n      i = i\
    \ + 1\n      j = j + 1\n    else\n      i = i + 1\n    end\n  end\n  return result\n\
    end", "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = {}\n  for _, c in ipairs(string)\
    \ do\n    result[#result + 1] = c:upper()\n  end\n  return table.concat(result)\n\
    end", "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "    local result = string\n    for i = 1, #string do\n        local char\
    \ = string.sub(i, i)\n        if char >= 'a' and char <= 'z' then\n          \
    \  char = string.sub(string.sub(i, 1, i), -1)\n        end\n        if char >=\
    \ 'A' and char <= 'Z' then\n            char = string.sub(string.sub(i, 1, i),\
    \ -1)\n        end\n        result = result .. char\n    end\n    return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    local c = string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, \"A\")\n    elseif c == \"A\" then\n      c = string.sub(i, j, \"a\")\n \
    \   end\n    result = result .. c\n    i = i + 1 -- skip next char\n    j = j\
    \ - 1\n  end\n  return result\nend", "    local result = string\n    for i = 1,\
    \ #string do\n        local char = string.sub(i, i)\n        if char >= 'a' and\
    \ char <= 'z' then\n            char = string.sub(i, i - 1)\n        end\n   \
    \     if char >= 'A' and char <= 'Z' then\n            char = string.sub(i, i\
    \ - 1)\n        end\n        result = result .. char\n    end\n    return result\n\
    end", "  local result = string\n  result:gsub(\"([a-z])\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"([A-Z])\", function (c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n    local\
    \ c = string.sub(i, i, i)\n    if string.sub(c, i, i) ~= c then\n      result\
    \ = string.sub(c, i, i):upper() .. string.sub(c, i + 1, i + 1)\n    end\n  end\n\
    \  -- Uppercase letters.\n  for i = #string, 1, -1 do\n    local c = string.sub(i,\
    \ i, i)\n    if string.sub(c, i, i) ~= c then\n      result = string.sub(c, i,\
    \ i):lower() .. string.sub(c, i + 1, i + 1)\n    end\n  end\n  return result\n\
    end", "  local result = string\n  result:gsub(\"([a-z])\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"([A-Z])\", function (c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n    local\
    \ c = string.sub(i, i, i)\n    if c >= 'a' and c <= 'z' then\n      result = string.sub(i,\
    \ i - 1, i - 1) + string.sub(i, i + 1, i + 1) + string.sub(i, 1, i)\n    end\n\
    \  end\n  -- Uppercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i, i)\n    if c >= 'A' and c <= 'Z' then\n      result = string.sub(i, i - 1,\
    \ i - 1) + string.sub(i, i + 1, i + 1) + string.sub(i, 1, i)\n    end\n  end\n\
    \  return result\nend", "  local result = string\n  result:gsub('%l', function(c)\n\
    \    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U', function(c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i < j do\n    local c = string.sub(i, j)\n    i = i +\
    \ 1\n    if c ~= nil then\n      if c == 'a' then\n        c = 'A'\n      elseif\
    \ c == 'A' then\n        c = 'a'\n      end\n    end\n    j = j - 1\n    result\
    \ = result .. c\n  end\n  return result\nend", "  local result = string\n  result:gsub(\"\
    (.)\", function(c) return c:lower() .. c:upper() end)\n  result:gsub(\"(.)\",\
    \ function(c) return c:upper() .. c:lower() end)\n  return result\nend", "  local\
    \ result = string\n  local i, j = 1, #string\n  while i < j do\n    local c =\
    \ string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(i, j - 1, \"\
    A\")\n      j = j - 1\n    end\n    result = result .. c\n    i = i + 1\n  end\n\
    \  return result\nend", "  local result = string\n  result:gsub('%l', function(c)\n\
    \    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U', function(c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = string\n  local length = string.len()\n  for i = 1, length do\n   \
    \ local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n   \
    \   result = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len())\
    \ .. string.sub(i, i + 1)\n    end\n  end\n  return result\nend", "  local result\
    \ = string\n  local i, j = 1, #string\n  while i < j do\n    local char = string.sub(i,\
    \ j)\n    if char == string.lower(char) then\n      result = string.sub(i, j):upper()\
    \ .. string.sub(i, j + 1):lower()\n      i = i + 1\n      j = j + 1\n    elseif\
    \ char == string.upper(char) then\n      result = string.sub(i, j):lower() ..\
    \ string.sub(i, j + 1):upper()\n      i = i + 1\n      j = j + 1\n    else\n \
    \     i = i + 1\n      j = j + 1\n    end\n  end\n  return result\nend", "  local\
    \ result = string\n  local i, j = 1, #string\n  while i < j do\n    local char\
    \ = string.sub(i, j)\n    if char >= 'a' and char <= 'z' then\n      result =\
    \ string.sub(i, j) .. string.sub(string.lower(char), string.upper(char))\n   \
    \   i = i + 1\n      j = j - 1\n    elseif char >= 'A' and char <= 'Z' then\n\
    \      result = string.sub(i, j) .. string.sub(string.upper(char), string.lower(char))\n\
    \      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n      j = j - 1\n\
    \    end\n  end\n  return result\nend", "  local result = string\n  -- Lowercase\
    \ letters.\n  for i = 1, #string do\n    local c = string.sub(i, i, i)\n    if\
    \ string.sub(c, i, i) ~= nil then\n      result = string.gsub(result, '[' .. c\
    \ .. ']', string.upper(c))\n    end\n  end\n  -- Uppercase letters.\n  for i =\
    \ 1, #string do\n    local c = string.sub(i, i, i)\n    if string.sub(c, i, i)\
    \ ~= nil then\n      result = string.gsub(result, '[' .. c .. ']', string.lower(c))\n\
    \    end\n  end\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i < j do\n    local char = string.sub(i, j)\n    if char\
    \ == string.lower(char) then\n      result = string.sub(i, j):upper()\n    elseif\
    \ char == string.upper(char) then\n      result = string.sub(i, j):lower()\n \
    \   else\n      result = result .. char\n    end\n    i = i + 1 -- Increment i\
    \ to skip the character we just flipped.\n    j = j - 1 -- Decrement j to move\
    \ to the next character in string.\n  end\n  return result\nend", "  local result\
    \ = string\n  local i, j = 1, #string\n  while i < j do\n    local char = string.sub(i,\
    \ j)\n    if char == string.lower then\n      result = string.sub(i, j):upper()\n\
    \    elseif char == string.upper then\n      result = string.sub(i, j):lower()\n\
    \    end\n    i = i + 1\n    j = j - 1\n  end\n  return result\nend", "  local\
    \ result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i < j do\n    local char = string.sub(i, j)\n    local\
    \ upper = char >= 'a' and char < 'z'\n    local lower = upper and char >= 'A'\
    \ and char < 'Z'\n    if upper and lower then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = j\n    elseif upper then\n      result = string.sub(i,\
    \ j) .. string.sub(j, i, 'a')\n      i = j\n    elseif lower then\n      result\
    \ = string.sub(i, j) .. string.sub(j, i, 'A')\n      i = j\n    end\n    j = i\n\
    \  end\n  return result\nend", "  local result = string\n  local i, j = 1, #string\n\
    \  while i <= j do\n    if string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n \
    \     result = string.sub(j, 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2,\
    \ 2) .. string.sub(i, 2, 2)\n      i = i + 1\n      j = j - 1\n    else\n    \
    \  i = i + 1\n    end\n  end\n  return result\nend", "  local result = string\n\
    \  result:gsub(\"%l\", function (c)\n    return string.char(tonumber(c) + 32)\n\
    \  end)\n  result:gsub(\"%U\", function (c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i < j do\n    local c = string.sub(i, j)\n    if c:lower()\
    \ == c then\n      result = string.sub(i, j):upper()\n    else\n      result =\
    \ string.sub(i, j):lower()\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return\
    \ result\nend", "    local result = string\n    for i = 1, #string do\n      \
    \  local c = string.sub(i, i)\n        if c:lower() ~= c then\n            local\
    \ upper = string.sub(i, 1, i)\n            local lower = string.sub(i, i + 1)\n\
    \            result = string.sub(result, 1, i-1) .. upper .. lower .. string.sub(result,\
    \ i + 1)\n        end\n    end\n    return result\nend", "  local result = string\n\
    \  local i, j = 1, #string\n  while i <= j do\n    if string.sub(i, 1, 1) ~= string.sub(i,\
    \ 1, 1) then\n      result = string.sub(i, 1, 1) .. string.sub(j, 1, #string.sub(i,\
    \ 1, 1))\n      i = i + 1\n      j = j - 1\n    else\n      result = string.sub(i,\
    \ 1, 1) .. string.sub(j, 1, #string.sub(i, 1, 1))\n      i = i + 1\n      j =\
    \ j - 1\n    end\n  end\n  return result\nend", "  local result = string\n  local\
    \ i, j = 1, #string\n  while i < j do\n    local c = string.sub(i, j)\n    if\
    \ c == 'a' then\n      result = string.sub(i, j):upper():sub(1, 1):lower() ..\
    \ string.sub(i + 1, j)\n      i = i + 1\n    elseif c == 'A' then\n      result\
    \ = string.sub(i, j):upper():sub(1, 1) .. string.sub(i + 1, j)\n      i = i +\
    \ 1\n    elseif c == 'b' then\n      result = string.sub(i, j):upper():sub(2,\
    \ 1):lower() .. string.sub(i + 1, j)\n      i = i + 1\n    elseif c == 'B' then\n\
    \      result = string.sub(i, j):upper():sub(2, 1) .. string.sub(i + 1, j)\n \
    \     i = i + 1\n    elseif c == 'c' then\n      result = string.sub(i, j):upper():sub(3,\
    \ 1):lower() .. string.sub(i + 1, j)\n      i = i + 1\n    elseif c == 'C' then\n\
    \      result = string.sub(i, j):upper():sub(3, 1) .. string.sub(i + 1, j)\n \
    \     i = i + 1\n    elseif c == 'd' then\n      result = string.sub(i, j):upper():sub(4,\
    \ 1):lower() .. string.sub(i + 1, j)\n      i = i + 1\n    elseif c == 'D' then\n\
    \      result = string.sub(i, j):upper():sub(4, 1) .. string.sub(i + 1, j)\n \
    \     i = i + 1\n    elseif c == 'e' then\n      result = string.sub(i, j):upper():sub(5,\
    \ 1):lower() .. string.sub(i + 1, j)\n      i = i + 1\n    elseif c == 'E' then\n\
    \      result = string.sub(i, j):upper():sub(5, 1) .. string.sub(i + 1, j)\n \
    \     i = i + 1\n    elseif c == 'f' then\n      result = string.sub(i, j):upper():sub(6,\
    \ 1):lower() .. string.sub(i + 1, j)\n      i = i + 1\n    elseif c == 'F' then\n\
    \      result = string.sub(i, j):upper():sub(6, 1) .. string.sub(i + 1, j)\n \
    \     i = i + 1\n    elseif c == 'g' then\n      result = string.sub(i, j):upper():sub(7,\
    \ 1):lower() .. string.sub(i + 1, j)\n      i = i + 1\n    elseif c == 'G' then\n\
    \      result = string.sub(i, j):upper():sub(7, 1) .. string.sub(i + 1, j)\n \
    \     i = i + 1\n    elseif c == 'h' then\n      result = string.sub(i, j):upper():sub(8,\
    \ 1):lower() .. string.sub(i + 1, j)\n      i = i + 1\n    elseif c == 'H", " \
    \ local result = string\n  local length = #string\n  for i = 1, length do\n  \
    \  local char = string.sub(i, i)\n    local upper = char >= 'a' and char < 'z'\n\
    \    local lower = char >= 'A' and char < 'Z'\n    if upper and lower then\n \
    \     result = string.sub(i, i - 1) .. string.sub(i, i + 1)\n    end\n  end\n\
    \  return result\nend", "  local result = {}\n  for i = 1, #string do\n    local\
    \ char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n      char\
    \ = string.sub(string.sub(char, 1, 1), 1, 1) + string.sub(string.sub(char, 1,\
    \ 1), 2, 1)\n    end\n    if char >= 'A' and char <= 'Z' then\n      char = string.sub(string.sub(char,\
    \ 1, 1), 1, 1) + string.sub(string.sub(char, 1, 1), 2, 1)\n    end\n    result[i]\
    \ = char\n  end\n  return table.concat(result)\nend", "  local result = string\n\
    \  local i, j = 1, #string\n  while i < j do\n    local char = string.sub(i, j)\n\
    \    if char == string.lower then\n      result = string.sub(string.upper, i)\n\
    \      result = string.sub(result, 1, string.len(string.upper) - i)\n    elseif\
    \ char == string.upper then\n      result = string.sub(string.lower, i)\n    \
    \  result = string.sub(result, 1, string.len(string.lower) - i)\n    end\n   \
    \ i = i + 1\n    j = j - 1\n  end\n  return result\nend", "  local result = string\n\
    \  result:gsub('%l', function(c)\n    return string.char(tonumber(c) + 32)\n \
    \ end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c) -\
    \ 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j =\
    \ 1, #string\n  while i <= j do\n    if string.sub(i, j, j) ~= \"\" then\n   \
    \   result = string.sub(i, j, j):lower() .. string.sub(i, j + 1, j):upper()\n\
    \    end\n    i = i + 1\n    j = j + 1\n  end\n  return result\nend", "  local\
    \ result = string\n  local i, j = 1, #string\n  while i <= j do\n    if string.sub(i,\
    \ 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j, 1, 1) .. string.sub(i,\
    \ 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n      i = i + 1\n    else\n\
    \      i = i + 1\n    end\n    j = j + 1\n  end\n  return result\nend", "  local\
    \ result = string\n  local i, j = 1, #string\n  while i < j do\n    local char\
    \ = string.sub(i, j)\n    if char == string.lower(char) then\n      result = string.sub(string.upper(char),\
    \ 2, string.len(string.upper(char)))\n    elseif char == string.upper(char) then\n\
    \      result = string.sub(string.lower(char), 1, string.len(string.lower(char)))\n\
    \    end\n    i = i + 1\n    j = j - 1\n  end\n  return result\nend", "  local\
    \ result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n    local\
    \ c = string.sub(i, i)\n    if string.byte(c) >= 65 and string.byte(c) <= 90 then\n\
    \      result = string.sub(string.sub(i, 1, i), -1) + string.sub(i, 1) + result\n\
    \    end\n  end\n  -- Uppercase letters.\n  for i = 1, #string do\n    local c\
    \ = string.sub(i, i)\n    if string.byte(c) >= 97 and string.byte(c) <= 122 then\n\
    \      result = string.sub(string.sub(i, 1, i), -1) + string.sub(i, 1) + result\n\
    \    end\n  end\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i < j do\n    if string.sub(i, 1, 1) ~= string.sub(j,\
    \ 1, 1) then\n      result = string.sub(j, 1, 1) .. string.sub(i, 1, 1) .. string.sub(j,\
    \ 2, #string) .. string.sub(i, 2, #string)\n      i = i + 1\n      j = j - 1\n\
    \    else\n      i = i + 1\n    end\n  end\n  return result\nend", "  local result\
    \ = string\n  result:gsub(\"([a-z])\", function (c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub(\"([A-Z])\", function (c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local new_string = string\n  -- Lowercase\
    \ letters.\n  for i = 1, #string do\n    local c = string.sub(i, i, i)\n    if\
    \ string.sub(c, i, i) ~= nil then\n      new_string = new_string .. string.sub(c,\
    \ i, i):upper()\n    end\n  end\n  -- Uppercase letters.\n  for i = 1, #string\
    \ do\n    local c = string.sub(i, i, i)\n    if string.sub(c, i, i) ~= nil then\n\
    \      new_string = new_string .. string.sub(c, i, i):lower()\n    end\n  end\n\
    \  return new_string\nend", "  local result = string\n  result:gsub('%l', function(c)\n\
    \    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U', function(c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = string\n  local length = #string\n  for i = 1, length do\n    local\
    \ c = string.sub(i, i)\n    if c ~= nil then\n      c = string.upper(c)\n    \
    \  c = string.lower(c)\n      result = result .. c\n    end\n  end\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    local char = string.sub(i, j)\n    if char == string.lower(char) then\n \
    \     result = string.sub(i, j):upper():sub(1, #string.sub(i, j))\n    elseif\
    \ char == string.upper(char) then\n      result = string.sub(i, j):lower():sub(1,\
    \ #string.sub(i, j))\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return result\n\
    end", "  local result = string\n  local length = #string\n  for i = 1, length\
    \ do\n    local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n\
    \      result = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len(string.sub(i,\
    \ i + 1)) - 2)\n    end\n  end\n  return result\nend", "  local result = string\n\
    \  -- Lowercase letters.\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if char >= 'a' and char <= 'z' then\n      result = string.sub(i, i)\
    \ + string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase letters.\n  for i = 1,\
    \ #string do\n    local char = string.sub(i, i)\n    if char >= 'A' and char <=\
    \ 'Z' then\n      result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n\
    \  end\n  return result\nend", "  local new_string = string\n  new_string = new_string:gsub(\"\
    %l\", function (c)\n    return string.char(tonumber(c) + 32)\n  end)\n  new_string\
    \ = new_string:gsub(\"%U\", function (c)\n    return string.char(tonumber(c) -\
    \ 32)\n  end)\n  return new_string\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c)) .. string.char(tonumber(string.sub(c,\
    \ 2)))\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(string.sub(c,\
    \ 2, 2))) .. string.char(tonumber(c))\n  end)\n  return result\nend", "  local\
    \ result = string\n  result:gsub(\"([a-z])\", function(c) return c:lower() end)\n\
    \  result:gsub(\"([A-Z])\", function(c) return c:upper() end)\n  return result\n\
    end", "  local result = string\n  result:gsub(\"%l\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"%U\", function (c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = string\n  local i, j = 1, #string\n  while i <= j do\n    local c =\
    \ string.sub(i, j, 1)\n    i = i + 1\n    if c == \"a\" then\n      c = \"A\"\n\
    \    elseif c == \"A\" then\n      c = \"a\"\n    end\n    j = j + 1\n    result\
    \ = result .. c\n  end\n  return result\nend", "  local result = string\n  local\
    \ upper = string.chars:gsub(\"%l\", string.upper)\n  local lower = string.chars:gsub(\"\
    %l\", string.lower)\n  result = string.gsub(upper, \"%l\", lower)\n  return result\n\
    end", "  local result = string\n  -- Lowercase to uppercase and vice versa.\n\
    \  for i = 1, #string do\n    local char = string.sub(i, i)\n    if char >= 'a'\
    \ and char <= 'z' then\n      result = string.sub(i, i) + string.sub(i, i + 1)\n\
    \    end\n  end\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local new_string = ''\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if char >= 'a' and char <= 'z' then\n      char = string.sub(string.sub(string,\
    \ 1, i), -1) + char\n    end\n    new_string = new_string .. char\n  end\n  return\
    \ new_string\nend", "  local result = string\n  local i, j = 1, #string\n  while\
    \ i < j do\n    if string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result\
    \ = string.sub(j, 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i,\
    \ 2, 2)\n      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n\
    \  end\n  return result\nend", "  local result = string\n  result:gsub('%l', function(c)\n\
    \    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U', function(c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = string\n  local upper = string.char(\"A\"..string.upper)\n  local lower\
    \ = string.char(\"a\"..string.lower)\n  for i = 1, string.len(string) do\n   \
    \ local c = string.sub(string, i, i)\n    if c == upper then\n      result = string.sub(string,\
    \ i, i-1)..string.sub(string, i-1, i)..string.sub(string, i+1, i)\n    elseif\
    \ c == lower then\n      result = string.sub(string, i, i-1)..string.sub(string,\
    \ i-1, i)..string.sub(string, i+1, i)\n    else\n      result = string.sub(string,\
    \ i, i-1)..c\n    end\n  end\n  return result\nend", "  local result = string\n\
    \  local i, j = 1, #string\n  while i < j do\n    local c = string.sub(i, j)\n\
    \    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i, j, \"A\")\n  \
    \    i = i + 1\n    end\n    if c == \"A\" then\n      c = string.sub(i, j, \"\
    a\")\n      i = i + 1\n    end\n    if c == \"0\" then\n      c = string.sub(i,\
    \ j, \"0\")\n      i = i + 1\n    end\n    if c == \"1\" then\n      c = string.sub(i,\
    \ j, \"1\")\n      i = i + 1\n    end\n    if c == \"2\" then\n      c = string.sub(i,\
    \ j, \"2\")\n      i = i + 1\n    end\n    if c == \"3\" then\n      c = string.sub(i,\
    \ j, \"3\")\n      i = i + 1\n    end\n    if c == \"4\" then\n      c = string.sub(i,\
    \ j, \"4\")\n      i = i + 1\n    end\n    if c == \"5\" then\n      c = string.sub(i,\
    \ j, \"5\")\n      i = i + 1\n    end\n    if c == \"6\" then\n      c = string.sub(i,\
    \ j, \"6\")\n      i = i + 1\n    end\n    if c == \"7\" then\n      c = string.sub(i,\
    \ j, \"7\")\n      i = i + 1\n    end\n    if c == \"8\" then\n      c = string.sub(i,\
    \ j, \"8\")\n      i = i + 1\n    end\n    if c == \"9\" then\n      c = string.sub(i,\
    \ j, \"9\")\n      i = i + 1\n    end\n    if c == \"-\" then\n      c = string.sub(i,\
    \ j, \"_\")\n      i = i + 1\n    end\n    if c == \"_\" then\n      c = string.sub(i,\
    \ j, \"-\")\n      i = i + 1\n    end\n    if c == \"/\" then\n      c = string.sub(i,\
    \ j, \"/\")\n      i = i + 1\n    end\n    if c == \"%\" then\n      c = string.sub(i,\
    \ j, \"%\")\n      i = i + 1\n    end\n    if c == \"+\" then\n      c = string.sub(i,\
    \ j, \"+\")\n      i = i + 1\n    end\n    if c == \"=\" then\n      c = string.sub(i,\
    \ j, \"=\")\n      i = i + 1\n    end\n    if c == \"&\" then\n      c = string.sub(i,\
    \ j, \"&\")\n      i = i + 1\n    end\n    if c == \"|\" then\n      c = string.sub(i,\
    \ j, \"|\")\n      i = i + 1\n    end\n    if c == \"~\" then\n      c = string.sub(i,\
    \ j, \"~\")\n      i = i + 1\n    end\n    if c == \"?\" then\n      c = string.sub(i,\
    \ j, \"?\")", "  local result = string\n  local i, j = 1, #string\n  while i <\
    \ j do\n    if string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result =\
    \ string.sub(j, 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i,\
    \ 2, 2)\n      i = i + 1\n    else\n      result = string.sub(j, 1, 1) .. string.sub(i,\
    \ 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n      i = i + 1\n     \
    \ j = j - 1\n    end\n  end\n  return result\nend", "  local result = string\n\
    \  local i, j = 1, #string\n  while i < j do\n    local c = string.sub(i, j)\n\
    \    if c == \"a\" then\n      c = string.sub(j, j - 1)\n      j = j - 1\n   \
    \ end\n    result = result .. c\n    i = i + 1\n  end\n  return result\nend",
  "    local result = string\n    for i = 1, #string do\n        local c = string.sub(i,\
    \ i)\n        if c == 'a' then\n            c = 'A'\n        elseif c == 'A' then\n\
    \            c = 'a'\n        end\n        result = string.sub(i, i-1) .. c\n\
    \    end\n    return result\nend", "    local result = string\n    for i, c in\
    \ ipairs(string) do\n        if c:lower() == c then\n            result = result:upper()\n\
    \        elseif c:upper() == c then\n            result = result:lower()\n   \
    \     end\n    end\n    return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i <= j do\n\
    \    if string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, #string) .. string.sub(i, 2,\
    \ #string)\n      i = i + 1\n      j = j + 1\n    else\n      i = i + 1\n    end\n\
    \  end\n  return result\nend", "  local result = string\n  local i, j = 1, #string\n\
    \  while i < j do\n    local char = string.sub(i, j)\n    if char >= 'a' and char\
    \ <= 'z' then\n      result = string.sub(i, j) .. string.sub(string.lower(char),\
    \ string.upper(char))\n    elseif char >= 'A' and char <= 'Z' then\n      result\
    \ = string.sub(i, j) .. string.sub(string.upper(char), string.lower(char))\n \
    \   else\n      result = string.sub(i, j)\n    end\n    i = i + 1\n    j = j -\
    \ 1\n  end\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    local char = string.sub(i, j)\n    local is_upper = char >= 'a' and char\
    \ <= 'z'\n    local is_lower = char >= 'A' and char <= 'Z'\n    if is_upper then\n\
    \      result = string.sub(i, j - 1) .. string.sub(j, j)\n      j = j - 1\n  \
    \  elseif is_lower then\n      result = string.sub(i, j - 1) .. string.sub(j,\
    \ j + 1)\n      j = j + 1\n    else\n      i = i + 1\n    end\n  end\n  return\
    \ result\nend", "  local result = string\n  result:gsub('%l', function(c)\n  \
    \  return string.char(tonumber(c)) .. string.char(tonumber(string.sub(c, 1, 1)))\n\
    \  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(string.sub(c,\
    \ 2, 2))) .. string.char(tonumber(string.sub(c, 1, 1)))\n  end)\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    local char = string.sub(i, j)\n    if char == string.lower then\n      result\
    \ = string.sub(i, j):upper()\n      i = i + 1\n    elseif char == string.upper\
    \ then\n      result = string.sub(i, j):lower()\n      i = i + 1\n    else\n \
    \     i = i + 1\n    end\n  end\n  return result\nend", "  local result = string\n\
    \  result:gsub(\"([A-Z])\", function (c)\n    return string.char(tonumber(c) +\
    \ 32)\n  end)\n  result:gsub(\"([a-z])\", function (c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i < j do\n    local c = string.sub(i, j)\n    if c ==\
    \ \"a\" then\n      c = string.sub(i, j - 1)\n      j = j - 1\n    end\n    if\
    \ c == \"A\" then\n      c = string.sub(i, j - 1)\n      j = j - 1\n    end\n\
    \    if c == \"0\" then\n      c = string.sub(i, j - 1)\n      j = j - 1\n   \
    \ end\n    if c == \"1\" then\n      c = string.sub(i, j - 1)\n      j = j - 1\n\
    \    end\n    if c == \"2\" then\n      c = string.sub(i, j - 1)\n      j = j\
    \ - 1\n    end\n    if c == \"3\" then\n      c = string.sub(i, j - 1)\n     \
    \ j = j - 1\n    end\n    if c == \"4\" then\n      c = string.sub(i, j - 1)\n\
    \      j = j - 1\n    end\n    if c == \"5\" then\n      c = string.sub(i, j -\
    \ 1)\n      j = j - 1\n    end\n    if c == \"6\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"7\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"8\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"9\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"_\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"-\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"+\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"/\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"%\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"^\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"&\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"|\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"~\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"?\" then\n      c = string.sub(i,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"{\" ", "  local result = string\n\
    \  local i, j = 1, #string\n  while i <= j do\n    local char = string.sub(i,\
    \ j)\n    if char == string.lower then\n      result = string.sub(i, j):upper()\
    \ .. string.sub(i, j + 1):lower()\n      i = i + 1\n      j = j + 1\n    elseif\
    \ char == string.upper then\n      result = string.sub(i, j):lower() .. string.sub(i,\
    \ j + 1):upper()\n      i = i + 1\n      j = j + 1\n    else\n      result = result\
    \ .. char\n      i = i + 1\n      j = j + 1\n    end\n  end\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    local c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n     \
    \ result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j\
    \ - 1\n    end\n    if c == \"A\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\nend",
  "  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(i,\
    \ j):upper() .. string.sub(i, j+1):lower()\n      i = i + 1\n      j = j + 1\n\
    \    elseif char == string.upper then\n      result = string.sub(i, j):lower()\
    \ .. string.sub(i, j+1):upper()\n      i = i + 1\n      j = j + 1\n    else\n\
    \      result = result .. char\n      i = i + 1\n      j = j + 1\n    end\n  end\n\
    \  return result\nend", "    local result = string\n    for i = 1, #string do\n\
    \        local c = string.sub(i, i)\n        if c == \"a\" then\n            c\
    \ = \"A\"\n        elseif c == \"A\" then\n            c = \"a\"\n        end\n\
    \        result = string.sub(i, i) + c\n    end\n    return result\nend", "  local\
    \ result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n    local\
    \ c = string.sub(i, i)\n    if c >= 'a' and c <= 'z' then\n      result = string.sub(i,\
    \ i) + string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase letters.\n  for i\
    \ = 1, #string do\n    local c = string.sub(i, i)\n    if c >= 'A' and c <= 'Z'\
    \ then\n      result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n\
    \  return result\nend", "  local result = string\n  local i, j = 1, #string\n\
    \  while i < j do\n    if string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n  \
    \    result = string.sub(j, 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, #string)\
    \ .. string.sub(i, 2, #string)\n      i = i + 1\n      j = j - 1\n    else\n \
    \     i = i + 1\n    end\n  end\n  return result\nend", "    local result = string\n\
    \    for i, c in ipairs(string) do\n        if c:lower() ~= c:upper() then\n \
    \           result = result:sub(i, i)\n        end\n    end\n    return result\n\
    end", "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i <= j do\n    local c = string.sub(i, j)\n    if c ==\
    \ \"a\" then\n      c = string.sub(j, j - 1)\n      j = j - 1\n    end\n    if\
    \ c == \"A\" then\n      c = string.sub(j, j - 1)\n      j = j - 1\n    end\n\
    \    if c == \"0\" then\n      c = string.sub(j, j - 1)\n      j = j - 1\n   \
    \ end\n    if c == \"1\" then\n      c = string.sub(j, j - 1)\n      j = j - 1\n\
    \    end\n    if c == \"2\" then\n      c = string.sub(j, j - 1)\n      j = j\
    \ - 1\n    end\n    if c == \"3\" then\n      c = string.sub(j, j - 1)\n     \
    \ j = j - 1\n    end\n    if c == \"4\" then\n      c = string.sub(j, j - 1)\n\
    \      j = j - 1\n    end\n    if c == \"5\" then\n      c = string.sub(j, j -\
    \ 1)\n      j = j - 1\n    end\n    if c == \"6\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"7\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"8\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"9\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"-\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"_\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"+\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"/\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"%\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"^\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"~\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"!\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \".\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \",\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"'\" then", "  local result =\
    \ string\n  local i, j = 1, #string\n  while i < j do\n    local c = string.sub(i,\
    \ j)\n    i = i + 1\n    if c == \"a\" then\n      result = string.sub(i, j) ..\
    \ string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    end\n    if c == \"\
    A\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    end\n  end\n  return result\nend", "  local result = string\n\
    \  local i, j = 1, #string\n  while i < j do\n    if string.sub(i, 1, 1) ~= string.sub(j,\
    \ 1, 1) then\n      result = string.sub(j, 1, 1) .. string.sub(i, 1, 1) .. string.sub(j,\
    \ 2, #string) .. string.sub(i, 2, #string)\n      i = i + 1\n      j = j - 1\n\
    \    else\n      i = i + 1\n    end\n  end\n  return result\nend", "  local result\
    \ = string\n  local i, j = 1, #string\n  while i < j do\n    local c = string.sub(i,\
    \ j)\n    if c == 'a' then\n      result = string.sub(i, j):upper()\n    elseif\
    \ c == 'A' then\n      result = string.sub(i, j):lower()\n    else\n      result\
    \ = result .. c\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return result\n\
    end", "    local result = string\n    for i = 1, #string do\n        local c =\
    \ string.sub(i, i)\n        if c:lower() ~= c then\n            result = string.sub(i,\
    \ 1, i) + string.sub(i, i + 1, #string)\n        end\n    end\n    return result\n\
    end", "  local result = string\n  -- Lowercase letters.\n  for i = 1, #string\
    \ do\n    local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n\
    \      result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  --\
    \ Uppercase letters.\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if char >= 'A' and char <= 'Z' then\n      result = string.sub(i, i)\
    \ + string.sub(i, i + 1)\n    end\n  end\n  return result\nend", "  local result\
    \ = string\n  local i, j = 1, #string\n  while i <= j do\n    local char = string.sub(i,\
    \ j)\n    local upper = char >= 'a' and char < 'z'\n    local lower = upper and\
    \ char >= 'A' and char < 'Z'\n    if upper and lower then\n      result = string.sub(i,\
    \ j) .. string.sub(j, i)\n    end\n    i = i + 1\n    j = j + 1\n  end\n  return\
    \ result\nend", "  local result = string\n  local length = #string\n  for i =\
    \ 1, length do\n    local char = string.sub(i, i)\n    if char >= 'a' and char\
    \ <= 'z' then\n      result = string.sub(i, i - 1) .. string.sub(string.sub(i,\
    \ i + 1), 1, string.len(string.sub(i, i + 1)) - 2)\n    end\n  end\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i <= j do\n\
    \    local char = string.sub(i, j)\n    if char == string.lower then\n      result\
    \ = string.sub(i, j):upper()..string.sub(i, j+1)\n      i = i + 1\n      j = j\
    \ + 2\n    elseif char == string.upper then\n      result = string.sub(i, j):lower()..string.sub(i,\
    \ j+1)\n      i = i + 1\n      j = j + 2\n    else\n      i = i + 1\n      j =\
    \ j + 1\n    end\n  end\n  return result\nend", "  local result = string\n  --\
    \ Lowercase letters.\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    local upper = string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  -- Lowercase letters.\n  for i = 1, #string\
    \ do\n    local c = string.sub(i, i)\n    if c >= 'a' and c <= 'z' then\n    \
    \  result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase\
    \ letters.\n  for i = 1, #string do\n    local c = string.sub(i, i)\n    if c\
    \ >= 'A' and c <= 'Z' then\n      result = string.sub(i, i) + string.sub(i, i\
    \ + 1)\n    end\n  end\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c)) .. string.char(tonumber(string.sub(c,\
    \ 2)))\n  end)\n  return result:gsub('%U', function(c)\n    return string.char(tonumber(string.sub(c,\
    \ 2, 2))) .. string.char(tonumber(c))\n  end)\nend", "  local result = string\n\
    \  local i, j = 1, #string\n  while i < j do\n    if string.sub(i, i, i) ~= string.sub(j,\
    \ j, j) then\n      result = string.sub(i, i, i)\n    end\n    i = i + 1\n   \
    \ j = j - 1\n  end\n  return result\nend", "    local result = string\n    for\
    \ i, c in ipairs(string) do\n        if c:lower() ~= c then\n            result\
    \ = result:sub(i, i):upper() .. result:sub(i+1, i+1)\n        end\n    end\n \
    \   return result\nend", "  local result = string\n  result:gsub('%l', function(c)\n\
    \    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U', function(c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = string\n  local i, j = 1, #string\n  while i < j do\n    local c =\
    \ string.sub(i, j)\n    if c ~= nil then\n      if c:lower() ~= c then\n     \
    \   result = string.sub(i, j):upper() .. string.sub(i, j)\n      end\n    end\n\
    \    i = i + 1\n    j = j - 1\n  end\n  return result\nend", "  local result =\
    \ string\n  result:gsub(\"(.)\", function(c) return string.upper(c) end)\n  result:gsub(\"\
    (.)\", function(c) return string.lower(c) end)\n  return result\nend", "  local\
    \ result = string\n  local i, j = 1, #string\n  while i <= j do\n    if string.sub(i,\
    \ 1, 1) ~= string.sub(i, 1, 1) then\n      result = string.sub(i, 1, 1) .. string.sub(j,\
    \ 1, #string.sub(i, 1, 1))\n      i = i + 1\n      j = j - 1\n    else\n     \
    \ result = string.sub(i, 1, 1) .. string.sub(j, 1, #string.sub(i, 1, 1))\n   \
    \   i = i + 1\n      j = j - 1\n    end\n  end\n  return result\nend", "  local\
    \ result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i < j do\n    local char = string.sub(i, j)\n    if char\
    \ == string.lower then\n      result = string.sub(i, j):upper() .. string.sub(i,\
    \ j + 1):lower()\n      i = i + 1\n      j = j + 1\n    elseif char == string.upper\
    \ then\n      result = string.sub(i, j):lower() .. string.sub(i, j + 1):upper()\n\
    \      i = i + 1\n      j = j + 1\n    else\n      result = result .. char\n \
    \     i = i + 1\n      j = j + 1\n    end\n  end\n  return result\nend", "  local\
    \ result = string\n  local i, j = 1, #string\n  while i < j do\n    local c =\
    \ string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i, j):upper()\
    \ .. string.sub(i, j):lower()\n      i = i + 1\n      j = j - 1\n    else\n  \
    \    i = i + 1\n    end\n  end\n  return result\nend", "  local result = string\n\
    \  result:gsub('%l', function(c)\n    return string.char(tonumber(c) + 32)\n \
    \ end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c) -\
    \ 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j =\
    \ 1, #string\n  while i < j do\n    local char = string.sub(i, j)\n    if char\
    \ >= 'a' and char <= 'z' then\n      result = string.sub(i, j - 1) .. string.sub(string.sub(string,\
    \ i, j), 1, 1)\n    elseif char >= 'A' and char <= 'Z' then\n      result = string.sub(i,\
    \ j - 1) .. string.sub(string.sub(string, i, j), 1, 1)\n    else\n      result\
    \ = string.sub(i, j)\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return result\n\
    end", "    local result = string\n    for i, c in ipairs(string) do\n        if\
    \ c ~= 'a' and c ~= 'A' then\n            -- Flip case\n            local new_c\
    \ = string.byte(c, string.byte(i))\n            string.byte(c, string.byte(i))\
    \ = string.byte(new_c)\n            string.byte(new_c) = c\n        end\n    end\n\
    \    return result\nend", "    local result = string\n    for i = 1, #string do\n\
    \        local char = string.sub(i, i)\n        if char >= 'a' and char <= 'z'\
    \ then\n            char = string.sub(string.sub(i, 1, i), -1)\n        end\n\
    \        if char >= 'A' and char <= 'Z' then\n            char = string.sub(string.sub(i,\
    \ 1, i), -1)\n        end\n        result = result .. char\n    end\n    return\
    \ result\nend", "  local result = string\n  result:gsub('%l', function(c)\n  \
    \  return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U', function(c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n    local\
    \ c = string.sub(i, i, i)\n    string.sub(i, i, string.len[i])\n    string.sub(i,\
    \ i, string.upper(c))\n  end\n  return result\nend", "  local result = string\n\
    \  -- Lowercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i, i)\n    if string.sub(c, i, i) ~= nil then\n      result = string.gsub(string.sub(c,\
    \ i, i), '\\l+', '\\U&')\n    end\n  end\n  -- Uppercase letters.\n  for i = 1,\
    \ #string do\n    local c = string.sub(i, i, i)\n    if string.sub(c, i, i) ~=\
    \ nil then\n      result = string.gsub(string.sub(c, i, i), '\\U&+', '\\l+')\n\
    \    end\n  end\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i <= j do\n    if string.sub(i, 1, 1) ~= string.sub(j,\
    \ 1, 1) then\n      result = string.sub(j, 1, 1) .. string.sub(i, 1, 1) .. string.sub(j,\
    \ 2, 2) .. string.sub(i, 2, 2)\n      i = i + 1\n    else\n      i = i + 1\n \
    \   end\n    j = j + 1\n  end\n  return result\nend", "  local result = string\n\
    \  local i, j = 1, #string\n  while i <= j do\n    local c = string.sub(i, j,\
    \ i)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i, j, i)\n \
    \     i = i + 1\n      if c == \"A\" then\n        c = string.sub(i, j, i)\n \
    \       i = i + 1\n      end\n    end\n    result = result .. c\n    j = i\n \
    \ end\n  return result\nend", "  local result = string\n  local i, j = 1, #string\n\
    \  while i < j do\n    local c = string.sub(i, j)\n    i = i + 1\n    if c ==\
    \ \"a\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i\
    \ + 1\n      j = j - 1\n    end\n    if c == \"A\" then\n      result = string.sub(i,\
    \ j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    end\n  end\n \
    \ return result\nend", "  local result = string\n  result:gsub(\"%l\", function\
    \ (c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"%U\"\
    , function (c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    if string.sub(i, i, i) ~= string.sub(j, j, j) then\n      result = string.sub(j,\
    \ j, j) .. string.sub(i, i, i)\n      i = i + 1\n    else\n      i = i + 1\n \
    \   end\n  end\n  return result\nend", "  local new_string = ''\n  for i = 1,\
    \ #string do\n    local char = string.sub(i, i)\n    if char >= 'a' and char <=\
    \ 'z' then\n      char = string.sub(string.sub(char, 1, 1), 1, 1) + 'A'\n    end\n\
    \    if char >= 'A' and char <= 'Z' then\n      char = string.sub(string.sub(char,\
    \ 1, 1), 1, 1) + 'a'\n    end\n    new_string = new_string .. char\n  end\n  return\
    \ new_string\nend", "  local result = string\n  result:gsub('%l', function(c)\n\
    \    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U', function(c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n    local\
    \ c = string.sub(i, i)\n    if string.lower(c) ~= c then\n      result = string.sub(i,\
    \ 1, string.upper(c))\n    end\n  end\n  -- Uppercase letters.\n  for i = 1, #string\
    \ do\n    local c = string.sub(i, i)\n    if string.upper(c) ~= c then\n     \
    \ result = string.sub(i, 1, string.lower(c))\n    end\n  end\n  return result\n\
    end", "  local result = string\n  -- Lowercase letters.\n  for i = 1, #string\
    \ do\n    local c = string.sub(i, i)\n    local lc = string.lower(c)\n    if lc\
    \ ~= c then\n      result = string.sub(i, 1, i - 1) + string.upper(lc) + string.sub(i\
    \ + 1, i)\n    end\n  end\n  return result\nend", "  local result = string\n \
    \ local i, j = 1, #string\n  while i <= j do\n    if string.sub(i, 1, 1) ~= string.sub(j,\
    \ 1, 1) then\n      result = string.sub(j, 1, 1) .. string.sub(i, 1, 1) .. string.sub(j,\
    \ 2, 2) .. string.sub(i, 2, 2)\n      i = i + 1\n      j = j - 1\n    else\n \
    \     i = i + 1\n    end\n  end\n  return result\nend", "  local result = {}\n\
    \  for i = 1, #string do\n    local char = string.sub(i, i)\n    if char >= 'a'\
    \ and char <= 'z' then\n      char = string.sub(string.sub(char, 1, 1), 1, 1)\
    \ .. string.sub(string.sub(char, 1, 2), 1, 2)\n    end\n    result[i] = char\n\
    \  end\n  return table.concat(result)\nend", "  local result = string\n  local\
    \ length = #string\n  for i = 1, length do\n    local char = string.sub(i, i)\n\
    \    if char >= 'a' and char <= 'z' then\n      result = string.sub(i, i - 1)\
    \ .. string.sub(string.sub(i, i + 1), 1, string.len(string.sub(i, i + 1)) - 1)\
    \ .. char\n    end\n  end\n  return result\nend", "  local result = string\n \
    \ result:gsub(\"([a-z])\", function (c)\n    return string.char(tonumber(c) +\
    \ 32)\n  end)\n  result:gsub(\"([A-Z])\", function (c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i < j do\n    local char = string.sub(i, j)\n    if char\
    \ == string.upper(char) then\n      result = string.sub(j, j) .. string.lower(char)\n\
    \      j = j + 1\n    elseif char == string.lower(char) then\n      result = string.sub(j,\
    \ j) .. string.upper(char)\n      j = j + 1\n    else\n      i = i + 1\n    end\n\
    \  end\n  return result\nend", "  local result = string\n  local i, j = 1, #string\n\
    \  while i <= j do\n    if string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n \
    \     result = string.sub(j, 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2,\
    \ 2) .. string.sub(i, 2, 2)\n      i = i + 1\n      j = j - 1\n    else\n    \
    \  i = i + 1\n    end\n  end\n  return result\nend", "  local result = string\n\
    \  result:gsub('%l', function(c)\n    return string.char(tonumber(c) + 32)\n \
    \ end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c) -\
    \ 32)\n  end)\n  return result\nend", "  local result = string\n  result:gsub(\"\
    ([a-z])\", function (c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"\
    ([A-Z])\", function (c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return\
    \ result\nend", "  local result = string\n  local i, j = 1, #string\n  while i\
    \ < j do\n    local char = string.sub(i, j)\n    i = i + 1\n    if char >= 'a'\
    \ and char <= 'z' then\n      result = string.sub(i, j - 1) .. string.sub(j, j)\n\
    \      i = i + 1\n    end\n    j = j - 1\n  end\n  return result\nend", "  local\
    \ result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i <= j do\n\
    \    if string.sub(i, j, j) ~= \"\" then\n      result = string.sub(i, j, j):upper()\
    \ .. string.sub(i, j + 1, j):lower()\n    end\n    i = i + 1\n    j = j + 1\n\
    \  end\n  return result\nend", "  local result = string\n  result:gsub(\"%l\"\
    , string.upper)\n  result:gsub(\"%U\", string.lower)\n  return result\nend", " \
    \ local result = string\n  local length = string.len()\n  for i = 1, length do\n\
    \    local char = string.sub(i, i)\n    local upper = string.sub(string, i, i)\n\
    \    local lower = string.sub(string, i, i - 1)\n    if char == upper then\n \
    \     result = string.sub(string, 1, i - 1) .. lower\n    elseif char == lower\
    \ then\n      result = string.sub(string, 1, i) .. upper\n    end\n  end\n  return\
    \ result\nend", "  local result = string\n  result:gsub('%l', function(c)\n  \
    \  return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U', function(c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = string\n  result:gsub(\"([a-z])\", function(c) return c:lower() ..\
    \ c:upper() end)\n  result:gsub(\"([A-Z])\", function(c) return c:upper() .. c:lower()\
    \ end)\n  return result\nend", "  local result = string\n  local i, j = 1, #string\n\
    \  while i < j do\n    local c = string.sub(i, j)\n    if c == 'a' then\n    \
    \  result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j\
    \ - 1\n    elseif c == 'A' then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    elseif c == 'b' then\n      result\
    \ = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n \
    \   elseif c == 'B' then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == 'c' then\n      result = string.sub(i,\
    \ j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == 'C'\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    elseif c == 'd' then\n      result = string.sub(i, j) ..\
    \ string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == 'D' then\n\
    \      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j\
    \ = j - 1\n    elseif c == 'e' then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    elseif c == 'E' then\n      result\
    \ = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n \
    \   elseif c == 'f' then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == 'F' then\n      result = string.sub(i,\
    \ j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == 'g'\
    \ then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n\
    \      j = j - 1\n    elseif c == 'G' then\n      result = string.sub(i, j) ..\
    \ string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    elseif c == 'h' then\n\
    \      result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j\
    \ = j - 1\n    elseif c == 'H' then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    elseif c == 'i' ", "  local result\
    \ = string\n  -- Lowercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i)\n    if c >= 'a' and c <= 'z' then\n      result = string.sub(i, i) + string.sub(i,\
    \ i + 1)\n    end\n  end\n  -- Uppercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if c >= 'A' and c <= 'Z' then\n      result\
    \ = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i <= j do\n\
    \    if string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \    end\n    i = i + 1\n    j = j + 1\n  end\n  return result\nend", "    local\
    \ new_string = ''\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if char >= 'a' and char <= 'z' then\n            char = string.sub(string.sub(char,\
    \ 1, 1), 1, 1) + string.sub(string.sub(char, 1, 2), 1, 1) + 'A'\n        elseif\
    \ char >= 'A' and char <= 'Z' then\n            char = string.sub(string.sub(char,\
    \ 1, 1), 1, 1) + string.sub(string.sub(char, 1, 2), 1, 1) + 'a'\n        else\n\
    \            char = char\n        end\n        new_string = new_string .. char\n\
    \    end\n    return new_string\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

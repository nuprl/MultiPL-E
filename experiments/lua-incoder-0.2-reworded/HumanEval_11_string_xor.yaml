name: HumanEval_11_string_xor
language: lua
prompt: "-- Input are two strings a and b consisting only of 1s and 0s.\n-- Perform\
  \ binary XOR on these inputs and return result also as a string.\n-- >>> string_xor('010',\
  \ '110')\n-- '100'\nlocal function string_xor(a, b)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_xor\n\
  \    lu.assertEquals(candidate('111000', '101010'), '010010')\n    lu.assertEquals(candidate('1',\
  \ '1'), '0')\n    lu.assertEquals(candidate('0101', '0000'), '0101')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local result = ''\n    for i = 1, #a do\n        local c = a[i]\n\
    \        result = (result and c) or b ^ c\n    end\n    return result\nend", " \
    \   local result = \"\"\n    for i = 1, #a do\n        local c = a[i] ^ b[i]\n\
    \        if c > 1 then\n            c = tostring(c):byte(1, -1)\n        end\n\
    \        result = result .. c\n    end\n    return result\nend", "  local result\
    \ = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n \
    \     result = result .. \"1\"\n    else\n      result = result .. \"0\"\n   \
    \ end\n  end\n  return result\nend", "  local result = ''\n  for i = 1, #a do\n\
    \    local c = string.byte(a, i)\n    local d = string.byte(b, i)\n    local carry\
    \ = c ^ d\n    local newcarry = carry ~= 0 and carry or 1\n    local newchar =\
    \ string.char(newcarry)\n    result = result .. newchar\n  end\n  return result\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n\
    \    if c > 0 then\n      result = result .. \"1\"\n    else\n      result = result\
    \ .. \"0\"\n    end\n  end\n  return result\nend", "  local binA = '0000000000000000000000000000000000000000000000000000000000000001'\n\
    \  local binB = '00000000000000000000000000000000000000000000000000000000000000010'\n\
    \  local binC = '00000000000000000000000000000000000000000000000000000000000000011'\n\
    \  local binD = '00000000000000000000000000000000000000000000000000000000000000100'\n\
    \  local binE = '00000000000000000000000000000000000000000000000000000000000000101'\n\
    \  local binF = '00000000000000000000000000000000000000000000000000000000000000110'\n\
    \  local binG = '00000000000000000000000000000000000000000000000000000000000001000'\n\
    \  local binH = '00000000000000000000000000000000000000000000000000000000000001010'\n\
    \  local binI = '00000000000000000000000000000000000000000000000000000000000001101'\n\
    \  local binJ = '00000000000000000000000000000000000000000000000000000000000001110'\n\
    \  local binK = '00000000000000000000000000000000000000000000000000000000000010010'\n\
    \  local binL = '00000000000000000000000000000000000000000000000000000000000010011'\n\
    \  local binM = '00000000000000000000000000000000000000000000000000000000000010100'\n\
    \  local binN = '00000000000000000000000000000000000000000000000000000000000010110'\n\
    \  local binO = '00000000000000000000000000000000000000000000000000000000000010111'\n\
    \  local binP = '00000000000000000000000000000000000000000000000000000000000011100'\n\
    \  local binQ = '00000000000000000000000000000000000000000000000000000000000011101'\n\
    \  local binR = '00000000000000000000000000000000000000000000000000000000000011111'\n\
    \  local binS = '00000000000000000000000000000000000000000000000000000000000100100'\n\
    \  local binT = '00000000000000000000000000000000000000000000000000000000000100101'\n\
    \  local binU = '00000000000000000000000000000000000000000000000000000000000100110'\n\
    \  local binV = '00000000000000000000000000000000000000000000000000000000000100111'\n\
    \  local binW = '00000000000000000000000000000000000000000000000000000000000101000'\n\
    \  local binX = '00000000000000000000000000000000000000000000000000000000000101001'\n\
    \  local binY = '00000000000000000000000000000000000000000000000000000000000101010'\n\
    \  local binZ = '00000000000000000000000000000000000000000000000000000000000101011'\n\
    \  local bin0 = '00000000000000000000000000000000000000000000000000000000000101100'\n\
    \  local bin1 = '00000000000000000000000000000000000000000000000000000000000101101'\n\
    \  local bin2 = '00000000000000000000000000000000000000000000000000000000000101110'\n\
    \  local bin3 = '00000000000000000000000000000000000000000000000000000000000101111'\n\
    \  local bin4 = '00000000000000000000000000000000000000000000000000000000001001000'\n\
    \  local bin5 = '00000000000000000000000000000000000000000000000000000000001001001'\n\
    \  local bin6 = '00000000000000000000000000000000000000000000000000000000001001010'\n\
    \  local bin7 = '00000000000000000000000000000000000000000000000000000000001001011'\n\
    \  local bin8 = '00000000000000000000000000000000000000000000000000000000001010010'\n\
    \  local bin9 = '00000000000000000000000000000000000000000000000000000000001010011'\n\
    \  local binA = '00000000000000000000000000000000000000000000000000000000001010100'\n\
    \  local binB = '00000000000000000000000000000000000000000000000000000000001010101'\n\
    \  local binC = '00000000000000000000000000000000000000000000000000000000001010111'\n\
    \  local binD = '00000000000000000000000000000000000000000000000000000000001011000'\n",
  "  local result = \"\"\n  for i = 1, #a do\n    local c = string.byte(a) ^ string.byte(b)\n\
    \    if c > 0 then\n      result = result .. string.char(c)\n    end\n    b =\
    \ string.sub(b, 2)\n  end\n  return result\nend", "    local ret = \"\"\n    for\
    \ i = 1, #a do\n        ret = ret .. tostring(a:byte(i)) ^ tostring(b:byte(i))\n\
    \    end\n    return ret\nend", "    local result = ''\n    for i = 1, #a do\n\
    \        local c = a[i] ^ b[i]\n        if c > 0 then\n            c = string.format('%x',\
    \ c)\n        end\n        result = result .. c\n    end\n    return result\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = tostring(a[i])\n\
    \    local d = tostring(b[i])\n    local carry = c\n    if d == \"1\" then\n \
    \     carry = 1\n    elseif d == \"0\" then\n      carry = 0\n    end\n    local\
    \ new_carry = carry ^ d\n    carry = new_carry / 2\n    result = result .. tostring(carry)\n\
    \  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n  \
    \  local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n\
    \    else\n      result = result .. \"0\"\n    end\n  end\n  return result\nend",
  "  local c = ''\n  for i = 1, #a do\n    c = c .. tostring(a:byte(i)) ^ tostring(b:byte(i))\n\
    \  end\n  return c\nend", "  local x = 0\n  local y = 0\n  for i = 1, #a do\n\
    \    x = x + (a[i] == '1' and b[i] == '1' and 1 or 0)\n    y = y + (a[i] == '0'\
    \ and b[i] == '0' and 1 or 0)\n  end\n  return string.format('%x', x)\nend", " \
    \ local result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c\
    \ > 0 then\n      result = result .. \"1\"\n    else\n      result = result ..\
    \ \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\
    \ ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n    else\n      result\
    \ = result .. \"0\"\n    end\n  end\n  return result\nend", "    local ret = ''\n\
    \    for i = 1, #a do\n        ret = ret .. tostring(a:byte(i)) ^ tostring(b:byte(i))\n\
    \    end\n    return ret\nend", "  local result = \"\"\n  for i = 1, #a do\n \
    \   local c = tostring(a[i]) .. tostring(b[i])\n    if c ~= '0' and c ~= '1' then\n\
    \      result = c\n      break\n    end\n  end\n  return result\nend", "  local\
    \ result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 1 then\
    \ c = c else c = c end\n    result = result .. string.format(\"%x\", c)\n  end\n\
    \  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local\
    \ c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n    else\n\
    \      result = result .. \"0\"\n    end\n  end\n  return result\nend", "  local\
    \ xor_table = {\n    ['0'] = {'0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\
    \ '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '", "  local binA = '00000000'\n\
    \  local binB = '00000000'\n  for i = 1, #a do\n    binA = binA .. tostring(a:byte(i))\n\
    \  end\n  for i = 1, #b do\n    binB = binB .. tostring(b:byte(i))\n  end\n  return\
    \ binA:sub(1, #binA) .. binB:sub(1, #binB)\nend", "  local result = ''\n  for\
    \ i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result\
    \ .. '1'\n    else\n      result = result .. '0'\n    end\n  end\n  return result\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n\
    \    if c > 0 then\n      result = result .. \"1\"\n    else\n      result = result\
    \ .. \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i] and b[i]\n    if c then\n      result = result\
    \ .. c\n    end\n  end\n  return result\nend", "    local binA = '00000000'\n\
    \    local binB = '00000000'\n    for i = 1, #a do\n        binA = binA .. tostring(a:sub(i,\
    \ i))\n    end\n    for i = 1, #b do\n        binB = binB .. tostring(b:sub(i,\
    \ i))\n    end\n    return binA:sub(1, #binA) .. binB:sub(1, #binB)\nend", " \
    \ local result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c\
    \ > 0 then\n      result = result .. \"1\"\n    else\n      result = result ..\
    \ \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "  local res = \"\"\n  for i = 1, #a do\n    local c = a[i]\n\
    \    local d = b[i]\n    if c ~= d then\n      res = res .. c\n    end\n  end\n\
    \  return res\nend", "  local s = ''\n  for i = 1, #a do\n    s = s .. tostring(a:byte(i))\
    \ ^ tostring(b:byte(i))\n  end\n  return s\nend", "  local res = \"\"\n  for i\
    \ = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      res = res ..\
    \ \"1\"\n    else\n      res = res .. \"0\"\n    end\n  end\n  return res\nend",
  "  local s = ''\n  for i = 1, #a do\n    s = s .. tostring(a:byte(i)) ^ tostring(b:byte(i))\n\
    \  end\n  return s\nend", "  local xor_table = {\n    ['0'] = ['0'],\n    ['1']\
    \ = ['1'],\n    ['1'] = ['0'],\n    ['0'] = ['1']\n  }\n  local xor_result = a\n\
    \  for i = 1, #b do\n    xor_result = xor_table[xor_result][b[i]]\n  end\n  return\
    \ xor_result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c =\
    \ a[i]\n    local d = b[i]\n    if c ~= d then\n      result = result .. c\n \
    \   end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a\
    \ do\n    local c = string.byte(a, i)\n    local d = string.byte(b, i)\n    local\
    \ carry = c xor d\n    local newc = string.byte(a, i) + carry\n    local newd\
    \ = string.byte(b, i) - carry\n    local newcarry = newc xor newd\n    local newresult\
    \ = string.byte(a, i) + newcarry\n    local newnewresult = string.byte(b, i) -\
    \ newcarry\n    if newnewresult > 1 then\n      newresult = newnewresult - 1\n\
    \    end\n    result = result .. string.char(newresult)\n  end\n  return result\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n\
    \    if c > 0 then\n      result = result .. \"1\"\n    else\n      result = result\
    \ .. \"0\"\n    end\n  end\n  return result\nend", "  local xor_table = {\n  \
    \  ['0'] = '0000',\n    ['1'] = '0001',\n    ['1'] = '0010',\n    ['0'] = '0011',\n\
    \    ['1'] = '0100',\n    ['1'] = '0101',\n    ['0'] = '0110',\n    ['1'] = '0111',\n\
    \    ['1'] = '1000',\n    ['1'] = '1001',\n    ['0'] = '1010',\n    ['1'] = '1011',\n\
    \    ['1'] = '1110',\n    ['0'] = '1111',\n    ['1'] = '1110',\n    ['1'] = '1111',\n\
    \    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n\
    \    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n\
    \    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n\
    \    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n\
    \    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n\
    \    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n\
    \    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n\
    \    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n\
    \    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n\
    \    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n\
    \    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n\
    \    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n\
    \    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n\
    \    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n\
    \    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n\
    \    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n\
    \    ['1'] = '1111',\n    ['1'] = '1111',\n    ['1'] = '1111',\n", "  local result\
    \ = \"\"\n  for i = 1, #a do\n    local c = tostring(a[i]) ^ tostring(b[i])\n\
    \    if c > 1 then\n      c = tostring(c) - 48\n    end\n    result = result ..\
    \ tostring(c)\n  end\n  return result\nend", "  local res = ''\n  for i = 1, #a\
    \ do\n    local c = a[i] ^ b[i]\n    if c > '9' then\n      c = '0' .. c\n   \
    \ end\n    res = res .. c\n  end\n  return res\nend", "  local result = \"\"\n\
    \  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      result\
    \ = result .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n\
    \  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local\
    \ c = string.byte(a, i)\n    local d = string.byte(b, i)\n    local xor = c ^\
    \ d\n    local bit = xor % 2\n    if bit == 0 then\n      result = result .. \"\
    0\"\n    else\n      result = result .. \"1\"\n    end\n  end\n  return result\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n\
    \    if c > 0 then\n      result = result .. \"1\"\n    else\n      result = result\
    \ .. \"0\"\n    end\n  end\n  return result\nend", "  local s = ''\n  for i =\
    \ 1, #a do\n    s = s .. tostring(a:byte(i)) ^ tostring(b:byte(i))\n  end\n  return\
    \ s\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n\
    \    if c > 0 then\n      result = result .. \"1\"\n    else\n      result = result\
    \ .. \"0\"\n    end\n  end\n  return result\nend", "  local c = ''\n  for i =\
    \ 1, #a do\n    local d = a[i]\n    c = (d ~= b[i]) and c or d .. '0'\n  end\n\
    \  return c\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\
    \ ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n    else\n      result\
    \ = result .. \"0\"\n    end\n  end\n  return result\nend", "  local result =\
    \ \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 1 then\n   \
    \   result = result .. \"1\"\n    elseif c < -1 then\n      result = result ..\
    \ \"0\"\n    else\n      result = result .. c\n    end\n  end\n  return result\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = string.byte(a,\
    \ i)\n    local d = string.byte(b, i)\n    local xor = c ^ d\n    local bit =\
    \ xor % 2\n    local newbit = xor - bit\n    if bit == 1 then\n      result =\
    \ result .. \"1\"\n    elseif newbit == 1 then\n      result = result .. \"0\"\
    \n    else\n      result = result .. \"1\"\n    end\n  end\n  return result\n\
    end", "  local binA = '00000000'\n  local binB = '00000000'\n  for i = 1, #a do\n\
    \    binA = binA .. tostring(a:byte(i)) .. '0'\n  end\n  for i = 1, #b do\n  \
    \  binB = binB .. tostring(b:byte(i)) .. '0'\n  end\n  return binA:sub(1, #binA)\
    \ .. binB:sub(1, #binB)\nend", "    local result = \"\"\n    for i = 1, #a do\n\
    \        local c = a[i] ^ b[i]\n        if c > 0 then\n            c = string.format(\"\
    %x\", c)\n        end\n        result = result .. c\n    end\n    return result\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local\
    \ d = b[i]\n    if c ~= d then\n      result = result .. c\n    end\n  end\n \
    \ return result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c\
    \ = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n    else\n\
    \      result = result .. \"0\"\n    end\n  end\n  return result\nend", "  local\
    \ result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    if c ~= d then\n      result = result .. c\n    end\n  end\n  return result\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = string.byte(a,\
    \ i)\n    local d = string.byte(b, i)\n    local carry = c xor d\n    if carry\
    \ > 0 then\n      result = result .. \"1\"\n    else\n      result = result ..\
    \ \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "  local xor_table = {\n    ['0'] = ['0'],\n    ['1'] = ['1'],\n\
    \    ['1'] = ['0'],\n    ['0'] = ['1'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n\
    \    ['1'] = ['1'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n\
    \    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n\
    \    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n\
    \    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n\
    \    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n\
    \    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n\
    \    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n\
    \    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n\
    \    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n\
    \    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n\
    \    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n\
    \    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n\
    \    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n\
    \    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n\
    \    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n\
    \    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n\
    \    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = string.byte(a) ^ string.byte(b)\n    local d = string.char(c)\n\
    \    result = result .. d\n    b = string.sub(b, #b)\n  end\n  return result\n\
    end", "  local result = ''\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n  \
    \  if c > '9' then\n      c = c - '9' + '0'\n    elseif c < '0' then\n      c\
    \ = c + 10\n    end\n    result = result .. c\n  end\n  return result\nend", " \
    \ local result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c\
    \ > 0 then\n      result = result .. \"1\"\n    else\n      result = result ..\
    \ \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "  local binA = '0000000000000000000000000000000000000000000000000000000000000001'\n\
    \  local binB = '00000000000000000000000000000000000000000000000000000000000000010'\n\
    \  local binC = '00000000000000000000000000000000000000000000000000000000000000011'\n\
    \  local binD = '00000000000000000000000000000000000000000000000000000000000000100'\n\
    \  local binE = '00000000000000000000000000000000000000000000000000000000000000101'\n\
    \  local binF = '00000000000000000000000000000000000000000000000000000000000000110'\n\
    \  local binG = '0000000000000000000000000000000000000000000000000000000000000100'\n\
    \  local binH = '0000000000000000000000000000000000000000000000000000000000000101'\n\
    \  local binI = '0000000000000000000000000000000000000000000000000000000000000110'\n\
    \  local binJ = '0000000000000000000000000000000000000000000000000000000000001000'\n\
    \  local binK = '0000000000000000000000000000000000000000000000000000000000001001'\n\
    \  local binL = '0000000000000000000000000000000000000000000000000000000000001010'\n\
    \  local binM = '0000000000000000000000000000000000000000000000000000000000001011'\n\
    \  local binN = '0000000000000000000000000000000000000000000000000000000000010000'\n\
    \  local binO = '0000000000000000000000000000000000000000000000000000000000010001'\n\
    \  local binP = '0000000000000000000000000000000000000000000000000000000000010100'\n\
    \  local binQ = '0000000000000000000000000000000000000000000000000000000000010101'\n\
    \  local binR = '0000000000000000000000000000000000000000000000000000000000011000'\n\
    \  local binS = '0000000000000000000000000000000000000000000000000000000000011001'\n\
    \  local binT = '0000000000000000000000000000000000000000000000000000000000011010'\n\
    \  local binU = '0000000000000000000000000000000000000000000000000000000000011011'\n\
    \  local binV = '0000000000000000000000000000000000000000000000000000000000100000'\n\
    \  local binW = '0000000000000000000000000000000000000000000000000000000000100001'\n\
    \  local binX = '0000000000000000000000000000000000000000000000000000000000100100'\n\
    \  local binY = '0000000000000000000000000000000000000000000000000000000000100101'\n\
    \  local binZ = '0000000000000000000000000000000000000000000000000000000000101000'\n\
    \  local bin0 = '0000000000000000000000000000000000000000000000000000000000101001'\n\
    \  local bin1 = '0000000000000000000000000000000000000000000000000000000000110000'\n\
    \  local bin2 = '0000000000000000000000000000000000000000000000000000000000110001'\n\
    \  local bin3 = '0000000000000000000000000000000000000000000000000000000001000000'\n\
    \  local bin4 = '0000000000000000000000000000000000000000000000000000000001000001'\n\
    \  local bin5 = '0000000000000000000000000000000000000000000000000000000001001000'\n\
    \  local bin6 = '0000000000000000000000000000000000000000000000000000000001001001'\n\
    \  local bin7 = '0000000000000000000000000000000000000000000000000000000001010000'\n\
    \  local bin8 = '0000000000000000000000000000000000000000000000000000000001010001'\n\
    \  local bin9 = '0000000000000000000000000000000000000000000000000000000001100000'\n\
    \  local binA = '0000000000000000000000000000000000000000000000000000000001100001'\n\
    \  local binB = '0000000000000000000000000000000000000000000000000000000010000000'\n\
    \  local binC = '0000000000000000000000000000000000000000000000000000000010000001'\n\
    \  local binD = '0000000000000000000000000000000000000000000000000000000010000010'\n\
    \  local binE = '0000000000000000000000000000000000000000000000000000000010000011'\n\
    \  local binF", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\
    \ ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n    else\n      result\
    \ = result .. \"0\"\n    end\n  end\n  return result\nend", "    local result\
    \ = \"\"\n    for i = 1, #a do\n        local c = a[i] ^ b[i]\n        if c >\
    \ 1 then\n            c = tostring(c):byte(8)\n        elseif c < -1 then\n  \
    \          c = tostring(c):byte(-8)\n        end\n        result = result .. c\n\
    \    end\n    return result\nend", "    local c = ''\n    for i = 1, #a do\n \
    \       c = c .. tostring(a:byte(i)) ^ tostring(b:byte(i))\n    end\n    return\
    \ c\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c = tostring(a[i])\
    \ ^ tostring(b[i])\n    if c > 1 then\n      result = result .. \"1\"\n    elseif\
    \ c < 1 then\n      result = result .. \"0\"\n    else\n      result = result\
    \ .. c\n    end\n  end\n  return result\nend", "  local res = a\n  for i = 1,\
    \ #a do\n    res = res .. string.rep('0', #b) .. b[i]\n  end\n  return res\nend",
  "  local binA = a\n  local binB = b\n  local xorResult = ''\n  local bitA = 0\n\
    \  local bitB = 0\n  local bitC = 0\n  local bitD = 0\n  local bitE = 0\n  local\
    \ bitF = 0\n  local bitG = 0\n  local bitH = 0\n  local bitI = 0\n  local bitJ\
    \ = 0\n  local bitK = 0\n  local bitL = 0\n  local bitM = 0\n  local bitN = 0\n\
    \  local bitO = 0\n  local bitP = 0\n  local bitQ = 0\n  local bitR = 0\n  local\
    \ bitS = 0\n  local bitT = 0\n  local bitU = 0\n  local bitV = 0\n  local bitW\
    \ = 0\n  local bitX = 0\n  local bitY = 0\n  local bitZ = 0\n  local bit0 = 0\n\
    \  local bit1 = 0\n  local bit2 = 0\n  local bit3 = 0\n  local bit4 = 0\n  local\
    \ bit5 = 0\n  local bit6 = 0\n  local bit7 = 0\n  local bit8 = 0\n  local bit9\
    \ = 0\n  local bit10 = 0\n  local bit11 = 0\n  local bit12 = 0\n  local bit13\
    \ = 0\n  local bit14 = 0\n  local bit15 = 0\n  local bit16 = 0\n  local bit17\
    \ = 0\n  local bit18 = 0\n  local bit19 = 0\n  local bit20 = 0\n  local bit21\
    \ = 0\n  local bit22 = 0\n  local bit23 = 0\n  local bit24 = 0\n  local bit25\
    \ = 0\n  local bit26 = 0\n  local bit27 = 0\n  local bit28 = 0\n  local bit29\
    \ = 0\n  local bit30 = 0\n  local bit31 = 0\n  local bit32 = 0\n  local bit33\
    \ = 0\n  local bit34 = 0\n  local bit35 = 0\n  local bit36 = 0\n  local bit37\
    \ = 0\n  local bit38 = 0\n  local bit39 = 0\n  local bit40 = 0\n  local bit41\
    \ = 0\n  local bit42 = 0\n  local bit43 = 0\n  local bit44 = 0\n  local bit45\
    \ = 0\n  local bit46 = 0\n  local bit47 = 0\n  local bit48 = 0\n  local bit49\
    \ = 0\n  local bit50 = 0\n  local bit51 = 0\n  local bit52 = 0\n  local bit53\
    \ = 0\n  local bit54 = 0\n  local bit55 = 0\n  local ", "  local result = \"\"\
    \n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      result\
    \ = result .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n\
    \  return result\nend", "  local ret = ''\n  for i = 1, #a do\n    local c = a[i]\
    \ ^ b[i]\n    if c > '9' then\n      c = '0' .. c\n    end\n    ret = ret .. c\n\
    \  end\n  return ret\nend", "  local result = \"\"\n  for i = 1, #a do\n    local\
    \ c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n    else\n\
    \      result = result .. \"0\"\n    end\n  end\n  return result\nend", "    local\
    \ binA = '00000000'\n    local binB = '00000000'\n    for i = 1, #a do\n     \
    \   binA = binA .. tostring(a:byte(i)) .. '0'\n    end\n    for i = 1, #b do\n\
    \        binB = binB .. tostring(b:byte(i)) .. '0'\n    end\n    return binA:sub(1,\
    \ #binA) .. binB:sub(1, #binB)\nend", "  local result = ''\n  for i = 1, #a do\n\
    \    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. '1'\n\
    \    else\n      result = result .. '0'\n    end\n  end\n  return result\nend",
  "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c\
    \ > 0 then\n      result = result .. \"1\"\n    else\n      result = result ..\
    \ \"0\"\n    end\n  end\n  return result\nend", "  local s = ''\n  for i = 1,\
    \ #a do\n    local c = a[i]\n    local d = b[i]\n    s = s .. string.format('%x',\
    \ c ^ d)\n  end\n  return s\nend", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n\
    \    else\n      result = result .. \"0\"\n    end\n  end\n  return result\nend",
  "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    if c ~= d then\n      result = result .. c\n    end\n  end\n  return result\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n\
    \    if c > 0 then\n      result = result .. \"1\"\n    else\n      result = result\
    \ .. \"0\"\n    end\n  end\n  return result\nend", "  local s = ''\n  for i =\
    \ 1, #a do\n    local c = a[i]\n    local d = b[i]\n    s = s .. string.format('%x',\
    \ c ^ d)\n  end\n  return s\nend", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n      result = result\
    \ .. c\n    end\n  end\n  return result\nend", "  local xor_table = {\n    ['0']\
    \ = ['0'],\n    ['1'] = ['1'],\n    ['1'] = ['0'],\n    ['0'] = ['1'],\n    ['1']\
    \ = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1']\
    \ = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1']\
    \ = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1']\
    \ = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1']\
    \ = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1']\
    \ = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1']\
    \ = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1']\
    \ = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1']\
    \ = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1']\
    \ = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1']\
    \ = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1']\
    \ = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1']\
    \ = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1']\
    \ = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1']\
    \ = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1']\
    \ = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1']\
    \ = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['",
  "  local res = ''\n  for i = 1, #a do\n    local c = string.byte(a, i)\n    local\
    \ d = string.byte(b, i)\n    res = res .. string.char(c ^ d)\n  end\n  return\
    \ res\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^\
    \ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n    else\n      result\
    \ = result .. \"0\"\n    end\n  end\n  return result\nend", "  local result =\
    \ \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n   \
    \   result = result .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n\
    \  end\n  return result\nend", "    local result = \"\"\n    for i = 1, #a do\n\
    \        local c = a[i] ^ b[i]\n        if c > 0 then\n            c = string.format(\"\
    %x\", c)\n        end\n        result = result .. c\n    end\n    return result\n\
    end", "  local binA = '00000000'\n  local binB = '00000000'\n  for i = 1, #a do\n\
    \    binA = binA .. tostring(a:sub(i, i))\n  end\n  for i = 1, #b do\n    binB\
    \ = binB .. tostring(b:sub(i, i))\n  end\n  return binA:sub(1, #binA) .. binB:sub(1,\
    \ #binB)\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c = string.byte(a,\
    \ i)\n    local d = string.byte(b, i)\n    local xor = c ^ d\n    if xor > 0 then\n\
    \      result = result .. \"1\"\n    else\n      result = result .. \"0\"\n  \
    \  end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a\
    \ do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"\
    1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return result\n\
    end", "  local c = ''\n  for i = 1, #a do\n    local d = a[i]\n    c = (d ~= b[i])\
    \ and c or d .. '0'\n  end\n  return c\nend", "  local ret = ''\n  for i = 1,\
    \ #a do\n    ret = ret .. tostring(a:byte(i)) ^ tostring(b:byte(i))\n  end\n \
    \ return ret\nend", "  local s = ''\n  for i = 1, #a do\n    local c = a[i] ^\
    \ b[i]\n    s = s .. string.format('%02.2s', tostring(c))\n  end\n  return s\n\
    end", "  local res = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n   \
    \ if c > 0 then\n      res = res .. \"1\"\n    else\n      res = res .. \"0\"\n\
    \    end\n  end\n  return res\nend", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n\
    \    else\n      result = result .. \"0\"\n    end\n  end\n  return result\nend",
  "  local xor_table = {\n    ['0'] = ['0'],\n    ['1'] = ['1'],\n    ['1'] = ['0'],\n\
    \    ['0'] = ['1'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n\
    \    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n\
    \    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n\
    \    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n\
    \    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n\
    \    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n\
    \    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n\
    \    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n\
    \    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n\
    \    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n\
    \    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n\
    \    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n\
    \    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n\
    \    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n\
    \    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n\
    \    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n\
    \    ['0'] = ['0'],\n    ['1'] = ['0'],\n    ['0'] = ['0'],\n    ['1'] = ['0'],\n\
    \    ['0'] = ['0'],\n    ['", "    local result = \"\"\n    for i = 1, #a do\n\
    \        local c = tostring(a[i])\n        local d = tostring(b[i])\n        if\
    \ c == \"1\" then\n            result = result .. \"0\"\n        elseif d == \"\
    1\" then\n            result = result .. \"1\"\n        else\n            result\
    \ = result .. \"0\"\n        end\n    end\n    return result\nend", "  local result\
    \ = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n \
    \     result = result .. \"1\"\n    else\n      result = result .. \"0\"\n   \
    \ end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n\
    \    else\n      result = result .. \"0\"\n    end\n  end\n  return result\nend",
  "    local result = \"\"\n    for i = 1, #a do\n        local c = a[i] ^ b[i]\n\
    \        if c > 0 then\n            c = string.format(\"%x\", c)\n        end\n\
    \        result = result .. c\n    end\n    return result\nend", "  local result\
    \ = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n \
    \     result = result .. \"1\"\n    else\n      result = result .. \"0\"\n   \
    \ end\n  end\n  return result\nend", "  local c = ''\n  for i = 1, #a do\n   \
    \ local d = a[i]\n    c = (d ~= b[i]) and c or d .. '0'\n  end\n  return c\nend",
  "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i] and b[i]\n    if\
    \ c then\n      result = result .. c\n    end\n  end\n  return result\nend", " \
    \ local result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c\
    \ > 0 then\n      result = result .. \"1\"\n    else\n      result = result ..\
    \ \"0\"\n    end\n  end\n  return result\nend", "  local s = ''\n  for i = 1,\
    \ #a do\n    s = s .. tostring(a[i] ^ b[i])\n  end\n  return s\nend", "  local\
    \ result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n\
    \      result = result .. \"1\"\n    else\n      result = result .. \"0\"\n  \
    \  end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a\
    \ do\n    local c = string.byte(a:sub(i, i))\n    local d = string.byte(b:sub(i,\
    \ i))\n    local xor = c ^ d\n    local hex = xor and string.format(\"%x\", xor)\
    \ or \"\"\n    local str = xor and string.format(\"%b\", xor) or \"\"\n    result\
    \ = result .. str .. hex\n  end\n  return result\nend", "  local res = \"\"\n\
    \  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n\
    \      res = res .. c\n    end\n  end\n  return res\nend", "    local ret = ''\n\
    \    for i = 1, #a do\n        ret = ret .. tostring(a:byte(i)) ^ tostring(b:byte(i))\n\
    \    end\n    return ret\nend", "  local result = \"\"\n  for i = 1, #a do\n \
    \   local c = a[i] ^ b[i]\n    if c > 1 then\n      result = result .. \"1\"\n\
    \    elseif c < 1 then\n      result = result .. \"0\"\n    else\n      result\
    \ = result .. c\n    end\n  end\n  return result\nend", "    local result = \"\
    \"\n    for i = 1, #a do\n        local c = a[i] ^ b[i]\n        if c > 0 then\n\
    \            result = \"1\" .. result\n        else\n            result = \"0\"\
    \ .. result\n        end\n    end\n    return result\nend", "  local result =\
    \ \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~=\
    \ d then\n      result = result .. c\n    end\n  end\n  return result\nend", " \
    \   local s = ''\n    for i = 1, #a do\n        s = s .. tostring(a:byte(i)) ^\
    \ tostring(b:byte(i))\n    end\n    return s\nend", "  local s = ''\n  for i =\
    \ 1, #a do\n    local c = a[i] ^ b[i]\n    s = s .. string.format('%02.2x', c)\n\
    \  end\n  return s\nend", "  local result = \"\"\n  for i = 1, #a do\n    local\
    \ c = a[i] ^ b[i]\n    if c > 1 then\n      result = result .. \"1\"\n    elseif\
    \ c < 1 then\n      result = result .. \"0\"\n    end\n  end\n  return result\n\
    end", "  local c = ''\n  for i = 1, #a do\n    c = c .. tostring(a:byte(i)) ^\
    \ tostring(b:byte(i))\n  end\n  return c\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = string.byte(a, i)\n    local d = string.byte(b,\
    \ i)\n    local carry = c xor d\n    local newc = string.char(c xor d or carry)\n\
    \    local newd = string.char(d xor c or carry)\n    local newcarry = string.char(c\
    \ xor d or carry or 0)\n    result = result .. newc .. newd .. newcarry\n  end\n\
    \  return result\nend", "    local binA = '0000000000000000000000000000000000000000000000000000000000000001'\n\
    \    local binB = '00000000000000000000000000000000000000000000000000000000000000010'\n\
    \    local binC = '00000000000000000000000000000000000000000000000000000000000000011'\n\
    \    local binD = '00000000000000000000000000000000000000000000000000000000000000100'\n\
    \    local binE = '00000000000000000000000000000000000000000000000000000000000000101'\n\
    \    local binF = '00000000000000000000000000000000000000000000000000000000000000110'\n\
    \    local binG = '0000000000000000000000000000000000000000000000000000000000000100'\n\
    \    local binH = '0000000000000000000000000000000000000000000000000000000000000101'\n\
    \    local binI = '0000000000000000000000000000000000000000000000000000000000000110'\n\
    \    local binJ = '0000000000000000000000000000000000000000000000000000000000001000'\n\
    \    local binK = '0000000000000000000000000000000000000000000000000000000000001001'\n\
    \    local binL = '0000000000000000000000000000000000000000000000000000000000001010'\n\
    \    local binM = '0000000000000000000000000000000000000000000000000000000000001011'\n\
    \    local binN = '0000000000000000000000000000000000000000000000000000000000010000'\n\
    \    local binO = '0000000000000000000000000000000000000000000000000000000000010001'\n\
    \    local binP = '0000000000000000000000000000000000000000000000000000000000010100'\n\
    \    local binQ = '0000000000000000000000000000000000000000000000000000000000010101'\n\
    \    local binR = '0000000000000000000000000000000000000000000000000000000000011000'\n\
    \    local binS = '0000000000000000000000000000000000000000000000000000000000011001'\n\
    \    local binT = '0000000000000000000000000000000000000000000000000000000000011010'\n\
    \    local binU = '0000000000000000000000000000000000000000000000000000000000011011'\n\
    \    local binV = '0000000000000000000000000000000000000000000000000000000000100000'\n\
    \    local binW = '0000000000000000000000000000000000000000000000000000000000100001'\n\
    \    local binX = '0000000000000000000000000000000000000000000000000000000000101000'\n\
    \    local binY = '0000000000000000000000000000000000000000000000000000000000101001'\n\
    \    local binZ = '0000000000000000000000000000000000000000000000000000000000101010'\n\
    \    local bin0 = '0000000000000000000000000000000000000000000000000000000000101011'\n\
    \    local bin1 = '0000000000000000000000000000000000000000000000000000000000110000'\n\
    \    local bin2 = '0000000000000000000000000000000000000000000000000000000000110001'\n\
    \    local bin3 = '0000000000000000000000000000000000000000000000000000000000110010'\n\
    \    local bin4 = '0000000000000000000000000000000000000000000000000000000000110011'\n\
    \    local bin5 = '0000000000000000000000000000000000000000000000000000000000110100'\n\
    \    local bin6 = '0000000000000000000000000000000000000000000000000000000000110101'\n\
    \    local bin7 = '00000000000000000000000000000000000000000000000000000000001101100'\n\
    \    local bin8 = '00000000000000000000000000000000000000000000000000000000001101101'\n\
    \    local bin9 = '0000000000000000000000000000000000000000000000000000000000111000'\n\
    \    local binA = '0000000000000000000000000000000000000000000000000000000000111001'\n\
    \    local binB = '0000000000000000000000000000000000000000000000000000000000111010'\n\
    \    local binC = '0000000000000000000000000000000000000000000000000000000000111011'\n\
    \    local binD = '0000000000000000000000000000000000000000000000000000000000111100'\n\
    \    local binE = '0000000000000000000000000000000000000000000000000000000000111101'\n\
    \    local bin", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\
    \ ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n    else\n      result\
    \ = result .. \"0\"\n    end\n  end\n  return result\nend", "  local res = \"\"\
    \n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      res\
    \ = res .. \"1\"\n    else\n      res = res .. \"0\"\n    end\n  end\n  return\
    \ res\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c = tostring(a:sub(i,\
    \ i))\n    local d = tostring(b:sub(i, i))\n    local carry = c == \"1\" and d\
    \ == \"0\"\n    local result = result .. tostring(carry and \"1\" or \"0\")\n\
    \  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n  \
    \  local c = string.byte(a, i)\n    local d = string.byte(b, i)\n    local xor\
    \ = c ^ d\n    local result = result .. string.format(\"%x\", xor)\n  end\n  return\
    \ result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\
    \ ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n    else\n      result\
    \ = result .. \"0\"\n    end\n  end\n  return result\nend", "  local result =\
    \ \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n   \
    \   result = result .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n\
    \  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n  \
    \  local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n\
    \    else\n      result = result .. \"0\"\n    end\n  end\n  return result\nend",
  "    local binA = '00000000'\n    local binB = '00000000'\n    for i = 1, #a do\n\
    \        binA = binA .. tostring(a:sub(i,i))\n    end\n    for i = 1, #b do\n\
    \        binB = binB .. tostring(b:sub(i,i))\n    end\n    return binA:sub(1,#binA)\
    \ .. binB:sub(1,#binB)\nend", "  local xor_table = {\n    ['0'] = ['0'],\n   \
    \ ['1'] = ['1'],\n    ['1'] = ['0'],\n    ['0'] = ['1']\n  }\n  return xor_table[tostring(a)][tostring(b)]\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n\
    \    if c > 0 then\n      result = result .. \"1\"\n    else\n      result = result\
    \ .. \"0\"\n    end\n  end\n  return result\nend", "  local c = ''\n  for i =\
    \ 1, #a do\n    c = c .. tostring(a:byte(i)) ^ tostring(b:byte(i))\n  end\n  return\
    \ c\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n\
    \    if c > 0 then\n      result = result .. \"1\"\n    else\n      result = result\
    \ .. \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\
    \ ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n    else\n      result\
    \ = result .. \"0\"\n    end\n  end\n  return result\nend", "  local result =\
    \ \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n   \
    \   result = result .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n\
    \  end\n  return result\nend", "    local s = ''\n    for i = 1, #a do\n     \
    \   s = s .. string.rep(a[i], #b[i])\n    end\n    return s\nend", "  local result\
    \ = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n \
    \     result = result .. \"1\"\n    else\n      result = result .. \"0\"\n   \
    \ end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n\
    \    else\n      result = result .. \"0\"\n    end\n  end\n  return result\nend",
  "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    if c ~= d then\n      result = result .. c\n    end\n  end\n  return result\n\
    end", "  local result = ''\n  for i = 1, #a do\n    local c = a[i]\n    local\
    \ d = b[i]\n    if c ~= d then\n      result = result .. c\n    end\n  end\n \
    \ return result\nend", "  local binA = '00000000'\n  local binB = '00000000'\n\
    \  for i = 1, #a do\n    binA = binA .. tostring(a:byte(i))\n  end\n  for i =\
    \ 1, #b do\n    binB = binB .. tostring(b:byte(i))\n  end\n  return binA:sub(1,\
    \ #binA) .. binB:sub(1, #binB)\nend", "  local result = \"\"\n  for i = 1, #a\
    \ do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"\
    1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return result\n\
    end", "  local s = ''\n  for i = 1, #a do\n    s = s .. tostring(a[i] ^ b[i])\n\
    \  end\n  return s\nend", "  local result = ''\n  for i = 1, #a do\n    local\
    \ c = a[i]\n    local d = b[i]\n    if c ~= d then\n      result = result .. c\n\
    \    end\n  end\n  return result\nend", "    local result = \"\"\n    for i =\
    \ 1, #a do\n        local c = a[i] ^ b[i]\n        if c > 0 then\n           \
    \ c = string.format(\"%x\", c)\n        end\n        result = result .. c\n  \
    \  end\n    return result\nend", "  local result = ''\n  for i = 1, #a do\n  \
    \  local c = tostring(a:sub(i, i))\n    local d = tostring(b:sub(i, i))\n    local\
    \ result = result .. string.format(\"%c\", tostring(c:byte() ^ d:byte()))\n  end\n\
    \  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local\
    \ c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n    else\n\
    \      result = result .. \"0\"\n    end\n  end\n  return result\nend", "  local\
    \ result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n\
    \      result = result .. \"1\"\n    else\n      result = result .. \"0\"\n  \
    \  end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a\
    \ do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"\
    1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return result\n\
    end", "  local c = ''\n  for i = 1, #a do\n    c = c .. string.rep(a[i], #b) ..\
    \ string.rep(b[i], #a)\n  end\n  return c\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "  local res = \"\"\n  for i = 1, #a do\n    local c = tostring(a[i])\
    \ ^ tostring(b[i])\n    res = res .. tostring(c)\n  end\n  return res\nend", " \
    \ local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    local carry = c\n    if d == \"1\" then\n      carry = carry ~ \"0\"\n  \
    \  else\n      carry = carry ~ \"1\"\n    end\n    result = result .. carry ..\
    \ d\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i]\n    local d = b[i]\n    local carry = c xor d\n    local\
    \ newChar = string.char(c xor d or carry)\n    result = result .. newChar\n  end\n\
    \  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local\
    \ c = a[i]\n    local d = b[i]\n    if c ~= d then\n      result = result .. c\n\
    \    end\n  end\n  return result\nend", "    local result = \"\"\n    for i =\
    \ 1, #a do\n        local c = a[i] ^ b[i]\n        if c > 0 then\n           \
    \ c = string.format(\"%x\", c)\n        end\n        result = result .. c\n  \
    \  end\n    return result\nend", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i] ^ b[i]\n    if c > 1 then\n      result = result .. \"1\"\n\
    \    elseif c < 1 then\n      result = result .. \"0\"\n    else\n      result\
    \ = result .. \"0\"\n    end\n  end\n  return result\nend", "  local result =\
    \ \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    local\
    \ carry = c\n    if d == \"1\" then\n      carry = carry == \"1\" and \"0\" or\
    \ \"1\"\n    else\n      carry = carry == \"0\" and \"1\" or \"0\"\n    end\n\
    \    result = result .. carry\n  end\n  return result\nend", "  local result =\
    \ \"\"\n  for i = 1, #a do\n    local c = tostring(a[i])\n    local d = tostring(b[i])\n\
    \    if c ~= d then\n      result = result .. tostring(c) .. tostring(d)\n   \
    \ end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n\
    \    else\n      result = result .. \"0\"\n    end\n  end\n  return result\nend",
  "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    if c ~= d then\n      result = result .. c\n    end\n  end\n  return result\n\
    end", "  local s = ''\n  for i = 1, #a do\n    s = s .. tostring(a:byte(i)) ^\
    \ tostring(b:byte(i))\n  end\n  return s\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = tostring(a[i]) ^ tostring(b[i])\n    if c > 0 then\n\
    \      result = result .. tostring(c)\n    else\n      result = result .. \"0\"\
    \n    end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1,\
    \ #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result ..\
    \ \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return result\n\
    end", "  local res = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n   \
    \ if c > 0 then\n      res = res .. \"1\"\n    else\n      res = res .. \"0\"\n\
    \    end\n  end\n  return res\nend", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n\
    \    elseif c < 0 then\n      result = result .. \"0\"\n    else\n      result\
    \ = result .. \"0\"\n    end\n  end\n  return result\nend", "  local result =\
    \ \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n   \
    \   result = result .. \"1\"\n    elseif c = 0 then\n      result = result ..\
    \ \"0\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return result\n\
    end", "  local xor_table = {\n    ['0'] = '0000',\n    ['1'] = '0001',\n    ['1']\
    \ = '0010',\n    ['0'] = '0011',\n    ['1'] = '0100',\n    ['0'] = '0101',\n \
    \   ['1'] = '0110',\n    ['0'] = '0111',\n    ['1'] = '1000',\n    ['0'] = '1001',\n\
    \    ['1'] = '1010',\n    ['0'] = '1011',\n    ['1'] = '1100',\n    ['0'] = '1101',\n\
    \    ['1'] = '1110',\n    ['0'] = '1111',\n  }\n  local xor = ''\n  for i = 1,\
    \ #a do\n    xor = xor .. xor_table[string.byte(a[i])] .. xor_table[string.byte(b[i])]\n\
    \  end\n  return xor\nend", "  local result = \"\"\n  for i = 1, #a do\n    local\
    \ c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n    else\n\
    \      result = result .. \"0\"\n    end\n  end\n  return result\nend", "  local\
    \ result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n\
    \      result = result .. \"1\"\n    else\n      result = result .. \"0\"\n  \
    \  end\n  end\n  return result\nend", "  local res = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i] ^ b[i]\n    if c > 0 then\n      res = res .. \"1\"\n    else\n\
    \      res = res .. \"0\"\n    end\n  end\n  return res\nend", "  local bin1 =\
    \ string.format(\"%02.b\", tonumber(a))\n  local bin2 = string.format(\"%02.b\"\
    , tonumber(b))\n  local xor = bin1 ^ bin2\n  return string.format(\"%02.b\", xor)\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n\
    \    if c > 0 then\n      result = result .. \"1\"\n    else\n      result = result\
    \ .. \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n \
    \     result = result .. c\n    end\n  end\n  return result\nend", "  local result\
    \ = \"\"\n  for i = 1, #a do\n    local c = tostring(a) ^ tostring(b)\n    if\
    \ c > \"9\" then\n      c = \"0\"\n    end\n    result = result .. c\n    b =\
    \ b and \"1\" or \"0\"\n  end\n  return result\nend", "  local result = \"\"\n\
    \  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      result\
    \ = result .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n\
    \  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local\
    \ c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n    else\n\
    \      result = result .. \"0\"\n    end\n  end\n  return result\nend", "  local\
    \ result = \"\"\n  for i = 1, #a do\n    local c = tostring(a[i]) ^ tostring(b[i])\n\
    \    if c > \"9\" then\n      c = tostring(\"0\") + c\n    end\n    result = result\
    \ .. c\n  end\n  return result\nend", "  local bin1 = string.format('%b', a)\n\
    \  local bin2 = string.format('%b', b)\n  local xor = bin1 .. bin2\n  return xor\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = string.byte(a,\
    \ 1, i)\n    local d = string.byte(b, 1, i)\n    local xor = c ^ d\n    local\
    \ result = result .. string.char(xor)\n  end\n  return result\nend", "  local\
    \ ret = ''\n  for i = 1, #a do\n    ret = ret .. tostring(a:byte(i)) ^ tostring(b:byte(i))\n\
    \  end\n  return ret\nend", "  local result = \"\"\n  for i = 1, #a do\n    local\
    \ c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n    else\n\
    \      result = result .. \"0\"\n    end\n  end\n  return result\nend", "  local\
    \ binA = '00000000'\n  local binB = '00000000'\n  for i = 1, #a do\n    binA =\
    \ binA .. string.format('%010b', tonumber(a[i]))\n  end\n  for i = 1, #b do\n\
    \    binB = binB .. string.format('%010b', tonumber(b[i]))\n  end\n  return binA:sub(1,\
    \ #binA) .. binB:sub(1, #binB)\nend", "  local binA = '0b'\n  local binB = '0b'\n\
    \  for i = 1, #a do\n    binA = binA .. tostring(a:byte(i))\n  end\n  for i =\
    \ 1, #b do\n    binB = binB .. tostring(b:byte(i))\n  end\n  return binA:sub(1,\
    \ #binA) .. binB:sub(1, #binB)\nend", "  local result = \"\"\n  for i = 1, #a\
    \ do\n    local c = tostring(a[i])\n    local d = tostring(b[i])\n    if c ~=\
    \ d then\n      result = result .. tostring(c) .. tostring(d)\n    end\n  end\n\
    \  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local\
    \ c = tostring(a:sub(i, i))\n    local d = tostring(b:sub(i, i))\n    local res\
    \ = tostring(c:byte(1, 1):bit(8):xor(d:byte(1, 1):bit(8)))\n    if res == \"\"\
    \ then res = c end\n    result = result .. res\n  end\n  return result\nend",
  "  local binA = '00000000'\n  local binB = '00000000'\n  for i = 1, #a do\n    binA\
    \ = binA .. string.format('%010b', tonumber(a[i]))\n  end\n  for i = 1, #b do\n\
    \    binB = binB .. string.format('%010b', tonumber(b[i]))\n  end\n  return binA:sub(1,\
    \ #binA) .. binB:sub(1, #binB)\nend", "    local result = \"\"\n    for i = 1,\
    \ #a do\n        local c = string.byte(a, i)\n        local d = string.byte(b,\
    \ i)\n        if c ~= d then\n            result = result .. \"0\"\n        else\n\
    \            result = result .. \"1\"\n        end\n    end\n    return result\n\
    end", "  local xor_result = ''\n  for i = 1, #a do\n    xor_result = xor_result\
    \ .. tostring(a:byte(i)) ^ tostring(b:byte(i))\n  end\n  return xor_result\nend",
  "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    if c ~= d then\n      result = result .. c\n    end\n  end\n  return result\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = string.byte(a,\
    \ i)\n    local d = string.byte(b, i)\n    local carry = c xor d\n    if carry\
    \ > 0 then\n      result = result .. \"1\"\n    else\n      result = result ..\
    \ \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\
    \ ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n    else\n      result\
    \ = result .. \"0\"\n    end\n  end\n  return result\nend", "  local result =\
    \ \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n   \
    \   result = result .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n\
    \  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n  \
    \  local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n\
    \    else\n      result = result .. \"0\"\n    end\n  end\n  return result\nend",
  "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c\
    \ > 0 then\n      result = result .. \"1\"\n    else\n      result = result ..\
    \ \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = tostring(a:sub(i, i))\n    local d = tostring(b:sub(i,\
    \ i))\n    if c ~= d then\n      result = result .. tostring(c:byte(1, 1):bit(1,\
    \ 1) xor d:byte(1, 1):bit(1, 1))\n    end\n  end\n  return result\nend", "  local\
    \ binA = '00000000'\n  local binB = '00000000'\n  for i = 1, #a do\n    binA =\
    \ binA .. tostring(a:byte(i)) .. '0'\n  end\n  for i = 1, #b do\n    binB = binB\
    \ .. tostring(b:byte(i)) .. '0'\n  end\n  return binA:sub(1, #binA) .. binB:sub(1,\
    \ #binB)\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\
    \ ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n    else\n      result\
    \ = result .. \"0\"\n    end\n  end\n  return result\nend", "    local result\
    \ = ''\n    for i = 1, #a do\n        local c = a[i] ^ b[i]\n        if c > 0\
    \ then\n            c = string.format('%x', c)\n        end\n        result =\
    \ result .. c\n    end\n    return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "  local c = ''\n  for i = 1, #a do\n    local d = a[i]\n    c\
    \ = (d ~= b[i]) and c or d .. '0'\n  end\n  return c\nend", "  local result =\
    \ \"\"\n  for i = 1, #a do\n    local c = a[i] and b[i]\n    if c then\n     \
    \ result = result .. c\n    end\n  end\n  return result\nend", "  local res =\
    \ \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n   \
    \   res = res .. \"1\"\n    else\n      res = res .. \"0\"\n    end\n  end\n \
    \ return res\nend", "  local res = ''\n  for i = 1, #a do\n    local c = string.byte(a,\
    \ i)\n    local d = string.byte(b, i)\n    res = res .. string.format('%x', c\
    \ ^ d)\n  end\n  return res\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

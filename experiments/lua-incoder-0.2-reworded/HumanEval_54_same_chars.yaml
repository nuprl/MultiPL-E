name: HumanEval_54_same_chars
language: lua
prompt: "-- Check if two words have the same characters.\n-- >>> same_chars('eabcdzzzz',\
  \ 'dddzzzzzzzddeddabc')\n-- true\n-- >>> same_chars('abcd', 'dddddddabc')\n-- true\n\
  -- >>> same_chars('dddddddabc', 'abcd')\n-- true\n-- >>> same_chars('eabcd', 'dddddddabc')\n\
  -- false\n-- >>> same_chars('abcd', 'dddddddabce')\n-- false\n-- >>> same_chars('eabcdzzzz',\
  \ 'dddzzzzzzzddddabc')\n-- false\nlocal function same_chars(s0, s1)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = same_chars\n\
  \    lu.assertEquals(candidate('eabcdzzzz', 'dddzzzzzzzddeddabc'), true)\n    lu.assertEquals(candidate('abcd',\
  \ 'dddddddabc'), true)\n    lu.assertEquals(candidate('dddddddabc', 'abcd'), true)\n\
  \    lu.assertEquals(candidate('eabcd', 'dddddddabc'), false)\n    lu.assertEquals(candidate('abcd',\
  \ 'dddddddabcf'), false)\n    lu.assertEquals(candidate('eabcdzzzz', 'dddzzzzzzzddddabc'),\
  \ false)\n    lu.assertEquals(candidate('aabb', 'aaccc'), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local n0 = #s0\n  local n1 = #s1\n  if n0 ~= n1 then\n    return\
    \ false\n  end\n  local i = 0\n  while i < n0 do\n    if s0[i] ~= s1[i] then\n\
    \      return false\n    end\n    i = i + 1\n  end\n  return true\nend", "  local\
    \ n0 = #s0\n  local n1 = #s1\n  local i\n  for i = 1, n0 do\n    if s0[i] ~= s1[i]\
    \ then return false end\n  end\n  return n0 == n1\nend", "  local len0 = #s0\n\
    \  local len1 = #s1\n  if len0 ~= len1 then\n    return false\n  end\n  for i\
    \ = 1, len0 do\n    if s0[i] ~= s1[i] then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1 then\
    \ return false end\n  local i0 = 0\n  local i1 = 0\n  while i0 < l0 and i1 < l1\
    \ do\n    if s0[i0] ~= s1[i1] then return false end\n    i0 = i0 + 1\n    i1 =\
    \ i1 + 1\n  end\n  return i0 == l0 and i1 == l1\nend", "  local len0 = #s0\n \
    \ local len1 = #s1\n  if len0 ~= len1 then return false end\n  for i = 1, len0\
    \ do\n    if s0:sub(i, i) ~= s1:sub(i, i) then return false end\n  end\n  return\
    \ true\nend", "  local len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1 then\
    \ return false end\n  for i = 1, len0 do\n    if s0[i] ~= s1[i] then return false\
    \ end\n  end\n  return true\nend", "  local c0, c1 = unpack(s0)\n  local c2, c3\
    \ = unpack(s1)\n  return c1 == c2 and c3 == c3\nend", "  local len0 = #s0\n  local\
    \ len1 = #s1\n  if len0 ~= len1 then\n    return false\n  end\n  for i = 1, len0\
    \ do\n    if s0:sub(i, i) ~= s1:sub(i, i) then\n      return false\n    end\n\
    \  end\n  return true\nend", "  local len0 = #s0\n  local len1 = #s1\n  if len0\
    \ ~= len1 then return false end\n  for i = 1, len0 do\n    if s0[i] ~= s1[i] then\
    \ return false end\n  end\n  return true\nend", "  local i0 = 0\n  local i1 =\
    \ 0\n  local i2 = #s0\n  local j2 = #s1\n  while i0 < i2 do\n    if string.sub(s0,\
    \ i0, i0 + 1) == string.sub(s1, i1, i1 + 1) then\n      i0 = i0 + 1\n      i1\
    \ = i1 + 1\n    else\n      i0 = i0 + 1\n      i1 = i1\n      j2 = j2 - 1\n  \
    \  end\n  end\n  return j2 == 0\nend", "  local len0 = #s0\n  local len1 = #s1\n\
    \  if len0 ~= len1 then\n    return false\n  end\n  for i = 1, len0 do\n    if\
    \ s0[i] ~= s1[i] then\n      return false\n    end\n  end\n  return true\nend",
  "  local i0 = 0\n  local i1 = 0\n  local j0 = 0\n  local j1 = 0\n  local k0 = 0\n\
    \  local k1 = 0\n  local l0 = 0\n  local l1 = 0\n  local m0 = 0\n  local m1 =\
    \ 0\n  local n0 = 0\n  local n1 = 0\n  local o0 = 0\n  local o1 = 0\n  local p0\
    \ = 0\n  local p1 = 0\n  local q0 = 0\n  local q1 = 0\n  local r0 = 0\n  local\
    \ r1 = 0\n  local s0len = #s0\n  local s1len = #s1\n  while i0 < s0len and i1\
    \ < s1len do\n    local c0 = string.byte(s0, i0)\n    local c1 = string.byte(s1,\
    \ i1)\n    if c0 ~= c1 then\n      break\n    end\n    i0 = i0 + 1\n    i1 = i1\
    \ + 1\n  end\n  if i0 == s0len then\n    return true\n  end\n  if i1 == s1len\
    \ then\n    return true\n  end\n  if i0 < s0len then\n    if i1 < s1len then\n\
    \      -- Swap two characters.\n      local tmp = string.byte(s0, i0)\n      string.byte(s0,\
    \ i0) = string.byte(s1, i1)\n      string.byte(s1, i1) = tmp\n    else\n     \
    \ -- Swap two characters.\n      local tmp = string.byte(s0, i0)\n      string.byte(s0,\
    \ i0) = string.byte(s1, i1)\n      string.byte(s1, i1) = tmp\n    end\n    i0\
    \ = i0 + 1\n    i1 = i1 + 1\n  end\n  while i0 < s0len do\n    local c0 = string.byte(s0,\
    \ i0)\n    local i01 = i0 + 1\n    local i10 = i01 + 1\n    local i11 = i10 +\
    \ 1\n    local i20 = i11 + 1\n    local i21 = i20 + 1\n    local i30 = i21 + 1\n\
    \    local i31 = i30 + 1\n    local i40 = i31 + 1\n    local i41 = i40 + 1\n \
    \   local i50 = i41 + 1\n    local i51 = i50 + 1\n    local i60 = i51 + 1\n  \
    \  local i61 = i60 + 1\n    local i70 = i61 + 1\n    local i71 = i70 + 1\n   \
    \ local i80 = i71 + 1\n    local i81 = i80 + 1\n    local i90 = i", "  local l0\
    \ = #s0, #s1\n  if l0 ~= 0 then\n    for i = 1, l0 do\n      if s0:sub(i, i) ~=\
    \ s1:sub(i, i) then return false end\n    end\n  end\n  return true\nend", " \
    \ local l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1 then return false end\n  for\
    \ i = 1, l0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\n\
    end", "  local l0 = #s0 or 1\n  local l1 = #s1 or 1\n  if l0 ~= l1 then return\
    \ false end\n  for i = 1, l0 do\n    if s0[i] ~= s1[i] then return false end\n\
    \  end\n  return true\nend", "  local len0 = #s0\n  local len1 = #s1\n  if len0\
    \ ~= len1 then\n    return false\n  end\n  for i = 1, len0 do\n    if s0[i] ~=\
    \ s1[i] then\n      return false\n    end\n  end\n  return true\nend", "  local\
    \ l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1 then\n    return false\n  end\n  local\
    \ i\n  for i = 1, l0 do\n    if s0[i] ~= s1[i] then\n      return false\n    end\n\
    \  end\n  return true\nend", "  local l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1\
    \ then return false end\n  for i = 1, l0 do\n    if s0[i] ~= s1[i] then return\
    \ false end\n  end\n  return true\nend", "  local l0 = #s0\n  local l1 = #s1\n\
    \  if l0 ~= l1 then return false end\n  for i = 1, l0 do\n    if string.sub(s0,\
    \ i, i) ~= string.sub(s1, i, i) then return false end\n  end\n  return true\n\
    end", "  -- The two strings must have the same number of characters.\n  if #s0\
    \ ~= #s1 then\n    return false\n  end\n  -- The two strings must have the same\
    \ number of characters.\n  for i = 1, #s0 do\n    -- The two strings must have\
    \ the same number of characters.\n    if #s0 ~= #s1 then\n      return false\n\
    \    end\n    -- The two strings must have the same number of characters.\n  \
    \  if s0 ~= s1 then\n      return false\n    end\n    -- The two strings must\
    \ have the same number of characters.\n    if s0 ~= s1 then\n      return false\n\
    \    end\n    -- The two strings must have the same number of characters.\n  \
    \  if s0 ~= s1 then\n      return false\n    end\n    -- The two strings must\
    \ have the same number of characters.\n    if s0 ~= s1 then\n      return false\n\
    \    end\n    -- The two strings must have the same number of characters.\n  \
    \  if s0 ~= s1 then\n      return false\n    end\n    -- The two strings must\
    \ have the same number of characters.\n    if s0 ~= s1 then\n      return false\n\
    \    end\n    -- The two strings must have the same number of characters.\n  \
    \  if s0 ~= s1 then\n      return false\n    end\n    -- The two strings must\
    \ have the same number of characters.\n    if s0 ~= s1 then\n      return false\n\
    \    end\n    -- The two strings must have the same number of characters.\n  \
    \  if s0 ~= s1 then\n      return false\n    end\n    -- The two strings must\
    \ have the same number of characters.\n    if s0 ~= s1 then\n      return false\n\
    \    end\n    -- The two strings must have the same number of characters.\n  \
    \  if s0 ~= s1 then\n      return false\n    end\n    -- The two strings must\
    \ have the same number of characters.\n    if s0 ~= s1 then\n      return false\n\
    \    end\n    -- The two strings must have the same number of characters.\n  \
    \  if s0 ~= s1 then\n      return false\n    end\n    -- The two strings must\
    \ have the same number of characters.\n    if s0 ~= s1 then\n      return false\n\
    \    end\n    -- The two strings must have the same number of characters.\n  \
    \  if s0 ~= s1 then\n      return false\n    end\n    -- The two strings must\
    \ have the same number of characters.\n    if s0 ~= s1 then\n      return false\n\
    \    end\n    -- The two strings must have the same number of characters.\n  \
    \  if s0 ~= s1 then\n      return false\n    end\n    -- The two strings must\
    \ have the same number of characters.\n    if s0 ~= s1 then\n      return false\n\
    \    end\n    -- The two strings must have the same number of characters.\n  \
    \  if s0 ~= s1 then\n      return false\n    end\n    -- The two strings must\
    \ have the same "]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

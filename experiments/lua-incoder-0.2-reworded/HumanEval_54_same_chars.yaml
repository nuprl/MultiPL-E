name: HumanEval_54_same_chars
language: lua
prompt: "-- Check if two words have the same characters.\n-- >>> same_chars('eabcdzzzz',\
  \ 'dddzzzzzzzddeddabc')\n-- true\n-- >>> same_chars('abcd', 'dddddddabc')\n-- true\n\
  -- >>> same_chars('dddddddabc', 'abcd')\n-- true\n-- >>> same_chars('eabcd', 'dddddddabc')\n\
  -- false\n-- >>> same_chars('abcd', 'dddddddabce')\n-- false\n-- >>> same_chars('eabcdzzzz',\
  \ 'dddzzzzzzzddddabc')\n-- false\nlocal function same_chars(s0, s1)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = same_chars\n\
  \    lu.assertEquals(candidate('eabcdzzzz', 'dddzzzzzzzddeddabc'), true)\n    lu.assertEquals(candidate('abcd',\
  \ 'dddddddabc'), true)\n    lu.assertEquals(candidate('dddddddabc', 'abcd'), true)\n\
  \    lu.assertEquals(candidate('eabcd', 'dddddddabc'), false)\n    lu.assertEquals(candidate('abcd',\
  \ 'dddddddabcf'), false)\n    lu.assertEquals(candidate('eabcdzzzz', 'dddzzzzzzzddddabc'),\
  \ false)\n    lu.assertEquals(candidate('aabb', 'aaccc'), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local n0 = #s0\n  local n1 = #s1\n  if n0 ~= n1 then\n    return\
    \ false\n  end\n  local i = 0\n  while i < n0 do\n    if s0[i] ~= s1[i] then\n\
    \      return false\n    end\n    i = i + 1\n  end\n  return true\nend", "  local\
    \ n0 = #s0\n  local n1 = #s1\n  local i\n  for i = 1, n0 do\n    if s0[i] ~= s1[i]\
    \ then return false end\n  end\n  return n0 == n1\nend", "  local len0 = #s0\n\
    \  local len1 = #s1\n  if len0 ~= len1 then\n    return false\n  end\n  for i\
    \ = 1, len0 do\n    if s0[i] ~= s1[i] then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1 then\
    \ return false end\n  local i0 = 0\n  local i1 = 0\n  while i0 < l0 and i1 < l1\
    \ do\n    if s0[i0] ~= s1[i1] then return false end\n    i0 = i0 + 1\n    i1 =\
    \ i1 + 1\n  end\n  return i0 == l0 and i1 == l1\nend", "  local len0 = #s0\n \
    \ local len1 = #s1\n  if len0 ~= len1 then return false end\n  for i = 1, len0\
    \ do\n    if s0:sub(i, i) ~= s1:sub(i, i) then return false end\n  end\n  return\
    \ true\nend", "  local len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1 then\
    \ return false end\n  for i = 1, len0 do\n    if s0[i] ~= s1[i] then return false\
    \ end\n  end\n  return true\nend", "  local c0, c1 = unpack(s0)\n  local c2, c3\
    \ = unpack(s1)\n  return c1 == c2 and c3 == c3\nend", "  local len0 = #s0\n  local\
    \ len1 = #s1\n  if len0 ~= len1 then\n    return false\n  end\n  for i = 1, len0\
    \ do\n    if s0:sub(i, i) ~= s1:sub(i, i) then\n      return false\n    end\n\
    \  end\n  return true\nend", "  local len0 = #s0\n  local len1 = #s1\n  if len0\
    \ ~= len1 then return false end\n  for i = 1, len0 do\n    if s0[i] ~= s1[i] then\
    \ return false end\n  end\n  return true\nend", "  local i0 = 0\n  local i1 =\
    \ 0\n  local i2 = #s0\n  local j2 = #s1\n  while i0 < i2 do\n    if string.sub(s0,\
    \ i0, i0 + 1) == string.sub(s1, i1, i1 + 1) then\n      i0 = i0 + 1\n      i1\
    \ = i1 + 1\n    else\n      i0 = i0 + 1\n      i1 = i1\n      j2 = j2 - 1\n  \
    \  end\n  end\n  return j2 == 0\nend", "  local len0 = #s0\n  local len1 = #s1\n\
    \  if len0 ~= len1 then\n    return false\n  end\n  for i = 1, len0 do\n    if\
    \ s0[i] ~= s1[i] then\n      return false\n    end\n  end\n  return true\nend",
  "  local i0 = 0\n  local i1 = 0\n  local j0 = 0\n  local j1 = 0\n  local k0 = 0\n\
    \  local k1 = 0\n  local l0 = 0\n  local l1 = 0\n  local m0 = 0\n  local m1 =\
    \ 0\n  local n0 = 0\n  local n1 = 0\n  local o0 = 0\n  local o1 = 0\n  local p0\
    \ = 0\n  local p1 = 0\n  local q0 = 0\n  local q1 = 0\n  local r0 = 0\n  local\
    \ r1 = 0\n  local s0len = #s0\n  local s1len = #s1\n  while i0 < s0len and i1\
    \ < s1len do\n    local c0 = string.byte(s0, i0)\n    local c1 = string.byte(s1,\
    \ i1)\n    if c0 ~= c1 then\n      break\n    end\n    i0 = i0 + 1\n    i1 = i1\
    \ + 1\n  end\n  if i0 == s0len then\n    return true\n  end\n  if i1 == s1len\
    \ then\n    return true\n  end\n  if i0 < s0len then\n    if i1 < s1len then\n\
    \      -- Swap two characters.\n      local tmp = string.byte(s0, i0)\n      string.byte(s0,\
    \ i0) = string.byte(s1, i1)\n      string.byte(s1, i1) = tmp\n    else\n     \
    \ -- Swap two characters.\n      local tmp = string.byte(s0, i0)\n      string.byte(s0,\
    \ i0) = string.byte(s1, i1)\n      string.byte(s1, i1) = tmp\n    end\n    i0\
    \ = i0 + 1\n    i1 = i1 + 1\n  end\n  while i0 < s0len do\n    local c0 = string.byte(s0,\
    \ i0)\n    local i01 = i0 + 1\n    local i10 = i01 + 1\n    local i11 = i10 +\
    \ 1\n    local i20 = i11 + 1\n    local i21 = i20 + 1\n    local i30 = i21 + 1\n\
    \    local i31 = i30 + 1\n    local i40 = i31 + 1\n    local i41 = i40 + 1\n \
    \   local i50 = i41 + 1\n    local i51 = i50 + 1\n    local i60 = i51 + 1\n  \
    \  local i61 = i60 + 1\n    local i70 = i61 + 1\n    local i71 = i70 + 1\n   \
    \ local i80 = i71 + 1\n    local i81 = i80 + 1\n    local i90 = i", "  local l0\
    \ = #s0, #s1\n  if l0 ~= 0 then\n    for i = 1, l0 do\n      if s0:sub(i, i) ~=\
    \ s1:sub(i, i) then return false end\n    end\n  end\n  return true\nend", " \
    \ local l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1 then return false end\n  for\
    \ i = 1, l0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\n\
    end", "  local l0 = #s0 or 1\n  local l1 = #s1 or 1\n  if l0 ~= l1 then return\
    \ false end\n  for i = 1, l0 do\n    if s0[i] ~= s1[i] then return false end\n\
    \  end\n  return true\nend", "  local len0 = #s0\n  local len1 = #s1\n  if len0\
    \ ~= len1 then\n    return false\n  end\n  for i = 1, len0 do\n    if s0[i] ~=\
    \ s1[i] then\n      return false\n    end\n  end\n  return true\nend", "  local\
    \ l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1 then\n    return false\n  end\n  local\
    \ i\n  for i = 1, l0 do\n    if s0[i] ~= s1[i] then\n      return false\n    end\n\
    \  end\n  return true\nend", "  local l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1\
    \ then return false end\n  for i = 1, l0 do\n    if s0[i] ~= s1[i] then return\
    \ false end\n  end\n  return true\nend", "  local l0 = #s0\n  local l1 = #s1\n\
    \  if l0 ~= l1 then return false end\n  for i = 1, l0 do\n    if string.sub(s0,\
    \ i, i) ~= string.sub(s1, i, i) then return false end\n  end\n  return true\n\
    end", "  -- The two strings must have the same number of characters.\n  if #s0\
    \ ~= #s1 then\n    return false\n  end\n  -- The two strings must have the same\
    \ number of characters.\n  for i = 1, #s0 do\n    -- The two strings must have\
    \ the same number of characters.\n    if #s0 ~= #s1 then\n      return false\n\
    \    end\n    -- The two strings must have the same number of characters.\n  \
    \  if s0 ~= s1 then\n      return false\n    end\n    -- The two strings must\
    \ have the same number of characters.\n    if s0 ~= s1 then\n      return false\n\
    \    end\n    -- The two strings must have the same number of characters.\n  \
    \  if s0 ~= s1 then\n      return false\n    end\n    -- The two strings must\
    \ have the same number of characters.\n    if s0 ~= s1 then\n      return false\n\
    \    end\n    -- The two strings must have the same number of characters.\n  \
    \  if s0 ~= s1 then\n      return false\n    end\n    -- The two strings must\
    \ have the same number of characters.\n    if s0 ~= s1 then\n      return false\n\
    \    end\n    -- The two strings must have the same number of characters.\n  \
    \  if s0 ~= s1 then\n      return false\n    end\n    -- The two strings must\
    \ have the same number of characters.\n    if s0 ~= s1 then\n      return false\n\
    \    end\n    -- The two strings must have the same number of characters.\n  \
    \  if s0 ~= s1 then\n      return false\n    end\n    -- The two strings must\
    \ have the same number of characters.\n    if s0 ~= s1 then\n      return false\n\
    \    end\n    -- The two strings must have the same number of characters.\n  \
    \  if s0 ~= s1 then\n      return false\n    end\n    -- The two strings must\
    \ have the same number of characters.\n    if s0 ~= s1 then\n      return false\n\
    \    end\n    -- The two strings must have the same number of characters.\n  \
    \  if s0 ~= s1 then\n      return false\n    end\n    -- The two strings must\
    \ have the same number of characters.\n    if s0 ~= s1 then\n      return false\n\
    \    end\n    -- The two strings must have the same number of characters.\n  \
    \  if s0 ~= s1 then\n      return false\n    end\n    -- The two strings must\
    \ have the same number of characters.\n    if s0 ~= s1 then\n      return false\n\
    \    end\n    -- The two strings must have the same number of characters.\n  \
    \  if s0 ~= s1 then\n      return false\n    end\n    -- The two strings must\
    \ have the same number of characters.\n    if s0 ~= s1 then\n      return false\n\
    \    end\n    -- The two strings must have the same number of characters.\n  \
    \  if s0 ~= s1 then\n      return false\n    end\n    -- The two strings must\
    \ have the same ", "  local n0, n1 = #s0, #s1\n  if n0 ~= n1 then return false\
    \ end\n  for i = 1, n0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n\
    \  return true\nend", "  local n0 = #s0\n  local n1 = #s1\n  if n0 ~= n1 then\
    \ return false end\n  for i = 1, n0 do\n    if s0[i] ~= s1[i] then return false\
    \ end\n  end\n  return true\nend", "  local c0 = string.byte(s0)\n  local c1 =\
    \ string.byte(s1)\n  for i = 1, #s0 do\n    if string.byte(s0, i) ~= string.byte(s1,\
    \ i) then return false end\n  end\n  return true\nend", "  local l0 = #s0\n  local\
    \ l1 = #s1\n  if l0 ~= l1 then\n    return false\n  end\n  local i0 = 0\n  local\
    \ i1 = 0\n  while i0 < l0 and i1 < l1 do\n    if s0[i0] ~= s1[i1] then\n     \
    \ return false\n    end\n    i0 = i0 + 1\n    i1 = i1 + 1\n  end\n  return i0\
    \ == l0 and i1 == l1\nend", "  local n0, n1 = #s0, #s1\n  if n0 ~= n1 then return\
    \ false end\n  for i = 1, n0 do\n    if s0[i] ~= s1[i] then return false end\n\
    \  end\n  return true\nend", "  local n0 = #s0\n  local n1 = #s1\n  if n0 ~= n1\
    \ then\n    return false\n  end\n  for i = 1, n0 do\n    if s0[i] ~= s1[i] then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local l0 = #s0\n\
    \  local l1 = #s1\n  if l0 ~= l1 then return false end\n  for i = 1, l0 do\n \
    \   if s0[i] ~= s1[i] then return false end\n  end\n  return true\nend", "  local\
    \ function is_char(c)\n    return string.sub(s0, c, c) == string.sub(s1, c, c)\n\
    \  end\n  local function is_char_pair(c)\n    return string.sub(s0, c, c + 1)\
    \ == string.sub(s1, c, c + 1)\n  end\n  local function is_char_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 2) == string.sub(s1, c, c + 2)\n  end\n  local\
    \ function is_char_pair_pair_pair(c)\n    return string.sub(s0, c, c + 3) == string.sub(s1,\
    \ c, c + 3)\n  end\n  local function is_char_pair_pair_pair_pair(c)\n    return\
    \ string.sub(s0, c, c + 4) == string.sub(s1, c, c + 4)\n  end\n  local function\
    \ is_char_pair_pair_pair_pair_pair(c)\n    return string.sub(s0, c, c + 5) ==\
    \ string.sub(s1, c, c + 5)\n  end\n  local function is_char_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 6) == string.sub(s1, c, c + 6)\n  end\n  local\
    \ function is_char_pair_pair_pair_pair_pair_pair_pair(c)\n    return string.sub(s0,\
    \ c, c + 7) == string.sub(s1, c, c + 7)\n  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 8) == string.sub(s1, c, c + 8)\n  end\n  local\
    \ function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n    return\
    \ string.sub(s0, c, c + 9) == string.sub(s1, c, c + 9)\n  end\n  local function\
    \ is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n    return string.sub(s0,\
    \ c, c + 10) == string.sub(s1, c, c + 10)\n  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 11) == string.sub(s1, c, c + 11)\n  end\n  local\
    \ function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 12) == string.sub(s1, c, c + 12)\n  end\n  local\
    \ function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 13) == string.sub(s1, c, c + 13)\n  end\n  local\
    \ function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 14) == string.sub(s1, c, c + 14)\n  end\n  local\
    \ function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, ", "  local i = 0\n  local j = 0\n  local n = #s0 -\
    \ 1\n  local m = #s1 - 1\n  while i < n and j < m do\n    if s0[i] == s1[j] then\n\
    \      i = i + 1\n      j = j + 1\n    else\n      return false\n    end\n  end\n\
    \  return i == n and j == m\nend", "  local l0 = #s0\n  local l1 = #s1\n  local\
    \ i\n  for i = 1, l0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n\
    \  return l0 == l1\nend", "  local n0 = #s0\n  local n1 = #s1\n  if n0 ~= n1 then\
    \ return false end\n  for i = 1, n0 do\n    if s0:sub(i, i) ~= s1:sub(i, i) then\
    \ return false end\n  end\n  return true\nend", "  local n0 = #s0\n  local n1\
    \ = #s1\n  if n0 ~= n1 then return false end\n  local i\n  for i=1, n0 do\n  \
    \  if s0[i] ~= s1[i] then return false end\n  end\n  return true\nend", "  local\
    \ len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1 then return false end\n  for\
    \ i = 1, len0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return\
    \ true\nend", "  local l0 = #s0\n  local l1 = #s1\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local ", "  local l0 = #s0\n  local l1 = #s1\n  if\
    \ l0 ~= l1 then return false end\n  for i = 1, l0 do\n    if s0[i] ~= s1[i] then\
    \ return false end\n  end\n  return true\nend", "  local l0 = #s0\n  local l1\
    \ = #s1\n  if l0 ~= l1 then return false end\n  for i = 1, l0 do\n    if s0[i]\
    \ ~= s1[i] then return false end\n  end\n  return true\nend", "  local l0 = #s0\n\
    \  local l1 = #s1\n  if l0 ~= l1 then return false end\n  for i = 1, l0 do\n \
    \   if s0:sub(i, i) ~= s1:sub(i, i) then return false end\n  end\n  return true\n\
    end", "  local len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1 then return false\
    \ end\n  for i = 1, len0 do\n    if s0:sub(i, i) ~= s1:sub(i, i) then return false\
    \ end\n  end\n  return true\nend", "  local function is_char(c)\n    return string.sub(s0,\
    \ c, c) == string.sub(s1, c, c)\n  end\n  local function is_char_pair(c)\n   \
    \ return string.sub(s0, c, c) == string.sub(s1, c + 1, c + 1)\n  end\n  local\
    \ function is_char_pair_pair(c)\n    return string.sub(s0, c, c) == string.sub(s1,\
    \ c + 2, c + 2)\n  end\n  local function is_char_pair_pair_pair(c)\n    return\
    \ string.sub(s0, c, c) == string.sub(s1, c + 3, c + 3)\n  end\n  local function\
    \ is_char_pair_pair_pair_pair(c)\n    return string.sub(s0, c, c) == string.sub(s1,\
    \ c + 4, c + 4)\n  end\n  local function is_char_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c) == string.sub(s1, c + 5, c + 5)\n  end\n  local\
    \ function is_char_pair_pair_pair_pair_pair_pair(c)\n    return string.sub(s0,\
    \ c, c) == string.sub(s1, c + 6, c + 6)\n  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c) == string.sub(s1, c + 7, c + 7)\n  end\n  local\
    \ function is_char_pair_pair_pair_pair_pair_pair_pair_pair(c)\n    return string.sub(s0,\
    \ c, c) == string.sub(s1, c + 8, c + 8)\n  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c) == string.sub(s1, c + 9, c + 9)\n  end\n  local\
    \ function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n    return\
    \ string.sub(s0, c, c) == string.sub(s1, c + 10, c + 10)\n  end\n  local function\
    \ is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n    return\
    \ string.sub(s0, c, c) == string.sub(s1, c + 11, c + 11)\n  end\n  local function\
    \ is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n    return\
    \ string.sub(s0, c, c) == string.sub(s1, c + 12, c + 12)\n  end\n  local function\
    \ is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n    return\
    \ string.sub(s0, c, c) == string.sub(s1, c + 13, c + 13)\n  end\n  local function\
    \ is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n   \
    \ return string.sub(s0, c, c) == string.sub(s1, c + 14, c + 14)\n  end\n  local\
    \ function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s", "  local function is_char(c)\n    return string.sub(s0,\
    \ c, c) == string.sub(s1, c, c)\n  end\n  local function is_char_pair(c)\n   \
    \ return string.sub(s0, c, c + 1) == string.sub(s1, c, c + 1)\n  end\n  local\
    \ function is_char_pair_pair(c)\n    return string.sub(s0, c, c + 2) == string.sub(s1,\
    \ c, c + 2)\n  end\n  local function is_char_pair_pair_pair(c)\n    return string.sub(s0,\
    \ c, c + 3) == string.sub(s1, c, c + 3)\n  end\n  local function is_char_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 4) == string.sub(s1, c, c + 4)\n  end\n  local\
    \ function is_char_pair_pair_pair_pair_pair(c)\n    return string.sub(s0, c, c\
    \ + 5) == string.sub(s1, c, c + 5)\n  end\n  local function is_char_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 6) == string.sub(s1, c, c + 6)\n  end\n  local\
    \ function is_char_pair_pair_pair_pair_pair_pair_pair(c)\n    return string.sub(s0,\
    \ c, c + 7) == string.sub(s1, c, c + 7)\n  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 8) == string.sub(s1, c, c + 8)\n  end\n  local\
    \ function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n    return\
    \ string.sub(s0, c, c + 9) == string.sub(s1, c, c + 9)\n  end\n  local function\
    \ is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n    return string.sub(s0,\
    \ c, c + 10) == string.sub(s1, c, c + 10)\n  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 11) == string.sub(s1, c, c + 11)\n  end\n  local\
    \ function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 12) == string.sub(s1, c, c + 12)\n  end\n  local\
    \ function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 13) == string.sub(s1, c, c + 13)\n  end\n  local\
    \ function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 14) == string.sub(s1, c, c + 14)\n  end\n  local\
    \ function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, ", "  local n0 = #s0\n  local n1 = #s1\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local ", "  local len0 = #s0\n\
    \  local len1 = #s1\n  if len0 ~= len1 then return false end\n  for i = 1, len0\
    \ do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\nend",
  "  local n0, n1 = #s0, #s1\n  if n0 ~= n1 then return false end\n  for i = 1, n0\
    \ do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\nend",
  "  local n0 = #s0\n  local n1 = #s1\n  local i0 = 0\n  local i1 = 0\n  while i0\
    \ < n0 and i1 < n1 do\n    if string.sub(s0, i0, i0 + 1) ~= string.sub(s1, i1,\
    \ i1 + 1) then\n      return false\n    end\n    i0 = i0 + 1\n    i1 = i1 + 1\n\
    \  end\n  return i0 == n0 or i1 == n1\nend", "  -- Return true if s0 and s1 have\
    \ the same characters.\n  -- >>> same_chars('abcd', 'abcd')\n  -- True\n  -- >>>\
    \ same_chars('abcd', 'abcc')\n  -- False\n  -- >>> same_chars('abcd', 'abcc')\n\
    \  -- False\n  -- >>> same_chars('abcd', 'abcc')\n  -- False\n  -- >>> same_chars('abcd',\
    \ 'abcc')\n  -- False\n  -- >>> same_chars('abcd', 'abcc')\n  -- False\n  -- >>>\
    \ same_chars('abcd', 'abcc')\n  -- False\n  -- >>> same_chars('abcd', 'abcc')\n\
    \  -- False\n  -- >>> same_chars('abcd', 'abcc')\n  -- False\n  -- >>> same_chars('abcd',\
    \ 'abcc')\n  -- False\n  -- >>> same_chars('abcd', 'abcc')\n  -- False\n  -- >>>\
    \ same_chars('abcd', 'abcc')\n  -- False\n  -- >>> same_chars('abcd', 'abcc')\n\
    \  -- False\n  -- >>> same_chars('abcd', 'abcc')\n  -- False\n  -- >>> same_chars('abcd',\
    \ 'abcc')\n  -- False\n  -- >>> same_chars('abcd', 'abcc')\n  -- False\n  -- >>>\
    \ same_chars('abcd', 'abcc')\n  -- False\n  -- >>> same_chars('abcd', 'abcc')\n\
    \  -- False\n  -- >>> same_chars('abcd', 'abcc')\n  -- False\n  -- >>> same_chars('abcd',\
    \ 'abcc')\n  -- False\n  -- >>> same_chars('abcd', 'abcc')\n  -- False\n  -- >>>\
    \ same_chars('abcd', 'abcc')\n  -- False\n  -- >>> same_chars('abcd', 'abcc')\n\
    \  -- False\n  -- >>> same_chars('abcd', 'abcc')\n  -- False\n  -- >>> same_chars('abcd',\
    \ 'abcc')\n  -- False\n  -- >>> same_chars('abcd', 'abcc')\n  -- False\n  -- >>>\
    \ same_chars('abcd', 'abcc')\n  -- False\n  -- >>> same_chars('abcd', 'abcc')\n\
    \  -- False\n  -- >>> same_chars('abcd', 'abcc')\n  -- False\n  -- >>> same_chars('abcd',\
    \ 'abcc')\n  -- False\n  -- >>> same_chars('abcd', 'abcc')\n  -- False\n  -- >>>\
    \ same_chars('", "  local len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1 then\
    \ return false end\n  local i\n  for i = 1, len0 do\n    if s0[i] ~= s1[i] then\
    \ return false end\n  end\n  return true\nend", "  local l0 = #s0\n  local l1\
    \ = #s1\n  if l0 ~= l1 then return false end\n  for i = 1, l0 do\n    if s0[i]\
    \ ~= s1[i] then return false end\n  end\n  return true\nend", "  local len0 =\
    \ #s0\n  local len1 = #s1\n  if len0 ~= len1 then return false end\n  for i =\
    \ 1, len0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\n\
    end", "  local n0 = #s0\n  local n1 = #s1\n  if n0 ~= n1 then return false end\n\
    \  local i\n  for i = 1, n0 do\n    if s0[i] ~= s1[i] then return false end\n\
    \  end\n  return true\nend", "  -- Return true if s0 and s1 have the same characters.\n\
    \  -- >>> same_chars('abcd', 'abcd')\n  -- true\n  -- >>> same_chars('abcd', 'abccd')\n\
    \  -- false\n  -- >>> same_chars('abcd', 'abcdz')\n  -- false\n  -- >>> same_chars('abcd',\
    \ 'abcdzz')\n  -- false\n  -- >>> same_chars('abcd', 'abcdzzz')\n  -- false\n\
    \  -- >>> same_chars('abcd', 'abcdzzzz')\n  -- false\n  -- >>> same_chars('abcd',\
    \ 'abcdzzzzz')\n  -- false\n  -- >>> same_chars('abcd', 'abcdzzzzzz')\n  -- false\n\
    \  -- >>> same_chars('abcd', 'abcdzzzzzzz')\n  -- false\n  -- >>> same_chars('abcd',\
    \ 'abcdzzzzzzzz')\n  -- false\n  -- >>> same_chars('abcd', 'abcdzzzzzzzzz')\n\
    \  -- false\n  -- >>> same_chars('abcd', 'abcdzzzzzzzzzz')\n  -- false\n  -- >>>\
    \ same_chars('abcd', 'abcdzzzzzzzzzzz')\n  -- false\n  -- >>> same_chars('abcd',\
    \ 'abcdzzzzzzzzzzzz')\n  -- false\n  -- >>> same_chars('abcd', 'abcdzzzzzzzzzzzzz')\n\
    \  -- false\n  -- >>> same_chars('abcd', 'abcdzzzzzzzzzzzzzz')\n  -- false\n \
    \ -- >>> same_chars('abcd', 'abcdzzzzzzzzzzzzzzz')\n  -- false\n  -- >>> same_chars('abcd',\
    \ 'abcdzzzzzzzzzzzzzzzz')\n  -- false\n  -- >>> same_chars('abcd', 'abcdzzzzzzzzzzzzzzzzz')\n\
    \  -- false\n  -- >>> same_chars('abcd', 'abcdzzzzzzzzzzzzzzzzzz')\n  -- false\n\
    \  -- >>> same_chars('abcd', 'abcdzzzzzzzzzzzzzzzzz')\n  -- false\n  -- >>> same_chars('abcd',\
    \ 'abcdzzzzzzzzzzzzzzzzzz')\n  -- false\n  -- >>> same_chars('abcd', 'abcdzzzzzzzzzzzzzzzzzzz')\n\
    \  -- false\n  -- >>> same_chars('abcd', 'abcdzzzzzzzzzzzzzzzzzzzz')\n  -- false\n\
    \  -- >>> same_chars('abcd', 'abcdzzzzzz", "  local l0 = #s0\n  local l1 = #s1\n\
    \  if l0 ~= l1 then return false end\n  for i = 1, l0 do\n    if s0[i] ~= s1[i]\
    \ then return false end\n  end\n  return true\nend", "  local l0 = #s0\n  local\
    \ l1 = #s1\n  local i\n  for i = 1, l0 do\n    if s0[i] ~= s1[i] then return false\
    \ end\n  end\n  return l0 == l1\nend", "  local l0 = #s0\n  local l1 = #s1\n \
    \ if l0 ~= l1 then\n    return false\n  end\n  for i = 1, l0 do\n    if s0[i]\
    \ ~= s1[i] then\n      return false\n    end\n  end\n  return true\nend", "  local\
    \ len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1 then return false end\n  local\
    \ i0 = 0\n  local i1 = 0\n  while i0 < len0 and i1 < len1 do\n    if s0[i0] ~=\
    \ s1[i1] then return false end\n    i0 = i0 + 1\n    i1 = i1 + 1\n  end\n  return\
    \ i0 == len0 and i1 == len1\nend", "  local i0 = 0\n  local i1 = 0\n  local i2\
    \ = #s0 - 1\n  local i3 = #s1 - 1\n  while i0 < i2 or i1 < i3 do\n    if s0[i0]\
    \ == s1[i1] then\n      i0 = i0 + 1\n      i1 = i1 + 1\n    elseif s0[i0] > s1[i1]\
    \ then\n      i2 = i2 - 1\n    else\n      i3 = i3 - 1\n    end\n  end\n  return\
    \ i0 == i3\nend", "  local len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1 then\
    \ return false end\n  for i = 1, len0 do\n    if s0[i] ~= s1[i] then return false\
    \ end\n  end\n  return true\nend", "  local n0, n1 = #s0, #s1\n  if n0 ~= n1 then\
    \ return false end\n  for i = 1, n0 do\n    if s0[i] ~= s1[i] then return false\
    \ end\n  end\n  return true\nend", "  local len0 = #s0\n  local len1 = #s1\n \
    \ if len0 ~= len1 then return false end\n  for i = 1, len0 do\n    if s0[i] ~=\
    \ s1[i] then return false end\n  end\n  return true\nend", "  local l0 = #s0\n\
    \  local l1 = #s1\n  if l0 ~= l1 then return false end\n  for i = 1, l0 do\n \
    \   if s0[i] ~= s1[i] then return false end\n  end\n  return true\nend", "  local\
    \ n0 = #s0\n  local n1 = #s1\n  local i = 0\n  while i < n0 and i < n1 do\n  \
    \  if s0[i] ~= s1[i] then return false end\n    i = i + 1\n  end\n  return i ==\
    \ n0 or i == n1\nend", "  local len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1\
    \ then return false end\n  for i = 1, len0 do\n    if s0[i] ~= s1[i] then return\
    \ false end\n  end\n  return true\nend", "  local l0 = #s0\n  local l1 = #s1\n\
    \  local i\n  for i = 1, l0 do\n    if s0[i] ~= s1[i] then return false end\n\
    \  end\n  return l0 == l1\nend", "  local l0 = #s0\n  local l1 = #s1\n  if l0\
    \ ~= l1 then return false end\n  for i = 1, l0 do\n    if s0[i] ~= s1[i] then\
    \ return false end\n  end\n  return true\nend", "  -- Check if two words have\
    \ the same characters.\n  -- >>> same_chars('eabcdzzzz', 'dddzzzzzzzddeddabc')\n\
    \  -- true\n  -- >>> same_chars('abcd', 'dddddddabc')\n  -- true\n  -- >>> same_chars('dddddddabc',\
    \ 'abcd')\n  -- true\n  -- >>> same_chars('eabcd', 'dddddddabc')\n  -- false\n\
    \  -- >>> same_chars('abcd', 'dddddddabce')\n  -- false\n  -- >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddddabc')\n  -- false\n  local function same_chars(s0, s1)\n    local\
    \ function chars(s0, s1)\n      -- Check if two words have the same characters.\n\
    \      -- >>> chars('eabcdzzzz', 'dddzzzzzzzddeddabc')\n      -- true\n      --\
    \ >>> chars('abcd', 'dddddddabc')\n      -- true\n      -- >>> chars('dddddddabc',\
    \ 'abcd')\n      -- true\n      -- >>> chars('eabcd', 'dddddddabc')\n      --\
    \ false\n      -- >>> chars('abcd', 'dddddddabce')\n      -- false\n      -- >>>\
    \ chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n      -- false\n      local function\
    \ chars(s0, s1)\n        local function chars(s0, s1)\n          -- Check if two\
    \ words have the same characters.\n          -- >>> chars('eabcdzzzz', 'dddzzzzzzzddeddabc')\n\
    \          -- true\n          -- >>> chars('abcd', 'dddddddabc')\n          --\
    \ true\n          -- >>> chars('dddddddabc', 'abcd')\n          -- true\n    \
    \      -- >>> chars('eabcd', 'dddddddabc')\n          -- false\n          -- >>>\
    \ chars('abcd', 'dddddddabce')\n          -- false\n          -- >>> chars('eabcdzzzz',\
    \ 'dddzzzzzzzddddabc')\n          -- false\n          local function chars(s0,\
    \ s1)\n            local function chars(s0, s1)\n              -- Check if two\
    \ words have the same characters.\n              -- >>> chars('eabcdzzzz', 'dddzzzzzzzddeddabc')\n\
    \              -- true\n              -- >>> chars('abcd', 'dddddddabc')\n   \
    \           -- true\n              -- >>> chars('dddddddabc', 'abcd')\n      \
    \        -- true\n              -- >>> chars('eabcd', 'ddddddd", "  local n0 =\
    \ #s0\n  local n1 = #s1\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i1\n  local i2\n  local j1\n  local j2\n  local k1\n  local k2\n  local\
    \ l1\n  local l2\n  local m1\n  local m2\n  local n1\n  local n2\n  local o1\n\
    \  local o2\n  local p1\n  local p2\n  local q1\n  local q2\n  local r1\n  local\
    \ r2\n  local s1\n  local s2\n  local t1\n  local t2\n  local u1\n  local u2\n\
    \  local v1\n  local v2\n  local w1\n  local w2\n  local x1\n  local x2\n  local\
    \ y1\n  local y2\n  local z1\n  local z2\n  local a1\n  local b1\n  local c1\n\
    \  local d1\n  local e1\n  local f1\n  local g1\n  local h1\n  local i11\n  local\
    \ i12\n  local j11\n  local j12\n  local k11\n  local k12\n  local l11\n  local\
    \ l12\n  local m11\n  local m12\n  local n11\n  local n12\n  local o11\n  local\
    \ o12\n  local p11\n  local p12\n  local q11\n  local q12\n  local r11\n  local\
    \ r12\n  local s11\n  local s12\n  local t11\n  local t12\n  local u11\n  local\
    \ u12\n  local v11\n  local v12\n  local w11\n  local w12\n  local x11\n  local\
    \ x12\n  local y11\n  local y12\n  local z11\n  local z12\n  local a11\n  local\
    \ b11\n  local c11\n  local d11\n  local e11\n", "  -- Check for empty strings.\n\
    \  if s0 ~= '' then\n    if s1 ~= '' then\n      -- Check for empty strings.\n\
    \      if s0 ~= s1 then\n        -- Check for empty strings.\n        if s0 ~=\
    \ s1 then\n          -- Check for empty strings.\n          if s0 ~= s1 then\n\
    \            -- Check for empty strings.\n            if s0 ~= s1 then\n     \
    \         -- Check for empty strings.\n              if s0 ~= s1 then\n      \
    \          -- Check for empty strings.\n                if s0 ~= s1 then\n   \
    \               -- Check for empty strings.\n                  if s0 ~= s1 then\n\
    \                    -- Check for empty strings.\n                    if s0 ~=\
    \ s1 then\n                      -- Check for empty strings.\n               \
    \       if s0 ~= s1 then\n                        -- Check for empty strings.\n\
    \                        if s0 ~= s1 then\n                          -- Check\
    \ for empty strings.\n                          if s0 ~= s1 then\n           \
    \                 -- Check for empty strings.\n                            if\
    \ s0 ~= s1 then\n                              -- Check for empty strings.\n \
    \                             if s0 ~= s1 then\n                             \
    \   -- Check for empty strings.\n                                if s0 ~= s1 then\n\
    \                                  -- Check for empty strings.\n             \
    \                     if s0 ~= s1 then\n                                    --\
    \ Check for empty strings.\n                                    if s0 ~= s1 then\n\
    \                                      -- Check for empty strings.\n         \
    \                             if s0 ~= s1 then\n                             \
    \           -- Check for empty strings.\n                                    \
    \    if s0 ~= s1 then\n                                          -- Check for\
    \ empty strings.\n                                          if s0 ~= s1 then\n\
    \                                            -- Check for empty strings.\n   \
    \                                         if s0 ~= s1 then\n                 \
    \                             -- Check for empty strings.\n                  \
    \                            if s0 ~= s1 then\n                              \
    \                  -- Check for empty strings.\n                             \
    \                   if s0 ~= s1 then\n                                       \
    \           -- Check for empty strings.\n                                    \
    \              if s0 ~= s1 then\n                                            \
    \        -- Check for empty strings.\n                                       \
    \             if s0 ~= s1 then\n                                             \
    \         -- Check for empty strings.\n                                      \
    \                if s0 ~= s1 then\n                                          \
    \              -- Check for empty strings.\n                                 \
    \                       if s0 ~= s1 then\n                                   \
    \                       -- Check for empty strings.\n                        \
    \                                  if s0 ~= s1 then\n                        \
    \                                    -- Check for empty strings.\n           \
    \                                                 if s0 ~= s1 then\n         \
    \                                                     -- Check for empty strings.\n\
    \                                                              if s0 ~= s1 then\n\
    \                                                                -- Check for\
    \ empty strings.\n                                                           \
    \     if s0 ~= s1 then\n                                                     \
    \             -- Check for empty strings.\n                                  \
    \                                if s0 ~= s1 then\n                          \
    \                                          -- ", "  -- Check if two words have\
    \ the same characters.\n  -- >>> same_chars('eabcdzzzz', 'dddzzzzzzzddeddabc')\n\
    \  -- true\n  -- >>> same_chars('abcd', 'dddddddabc')\n  -- true\n  -- >>> same_chars('dddddddabc',\
    \ 'abcd')\n  -- true\n  -- >>> same_chars('eabcd', 'dddddddabc')\n  -- false\n\
    \  -- >>> same_chars('abcd', 'dddddddabce')\n  -- false\n  -- >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddddabc')\n  -- false\n  local s0_len = #s0\n  local s1_len = #s1\n\
    \  if s0_len == 0 or s1_len == 0 then\n    return false\n  end\n  local s0_char\
    \ = string.sub(s0, 0, s0_len)\n  local s1_char = string.sub(s1, 0, s1_len)\n \
    \ for i = 1, s0_len do\n    if s0_char:sub(i, i) == s1_char:sub(i, i) then\n \
    \     -- Same characters.\n      return true\n    end\n  end\n  return false\n\
    end", "  local function is_char(c)\n    return string.sub(c, 1, 1) == 'a'\n  end\n\
    \  local function is_word(w)\n    return string.len(w) == string.len(string.sub(w,\
    \ 1, 1))\n  end\n  local function is_char(w)\n    return string.sub(w, 1, 1) ==\
    \ 'a'\n  end\n  local function is_word(w)\n    return string.len(w) == string.len(string.sub(w,\
    \ 1, 1))\n  end\n  local function is_char(w)\n    return string.sub(w, 1, 1) ==\
    \ 'a'\n  end\n  local function is_word(w)\n    return string.len(w) == string.len(string.sub(w,\
    \ 1, 1))\n  end\n  local function is_char(w)\n    return string.sub(w, 1, 1) ==\
    \ 'a'\n  end\n  local function is_word(w)\n    return string.len(w) == string.len(string.sub(w,\
    \ 1, 1))\n  end\n  local function is_char(w)\n    return string.sub(w, 1, 1) ==\
    \ 'a'\n  end\n  local function is_word(w)\n    return string.len(w) == string.len(string.sub(w,\
    \ 1, 1))\n  end\n  local function is_char(w)\n    return string.sub(w, 1, 1) ==\
    \ 'a'\n  end\n  local function is_word(w)\n    return string.len(w) == string.len(string.sub(w,\
    \ 1, 1))\n  end\n  local function is_char(w)\n    return string.sub(w, 1, 1) ==\
    \ 'a'\n  end\n  local function is_word(w)\n    return string.len(w) == string.len(string.sub(w,\
    \ 1, 1))\n  end\n  local function is_char(w)\n    return string.sub(w, 1, 1) ==\
    \ 'a'\n  end\n  local function is_word(w)\n    return string.len(w) == string.len(string.sub(w,\
    \ 1, 1))\n  end\n  local function is_char(w)\n    return string.sub(w, 1, 1) ==\
    \ 'a'\n  end\n  local function is_word(w)\n    return string.len(w) == string.len(string.sub(w,\
    \ 1, 1))\n  end\n  local function is_char(w)\n    return string.sub(w, 1, 1) ==\
    \ 'a'\n  end\n  local function is_word(w)\n    return string.len(w) == string.len(string.sub(w,\
    \ 1, 1))\n  end\n  local function is_char(w)\n    return string.sub(w, 1, 1) ==\
    \ 'a'\n  end\n  local function is_word(w)\n    return string.len(w) == string.len(string.sub(w,\
    \ 1, 1))\n  end\n  local function is_char(w)\n    return string.sub(w, 1, 1) ==\
    \ 'a'\n  end\n  local function is_word(w)\n    return string.len(w) == string.len(string.sub(w,\
    \ 1, 1))\n  end\n  local function is_char(w)\n    return string.sub(w, 1, 1) ==\
    \ 'a'\n  end\n  local ", "  local len0 = #s0\n  local len1 = #s1\n  if len0 ~=\
    \ len1 then return false end\n  for i = 1, len0 do\n    if s0[i] ~= s1[i] then\
    \ return false end\n  end\n  return true\nend", "  local l0 = #s0\n  local l1\
    \ = #s1\n  if l0 ~= l1 then\n    return false\n  end\n  local i = 0\n  while i\
    \ < l0 do\n    if string.sub(s0, i, i) ~= string.sub(s1, i, i) then\n      return\
    \ false\n    end\n    i = i + 1\n  end\n  return true\nend", "  local l0 = #s0\n\
    \  local l1 = #s1\n  if l0 ~= l1 then return false end\n  for i = 1, l0 do\n \
    \   if s0:sub(i, i) ~= s1:sub(i, i) then return false end\n  end\n  return true\n\
    end", "  local function is_char(c)\n    return string.sub(c, 1, 1) == 'a'\n  end\n\
    \  local function is_word(w)\n    return string.sub(w, 1, 1) == 'a'\n  end\n \
    \ local function is_char(w, c)\n    return string.sub(c, 2, 2) == 'a'\n  end\n\
    \  local function is_word(w, w)\n    return string.sub(w, 1, 1) == 'a' and string.sub(c,\
    \ 2, 2) == 'a'\n  end\n  local function is_char(w, w, c)\n    return string.sub(c,\
    \ 2, 2) == 'a' and string.sub(w, 1, 1) == 'a'\n  end\n  local function is_word(w,\
    \ w, w)\n    return string.sub(w, 1, 1) == 'a' and string.sub(c, 2, 2) == 'a'\
    \ and string.sub(w,\n      2, 2) == 'a'\n  end\n  local function is_char(w, w,\
    \ w, c)\n    return string.sub(c, 2, 2) == 'a' and string.sub(w, 1, 1) == 'a'\
    \ and string.sub(w,\n      2, 2) == 'a'\n  end\n  local function is_word(w, w,\
    \ w, w)\n    return string.sub(w, 1, 1) == 'a' and string.sub(c, 2, 2) == 'a'\
    \ and string.sub(w,\n      2, 2) == 'a' and string.sub(w,\n      3, 3) == 'a'\n\
    \  end\n  local function is_char(w, w, w, w, c)\n    return string.sub(c, 2, 2)\
    \ == 'a' and string.sub(w, 1, 1) == 'a' and string.sub(w,\n      2, 2) == 'a'\
    \ and string.sub(w,\n      3, 3) == 'a' and string.sub(w,\n      4, 4) == 'a'\n\
    \  end\n  local function is_word(w, w, w, w, w)\n    return string.sub(w, 1, 1)\
    \ == 'a' and string.sub(c, 2, 2) == 'a' and string.sub(w,\n      2, 2) == 'a'\
    \ and string.sub(w,\n      3, 3) == 'a' and string.sub(w,\n      4, 4) == 'a'\
    \ and string.sub(w,\n      5, 5) == 'a'\n  end\n  local function is_char(w, w,\
    \ w, w, w, c)\n    return string.sub(c, 2, 2) == 'a' and string.sub(w, 1, 1) ==\
    \ 'a' and string.sub(w,\n      2, 2) == 'a' and string.sub(w,\n      3, 3) ==\
    \ 'a' and string.sub(w,\n      4, 4) == 'a' and string.sub(w,\n      5, 5) ==\
    \ 'a' and string.sub(w,\n      6, 6) == 'a'\n  end\n  local function is_word(w,\
    \ w, w, w, w, w)\n    return string.sub(w, 1, 1) == 'a' and string.sub(c, 2, 2)\
    \ == 'a' and string.sub(w,\n      2, 2) == 'a' and string.sub(w", "  local len0\
    \ = #s0\n  local len1 = #s1\n  if len0 ~= len1 then return false end\n  for i\
    \ = 1, len0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\n\
    end", "  local n0 = #s0\n  local n1 = #s1\n  local i\n  if n0 ~= n1 then return\
    \ false end\n  for i=1, n0 do\n    if s0[i] ~= s1[i] then return false end\n \
    \ end\n  return true\nend", "  local function is_char(ch)\n    return string.sub(string.gsub(ch,\
    \ \"[%z\\1-\\127\\194-\\244\\377]\", \"\"), 1, 1)\n  end\n  local function is_char_pair(ch1,\
    \ ch2)\n    return is_char(ch1) and is_char(ch2)\n  end\n  local function is_char_pair_pair(ch1,\
    \ ch2)\n    return is_char_pair(ch1) and is_char_pair(ch2)\n  end\n  local function\
    \ is_char_pair_pair_pair(ch1, ch2)\n    return is_char_pair_pair(ch1) and is_char_pair_pair(ch2)\n\
    \  end\n  local function is_char_pair_pair_pair_pair(ch1, ch2)\n    return is_char_pair_pair_pair(ch1)\
    \ and is_char_pair_pair_pair(ch2)\n  end\n  local function is_char_pair_pair_pair_pair_pair(ch1,\
    \ ch2)\n    return is_char_pair_pair_pair_pair(ch1) and is_char_pair_pair_pair_pair(ch2)\n\
    \  end\n  local function is_char_pair_pair_pair_pair_pair_pair(ch1, ch2)\n   \
    \ return is_char_pair_pair_pair_pair_pair(ch1) and is_char_pair_pair_pair_pair_pair(ch2)\n\
    \  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair(ch1, ch2)\n\
    \    return is_char_pair_pair_pair_pair_pair_pair(ch1) and is_char_pair_pair_pair_pair_pair_pair(ch2)\n\
    \  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair(ch1,\
    \ ch2)\n    return is_char_pair_pair_pair_pair_pair_pair_pair(ch1) and is_char_pair_pair_pair_pair_pair_pair_pair(ch2)\n\
    \  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair(ch1,\
    \ ch2)\n    return is_char_pair_pair_pair_pair_pair_pair_pair_pair(ch1) and is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair(ch2)\n\
    \  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(ch1,\
    \ ch2)\n    return is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair(ch1) and\
    \ is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair(ch2)\n  end\n  local function\
    \ is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(ch1, ch2)\n    return\
    \ is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(ch1) and is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(ch2)\n\
    \  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(ch1,\
    \ ch2)\n    return is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(ch1)\
    \ and is_char_pair_pair_pair_pair_pair_pair_", "  local n0 = #s0\n  local n1 =\
    \ #s1\n  local i = 0\n  while i < n0 and i < n1 do\n    if s0[i] ~= s1[i] then\
    \ return false end\n    i = i + 1\n  end\n  return i == n0 and i == n1\nend",
  "  local l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1 then return false end\n  for\
    \ i = 1, l0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\n\
    end", "  local c0 = {}\n  local c1 = {}\n  for _, c in ipairs(s0) do\n    c0[c]\
    \ = true\n  end\n  for _, c in ipairs(s1) do\n    c1[c] = true\n  end\n  return\
    \ #c1 == #c0\nend", "  local len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1\
    \ then return false end\n  for i = 1, len0 do\n    if s0[i] ~= s1[i] then return\
    \ false end\n  end\n  return true\nend", "  local n0 = #s0\n  local n1 = #s1\n\
    \  local i\n  for i = 1, n0 do\n    if s0[i] ~= s1[i] then return false end\n\
    \  end\n  return n0 == n1\nend", "  local len0 = #s0\n  local len1 = #s1\n  if\
    \ len0 ~= len1 then return false end\n  local i\n  for i=1, len0 do\n    if s0[i]\
    \ ~= s1[i] then return false end\n  end\n  return true\nend", "  local n0 = #s0\n\
    \  local n1 = #s1\n  if n0 ~= n1 then return false end\n  for i = 1, n0 do\n \
    \   if s0[i] ~= s1[i] then return false end\n  end\n  return true\nend", "  local\
    \ n0, n1 = #s0, #s1\n  if n0 ~= n1 then return false end\n  for i = 1, n0 do\n\
    \    if s0[i] ~= s1[i] then return false end\n  end\n  return true\nend", "  --\
    \ Check for same characters.\n  for i = 0, #s0 do\n    if s0[i] ~= s1[i] then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local l0 = #s0\n\
    \  local l1 = #s1\n  if l0 ~= l1 then return false end\n  for i = 1, l0 do\n \
    \   if s0[i] ~= s1[i] then return false end\n  end\n  return true\nend", "  local\
    \ i = 0\n  local j = 0\n  local len = #s0 - 1\n  while i < len do\n    j = i +\
    \ 1\n    while j < len do\n      if s0[i] == s1[j] then\n        return true\n\
    \      end\n      j = j + 1\n    end\n    i = i + 1\n  end\n  return false\nend",
  "  local len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1 then return false end\n\
    \  for i = 1, len0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return\
    \ true\nend", "  local n0 = #s0\n  local n1 = #s1\n  if n0 ~= n1 then return false\
    \ end\n  for i = 1, n0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n\
    \  return true\nend", "  local c0 = {}\n  local c1 = {}\n  for i = 1, #s0 do\n\
    \    local c = s0[i]\n    c0[c] = c\n    c1[c] = c\n  end\n  for i = 1, #s1 do\n\
    \    local c = s1[i]\n    if c0[c] ~= c1 [c] then\n      return false\n    end\n\
    \  end\n  return true\nend", "  local l0 = #s0\n  local l1 = #s1\n  local i\n\
    \  for i = 1, l0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return\
    \ l0 == l1\nend", "  local len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1 then\
    \ return false end\n  for i = 1, len0 do\n    if s0[i] ~= s1[i] then return false\
    \ end\n  end\n  return true\nend", "  local l0 = #s0\n  local l1 = #s1\n  if l0\
    \ ~= l1 then return false end\n  for i = 1, l0 do\n    if s0[i] ~= s1[i] then\
    \ return false end\n  end\n  return true\nend", "  local c0, c1 = unpack(s0)\n\
    \  local c2, c3 = unpack(s1)\n  return c1 == c2 and c3 == c3\nend", "  local n0\
    \ = #s0\n  local n1 = #s1\n  local i\n  -- If either string is empty, they're\
    \ not the same.\n  if n0 == 0 or n1 == 0 then\n    return false\n  end\n  -- If\
    \ either string is 1 character longer, they're not the same.\n  if n0 < n1 then\n\
    \    return false\n  end\n  -- If either string is 0 character longer, they're\
    \ not the same.\n  if n0 == n1 then\n    return true\n  end\n  -- If either string\
    \ is longer than the other, they're not the same.\n  for i = 1, n0 do\n    if\
    \ s0[i] ~= s1[i] then\n      return false\n    end\n  end\n  return true\nend",
  "  local l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1 then return false end\n  local\
    \ i\n  for i=1, l0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return\
    \ true\nend", "  local n0 = #s0\n  local n1 = #s1\n  local i0\n  local i1\n  local\
    \ j0\n  local j1\n  for i0 = 1, n0 do\n    i1 = i0\n    for j0 = 1, n1 do\n  \
    \    j1 = j0\n      if s0[i0] == s1[j0] then\n        i1 = i0\n        j1 = j0\n\
    \      end\n      if i1 == j1 then\n        return true\n      end\n    end\n\
    \  end\n  return false\nend", "  local len0 = #s0\n  local len1 = #s1\n  if len0\
    \ ~= len1 then return false end\n  local i\n  for i = 1, len0 do\n    if s0[i]\
    \ ~= s1[i] then return false end\n  end\n  return true\nend", "  local n0 = #s0\n\
    \  local n1 = #s1\n  if n0 ~= n1 then return false end\n  for i = 1, n0 do\n \
    \   if s0[i] ~= s1[i] then return false end\n  end\n  return true\nend", "  local\
    \ c0 = string.len(s0)\n  local c1 = string.len(s1)\n  if c0 ~= c1 then return\
    \ false end\n  for i = 1, c0 do\n    if string.sub(s0, i, i) ~= string.sub(s1,\
    \ i, i) then return false end\n  end\n  return true\nend", "  local l0 = #s0\n\
    \  local l1 = #s1\n  local i\n  for i = 1, l0 do\n    if s0[i] ~= s1[i] then return\
    \ false end\n  end\n  return l0 == l1\nend", "  local function is_char(c)\n  \
    \  return string.sub(s0, c, c + 1) ~= string.sub(s1, c, c + 1)\n  end\n  local\
    \ function is_char_pair(c)\n    return string.sub(s0, c, c + 1) ~= string.sub(s1,\
    \ c + 1, c + 1)\n  end\n  local function is_char_pair_pair(c)\n    return string.sub(s0,\
    \ c, c + 1) ~= string.sub(s1, c + 1, c + 1)\n  end\n  local function is_char_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 1) ~= string.sub(s1, c + 1, c + 1)\n  end\n\
    \  local function is_char_pair_pair_pair_pair(c)\n    return string.sub(s0, c,\
    \ c + 1) ~= string.sub(s1, c + 1, c + 1)\n  end\n  local function is_char_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 1) ~= string.sub(s1, c + 1, c + 1)\n  end\n\
    \  local function is_char_pair_pair_pair_pair_pair_pair(c)\n    return string.sub(s0,\
    \ c, c + 1) ~= string.sub(s1, c + 1, c + 1)\n  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 1) ~= string.sub(s1, c + 1, c + 1)\n  end\n\
    \  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair(c)\n    return\
    \ string.sub(s0, c, c + 1) ~= string.sub(s1, c + 1, c + 1)\n  end\n  local function\
    \ is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n    return string.sub(s0,\
    \ c, c + 1) ~= string.sub(s1, c + 1, c + 1)\n  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 1) ~= string.sub(s1, c + 1, c + 1)\n  end\n\
    \  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 1) ~= string.sub(s1, c + 1, c + 1)\n  end\n\
    \  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 1) ~= string.sub(s1, c + 1, c + 1)\n  end\n\
    \  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + 1) ~= string.sub(s1, c + 1, c + 1)\n  end\n\
    \  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(s0, c, c + ", "  local c0 = {}\n  local c1 = {}\n  for\
    \ i = 1, #s0 do\n    table.insert(c0, string.sub(s0, i, i))\n    table.insert(c1,\
    \ string.sub(s1, i, i))\n  end\n  return #c0 == #c1\nend", "  local len0 = #s0\n\
    \  local len1 = #s1\n  if len0 ~= len1 then return false end\n  for i = 1, len0\
    \ do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\nend",
  "  local l0 = #s0\n  local l1 = #s1\n  local i0 = 0\n  local i1 = 0\n  while i0\
    \ < l0 and i1 < l1 do\n    if string.sub(s0, i0, i0) == string.sub(s1, i1, i1)\
    \ then return true end\n    i0 = i0 + 1\n    i1 = i1 + 1\n  end\n  return false\n\
    end", "  -- Check lengths.\n  if #s0 ~= #s1 then return false end\n  -- Check\
    \ characters.\n  for i=1, #s0 do\n    if s0[i] ~= s1[i] then return false end\n\
    \  end\n  return true\nend", "  local len0 = #s0\n  local len1 = #s1\n  if len0\
    \ ~= len1 then return false end\n  for i = 1, len0 do\n    if s0:sub(i, i) ~=\
    \ s1:sub(i, i) then return false end\n  end\n  return true\nend", "  local l0\
    \ = #s0\n  local l1 = #s1\n  if l0 ~= l1 then return false end\n  local i\n  for\
    \ i=1, l0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\n\
    end", "  local l0 = #s0\n  local l1 = #s1\n  local i = 0\n  while i < l0 and i\
    \ < l1 do\n    if s0[i] ~= s1[i] then return false end\n    i = i + 1\n  end\n\
    \  return i == l0 and i == l1\nend", "  local function is_char(c)\n    return\
    \ string.sub(s0, c, c) == string.sub(s1, c, c)\n  end\n  return #s0 ~= #s1 and\
    \ all(ichar(is_char), unpack(s0, s1))\nend", "  local n0, n1 = #s0, #s1\n  if\
    \ n0 ~= n1 then return false end\n  for i = 1, n0 do\n    if s0:sub(i, i) ~= s1:sub(i,\
    \ i) then return false end\n  end\n  return true\nend", "  local len0 = #s0\n\
    \  local len1 = #s1\n  if len0 ~= len1 then return false end\n  local i = 0\n\
    \  while i < len0 do\n    if s0[i] ~= s1[i] then return false end\n    i = i +\
    \ 1\n  end\n  return true\nend", "  local i = 0\n  local j = 1\n  local n = #s0\
    \ - 1\n  local m = #s1 - 1\n  while i < n and j < m do\n    if s0[i] == s1[j]\
    \ then\n      i = i + 1\n      j = j + 1\n    else\n      return false\n    end\n\
    \  end\n  return i == n and j == m\nend", "  -- We don't need to check s1 because\
    \ it is guaranteed to have same length\n  -- as s0\n  local s0_c = string.gsub(s0,\
    \ \"(.)\", function(c) return c:lower() end)\n  local s1_c = string.gsub(s1, \"\
    (.)\", function(c) return c:lower() end)\n  return s0_c == s1_c\nend", "  local\
    \ n0 = #s0\n  local n1 = #s1\n  if n0 ~= n1 then return false end\n  local i0\n\
    \  local i1\n  for i0 = 1, n0 do\n    for i1 = 1, n1 do\n      if s0[i0] ~= s1[i1]\
    \ then return false end\n    end\n  end\n  return true\nend", "  local l0 = #s0\n\
    \  local l1 = #s1\n  if l0 ~= l1 then return false end\n  for i = 1, l0 do\n \
    \   if s0[i] ~= s1[i] then return false end\n  end\n  return true\nend", "  local\
    \ i = 0\n  local j = 0\n  local n = #s0 - 1\n  while i < n do\n    j = i + 1\n\
    \    while j < n do\n      if s0[i] == s1[j] then\n        return true\n     \
    \ end\n      j = j + 1\n    end\n    i = i + 1\n  end\n  return false\nend", " \
    \ local len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1 then return false end\n\
    \  for i = 1, len0 do\n    if s0:sub(i, i) ~= s1:sub(i, i) then return false end\n\
    \  end\n  return true\nend", "  -- We don't care about case or whitespace.\n \
    \ s0 = string.lower(s0)\n  s1 = string.lower(s1)\n  -- We don't care about case\
    \ or whitespace.\n  local n0 = #s0\n  local n1 = #s1\n  -- We don't care about\
    \ case or whitespace.\n  if n0 ~= n1 then return false end\n  -- We don't care\
    \ about case or whitespace.\n  for i = 0, n0 - 1 do\n    if string.sub(s0, i,\
    \ i) ~= string.sub(s1, i, i) then return false end\n  end\n  return true\nend",
  "  local n0 = #s0\n  local n1 = #s1\n  if n0 ~= n1 then return false end\n  for\
    \ i = 1, n0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\n\
    end", "  local n0 = #s0\n  local n1 = #s1\n  local i\n  for i = 1, n0 do\n   \
    \ if s0[i] ~= s1[i] then return false end\n  end\n  return n0 == n1\nend", " \
    \ local len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1 then return false end\n\
    \  for i = 1, len0 do\n    if s0:sub(i, i) ~= s1:sub(i, i) then return false end\n\
    \  end\n  return true\nend", "  local l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1\
    \ then return false end\n  local i0 = 0\n  local i1 = 0\n  while i0 < l0 and i1\
    \ < l1 do\n    if string.sub(s0, i0, i0 + 1) ~= string.sub(s1, i1, i1 + 1) then\
    \ return false end\n    i0 = i0 + 1\n    i1 = i1 + 1\n  end\n  return i0 == l0\
    \ and i1 == l1\nend", "  local len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1\
    \ then return false end\n  for i = 1, len0 do\n    if s0[i] ~= s1[i] then return\
    \ false end\n  end\n  return true\nend", "  local c0 = string.len(s0)\n  local\
    \ c1 = string.len(s1)\n  local n = 0\n  local i = 0\n  while i < c0 do\n    local\
    \ c = string.sub(s0, i, i)\n    local j = string.find(s1, c)\n    if j == nil\
    \ then\n      return false\n    end\n    i = j + 1\n    n = n + 1\n  end\n  return\
    \ n == c1\nend", "  local i0 = 0\n  local i1 = 0\n  local len0 = #s0\n  local\
    \ len1 = #s1\n  while i0 < len0 and i1 < len1 do\n    if string.sub(s0, i0, i0)\
    \ == string.sub(s1, i1, i1) then return true end\n    i0 = i0 + 1\n    i1 = i1\
    \ + 1\n  end\n  return false\nend", "  local n0, n1 = #s0, #s1\n  if n0 ~= n1\
    \ then return false end\n  for i = 1, n0 do\n    if s0[i] ~= s1[i] then return\
    \ false end\n  end\n  return true\nend", "  local i0 = 0\n  local i1 = 0\n  local\
    \ i2 = #s0\n  while i0 < i2 do\n    local i3 = #s1\n    while i1 < i3 do\n   \
    \   if string.sub(s0, i0, i1) == string.sub(s1, i1, i1) then\n        return true\n\
    \      end\n      i1 = i1 + 1\n    end\n    i0 = i0 + 1\n  end\n  return false\n\
    end", "  -- The characters in s0 are the same as the characters in s1.\n  -- The\
    \ characters in s1 are the same as the characters in s0.\n  -- The characters\
    \ in s0 are the same as the characters in s1.\n  -- The characters in s1 are the\
    \ same as the characters in s0.\n  -- The characters in s0 are the same as the\
    \ characters in s1.\n  -- The characters in s1 are the same as the characters\
    \ in s0.\n  -- The characters in s0 are the same as the characters in s1.\n  --\
    \ The characters in s1 are the same as the characters in s0.\n  -- The characters\
    \ in s0 are the same as the characters in s1.\n  -- The characters in s1 are the\
    \ same as the characters in s0.\n  -- The characters in s0 are the same as the\
    \ characters in s1.\n  -- The characters in s1 are the same as the characters\
    \ in s0.\n  -- The characters in s0 are the same as the characters in s1.\n  --\
    \ The characters in s1 are the same as the characters in s0.\n  -- The characters\
    \ in s0 are the same as the characters in s1.\n  -- The characters in s1 are the\
    \ same as the characters in s0.\n  -- The characters in s0 are the same as the\
    \ characters in s1.\n  -- The characters in s1 are the same as the characters\
    \ in s0.\n  -- The characters in s0 are the same as the characters in s1.\n  --\
    \ The characters in s1 are the same as the characters in s0.\n  -- The characters\
    \ in s0 are the same as the characters in s1.\n  -- The characters in s1 are the\
    \ same as the characters in s0.\n  -- The characters in s0 are the same as the\
    \ characters in s1.\n  -- The characters in s1 are the same as the characters\
    \ in s0.\n  -- The characters in s0 are the same as the characters in s1.\n  --\
    \ The characters in s1 are the same as the characters in s0.\n  -- The characters\
    \ in s0 are the same as the characters in s1.\n  -- The characters in s1 are the\
    \ same as the characters in s0.\n  -- The characters in s0 are the same as the\
    \ characters in s1.\n  -- The characters in s1 are the same as the characters\
    \ in s0.\n  -- The characters in s0 are the same as the characters in s1.\n  --\
    \ The characters in s1 are the same as the characters in s0.\n  -- The characters\
    \ in s0 are the same as the characters in s1.\n  -- The characters in s1 are the\
    \ same as the characters in s0.\n  -- The characters in s0 are the same as the\
    \ characters in s1.\n  -- The characters in ", "  -- We don't care about case\n\
    \  s0 = string.lower(s0)\n  s1 = string.lower(s1)\n  local i0 = 0\n  local i1\
    \ = 0\n  while i0 < #s0 and i1 < #s1 do\n    if string.sub(s0, i0, i0 + 1) ==\
    \ string.sub(s1, i1, i1 + 1) then\n      i0 = i0 + 1\n      i1 = i1 + 1\n    else\n\
    \      return false\n    end\n  end\n  return i0 == #s0 and i1 == #s1\nend", " \
    \ -- Check if two words have the same characters.\n  -- >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n  -- true\n  -- >>> same_chars('abcd', 'dddddddabc')\n\
    \  -- true\n  -- >>> same_chars('dddddddabc', 'abcd')\n  -- true\n  -- >>> same_chars('eabcd',\
    \ 'dddddddabc')\n  -- false\n  -- >>> same_chars('abcd', 'dddddddabce')\n  --\
    \ false\n  -- >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n  -- false\n \
    \ local function chars(s0, s1)\n    local function chars(s0, s1)\n      local\
    \ function chars(s0, s1)\n        local function chars(s0, s1)\n          local\
    \ function chars(s0, s1)\n            local function chars(s0, s1)\n         \
    \     local function chars(s0, s1)\n                local function chars(s0, s1)\n\
    \                  local function chars(s0, s1)\n                    local function\
    \ chars(s0, s1)\n                      local function chars(s0, s1)\n        \
    \                local function chars(s0, s1)\n                          local\
    \ function chars(s0, s1)\n                            local function chars(s0,\
    \ s1)\n                              local function chars(s0, s1)\n          \
    \                      local function chars(s0, s1)\n                        \
    \          local function chars(s0, s1)\n                                    local\
    \ function chars(s0, s1)\n                                      local function\
    \ chars(s0, s1)\n                                        local function chars(s0,\
    \ s1)\n                                          local function chars(s0, s1)\n\
    \                                            local function chars(s0, s1)\n  \
    \                                            local function chars(s0, s1)\n  \
    \                                              local function chars(s0, s1)\n\
    \                                                  local function chars(s0, s1)\n\
    \                                                    local function chars(s0,\
    \ s1)\n                                                      local function chars(s0,\
    \ s1)\n                                                        local function\
    \ chars(s0, s1)\n                                                          local\
    \ function chars(s0, s1)\n                                                   \
    \         local function chars(s0, s1)\n                                     \
    \                         local function chars(s0, s1)\n                     \
    \                                           local function chars(s0, s1)\n   \
    \                                                               local function\
    \ chars(s0, s1)\n                                                            \
    \        local function chars(s0, s1)\n                                      \
    \                                return s0 ~= s1 and s0 ~= nil and s1 ~= nil\n\
    \                                                                  end\n     \
    \                                                           end\n            \
    \                                                  end\n                     \
    \                                       end\n                                \
    \                          end\n                                             \
    \           end\n                                                      end\n",
  "  local c0, c1 = unpack(s0)\n  for i = 1, #s1 do\n    local c2, c3 = unpack(s1)\n\
    \    if c0 ~= c2 or c1 ~= c3 then\n      return false\n    end\n    c0, c1 = c2,\
    \ c3\n  end\n  return true\nend", "  local n0 = #s0\n  local n1 = #s1\n  if n0\
    \ ~= n1 then\n    return false\n  end\n  for i = 1, n0 do\n    if s0[i] ~= s1[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local l0 =\
    \ #s0\n  local l1 = #s1\n  local i0 = 0\n  local i1 = 0\n  while i0 < l0 and i1\
    \ < l1 do\n    if string.sub(s0, i0, i0) == string.sub(s1, i1, i1) then return\
    \ true end\n    i0 = i0 + 1\n    i1 = i1 + 1\n  end\n  return false\nend", " \
    \ local n0 = #s0\n  local n1 = #s1\n  local i = 0\n  while i < n0 and i < n1 do\n\
    \    if s0[i] ~= s1[i] then return false end\n    i = i + 1\n  end\n  return i\
    \ == n0 and i == n1\nend", "  local len0 = #s0\n  local len1 = #s1\n  if len0\
    \ ~= len1 then return false end\n  for i = 1, len0 do\n    if string.sub(s0, i,\
    \ i) ~= string.sub(s1, i, i) then return false end\n  end\n  return true\nend",
  "  local function is_char(c)\n    return string.sub(c, 1, 1) == 'a'\n  end\n  local\
    \ function is_char_pair(c)\n    return string.sub(c, 1, 2) == 'ab'\n  end\n  local\
    \ function is_char_pair_pair(c)\n    return string.sub(c, 1, 3) == 'abc'\n  end\n\
    \  local function is_char_pair_pair_pair(c)\n    return string.sub(c, 1, 4) ==\
    \ 'abcd'\n  end\n  local function is_char_pair_pair_pair_pair(c)\n    return string.sub(c,\
    \ 1, 5) == 'abcde'\n  end\n  local function is_char_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(c, 1, 6) == 'abcdef'\n  end\n  local function is_char_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(c, 1, 7) == 'abcdefg'\n  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(c, 1, 8) == 'abcdefgh'\n  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(c, 1, 9) == 'abcdefghi'\n  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(c, 1, 10) == 'abcdefghij'\n  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(c, 1, 11) == 'abcdefghijk'\n  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(c, 1, 12) == 'abcdefghijkl'\n  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(c, 1, 13) == 'abcdefghijklm'\n  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(c, 1, 14) == 'abcdefghijklmn'\n  end\n  local function\
    \ is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n   \
    \ return string.sub(c, 1, 15) == 'abcdefghijklmno'\n  end\n  local function is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(c, 1, 16) == 'abcdefghijklmnop'\n  end\n  local function\
    \ is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(c, 1, 17) == 'abcdefghijklmnopq'\n  end\n  local function\
    \ is_char_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair_pair(c)\n\
    \    return string.sub(c, 1, 18", "  local l0 = #s0\n  local l1 = #s1\n  if l0\
    \ ~= l1 then return false end\n  for i = 1, l0 do\n    if s0[i] ~= s1[i] then\
    \ return false end\n  end\n  return true\nend", "  local n0 = #s0\n  local n1\
    \ = #s1\n  if n0 ~= n1 then return false end\n  for i = 1, n0 do\n    if s0[i]\
    \ ~= s1[i] then return false end\n  end\n  return true\nend", "  local l0 = #s0\n\
    \  local l1 = #s1\n  if l0 ~= l1 then return false end\n  for i = 1, l0 do\n \
    \   if s0[i] ~= s1[i] then return false end\n  end\n  return true\nend", "  local\
    \ l0 = #s0\n  local l1 = #s1\n  local i0 = 0\n  local i1 = 0\n  while i0 < l0\
    \ and i1 < l1 do\n    if s0[i0] ~= s1[i1] then return false end\n    i0 = i0 +\
    \ 1\n    i1 = i1 + 1\n  end\n  return i0 == l0 and i1 == l1\nend", "  local l0\
    \ = #s0\n  local l1 = #s1\n  if l0 ~= l1 then\n    return false\n  end\n  for\
    \ i = 1, l0 do\n    if string.sub(s0, i, i) ~= string.sub(s1, i, i) then\n   \
    \   return false\n    end\n  end\n  return true\nend", "  local l0 = #s0\n  local\
    \ l1 = #s1\n  local i0\n  local i1\n  for i0 = 1, l0 do\n    for i1 = 1, l1 do\n\
    \      if s0[i0] == s1[i1] then return true end\n    end\n  end\n  return false\n\
    end", "  local len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1 then return false\
    \ end\n  for i = 1, len0 do\n    if s0:sub(i, i) ~= s1:sub(i, i) then return false\
    \ end\n  end\n  return true\nend", "  local function is_char(c)\n    return string.sub(c,\
    \ 1, 1) == 'a'\n  end\n  local function is_chars(c)\n    return string.sub(c,\
    \ 1, 1) == 'a' or string.sub(c, 1, 1) == 'e' or string.sub(c, 1, 1) == 'i'\n \
    \ end\n  local function is_chars(c1, c2)\n    return string.sub(c1, 1, 1) == 'a'\
    \ or string.sub(c2, 1, 1) == 'e' or string.sub(c1, 1, 1) == 'i'\n  end\n  local\
    \ function is_chars(c1, c2, c3)\n    return string.sub(c1, 1, 1) == 'a' or string.sub(c2,\
    \ 1, 1) == 'e' or string.sub(c3, 1, 1) == 'i'\n  end\n  local function is_chars(c1,\
    \ c2, c3, c4)\n    return string.sub(c1, 1, 1) == 'a' or string.sub(c2, 1, 1)\
    \ == 'e' or string.sub(c3, 1, 1) == 'i' or string.sub(c4, 1, 1) == 'o'\n  end\n\
    \  local function is_chars(c1, c2, c3, c4, c5)\n    return string.sub(c1, 1, 1)\
    \ == 'a' or string.sub(c2, 1, 1) == 'e' or string.sub(c3, 1, 1) == 'i' or string.sub(c4,\
    \ 1, 1) == 'o' or string.sub(c5, 1, 1) == 'u'\n  end\n  local function is_chars(c1,\
    \ c2, c3, c4, c5, c6)\n    return string.sub(c1, 1, 1) == 'a' or string.sub(c2,\
    \ 1, 1) == 'e' or string.sub(c3, 1, 1) == 'i' or string.sub(c4, 1, 1) == 'o' or\
    \ string.sub(c5, 1, 1) == 'u' or string.sub(c6, 1, 1) == 'z'\n  end\n  local function\
    \ is_chars(c1, c2, c3, c4, c5, c6, c7)\n    return string.sub(c1, 1, 1) == 'a'\
    \ or string.sub(c2, 1, 1) == 'e' or string.sub(c3, 1, 1) == 'i' or string.sub(c4,\
    \ 1, 1) == 'o' or string.sub(c5, 1, 1) == 'u' or string.sub(c6, 1, 1) == 'z' or\
    \ string.sub(c7, 1, 1) == 'z'\n  end\n  local function is_chars(c1, c2, c3, c4,\
    \ c5, c6, c7, c8)\n    return string.sub(c1, 1, 1) == 'a' or string.sub(c2, 1,\
    \ 1) == 'e' or string.sub(c3, 1, 1) == 'i' or string.sub(c4, 1, 1) == 'o' or string.sub(c5,\
    \ 1, 1) == 'u' or string.sub(c6, 1, 1) == 'z' or string.sub(c7, 1, 1) == 'z' or\
    \ string.sub(c8, 1, 1) == 'z'\n  end\n  local function is_chars(c1, c2, c3, c4,\
    \ c5, c6, c7, ", "  local len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1 then\
    \ return false end\n  for i = 1, len0 do\n    if s0[i] ~= s1[i] then return false\
    \ end\n  end\n  return true\nend", "  local c0 = {}\n  local c1 = {}\n  for _,\
    \ c in ipairs(s0) do\n    c0[c] = true\n  end\n  for _, c in ipairs(s1) do\n \
    \   c1[c] = true\n  end\n  return #c1 == #c0\nend", "  local n0 = #s0\n  local\
    \ n1 = #s1\n  if n0 ~= n1 then return false end\n  for i = 1, n0 do\n    if s0:sub(i,\
    \ i) ~= s1:sub(i, i) then return false end\n  end\n  return true\nend", "  local\
    \ l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1 then return false end\n  for i = 1,\
    \ l0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\nend",
  "  local n0, n1 = #s0, #s1\n  if n0 ~= n1 then return false end\n  for i = 1, n0\
    \ do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\nend",
  "  local n0 = #s0\n  local n1 = #s1\n  if n0 ~= n1 then return false end\n  for\
    \ i = 1, n0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\n\
    end", "  local n0 = #s0\n  local n1 = #s1\n  if n0 ~= n1 then return false end\n\
    \  for i = 1, n0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return\
    \ true\nend", "  local n0, n1 = #s0, #s1\n  if n0 ~= n1 then return false end\n\
    \  for i = 1, n0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return\
    \ true\nend", "  local l0 = #s0\n  local l1 = #s1\n  local i = 0\n  while i <\
    \ l0 and i < l1 do\n    if s0[i] ~= s1[i] then return false end\n    i = i + 1\n\
    \  end\n  return i == l0 and i == l1\nend", "  local len0 = #s0\n  local len1\
    \ = #s1\n  if len0 ~= len1 then return false end\n  for i = 1, len0 do\n    if\
    \ s0[i] ~= s1[i] then return false end\n  end\n  return true\nend", "  local len0\
    \ = #s0\n  local len1 = #s1\n  if len0 ~= len1 then return false end\n  for i\
    \ = 1, len0 do\n    if s0:sub(i, i) ~= s1:sub(i, i) then return false end\n  end\n\
    \  return true\nend", "  local n0, n1 = #s0, #s1\n  if n0 ~= n1 then return false\
    \ end\n  for i = 1, n0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n\
    \  return true\nend", "  local l0 = #s0\n  local l1 = #s1\n  local i = 0\n  while\
    \ i < l0 do\n    if s0[i] ~= s1[i] then return false end\n    i = i + 1\n  end\n\
    \  return true\nend", "  local n0, n1 = #s0, #s1\n  if n0 ~= n1 then return false\
    \ end\n  for i = 1, n0 do\n    if s0:sub(i, i) ~= s1:sub(i, i) then return false\
    \ end\n  end\n  return true\nend", "  local n0 = #s0\n  local n1 = #s1\n  local\
    \ i\n  for i = 1, n0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n\
    \  return n0 == n1\nend", "  local l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1 then\
    \ return false end\n  for i = 1, l0 do\n    if s0[i] ~= s1[i] then return false\
    \ end\n  end\n  return true\nend", "  local len0 = #s0\n  local len1 = #s1\n \
    \ if len0 ~= len1 then return false end\n  for i = 1, len0 do\n    if s0[i] ~=\
    \ s1[i] then return false end\n  end\n  return true\nend", "  -- We don't need\
    \ to check s1 because it is guaranteed to be longer\n  -- than s0\n  local len0\
    \ = #s0\n  local len1 = #s1\n  if len0 ~= len1 then\n    return false\n  end\n\
    \  local i = 0\n  while i < len0 do\n    if s0[i] ~= s1[i] then\n      return\
    \ false\n    end\n    i = i + 1\n  end\n  return true\nend", "  local c0 = {}\n\
    \  local c1 = {}\n  for i = 1, #s0 do\n    local c = string.sub(string.lower(s0),\
    \ i, i)\n    c0[c] = c\n  end\n  for i = 1, #s1 do\n    local c = string.sub(string.lower(s1),\
    \ i, i)\n    c1[c] = c\n  end\n  for i = 1, #s0 do\n    if c0[string.sub(string.lower(s1),\
    \ i, i)] ~= c1[string.sub(string.lower(s0), i, i)] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local l0 = #s0\n  local l1 = #s1\n  if\
    \ l0 ~= l1 then return false end\n  local i0\n  local i1\n  for i0, i1 in ipairs(string.gmatch(s1,\
    \ '(.-)') do\n    if string.sub(s0, i0, i1) ~= string.sub(s1, i0, i1) then return\
    \ false end\n  end)\n  return true\nend", "  local len0 = #s0\n  local len1 =\
    \ #s1\n  if len0 ~= len1 then return false end\n  for i = 1, len0 do\n    if s0[i]\
    \ ~= s1[i] then return false end\n  end\n  return true\nend", "  local n0 = #s0\n\
    \  local n1 = #s1\n  if n0 ~= n1 then\n    return false\n  end\n  for i = 1, n0\
    \ do\n    if s0[i] ~= s1[i] then\n      return false\n    end\n  end\n  return\
    \ true\nend", "  local n0 = #s0\n  local n1 = #s1\n  local i = 0\n  while i <\
    \ n0 and i < n1 do\n    if s0[i] ~= s1[i] then return false end\n    i = i + 1\n\
    \  end\n  return i == n0 or i == n1\nend", "  local c0 = string.byte(s0)\n  local\
    \ c1 = string.byte(s1)\n  local l0 = string.len(s0)\n  local l1 = string.len(s1)\n\
    \  for i = 1, l0 do\n    if string.byte(s0, i) == c0 and string.byte(s1, i) ==\
    \ c1 then\n      return true\n    end\n  end\n  return false\nend", "  local n0\
    \ = #s0\n  local n1 = #s1\n  if n0 ~= n1 then return false end\n  for i = 1, n0\
    \ do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\nend",
  "  local i0 = 0\n  local i1 = 0\n  local i\n  local j\n  local k\n  local len0\n\
    \  local len1\n  local len\n  local c\n  local i0\n  local i1\n  local j\n  local\
    \ k\n  local len0\n  local len1\n  local len\n  local c\n  local i0\n  local i1\n\
    \  local j\n  local k\n  local len0\n  local len1\n  local len\n  local c\n  local\
    \ i0\n  local i1\n  local j\n  local k\n  local len0\n  local len1\n  local len\n\
    \  local c\n  local i0\n  local i1\n  local j\n  local k\n  local len0\n  local\
    \ len1\n  local len\n  local c\n  local i0\n  local i1\n  local j\n  local k\n\
    \  local len0\n  local len1\n  local len\n  local c\n  local i0\n  local i1\n\
    \  local j\n  local k\n  local len0\n  local len1\n  local len\n  local c\n  local\
    \ i0\n  local i1\n  local j\n  local k\n  local len0\n  local len1\n  local len\n\
    \  local c\n  local i0\n  local i1\n  local j\n  local k\n  local len0\n  local\
    \ len1\n  local len\n  local c\n  local i0\n  local i1\n  local j\n  local k\n\
    \  local len0\n  local len1\n  local len\n  local c\n  local i0\n  local i1\n\
    \  local j\n  local k\n  local len0\n  local len1\n  local len\n  local c\n  local\
    \ i0\n  local i1\n  local j\n  local k\n  local len0\n  local len1\n  local len\n\
    \  local c\n  local i0\n  local i1\n  local j\n  local k\n  local len0\n  local\
    \ len1\n  local len\n  local c\n  local i0\n  local i1\n  local j\n  local k\n\
    \  local len0\n  local len1\n  local len\n  local c\n  local ", "  local c0 =\
    \ {}\n  local c1 = {}\n  for i = 1, #s0 do\n    table.insert(c0, string.sub(s0,\
    \ i, i))\n    table.insert(c1, string.sub(s1, i, i))\n  end\n  return #c0 == #c1\n\
    end", "  local i0 = 0\n  local i1 = 0\n  local i2 = #s0\n  while i0 < i2 do\n\
    \    local c0 = string.sub(s0, i0, i0)\n    local c1 = string.sub(s1, i1, i1)\n\
    \    if c0 ~= c1 then\n      return false\n    end\n    i0 = i0 + 1\n    i1 =\
    \ i1 + 1\n  end\n  return true\nend", "  local function is_char(ch)\n    return\
    \ string.sub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(",
  "  local l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1 then return false end\n  for\
    \ i = 1, l0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\n\
    end", "  local l0 = #s0\n  local l1 = #s1\n  local i\n  local j\n  local c\n \
    \ local n\n  local m\n  local l\n  local s0\n  local s1\n  local len\n  local\
    \ len1\n  local len2\n  local len3\n  local len4\n  local len5\n  local len6\n\
    \  local len7\n  local len8\n  local len9\n  local len10\n  local len11\n  local\
    \ len12\n  local len13\n  local len14\n  local len15\n  local len16\n  local len17\n\
    \  local len18\n  local len19\n  local len20\n  local len21\n  local len22\n \
    \ local len23\n  local len24\n  local len25\n  local len26\n  local len27\n  local\
    \ len28\n  local len29\n  local len30\n  local len31\n  local len32\n  local len33\n\
    \  local len34\n  local len35\n  local len36\n  local len37\n  local len38\n \
    \ local len39\n  local len40\n  local len41\n  local len42\n  local len43\n  local\
    \ len44\n  local len45\n  local len46\n  local len47\n  local len48\n  local len49\n\
    \  local len50\n  local len51\n  local len52\n  local len53\n  local len54\n \
    \ local len55\n  local len56\n  local len57\n  local len58\n  local len59\n  local\
    \ len60\n  local len61\n  local len62\n  local len63\n  local len64\n  local len65\n\
    \  local len66\n  local len67\n  local len68\n  local len69\n  local len70\n \
    \ local len71\n  local len72\n  local len73\n  local len74\n  local len75\n  local\
    \ len76\n  local len77\n  local len78\n  local len79\n  local len80\n  local len81\n\
    \  local len82\n  local len83\n  local len84\n  local len85\n  local len86\n \
    \ local len87\n  local len88\n  local len89\n  local len90\n  local len91\n  local\
    \ len92\n  local ", "  local l0 = #s0\n  local l1 = #s1\n  local i0\n  local i1\n\
    \  for i0 = 1, l0 do\n    for i1 = 1, l1 do\n      if s0[i0] == s1[i1] then\n\
    \        return true\n      end\n    end\n  end\n  return false\nend", "  local\
    \ n0, n1 = #s0, #s1\n  if n0 ~= n1 then return false end\n  for i = 1, n0 do\n\
    \    if s0[i] ~= s1[i] then return false end\n  end\n  return true\nend", "  local\
    \ n0, n1 = #s0, #s1\n  if n0 ~= n1 then return false end\n  for i = 1, n0 do\n\
    \    if s0[i] ~= s1[i] then return false end\n  end\n  return true\nend", "  local\
    \ len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1 then return false end\n  for\
    \ i = 1, len0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return\
    \ true\nend", "  local len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1 then\
    \ return false end\n  local i\n  for i=1, len0 do\n    if s0[i] ~= s1[i] then\
    \ return false end\n  end\n  return true\nend", "  local l0 = #s0\n  local l1\
    \ = #s1\n  local i\n  for i = 1, l0 do\n    if s0[i] ~= s1[i] then return false\
    \ end\n  end\n  return l0 == l1\nend", "  local len0 = #s0\n  local len1 = #s1\n\
    \  if len0 ~= len1 then\n    return false\n  end\n  for i = 1, len0 do\n    if\
    \ s0[i] ~= s1[i] then\n      return false\n    end\n  end\n  return true\nend",
  "  local function chars(s)\n    local i, j = 1, #s\n    while i <= j do\n      local\
    \ c = string.sub(s, i, i)\n      if c ~= string.sub(s, j, j) then return false\
    \ end\n      i = i + 1\n      j = j + 1\n    end\n    return true\n  end\n  return\
    \ chars(s0) == chars(s1)\nend", "  local n0 = #s0\n  local n1 = #s1\n  if n0 ~=\
    \ n1 then\n    return false\n  end\n  local i0\n  local i1\n  for i0, i1 in ipairs(string.gmatch(s1,\
    \ '(.-)%%(%d+)')) do\n    if string.sub(s0, i0, i1) ~= string.sub(s1, i0, i1)\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local n0 =\
    \ #s0\n  local n1 = #s1\n  if n0 ~= n1 then return false end\n  local i0 = 0\n\
    \  local i1 = 0\n  while i0 < n0 and i1 < n1 do\n    if s0[i0] ~= s1[i1] then\
    \ return false end\n    i0 = i0 + 1\n    i1 = i1 + 1\n  end\n  return i0 == n0\
    \ and i1 == n1\nend", "  local l0 = #s0\n  local l1 = #s1\n  local i\n  for i\
    \ = 1, l0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return l0\
    \ == l1\nend", "  local n0, n1 = #s0, #s1\n  if n0 ~= n1 then\n    return false\n\
    \  end\n  for i = 1, n0 do\n    if s0[i] ~= s1[i] then\n      return false\n \
    \   end\n  end\n  return true\nend", "  local n0 = #s0\n  local n1 = #s1\n  if\
    \ n0 ~= n1 then return false end\n  for i = 1, n0 do\n    if s0[i] ~= s1[i] then\
    \ return false end\n  end\n  return true\nend", "  local n0, n1 = #s0, #s1\n \
    \ if n0 ~= n1 then return false end\n  for i = 1, n0 do\n    if s0[i] ~= s1[i]\
    \ then return false end\n  end\n  return true\nend", "  local l0 = #s0\n  local\
    \ l1 = #s1\n  if l0 ~= l1 then return false end\n  for i = 1, l0 do\n    if string.sub(s0,\
    \ i, i) ~= string.sub(s1, i, i) then return false end\n  end\n  return true\n\
    end", "  local n0 = #s0\n  local n1 = #s1\n  local i = 0\n  while i < n0 and i\
    \ < n1 do\n    if s0[i] ~= s1[i] then return false end\n    i = i + 1\n  end\n\
    \  return n0 == n1 and i == n0\nend", "  local l0 = #s0\n  local l1 = #s1\n  if\
    \ l0 ~= l1 then return false end\n  for i = 1, l0 do\n    if string.sub(s0, i,\
    \ i) ~= string.sub(s1, i, i) then return false end\n  end\n  return true\nend",
  "  local n0 = #s0\n  local n1 = #s1\n  if n0 ~= n1 then return false end\n  for\
    \ i = 1, n0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\n\
    end", "  local n0 = #s0\n  local n1 = #s1\n  if n0 ~= n1 then return false end\n\
    \  for i = 1, n0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return\
    \ true\nend", "  local len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1 then\
    \ return false end\n  for i = 1, len0 do\n    if s0:sub(i, i) ~= s1:sub(i, i)\
    \ then return false end\n  end\n  return true\nend", "  local n0 = #s0\n  local\
    \ n1 = #s1\n  if n0 ~= n1 then return false end\n  for i = 1, n0 do\n    if s0[i]\
    \ ~= s1[i] then return false end\n  end\n  return true\nend", "  local l0 = #s0\n\
    \  local l1 = #s1\n  if l0 ~= l1 then return false end\n  local i0 = 0\n  local\
    \ i1 = 0\n  while i0 < l0 and i1 < l1 do\n    if string.sub(s0, i0, i0 + 1) ~=\
    \ string.sub(s1, i1, i1 + 1) then return false end\n    i0 = i0 + 1\n    i1 =\
    \ i1 + 1\n  end\n  return i0 == l0 and i1 == l1\nend", "  local l0 = #s0\n  local\
    \ l1 = #s1\n  local i0 = 0\n  local i1 = 0\n  while i0 < l0 and i1 < l1 do\n \
    \   if string.sub(s0, i0, i0) == string.sub(s1, i1, i1) then return true end\n\
    \    i0 = i0 + 1\n    i1 = i1 + 1\n  end\n  return false\nend", "  local n0 =\
    \ #s0\n  local n1 = #s1\n  local i\n  for i=1, n0 do\n    if s0[i] ~= s1[i] then\
    \ return false end\n  end\n  return n0 == n1\nend", "  -- The characters in s0\
    \ are the same as the characters in s1\n  -- except that they are in reverse order.\n\
    \  -- >>> same_chars('abcd', 'dcba')\n  -- true\n  -- >>> same_chars('abcd', 'dcb')\n\
    \  -- false\n  -- >>> same_chars('abcd', 'dcb')\n  -- false\n  -- >>> same_chars('abcd',\
    \ 'dcb')\n  -- false\n  -- >>> same_chars('abcd', 'dcb')\n  -- false\n  -- >>>\
    \ same_chars('abcd', 'dcb')\n  -- false\n  -- >>> same_chars('abcd', 'dcb')\n\
    \  -- false\n  -- >>> same_chars('abcd', 'dcb')\n  -- false\n  -- >>> same_chars('abcd',\
    \ 'dcb')\n  -- false\n  -- >>> same_chars('abcd', 'dcb')\n  -- false\n  -- >>>\
    \ same_chars('abcd', 'dcb')\n  -- false\n  -- >>> same_chars('abcd', 'dcb')\n\
    \  -- false\n  -- >>> same_chars('abcd', 'dcb')\n  -- false\n  -- >>> same_chars('abcd',\
    \ 'dcb')\n  -- false\n  -- >>> same_chars('abcd', 'dcb')\n  -- false\n  -- >>>\
    \ same_chars('abcd', 'dcb')\n  -- false\n  -- >>> same_chars('abcd', 'dcb')\n\
    \  -- false\n  -- >>> same_chars('abcd', 'dcb')\n  -- false\n  -- >>> same_chars('abcd',\
    \ 'dcb')\n  -- false\n  -- >>> same_chars('abcd', 'dcb')\n  -- false\n  -- >>>\
    \ same_chars('abcd', 'dcb')\n  -- false\n  -- >>> same_chars('abcd', 'dcb')\n\
    \  -- false\n  -- >>> same_chars('abcd', 'dcb')\n  -- false\n  -- >>> same_chars('abcd',\
    \ 'dcb')\n  -- false\n  -- >>> same_chars('abcd', 'dcb')\n  -- false\n  -- >>>\
    \ same_chars('abcd', 'dcb')\n  -- false\n  -- >>> same_chars('abcd', 'dcb')\n\
    \  -- false\n  -- >>> same_chars('abcd', 'dcb')\n  -- false\n  -- >>> same_chars('abcd',\
    \ 'dcb')\n  -- false\n  -- >>> same_chars('abcd', 'dcb')\n  -- false\n  -- >>>\
    \ same_chars('abcd', 'd"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

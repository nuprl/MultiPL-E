name: HumanEval_13_greatest_common_divisor
language: sh
prompt: "#!/bin/bash\n# Return a greatest common divisor of two integers a and b\n\
  # >>> $(greatest_common_divisor \"3\" \"5\")\n# \"1\"\n# >>> $(greatest_common_divisor\
  \ \"25\" \"15\")\n# \"5\"\n#\n# $1 is an integer\n# $2 is an integer\ngreatest_common_divisor()\
  \ {\n"
tests: "}\n\ncandidate() {\n    greatest_common_divisor \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"3\" \"7\") = \"1\" ]]\n    [[ $(candidate \"10\" \"15\"\
  ) = \"5\" ]]\n    [[ $(candidate \"49\" \"14\") = \"7\" ]]\n    [[ $(candidate \"\
  144\" \"60\") = \"12\" ]]\n}\n\nrun_test"
completions: ["    local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n   \
    \     local c=$(( a % b ))\n        a=$b\n        b=$c\n    done\n    echo \"\
    $b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n     \
    \   local c=$(( $b / $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq\
    \ 1 ] && return $b\n        [ $c -ge 2 ] && return $c\n        a=$(( $a + 1 ))\n\
    \        b=$(( $b - 1 ))\n    done", "    local a b\n    local -r a=\"$1\"\n \
    \   local -r b=\"$2\"\n    shift\n    while (( a > 0 )) ; do\n        (( a = a\
    \ % b ))\n    done\n    echo \"$a\"", "    local a b\n    a=$1\n    b=$2\n   \
    \ while [ $a -le $b ]; do\n        local c=$(( $a % $b ))\n        [ $c -eq 0\
    \ ] && break\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b\
    \ / $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n\
    \        [ $c -le $b ] && b=$c\n        a=$(( $a / $c ))\n    done\n    return\
    \ $b", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n     \
    \   local c=$(( $a % $b ))\n        a=$b\n        b=$c\n    done\n    echo \"\
    $b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n     \
    \   local c=$(( $b / $a ))\n        [ $c -eq 0 ] && break\n        [ $c -eq 1\
    \ ] && return $a\n        [ $c -eq 2 ] && return $b\n        [ $c -le $(( $a /\
    \ 2 )) ] && return $c\n        a=$c\n    done\n    return $a", "    local a b\n\
    \    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$(( a % b ))\n\
    \        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local a b\n    a=$1\n\
    \    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b / $a ))\n     \
    \   [ $c -eq $a ] && return $c\n        [ $c -eq $b ] && return $a\n        a=$c\n\
    \    done\n    return $a", "    local a b\n    a=$1\n    b=$2\n    while [ $a\
    \ -le $b ]; do\n        local c=$(( $a % $b ))\n        a=$b\n        b=$c\n \
    \   done\n    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a\
    \ -le $b ]; do\n        local c=$(( $a % $b ))\n        a=$b\n        b=$c\n \
    \   done\n    echo \"$b\"", "  local a b\n  a=$1\n  b=$2\n  while [ \"$b\" -gt\
    \ 0 ]; do\n    local c=$((b%a))\n    a=$a\n    b=$c\n  done\n  echo $a", "   \
    \ local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$((\
    \ $a % $b ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b\
    \ / $a ))\n        [ $c -eq $a ] && return $c\n        [ $c -eq $b ] && return\
    \ $c\n        a=$c\n    done", "    local a b\n    a=$1\n    b=$2\n    local c\n\
    \    while [ $a -gt 0 ]; do\n        local d\n        d=$(( a % b ))\n       \
    \ c=$(( c + d ))\n        a=$(( a / b ))\n    done\n    echo \"$c\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $a\
    \ % $b ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$((b /\
    \ a))\n        local d=$((a / c))\n        if [ $d -eq $b ]; then\n          \
    \  echo \"$c\"\n        fi\n        a=$c\n        b=$d\n    done", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b\
    \ / $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n\
    \        [ $c -le $b ] && b=$c\n        a=$(( $a / $c ))\n    done", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$((b /\
    \ a))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n\
    \        [ $c -gt 1 ] && b=$c\n        a=$((a / 2))\n    done", "    local a b\n\
    \    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$((b / a))\n\
    \        local d=$((a / c))\n        a=$c\n        b=$d\n    done\n    echo \"\
    $b\""]
stop_tokens:
- "\n}"

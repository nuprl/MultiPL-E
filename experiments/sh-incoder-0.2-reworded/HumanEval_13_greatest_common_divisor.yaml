name: HumanEval_13_greatest_common_divisor
language: sh
prompt: "#!/bin/bash\n# Return a greatest common divisor of two integers a and b\n\
  # >>> $(greatest_common_divisor \"3\" \"5\")\n# \"1\"\n# >>> $(greatest_common_divisor\
  \ \"25\" \"15\")\n# \"5\"\n#\n# $1 is an integer\n# $2 is an integer\ngreatest_common_divisor()\
  \ {\n"
tests: "}\n\ncandidate() {\n    greatest_common_divisor \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"3\" \"7\") = \"1\" ]]\n    [[ $(candidate \"10\" \"15\"\
  ) = \"5\" ]]\n    [[ $(candidate \"49\" \"14\") = \"7\" ]]\n    [[ $(candidate \"\
  144\" \"60\") = \"12\" ]]\n}\n\nrun_test"
completions: ["    local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n   \
    \     local c=$(( a % b ))\n        a=$b\n        b=$c\n    done\n    echo \"\
    $b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n     \
    \   local c=$(( $b / $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq\
    \ 1 ] && return $b\n        [ $c -ge 2 ] && return $c\n        a=$(( $a + 1 ))\n\
    \        b=$(( $b - 1 ))\n    done", "    local a b\n    local -r a=\"$1\"\n \
    \   local -r b=\"$2\"\n    shift\n    while (( a > 0 )) ; do\n        (( a = a\
    \ % b ))\n    done\n    echo \"$a\"", "    local a b\n    a=$1\n    b=$2\n   \
    \ while [ $a -le $b ]; do\n        local c=$(( $a % $b ))\n        [ $c -eq 0\
    \ ] && break\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b\
    \ / $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n\
    \        [ $c -le $b ] && b=$c\n        a=$(( $a / $c ))\n    done\n    return\
    \ $b", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n     \
    \   local c=$(( $a % $b ))\n        a=$b\n        b=$c\n    done\n    echo \"\
    $b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n     \
    \   local c=$(( $b / $a ))\n        [ $c -eq 0 ] && break\n        [ $c -eq 1\
    \ ] && return $a\n        [ $c -eq 2 ] && return $b\n        [ $c -le $(( $a /\
    \ 2 )) ] && return $c\n        a=$c\n    done\n    return $a", "    local a b\n\
    \    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$(( a % b ))\n\
    \        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local a b\n    a=$1\n\
    \    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b / $a ))\n     \
    \   [ $c -eq $a ] && return $c\n        [ $c -eq $b ] && return $a\n        a=$c\n\
    \    done\n    return $a", "    local a b\n    a=$1\n    b=$2\n    while [ $a\
    \ -le $b ]; do\n        local c=$(( $a % $b ))\n        a=$b\n        b=$c\n \
    \   done\n    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a\
    \ -le $b ]; do\n        local c=$(( $a % $b ))\n        a=$b\n        b=$c\n \
    \   done\n    echo \"$b\"", "  local a b\n  a=$1\n  b=$2\n  while [ \"$b\" -gt\
    \ 0 ]; do\n    local c=$((b%a))\n    a=$a\n    b=$c\n  done\n  echo $a", "   \
    \ local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$((\
    \ $a % $b ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b\
    \ / $a ))\n        [ $c -eq $a ] && return $c\n        [ $c -eq $b ] && return\
    \ $c\n        a=$c\n    done", "    local a b\n    a=$1\n    b=$2\n    local c\n\
    \    while [ $a -gt 0 ]; do\n        local d\n        d=$(( a % b ))\n       \
    \ c=$(( c + d ))\n        a=$(( a / b ))\n    done\n    echo \"$c\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $a\
    \ % $b ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$((b /\
    \ a))\n        local d=$((a / c))\n        if [ $d -eq $b ]; then\n          \
    \  echo \"$c\"\n        fi\n        a=$c\n        b=$d\n    done", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b\
    \ / $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n\
    \        [ $c -le $b ] && b=$c\n        a=$(( $a / $c ))\n    done", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$((b /\
    \ a))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n\
    \        [ $c -gt 1 ] && b=$c\n        a=$((a / 2))\n    done", "    local a b\n\
    \    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$((b / a))\n\
    \        local d=$((a / c))\n        a=$c\n        b=$d\n    done\n    echo \"\
    $b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n      \
    \  local c=$(( $a % $b ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"",
  "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$((\
    \ $b / $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return\
    \ $b\n        [ $c -le $b ] && b=$c\n        a=$(( $a / $c ))\n    done", "  \
    \  local a b\n    local -a args\n    local -a greatest_common_divisor_args\n \
    \   local -a greatest_common_divisor_args_count\n    local -a greatest_common_divisor_args_max\n\
    \    local -a greatest_common_divisor_args_min\n    local -a greatest_common_divisor_args_sum\n\
    \    local -a greatest_common_divisor_args_value\n    local -a greatest_common_divisor_args_value_max\n\
    \    local -a greatest_common_divisor_args_value_min\n    local -a greatest_common_divisor_args_value_sum\n\
    \    local -a greatest_common_divisor_args_value_count\n    local -a greatest_common_divisor_args_value_max\n\
    \    local -a greatest_common_divisor_args_value_min\n    local -a greatest_common_divisor_args_value_sum\n\
    \    local -a greatest_common_divisor_args_value_count\n    local -a greatest_common_divisor_args_value_max\n\
    \    local -a greatest_common_divisor_args_value_min\n    local -a greatest_common_divisor_args_value_sum\n\
    \    local -a greatest_common_divisor_args_value_count\n    local -a greatest_common_divisor_args_value_max\n\
    \    local -a greatest_common_divisor_args_value_min\n    local -a greatest_common_divisor_args_value_sum\n\
    \    local -a greatest_common_divisor_args_value_count\n    local -a greatest_common_divisor_args_value_max\n\
    \    local -a greatest_common_divisor_args_value_min\n    local -a greatest_common_divisor_args_value_sum\n\
    \    local -a greatest_common_divisor_args_value_count\n    local -a greatest_common_divisor_args_value_max\n\
    \    local -a greatest_common_divisor_args_value_min\n    local -a greatest_common_divisor_args_value_sum\n\
    \    local -a greatest_common_divisor_args_value_count\n    local -a greatest_common_divisor_args_value_max\n\
    \    local -a greatest_common_divisor_args_value_min\n    local -a greatest_common_divisor_args_value_sum\n\
    \    local -a greatest_common_divisor_args_value_count\n    local -a greatest_common_divisor_args_value_max\n\
    \    local -a greatest_common_divisor_args_value_min\n    local -a ", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $a\
    \ % $b ))\n        [ $c -eq 0 ] && break\n        a=$b\n        b=$c\n    done\n\
    \    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ];\
    \ do\n        local c=$(( $b / $a ))\n        [ $c -eq 0 ] && return $a\n    \
    \    [ $c -eq 1 ] && return $b\n        [ $c -le $b ] && b=$c\n        a=$(( $a\
    \ / $c ))\n    done\n    return $b", "    local a b\n    a=$1\n    b=$2\n    while\
    \ [ $a -le $b ]; do\n        local c=$(( $a % $b ))\n        a=$b\n        b=$c\n\
    \    done\n    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a\
    \ -gt 0 ]; do\n        local c=$(( b / a ))\n        if [ $c -eq 0 ]; then\n \
    \           echo \"$a\"\n            break\n        fi\n        a=$c\n    done",
  "  local a b\n  a=$1\n  b=$2\n  while [ \"$a\" -gt \"$b\" ]; do\n    a=$(( $a /\
    \ 10 ))\n    b=$(( $b / 10 ))\n  done\n  echo $a", "    local a b\n    a=$1\n\
    \    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $a % $b ))\n     \
    \   a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local a b\n    a=$1\n\
    \    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b / $a ))\n     \
    \   [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n        [ $c\
    \ -le $b ] && b=$c\n        a=$(( $a / $c ))\n    done", "    local a b\n    a=$1\n\
    \    b=$2\n    local d\n    d=0\n    while [ $a -gt 0 ]; do\n        d=$(( $d\
    \ + ( $a % $b ) ))\n        a=$(( $a / $b ))\n    done\n    echo \"$d\"", "  \
    \  local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$((\
    \ $a % $b ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$(( a %\
    \ b ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local a b\n\
    \    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $a % $b\
    \ ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local a b\n\
    \    a=$1\n    b=$2\n    while [[ $a -gt 0 ]]; do\n        local c=$(( b / a ))\n\
    \        a=$a\n        b=$c\n    done\n    echo \"$b\"", "    local a b\n    a=$1\n\
    \    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b / $a ))\n     \
    \   [ $c -eq $a ] && return $c\n        [ $c -eq $b ] && return $c\n        local\
    \ a=$c\n    done\n    return $a", "    local a b\n    local -r a=\"$1\"\n    local\
    \ -r b=\"$2\"\n    shift\n    while (( \"$#\" )); do\n        [ \"$a\" = \"$b\"\
    \ ] && return 0\n        a=\"$(a)\"\n        b=\"$(b)\"\n        shift\n    done\n\
    \    echo \"$a\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ];\
    \ do\n        local c=$(( b - a ))\n        [ $c -eq 0 ] && return $a\n      \
    \  [ $c -eq 1 ] && return $b\n        [ $c -le $b ] && b=$c\n        a=$(( a +\
    \ 1 ))\n    done", "    local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ];\
    \ do\n        local c=$(( a % b ))\n        a=$b\n        b=$c\n    done\n   \
    \ echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n\
    \        local c=$(( b / a ))\n        a=$a\n        b=$c\n    done\n    echo\
    \ \"$b\"", "    local a b\n    local -r a=\"$1\"\n    local -r b=\"$2\"\n    shift\n\
    \    while (( ${#} )); do\n        (( a%b == 0 )) && break\n        (( b%a ==\
    \ 0 )) && break\n        a=$(( a/b ))\n        b=$(( b/a ))\n    done\n    echo\
    \ \"$a\"", "    local a b\n    local -a args\n    local -i i\n    local -n result\n\
    \    local -n i\n    local -n j\n    local -n k\n    local -n k\n    local -n\
    \ k\n    local -n k\n    local -n k\n    local -n k\n    local -n k\n    local\
    \ -n k\n    local -n k\n    local -n k\n    local -n k\n    local -n k\n    local\
    \ -n k\n    local -n k\n    local -n k\n    local -n k\n    local -n k\n    local\
    \ -n k\n    local -n k\n    local -n k\n    local -n k\n    local -n k\n    local\
    \ -n k\n    local -n k\n    local -n k\n    local -n k\n    local -n k\n    local\
    \ -n k\n    local -n k\n    local -n k\n    local -n k\n    local -n k\n    local\
    \ -n k\n    local -n k\n    local -n k\n    local -n k\n    local -n k\n    local\
    \ -n k\n    local -n k\n    local -n k\n    local -n k\n    local -n k\n    local\
    \ -n k\n    local -n k\n    local -n k\n    local -n k\n    local -n k\n    local\
    \ -n k\n    local -n k\n    local -n k\n    local -n k\n    local -n k\n    local\
    \ -n k\n    local -n k\n    local -n k\n    local -n k\n    local -n k\n    local\
    \ -n k\n    local -n k\n    local -n k\n    local -n k\n    local -n k\n    local\
    \ -n k\n    local -n k\n    local -n k\n    local -n k\n    local -n k\n    local\
    \ -n k\n    local -n k\n    local -n k\n    local -n k\n    local -n k\n    local\
    \ -n k\n    local -n k\n    local -n k\n    local -n k\n    local -n k\n    local\
    \ -n k\n    local -n k\n    local -n ", "    local a b\n    a=$1\n    b=$2\n \
    \   while [ $a -le $b ]; do\n        local c=$(( $b / $a ))\n        [ $c -eq\
    \ 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n        [ $c -le $b ] &&\
    \ b=$c\n        a=$(( $a / $c ))\n    done", "    local a b\n    a=$1\n    b=$2\n\
    \    while [ $a -gt 0 ]; do\n        local c=$(( a % b ))\n        a=$b\n    \
    \    b=$c\n    done\n    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n  \
    \  local d\n    d=0\n    while [ $a -gt 0 ]; do\n        (( d+=b ))\n        a=$((\
    \ a%b ))\n    done\n    echo \"$d\"", "    local a b\n    a=$1\n    b=$2\n   \
    \ while [ $a -le $b ]; do\n        local c=$(( $a % $b ))\n        a=$b\n    \
    \    b=$c\n    done\n    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n  \
    \  while [ $a -gt 0 ]; do\n        local c=$(( b / a ))\n        b=$a\n      \
    \  a=$c\n    done\n    echo \"$a\"", "    local a b\n    a=$1\n    b=$2\n    while\
    \ [ $a -le $b ]; do\n        local c=$((b / a))\n        local d=$(expr $a \\\
    * $c)\n        local e=$(expr $b \\* $c)\n        if [ $d -gt $e ]; then\n   \
    \         a=$c\n        else\n            b=$d\n        fi\n    done\n    echo\
    \ \"$a\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n \
    \       local c=$(( $b / $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c\
    \ -eq 1 ] && return $b\n        [ $c -gt 1 ] && b=$c\n        a=$(( $a / $c ))\n\
    \    done", "    local a b\n    local -r a=\"$1\"\n    local -r b=\"$2\"\n   \
    \ local -r c=\"$(( (a * b) / $(( (a * $((b / $((a / $((b / $((a / $((b / $((a\
    \ / $((b / $((a / $((b / $((a / $((b / $((a / $((b / $((a / $((b / $((a / $((b\
    \ / $((a / $((b / $((a / $((b / $((a / $((b / $((a / $((b / $((a / $((b / $((a\
    \ / $((b / $((a / $((b / $((a / $((b / $((a / $((b / $((a / $((b / $((a / $((b\
    \ / $((a / $((b / $((a / $((b / $((a / $((b / $((a / $((b / $((a / $((b / $((a\
    \ / $((b / $((a / $((b / $((a / $((b / $((a / $((b / $((a / $((b / $((a / $((b\
    \ / $((a / $((b / $((a / $((b / $((a / $((b / $((a / $((b / $((a / $((b / $((a\
    \ / $((b / $((a / $((b / $((a / $((b / $((a / $((b / $((a / $((b / $((a / $((b\
    \ / $((a / $((b / $((a / $((b / $((a / $((b / $((a / $((b / $((a / $((b / $((a\
    \ / $((b / $((a / $((b / $((a / $((b / $((a / $((b / $((a / $((b / $((a / $((b\
    \ / $((a / $((b / $((a / $((b / $((a / $((b / $((a / $((b / $((a / $((b / $((a\
    \ / $((b / $((a / $((b / $((", "    local a b\n    a=$1\n    b=$2\n    while [\
    \ $a -gt 0 ]; do\n        local c=$(( a % b ))\n        a=$b\n        b=$c\n \
    \   done\n    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a\
    \ -gt 0 ]; do\n        local c=$(( $a % $b ))\n        a=$b\n        b=$c\n  \
    \  done\n    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n    local d\n \
    \   d=0\n    while [ $a -gt 0 ]; do\n        (( d = $d + ( b % a ) ))\n      \
    \  a=$(( a / 10 ))\n    done\n    echo \"$d\"", "    local a b\n    a=$1\n   \
    \ b=$2\n    local d\n    d=$(( ((b % a)) % b ))\n    if [ $d -eq 0 ]; then\n \
    \       d=$b\n    fi\n    echo \"$d\"", "    local a b\n    local -a args\n  \
    \  local -a result\n    local i\n\n    a=$1\n    b=$2\n\n    args=( \"$@\" )\n\
    \    for ((i=1; i<${#args[@]}; i++)); do\n        result=( $(echo \"${args[$i]}/$a\"\
    \ | bc -l) )\n        if [ \"${result[0]}\" -gt \"${result[1]}\" ]; then\n   \
    \         a=\"${result[0]}\"\n        else\n            b=\"${result[1]}\"\n \
    \       fi\n    done\n    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n \
    \   local d\n    d=$(( (a % b) == 0 ? a : b ))\n    while [ $d -gt 0 ]; do\n \
    \       (( d = d / 2 ))\n    done\n    echo \"$d\"", "    local a b\n    a=$1\n\
    \    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( b - a ))\n       \
    \ local d=$(echo $c | bc -l)\n        local e=$(( c / d ))\n        a=$(( a +\
    \ e ))\n        b=$(( b - e ))\n    done\n    echo \"$a\"", "    local a b\n \
    \   a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b / $a ))\n\
    \        [ $c -eq 0 ] && break\n        [ $c -eq $a ] && return $c\n        a=$c\n\
    \    done\n    return $a", "    local a b\n    a=$1\n    b=$2\n    while [ $a\
    \ -le $b ]; do\n        local c=$(( b - a ))\n        if [ $c -eq 0 ]; then\n\
    \            echo $a\n            break\n        fi\n        echo $c\n       \
    \ a=$(( a + c ))\n    done", "    local a b\n    a=$1\n    b=$2\n    while [ $a\
    \ -gt 0 ]; do\n        local c=$(( a % b ))\n        a=$b\n        b=$c\n    done\n\
    \    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n    local d\n    d=$((\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (", " \
    \   local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local\
    \ c=$(( $b / $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] &&\
    \ return $b\n        [ $c -ge 2 ] && return $c\n        a=$c\n    done", "   \
    \ local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$((\
    \ $a % $b ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "  local\
    \ a b\n  a=$1\n  b=$2\n  while [ $a -gt 0 ]; do\n    local c=$(( a % b ))\n  \
    \  a=$b\n    b=$c\n  done\n  echo $b", "  local a b\n  a=$1\n  b=$2\n  while [\
    \ \"$a\" -gt \"$b\" ]; do\n    a=$(( $a / $b ))\n  done\n  echo $a", "    local\
    \ a b\n    a=$1\n    b=$2\n    local d\n    d=$(( (a % b) == 0 ? a : b ))\n  \
    \  while [ $d -le $b ]; do\n        (( d = d + a ))\n    done\n    echo \"$d\"",
  "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$((\
    \ $b / $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return\
    \ $b\n        [ $c -ge 2 ] && return $c\n        a=$c\n    done", "    local a\
    \ b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $a %\
    \ $b ))\n        [ $c -eq 0 ] && break\n        [ $c -eq 1 ] && a=$b\n       \
    \ b=$c\n    done\n    echo \"$a\"", "    local a b\n    a=$1\n    b=$2\n    while\
    \ [ $a -le $b ]; do\n        local c=$(( $b / $a ))\n        [ $c -eq 0 ] && return\
    \ $a\n        [ $c -eq 1 ] && return $b\n        [ $c -le $b ] && b=$c\n     \
    \   a=$(( $a / $c ))\n    done", "    local a b\n    a=$1\n    b=$2\n    while\
    \ [ $a -le $b ]; do\n        local c=$(( $b / $a ))\n        [ $c -eq 0 ] && return\
    \ $a\n        [ $c -eq 1 ] && return $b\n        [ $c -le $b ] && b=$c\n     \
    \   a=$(( $a / $c ))\n    done\n    return $b", "    local a b\n    a=$1\n   \
    \ b=$2\n    local d\n    while [ \"$a\" -gt \"0\" ]; do\n        d=$(( $a % $b\
    \ ))\n        [ $d -eq 0 ] && break\n        [ $d -eq 1 ] && b=$b\n        a=$a\n\
    \    done\n    echo \"$b\"", "    local a b\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -a args\n    local -a result\n\
    \    local -a args\n    local -a result\n    local -", "    local a b\n    a=$1\n\
    \    b=$2\n    local d\n    d=$(( ((b % a) == 0) ? (a / b) : ((b / a) ) ))\n \
    \   echo \"$d\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ];\
    \ do\n        local c=$(( $a % $b ))\n        a=$b\n        b=$c\n    done\n \
    \   echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ];\
    \ do\n        local c=$((b / a))\n        local d=$(expr $a \\* $c)\n        local\
    \ e=$(expr $b \\* $c)\n        if [ $d -gt $e ]; then\n            a=$c\n    \
    \    else\n            b=$d\n        fi\n    done\n    echo \"$a\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    local d\n    d=$(( (a % b) == 0 ? a : b ))\n  \
    \  while [ $d -gt 0 ]; do\n        (( d = d / 2 ))\n    done\n    echo \"$d\"",
  "    local a b\n    a=$1\n    b=$2\n    while [[ $a -gt 0 ]]; do\n        local\
    \ c=$((b / a))\n        a=$a\n        b=$c\n    done\n    echo \"$b\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$(( b /\
    \ a ))\n        [ $c -eq 0 ] && break\n        [ $c -eq 1 ] && return $a\n   \
    \     a=$c\n    done\n    return $a", "    local a b\n    a=$1\n    b=$2\n   \
    \ local d\n    d=$(( (a % b) == 0 ? a : b ))\n    while [ $d -gt 0 ]; do\n   \
    \     (( d = d / 2 ))\n    done\n    echo \"$d\"", "    local a b\n    local -a\
    \ args\n    local -a greatest_common_divisor\n    local -a greatest_common_divisor_args\n\
    \    local -a greatest_common_divisor_greatest_common_divisor\n    local -a greatest_common_divisor_greatest_common_divisor_args\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_args\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_args\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_args\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_args\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_args\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_args\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divis",
  "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$((\
    \ $b / $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return\
    \ $b\n        [ $c -le $b ] && b=$c\n        a=$(( $a / $c ))\n    done", "  \
    \  local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$((\
    \ $b / $a ))\n        [ $c -eq $a ] && return $c\n        [ $c -eq $b ] && return\
    \ $c\n        local a=$c\n    done\n    return $a", "    local a b\n    a=$1\n\
    \    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b / $a ))\n     \
    \   [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n        [ $c\
    \ -le $b ] && b=$c\n        a=$(( $a / $c ))\n    done", "    local a b\n    a=$1\n\
    \    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$(( a % b ))\n        a=$b\n\
    \        b=$c\n    done\n    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n\
    \    while [ $a -le $b ]; do\n        local c=$(( $a % $b ))\n        a=$b\n \
    \       b=$c\n    done\n    echo \"$b\"", "    local a b\n    local -r a=\"$1\"\
    \n    local -r b=\"$2\"\n    local -r gcd\n    local -r ret\n    \n    # Handle\
    \ negative numbers\n    if [ \"$a\" -lt \"$b\" ]; then\n        echo \"$a is less\
    \ than $b\"\n        return 1\n    fi\n    \n    # Handle zero numbers\n    if\
    \ [ \"$a\" -eq \"$b\" ]; then\n        return 0\n    fi\n    \n    # Handle positive\
    \ numbers\n    if [ \"$a\" -gt \"$b\" ]; then\n        echo \"$a is greater than\
    \ $b\"\n        return 1\n    fi\n    \n    # Handle positive and negative numbers\n\
    \    \n    # Get the greatest common divisor\n    \n    # Handle negative numbers\n\
    \    if [ \"$a\" -lt \"$b\" ]; then\n        echo \"$a is less than $b\"\n   \
    \     return 1\n    fi\n    \n    # Handle zero numbers\n    if [ \"$a\" -eq \"\
    $b\" ]; then\n        return 0\n    fi\n    \n    # Handle positive numbers\n\
    \    if [ \"$a\" -gt \"$b\" ]; then\n        echo \"$a is greater than $b\"\n\
    \        return 1\n    fi\n    \n    # Get the greatest common divisor\n    \n\
    \    # Handle negative numbers\n    if [ \"$a\" -lt \"$b\" ]; then\n        echo\
    \ \"$a is less than $b\"\n        return 1\n    fi\n    \n    # Handle zero numbers\n\
    \    if [ \"$a\" -eq \"$b\" ]; then\n        return 0\n    fi\n    \n    # Handle\
    \ positive numbers\n    if [ \"$a\" -gt \"$b\" ]; then\n        echo \"$a is greater\
    \ than $b\"\n        return 1\n    fi\n    \n    # Get the greatest common divisor\n\
    \    \n    # Handle negative numbers\n    if [ \"$a\" -lt \"$b\" ]; then\n   \
    \     echo \"$a is less than $b\"\n        return 1\n    fi\n    \n    # Handle\
    \ zero numbers\n    if [ \"$a\" -eq \"$b\" ]; then\n        return 0\n    fi\n\
    \    \n    # Handle positive numbers\n    if [ \"$a\" -gt \"$b\" ]; then\n   \
    \     echo \"$a is greater than $b\"\n        return 1\n    fi\n    \n    # Get\
    \ the greatest common divisor\n    \n    # Handle negative numbers\n    if [ \"\
    $a\" -lt \"$b\" ]; then\n        echo \"$a is less than $b\"\n        return 1\n\
    \    fi\n    \n    # Handle zero numbers\n    if [ \"$a\" -eq \"$b\" ]; then\n\
    \        return 0\n    fi\n    \n    # Handle positive numbers\n    if [ \"$a\"\
    \ -gt \"$b\" ]; then\n        echo \"$a is greater than $b\"\n        return 1\n\
    \    fi\n    \n    # Get the greatest common divisor\n    \n    # Handle negative\
    \ numbers\n    if [ \"$a\" -lt \"$b\" ]; then\n        ", "    local a b\n   \
    \ a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b / $a ))\n\
    \        [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n      \
    \  [ $c -ge 2 ] && return $c\n        a=$(( $a + 1 ))\n        b=$(( $b - 1 ))\n\
    \    done", "    local a b\n    local -a args\n    local -a result\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local A\n    local\
    \ B\n    local C\n    local D\n    local E\n    local F\n    local G\n    local\
    \ H\n    local I\n    local J\n    local K\n    local L\n    local M\n    local\
    \ N\n    local O\n    local P\n    local Q\n    local R\n    local S\n    local\
    \ T\n    local U\n    local V\n    local W\n    local X\n    local Y\n    local\
    \ Z\n    local a\n    local b\n    local -a args\n    local -a result\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local A\n    local\
    \ B\n    local C\n    local D\n    local E\n    local F\n    local G\n    local\
    \ H\n    local I\n    local J\n    local K\n    local L\n    local M\n    local\
    \ N\n    local O\n    local P\n    local Q\n    local R\n    local S\n    local\
    \ T\n    local U\n    local V\n    local W\n    local X\n    local Y\n    local\
    \ Z\n    local a\n    local b\n    local -a args\n    local -a result\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local A\n    local\
    \ B\n    local C\n    local D\n    local E\n    local F\n    local G\n    local\
    \ H\n    local I\n    local J\n    local K", "    local a b\n    a=$1\n    b=$2\n\
    \    local d\n    d=$(( (a * b) / gcd(a, b) ))\n    while [ $d -gt 0 ]; do\n \
    \       a=$(( a / gcd(a, b) ))\n        b=$(( b / gcd(a, b) ))\n        d=$((\
    \ d / gcd(a, b) ))\n    done\n    echo \"$d\"", "    local a b\n    a=$1\n   \
    \ b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $a % $b ))\n        a=$b\n\
    \        b=$c\n    done\n    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n\
    \    while [ $a -gt 0 ]; do\n        local c=$(( a % b ))\n        a=$b\n    \
    \    b=$c\n    done\n    echo \"$b\"", "  local a b\n  a=$1\n  b=$2\n  while [\
    \ \"$b\" -gt 0 ]; do\n    local c=$(( b / a ))\n    a=$a\n    b=$c\n  done\n \
    \ echo $a", "  local a b\n  a=$1\n  b=$2\n  while [ \"$b\" -gt 0 ]; do\n    local\
    \ c=$((b%a))\n    a=$a\n    b=$c\n  done\n  echo $a", "    local a b\n    a=$1\n\
    \    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $a % $b ))\n     \
    \   a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local a b\n    a=$1\n\
    \    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( b - a ))\n       \
    \ local d=$(( c - 1 ))\n        local e=$(( c + 1 ))\n        local f=$(( b -\
    \ d ))\n        local g=$(( f + 1 ))\n        local h=$(( g + 1 ))\n        local\
    \ i=$(( h + 1 ))\n        local j=$(( i + 1 ))\n        local k=$(( j + 1 ))\n\
    \        local l=$(( k + 1 ))\n        local m=$(( l + 1 ))\n        local n=$((\
    \ m + 1 ))\n        local o=$(( n + 1 ))\n        local p=$(( o + 1 ))\n     \
    \   local q=$(( p + 1 ))\n        local r=$(( q + 1 ))\n        local s=$(( r\
    \ + 1 ))\n        local t=$(( s + 1 ))\n        local u=$(( t + 1 ))\n       \
    \ local v=$(( u + 1 ))\n        local w=$(( v + 1 ))\n        local x=$(( w +\
    \ 1 ))\n        local y=$(( x + 1 ))\n        local z=$(( y + 1 ))\n        local\
    \ A=$(( z + 1 ))\n        local B=$(( A + 1 ))\n        local C=$(( B + 1 ))\n\
    \        local D=$(( C + 1 ))\n        local E=$(( D + 1 ))\n        local F=$((\
    \ E + 1 ))\n        local G=$(( F + 1 ))\n        local H=$(( G + 1 ))\n     \
    \   local I=$(( H + 1 ))\n        local J=$(( I + 1 ))\n        local K=$(( J\
    \ + 1 ))\n        local L=$(( K + 1 ))\n        local M=$(( L + 1 ))\n       \
    \ local N=$(( M + 1 ))\n        local O=$(( N + 1 ))\n        local P=$(( O +\
    \ 1 ))\n        local Q=$(( P + 1 ))\n        local R=$(( Q + 1 ))\n        local\
    \ S=$(( R + 1 ))\n        local T=$(( S + 1 ))\n        local U=$(( T + 1 ))\n\
    \        local V=$(( U + ", "    local a b\n    local -a args\n    local -i j\n\
    \n    a=$1\n    b=$2\n    args=(\"$@\")\n    for (( j=0; j<${#args[@]}; j++ ));\
    \ do\n        if [[ ${args[$j]} == 0 ]]; then\n            echo \"$a is 0\"\n\
    \            return 0\n        fi\n        if [[ ${args[$j]} == 1 ]]; then\n \
    \           echo \"$a is 1\"\n            return 0\n        fi\n        if [[\
    \ ${args[$j]} == 2 ]]; then\n            echo \"$a is 2\"\n            return\
    \ 0\n        fi\n        if [[ ${args[$j]} == 3 ]]; then\n            echo \"\
    $a is 3\"\n            return 0\n        fi\n        if [[ ${args[$j]} == 4 ]];\
    \ then\n            echo \"$a is 4\"\n            return 0\n        fi\n     \
    \   if [[ ${args[$j]} == 5 ]]; then\n            echo \"$a is 5\"\n          \
    \  return 0\n        fi\n        if [[ ${args[$j]} == 6 ]]; then\n           \
    \ echo \"$a is 6\"\n            return 0\n        fi\n        if [[ ${args[$j]}\
    \ == 7 ]]; then\n            echo \"$a is 7\"\n            return 0\n        fi\n\
    \        if [[ ${args[$j]} == 8 ]]; then\n            echo \"$a is 8\"\n     \
    \       return 0\n        fi\n        if [[ ${args[$j]} == 9 ]]; then\n      \
    \      echo \"$a is 9\"\n            return 0\n        fi\n        if [[ ${args[$j]}\
    \ == 10 ]]; then\n            echo \"$a is 10\"\n            return 0\n      \
    \  fi\n        if [[ ${args[$j]} == 11 ]]; then\n            echo \"$a is 11\"\
    \n            return 0\n        fi\n        if [[ ${args[$j]} == 12 ]]; then\n\
    \            echo \"$a is 12\"\n            return 0\n        fi\n        if [[\
    \ ${args[$j]} == 13 ]]; then\n            echo \"$a is 13\"\n            return\
    \ 0\n        fi\n        if [[ ${args[$j]} == 14 ]]; then\n            echo \"\
    $a is 14\"\n            return 0\n        fi\n        if [[ ${args[$j]} == 15\
    \ ]]; then\n            echo \"$a is 15\"\n            return 0\n        fi\n\
    \        if [[ ${args[$j]} == 16 ]]; then\n            echo \"$a is 16\"\n   \
    \         return 0\n        fi\n        if [[ ${args[$j]} == 17 ]]; then\n   \
    \         echo \"$a is 17\"\n            return 0\n        fi\n        if [[ ${args[$j]}\
    \ == 18 ]]; then\n            echo \"$a is 18\"\n            return 0\n      \
    \  fi\n        if [[ ${", "    local a b\n    [[ \"$1\" =~ ^[0-9]+$ ]] || return\
    \ 1\n    [[ \"$2\" =~ ^[0-9]+$ ]] || return 1\n    local d=$(( $(echo \"$1 / $2\"\
    \ | bc -l) ))\n    while [ \"$d\" -gt \"$1\" ]; do\n        (( d-- ))\n    done\n\
    \    echo \"$d\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ];\
    \ do\n        local c=$(( $b / $a ))\n        [ $c -eq 0 ] && return $a\n    \
    \    [ $c -eq 1 ] && return $b\n        [ $c -le $b ] && b=$c\n        a=$(( $a\
    \ / $c ))\n    done", "    local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0\
    \ ]; do\n        local c=$(( $a % $b ))\n        a=$b\n        b=$c\n    done\n\
    \    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ];\
    \ do\n        local c=$(( $a % $b ))\n        a=$b\n        b=$c\n    done\n \
    \   echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ];\
    \ do\n        local c=$(( a % b ))\n        a=$b\n        b=$c\n    done\n   \
    \ echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n\
    \        local c=$(( $b / $a ))\n        [ $c -eq 0 ] && return $a\n        [\
    \ $c -eq 1 ] && return $b\n        [ $c -ge 2 ] && return $c\n        a=$c\n \
    \   done", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n \
    \       local c=$(( $b / $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c\
    \ -eq 1 ] && return $b\n        [ $c -ge 2 ] && return $c\n        a=$c\n    done",
  "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$((\
    \ $b / $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return\
    \ $b\n        [ $c -ge 2 ] && return $c\n        a=$c\n    done", "    local a\
    \ b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b /\
    \ $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n\
    \        [ $c -le $b ] && b=$c\n        a=$(( $a / $c ))\n    done", "  local\
    \ a b\n  a=$1\n  b=$2\n  while [ \"$b\" -gt 0 ]; do\n    local c=$(( b / a ))\n\
    \    a=$a\n    b=$c\n  done\n  echo $a", "    local a b\n    a=$1\n    b=$2\n\
    \    while [ $a -le $b ]; do\n        local c=$(( b - a ))\n        [ $c -eq 0\
    \ ] && return $a\n        [ $c -eq 1 ] && return $b\n        [ $c -le $(( b /\
    \ 2 )) ] && return $c\n        a=$(( a + c ))\n        b=$(( b - c ))\n    done",
  "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$((\
    \ $b / $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return\
    \ $b\n        [ $c -le $b ] && b=$c\n        a=$(( $a / $c ))\n    done", "  \
    \  local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$((\
    \ $a % $b ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b\
    \ / $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n\
    \        [ $c -ge 2 ] && return $c\n        a=$c\n    done", "    local a b\n\
    \    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $a % $b\
    \ ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local a b\n\
    \    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b / $a\
    \ ))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n \
    \       [ $c -le $b ] && b=$c\n        a=$(( $a / $c ))\n    done", "    local\
    \ a b\n    a=$1\n    b=$2\n    local d\n    d=0\n    while [ $a -gt 0 ]; do\n\
    \        (( d = $d + ( b % a ) ))\n        b=$(( b / a ))\n    done\n    echo\
    \ \"$d\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n  \
    \      local c=$(( a % b ))\n        a=$b\n        b=$c\n    done\n    echo \"\
    $b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n     \
    \   local c=$(( b - a ))\n        local d=$(expr $a \\% $c)\n        local e=$(expr\
    \ $b \\% $c)\n        if [ $d -eq 0 ]; then\n            echo $a\n           \
    \ break\n        fi\n        echo $d\n        a=$c\n        b=$e\n    done", " \
    \   local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$((\
    \ a % b ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$(( $a\
    \ % $b ))\n        [ $c -eq 0 ] && break\n        [ $c -gt 0 ] && b=$c\n     \
    \   a=$(( $a / $b ))\n    done\n    echo $b", "    local a b\n    a=$1\n    b=$2\n\
    \    while [ $a -le $b ]; do\n        local c=$(( b / a ))\n        a=$a\n   \
    \     b=$c\n    done\n    echo \"$b\"", "    local a b\n    local -a args\n  \
    \  local -a greatest_common_divisor\n    local -a greatest_common_divisor_args\n\
    \    local -a greatest_common_divisor_greatest_common_divisor\n    local -a greatest_common_divisor_greatest_common_divisor_args\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_args\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_args\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_args\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_args\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_args\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_args\n\
    \    local -a greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_greatest_common_divisor_args\n\
    \    local -", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n\
    \        local c=$(( $a % $b ))\n        a=$b\n        b=$c\n    done\n    echo\
    \ \"$b\"", "  local a b\n  a=$1\n  b=$2\n  while [ $a -gt 0 ]; do\n    local c=$((\
    \ a % b ))\n    a=$b\n    b=$c\n  done\n  echo $b", "    local a b\n    a=$1\n\
    \    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( b - a ))\n       \
    \ [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n        [ $c -ge\
    \ 2 ] && return $(( $a % $c ))\n        a=$(( a + 1 ))\n        b=$(( b - 1 ))\n\
    \    done", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n\
    \        local c=$(( $b / $a ))\n        [ $c -eq 0 ] && return $a\n        [\
    \ $c -eq 1 ] && return $b\n        [ $c -le $b ] && b=$c\n        a=$(( $a / $c\
    \ ))\n    done", "    local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n\
    \        local c=$(( b / a ))\n        a=$a\n        b=$c\n    done\n    echo\
    \ \"$b\"", "    local a b\n    local -r a=\"$1\"\n    local -r b=\"$2\"\n    shift\n\
    \    while (( a > 0 )) ; do\n        (( a-- ))\n        (( b-- ))\n    done\n\
    \    echo $b", "    local a b\n    a=$1\n    b=$2\n    local d\n    d=$(( (a %\
    \ b) == 0 ? a : b ))\n    while [ $d -le $b ]; do\n        (( d = d + a ))\n \
    \   done\n    echo \"$d\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a\
    \ -gt 0 ]; do\n        local c=$((b / a))\n        a=$a\n        b=$c\n    done\n\
    \    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ];\
    \ do\n        local c=$(( a % b ))\n        a=$b\n        b=$c\n    done\n   \
    \ echo \"$b\"", "  local a b\n  a=$1\n  b=$2\n  while [ \"$b\" -gt 0 ]; do\n \
    \   local c=$(( b / a ))\n    a=$a\n    b=$c\n  done\n  echo \"$a\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $a\
    \ % $b ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $a\
    \ % $b ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $a\
    \ % $b ))\n        [ $c -eq 0 ] && break\n        [ $c -eq 1 ] && b=$b\n     \
    \   a=$b\n    done\n    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n   \
    \ while [ $a -le $b ]; do\n        local c=$(( $a % $b ))\n        a=$b\n    \
    \    b=$c\n    done\n    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n  \
    \  local d\n    d=$((b / a))\n    while [[ $d -gt 0 ]]; do\n        a=$((a % d))\n\
    \        b=$((b / d))\n        d=$((b / a))\n    done\n    echo \"$a\"", "  local\
    \ a b\n  a=$1\n  b=$2\n  local d\n  while (( b > 0 )); do\n    local c\n    c=$((\
    \ b / a ))\n    d=$(( b - c * a ))\n    b=$c\n    a=$d\n  done\n  echo $a", " \
    \   local a b\n    read a b < <(echo \"$2\")\n    local c\n    read c < <(echo\
    \ \"$1\")\n    while (( c > b )); do\n        (( c = c - b ))\n    done\n    echo\
    \ \"$c\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n \
    \       local c=$(( $b / $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c\
    \ -eq 1 ] && return $b\n        [ $c -le $b ] && b=$c\n        a=$(( $a / $c ))\n\
    \    done", "    local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n \
    \       local c=$(( b / a ))\n        if [ $c -eq 0 ]; then\n            break\n\
    \        fi\n        a=$c\n    done\n    echo \"$a\"", "    local a b\n    local\
    \ -r a=$1\n    local -r b=$2\n    local -r gcd=$(( ((b % a) == 0) ? (b / a) :\
    \ (b % a) ))\n    echo \"$gcd\"", "    local a b\n    a=$1\n    b=$2\n    while\
    \ [ $a -le $b ]; do\n        local c=$((b / a))\n        local d=$(expr $a \\\
    * $c)\n        local e=$(expr $b \\* $c)\n        if [ $d -gt $e ]; then\n   \
    \         echo \"$d\"\n        else\n            echo \"$e\"\n        fi\n   \
    \     a=$c\n        b=$d\n    done", "    local a b\n    a=$1\n    b=$2\n    while\
    \ [ $a -gt 0 ]; do\n        local c=$(( a % b ))\n        a=$b\n        b=$c\n\
    \    done\n    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a\
    \ -gt 0 ]; do\n        (( a = $a % b ))\n    done\n    echo \"$a\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$(( $a\
    \ % $b ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b\
    \ / $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n\
    \        [ $c -le $b ] && b=$c\n        a=$(( $a / $c ))\n    done", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b\
    \ / $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n\
    \        [ $c -le $b ] && b=$c\n        a=$(( $a / $c ))\n    done", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$(( a %\
    \ b ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local a b\n\
    \    a=$1\n    b=$2\n    local d\n    d=$(( (a % b) == 0 ? (a / b) : ((b / a)\
    \ ) ))\n    echo \"$d\"", "    local a b\n    a=$1\n    b=$2\n    local d\n  \
    \  d=$(( ((b % a)) % b) )\n    while [ $d -gt 0 ]; do\n        a=$(( a / 2 ))\n\
    \        b=$(( b / 2 ))\n        d=$(( ((b % a)) % b) )\n    done\n    echo \"\
    $a\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n     \
    \   local c=$(( $a % $b ))\n        a=$b\n        b=$c\n    done\n    echo \"\
    $b\"", "    local a b\n    a=$1\n    b=$2\n    local d\n    d=$(( (a % b) == 0\
    \ ? a : b ))\n    while [ $d -gt 0 ]; do\n        (( d = d / 2 ))\n    done\n\
    \    echo \"$d\"", "    local a b\n    local -r a=\"$1\" b=\"$2\"\n    shift\n\
    \    shift\n    while (( b > 0 )) ; do\n        (( a = b, b = a % b ))\n    done\n\
    \    echo \"$a\"", "    local a b\n    a=$1\n    b=$2\n    while [[ $a -gt 0 ]];\
    \ do\n        local c=$(( a % b ))\n        a=$b\n        b=$c\n    done\n   \
    \ echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n\
    \        local c=$(( $b / $a ))\n        [ $c -eq 0 ] && return $a\n        [\
    \ $c -eq 1 ] && return $b\n        [ $c -ge 2 ] && return $c\n        a=$(( $a\
    \ + 1 ))\n        b=$(( $b - 1 ))\n    done", "    local a b\n    a=$1\n    b=$2\n\
    \    while [ $a -gt 0 ]; do\n        local c=$((b / a))\n        b=$a\n      \
    \  a=$c\n    done\n    echo \"$a\"", "    local a b\n    a=$1\n    b=$2\n    while\
    \ [[ $a -gt 0 ]]; do\n        local c=$((b / a))\n        a=$a\n        b=$c\n\
    \    done\n    echo \"$b\"", "    local a b\n    local -r a=\"$1\" b=\"$2\"\n\
    \    shift\n    shift\n    while (( \"$#\" )); do\n        [ \"$a\" = \"$b\" ]\
    \ && return 0\n        a=\"$(( a / b ))\"\n        b=\"$(( b / a ))\"\n    done\n\
    \    return \"$a\"", "    local a b\n    a=$1\n    b=$2\n    local d\n    while\
    \ (( b > 0 )); do\n        d=$(( b / a ))\n        a=$(( a % b ))\n        b=$d\n\
    \    done\n    echo \"$b\"", "    local a b\n    local d\n    a=$1\n    b=$2\n\
    \    while [ $a -le $b ]; do\n        d=$(( $a % $b ))\n        [ $d -eq 0 ] &&\
    \ break\n        a=$b\n        b=$d\n    done\n    echo \"$b\"", "    local a\
    \ b\n    [[ \"$1\" =~ ^[0-9]+$ ]] || return 1\n    [[ \"$2\" =~ ^[0-9]+$ ]] ||\
    \ return 1\n    while (( b=$1 )); do\n        a=$(( a % b ))\n        (( b-- ))\n\
    \    done\n    echo \"$a\"", "    local a b\n    [[ \"$1\" =~ ^[0-9]+$ ]] || return\
    \ 1\n    [[ \"$2\" =~ ^[0-9]+$ ]] || return 1\n    a=$1\n    b=$2\n    while [\
    \ \"$a\" -gt \"$b\" ]; do\n        a=$(( $a / $b ))\n        b=$(( $b / $a ))\n\
    \    done\n    echo \"$b\"", "    local a b\n    local -a args\n    local -r max=$1\n\
    \    shift\n    local -r min=$1\n    shift\n    local -r arg\n    for arg; do\n\
    \        [[ $arg =~ ^[0-9]+$ ]] || return 1\n        (( a = $a > $max )) && max=$a\
    \ || max=$b\n        [[ $arg =~ ^[0-9]+$ ]] || return 1\n        (( b = $b > $min\
    \ )) && min=$b || min=$a\n    done\n    echo $(( min / $max ))", "    local a\
    \ b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$(( b / a\
    \ ))\n        b=$a\n        a=$c\n    done\n    echo \"$a\"", "    local a b\n\
    \    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$(( a % b ))\n\
    \        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local a b\n    a=$1\n\
    \    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$((b / a))\n        b=$a\n\
    \        a=$c\n    done\n    echo \"$a\"", "    local a b\n    local -a args\n\
    \    local -a greatest_common_divisor_args\n    local -a greatest_common_divisor_args_count\n\
    \    local -a greatest_common_divisor_args_max\n    local -a greatest_common_divisor_args_min\n\
    \    local -a greatest_common_divisor_args_min_index\n    local -a greatest_common_divisor_args_max_index\n\
    \    local -a greatest_common_divisor_args_max_value\n    local -a greatest_common_divisor_args_min_value\n\
    \    local -a greatest_common_divisor_args_min_value_count\n    local -a greatest_common_divisor_args_min_value_max\n\
    \    local -a greatest_common_divisor_args_min_value_min\n    local -a greatest_common_divisor_args_min_value_min_index\n\
    \    local -a greatest_common_divisor_args_min_value_max_index\n    local -a greatest_common_divisor_args_min_value_max_value\n\
    \    local -a greatest_common_divisor_args_min_value_max_value_count\n    local\
    \ -a greatest_common_divisor_args_min_value_max_value_max\n    local -a greatest_common_divisor_args_min_value_max_value_min\n\
    \    local -a greatest_common_divisor_args_min_value_max_value_min_index\n   \
    \ local -a greatest_common_divisor_args_min_value_max_value_max_index\n    local\
    \ -a greatest_common_divisor_args_min_value_max_value_max_value\n    local -a\
    \ greatest_common_divisor_args_min_value_max_value_max_value_count\n    local\
    \ -a greatest_common_divisor_args_min_value_max_value_max_value_max\n    local\
    \ -a greatest_common_divisor_args_min_value_max_value_max_value_min\n    local\
    \ -a greatest_common_divisor_args_min_value_max_value_max_value_min_index\n  \
    \  local -a greatest_common_divisor_args_min_value_max_value_max_value_max_index\n\
    \    local -a greatest_common_divisor_args_min_value_max_value_max_value_max_value\n\
    \    local -a greatest_common_divisor_args_min_value_max_value_max_value_max_value_count\n\
    \    local -a greatest_common_divisor_args_min_value_max_value_max_value_max_value_max\n\
    \    local -a greatest_common_divisor_args_min_value_max_value_max_value_max_value_min\n\
    \    local -a greatest_common_divisor_args_min_value_max_value_max_", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( b\
    \ - a ))\n        if [ $c -eq 0 ]; then\n            echo $a\n            break\n\
    \        fi\n        echo $c\n        a=$(( a + c ))\n    done", "    local a\
    \ b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b /\
    \ $a ))\n        [ $c -eq 0 ] && break\n        [ $c -eq $b ] && return $a\n \
    \       a=$c\n    done\n    return $a", "    local a b\n    a=$1\n    b=$2\n \
    \   while [ $a -gt 0 ]; do\n        local c=$(( $a % $b ))\n        a=$b\n   \
    \     b=$c\n    done\n    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n \
    \   while [ $a -le $b ]; do\n        local c=$(( b - a ))\n        local d=$((\
    \ a % b ))\n        local e=$(( c / d ))\n        a=$(( a / b ))\n        b=$((\
    \ b / c ))\n        echo $e\n    done", "    local a b\n    a=$1\n    b=$2\n \
    \   while [ $a -gt 0 ]; do\n        local c=$(( a % b ))\n        a=$b\n     \
    \   b=$c\n    done\n    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n   \
    \ while [ $a -gt 0 ]; do\n        local c=$(( $a % $b ))\n        a=$b\n     \
    \   b=$c\n    done\n    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n   \
    \ local d\n    d=$(( (a % b) == 0 ? a : b ))\n    while [ $d -gt 0 ]; do\n   \
    \     (( d = d / 2 ))\n    done\n    echo \"$d\"", "    local a b\n    a=$1\n\
    \    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b / $a ))\n     \
    \   [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n        [ $c\
    \ -le $b ] && b=$c\n        a=$(( $a / $c ))\n    done\n    return $b", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [[ $a -gt 0 ]]; do\n        local c=$(( a\
    \ % b ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local a\
    \ b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( b /\
    \ $a ))\n        [ $c -eq $a ] && return $c\n        [ $c -eq $b ] && return $c\n\
    \        a=$c\n    done\n    return $a", "    local a b\n    a=$1\n    b=$2\n\
    \    while [ $a -le $b ]; do\n        local c=$(( $b / $a ))\n        [ $c -eq\
    \ 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n        [ $c -le $b ] &&\
    \ b=$c\n        a=$(( $a / $c ))\n    done", "    local a b\n    a=$1\n    b=$2\n\
    \    while [ $a -le $b ]; do\n        local c=$(( $b / $a ))\n        [ $c -eq\
    \ 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n        [ $c -le $b ] &&\
    \ b=$c\n        a=$(( $a / $c ))\n    done", "    local a b\n    a=$1\n    b=$2\n\
    \    while [ $a -le $b ]; do\n        local c=$(( $b / $a ))\n        [ $c -eq\
    \ 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n        [ $c -le $b ] &&\
    \ b=$c\n        a=$(( $a / $c ))\n    done\n    return $b", "    local a b\n \
    \   a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b / $a ))\n\
    \        [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n      \
    \  [ $c -le $b ] && b=$c\n        a=$(( $a / $c ))\n    done", "    local a b\n\
    \    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $a % $b\
    \ ))\n        [ $c -eq 0 ] && break\n        a=$b\n        b=$c\n    done\n  \
    \  echo $a", "    local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n\
    \        (( a = $a % b ))\n    done\n    echo \"$a\"", "    local a b\n    a=$1\n\
    \    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$(( $a % $b ))\n      \
    \  a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local a b\n    a=$1\n\
    \    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $b / $a ))\n     \
    \   [ $c -eq 0 ] && break\n        [ $c -eq $a ] && return $c\n        [ $c -eq\
    \ $b ] && return $c\n        a=$c\n    done\n    return $a", "  local a b\n  a=$1\n\
    \  b=$2\n  while [ $a -gt 0 ]; do\n    local c=$(( a % b ))\n    a=$b\n    b=$c\n\
    \  done\n  echo $b", "    local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0\
    \ ]; do\n        local c=$(( $a % $b ))\n        a=$b\n        b=$c\n    done\n\
    \    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ];\
    \ do\n        local c=$(( b - a ))\n        if [ $c -eq 0 ]; then\n          \
    \  echo $a\n            break\n        fi\n        echo $c\n        a=$(( a +\
    \ c ))\n    done", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ];\
    \ do\n        local c=$(( b - a ))\n        local d=$(echo $c | bc -l)\n     \
    \   local e=$(( c - d ))\n        local f=$(( b - e ))\n        local g=$(( f\
    \ / a ))\n        local h=$(( f % a ))\n        a=$(( a + g ))\n        b=$((\
    \ b + h ))\n    done\n    echo \"$a\"", "    local a b\n    a=$1\n    b=$2\n \
    \   while [ $a -le $b ]; do\n        local c=$(( $b / $a ))\n        [ $c -eq\
    \ 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n        [ $c -le $b ] &&\
    \ b=$c\n        a=$(( $a / $c ))\n    done", "    local a b\n    a=$1\n    b=$2\n\
    \    while [ $a -le $b ]; do\n        local c=$(( $b / $a ))\n        [ $c -eq\
    \ 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n        [ $c -le $b ] &&\
    \ b=$c\n        a=$(( $a / $c ))\n    done\n    return $b", "    local a b\n \
    \   a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$(( a % b ))\n\
    \        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local a b\n    a=$1\n\
    \    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( b - a ))\n       \
    \ [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return $b\n        [ $c -le\
    \ $(( b / 2 )) ] && return $c\n        a=$(( a + 1 ))\n        b=$(( b - c ))\n\
    \    done", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n\
    \        local c=$(( $a % $b ))\n        a=$b\n        b=$c\n    done\n    echo\
    \ \"$b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n  \
    \      local c=$((b / a))\n        a=$a\n        b=$c\n    done\n    echo \"$b\"",
  "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$((\
    \ $b / $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq 1 ] && return\
    \ $b\n        [ $c -le $b ] && b=$c\n        a=$(( $a / $c ))\n    done\n    return\
    \ $b", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n     \
    \   local c=$(( $b / $a ))\n        [ $c -eq 0 ] && return $a\n        [ $c -eq\
    \ 1 ] && return $b\n        [ $c -ge 2 ] && return $c\n        a=$(( $a / $c ))\n\
    \        b=$(( $b / $c ))\n    done", "    local a b\n    a=$1\n    b=$2\n   \
    \ while [ $a -gt 0 ]; do\n        local c=$(( a % b ))\n        a=$b\n       \
    \ b=$c\n    done\n    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n    while\
    \ [ $a -le $b ]; do\n        local c=$(( $b / $a ))\n        [ $c -eq 0 ] && return\
    \ $a\n        [ $c -eq 1 ] && return $b\n        [ $c -le $b ] && b=$c\n     \
    \   a=$(( $a / $c ))\n    done", "    local a b\n    a=$1\n    b=$2\n    while\
    \ [ $a -le $b ]; do\n        local c=$(( $b / $a ))\n        [ $c -eq 0 ] && return\
    \ $a\n        [ $c -eq 1 ] && return $b\n        [ $c -ge 2 ] && return $c\n \
    \       a=$c\n    done", "    local a b\n    a=$1\n    b=$2\n    local d\n   \
    \ d=$((b / a))\n    while [ $d -le $b ]; do\n        (( d = d + a ))\n    done\n\
    \    echo \"$d\"", "    local a b\n    local -n max=$1\n    shift\n    local -n\
    \ min=$1\n    shift\n    while (( $# > 0 )); do\n        (( a = $1 % $2 ))\n \
    \       (( b = $2 % $1 ))\n        if (( b == 0 )); then\n            (( max =\
    \ $a ))\n        elif (( a == 0 )); then\n            (( min = $b ))\n       \
    \ else\n            (( max = ( $a > $b ) ? $a : $b ))\n        fi\n        shift\n\
    \    done\n    echo \"$max\""]
stop_tokens:
- "\n}"

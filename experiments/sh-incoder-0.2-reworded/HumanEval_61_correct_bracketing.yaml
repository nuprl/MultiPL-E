name: HumanEval_61_correct_bracketing
language: sh
prompt: "#!/bin/bash\n# brackets is a string of \"(\" and \")\".\n# return true if\
  \ every opening bracket has a corresponding closing bracket.\n# >>> $(correct_bracketing\
  \ \"(\")\n# \"false\"\n# >>> $(correct_bracketing \"()\")\n# \"true\"\n# >>> $(correct_bracketing\
  \ \"(()())\")\n# \"true\"\n# >>> $(correct_bracketing \")(()\")\n# \"false\"\n#\n\
  # $1 is a string\ncorrect_bracketing() {\n"
tests: "}\n\ncandidate() {\n    correct_bracketing \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"()\") = \"true\" ]]\n    [[ $(candidate \"(()())\") =\
  \ \"true\" ]]\n    [[ $(candidate \"()()(()())()\") = \"true\" ]]\n    [[ $(candidate\
  \ \"()()((()()())())(()()(()))\") = \"true\" ]]\n    [[ $(candidate \"((()())))\"\
  ) = \"false\" ]]\n    [[ $(candidate \")(()\") = \"false\" ]]\n    [[ $(candidate\
  \ \"(\") = \"false\" ]]\n    [[ $(candidate \"((((\") = \"false\" ]]\n    [[ $(candidate\
  \ \")\") = \"false\" ]]\n    [[ $(candidate \"(()\") = \"false\" ]]\n    [[ $(candidate\
  \ \"()()(()())())(()\") = \"false\" ]]\n    [[ $(candidate \"()()(()())()))()\"\
  ) = \"false\" ]]\n}\n\nrun_test"
completions: ["    local brackets=$1\n    local opening_brackets=$(grep -Eo \"\\(.*\\\
    )\" <<< $brackets)\n    local closing_brackets=$(grep -Eo \"\\).*\" <<< $brackets)\n\
    \    local result=$(echo $opening_brackets | grep -Eo \"\\(.*\\)\" | grep -Eo\
    \ \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\\
    (.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\\
    )\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" |\
    \ grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" | grep\
    \ -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo\
    \ \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\\
    (.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\\
    )\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" |\
    \ grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" | grep\
    \ -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo\
    \ \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\\
    (.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\\
    )\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\)\" |\
    \ grep -Eo \"\\(.*\\)\" | grep -Eo \"\\(.*\\", "    local brackets=\"$1\"\n  \
    \  local opening=\"$(echo \"$brackets\" | sed 's/\\(.*\\)/\\1/g')\"\n    local\
    \ closing=\"$(echo \"$brackets\" | sed 's/\\([^)]*\\)/\\1/g')\"\n    local result=\"\
    $(echo \"$brackets\" | sed 's/\\(.*\\)/\\1/g' | sed 's/\\([^)]*\\)/\\1/g' | sed\
    \ 's/\\(.*\\)/\\1/g' | sed 's/\\([^)]*\\)/\\1/g' | sed 's/\\(.*\\)/\\1/g' | sed\
    \ 's/\\([^)]*\\)/\\1/g' | sed 's/\\(.*\\)/\\1/g' | sed 's/\\([^)]*\\)/\\1/g' |\
    \ sed 's/\\(.*\\)/\\1/g' | sed 's/\\([^)]*\\)/\\1/g' | sed 's/\\(.*\\)/\\1/g'\
    \ | sed 's/\\([^)]*\\)/\\1/g' | sed 's/\\(.*\\)/\\1/g' | sed 's/\\([^)]*\\)/\\\
    1/g' | sed 's/\\(.*\\)/\\1/g' | sed 's/\\([^)]*\\)/\\1/g' | sed 's/\\(.*\\)/\\\
    1/g' | sed 's/\\([^)]*\\)/\\1/g' | sed 's/\\(.*\\)/\\1/g' | sed 's/\\([^)]*\\\
    )/\\1/g' | sed 's/\\(.*\\)/\\1/g' | sed 's/\\([^)]*\\)/\\1/g' | sed 's/\\(.*\\\
    )/\\1/g' | sed 's/\\([^)]*\\)/\\1/g' | sed 's/\\(.*\\)/\\1/g' | sed 's/\\([^)]*\\\
    )/\\1/g' | sed 's/\\(.*\\)/\\1/g' | sed 's/\\([^)]*\\)/\\1/g' | sed 's/\\(.*\\\
    )/\\1/g' | sed 's/\\([^)]*\\)/\\1/g' | sed 's/\\(.*\\)/\\1/g' | sed 's/\\([^)]*\\\
    )/\\1/g' | sed 's/\\(.*\\)/\\1/g' | sed 's/\\([^)]*\\)/\\1/g' | sed 's/\\(.*\\\
    )/\\1/g' | sed 's/\\([^)]*\\)/\\1/g' | sed 's/\\(.*\\)/\\1/g' | sed 's/\\([^)]*\\\
    )/\\1/g' | sed 's/\\(.*\\)/\\1/g", "    local brackets=$1\n    local opening_brackets=$(grep\
    \ -Eo \"\\(.*\\)\" <<< \"$brackets\")\n    local closing_brackets=$(grep -Eo \"\
    \\).*\" <<< \"$brackets\")\n    local result=$(echo \"$opening_brackets\" | grep\
    \ -Eo \"\\(.*\\)\")\n    local result_2=$(echo \"$closing_brackets\" | grep -Eo\
    \ \"\\).*\")\n    if [ \"$result\" != \"\" ] && [ \"$result_2\" != \"\" ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local\
    \ brackets=$1\n    local opening_brackets=$(echo $brackets | sed 's/\\(.*\\)/\\\
    1/')\n    local closing_brackets=$(echo $brackets | sed 's/\\(.*\\)/\\1/')\n \
    \   local opening_brackets_count=$(echo $opening_brackets | wc -w)\n    local\
    \ closing_brackets_count=$(echo $closing_brackets | wc -w)\n    if [ $opening_brackets_count\
    \ -ne $closing_brackets_count ]; then\n        echo \"false\"\n    else\n    \
    \    echo \"true\"\n    fi", "    local brackets=$1\n    local opening_brackets=$(grep\
    \ -E \"\\\\($brackets\\\\)\" <<< \"$brackets\")\n    local closing_brackets=$(grep\
    \ -E \"\\\\($brackets\\\\)\" <<< \"$brackets\")\n    local result=$(echo \"$opening_brackets\"\
    \ | grep -E \"\\\\($closing_brackets\\\\)\" | wc -l)\n    echo $result", "   \
    \ local brackets=$1\n    local openings=$(echo $brackets | sed -e 's/\\(.*\\)/\\\
    1/g')\n    local closings=$(echo $brackets | sed -e 's/\\([^)]*\\)/\\1/g')\n \
    \   local result=$(echo $openings | grep -F -v -e $closings)\n    if [ -z \"$result\"\
    \ ]; then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi", " \
    \   local brackets=$1\n    local opening_brackets=$(echo $brackets | sed 's/\\\
    (.*\\)/\\1/')\n    local closing_brackets=$(echo $brackets | sed 's/\\(.*\\)/\\\
    1/')\n    local result=$(echo $brackets | sed 's/\\(.*\\)/\\1/')\n    local opening_brackets_count=$(echo\
    \ $opening_brackets | wc -w)\n    local closing_brackets_count=$(echo $closing_brackets\
    \ | wc -w)\n    if [ $opening_brackets_count -ne $closing_brackets_count ]; then\n\
    \        echo \"false\"\n    else\n        echo \"true\"\n    fi", "  local brackets=$1\n\
    \  local opening_brackets=$(echo $brackets | sed 's/\\(.*\\)/\\1/g')\n  local\
    \ closing_brackets=$(echo $brackets | sed 's/\\([^)]*\\)/\\1/g')\n  local correct=false\n\
    \  for opening_bracket in $opening_brackets; do\n    local closing_bracket=$(echo\
    \ $closing_brackets | sed \"s/$opening_bracket//g\")\n    if [ \"$closing_bracket\"\
    \ != \"$opening_bracket\" ]; then\n      correct=true\n    fi\n  done\n  echo\
    \ $correct", "    local brackets=$1\n    local opening_brackets=$(echo $brackets\
    \ | sed 's/\\(.*\\)/\\1/')\n    local closing_brackets=$(echo $brackets | sed\
    \ 's/\\)/\\1/')\n    local opening_brackets_count=$(echo $opening_brackets | wc\
    \ -w)\n    local closing_brackets_count=$(echo $closing_brackets | wc -w)\n  \
    \  if [ $opening_brackets_count -eq $closing_brackets_count ]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi", "    local brackets=$1\n\
    \    local opening_brackets=$(grep -Eo \"\\(.*\\)\" <<< \"$brackets\")\n    local\
    \ closing_brackets=$(grep -Eo \"\\).*\" <<< \"$brackets\")\n    local opening_count=$(($(echo\
    \ \"$opening_brackets\" | wc -l) - 1))\n    local closing_count=$(($(echo \"$closing_brackets\"\
    \ | wc -l) - 1))\n    local result=$((opening_count == closing_count))\n    echo\
    \ \"$result\"", "  local brackets=\"${1}\"\n  local brackets_count=0\n  local\
    \ bracket_count=0\n  local bracket_open=0\n  local bracket_close=0\n  local bracket_open_bracket=\"\
    ()\"\n  local bracket_close_bracket=\"()\"\n  local bracket_open_bracket_count=0\n\
    \  local bracket_close_bracket_count=0\n  local bracket_open_bracket_count2=0\n\
    \  local bracket_close_bracket_count2=0\n  local bracket_open_bracket_count3=0\n\
    \  local bracket_close_bracket_count3=0\n  local bracket_open_bracket_count4=0\n\
    \  local bracket_close_bracket_count4=0\n  local bracket_open_bracket_count5=0\n\
    \  local bracket_close_bracket_count5=0\n  local bracket_open_bracket_count6=0\n\
    \  local bracket_close_bracket_count6=0\n  local bracket_open_bracket_count7=0\n\
    \  local bracket_close_bracket_count7=0\n  local bracket_open_bracket_count8=0\n\
    \  local bracket_close_bracket_count8=0\n  local bracket_open_bracket_count9=0\n\
    \  local bracket_close_bracket_count9=0\n  local bracket_open_bracket_count10=0\n\
    \  local bracket_close_bracket_count10=0\n  local bracket_open_bracket_count11=0\n\
    \  local bracket_close_bracket_count11=0\n  local bracket_open_bracket_count12=0\n\
    \  local bracket_close_bracket_count12=0\n  local bracket_open_bracket_count13=0\n\
    \  local bracket_close_bracket_count13=0\n  local bracket_open_bracket_count14=0\n\
    \  local bracket_close_bracket_count14=0\n  local bracket_open_bracket_count15=0\n\
    \  local bracket_close_bracket_count15=0\n  local bracket_open_bracket_count16=0\n\
    \  local bracket_close_bracket_count16=0\n  local bracket_open_bracket_count17=0\n\
    \  local bracket_close_bracket_count17=0\n  local bracket_open_b", "    local\
    \ brackets=$1\n    local opening_brackets=$(echo $brackets | sed -e 's/\\(.*\\\
    )/\\1/')\n    local closing_brackets=$(echo $brackets | sed -e 's/\\)/\\1/')\n\
    \    local result=$(echo $brackets | sed -e 's/\\(.*\\)/\\1/')\n    local opening_brackets_count=$(echo\
    \ $opening_brackets | wc -w)\n    local closing_brackets_count=$(echo $closing_brackets\
    \ | wc -w)\n    if [ $opening_brackets_count -ne $closing_brackets_count ]; then\n\
    \        echo \"false\"\n    else\n        echo \"true\"\n    fi", "    local\
    \ brackets=\"${1}\"\n    local opening_brackets=\"()\"\n    local closing_brackets=\"\
    )\"\n    local bracket_count=0\n    local bracket_open=0\n    local bracket_close=0\n\
    \    local bracket_open_bracket=\"()\"\n    local bracket_close_bracket=\")\"\n\
    \    local bracket_open_bracket_count=0\n    local bracket_close_bracket_count=0\n\
    \    local bracket_open_bracket_count=\"()\"\n    local bracket_close_bracket_count=\"\
    )\"\n    local bracket_open_bracket_count_2=\"()\"\n    local bracket_close_bracket_count_2=\"\
    )\"\n    local bracket_open_bracket_count_3=\"()\"\n    local bracket_close_bracket_count_3=\"\
    )\"\n    local bracket_open_bracket_count_4=\"()\"\n    local bracket_close_bracket_count_4=\"\
    )\"\n    local bracket_open_bracket_count_5=\"()\"\n    local bracket_close_bracket_count_5=\"\
    )\"\n    local bracket_open_bracket_count_6=\"()\"\n    local bracket_close_bracket_count_6=\"\
    )\"\n    local bracket_open_bracket_count_7=\"()\"\n    local bracket_close_bracket_count_7=\"\
    )\"\n    local bracket_open_bracket_count_8=\"()\"\n    local bracket_close_bracket_count_8=\"\
    )\"\n    local bracket_open_bracket_count_9=\"()\"\n    local bracket_close_bracket_count_9=\"\
    )\"\n    local bracket_open_bracket_count_10=\"()\"\n    local bracket_close_bracket_count_10=\"\
    )\"\n    local bracket_open_bracket_count_11=\"()\"\n    local bracket_close_bracket_count_11=\"\
    )\"\n    local bracket_open_bracket_count_12=\"()\"\n    local bracket_close_bracket_count_12=\"\
    )\"\n    local bracket_open_bracket_count_13=\"()\"\n    local bracket_close_bracket_count_13=\"\
    )\"\n    local bracket_open_bracket_count_14=\"()\"\n    local bracket_close_bracket_count_14=\"\
    )\"\n    local bracket_open_b", "    local brackets=\"${1}\"\n    local opening=\"\
    $(echo \"${brackets}\" | sed 's/\\(.*\\)/\\1/')\"\n    local closing=\"$(echo\
    \ \"${brackets}\" | sed 's/\\(.*\\)/\\1/')\"\n    local result=\"$(echo \"${brackets}\"\
    \ | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed\
    \ 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\\
    (.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\\
    )/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/'\
    \ | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed\
    \ 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\\
    (.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\\
    )/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/'\
    \ | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed\
    \ 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\\
    (.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\\
    )/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/'\
    \ | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed\
    \ 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/' | sed 's/\\(.*\\)/\\1/", "    local\
    \ brackets=$1\n    local openings=$(echo $brackets | sed 's/\\(.*\\)/\\1/')\n\
    \    local closings=$(echo $brackets | sed 's/\\)/\\1/')\n    local opening_count=0\n\
    \    local closing_count=0\n    for opening in $openings\n    do\n        opening_count=$(($opening_count\
    \ + 1))\n    done\n    for closing in $closings\n    do\n        closing_count=$(($closing_count\
    \ + 1))\n    done\n    if [ $opening_count -eq $closing_count ]\n    then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local brackets=\"\
    $1\"\n    local brackets_count=$(echo \"$brackets\" | wc -c)\n    if [ \"$brackets_count\"\
    \ -eq \"0\" ]; then\n        echo \"true\"\n    else\n        local opening_brackets=$(echo\
    \ \"$brackets\" | sed 's/\\(.*\\)/\\1/')\n        local closing_brackets=$(echo\
    \ \"$brackets\" | sed 's/\\)/\\1/')\n        local opening_brackets_count=$(echo\
    \ \"$opening_brackets\" | wc -c)\n        local closing_brackets_count=$(echo\
    \ \"$closing_brackets\" | wc -c)\n        if [ \"$opening_brackets_count\" -eq\
    \ \"$closing_brackets_count\" ]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    fi", "  local brackets=$1\n  local\
    \ opening_brackets=0\n  local closing_brackets=0\n  local bracket_count=0\n  local\
    \ bracket_string=\"\"\n  local bracket_string2=\"\"\n  local bracket_string3=\"\
    \"\n  local bracket_string4=\"\"\n  local bracket_string5=\"\"\n  local bracket_string6=\"\
    \"\n  local bracket_string7=\"\"\n  local bracket_string8=\"\"\n  local bracket_string9=\"\
    \"\n  local bracket_string10=\"\"\n  local bracket_string11=\"\"\n  local bracket_string12=\"\
    \"\n  local bracket_string13=\"\"\n  local bracket_string14=\"\"\n  local bracket_string15=\"\
    \"\n  local bracket_string16=\"\"\n  local bracket_string17=\"\"\n  local bracket_string18=\"\
    \"\n  local bracket_string19=\"\"\n  local bracket_string20=\"\"\n  local bracket_string21=\"\
    \"\n  local bracket_string22=\"\"\n  local bracket_string23=\"\"\n  local bracket_string24=\"\
    \"\n  local bracket_string25=\"\"\n  local bracket_string26=\"\"\n  local bracket_string27=\"\
    \"\n  local bracket_string28=\"\"\n  local bracket_string29=\"\"\n  local bracket_string30=\"\
    \"\n  local bracket_string31=\"\"\n  local bracket_string32=\"\"\n  local bracket_string33=\"\
    \"\n  local bracket_string34=\"\"\n  local bracket_string35=\"\"\n  local bracket_string36=\"\
    \"\n  local bracket_string37=\"\"\n  local bracket_string38=\"\"\n  local bracket_string39=\"\
    \"\n  local bracket_string40=\"\"\n  local bracket_string41=\"\"\n  local bracket_string42=\"\
    \"\n  local bracket_string43=\"\"\n  local bracket_string44=\"\"\n  local bracket_string45=\"\
    \"\n  local bracket_string46=\"\"\n  local bracket_string47=\"\"\n  local bracket_string48=\"\
    \"\n  local bracket_string49=\"\"\n  local bracket_string50=\"\"\n  local bracket_string51=\"\
    \"\n  local bracket_string52=\"\"\n  local bracket_string53=\"\"\n  local bra",
  "  local brackets=\"$1\"\n  local opening_brackets=\"$(echo \"$brackets\" | sed\
    \ -e 's/\\(.*\\)/\\1/g')\"\n  local closing_brackets=\"$(echo \"$brackets\" |\
    \ sed -e 's/\\([^)]*\\)/\\1/g')\"\n  local result=\"$(echo \"$brackets\" | sed\
    \ -e 's/\\(.*\\)\\(.*\\)/\\1\\2/g' | sort | uniq -d)\"\n  local correct=\"$(echo\
    \ \"$result\" | grep -Fxq \"$opening_brackets\" | wc -l)\"\n  local incorrect=\"\
    $(echo \"$result\" | grep -Fxq \"$closing_brackets\" | wc -l)\"\n  echo \"$correct\
    \ $incorrect\"", "  local brackets=\"${1}\"\n  local bracket_count=0\n  local\
    \ bracket_open=0\n  local bracket_close=0\n  local bracket_open_bracket=\"()\"\
    \n  local bracket_close_bracket=\"()\"\n  local bracket_open_bracket_count=0\n\
    \  local bracket_close_bracket_count=0\n  local bracket_open_bracket_count2=0\n\
    \  local bracket_close_bracket_count2=0\n  local bracket_open_bracket_count3=0\n\
    \  local bracket_close_bracket_count3=0\n  local bracket_open_bracket_count4=0\n\
    \  local bracket_close_bracket_count4=0\n  local bracket_open_bracket_count5=0\n\
    \  local bracket_close_bracket_count5=0\n  local bracket_open_bracket_count6=0\n\
    \  local bracket_close_bracket_count6=0\n  local bracket_open_bracket_count7=0\n\
    \  local bracket_close_bracket_count7=0\n  local bracket_open_bracket_count8=0\n\
    \  local bracket_close_bracket_count8=0\n  local bracket_open_bracket_count9=0\n\
    \  local bracket_close_bracket_count9=0\n  local bracket_open_bracket_count10=0\n\
    \  local bracket_close_bracket_count10=0\n  local bracket_open_bracket_count11=0\n\
    \  local bracket_close_bracket_count11=0\n  local bracket_open_bracket_count12=0\n\
    \  local bracket_close_bracket_count12=0\n  local bracket_open_bracket_count13=0\n\
    \  local bracket_close_bracket_count13=0\n  local bracket_open_bracket_count14=0\n\
    \  local bracket_close_bracket_count14=0\n  local bracket_open_bracket_count15=0\n\
    \  local bracket_close_bracket_count15=0\n  local bracket_open_bracket_count16=0\n\
    \  local bracket_close_bracket_count16=0\n  local bracket_open_bracket_count17=0\n\
    \  local bracket_close_bracket_count17=0\n  local bracket_open_bracket_count18=0\n\
    \  ", "    local brackets=$1\n    local opening_brackets=$(echo $brackets | sed\
    \ 's/\\(.*\\)/\\1/')\n    local closing_brackets=$(echo $brackets | sed 's/\\\
    )/\\1/')\n    local opening_count=0\n    local closing_count=0\n    local opening_count2=0\n\
    \    local closing_count2=0\n    local opening_count3=0\n    local closing_count3=0\n\
    \    local opening_count4=0\n    local closing_count4=0\n    local opening_count5=0\n\
    \    local closing_count5=0\n    local opening_count6=0\n    local closing_count6=0\n\
    \    local opening_count7=0\n    local closing_count7=0\n    local opening_count8=0\n\
    \    local closing_count8=0\n    local opening_count9=0\n    local closing_count9=0\n\
    \    local opening_count10=0\n    local closing_count10=0\n    local opening_count11=0\n\
    \    local closing_count11=0\n    local opening_count12=0\n    local closing_count12=0\n\
    \    local opening_count13=0\n    local closing_count13=0\n    local opening_count14=0\n\
    \    local closing_count14=0\n    local opening_count15=0\n    local closing_count15=0\n\
    \    local opening_count16=0\n    local closing_count16=0\n    local opening_count17=0\n\
    \    local closing_count17=0\n    local opening_count18=0\n    local closing_count18=0\n\
    \    local opening_count19=0\n    local closing_count19=0\n    local opening_count20=0\n\
    \    local closing_count20=0\n    local opening_count21=0\n    local closing_count21=0\n\
    \    local opening_count22=0\n    local closing_count22=0\n    local opening_count23=0\n\
    \    local closing_count23=0\n    local opening_count24=0\n    local closing_count24=0\n\
    \    local opening_count25=0\n    local closing_count25=0\n    local opening_count26=0\n\
    \    local closing_count26=0\n    local opening_count27=0\n    local closing_count27=0\n\
    \    local opening_count28=0\n    local closing_count28=0\n    local opening_count29=0\n\
    \    local closing_count29=0\n    "]
stop_tokens:
- "\n}"

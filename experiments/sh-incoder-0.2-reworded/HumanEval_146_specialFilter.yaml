name: HumanEval_146_specialFilter
language: sh
prompt: "#!/bin/bash\n# Write a function that takes an array of numbers as input and\
  \ returns \n# the number of elements in the array that are greater than 10 and both\
  \ \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For example:\n\
  # >>> $(specialFilter \"15 -73 14 -15\")\n# \"1\"\n# >>> $(specialFilter \"33 -2\
  \ -3 45 21 109\")\n# \"2\"\n#\n# $1 is a space-separated list\nspecialFilter() {\n"
tests: "}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
  ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
  \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
  ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"\
  0\" ]]\n}\n\nrun_test"
completions: ["    local numbers=$1\n    local count=0\n    for number in $numbers\n\
    \    do\n        if (( $number > 10 )); then\n            if (( $number % 2 !=\
    \ 0 )); then\n                if (( $number % 2 != 1 )); then\n              \
    \      if (( $number % 2 != 3 )); then\n                        if (( $number\
    \ % 2 != 5 )); then\n                            if (( $number % 2 != 7 )); then\n\
    \                                if (( $number % 2 != 9 )); then\n           \
    \                         count=$(( $count + 1 ))\n                          \
    \      fi\n                            fi\n                        fi\n      \
    \              fi\n                fi\n            fi\n        fi\n    done\n\
    \    echo \"$count\"", "    local numbers=$1\n    local count=0\n    for number\
    \ in $numbers\n    do\n        if [[ $number -gt 10 && $number -le 10 && $number\
    \ % 2 -eq 1 ]]\n        then\n            ((count++))\n        fi\n    done\n\
    \    echo \"$count\"", "    local array=\"$1\"\n    local count=0\n    for element\
    \ in $array; do\n        if [[ $element -gt 10 ]]; then\n            if [[ $element\
    \ -le 10 && $element -ge 1 ]]; then\n                if [[ $element -eq 1 ]];\
    \ then\n                    ((count++))\n                elif [[ $element -eq\
    \ 3 ]]; then\n                    ((count++))\n                elif [[ $element\
    \ -eq 5 ]]; then\n                    ((count++))\n                elif [[ $element\
    \ -eq 7 ]]; then\n                    ((count++))\n                elif [[ $element\
    \ -eq 9 ]]; then\n                    ((count++))\n                fi\n      \
    \      fi\n        fi\n    done\n    echo \"$count\"", "    local numbers=$1\n\
    \    local count=0\n    local firstOdd=0\n    local lastOdd=0\n    local firstEven=0\n\
    \    local lastEven=0\n    local first=0\n    local last=0\n    local number\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local odd\n    local even\n    local firstOdd\n    local lastOdd\n    local\
    \ firstEven\n    local lastEven\n    local firstDigit\n    local lastDigit\n \
    \   local firstDigitOdd\n    local lastDigitOdd\n    local firstDigitEven\n  \
    \  local lastDigitEven\n    local firstDigitOdd\n    local lastDigitOdd\n    local\
    \ firstDigitEven\n    local lastDigitEven\n    local firstDigitOdd\n    local\
    \ lastDigitOdd\n    local firstDigitEven\n    local lastDigitEven\n    local firstDigitOdd\n\
    \    local lastDigitOdd\n    local firstDigitEven\n    local lastDigitEven\n \
    \   local firstDigitOdd\n    local lastDigitOdd\n    local firstDigitEven\n  \
    \  local lastDigitEven\n    local firstDigitOdd\n    local lastDigitOdd\n    local\
    \ firstDigitEven\n    local lastDigitEven\n    local firstDigitOdd\n    local\
    \ lastDigitOdd\n    local firstDigitEven\n    local lastDigitEven\n    local firstDigitOdd\n\
    \    local lastDigitOdd\n    local firstDigitEven\n    local lastDigitEven\n \
    \   local firstDigitOdd\n    local lastDigitOdd\n    local firstDigitEven\n  \
    \  local lastDigitEven\n    local firstDigitOdd\n    local lastDigitOdd\n    local\
    \ firstDigitEven\n    local lastDigitEven\n    local firstDigitOdd\n    local\
    \ lastDigitOdd\n    local firstDigitEven\n    local lastDigitEven\n    local firstDigitOdd\n\
    \    local lastDigitOdd\n    local firstDigitEven\n    local lastDigitEven\n \
    \   local firstDigitOdd\n    local lastDigitOdd\n    local firstDigitEven\n  \
    \  local lastDigitEven\n    local firstDigitOdd\n    local lastDigitOdd\n    local\
    \ firstDigitEven\n    local lastDigitEven\n    local firstDigitOdd\n    local\
    \ lastDigitOdd\n    local firstDigitEven\n    local lastDigitEven\n    local firstDigitOdd\n",
  "    local array=\"$1\"\n    local count=0\n    for element in ${array[@]}; do\n\
    \        if [[ ${element} -gt 10 ]]; then\n            if [[ ${element} -le 10\
    \ ]]; then\n                if [[ ${element} -le ${element%?} ]]; then\n     \
    \               if [[ ${element%?} -eq 0 ]]; then\n                        if\
    \ [[ ${element%?} -eq 1 ]]; then\n                            count=$((count+1))\n\
    \                        fi\n                    fi\n                fi\n    \
    \        fi\n        fi\n    done\n    echo \"$count\"", "    local arr=( $1 )\n\
    \    local count=0\n    for num in \"${arr[@]}\"; do\n        if (( num > 10 ));\
    \ then\n            if (( num % 2 == 0 )); then\n                if (( num % 2\
    \ == 1 )); then\n                    count=$(( count + 1 ))\n                fi\n\
    \            fi\n        fi\n    done\n    echo \"$count\"", "    local arr=$1\n\
    \    local count=0\n    local firstOdd=0\n    local lastOdd=0\n    local firstOddDigit=0\n\
    \    local lastOddDigit=0\n    local firstOddDigit2=0\n    local lastOddDigit2=0\n\
    \    local firstOddDigit3=0\n    local lastOddDigit3=0\n    local firstOddDigit4=0\n\
    \    local lastOddDigit4=0\n    local firstOddDigit5=0\n    local lastOddDigit5=0\n\
    \    local firstOddDigit6=0\n    local lastOddDigit6=0\n    local firstOddDigit7=0\n\
    \    local lastOddDigit7=0\n    local firstOddDigit8=0\n    local lastOddDigit8=0\n\
    \    local firstOddDigit9=0\n    local lastOddDigit9=0\n    local firstOddDigit10=0\n\
    \    local lastOddDigit10=0\n    local firstOddDigit11=0\n    local lastOddDigit11=0\n\
    \    local firstOddDigit12=0\n    local lastOddDigit12=0\n    local firstOddDigit13=0\n\
    \    local lastOddDigit13=0\n    local firstOddDigit14=0\n    local lastOddDigit14=0\n\
    \    local firstOddDigit15=0\n    local lastOddDigit15=0\n    local firstOddDigit16=0\n\
    \    local lastOddDigit16=0\n    local firstOddDigit17=0\n    local lastOddDigit17=0\n\
    \    local firstOddDigit18=0\n    local lastOddDigit18=0\n    local firstOddDigit19=0\n\
    \    local lastOddDigit19=0\n    local firstOddDigit20=0\n    local lastOddDigit20=0\n\
    \    local firstOddDigit21=0\n    local lastOddDigit21=0\n    local firstOddDigit22=0\n\
    \    local lastOddDigit22=0\n    local firstOddDigit23=0\n    local lastOddDigit23=0\n\
    \    local firstOddDigit24=0\n    local lastOddDigit24=0\n    local firstOddDigit25=0\n\
    \    local lastOddDigit25=0\n    local firstOddDigit26=0\n    local lastOddDigit26=0\n\
    \    local firstOddDigit27=0\n    local lastOddDigit27=0\n    local first", " \
    \   local arr=( $1 )\n    local count=0\n    local firstOdd=0\n    local lastOdd=0\n\
    \    local firstEven=0\n    local lastEven=0\n    for (( i=0; i<${#arr[@]}; i++\
    \ )); do\n        local value=${arr[$i]}\n        if (( value >= 10 )); then\n\
    \            (( firstOdd += value % 2 ))\n            (( lastOdd += value % 2\
    \ ))\n        else\n            (( firstEven += value % 2 ))\n            (( lastEven\
    \ += value % 2 ))\n        fi\n    done\n    if (( firstOdd && lastOdd )); then\n\
    \        (( count += 1 ))\n    elif (( firstEven && lastEven )); then\n      \
    \  (( count += 1 ))\n    fi\n    echo \"$count\"", "    local numbers=$1\n   \
    \ local count=0\n    for number in $numbers; do\n        if [[ $number -gt 10\
    \ ]]; then\n            if [[ $((number % 2)) -eq 1 ]]; then\n               \
    \ if [[ $((number % 10)) -eq 1 ]]; then\n                    count=$((count+1))\n\
    \                fi\n            fi\n        fi\n    done\n    echo \"$count\"",
  "    local numbers=$1\n    local count=0\n    for number in $numbers\n    do\n \
    \       if (( $(echo \"$number > 10\" | bc -l) )); then\n            if (( $(echo\
    \ \"$number % 2 != 0\" | bc -l) ));then\n                if (( $(echo \"$number\
    \ % 2 != 0\" | bc -l) ));then\n                    if (( $(echo \"$number % 2\
    \ != 0\" | bc -l) ));then\n                        (( count++ ))\n           \
    \         fi\n                fi\n            fi\n        fi\n    done\n    echo\
    \ \"$count\"", "    local array=\"$1\"\n    local count=0\n    local firstOdd=0\n\
    \    local lastOdd=0\n    local firstEven=0\n    local lastEven=0\n    local firstDigit=0\n\
    \    local lastDigit=0\n    local digit\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s", "    local array=\"$1\"\n\
    \    local count=0\n    local element\n    local first\n    local last\n    local\
    \ element1\n    local element2\n    local element3\n    local element4\n    local\
    \ element5\n    local element6\n    local element7\n    local element8\n    local\
    \ element9\n    local element10\n    local element11\n    local element12\n  \
    \  local element13\n    local element14\n    local element15\n    local element16\n\
    \    local element17\n    local element18\n    local element19\n    local element20\n\
    \    local element21\n    local element22\n    local element23\n    local element24\n\
    \    local element25\n    local element26\n    local element27\n    local element28\n\
    \    local element29\n    local element30\n    local element31\n    local element32\n\
    \    local element33\n    local element34\n    local element35\n    local element36\n\
    \    local element37\n    local element38\n    local element39\n    local element40\n\
    \    local element41\n    local element42\n    local element43\n    local element44\n\
    \    local element45\n    local element46\n    local element47\n    local element48\n\
    \    local element49\n    local element50\n    local element51\n    local element52\n\
    \    local element53\n    local element54\n    local element55\n    local element56\n\
    \    local element57\n    local element58\n    local element59\n    local element60\n\
    \    local element61\n    local element62\n    local element63\n    local element64\n\
    \    local element65\n    local element66\n    local element67\n    local element68\n\
    \    local element69\n    local element70\n    local element71\n    local element72\n\
    \    local element73\n    local element74\n    local element75\n    local element76\n\
    \    local element77\n    local element78\n    local element79\n    local element80\n\
    \    local element81\n    local element82\n    local element83\n    local element84\n\
    \    local element85\n    local element86\n    local element87\n    local element88\n\
    \    local element89\n    local element90\n    local element91\n    local element92\n\
    \    local element93\n    local element94\n    local element95\n    local element96\n\
    \    local element97\n    local element98", "    local arr=( $1 )\n    local count=0\n\
    \    local firstOdd=0\n    local lastOdd=0\n    local firstEven=0\n    local lastEven=0\n\
    \    local first=0\n    local last=0\n    local firstDigit=0\n    local lastDigit=0\n\
    \    local digit=0\n    local digit2=0\n    local digit3=0\n    local digit4=0\n\
    \    local digit5=0\n    local digit6=0\n    local digit7=0\n    local digit8=0\n\
    \    local digit9=0\n    local digit10=0\n    local digit11=0\n    local digit12=0\n\
    \    local digit13=0\n    local digit14=0\n    local digit15=0\n    local digit16=0\n\
    \    local digit17=0\n    local digit18=0\n    local digit19=0\n    local digit20=0\n\
    \    local digit21=0\n    local digit22=0\n    local digit23=0\n    local digit24=0\n\
    \    local digit25=0\n    local digit26=0\n    local digit27=0\n    local digit28=0\n\
    \    local digit29=0\n    local digit30=0\n    local digit31=0\n    local digit32=0\n\
    \    local digit33=0\n    local digit34=0\n    local digit35=0\n    local digit36=0\n\
    \    local digit37=0\n    local digit38=0\n    local digit39=0\n    local digit40=0\n\
    \    local digit41=0\n    local digit42=0\n    local digit43=0\n    local digit44=0\n\
    \    local digit45=0\n    local digit46=0\n    local digit47=0\n    local digit48=0\n\
    \    local digit49=0\n    local digit50=0\n    local digit51=0\n    local digit52=0\n\
    \    local digit53=0\n    local digit54=0\n    local digit55=0\n    local digit56=0\n\
    \    local digit57=0\n    local digit58=0\n    local digit59=0\n    local digit60=0\n\
    \    local digit61=0\n    local digit62=0\n    local digit63=0\n    local digit64=0\n\
    \    local digit65=0\n    local digit66=0\n    local digit67=0\n    local digit68=0\n\
    \    local digit69=0\n    local digit70=0\n    local digit71=0\n    local digit72=0\n\
    \    local digit73=0\n    local digit74=0\n    local digit75=0\n    ", "    local\
    \ arr=( $1 )\n    local count=0\n    for i in \"${arr[@]}\"; do\n        if [[\
    \ $i -gt 10 ]]; then\n            if [[ $i -le 9 ]]; then\n                if\
    \ [[ $i -le $(( 10#$(( $(echo \"$i\" | cut -d' ' -f1) & 1 )) )) ]]; then\n   \
    \                 if [[ $i -le $(( 10#$(( $(echo \"$i\" | cut -d' ' -f2) & 1 ))\
    \ )) ]]; then\n                        count=$(( count + 1 ))\n              \
    \      fi\n                fi\n            fi\n        fi\n    done\n    echo\
    \ \"$count\"", "    local numbers=$1\n    local count=0\n    for number in $numbers;\
    \ do\n        if [ $number -gt 10 ] && [ $(( $number % 2 )) -eq 1 ] && [ $(( $number\
    \ % 10 )) -eq 1 ]; then\n            (( count++ ))\n        fi\n    done\n   \
    \ echo \"$count\"", "  local numbers=$1\n  local count=0\n  local digits=0\n \
    \ local firstDigit=0\n  local lastDigit=0\n  local firstOdd=0\n  local lastOdd=0\n\
    \  local firstEven=0\n  local lastEven=0\n  local firstOddLastEven=0\n  local\
    \ lastOddLastEven=0\n  local firstEvenLastOdd=0\n  local lastEvenLastOdd=0\n \
    \ local firstOddLastEvenLastOdd=0\n  local lastOddLastEvenLastOdd=0\n  local firstEvenLastOddLastEven=0\n\
    \  local lastEvenLastOddLastEven=0\n  local firstOddLastEvenLastOddLastEven=0\n\
    \  local lastOddLastEvenLastOddLastEven=0\n  local firstEvenLastOddLastEvenLastOdd=0\n\
    \  local lastEvenLastOddLastEvenLastOdd=0\n  local firstOddLastEvenLastOddLastEvenLastOdd=0\n\
    \  local lastOddLastEvenLastOddLastEvenLastOdd=0\n  local firstEvenLastOddLastEvenLastOddLastEven=0\n\
    \  local lastEvenLastOddLastEvenLastOddLastEvenLastOdd=0\n  local firstOddLastEvenLastOddLastEvenLastOddLastEven=0\n\
    \  local lastOddLastEvenLastOddLastEvenLastOddLastEvenLastOdd=0\n  local firstEvenLastOddLastEvenLastOddLastEvenLastOddLastEven=0\n\
    \  local lastEvenLastOddLastEvenLastOddLastEvenLastOddLastEvenLastOdd=0\n  local\
    \ firstOddLastEvenLastOddLastEvenLastOddLastEvenLastOddLastEven=0\n  local lastOddLastEvenLastOddLastEvenLastOddLastEvenLastOddLastEvenLastOdd=0\n\
    \  local firstEvenLastOddLastEvenLastOddLastEvenLastOddLastEvenLastOddLastEven=0\n\
    \  local lastEvenLastOddLastEvenLastOddLastEvenLastOddLastEvenLastOddLastEvenLastOdd=0\n\
    \  local firstOddLastEvenLastOddLastEvenLastOddLastEvenLastOddLastEvenLastOddLastEven=0\n\
    \  local lastOddLastEvenLastOddLastEvenLastOddLastEvenLastOddLastEvenLastOddLastEvenLastO",
  "    local arr=( $1 )\n    local count=0\n    local firstOdd=0\n    local lastOdd=0\n\
    \    local firstEven=0\n    local lastEven=0\n    for (( i=0; i<${#arr[@]}; i++\
    \ )); do\n        if (( ${arr[$i]} > 10 )); then\n            if (( ${arr[$i]}\
    \ % 2 )); then\n                if (( ${arr[$i]} % 2 )); then\n              \
    \      lastEven=$(( ${arr[$i]} / 2 ))\n                else\n                \
    \    firstEven=$(( ${arr[$i]} / 2 ))\n                fi\n            else\n \
    \               if (( ${arr[$i]} % 2 )); then\n                    firstOdd=$((\
    \ ${arr[$i]} / 2 ))\n                else\n                    lastOdd=$(( ${arr[$i]}\
    \ / 2 ))\n                fi\n            fi\n        fi\n    done\n    echo $((\
    \ ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]}\
    \ - $(( ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]}\
    \ - $(( ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]}\
    \ - $(( ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]}\
    \ - $(( ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]}\
    \ - $(( ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]}\
    \ - $(( ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]} - $(( ${#arr[@]",
  "    local numbers=$1\n    local count=0\n    for number in $numbers; do\n     \
    \   if [[ $number -gt 10 ]] && \\\n           [[ $number -le 10 && $number % 2\
    \ -eq 1 ]] && \\\n           [[ $number % 2 -eq 0 && $number % 2 -eq 1 ]]; then\n\
    \            ((count++))\n        fi\n    done\n    echo \"$count\"", "    local\
    \ numbers=$1\n    local count=0\n    local firstOdd=0\n    local lastOdd=0\n \
    \   local firstOddCount=0\n    local lastOddCount=0\n    local firstLastOdd=0\n\
    \    local lastLastOdd=0\n    local firstLastOddCount=0\n    local lastLastOddCount=0\n\
    \    local firstLastLastOdd=0\n    local lastLastLastOdd=0\n    local firstLastLastOddCount=0\n\
    \    local lastLastLastOddCount=0\n    local firstLastLastLastOdd=0\n    local\
    \ lastLastLastLastOdd=0\n    local firstLastLastLastOddCount=0\n    local lastLastLastLastOddCount=0\n\
    \    local firstLastLastLastOddCount=0\n    local lastLastLastLastOddCount=0\n\
    \    local firstLastLastLastOddCount=0\n    local lastLastLastLastOddCount=0\n\
    \    local firstLastLastLastOddCount=0\n    local lastLastLastLastOddCount=0\n\
    \    local firstLastLastLastOddCount=0\n    local lastLastLastLastOddCount=0\n\
    \    local firstLastLastLastOddCount=0\n    local lastLastLastLastOddCount=0\n\
    \    local firstLastLastLastOddCount=0\n    local lastLastLastLastOddCount=0\n\
    \    local firstLastLastLastOddCount=0\n    local lastLastLastLastOddCount=0\n\
    \    local firstLastLastLastOddCount=0\n    local lastLastLastLastOddCount=0\n\
    \    local firstLastLastLastOddCount=0\n    local lastLastLastLastOddCount=0\n\
    \    local firstLastLastLastOddCount=0\n    local lastLastLastLastOddCount=0\n\
    \    local firstLastLastLastOddCount=0\n    local lastLastLastLastOddCount=0\n\
    \    local firstLastLastLastOddCount=0\n    local lastLastLastLastOddCount=0\n\
    \    local firstLastLastLastOddCount=0\n    local lastLastLastLastOddCount=0\n\
    \    local firstLastLastLastOddCount=0\n    local lastLastLastLastOddCount=0\n\
    \    local firstLastLastLastOddCount=0\n    local lastLastLastLastOddCount=0\n\
    \    local firstLastLastLastOddCount=0\n    local lastLastLastLastOddCount=0\n\
    \    local firstLastLast", "    local numbers=$1\n    local count=0\n    for number\
    \ in $numbers\n    do\n        if [[ $number -gt 10 ]] && [[ $((number%2)) -eq\
    \ 1 ]]\n        then\n            ((count++))\n        fi\n    done\n    echo\
    \ \"$count\""]
stop_tokens:
- "\n}"

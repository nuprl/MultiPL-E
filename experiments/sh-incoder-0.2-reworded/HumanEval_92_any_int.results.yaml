language: sh
name: HumanEval_92_any_int
results:
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local a b c\n  a=$1\n  b=$2\n  c=$3\n\
    \  (( ${a} == ${b} )) && return 0\n  (( ${a} > ${b} )) && return 0\n  (( ${a}\
    \ < ${b} )) && return 0\n  (( ${a} > ${c} )) && return 0\n  (( ${a} < ${c} ))\
    \ && return 0\n  return 1\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    local sum\n    local\
    \ result\n\n    a=$1\n    b=$2\n    c=$3\n\n    sum=$((a + b + c))\n    if [ $sum\
    \ -eq $((a + b + c)) ]; then\n        result=\"true\"\n    else\n        result=\"\
    false\"\n    fi\n    echo \"$result\"\n}\n\ncandidate() {\n    any_int \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5wt367ng.sh: line 27: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=0\n    if [ $a -eq $sum\
    \ ]\n    then\n        is_int=1\n    fi\n    if [ $b -eq $sum ]\n    then\n  \
    \      is_int=1\n    fi\n    if [ $c -eq $sum ]\n    then\n        is_int=1\n\
    \    fi\n    if [ $is_int -eq 1 ]\n    then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local isint=0\n    if [ $a -eq $sum\
    \ ]; then\n        isint=1\n    fi\n    if [ $b -eq $sum ]; then\n        isint=1\n\
    \    fi\n    if [ $c -eq $sum ]; then\n        isint=1\n    fi\n    if [ $isint\
    \ -eq 1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n   \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -gt $b ] || [ $a -eq $b ] || [ $a -lt $b ]; then\n     \
    \   return 0\n    elif [ $a -eq $c ] || [ $a -eq $b ] || [ $a -eq $c ]; then\n\
    \        return 1\n    elif [ $a -eq $c ] || [ $a -eq $b ] || [ $a -eq $c ]; then\n\
    \        return 1\n    elif [ $a -eq $c ] || [ $a -eq $b ] || [ $a -eq $c ]; then\n\
    \        return 1\n    elif [ $a -eq $c ] || [ $a -eq $b ] || [ $a -eq $c ]; then\n\
    \        return 1\n    elif [ $a -eq $c ] || [ $a -eq $b ] || [ $a -eq $c ]; then\n\
    \        return 1\n    elif [ $a -eq $c ] || [ $a -eq $b ] || [ $a -eq $c ]; then\n\
    \        return 1\n    elif [ $a -eq $c ] || [ $a -eq $b ] || [ $a -eq $c ]; then\n\
    \        return 1\n    elif [ $a -eq $c ] || [ $a -eq $b ] || [ $a -eq $c ]; then\n\
    \        return 1\n    elif [ $a -eq $c ] || [ $a -eq $b ] || [ $a -eq $c ]; then\n\
    \        return 1\n    elif [ $a -eq $c ] || [ $a -eq $b ] || [ $a -eq $c ]; then\n\
    \        return 1\n    elif [ $a -eq $c ] || [ $a -eq $b ] || [ $a -eq $c ]; then\n\
    \        return 1\n    elif [ $a -eq $c ] || [ $a -eq $b ] || [ $a -eq $c ]; then\n\
    \        return 1\n    elif [ $a -eq $c ] || [ $a -eq $b ] || [ $a -eq $c ]; then\n\
    \        return 1\n    elif [ $a -eq $c ] || [ $a -eq $b ] || [ $a -eq $c ]; then\n\
    \        return 1\n    elif [ $a -eq $c ] || [ $a -eq $b ] || [ $a -eq $c ]; then\n\
    \        return 1\n    elif [ $a -eq $c ] || [ $a -eq $b ] || [ $a -eq $c ]; then\n\
    \        return 1\n    elif [ $a -eq $c ] || [ $a -eq $b ] || [ $a -eq $c ]; then\n\
    \        return 1\n    elif [ $a -eq $c ] || [ $a -eq $b ] || [ $a -eq $c ]; then\n\
    \        return 1\n    elif [ $a -eq $c ] || [ $a -eq $b ] || [ $a -eq\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphkirxdym.sh: line 62: syntax error near unexpected token `}''

    /tmp/tmphkirxdym.sh: line 62: `}''

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local a=\"$1\"\n  local b=\"$2\"\n  local\
    \ c=\"$3\"\n  local sum=\"$((a + b + c))\"\n  local is_int=\"$((a % 1 == 0 &&\
    \ b % 1 == 0 && c % 1 == 0))\"\n  [[ \"$sum\" -eq \"$a\" || \"$sum\" -eq \"$b\"\
    \ || \"$sum\" -eq \"$c\" ]] && return \"$is_int\"\n  return \"$is_int\"\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -gt $b ]]; then\n        if [[ $a -gt $c ]]; then\n   \
    \         echo \"true\"\n        else\n            echo \"false\"\n        fi\n\
    \    else\n        if [[ $b -gt $c ]]; then\n            echo \"true\"\n     \
    \   else\n            echo \"false\"\n        fi\n    fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxljm2ukp.sh: line 23: [[: 2.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    /tmp/tmpxljm2ukp.sh: line 23: [[: 1.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    /tmp/tmpxljm2ukp.sh: line 30: [[: 3.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=false\n    if [ $a -eq\
    \ $sum ]; then\n        is_int=true\n    fi\n    if [ $b -eq $sum ]; then\n  \
    \      is_int=true\n    fi\n    if [ $c -eq $sum ]; then\n        is_int=true\n\
    \    fi\n    return $is_int\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpdoqztr4x.sh: line 33: return: false: numeric argument required

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local int1=$(echo $a | sed 's/\\.//g')\n\
    \    local int2=$(echo $b | sed 's/\\.//g')\n    local int3=$(echo $c | sed 's/\\\
    .//g')\n    if [ $int1 -eq $sum ] && [ $int2 -eq $sum ] && [ $int3 -eq $sum ];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local IFS=.\n    local a=$1\n    local\
    \ b=$2\n    local c=$3\n    local sum=$((a + b + c))\n    local sum2=$((a + b\
    \ + c))\n    local sum3=$((a + b + c))\n    local sum4=$((a + b + c))\n    local\
    \ sum5=$((a + b + c))\n    local sum6=$((a + b + c))\n    local sum7=$((a + b\
    \ + c))\n    local sum8=$((a + b + c))\n    local sum9=$((a + b + c))\n    local\
    \ sum10=$((a + b + c))\n    local sum11=$((a + b + c))\n    local sum12=$((a +\
    \ b + c))\n    local sum13=$((a + b + c))\n    local sum14=$((a + b + c))\n  \
    \  local sum15=$((a + b + c))\n    local sum16=$((a + b + c))\n    local sum17=$((a\
    \ + b + c))\n    local sum18=$((a + b + c))\n    local sum19=$((a + b + c))\n\
    \    local sum20=$((a + b + c))\n    local sum21=$((a + b + c))\n    local sum22=$((a\
    \ + b + c))\n    local sum23=$((a + b + c))\n    local sum24=$((a + b + c))\n\
    \    local sum25=$((a + b + c))\n    local sum26=$((a + b + c))\n    local sum27=$((a\
    \ + b + c))\n    local sum28=$((a + b + c))\n    local sum29=$((a + b + c))\n\
    \    local sum30=$((a + b + c))\n    local sum31=$((a + b + c))\n    local sum32=$((a\
    \ + b + c))\n    local sum33=$((a + b + c))\n    local sum34=$((a + b + c))\n\
    \    local sum35=$((a + b + c))\n    local sum36=$((a + b + c))\n    local sum37=$((a\
    \ + b + c))\n    local sum38=$((a + b + c))\n    local sum39=$((a + b + c))\n\
    \    local sum40=$((a + b + c))\n    local sum41=$((a + b\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq59yo_jd.sh: line 63: unexpected EOF while looking for matching
    `)''

    /tmp/tmpq59yo_jd.sh: line 85: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ \"$a\" -eq \"$b\" ] && [ \"$b\" -eq \"$c\" ] ; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local float1 float2 float3\n    float1=$1\n\
    \    float2=$2\n    float3=$3\n    if [[ $float1 =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n\
    \        if [[ $float2 =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n            if [[ $float3\
    \ =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n                if (( ${#float1} > 0 && ${#float2}\
    \ > 0 && ${#float3} > 0 )) ; then\n                    (( ${#float1} > ${#float2}\
    \ )) || return 0\n                    (( ${#float1} > ${#float3} )) || return\
    \ 0\n                    (( ${#float2} > ${#float3} )) || return 0\n         \
    \           (( ${#float1} == ${#float2} && ${#float1} == ${#float3} )) || return\
    \ 0\n                    return 1\n                else\n                    return\
    \ 0\n                fi\n            else\n                return 0\n        \
    \    fi\n        else\n            return 0\n        fi\n    else\n        return\
    \ 0\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    if [[ $a =~ ^-?[0-9]+\\.?[0-9]*$ ]] && [[ $b =~ ^-?[0-9]+\\.?[0-9]*$\
    \ ]] && [[ $c =~ ^-?[0-9]+\\.?[0-9]*$ ]]; then\n        local sum=$(( ${a}+${b}+${c}\
    \ ))\n        if [[ $sum -eq $a ]] || [[ $sum -eq $b ]] || [[ $sum -eq $c ]];\
    \ then\n            return 1\n        else\n            return 0\n        fi\n\
    \    else\n        return 0\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c d e\n    local sum\n  \
    \  local sum2\n    local sum3\n    local sum4\n    local sum5\n    local sum6\n\
    \    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local sum11\n\
    \    local sum12\n    local sum13\n    local sum14\n    local sum15\n    local\
    \ sum16\n    local sum17\n    local sum18\n    local sum19\n    local sum20\n\
    \    local sum21\n    local sum22\n    local sum23\n    local sum24\n    local\
    \ sum25\n    local sum26\n    local sum27\n    local sum28\n    local sum29\n\
    \    local sum30\n    local sum31\n    local sum32\n    local sum33\n    local\
    \ sum34\n    local sum35\n    local sum36\n    local sum37\n    local sum38\n\
    \    local sum39\n    local sum40\n    local sum41\n    local sum42\n    local\
    \ sum43\n    local sum44\n    local sum45\n    local sum46\n    local sum47\n\
    \    local sum48\n    local sum49\n    local sum50\n    local sum51\n    local\
    \ sum52\n    local sum53\n    local sum54\n    local sum55\n    local sum56\n\
    \    local sum57\n    local sum58\n    local sum59\n    local sum60\n    local\
    \ sum61\n    local sum62\n    local sum63\n    local sum64\n    local sum65\n\
    \    local sum66\n    local sum67\n    local sum68\n    local sum69\n    local\
    \ sum70\n    local sum71\n    local sum72\n    local sum73\n    local sum74\n\
    \    local sum75\n    local sum76\n    local sum77\n    local sum78\n    local\
    \ sum79\n    local sum80\n    local sum81\n    local sum82\n    local sum83\n\
    \    local sum84\n    local sum85\n    local sum86\n    local sum87\n    local\
    \ sum88\n    local sum89\n    local sum90\n    local sum91\n    local sum92\n\
    \    local sum93\n    local sum94\n    local sum95\n    local sum96\n    local\
    \ sum97\n    local sum98\n    local sum99\n    local sum100\n    local sum101\n\
    \n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local IFS=.\n    local a=\"$1\"\n \
    \   local b=\"$2\"\n    local c=\"$3\"\n    local sum=\"$((a + b + c))\"\n   \
    \ local i\n    local result\n    for ((i=1; i<=3; i++)); do\n        result=\"\
    $((a + (b * i) + (c * i)))\"\n        if [ \"$result\" == \"$sum\" ]; then\n \
    \           return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c sum\n    a=${1%%.*}\n \
    \   b=${2%%.*}\n    c=${3%%.*}\n    sum=$(( $a + $b + $c ))\n    if [ $sum -eq\
    \ $a -o $sum -eq $b ]; then\n        echo \"true\"\n    else\n        echo \"\
    false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local sum=$(( $1 + $2 ))\n    local\
    \ sum2=$(( $1 + $3 ))\n    local sum3=$(( $2 + $3 ))\n    if [ \"$sum\" -eq \"\
    $sum2\" -a \"$sum\" -eq \"$sum3\" ]; then\n        echo \"true\"\n    else\n \
    \       echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -gt $b ] || [ $a -eq $b ]; then\n        if [ $a -eq $c\
    \ ]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    else\n        if [ $b -eq $c ]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local sum=$(( $1 + $2 ))\n    local\
    \ int=$(( $1 + $2 ))\n    local diff=$(( $3 - $int ))\n    if [ $diff -eq 0 ];\
    \ then\n        echo $(( $sum == $3 ))\n    else\n        echo $(( $sum != $3\
    \ ))\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local a=$1\n  local b=$2\n  local c=$3\n\
    \  local sum\n  local result\n  sum=$((a + b + c))\n  result=$((a != sum || b\
    \ != sum || c != sum))\n  echo \"$result\"\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local isint=0\n    if [ $a -eq $sum\
    \ ]\n    then\n        isint=1\n    fi\n    if [ $b -eq $sum ]\n    then\n   \
    \     isint=1\n    fi\n    if [ $c -eq $sum ]\n    then\n        isint=1\n   \
    \ fi\n    if [ $isint -eq 1 ]\n    then\n        echo \"true\"\n    else\n   \
    \     echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local float1=$1\n    local float2=$2\n\
    \    local float3=$3\n    if [[ $float1 =~ ^-?[0-9]+\\.[0-9]+$ ]] && [[ $float2\
    \ =~ ^-?[0-9]+\\.[0-9]+$ ]] && [[ $float3 =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n  \
    \      local sum=$(( ${float1} + ${float2} + ${float3} ))\n        local sum1=$(echo\
    \ $sum | cut -d \".\" -f 1)\n        local sum2=$(echo $sum | cut -d \".\" -f\
    \ 2)\n        local sum3=$(echo $sum | cut -d \".\" -f 3)\n        if [[ $sum1\
    \ == $sum2 ]] && [[ $sum1 == $sum3 ]]; then\n            echo \"true\"\n     \
    \   else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local sum=$(( $1 + $2 ))\n    local\
    \ num1=$1\n    local num2=$2\n    local num3=$3\n    if [ \"$num1\" -gt \"$num2\"\
    \ ] || [ \"$num1\" -eq \"$num2\" ] && [ \"$num1\" -eq \"$num3\" ]; then\n    \
    \    echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    if [ \"$a\" == \"$c\" ] || [ \"$b\" == \"$c\" ] ; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n   \
    \ any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=false\n    if [ $sum -eq\
    \ $((a + b + c)) ]; then\n        is_int=true\n    fi\n    return $is_int\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3sxp64vb.sh: line 27: return: true: numeric argument required

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    if [[ \"$a\" == \"$c\" || \"$b\" == \"$c\" ]]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n   \
    \ any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local isint=false\n    if [ $a -eq $sum\
    \ ] && [ $b -eq $sum ] && [ $c -eq $sum ]; then\n        isint=true\n    fi\n\
    \    return $isint\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6_r6_lgs.sh: line 27: return: false: numeric argument required

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=0\n    if [ $a -eq $sum\
    \ ]; then\n        is_int=1\n    elif [ $b -eq $sum ]; then\n        is_int=1\n\
    \    elif [ $c -eq $sum ]; then\n        is_int=1\n    fi\n    return $is_int\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    if [[ $sum -eq $((a + b + c)) ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgosfb1cv.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=false\n    if [ $sum -eq\
    \ $((a + b + c)) ]; then\n        is_int=true\n    fi\n    return $is_int\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3sxp64vb.sh: line 27: return: true: numeric argument required

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a+b+c))\n    local is_int=false\n    if [ $sum -eq $a\
    \ ] || [ $sum -eq $b ] || [ $sum -eq $c ]; then\n        is_int=true\n    fi\n\
    \    return $is_int\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp37rs3j2n.sh: line 27: return: false: numeric argument required

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n       \
    \ echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ \"$a\" == \"$c\" ]\n    then\n        if [ \"$b\" == \"$c\"\
    \ ]\n        then\n            return 0\n        else\n            return 1\n\
    \        fi\n    else\n        return 1\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local a b c\n  a=$1\n  b=$2\n  c=$3\n\
    \  if [[ $a -eq $b && $a -eq $c ]]; then\n    echo \"true\"\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a+b+c))\n    local is_int=0\n    if [ $sum -eq $a ] ||\
    \ [ $sum -eq $b ] || [ $sum -eq $c ]\n    then\n        is_int=1\n    fi\n   \
    \ return $is_int\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local a b c\n  a=$1\n  b=$2\n  c=$3\n\
    \  if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n    echo \"true\"\
    \n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local float1 float2 float3\n    float1=$1\n\
    \    float2=$2\n    float3=$3\n    if [[ $float1 =~ ^[0-9]+\\.[0-9]+$ ]] && [[\
    \ $float2 =~ ^[0-9]+\\.[0-9]+$ ]] && [[ $float3 =~ ^[0-9]+\\.[0-9]+$ ]]; then\n\
    \        echo \"$float1 $float2 $float3\"\n        if (( $float1 + $float2 ==\
    \ $float3 )); then\n            echo \"true\"\n        else\n            echo\
    \ \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=0\n    if [ $a -eq $sum\
    \ ]\n    then\n        is_int=1\n    fi\n    if [ $b -eq $sum ]\n    then\n  \
    \      is_int=1\n    fi\n    if [ $c -eq $sum ]\n    then\n        is_int=1\n\
    \    fi\n    if [ $is_int -eq 1 ]\n    then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local sum=$(( $1 + $2 ))\n  local sum2=$((\
    \ $1 + $3 ))\n  local sum3=$(( $2 + $3 ))\n  local sum4=$(( $1 + $2 ))\n  local\
    \ sum5=$(( $1 + $3 ))\n  local sum6=$(( $2 + $3 ))\n  local sum7=$(( $1 + $2 ))\n\
    \  local sum8=$(( $1 + $3 ))\n  local sum9=$(( $2 + $3 ))\n  local sum10=$(( $1\
    \ + $2 ))\n  local sum11=$(( $1 + $3 ))\n  local sum12=$(( $2 + $3 ))\n  local\
    \ sum13=$(( $1 + $2 ))\n  local sum14=$(( $1 + $3 ))\n  local sum15=$(( $2 + $3\
    \ ))\n  local sum16=$(( $1 + $2 ))\n  local sum17=$(( $1 + $3 ))\n  local sum18=$((\
    \ $2 + $3 ))\n  local sum19=$(( $1 + $2 ))\n  local sum20=$(( $1 + $3 ))\n  local\
    \ sum21=$(( $2 + $3 ))\n  local sum22=$(( $1 + $2 ))\n  local sum23=$(( $1 + $3\
    \ ))\n  local sum24=$(( $2 + $3 ))\n  local sum25=$(( $1 + $2 ))\n  local sum26=$((\
    \ $1 + $3 ))\n  local sum27=$(( $2 + $3 ))\n  local sum28=$(( $1 + $2 ))\n  local\
    \ sum29=$(( $1 + $3 ))\n  local sum30=$(( $2 + $3 ))\n  local sum31=$(( $1 + $2\
    \ ))\n  local sum32=$(( $1 + $3 ))\n  local sum33=$(( $2 + $3 ))\n  local sum34=$((\
    \ $1 + $2 ))\n  local sum35=$(( $1 + $3 ))\n  local sum36=$(( $2 + $3 ))\n  local\
    \ sum37=$(( $1 + $2 ))\n  local sum38=$(( $1 + $3 ))\n  local sum39=$(( $2 + $3\
    \ ))\n  local sum40=$(( $1 + $2 ))\n  local sum41=$(( $1 + $3 ))\n  local sum42=$((\
    \ $2 + $3 ))\n  local sum43=$(( $1 + $\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8ftg41ip.sh: line 61: unexpected EOF while looking for matching
    `)''

    /tmp/tmp8ftg41ip.sh: line 83: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local sum=$(( $1 + $2 ))\n    local\
    \ diff=$(( $3 - $2 ))\n    local diff2=$(( $3 - $1 ))\n    local diff3=$(( $1\
    \ + $3 ))\n    local diff4=$(( $1 + $2 ))\n    local diff5=$(( $2 + $3 ))\n  \
    \  local diff6=$(( $2 + $1 ))\n    local diff7=$(( $3 + $1 ))\n    local diff8=$((\
    \ $3 + $2 ))\n    local diff9=$(( $1 + $3 ))\n    local diff10=$(( $2 + $3 ))\n\
    \    local diff11=$(( $2 + $1 ))\n    local diff12=$(( $3 + $1 ))\n    local diff13=$((\
    \ $3 + $2 ))\n    local diff14=$(( $1 + $3 ))\n    local diff15=$(( $2 + $3 ))\n\
    \    local diff16=$(( $2 + $1 ))\n    local diff17=$(( $3 + $1 ))\n    local diff18=$((\
    \ $3 + $2 ))\n    local diff19=$(( $1 + $3 ))\n    local diff20=$(( $2 + $3 ))\n\
    \    local diff21=$(( $2 + $1 ))\n    local diff22=$(( $3 + $1 ))\n    local diff23=$((\
    \ $3 + $2 ))\n    local diff24=$(( $1 + $3 ))\n    local diff25=$(( $2 + $3 ))\n\
    \    local diff26=$(( $2 + $1 ))\n    local diff27=$(( $3 + $1 ))\n    local diff28=$((\
    \ $3 + $2 ))\n    local diff29=$(( $1 + $3 ))\n    local diff30=$(( $2 + $3 ))\n\
    \    local diff31=$(( $2 + $1 ))\n    local diff32=$(( $3 + $1 ))\n    local diff33=$((\
    \ $3 + $2 ))\n    local diff34=$(( $1 + $3 ))\n    local diff35=$(( $2 + $3 ))\n\
    \    local diff36=$(( $2 + $1 ))\n    local diff37=$(( $3 + $1 ))\n    local diff38=$((\
    \ $3 + $2 ))\n    local diff39=$(( $1 + $3 ))\n    local diff40=$(( $2 + $3 ))\n\
    \    local diff41=$(( $2 + $1 ))\n    local diff42=$(( $3 + $1 \n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps54gc26l.sh: line 61: unexpected EOF while looking for matching
    `)''

    /tmp/tmps54gc26l.sh: line 83: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=0\n    if [[ $sum -eq $((\
    \ 10#$sum )) == 1 ]]; then\n        is_int=1\n    fi\n    if [[ $sum -eq $(( 10#$sum\
    \ )) == 0 ]]; then\n        is_int=0\n    fi\n    if [[ $sum -eq $(( 10#$sum ))\
    \ == -1 ]]; then\n        is_int=0\n    fi\n    if [[ $sum -eq $(( 10#$sum ))\
    \ == -2 ]]; then\n        is_int=0\n    fi\n    if [[ $sum -eq $(( 10#$sum ))\
    \ == -3 ]]; then\n        is_int=0\n    fi\n    if [[ $sum -eq $(( 10#$sum ))\
    \ == -4 ]]; then\n        is_int=0\n    fi\n    if [[ $sum -eq $(( 10#$sum ))\
    \ == -5 ]]; then\n        is_int=0\n    fi\n    if [[ $sum -eq $(( 10#$sum ))\
    \ == -6 ]]; then\n        is_int=0\n    fi\n    if [[ $sum -eq $(( 10#$sum ))\
    \ == -7 ]]; then\n        is_int=0\n    fi\n    if [[ $sum -eq $(( 10#$sum ))\
    \ == -8 ]]; then\n        is_int=0\n    fi\n    if [[ $sum -eq $(( 10#$sum ))\
    \ == -9 ]]; then\n        is_int=0\n    fi\n    if [[ $sum -eq $(( 10#$sum ))\
    \ == -10 ]]; then\n        is_int=0\n    fi\n    if [[ $sum -eq $(( 10#$sum ))\
    \ == -11 ]]; then\n        is_int=0\n    fi\n    if [[ $sum -eq $(( 10#$sum ))\
    \ == -12 ]]; then\n        is_int=0\n    fi\n    if [[ $sum -eq $(( 10#$sum ))\
    \ == -13 ]]; then\n        is_int=0\n    fi\n    if [[ $sum -eq $(( 10#$sum ))\
    \ == -14 ]]; then\n        is_int=0\n    fi\n    if [[ $sum -eq $(( 10#$sum ))\
    \ == -15 ]]; then\n        is_int=0\n    fi\n    if [[ $sum -eq $(( 10#$sum ))\
    \ == -16 ]]; then\n        is_int=0\n    fi\n    if [[ $sum -eq $(( 10#$sum ))\
    \ == -17 ]]; then\n        is_int=0\n    fi\n    if [[ $sum -eq $(( 10#$sum ))\
    \ == -18 ]]; then\n        is_int=0\n    fi\n\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb6yb2y0j.sh: line 24: syntax error in conditional expression

    /tmp/tmpb6yb2y0j.sh: line 24: syntax error near `==''

    /tmp/tmpb6yb2y0j.sh: line 24: `    if [[ $sum -eq $(( 10#$sum )) == 1 ]]; then''

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -gt $b ]]; then\n        if [[ $a -gt $c ]]; then\n   \
    \         echo \"true\"\n        else\n            echo \"false\"\n        fi\n\
    \    else\n        if [[ $b -gt $c ]]; then\n            echo \"true\"\n     \
    \   else\n            echo \"false\"\n        fi\n    fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxljm2ukp.sh: line 23: [[: 2.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    /tmp/tmpxljm2ukp.sh: line 23: [[: 1.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    /tmp/tmpxljm2ukp.sh: line 30: [[: 3.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    if [[ $a =~ ^[0-9]+$ ]] && [[ $b =~ ^[0-9]+$ ]] && [[ $c =~ ^[0-9]+$\
    \ ]]; then\n        (( $a + $b | bc) == $c )\n    else\n        false\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplse6n1rs.sh: line 23: syntax error near unexpected token `==''

    /tmp/tmplse6n1rs.sh: line 23: `        (( $a + $b | bc) == $c )''

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=false\n    if [ \"$sum\"\
    \ -eq \"$a\" ] || [ \"$sum\" -eq \"$b\" ] || [ \"$sum\" -eq \"$c\" ]; then\n \
    \       is_int=true\n    fi\n    echo \"$is_int\"\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local float1=$1\n  local float2=$2\n\
    \  local float3=$3\n  local sum=$(( float1 + float2 + float3 ))\n  local int1=$(echo\
    \ $sum | awk '{print $1}')\n  local int2=$(echo $sum | awk '{print $2}')\n  local\
    \ int3=$(echo $sum | awk '{print $3}')\n  local int4=$(echo $sum | awk '{print\
    \ $4}')\n  local int5=$(echo $sum | awk '{print $5}')\n  local int6=$(echo $sum\
    \ | awk '{print $6}')\n  local int7=$(echo $sum | awk '{print $7}')\n  local int8=$(echo\
    \ $sum | awk '{print $8}')\n  local int9=$(echo $sum | awk '{print $9}')\n  local\
    \ int10=$(echo $sum | awk '{print $10}')\n  local int11=$(echo $sum | awk '{print\
    \ $11}')\n  local int12=$(echo $sum | awk '{print $12}')\n  local int13=$(echo\
    \ $sum | awk '{print $13}')\n  local int14=$(echo $sum | awk '{print $14}')\n\
    \  local int15=$(echo $sum | awk '{print $15}')\n  local int16=$(echo $sum | awk\
    \ '{print $16}')\n  local int17=$(echo $sum | awk '{print $17}')\n  local int18=$(echo\
    \ $sum | awk '{print $18}')\n  local int19=$(echo $sum | awk '{print $19}')\n\
    \  local int20=$(echo $sum | awk '{print $20}')\n  local int21=$(echo $sum | awk\
    \ '{print $21}')\n  local int22=$(echo $sum | awk '{print $22}')\n  local int23=$(echo\
    \ $sum | awk '{print $23}')\n  local int24=$(echo $sum | awk '{print $24}')\n\
    \  local int25=$(echo $sum | awk '{print $25}')\n  local int26=$(echo $sum | awk\
    \ '{print $26}')\n  local int27=$(echo $sum | awk '{print $27}')\n  local int28=$(echo\
    \ $sum | awk '{print $28}')\n  local int29=$(echo $sum | awk '{print $29}')\n\
    \  local int30=$(echo $sum | awk '{print $30}')\n  local int31=$(echo $sum | awk\
    \ '{print $31}')\n  local int32=$(echo $sum | awk '{print $\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0ci7ygc5.sh: line 54: unexpected EOF while looking for matching
    `''''

    /tmp/tmp0ci7ygc5.sh: line 76: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ \"$a\" -eq \"$b\" ] && [ \"$b\" -eq \"$c\" ] ; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local sum2=$(echo \"$sum\" | bc)\n \
    \   if [ \"$sum2\" -eq \"$sum\" ]; then\n        echo \"true\"\n    else\n   \
    \     echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsrzpoteq.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c sum\n    a=$1\n    b=$2\n\
    \    c=$3\n    sum=$((a + b + c))\n    if [ $sum -eq $((a + b + c)) ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq5z23z11.sh: line 23: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local a b c\n  a=$1\n  b=$2\n  c=$3\n\
    \  if [[ $a =~ ^[0-9]+\\.[0-9]+$ ]] && [[ $b =~ ^[0-9]+\\.[0-9]+$ ]] && [[ $c\
    \ =~ ^[0-9]+\\.[0-9]+$ ]]; then\n    echo $(( 10#${a}+10#${b}+10#${c} ))\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local float1=$1\n  local float2=$2\n\
    \  local float3=$3\n  local sum=$((float1 + float2 + float3))\n  local int1=$(echo\
    \ $sum | bc)\n  local int2=$(echo $sum | bc)\n  local int3=$(echo $sum | bc)\n\
    \  if [ \"$int1\" -eq \"$int2\" -a \"$int2\" -eq \"$int3\" ]; then\n    echo \"\
    true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpucxv_zu_.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local IFS=.\n    local sum=$(( $1 +\
    \ $2 ))\n    local sum2=$(( $1 + $3 ))\n    local sum3=$(( $2 + $3 ))\n    local\
    \ sum4=$(( $1 + $2 ))\n    local sum5=$(( $1 + $3 ))\n    local sum6=$(( $2 +\
    \ $3 ))\n    local sum7=$(( $1 + $2 ))\n    local sum8=$(( $1 + $3 ))\n    local\
    \ sum9=$(( $2 + $3 ))\n    local sum10=$(( $1 + $2 ))\n    local sum11=$(( $1\
    \ + $3 ))\n    local sum12=$(( $2 + $3 ))\n    local sum13=$(( $1 + $2 ))\n  \
    \  local sum14=$(( $1 + $3 ))\n    local sum15=$(( $2 + $3 ))\n    local sum16=$((\
    \ $1 + $2 ))\n    local sum17=$(( $1 + $3 ))\n    local sum18=$(( $2 + $3 ))\n\
    \    local sum19=$(( $1 + $2 ))\n    local sum20=$(( $1 + $3 ))\n    local sum21=$((\
    \ $2 + $3 ))\n    local sum22=$(( $1 + $2 ))\n    local sum23=$(( $1 + $3 ))\n\
    \    local sum24=$(( $2 + $3 ))\n    local sum25=$(( $1 + $2 ))\n    local sum26=$((\
    \ $1 + $3 ))\n    local sum27=$(( $2 + $3 ))\n    local sum28=$(( $1 + $2 ))\n\
    \    local sum29=$(( $1 + $3 ))\n    local sum30=$(( $2 + $3 ))\n    local sum31=$((\
    \ $1 + $2 ))\n    local sum32=$(( $1 + $3 ))\n    local sum33=$(( $2 + $3 ))\n\
    \    local sum34=$(( $1 + $2 ))\n    local sum35=$(( $1 + $3 ))\n    local sum36=$((\
    \ $2 + $3 ))\n    local sum37=$(( $1 + $2 ))\n    local sum38=$(( $1 + $3 ))\n\
    \    local sum39=$(( $2 + $3 ))\n    local sum40=$(( $1 + $2 ))\n    local sum41=$((\
    \ $1 + $3 ))\n    local sum42=$(( $2 + $3 ))\n    local \n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=0\n    local is_float=0\n\
    \    local is_equal=0\n    local is_zero=0\n    local is_negative=0\n    local\
    \ is_positive=0\n    local is_zero=0\n    local is_negative=0\n    local is_positive=0\n\
    \    local is_zero=0\n    local is_negative=0\n    local is_positive=0\n    local\
    \ is_zero=0\n    local is_negative=0\n    local is_positive=0\n    local is_zero=0\n\
    \    local is_negative=0\n    local is_positive=0\n    local is_zero=0\n    local\
    \ is_negative=0\n    local is_positive=0\n    local is_zero=0\n    local is_negative=0\n\
    \    local is_positive=0\n    local is_zero=0\n    local is_negative=0\n    local\
    \ is_positive=0\n    local is_zero=0\n    local is_negative=0\n    local is_positive=0\n\
    \    local is_zero=0\n    local is_negative=0\n    local is_positive=0\n    local\
    \ is_zero=0\n    local is_negative=0\n    local is_positive=0\n    local is_zero=0\n\
    \    local is_negative=0\n    local is_positive=0\n    local is_zero=0\n    local\
    \ is_negative=0\n    local is_positive=0\n    local is_zero=0\n    local is_negative=0\n\
    \    local is_positive=0\n    local is_zero=0\n    local is_negative=0\n    local\
    \ is_positive=0\n    local is_zero=0\n    local is_negative=0\n    local is_positive=0\n\
    \    local is_zero=0\n    local is_negative=0\n    local is_positive=0\n    local\
    \ is_zero=0\n    local is_negative=0\n    local is_positive=0\n    local is_zero=0\n\
    \    local is_negative=0\n    local is_positive=0\n    local is_zero=0\n    local\
    \ is_negative=0\n    local is_positive=0\n    local is_zero=0\n    local is_negative=0\n\
    \    local is_positive=0\n    local is_zero=0\n    local is_negative=0\n    local\
    \ is_positive=0\n    local is_zero=0\n    local is_negative=0\n    local is_positive=0\n\
    \    local is_zero=0\n    local is_negative=0\n    local is_positive=0\n    local\
    \ is_zero=0\n    local is_negative=0\n    local is_positive=0\n    local is_zero=0\n\
    \    local is_negative=0\n    local is_\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    if [[ $sum -eq $((a + b + c)) ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgosfb1cv.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local a b c sum\n  a=$1\n  b=$2\n  c=$3\n\
    \  sum=$((a + b + c))\n  echo $((a != sum && b != sum && c != sum))\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c d e\n    a=$1\n    b=$2\n\
    \    c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=false\n    if [ \"$sum\"\
    \ -eq \"$a\" ] || [ \"$sum\" -eq \"$b\" ] || [ \"$sum\" -eq \"$c\" ]; then\n \
    \       is_int=true\n    fi\n    echo \"$is_int\"\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local float1=$1\n  local float2=$2\n\
    \  local float3=$3\n  local sum=$(echo \"$float1 + $float2 + $float3\" | bc)\n\
    \  local is_int=$(echo \"$sum\" | bc)\n  if [ \"$is_int\" = \"1\" ]; then\n  \
    \  echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    IFS=.\n    a=$1\n\
    \    b=$2\n    c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a+b+c))\n    local int1=$(echo $a | sed 's/\\.//g')\n\
    \    local int2=$(echo $b | sed 's/\\.//g')\n    local int3=$(echo $c | sed 's/\\\
    .//g')\n    local int4=$(echo $sum | sed 's/\\.//g')\n    if [ $int1 == $int2\
    \ ] && [ $int2 == $int3 ] && [ $int3 == $int4 ]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local float1=$1\n    local float2=$2\n\
    \    local float3=$3\n    local sum=$((float1 + float2 + float3))\n    if [ $sum\
    \ -eq $((float1 + float2 + float3)) ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpror9n2ej.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local float1=$1\n    local float2=$2\n\
    \    local float3=$3\n    local sum=$((float1 + float2 + float3))\n    if [[ $sum\
    \ -eq $((float1 + float2 + float3)) ]]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5pxjsfhf.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c d e\n    local sum\n  \
    \  local i\n    a=$1\n    b=$2\n    c=$3\n    if [[ $a =~ ^-?[0-9]+\\.?[0-9]*$\
    \ ]] && [[ $b =~ ^-?[0-9]+\\.?[0-9]*$ ]] && [[ $c =~ ^-?[0-9]+\\.?[0-9]*$ ]];\
    \ then\n        sum=$(( ${b}+${c} ))\n        if (( ${a} == ${sum} )) ; then\n\
    \            echo \"true\"\n        else\n            echo \"false\"\n       \
    \ fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a+b+c))\n    local is_int=0\n    if [ $sum -eq $a ] ||\
    \ [ $sum -eq $b ] || [ $sum -eq $c ]; then\n        is_int=1\n    fi\n    return\
    \ $is_int\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n   \
    \ else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local float1=$1\n  local float2=$2\n\
    \  local float3=$3\n  local sum=$(echo \"$float1 + $float2 + $float3\" | bc)\n\
    \  local is_int=$(echo \"$sum\" | bc)\n  local is_float=$(echo \"$sum\" | bc)\n\
    \  if [[ \"$is_int\" == \"$sum\" ]]\n  then\n    echo \"true\"\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c sum\n    local IFS=.\n\
    \    read a b c <<< \"$@\"\n    sum=$(( $a + $b ))\n    [ $sum -eq $c ] && return\
    \ 0\n    return 1\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpykkn5v2i.sh: line 22: 2 3 1 +  : syntax error in expression (error
    token is "3 1 +  ")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c sum\n    IFS=.\n    a=$1\n\
    \    b=$2\n    c=$3\n    sum=$((a + b + c))\n    echo $(( $a == $sum && $b ==\
    \ $sum && $c == $sum))\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local float1=$1\n  local float2=$2\n\
    \  local float3=$3\n  local sum=$((float1 + float2 + float3))\n  local is_int=0\n\
    \  if [ \"$sum\" -eq \"$float1\" ]; then\n    is_int=1\n  fi\n  if [ \"$sum\"\
    \ -eq \"$float2\" ]; then\n    is_int=1\n  fi\n  if [ \"$sum\" -eq \"$float3\"\
    \ ]; then\n    is_int=1\n  fi\n  if [ \"$is_int\" -eq \"1\" ]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c d e\n    a=$1\n    b=$2\n\
    \    c=$3\n    if [[ $a =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n        if [[ $b =~ ^-?[0-9]+\\\
    .[0-9]+$ ]]; then\n            if [[ $c =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n    \
    \            d=$(echo \"$a + $b + $c\" | bc)\n                if [[ $d -eq $a\
    \ || $d -eq $b || $d -eq $c ]]; then\n                    return 0\n         \
    \       else\n                    return 1\n                fi\n            else\n\
    \                return 1\n            fi\n        else\n            return 1\n\
    \        fi\n    else\n        return 1\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n        if [[ $b =~ ^-?[0-9]+\\\
    .[0-9]+$ ]]; then\n            if [[ $c =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n    \
    \            if (( $a + $b + $c | bc -l )); then\n                    return 0\n\
    \                else\n                    return 1\n                fi\n    \
    \        else\n                return 1\n            fi\n        else\n      \
    \      return 1\n        fi\n    else\n        return 1\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local a b c\n  a=$1\n  b=$2\n  c=$3\n\
    \  (( ${a} == ${b} )) && return 0\n  (( ${a} < ${b} )) && return 0\n  (( ${a}\
    \ > ${c} )) && return 0\n  return 1\n}\n\ncandidate() {\n    any_int \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=0\n    if [ $sum -eq $((a\
    \ + b + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a + b + c))\
    \ ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a + b + c)) ]; then\n\
    \        is_int=1\n    fi\n    if [ $sum -eq $((a + b + c)) ]; then\n        is_int=1\n\
    \    fi\n    if [ $sum -eq $((a + b + c)) ]; then\n        is_int=1\n    fi\n\
    \    if [ $sum -eq $((a + b + c)) ]; then\n        is_int=1\n    fi\n    if [\
    \ $sum -eq $((a + b + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq\
    \ $((a + b + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a + b\
    \ + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a + b + c)) ];\
    \ then\n        is_int=1\n    fi\n    if [ $sum -eq $((a + b + c)) ]; then\n \
    \       is_int=1\n    fi\n    if [ $sum -eq $((a + b + c)) ]; then\n        is_int=1\n\
    \    fi\n    if [ $sum -eq $((a + b + c)) ]; then\n        is_int=1\n    fi\n\
    \    if [ $sum -eq $((a + b + c)) ]; then\n        is_int=1\n    fi\n    if [\
    \ $sum -eq $((a + b + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq\
    \ $((a + b + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a + b\
    \ + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a + b + c)) ];\
    \ then\n        is_int=1\n    fi\n    if [ $sum -eq $((a + b + c)) ]; then\n \
    \       is_int=1\n    fi\n    if [ $sum -eq $((a + b + c)) ]; then\n        is_int=1\n\
    \    fi\n    if [ $sum -eq $((a + b + c)) ]; then\n        is_int=1\n    fi\n\
    \    if [ $sum -eq $((a + b + c)) ]; then\n        is_int=1\n    fi\n    if [\
    \ $sum -eq $((a + b + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq\
    \ $((a + b + c)) ]; then\n        is_int=1\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo32fku7u.sh: line 95: syntax error near unexpected token `}''

    /tmp/tmpo32fku7u.sh: line 95: `}''

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local float1 float2 float3\n    float1=$1\n\
    \    float2=$2\n    float3=$3\n    if [[ $float1 =~ ^[0-9]+\\.[0-9]+$ ]]; then\n\
    \        float1=\"${float1}.0\"\n    fi\n    if [[ $float2 =~ ^[0-9]+\\.[0-9]+$\
    \ ]]; then\n        float2=\"${float2}.0\"\n    fi\n    if [[ $float3 =~ ^[0-9]+\\\
    .[0-9]+$ ]]; then\n        float3=\"${float3}.00\"\n    fi\n    local sum=$(echo\
    \ \"$float1 + $float2 + $float3\" | bc)\n    if [[ $sum =~ ^[0-9]+$ ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local IFS=.\n  local sum=$(( $1 + $2\
    \ ))\n  local sum2=$(( $1 + $3 ))\n  local sum3=$(( $2 + $3 ))\n  local sum4=$((\
    \ $1 + $2 ))\n  local sum5=$(( $2 + $1 ))\n  local sum6=$(( $3 + $1 ))\n  local\
    \ sum7=$(( $3 + $2 ))\n  local sum8=$(( $1 + $3 ))\n  local sum9=$(( $2 + $3 ))\n\
    \  local sum10=$(( $3 + $1 ))\n  local sum11=$(( $3 + $2 ))\n  local sum12=$((\
    \ $1 + $3 ))\n  local sum13=$(( $2 + $3 ))\n  local sum14=$(( $3 + $1 ))\n  local\
    \ sum15=$(( $3 + $2 ))\n  local sum16=$(( $1 + $3 ))\n  local sum17=$(( $2 + $3\
    \ ))\n  local sum18=$(( $3 + $1 ))\n  local sum19=$(( $3 + $2 ))\n  local sum20=$((\
    \ $1 + $3 ))\n  local sum21=$(( $2 + $3 ))\n  local sum22=$(( $3 + $1 ))\n  local\
    \ sum23=$(( $3 + $2 ))\n  local sum24=$(( $1 + $3 ))\n  local sum25=$(( $2 + $3\
    \ ))\n  local sum26=$(( $3 + $1 ))\n  local sum27=$(( $3 + $2 ))\n  local sum28=$((\
    \ $1 + $3 ))\n  local sum29=$(( $2 + $3 ))\n  local sum30=$(( $3 + $1 ))\n  local\
    \ sum31=$(( $3 + $2 ))\n  local sum32=$(( $1 + $3 ))\n  local sum33=$(( $2 + $3\
    \ ))\n  local sum34=$(( $3 + $1 ))\n  local sum35=$(( $3 + $2 ))\n  local sum36=$((\
    \ $1 + $3 ))\n  local sum37=$(( $2 + $3 ))\n  local sum38=$(( $3 + $1 ))\n  local\
    \ sum39=$(( $3 + $2 ))\n  local sum40=$(( $1 + $3 ))\n  local sum41=$(( $2 + $3\
    \ ))\n  local sum42=$(( $3 + $1 ))\n  local \n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=false\n    if [ $a -eq\
    \ $sum ]\n    then\n        is_int=true\n    fi\n    if [ $b -eq $sum ]\n    then\n\
    \        is_int=true\n    fi\n    if [ $c -eq $sum ]\n    then\n        is_int=true\n\
    \    fi\n    if [ $is_int == true ]\n    then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local IFS=.\n    local sum=$(( $1 +\
    \ $2 ))\n    local sum2=$(( $1 + $3 ))\n    local sum3=$(( $2 + $3 ))\n    local\
    \ sum4=$(( $1 + $2 ))\n    local sum5=$(( $2 + $1 ))\n    local sum6=$(( $1 +\
    \ $3 ))\n    local sum7=$(( $3 + $1 ))\n    local sum8=$(( $3 + $2 ))\n    local\
    \ sum9=$(( $3 + $3 ))\n    local sum10=$(( $1 + $2 ))\n    local sum11=$(( $2\
    \ + $1 ))\n    local sum12=$(( $1 + $3 ))\n    local sum13=$(( $3 + $1 ))\n  \
    \  local sum14=$(( $3 + $2 ))\n    local sum15=$(( $3 + $3 ))\n    local sum16=$((\
    \ $1 + $2 ))\n    local sum17=$(( $2 + $1 ))\n    local sum18=$(( $1 + $3 ))\n\
    \    local sum19=$(( $3 + $1 ))\n    local sum20=$(( $3 + $2 ))\n    local sum21=$((\
    \ $3 + $3 ))\n    local sum22=$(( $1 + $2 ))\n    local sum23=$(( $2 + $1 ))\n\
    \    local sum24=$(( $1 + $3 ))\n    local sum25=$(( $3 + $1 ))\n    local sum26=$((\
    \ $3 + $2 ))\n    local sum27=$(( $3 + $3 ))\n    local sum28=$(( $1 + $2 ))\n\
    \    local sum29=$(( $2 + $1 ))\n    local sum30=$(( $1 + $3 ))\n    local sum31=$((\
    \ $3 + $1 ))\n    local sum32=$(( $3 + $2 ))\n    local sum33=$(( $3 + $3 ))\n\
    \    local sum34=$(( $1 + $2 ))\n    local sum35=$(( $2 + $1 ))\n    local sum36=$((\
    \ $1 + $3 ))\n    local sum37=$(( $3 + $1 ))\n    local sum38=$(( $3 + $2 ))\n\
    \    local sum39=$(( $3 + $3 ))\n    local sum40=$(( $1 + $2 ))\n    local sum41=$((\
    \ $2 + $1 ))\n    local sum42=$(( $1 + $3 ))\n    local \n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local isint=false\n    if [ $sum -eq\
    \ $((a + b + c)) ]; then\n        isint=true\n    fi\n    if [ $sum -eq $((a -\
    \ b - c)) ]; then\n        isint=true\n    fi\n    if [ $sum -eq $((a - b + c))\
    \ ]; then\n        isint=true\n    fi\n    if [ $sum -eq $((a + b - c)) ]; then\n\
    \        isint=true\n    fi\n    if [ $sum -eq $((a + b + c)) ]; then\n      \
    \  isint=true\n    fi\n    if [ $isint ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp437p1n_8.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c sum\n    a=$1\n    b=$2\n\
    \    c=$3\n    sum=$((a+b+c))\n    if [ \"$sum\" -eq \"$a\" ] || [ \"$sum\" -eq\
    \ \"$b\" ] || [ \"$sum\" -eq \"$c\" ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local IFS=.\n  local a=\"$1\"\n  local\
    \ b=\"$2\"\n  local c=\"$3\"\n  local sum=\"$((a+b+c))\"\n  local sum2=\"$((a*b*c))\"\
    \n  local sum3=\"$((a+b*c))\"\n  local sum4=\"$((a*b+c))\"\n  local sum5=\"$((a+b+c*2))\"\
    \n  local sum6=\"$((a*b*c*2))\"\n  local sum7=\"$((a+b*c*2))\"\n  local sum8=\"\
    $((a*b+c*2))\"\n  local sum9=\"$((a+b+c*3))\"\n  local sum10=\"$((a*b*c*3))\"\n\
    \  local sum11=\"$((a+b*c*3))\"\n  local sum12=\"$((a*b+c*3))\"\n  local sum13=\"\
    $((a+b+c*4))\"\n  local sum14=\"$((a*b*c*4))\"\n  local sum15=\"$((a+b*c*4))\"\
    \n  local sum16=\"$((a*b+c*4))\"\n  local sum17=\"$((a+b+c*5))\"\n  local sum18=\"\
    $((a*b*c*5))\"\n  local sum19=\"$((a+b*c*5))\"\n  local sum20=\"$((a*b+c*5))\"\
    \n  local sum21=\"$((a+b+c*6))\"\n  local sum22=\"$((a*b*c*6))\"\n  local sum23=\"\
    $((a+b*c*6))\"\n  local sum24=\"$((a*b+c*6))\"\n  local sum25=\"$((a+b+c*7))\"\
    \n  local sum26=\"$((a*b*c*7))\"\n  local sum27=\"$((a+b*c*7))\"\n  local sum28=\"\
    $((a*b+c*7))\"\n  local sum29=\"$((a+b+c*8))\"\n  local sum30=\"$((a*b*c*8))\"\
    \n  local sum31=\"$((a+b*c*8))\"\n  local sum32=\"$((a*b+c*8))\"\n  local sum33=\"\
    $((a+b+c*9))\"\n  local sum34=\"$((a*b*c*9))\"\n  local sum35=\"$((a+b*c*9))\"\
    \n  local sum36=\"$((a*b+c*9))\"\n  local \n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=0\n    if [ $sum -eq $((a\
    \ + b + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a - b - c))\
    \ ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a - b + c)) ]; then\n\
    \        is_int=1\n    fi\n    if [ $sum -eq $((a + b - c)) ]; then\n        is_int=1\n\
    \    fi\n    if [ $sum -eq $((a + b + c)) ]; then\n        is_int=1\n    fi\n\
    \    if [ $sum -eq $((a - b - c)) ]; then\n        is_int=1\n    fi\n    if [\
    \ $sum -eq $((a - b + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq\
    \ $((a + b - c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a + b\
    \ + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a - b - c)) ];\
    \ then\n        is_int=1\n    fi\n    if [ $sum -eq $((a - b + c)) ]; then\n \
    \       is_int=1\n    fi\n    if [ $sum -eq $((a + b - c)) ]; then\n        is_int=1\n\
    \    fi\n    if [ $sum -eq $((a + b + c)) ]; then\n        is_int=1\n    fi\n\
    \    if [ $sum -eq $((a - b - c)) ]; then\n        is_int=1\n    fi\n    if [\
    \ $sum -eq $((a - b + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq\
    \ $((a + b - c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a + b\
    \ + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a - b - c)) ];\
    \ then\n        is_int=1\n    fi\n    if [ $sum -eq $((a - b + c)) ]; then\n \
    \       is_int=1\n    fi\n    if [ $sum -eq $((a + b - c)) ]; then\n        is_int=1\n\
    \    fi\n    if [ $sum -eq $((a + b + c)) ]; then\n        is_int=1\n    fi\n\
    \    if [ $sum -eq $((a - b - c)) ]; then\n        is_int=1\n    fi\n    if [\
    \ $sum -eq $((a - b + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq\
    \ $((a + b - c)) ]; then\n        is_int=1\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu6jja0gc.sh: line 95: syntax error near unexpected token `}''

    /tmp/tmpu6jja0gc.sh: line 95: `}''

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -gt $b ] || [ $a -eq $b ] || [ $a -lt $b ]; then\n     \
    \   echo \"false\"\n    else\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ \"$a\" -eq \"$b\" ] && [ \"$b\" -eq \"$c\" ]; then\n      \
    \  echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local float1=$1\n  local float2=$2\n\
    \  local float3=$3\n  local sum=$((float1 + float2 + float3))\n  local int1=$(echo\
    \ $sum | bc)\n  local int2=$(echo $sum | bc)\n  local int3=$(echo $sum | bc)\n\
    \  local int4=$(echo $sum | bc)\n  local int5=$(echo $sum | bc)\n  local int6=$(echo\
    \ $sum | bc)\n  local int7=$(echo $sum | bc)\n  local int8=$(echo $sum | bc)\n\
    \  local int9=$(echo $sum | bc)\n  local int10=$(echo $sum | bc)\n  local int11=$(echo\
    \ $sum | bc)\n  local int12=$(echo $sum | bc)\n  local int13=$(echo $sum | bc)\n\
    \  local int14=$(echo $sum | bc)\n  local int15=$(echo $sum | bc)\n  local int16=$(echo\
    \ $sum | bc)\n  local int17=$(echo $sum | bc)\n  local int18=$(echo $sum | bc)\n\
    \  local int19=$(echo $sum | bc)\n  local int20=$(echo $sum | bc)\n  local int21=$(echo\
    \ $sum | bc)\n  local int22=$(echo $sum | bc)\n  local int23=$(echo $sum | bc)\n\
    \  local int24=$(echo $sum | bc)\n  local int25=$(echo $sum | bc)\n  local int26=$(echo\
    \ $sum | bc)\n  local int27=$(echo $sum | bc)\n  local int28=$(echo $sum | bc)\n\
    \  local int29=$(echo $sum | bc)\n  local int30=$(echo $sum | bc)\n  local int31=$(echo\
    \ $sum | bc)\n  local int32=$(echo $sum | bc)\n  local int33=$(echo $sum | bc)\n\
    \  local int34=$(echo $sum | bc)\n  local int35=$(echo $sum | bc)\n  local int36=$(echo\
    \ $sum | bc)\n  local int37=$(echo $sum | bc)\n  local int38=$(echo $sum | bc)\n\
    \  local int39=$(echo $sum | bc)\n  local int40=$(echo $sum | bc)\n  local int41=$(echo\
    \ $sum | bc)\n  local int42=$(echo $sum | bc)\n  local int43=$(echo $sum | bc)\n\
    \  local int44=$(\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmponst_mpf.sh: line 66: unexpected EOF while looking for matching
    `)''

    /tmp/tmponst_mpf.sh: line 88: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ \"$a\" -eq \"$b\" ] && [ \"$b\" -eq \"$c\" ]; then\n      \
    \  echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n   \
    \ else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -gt $b ]]; then\n        if [[ $a -eq $b ]]; then\n   \
    \         if [[ $a -eq $c ]]; then\n                return 0\n            else\n\
    \                return 1\n            fi\n        else\n            return 1\n\
    \        fi\n    else\n        if [[ $b -gt $c ]]; then\n            if [[ $b\
    \ -eq $c ]]; then\n                if [[ $b -eq $a ]]; then\n                \
    \    return 0\n                else\n                    return 1\n          \
    \      fi\n            else\n                return 1\n            fi\n      \
    \  else\n            if [[ $c -eq $a ]]; then\n                return 0\n    \
    \        else\n                return 1\n            fi\n        fi\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    if [ $sum -eq $((a + b + c)) ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1he5gwmo.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=0\n    if [ $sum -eq $((a\
    \ + b + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a + b)) ];\
    \ then\n        is_int=1\n    fi\n    if [ $sum -eq $((b + c)) ]; then\n     \
    \   is_int=1\n    fi\n    if [ $sum -eq $((a + c)) ]; then\n        is_int=1\n\
    \    fi\n    if [ $sum -eq $((b + a)) ]; then\n        is_int=1\n    fi\n    if\
    \ [ $sum -eq $((c + a)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((b\
    \ + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((c + b)) ]; then\n\
    \        is_int=1\n    fi\n    if [ $is_int -eq 1 ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv943v6a6.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a =~ ^[0-9]+\\.[0-9]+$ ]] && [[ $b =~ ^[0-9]+\\.[0-9]+$ ]]\
    \ && [[ $c =~ ^[0-9]+\\.[0-9]+$ ]]; then\n        echo \"$(( ${a} + ${b} + ${c}\
    \ ))\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local float1=$1\n    local float2=$2\n\
    \    local float3=$3\n    local sum=$((float1 + float2 + float3))\n    if [[ $sum\
    \ -eq $((float1 + float2 + float3)) ]]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5pxjsfhf.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n   \
    \ else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    if [[ $sum -eq $((a + b + c)) ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgosfb1cv.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ \"$a\" -eq \"$b\" ] && [ \"$b\" -eq \"$c\" ]; then\n      \
    \  echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    if [ $sum -eq $((a + b + c)) ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1he5gwmo.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c d e\n    a=$1\n    b=$2\n\
    \    c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$(( $a + $b ))\n    local diff=$(( $a - $b ))\n    local\
    \ diff2=$(( $a - $c ))\n    local diff3=$(( $b - $c ))\n    if [ $sum -eq $c ]\n\
    \    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local float1=$1\n  local float2=$2\n\
    \  local float3=$3\n  local sum=$((float1 + float2 + float3))\n  local is_int=false\n\
    \  if [[ $sum -eq $((float1 + float2 + float3)) ]]; then\n    is_int=true\n  fi\n\
    \  echo $is_int\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7emuczbf.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a+b+c))\n    local sum2=$(echo \"$sum\" | bc)\n    if\
    \ [ \"$sum2\" -eq \"$sum\" ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyimlv2hq.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local sum=$(( $1 + $2 ))\n  local num1=$1\n\
    \  local num2=$2\n  local num3=$3\n  local num4=$(( $num1 + $num2 ))\n  local\
    \ num5=$(( $num3 + $num4 ))\n  local num6=$(( $num5 + $num1 ))\n  local num7=$((\
    \ $num6 + $num2 ))\n  local num8=$(( $num7 + $num3 ))\n  local num9=$(( $num8\
    \ + $num4 ))\n  local num10=$(( $num9 + $num5 ))\n  local num11=$(( $num10 + $num6\
    \ ))\n  local num12=$(( $num11 + $num7 ))\n  local num13=$(( $num12 + $num8 ))\n\
    \  local num14=$(( $num13 + $num9 ))\n  local num15=$(( $num14 + $num10 ))\n \
    \ local num16=$(( $num15 + $num11 ))\n  local num17=$(( $num16 + $num12 ))\n \
    \ local num18=$(( $num17 + $num13 ))\n  local num19=$(( $num18 + $num14 ))\n \
    \ local num20=$(( $num19 + $num15 ))\n  local num21=$(( $num20 + $num16 ))\n \
    \ local num22=$(( $num21 + $num17 ))\n  local num23=$(( $num22 + $num18 ))\n \
    \ local num24=$(( $num23 + $num19 ))\n  local num25=$(( $num24 + $num20 ))\n \
    \ local num26=$(( $num25 + $num21 ))\n  local num27=$(( $num26 + $num22 ))\n \
    \ local num28=$(( $num27 + $num23 ))\n  local num29=$(( $num28 + $num24 ))\n \
    \ local num30=$(( $num29 + $num25 ))\n  local num31=$(( $num30 + $num26 ))\n \
    \ local num32=$(( $num31 + $num27 ))\n  local num33=$(( $num32 + $num28 ))\n \
    \ local num34=$(( $num33 + $num29 ))\n  local num35=$(( $num34 + $num30 ))\n \
    \ local \n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a =~ ^-?[0-9]+\\.?[0-9]*$ ]] && [[ $b =~ ^-?[0-9]+\\.?[0-9]*$\
    \ ]] && [[ $c =~ ^-?[0-9]+\\.?[0-9]*$ ]]; then\n        echo \"$(( ${a}+${b}+${c}\
    \ ))\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -gt $b ]; then\n        if [ $a -eq $c ]; then\n       \
    \     echo \"true\"\n        else\n            echo \"false\"\n        fi\n  \
    \  else\n        if [ $b -eq $c ]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    if [ \"$a\" == \"$c\" ] || [ \"$b\" == \"$c\" ] ; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n   \
    \ any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=0\n    if [[ $sum -eq $((a\
    \ + b + c)) ]]; then\n        is_int=1\n    fi\n    if [[ $sum -eq $((a - b -\
    \ c)) ]]; then\n        is_int=1\n    fi\n    if [[ $sum -eq $((a - b + c)) ]];\
    \ then\n        is_int=1\n    fi\n    if [[ $sum -eq $((a + b - c)) ]]; then\n\
    \        is_int=1\n    fi\n    if [[ $sum -eq $((a + b + c)) ]]; then\n      \
    \  is_int=1\n    fi\n    if [[ $sum -eq $((a - b - c)) ]]; then\n        is_int=1\n\
    \    fi\n    if [[ $sum -eq $((a - b + c)) ]]; then\n        is_int=1\n    fi\n\
    \    if [[ $sum -eq $((a + b - c)) ]]; then\n        is_int=1\n    fi\n    if\
    \ [[ $sum -eq $((a + b + c)) ]]; then\n        is_int=1\n    fi\n    if [[ $sum\
    \ -eq $((a - b - c)) ]]; then\n        is_int=1\n    fi\n    if [[ $sum -eq $((a\
    \ - b + c)) ]]; then\n        is_int=1\n    fi\n    if [[ $sum -eq $((a + b -\
    \ c)) ]]; then\n        is_int=1\n    fi\n    if [[ $sum -eq $((a + b + c)) ]];\
    \ then\n        is_int=1\n    fi\n    if [[ $sum -eq $((a - b - c)) ]]; then\n\
    \        is_int=1\n    fi\n    if [[ $sum -eq $((a - b + c)) ]]; then\n      \
    \  is_int=1\n    fi\n    if [[ $sum -eq $((a + b - c)) ]]; then\n        is_int=1\n\
    \    fi\n    if [[ $sum -eq $((a + b + c)) ]]; then\n        is_int=1\n    fi\n\
    \    if [[ $sum -eq $((a - b - c)) ]]; then\n        is_int=1\n    fi\n    if\
    \ [[ $sum -eq $((a - b + c)) ]]; then\n        is_int=1\n    fi\n    if [[ $sum\
    \ -eq $((a + b - c)) ]]; then\n        is_int=1\n    fi\n    if [[ $sum -eq $((a\
    \ + b + c)) ]]; then\n        is_int=1\n    fi\n    if [[ $sum -eq $((a - b -\
    \ c)) ]]; then\n        is_int=1\n    fi\n    if [[ $sum -eq $((a - b + c)) ]];\
    \ then\n\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8a1sdv8a.sh: line 92: syntax error near unexpected token `}''

    /tmp/tmp8a1sdv8a.sh: line 92: `}''

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -eq $b ]] && [[ $b -eq $c ]] ; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local IFS=.\n    local a=\"$1\"\n \
    \   local b=\"$2\"\n    local c=\"$3\"\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ \"$a\" == \"$c\" ]\n    then\n        if [ \"$b\" == \"$c\"\
    \ ]\n        then\n            echo \"true\"\n        else\n            echo \"\
    false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local float1=$1\n  local float2=$2\n\
    \  local float3=$3\n  local sum=$((float1 + float2 + float3))\n  local int1=$(echo\
    \ $sum | bc)\n  local int2=$(echo $sum | bc)\n  local int3=$(echo $sum | bc)\n\
    \  local int4=$(echo $sum | bc)\n  if [[ $int1 == $int2 || $int1 == $int3 || $int1\
    \ == $int4 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0335gpul.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ \"$a\" -eq \"$b\" ] || [ \"$a\" -eq \"$c\" ] || [ \"$b\" -eq\
    \ \"$c\" ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=0\n    if [ $sum -eq $((a\
    \ + b + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a - b - c))\
    \ ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a - b + c)) ]; then\n\
    \        is_int=1\n    fi\n    if [ $sum -eq $((a + b - c)) ]; then\n        is_int=1\n\
    \    fi\n    if [ $sum -eq $((a + b + c)) ]; then\n        is_int=1\n    fi\n\
    \    if [ $is_int -eq 1 ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz32vyq7_.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c d e\n    local sum\n  \
    \  local n\n    local x\n    local result\n\n    a=$1\n    b=$2\n    c=$3\n\n\
    \    if [[ $a -gt $b ]]; then\n        sum=$a\n    elif [[ $b -gt $c ]]; then\n\
    \        sum=$b\n    elif [[ $c -gt $a ]]; then\n        sum=$c\n    else\n  \
    \      sum=$a+$b+$c\n    fi\n\n    if [[ $sum -eq $a ]]; then\n        result=\"\
    true\"\n    elif [[ $sum -eq $b ]]; then\n        result=\"true\"\n    elif [[\
    \ $sum -eq $c ]]; then\n        result=\"true\"\n    else\n        result=\"false\"\
    \n    fi\n\n    echo $result\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc4lfjyle.sh: line 29: [[: 2.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    /tmp/tmpc4lfjyle.sh: line 33: [[: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    /tmp/tmpc4lfjyle.sh: line 39: [[: 2.5+2+3: syntax error: invalid arithmetic operator
    (error token is ".5+2+3")

    /tmp/tmpc4lfjyle.sh: line 41: [[: 2.5+2+3: syntax error: invalid arithmetic operator
    (error token is ".5+2+3")

    /tmp/tmpc4lfjyle.sh: line 43: [[: 2.5+2+3: syntax error: invalid arithmetic operator
    (error token is ".5+2+3")

    /tmp/tmpc4lfjyle.sh: line 29: [[: 1.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    /tmp/tmpc4lfjyle.sh: line 31: [[: 3.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    /tmp/tmpc4lfjyle.sh: line 33: [[: 3.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    /tmp/tmpc4lfjyle.sh: line 39: [[: 1.5+5+3.5: syntax error: invalid arithmetic
    operator (error token is ".5+5+3.5")

    /tmp/tmpc4lfjyle.sh: line 41: [[: 1.5+5+3.5: syntax error: invalid arithmetic
    operator (error token is ".5+5+3.5")

    /tmp/tmpc4lfjyle.sh: line 43: [[: 1.5+5+3.5: syntax error: invalid arithmetic
    operator (error token is ".5+5+3.5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c d e\n    local sum\n  \
    \  local int\n    local float\n    local str\n    local bool\n    local intstr\n\
    \    local floatstr\n    local boolstr\n    local boolbool\n    local boolint\n\
    \    local boolfloat\n    local boolstrbool\n    local boolboolbool\n    local\
    \ boolboolint\n    local boolboolfloat\n    local boolboolbool\n    local boolboolboolint\n\
    \    local boolboolboolfloat\n    local boolboolboolbool\n    local boolboolboolboolint\n\
    \    local boolboolboolfloat\n    local boolboolboolbool\n    local boolboolboolboolint\n\
    \    local boolboolboolfloat\n    local boolboolboolbool\n    local boolboolboolboolint\n\
    \    local boolboolboolfloat\n    local boolboolboolbool\n    local boolboolboolboolint\n\
    \    local boolboolboolfloat\n    local boolboolboolbool\n    local boolboolboolboolint\n\
    \    local boolboolboolfloat\n    local boolboolboolbool\n    local boolboolboolboolint\n\
    \    local boolboolboolfloat\n    local boolboolboolbool\n    local boolboolboolboolint\n\
    \    local boolboolboolfloat\n    local boolboolboolbool\n    local boolboolboolboolint\n\
    \    local boolboolboolfloat\n    local boolboolboolbool\n    local boolboolboolboolint\n\
    \    local boolboolboolfloat\n    local boolboolboolbool\n    local boolboolboolboolint\n\
    \    local boolboolboolfloat\n    local boolboolboolbool\n    local boolboolboolboolint\n\
    \    local boolboolboolfloat\n    local boolboolboolbool\n    local boolboolboolboolint\n\
    \    local boolboolboolfloat\n    local boolboolboolbool\n    local boolboolboolboolint\n\
    \    local boolboolboolfloat\n    local boolboolboolbool\n    local boolboolboolboolint\n\
    \    local boolboolboolfloat\n    local boolboolboolbool\n    local boolboolboolboolint\n\
    \    local boolboolboolfloat\n    local boolboolboolbool\n    local boolboolboolboolint\n\
    \    local boolboolboolfloat\n    local boolboolboolbool\n    local boolboolboolboolint\n\
    \    local boolboolboolfloat\n    local boolboolboolbool\n    local boolboolboolboolint\n\
    \    local boolboolboolfloat\n    local boolboolboolbool\n    local boolboolboolboolint\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local float1 float2 float3\n    float1=$1\n\
    \    float2=$2\n    float3=$3\n    if [[ $float1 =~ ^-?[0-9]+\\.[0-9]+$ ]] &&\
    \ [[ $float2 =~ ^-?[0-9]+\\.[0-9]+$ ]] && [[ $float3 =~ ^-?[0-9]+\\.[0-9]+$ ]];\
    \ then\n        local sum=$((float1 + float2 + float3))\n        if [[ $sum -eq\
    \ $((float1 + float2 + float3)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    if [[ $a -gt $b && $a -gt $c ]]; then\n        echo \"true\"\n   \
    \ elif [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n    else\n \
    \       echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local float1=$1\n    local float2=$2\n\
    \    local float3=$3\n    local sum=$((float1 + float2 + float3))\n    if [ $sum\
    \ -eq $((float1 + float2 + float3)) ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpror9n2ej.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -gt $b ] || [ $a -eq $b ] || [ $a -lt $b ]; then\n     \
    \   return 0\n    else\n        if [ $a -eq $c ] || [ $a -eq $b ] || [ $a -eq\
    \ $c ]; then\n            return 0\n        else\n            return 1\n     \
    \   fi\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local float1 float2 float3\n  local sum\n\
    \  local bool1\n  local bool2\n  local bool3\n  local bool4\n  local bool5\n \
    \ local bool6\n  local bool7\n  local bool8\n  local bool9\n  local bool10\n \
    \ local bool11\n  local bool12\n  local bool13\n  local bool14\n  local bool15\n\
    \  local bool16\n  local bool17\n  local bool18\n  local bool19\n  local bool20\n\
    \  local bool21\n  local bool22\n  local bool23\n  local bool24\n  local bool25\n\
    \  local bool26\n  local bool27\n  local bool28\n  local bool29\n  local bool30\n\
    \  local bool31\n  local bool32\n  local bool33\n  local bool34\n  local bool35\n\
    \  local bool36\n  local bool37\n  local bool38\n  local bool39\n  local bool40\n\
    \  local bool41\n  local bool42\n  local bool43\n  local bool44\n  local bool45\n\
    \  local bool46\n  local bool47\n  local bool48\n  local bool49\n  local bool50\n\
    \  local bool51\n  local bool52\n  local bool53\n  local bool54\n  local bool55\n\
    \  local bool56\n  local bool57\n  local bool58\n  local bool59\n  local bool60\n\
    \  local bool61\n  local bool62\n  local bool63\n  local bool64\n  local bool65\n\
    \  local bool66\n  local bool67\n  local bool68\n  local bool69\n  local bool70\n\
    \  local bool71\n  local bool72\n  local bool73\n  local bool74\n  local bool75\n\
    \  local bool76\n  local bool77\n  local bool78\n  local bool79\n  local bool80\n\
    \  local bool81\n  local bool82\n  local bool83\n  local bool84\n  local bool85\n\
    \  local bool86\n  local bool87\n  local bool88\n  local bool89\n  local bool90\n\
    \  local bool91\n  local bool92\n  local bool93\n  local bool94\n  local bool95\n\
    \  local bool96\n  local bool97\n  local bool98\n  local bool99\n  local bool100\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c d e f g h i j k l m n o\
    \ p q r s t u v w x y z\n    a=$1\n    b=$2\n    c=$3\n    if [[ $a =~ ^-?[0-9]+\\\
    .[0-9]+$ ]]; then\n        echo \"$a is integer\"\n        return 0\n    fi\n\
    \    if [[ $b =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n        echo \"$b is integer\"\n\
    \        return 0\n    fi\n    if [[ $c =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n    \
    \    echo \"$c is integer\"\n        return 0\n    fi\n    if [[ $a -gt $b ]];\
    \ then\n        echo \"$a is greater than $b\"\n        return 0\n    fi\n   \
    \ if [[ $a -gt $c ]]; then\n        echo \"$a is greater than $c\"\n        return\
    \ 0\n    fi\n    if [[ $b -gt $c ]]; then\n        echo \"$b is greater than $c\"\
    \n        return 0\n    fi\n    if [[ $a -eq $b ]]; then\n        echo \"$a is\
    \ equal to $b\"\n        return 0\n    fi\n    if [[ $a -eq $c ]]; then\n    \
    \    echo \"$a is equal to $c\"\n        return 0\n    fi\n    if [[ $b -eq $c\
    \ ]]; then\n        echo \"$b is equal to $c\"\n        return 0\n    fi\n   \
    \ if [[ $a -lt $b ]]; then\n        echo \"$a is less than $b\"\n        return\
    \ 0\n    fi\n    if [[ $a -lt $c ]]; then\n        echo \"$a is less than $c\"\
    \n        return 0\n    fi\n    if [[ $b -lt $c ]]; then\n        echo \"$b is\
    \ less than $c\"\n        return 0\n    fi\n    if [[ $a -le $b ]]; then\n   \
    \     echo \"$a is less than or equal to $b\"\n        return 0\n    fi\n    if\
    \ [[ $a -le $c ]]; then\n        echo \"$a is less than or equal to $c\"\n   \
    \     return 0\n    fi\n    if [[ $b -le $c ]]; then\n        echo \"$b is less\
    \ than or equal to $c\"\n        return 0\n    fi\n    if [[ $a -ge $b ]]; then\n\
    \        echo \"$a is greater than or equal to $b\"\n        return 0\n    fi\n\
    \    if [[ $a -ge $c ]]; then\n        echo \"$a is greater than or equal to $c\"\
    \n        return 0\n    fi\n    if [[ $b -ge $c ]]; then\n        echo \"$b is\
    \ greater than or equal to $c\"\n        return 0\n    fi\n    if [[ $a -eq $b\
    \ ]]; then\n        echo \"$a is equal to $b\"\n        return 0\n    fi\n   \
    \ if [[ $a -eq\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp90m6dy10.sh: line 99: unexpected argument `newline'' to conditional
    binary operator

    /tmp/tmp90m6dy10.sh: line 99: syntax error near `-eq''

    /tmp/tmp90m6dy10.sh: line 99: `    if [[ $a -eq''

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local sum=$(( $1 + $2 ))\n    local\
    \ sum2=$(( $1 + $3 ))\n    if [ $sum -eq $sum2 ]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=0\n    if [ $sum -eq $((a\
    \ + b + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a - b - c))\
    \ ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a - b + c)) ]; then\n\
    \        is_int=1\n    fi\n    if [ $sum -eq $((a + b - c)) ]; then\n        is_int=1\n\
    \    fi\n    if [ $sum -eq $((a + b + c)) ]; then\n        is_int=1\n    fi\n\
    \    if [ $sum -eq $((a - b - c)) ]; then\n        is_int=1\n    fi\n    if [\
    \ $sum -eq $((a - b + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq\
    \ $((a + b - c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a + b\
    \ + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a - b - c)) ];\
    \ then\n        is_int=1\n    fi\n    if [ $sum -eq $((a - b + c)) ]; then\n \
    \       is_int=1\n    fi\n    if [ $sum -eq $((a + b - c)) ]; then\n        is_int=1\n\
    \    fi\n    if [ $sum -eq $((a + b + c)) ]; then\n        is_int=1\n    fi\n\
    \    if [ $sum -eq $((a - b - c)) ]; then\n        is_int=1\n    fi\n    if [\
    \ $sum -eq $((a - b + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq\
    \ $((a + b - c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a + b\
    \ + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq $((a - b - c)) ];\
    \ then\n        is_int=1\n    fi\n    if [ $sum -eq $((a - b + c)) ]; then\n \
    \       is_int=1\n    fi\n    if [ $sum -eq $((a + b - c)) ]; then\n        is_int=1\n\
    \    fi\n    if [ $sum -eq $((a + b + c)) ]; then\n        is_int=1\n    fi\n\
    \    if [ $sum -eq $((a - b - c)) ]; then\n        is_int=1\n    fi\n    if [\
    \ $sum -eq $((a - b + c)) ]; then\n        is_int=1\n    fi\n    if [ $sum -eq\
    \ $((a + b - c)) ]; then\n        is_int=1\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu6jja0gc.sh: line 95: syntax error near unexpected token `}''

    /tmp/tmpu6jja0gc.sh: line 95: `}''

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local a=$1\n  local b=$2\n  local c=$3\n\
    \  [[ \"$a\" =~ ^-?[0-9]+\\.?[0-9]*$ ]] || return 1\n  [[ \"$b\" =~ ^-?[0-9]+\\\
    .?[0-9]*$ ]] || return 1\n  [[ \"$c\" =~ ^-?[0-9]+\\.?[0-9]*$ ]] || return 1\n\
    \  [[ \"$a\" -eq \"$b\" ]] && [[ \"$a\" -eq \"$c\" ]] || return 1\n  [[ \"$b\"\
    \ -eq \"$c\" ]] || return 1\n  [[ \"$a\" -eq \"$b\" -a \"$a\" -eq \"$c\" ]] ||\
    \ return 1\n  [[ \"$b\" -eq \"$c\" -a \"$b\" -eq \"$a\" ]] || return 1\n  [[ \"\
    $a\" -eq \"$b\" -a \"$a\" -eq \"$c\" -a \"$b\" -eq \"$c\" ]] || return 1\n  [[\
    \ \"$b\" -eq \"$c\" -a \"$b\" -eq \"$a\" -a \"$c\" -eq \"$a\" ]] || return 1\n\
    \  [[ \"$a\" -eq \"$b\" -a \"$a\" -eq \"$c\" -a \"$b\" -eq \"$c\" -a \"$c\" -eq\
    \ \"$a\" ]] || return 1\n  return 0\n}\n\ncandidate() {\n    any_int \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpa3cdxw26.sh: line 27: syntax error in conditional expression

    /tmp/tmpa3cdxw26.sh: line 27: syntax error near `-a''

    /tmp/tmpa3cdxw26.sh: line 27: `  [[ "$a" -eq "$b" -a "$a" -eq "$c" ]] || return
    1''

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    if [[ $a =~ ^[0-9]+\\.[0-9]+$ ]]; then\n        local aInt=${BASH_REMATCH[1]}\n\
    \    else\n        local aInt=$a\n    fi\n    if [[ $b =~ ^[0-9]+\\.[0-9]+$ ]];\
    \ then\n        local bInt=${BASH_REMATCH[1]}\n    else\n        local bInt=$b\n\
    \    fi\n    if [[ $c =~ ^[0-9]+\\.[0-9]+$ ]]; then\n        local cInt=${BASH_REMATCH[1]}\n\
    \    else\n        local cInt=$c\n    fi\n    if [[ $aInt -gt $bInt ]]; then\n\
    \        local aInt=$bInt\n    fi\n    if [[ $aInt -gt $cInt ]]; then\n      \
    \  local aInt=$cInt\n    fi\n    if [[ $bInt -gt $cInt ]]; then\n        local\
    \ bInt=$cInt\n    fi\n    if [[ $aInt -eq $bInt ]]; then\n        local aInt=$cInt\n\
    \    fi\n    if [[ $aInt -eq $cInt ]]; then\n        local aInt=$bInt\n    fi\n\
    \    if [[ $bInt -eq $cInt ]]; then\n        local bInt=$cInt\n    fi\n    if\
    \ [[ $aInt -eq $bInt ]]; then\n        local aInt=$cInt\n    fi\n    if [[ $bInt\
    \ -eq $cInt ]]; then\n        local bInt=$cInt\n    fi\n    if [[ $aInt -eq $bInt\
    \ ]]; then\n        local aInt=$cInt\n    fi\n    if [[ $bInt -eq $cInt ]]; then\n\
    \        local bInt=$cInt\n    fi\n    if [[ $aInt -eq $bInt ]]; then\n      \
    \  local aInt=$cInt\n    fi\n    if [[ $bInt -eq $cInt ]]; then\n        local\
    \ bInt=$cInt\n    fi\n    if [[ $aInt -eq $bInt ]]; then\n        local aInt=$cInt\n\
    \    fi\n    if [[ $bInt -eq $cInt ]]; then\n        local bInt=$cInt\n    fi\n\
    \    if [[ $aInt -eq $bInt ]]; then\n        local aInt=$cInt\n    fi\n    if\
    \ [[ $bInt -eq $cInt ]]; then\n        local bInt=$cInt\n    fi\n    if [[ $aInt\
    \ -eq $bInt ]]; then\n        local aInt=$cInt\n    fi\n    if [[ $bInt -eq $cInt\
    \ ]]; then\n        \n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdvz72poj.sh: line 90: syntax error near unexpected token `}''

    /tmp/tmpdvz72poj.sh: line 90: `}''

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local sum=$(( $1 + $2 ))\n    local\
    \ min=$(( $1 < $3 ? $1 : $3 ))\n    local max=$(( $1 > $3 ? $1 : $3 ))\n    local\
    \ sum2=$(( $sum + $2 ))\n    local min2=$(( $sum < $sum2 ? $sum : $sum2 ))\n \
    \   local max2=$(( $sum > $sum2 ? $sum : $sum2 ))\n    local sum3=$(( $sum + $3\
    \ ))\n    local min3=$(( $sum < $sum3 ? $sum : $sum3 ))\n    local max3=$(( $sum\
    \ > $sum3 ? $sum : $sum3 ))\n    local sum4=$(( $sum + $4 ))\n    local min4=$((\
    \ $sum < $sum4 ? $sum : $sum4 ))\n    local max4=$(( $sum > $sum4 ? $sum : $sum4\
    \ ))\n    local sum5=$(( $sum + $5 ))\n    local min5=$(( $sum < $sum5 ? $sum\
    \ : $sum5 ))\n    local max5=$(( $sum > $sum5 ? $sum : $sum5 ))\n    local sum6=$((\
    \ $sum + $6 ))\n    local min6=$(( $sum < $sum6 ? $sum : $sum6 ))\n    local max6=$((\
    \ $sum > $sum6 ? $sum : $sum6 ))\n    local sum7=$(( $sum + $7 ))\n    local min7=$((\
    \ $sum < $sum7 ? $sum : $sum7 ))\n    local max7=$(( $sum > $sum7 ? $sum : $sum7\
    \ ))\n    local sum8=$(( $sum + $8 ))\n    local min8=$(( $sum < $sum8 ? $sum\
    \ : $sum8 ))\n    local max8=$(( $sum > $sum8 ? $sum : $sum8 ))\n    local sum9=$((\
    \ $sum + $9 ))\n    local min9=$(( $sum < $sum9 ? $sum : $sum9 ))\n    local max9=$((\
    \ $sum > $sum9 ? $sum : $sum9 ))\n    local sum10=$(( $sum + $10 ))\n    local\
    \ min10=$(( $sum < $sum10 ? $sum : \n}\n\ncandidate() {\n    any_int \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpry1sw13n.sh: line 47: unexpected EOF while looking for matching
    `)''

    /tmp/tmpry1sw13n.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a =~ ^-?[0-9]+\\.?[0-9]*$ ]]; then\n        if [[ $b =~ ^-?[0-9]+\\\
    .?[0-9]*$ ]]; then\n            if [[ $c =~ ^-?[0-9]+\\.?[0-9]*$ ]]; then\n  \
    \              if (( $a + $b + $c )); then\n                    return 0\n   \
    \             else\n                    return 1\n                fi\n       \
    \     else\n                return 1\n            fi\n        else\n         \
    \   return 1\n        fi\n    else\n        return 1\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local sum=$(( $1 + $2 ))\n    local\
    \ num1=$1\n    local num2=$2\n    local num3=$3\n    if [ $num1 -eq $sum ] &&\
    \ [ $num2 -eq $sum ] && [ $num3 -eq $sum ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c d e\n    local sum\n  \
    \  local sum2\n    local sum3\n    local sum4\n    local sum5\n    local sum6\n\
    \    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local sum11\n\
    \    local sum12\n    local sum13\n    local sum14\n    local sum15\n    local\
    \ sum16\n    local sum17\n    local sum18\n    local sum19\n    local sum20\n\
    \    local sum21\n    local sum22\n    local sum23\n    local sum24\n    local\
    \ sum25\n    local sum26\n    local sum27\n    local sum28\n    local sum29\n\
    \    local sum30\n    local sum31\n    local sum32\n    local sum33\n    local\
    \ sum34\n    local sum35\n    local sum36\n    local sum37\n    local sum38\n\
    \    local sum39\n    local sum40\n    local sum41\n    local sum42\n    local\
    \ sum43\n    local sum44\n    local sum45\n    local sum46\n    local sum47\n\
    \    local sum48\n    local sum49\n    local sum50\n    local sum51\n    local\
    \ sum52\n    local sum53\n    local sum54\n    local sum55\n    local sum56\n\
    \    local sum57\n    local sum58\n    local sum59\n    local sum60\n    local\
    \ sum61\n    local sum62\n    local sum63\n    local sum64\n    local sum65\n\
    \    local sum66\n    local sum67\n    local sum68\n    local sum69\n    local\
    \ sum70\n    local sum71\n    local sum72\n    local sum73\n    local sum74\n\
    \    local sum75\n    local sum76\n    local sum77\n    local sum78\n    local\
    \ sum79\n    local sum80\n    local sum81\n    local sum82\n    local sum83\n\
    \    local sum84\n    local sum85\n    local sum86\n    local sum87\n    local\
    \ sum88\n    local sum89\n    local sum90\n    local sum91\n    local sum92\n\
    \    local sum93\n    local sum94\n    local sum95\n    local sum96\n    local\
    \ sum97\n    local sum98\n    local sum99\n    local sum100\n    local sum101\n\
    \n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a =~ ^-?[0-9]+\\.?[0-9]*$ ]] && [[ $b =~ ^-?[0-9]+\\.?[0-9]*$\
    \ ]] && [[ $c =~ ^-?[0-9]+\\.?[0-9]*$ ]]; then\n        echo \"$(( ${a}+${b}+${c}\
    \ ))\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local sum=$(( $1 + $2 ))\n    local\
    \ num1=$1\n    local num2=$2\n    local num3=$3\n    if [[ $num1 =~ ^[0-9]+$ ]]\
    \ && [[ $num2 =~ ^[0-9]+$ ]] && [[ $num3 =~ ^[0-9]+$ ]]; then\n        if (( $num1\
    \ + $num2 == $num3 )); then\n            echo \"true\"\n        else\n       \
    \     echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local IFS=.\n    local sum=$(( $1 +\
    \ $2 ))\n    local sum2=$(( $sum + $3 ))\n    local sum3=$(( $sum + $3 ))\n  \
    \  local sum4=$(( $sum + $3 ))\n    local sum5=$(( $sum + $3 ))\n    local sum6=$((\
    \ $sum + $3 ))\n    local sum7=$(( $sum + $3 ))\n    local sum8=$(( $sum + $3\
    \ ))\n    local sum9=$(( $sum + $3 ))\n    local sum10=$(( $sum + $3 ))\n    local\
    \ sum11=$(( $sum + $3 ))\n    local sum12=$(( $sum + $3 ))\n    local sum13=$((\
    \ $sum + $3 ))\n    local sum14=$(( $sum + $3 ))\n    local sum15=$(( $sum + $3\
    \ ))\n    local sum16=$(( $sum + $3 ))\n    local sum17=$(( $sum + $3 ))\n   \
    \ local sum18=$(( $sum + $3 ))\n    local sum19=$(( $sum + $3 ))\n    local sum20=$((\
    \ $sum + $3 ))\n    local sum21=$(( $sum + $3 ))\n    local sum22=$(( $sum + $3\
    \ ))\n    local sum23=$(( $sum + $3 ))\n    local sum24=$(( $sum + $3 ))\n   \
    \ local sum25=$(( $sum + $3 ))\n    local sum26=$(( $sum + $3 ))\n    local sum27=$((\
    \ $sum + $3 ))\n    local sum28=$(( $sum + $3 ))\n    local sum29=$(( $sum + $3\
    \ ))\n    local sum30=$(( $sum + $3 ))\n    local sum31=$(( $sum + $3 ))\n   \
    \ local sum32=$(( $sum + $3 ))\n    local sum33=$(( $sum + $3 ))\n    local sum34=$((\
    \ $sum + $3 ))\n    local sum35=$(( $sum + $3 ))\n    local sum36=$(( $sum + $3\
    \ ))\n    local sum37=$(( $sum + $3 ))\n    local sum38=$(( $sum + $3 ))\n   \
    \ local sum39=$(( $sum + $3 ))\n\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local float1 float2 float3\n    float1=$1\n\
    \    float2=$2\n    float3=$3\n    local sum\n    sum=$((float1 + float2 + float3))\n\
    \    if [ $sum -eq $((float1 + float2 + float3)) ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdapx99jk.sh: line 24: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=0\n    if [[ $sum -eq $((sum\
    \ | bc)) ]]; then\n        is_int=1\n    fi\n    if [[ $sum -ne $((sum | bc))\
    \ ]]; then\n        is_int=0\n    fi\n    if [[ $is_int -eq 0 ]]; then\n     \
    \   echo \"false\"\n    else\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8h8q4m4f.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local float1 float2 float3\n  local sum\n\
    \  local bool\n  local int1\n  local int2\n  local int3\n  local result\n\n  sum=$((\
    \ $1 + $2 ))\n  bool=$(( $sum == $3 ))\n  if [ $bool == \"true\" ]; then\n   \
    \ int1=$1\n    int2=$2\n    int3=$3\n  else\n    int1=$2\n    int2=$3\n    int3=$1\n\
    \  fi\n  result=$(( $int1 == $int2 && $int1 == $int3 ))\n  return $result\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ \"$a\" -eq \"$b\" ] && [ \"$b\" -eq \"$c\" ] ; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local float1=$1\n    local float2=$2\n\
    \    local float3=$3\n    local sum=$((float1 + float2 + float3))\n    local int1=$(echo\
    \ $sum | bc)\n    local int2=$(echo $sum | bc)\n    local int3=$(echo $sum | bc)\n\
    \    if [ $int1 -eq $int2 -a $int1 -eq $int3 ]\n    then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbx45b5lt.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local IFS=.\n    local a=$1\n    local\
    \ b=$2\n    local c=$3\n    local sum=$((a+b+c))\n    local is_int=0\n    if [[\
    \ $sum -eq $((sum%1)) ]]; then\n        is_int=1\n    fi\n    if [[ $sum -eq $((sum%2))\
    \ ]]; then\n        is_int=1\n    fi\n    if [[ $sum -eq $((sum%3)) ]]; then\n\
    \        is_int=1\n    fi\n    if [[ $sum -eq $((sum%4)) ]]; then\n        is_int=1\n\
    \    fi\n    if [[ $sum -eq $((sum%5)) ]]; then\n        is_int=1\n    fi\n  \
    \  if [[ $sum -eq $((sum%6)) ]]; then\n        is_int=1\n    fi\n    if [[ $sum\
    \ -eq $((sum%7)) ]]; then\n        is_int=1\n    fi\n    if [[ $sum -eq $((sum%8))\
    \ ]]; then\n        is_int=1\n    fi\n    if [[ $sum -eq $((sum%9)) ]]; then\n\
    \        is_int=1\n    fi\n    if [[ $sum -eq $((sum%10)) ]]; then\n        is_int=1\n\
    \    fi\n    if [[ $sum -eq $((sum%11)) ]]; then\n        is_int=1\n    fi\n \
    \   if [[ $sum -eq $((sum%12)) ]]; then\n        is_int=1\n    fi\n    if [[ $sum\
    \ -eq $((sum%13)) ]]; then\n        is_int=1\n    fi\n    if [[ $sum -eq $((sum%14))\
    \ ]]; then\n        is_int=1\n    fi\n    if [[ $sum -eq $((sum%15)) ]]; then\n\
    \        is_int=1\n    fi\n    if [[ $sum -eq $((sum%16)) ]]; then\n        is_int=1\n\
    \    fi\n    if [[ $sum -eq $((sum%17)) ]]; then\n        is_int=1\n    fi\n \
    \   if [[ $sum -eq $((sum%18)) ]]; then\n        is_int=1\n    fi\n    if [[ $sum\
    \ -eq $((sum%19)) ]]; then\n        is_int=1\n    fi\n    if [[ $sum -eq $((sum%20))\
    \ ]]; then\n        is_int=1\n    fi\n    if [[ $sum -eq $((sum%21)) ]]; then\n\
    \        is_int=1\n    fi\n    if [[ $sum -eq $((sum%22)) ]]; then\n        is_int=1\n\
    \    fi\n    if [[ $sum -eq $((sum%23)) ]]; then\n        is_int=1\n    fi\n \
    \   if [[ $sum -eq $((sum%24)) ]]; then\n\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw5ej2j35.sh: line 96: syntax error near unexpected token `}''

    /tmp/tmpw5ej2j35.sh: line 96: `}''

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=true\n    if [[ $sum -eq\
    \ $(( 10#$sum )) == true ]]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5j5vnmc4.sh: line 24: syntax error in conditional expression

    /tmp/tmp5j5vnmc4.sh: line 24: syntax error near `==''

    /tmp/tmp5j5vnmc4.sh: line 24: `    if [[ $sum -eq $(( 10#$sum )) == true ]]; then''

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=0\n    if [[ $sum -eq $((sum\
    \ | bc)) ]]; then\n        is_int=1\n    fi\n    if [[ $sum -ne $((sum | bc))\
    \ ]]; then\n        is_int=0\n    fi\n    if [[ $is_int -eq 1 ]]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcwmfy_n1.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local a b c\n  a=$1\n  b=$2\n  c=$3\n\
    \  (( a == b && a == c ))\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=0\n    if [ $a -eq $sum\
    \ ]\n    then\n        is_int=1\n    fi\n    if [ $b -eq $sum ]\n    then\n  \
    \      is_int=1\n    fi\n    if [ $c -eq $sum ]\n    then\n        is_int=1\n\
    \    fi\n    if [ $is_int -eq 0 ]\n    then\n        echo \"false\"\n    else\n\
    \        echo \"true\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local IFS=.\n    local sum=$(( $1 +\
    \ $2 ))\n    local num1=$1\n    local num2=$2\n    local num3=$3\n    if [ \"\
    $num1\" -eq \"$sum\" ] && [ \"$num2\" -eq \"$sum\" ] && [ \"$num3\" -eq \"$sum\"\
    \ ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local IFS=.\n    local a b c\n    a=$1\n\
    \    b=$2\n    c=$3\n    local sum\n    sum=$(( a+b ))\n    [ $sum -eq $c ] &&\
    \ return 0\n    [ $sum -ne $c ] && return 1\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local IFS=.\n    local a=\"$1\"\n \
    \   local b=\"$2\"\n    local c=\"$3\"\n    local sum=\"$((a + b + c))\"\n   \
    \ local sum2=\"$((a + b + c))\"\n    local sum3=\"$((a + b + c))\"\n    local\
    \ sum4=\"$((a + b + c))\"\n    local sum5=\"$((a + b + c))\"\n    local sum6=\"\
    $((a + b + c))\"\n    local sum7=\"$((a + b + c))\"\n    local sum8=\"$((a + b\
    \ + c))\"\n    local sum9=\"$((a + b + c))\"\n    local sum10=\"$((a + b + c))\"\
    \n    local sum11=\"$((a + b + c))\"\n    local sum12=\"$((a + b + c))\"\n   \
    \ local sum13=\"$((a + b + c))\"\n    local sum14=\"$((a + b + c))\"\n    local\
    \ sum15=\"$((a + b + c))\"\n    local sum16=\"$((a + b + c))\"\n    local sum17=\"\
    $((a + b + c))\"\n    local sum18=\"$((a + b + c))\"\n    local sum19=\"$((a +\
    \ b + c))\"\n    local sum20=\"$((a + b + c))\"\n    local sum21=\"$((a + b +\
    \ c))\"\n    local sum22=\"$((a + b + c))\"\n    local sum23=\"$((a + b + c))\"\
    \n    local sum24=\"$((a + b + c))\"\n    local sum25=\"$((a + b + c))\"\n   \
    \ local sum26=\"$((a + b + c))\"\n    local sum27=\"$((a + b + c))\"\n    local\
    \ sum28=\"$((a + b + c))\"\n    local sum29=\"$((a + b + c))\"\n    local sum30=\"\
    $((a + b + c))\"\n    local sum31=\"$((a + b + c))\"\n    local sum32=\"$((a +\
    \ b + c))\"\n    local sum33=\"$((a + b + c))\"\n    local sum34=\"$((a + b +\
    \ c))\"\n    local sum35=\"$((a + b + c))\"\n    local sum36=\"$((a + b + c))\"\
    \n    local sum37=\"$((a + b + c))\"\n    local sum38=\"$((a + \n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfnzi8q8y.sh: line 60: unexpected EOF while looking for matching
    `)''

    /tmp/tmpfnzi8q8y.sh: line 82: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local IFS=.\n    local a b c\n    a=$1\n\
    \    b=$2\n    c=$3\n    if [[ $a -gt $b && $a -gt $c ]]; then\n        echo \"\
    true\"\n    elif [[ $a -eq $b || $a -eq $c ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local float1 float2 float3\n  local sum\n\
    \  local result\n\n  sum=$(( $1 + $2 ))\n  result=$(( $sum == $3 ))\n\n  echo\
    \ $result\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -eq $b ]]; then\n        if [[ $a -eq $c ]]; then\n   \
    \         echo \"true\"\n        else\n            echo \"false\"\n        fi\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local float1=$1\n    local float2=$2\n\
    \    local float3=$3\n    local sum=$((float1 + float2 + float3))\n    if [ $sum\
    \ -eq $((float1 + float2 + float3)) ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpror9n2ej.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a =~ ^-?[0-9]+\\.[0-9]+$ ]] || [[ $b =~ ^-?[0-9]+\\.[0-9]+$\
    \ ]] || [[ $c =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n        if (( b == 0 )); then\n\
    \            if (( c == 0 )); then\n                if (( b == 0 )); then\n  \
    \                  return 0\n                else\n                    return\
    \ 1\n                fi\n            else\n                return 1\n        \
    \    fi\n        else\n            if (( a == 0 )); then\n                if ((\
    \ c == 0 )); then\n                    if (( b == 0 )); then\n               \
    \         return 0\n                    else\n                        return 1\n\
    \                    fi\n                else\n                    return 1\n\
    \                fi\n            else\n                if (( b == 0 )); then\n\
    \                    if (( a == 0 )); then\n                        return 1\n\
    \                    else\n                        return 1\n                \
    \    fi\n                else\n                    if (( a == 0 )); then\n   \
    \                     return 1\n                    else\n                   \
    \     return 1\n                    fi\n                fi\n            fi\n \
    \       fi\n    else\n        return 0\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    if [[ $a =~ ^[0-9]+\\.[0-9]+$ ]]; then\n        local a1=${a%.*}\n\
    \        local b1=${b%.*}\n        local c1=${c%.*}\n        if [[ $a1 -eq $b1\
    \ ]]; then\n            if [[ $a1 -eq $c1 ]]; then\n                return 0\n\
    \            else\n                return 1\n            fi\n        else\n  \
    \          return 1\n        fi\n    else\n        return 1\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c d e\n    a=$1\n    b=$2\n\
    \    c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n    \
    \    echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ \"$a\" -eq \"$b\" ] || [ \"$a\" -eq \"$c\" ]; then\n      \
    \  echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local float1=$1\n    local float2=$2\n\
    \    local float3=$3\n    local sum=$((float1 + float2 + float3))\n    if [[ $sum\
    \ -eq $((float1 + float2 + float3)) ]]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5pxjsfhf.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local is_int=0\n    local is_float=0\n\
    \    local is_equal=0\n    if [[ \"$a\" =~ ^[0-9]+$ ]]; then\n        is_int=1\n\
    \    fi\n    if [[ \"$b\" =~ ^[0-9]+$ ]]; then\n        is_int=1\n    fi\n   \
    \ if [[ \"$c\" =~ ^[0-9]+$ ]]; then\n        is_int=1\n    fi\n    if [[ \"$sum\"\
    \ =~ ^[0-9]+$ ]]; then\n        is_equal=1\n    fi\n    if [[ \"$is_int\" -eq\
    \ \"1\" ]]; then\n        if [[ \"$is_equal\" -eq \"1\" ]]; then\n           \
    \ echo \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n\
    \        if [[ \"$is_equal\" -eq \"1\" ]]; then\n            echo \"false\"\n\
    \        else\n            echo \"true\"\n        fi\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg4u0sm2v.sh: line 22: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local float1 float2 float3\n  local sum\n\
    \  local bool\n  local num1\n  local num2\n  local num3\n  local num4\n  local\
    \ num5\n  local num6\n  local num7\n  local num8\n  local num9\n  local num10\n\
    \  local num11\n  local num12\n  local num13\n  local num14\n  local num15\n \
    \ local num16\n  local num17\n  local num18\n  local num19\n  local num20\n  local\
    \ num21\n  local num22\n  local num23\n  local num24\n  local num25\n  local num26\n\
    \  local num27\n  local num28\n  local num29\n  local num30\n  local num31\n \
    \ local num32\n  local num33\n  local num34\n  local num35\n  local num36\n  local\
    \ num37\n  local num38\n  local num39\n  local num40\n  local num41\n  local num42\n\
    \  local num43\n  local num44\n  local num45\n  local num46\n  local num47\n \
    \ local num48\n  local num49\n  local num50\n  local num51\n  local num52\n  local\
    \ num53\n  local num54\n  local num55\n  local num56\n  local num57\n  local num58\n\
    \  local num59\n  local num60\n  local num61\n  local num62\n  local num63\n \
    \ local num64\n  local num65\n  local num66\n  local num67\n  local num68\n  local\
    \ num69\n  local num70\n  local num71\n  local num72\n  local num73\n  local num74\n\
    \  local num75\n  local num76\n  local num77\n  local num78\n  local num79\n \
    \ local num80\n  local num81\n  local num82\n  local num83\n  local num84\n  local\
    \ num85\n  local num86\n  local num87\n  local num88\n  local num89\n  local num90\n\
    \  local num91\n  local num92\n  local num93\n  local num94\n  local num95\n \
    \ local num96\n  local num97\n  local num98\n  local num99\n\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local IFS=.\n    local a=$1\n    local\
    \ b=$2\n    local c=$3\n    local sum=$((a + b + c))\n    local sum2=$((a + b\
    \ + c))\n    local sum3=$((a + b + c))\n    local sum4=$((a + b + c))\n    local\
    \ sum5=$((a + b + c))\n    local sum6=$((a + b + c))\n    local sum7=$((a + b\
    \ + c))\n    local sum8=$((a + b + c))\n    local sum9=$((a + b + c))\n    local\
    \ sum10=$((a + b + c))\n    local sum11=$((a + b + c))\n    local sum12=$((a +\
    \ b + c))\n    local sum13=$((a + b + c))\n    local sum14=$((a + b + c))\n  \
    \  local sum15=$((a + b + c))\n    local sum16=$((a + b + c))\n    local sum17=$((a\
    \ + b + c))\n    local sum18=$((a + b + c))\n    local sum19=$((a + b + c))\n\
    \    local sum20=$((a + b + c))\n    local sum21=$((a + b + c))\n    local sum22=$((a\
    \ + b + c))\n    local sum23=$((a + b + c))\n    local sum24=$((a + b + c))\n\
    \    local sum25=$((a + b + c))\n    local sum26=$((a + b + c))\n    local sum27=$((a\
    \ + b + c))\n    local sum28=$((a + b + c))\n    local sum29=$((a + b + c))\n\
    \    local sum30=$((a + b + c))\n    local sum31=$((a + b + c))\n    local sum32=$((a\
    \ + b + c))\n    local sum33=$((a + b + c))\n    local sum34=$((a + b + c))\n\
    \    local sum35=$((a + b + c))\n    local sum36=$((a + b + c))\n    local sum37=$((a\
    \ + b + c))\n    local sum38=$((a + b + c))\n    local sum39=$((a + b + c))\n\
    \    local sum40=$((a + b + c))\n    local sum41=$((a + b\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq59yo_jd.sh: line 63: unexpected EOF while looking for matching
    `)''

    /tmp/tmpq59yo_jd.sh: line 85: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a+b+c))\n    local is_int=false\n    if [[ $sum -eq $((sum%1))\
    \ ]]; then\n        is_int=true\n    fi\n    echo \"$is_int\"\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local float1=$1\n  local float2=$2\n\
    \  local float3=$3\n  local sum=$((float1 + float2 + float3))\n  local int1=$(echo\
    \ $sum | bc)\n  local int2=$(echo $sum | bc)\n  local int3=$(echo $sum | bc)\n\
    \  if (( $int1 == $int2 )); then\n    if (( $int1 == $int3 )); then\n      return\
    \ 0\n    else\n      return 1\n    fi\n  else\n    return 1\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    if [[ $a =~ ^-?[0-9]+\\.?[0-9]*$ ]] && [[ $b =~ ^-?[0-9]+\\.?[0-9]*$\
    \ ]] && [[ $c =~ ^-?[0-9]+\\.?[0-9]*$ ]]; then\n        local sum=$(( $a + $b\
    \ + $c ))\n        local sum2=$(echo \"$sum\" | bc)\n        if [[ $sum2 -eq $sum\
    \ ]]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n \
    \   any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzay4_hlz.sh: line 23: 2.5 + 2 + 3 : syntax error: invalid arithmetic
    operator (error token is ".5 + 2 + 3 ")

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local a=$1\n  local b=$2\n  local c=$3\n\
    \  [[ \"$a\" =~ ^[0-9]+\\.?[0-9]*$ ]] || return 1\n  [[ \"$b\" =~ ^[0-9]+\\.?[0-9]*$\
    \ ]] || return 1\n  [[ \"$c\" =~ ^[0-9]+\\.?[0-9]*$ ]] || return 1\n  [[ \"$a\"\
    \ -eq \"$b\" ]] || return 1\n  [[ \"$a\" -eq \"$c\" ]] || return 1\n  [[ \"$b\"\
    \ -eq \"$c\" ]] || return 1\n  [[ \"$a\" -eq \"$(( $a + $b ))\" ]] || return 1\n\
    \  [[ \"$a\" -eq \"$(( $a + $c ))\" ]] || return 1\n  [[ \"$b\" -eq \"$(( $b +\
    \ $c ))\" ]] || return 1\n  [[ \"$a\" -eq \"$(( $a + $b ))\" ]] || return 1\n\
    \  [[ \"$a\" -eq \"$(( $a + $c ))\" ]] || return 1\n  [[ \"$b\" -eq \"$(( $b +\
    \ $c ))\" ]] || return 1\n  [[ \"$a\" -eq \"$(( $a + $b ))\" ]] || return 1\n\
    \  [[ \"$a\" -eq \"$(( $a + $c ))\" ]] || return 1\n  [[ \"$b\" -eq \"$(( $b +\
    \ $c ))\" ]] || return 1\n  [[ \"$a\" -eq \"$(( $a + $b ))\" ]] || return 1\n\
    \  [[ \"$a\" -eq \"$(( $a + $c ))\" ]] || return 1\n  [[ \"$b\" -eq \"$(( $b +\
    \ $c ))\" ]] || return 1\n  [[ \"$a\" -eq \"$(( $a + $b ))\" ]] || return 1\n\
    \  [[ \"$a\" -eq \"$(( $a + $c ))\" ]] || return 1\n  [[ \"$b\" -eq \"$(( $b +\
    \ $c ))\" ]] || return 1\n  [[ \"$a\" -eq \"$(( $a + $b ))\" ]] || return 1\n\
    \  [[ \"$a\" -eq \"$(( $a + $c ))\" ]] || return 1\n  [[ \"$b\" -eq \"$(( $b +\
    \ $c ))\" ]] || return 1\n  [[ \"$a\" -eq \"$(( $a + $b ))\" ]] || return 1\n\
    \  [[ \"$a\" -eq \"$(( $a + $c ))\" ]] || return 1\n  [[ \"$b\" -eq \"$((\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdfef6ekz.sh: line 48: unexpected EOF while looking for matching
    `)''

    /tmp/tmpdfef6ekz.sh: line 70: unexpected argument to conditional binary operator

    /tmp/tmpdfef6ekz.sh: line 70: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local IFS=.\n    local a=$1\n    local\
    \ b=$2\n    local c=$3\n    local sum=$((a + b + c))\n    local equal=$((a ==\
    \ sum))\n    local integer=$((a != sum))\n    echo $((equal && integer))\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    if [[ $a == $sum ]] || [[ $b == $sum\
    \ ]] || [[ $c == $sum ]]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$(( $a + $b + $c ))\n    local is_int=0\n    if [ $a -eq\
    \ $sum ]\n    then\n        is_int=1\n    fi\n    if [ $b -eq $sum ]\n    then\n\
    \        is_int=1\n    fi\n    if [ $c -eq $sum ]\n    then\n        is_int=1\n\
    \    fi\n    if [ $is_int -eq 0 ]\n    then\n        echo \"false\"\n    else\n\
    \        echo \"true\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    local sum=$((a + b + c))\n    local sum2=$((a + b + c))\n    local\
    \ sum3=$((a + b + c))\n    local sum4=$((a + b + c))\n    local sum5=$((a + b\
    \ + c))\n    local sum6=$((a + b + c))\n    local sum7=$((a + b + c))\n    local\
    \ sum8=$((a + b + c))\n    local sum9=$((a + b + c))\n    local sum10=$((a + b\
    \ + c))\n    local sum11=$((a + b + c))\n    local sum12=$((a + b + c))\n    local\
    \ sum13=$((a + b + c))\n    local sum14=$((a + b + c))\n    local sum15=$((a +\
    \ b + c))\n    local sum16=$((a + b + c))\n    local sum17=$((a + b + c))\n  \
    \  local sum18=$((a + b + c))\n    local sum19=$((a + b + c))\n    local sum20=$((a\
    \ + b + c))\n    local sum21=$((a + b + c))\n    local sum22=$((a + b + c))\n\
    \    local sum23=$((a + b + c))\n    local sum24=$((a + b + c))\n    local sum25=$((a\
    \ + b + c))\n    local sum26=$((a + b + c))\n    local sum27=$((a + b + c))\n\
    \    local sum28=$((a + b + c))\n    local sum29=$((a + b + c))\n    local sum30=$((a\
    \ + b + c))\n    local sum31=$((a + b + c))\n    local sum32=$((a + b + c))\n\
    \    local sum33=$((a + b + c))\n    local sum34=$((a + b + c))\n    local sum35=$((a\
    \ + b + c))\n    local sum36=$((a + b + c))\n    local sum37=$((a + b + c))\n\
    \    local sum38=$((a + b + c))\n    local sum39=$((a + b + c))\n    local sum40=$((a\
    \ + b + c))\n    local sum41=$((a + b + c))\n    local sum\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [[ $a -eq $b && $a -eq $c ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045766

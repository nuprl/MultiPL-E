name: HumanEval_127_intersection
language: sh
prompt: "#!/bin/bash\n# You are given two intervals,\n# where each interval is a pair\
  \ of integers. For example, interval = (start, end) = (1, 2).\n# The given intervals\
  \ are closed which means that the interval (start, end)\n# includes both start and\
  \ end.\n# For each given interval, it is assumed that its start is less or equal\
  \ its end.\n# Your task is to determine whether the length of intersection of these\
  \ two \n# intervals is a prime number.\n# Example, the intersection of the intervals\
  \ (1, 3), (2, 4) is (2, 3)\n# which its length is 1, which not a prime number.\n\
  # If the length of the intersection is a prime number, return \"YES\",\n# otherwise,\
  \ return \"NO\".\n# If the two intervals don't intersect, return \"NO\".\n# [input/output]\
  \ samples:\n# >>> $(intersection \"1 2\" \"2 3\")\n# \"NO\"\n# >>> $(intersection\
  \ \"-1 1\" \"0 4\")\n# \"NO\"\n# >>> $(intersection \"-3 -1\" \"-5 5\")\n# \"YES\"\
  \n#\n# $1 is a space-separated list\n# $2 is a space-separated list\nintersection()\
  \ {\n"
tests: "}\n\ncandidate() {\n    intersection \"$@\"\n}\n\nset -e\nrun_test() {\n \
  \   [[ $(candidate \"1 2\" \"2 3\") = \"NO\" ]]\n    [[ $(candidate \"-1 1\" \"\
  0 4\") = \"NO\" ]]\n    [[ $(candidate \"-3 -1\" \"-5 5\") = \"YES\" ]]\n    [[\
  \ $(candidate \"-2 2\" \"-4 0\") = \"YES\" ]]\n    [[ $(candidate \"-11 2\" \"-1\
  \ -1\") = \"NO\" ]]\n    [[ $(candidate \"1 2\" \"3 5\") = \"NO\" ]]\n    [[ $(candidate\
  \ \"1 2\" \"1 2\") = \"NO\" ]]\n    [[ $(candidate \"-2 -2\" \"-3 -2\") = \"NO\"\
  \ ]]\n}\n\nrun_test"
completions: ["    local interval_1 interval_2 length_1 length_2\n    interval_1=$1\n\
    \    interval_2=$2\n    length_1=$(echo $interval_1 | awk '{print $1}')\n    length_2=$(echo\
    \ $interval_2 | awk '{print $1}')\n    if [ $length_1 -eq $length_2 ]; then\n\
    \        if [ $length_1 -eq 1 ]; then\n            if [ $length_2 -eq 1 ]; then\n\
    \                if [ $interval_1 -eq $interval_2 ]; then\n                  \
    \  echo \"YES\"\n                else\n                    echo \"NO\"\n     \
    \           fi\n            else\n                echo \"NO\"\n            fi\n\
    \        else\n            echo \"NO\"\n        fi\n    else\n        echo \"\
    NO\"\n    fi", "    local interval1=$1\n    local interval2=$2\n    local length1\n\
    \    local length2\n    local i\n    local j\n    local prime\n    local prime_flag\n\
    \    local prime_flag2\n    local prime_flag3\n    local prime_flag4\n    local\
    \ prime_flag5\n    local prime_flag6\n    local prime_flag7\n    local prime_flag8\n\
    \    local prime_flag9\n    local prime_flag10\n    local prime_flag11\n    local\
    \ prime_flag12\n    local prime_flag13\n    local prime_flag14\n    local prime_flag15\n\
    \    local prime_flag16\n    local prime_flag17\n    local prime_flag18\n    local\
    \ prime_flag19\n    local prime_flag20\n    local prime_flag21\n    local prime_flag22\n\
    \    local prime_flag23\n    local prime_flag24\n    local prime_flag25\n    local\
    \ prime_flag26\n    local prime_flag27\n    local prime_flag28\n    local prime_flag29\n\
    \    local prime_flag30\n    local prime_flag31\n    local prime_flag32\n    local\
    \ prime_flag33\n    local prime_flag34\n    local prime_flag35\n    local prime_flag36\n\
    \    local prime_flag37\n    local prime_flag38\n    local prime_flag39\n    local\
    \ prime_flag40\n    local prime_flag41\n    local prime_flag42\n    local prime_flag43\n\
    \    local prime_flag44\n    local prime_flag45\n    local prime_flag46\n    local\
    \ prime_flag47\n    local prime_flag48\n    local prime_flag49\n    local prime_flag50\n\
    \    local prime_flag51\n    local prime_flag52\n    local prime_flag53\n    local\
    \ prime_flag54\n    local prime_flag55\n    local prime_flag56\n    local prime_flag57\n\
    \    local prime_flag58\n    local prime_flag59\n    local prime_flag60\n    local\
    \ prime_flag61\n    local prime_flag62\n    local prime_flag63\n    local prime_flag64\n\
    \    local prime_flag65\n    local prime_flag66\n    local prime_flag67\n    local\
    \ prime_flag68\n    ", "    local interval1=$1\n    local interval2=$2\n    local\
    \ length1=$((${#interval1} + 1))\n    local length2=$((${#interval2} + 1))\n \
    \   local start1=0\n    local start2=0\n    local end1=0\n    local end2=0\n \
    \   local result=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i1\n    local i2\n    local j1\n    local\
    \ j2\n    local k1\n    local k2\n    local l1\n    local l2\n    local m1\n \
    \   local m2\n    local n1\n    local n2\n    local p1\n    local p2\n    local\
    \ q1\n    local q2\n    local r1\n    local r2\n    local s1\n    local s2\n \
    \   local t1\n    local t2\n    local u1\n    local u2\n    local v1\n    local\
    \ v2\n    local w1\n    local w2\n    local x1\n    local x2\n    local y1\n \
    \   local y2\n    local z1\n    local z2\n    local a1\n    local b1\n    local\
    \ c1\n    local d1\n    local e1\n    local f1\n    local g1\n    local h1\n \
    \   local i1i\n    local j1j\n    local k1k1\n    local l1l1\n    local m1m1\n\
    \    local n1n1\n    local p1p1\n    local q1q1\n    local r1r1\n    local s1s1\n\
    \    local t1t1\n    local u1u1\n    local v1v1\n    local w1w1\n    local x1x1\n\
    \    local x2x2\n    local y1y1\n    local y2y2\n    local z1z1\n    local z2z2\n\
    \    local a1a1\n    local b1b1\n    local c1c1\n    local d1d1\n    local e1e1\n\
    \    local f1f1\n    local g1g1\n    local h1h1\n    local i", "    local interval_1\
    \ interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection_1\
    \ length_intersection_2 length_1 length_2 length_of_intersection\n    length_intersection_1=$(echo\
    \ \"$interval_1\" | wc -w)\n    length_intersection_2=$(echo \"$interval_2\" |\
    \ wc -w)\n    length_1=$(echo \"$interval_1\" | wc -w)\n    length_2=$(echo \"\
    $interval_2\" | wc -w)\n    length_of_intersection=$((length_intersection_1 +\
    \ length_intersection_2))\n    if [ $length_of_intersection -eq 0 ]; then\n  \
    \      echo \"NO\"\n    elif [ $length_of_intersection -eq 1 ]; then\n       \
    \ echo \"YES\"\n    elif [ $length_of_intersection -eq 2 ]; then\n        if [\
    \ $interval_1 -le $interval_2 ]; then\n            if [ $interval_1 -le $length_1\
    \ ]; then\n                if [ $interval_2 -le $length_2 ]; then\n          \
    \          if [ $interval_1 -le $length_2 ]; then\n                        echo\
    \ \"YES\"\n                    else\n                        echo \"NO\"\n   \
    \                 fi\n                else\n                    echo \"NO\"\n\
    \                fi\n            else\n                echo \"NO\"\n         \
    \   fi\n        else\n            echo \"NO\"\n        fi\n    else\n        echo\
    \ \"NO\"\n    fi", "    local interval1=$1\n    local interval2=$2\n    local\
    \ length1\n    local length2\n    local result\n    local i\n    local j\n   \
    \ local prime\n    local primes\n    local primesCount\n    local primesCount2\n\
    \    local primesCount3\n    local primesCount4\n    local primesCount5\n    local\
    \ primesCount6\n    local primesCount7\n    local primesCount8\n    local primesCount9\n\
    \    local primesCount10\n    local primesCount11\n    local primesCount12\n \
    \   local primesCount13\n    local primesCount14\n    local primesCount15\n  \
    \  local primesCount16\n    local primesCount17\n    local primesCount18\n   \
    \ local primesCount19\n    local primesCount20\n    local primesCount21\n    local\
    \ primesCount22\n    local primesCount23\n    local primesCount24\n    local primesCount25\n\
    \    local primesCount26\n    local primesCount27\n    local primesCount28\n \
    \   local primesCount29\n    local primesCount30\n    local primesCount31\n  \
    \  local primesCount32\n    local primesCount33\n    local primesCount34\n   \
    \ local primesCount35\n    local primesCount36\n    local primesCount37\n    local\
    \ primesCount38\n    local primesCount39\n    local primesCount40\n    local primesCount41\n\
    \    local primesCount42\n    local primesCount43\n    local primesCount44\n \
    \   local primesCount45\n    local primesCount46\n    local primesCount47\n  \
    \  local primesCount48\n    local primesCount49\n    local primesCount50\n   \
    \ local primesCount51\n    local primesCount52\n    local primesCount53\n    local\
    \ primesCount54\n    local primesCount55\n    local primesCount56\n    local primesCount57\n\
    \    local primesCount58\n    local primesCount59\n    local primesCount60\n \
    \   local primesCount61\n    local primesCount62\n    local primesCount63\n  \
    \  local primesCount64\n    local primesCount65\n    local primesCount66\n   \
    \ local primesCount67", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection\n    length_intersection=$(intersect\
    \ $interval_1 $interval_2)\n    if [[ $length_intersection -eq 0 ]]; then\n  \
    \      echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval_1\
    \ interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection\n\
    \    length_intersection=$(echo \"${interval_1}${interval_2}\" | sort -n | uniq\
    \ -c | sort -n | tail -n 1)\n    if [[ ${length_intersection} -eq 1 ]]; then\n\
    \        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n\
    \    local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((length1\
    \ + length2))\n    local prime=\n    local prime_flag=\n    local prime_flag2=\n\
    \    local prime_flag3=\n    local prime_flag4=\n    local prime_flag5=\n    local\
    \ prime_flag6=\n    local prime_flag7=\n    local prime_flag8=\n    local prime_flag9=\n\
    \    local prime_flag10=\n    local prime_flag11=\n    local prime_flag12=\n \
    \   local prime_flag13=\n    local prime_flag14=\n    local prime_flag15=\n  \
    \  local prime_flag16=\n    local prime_flag17=\n    local prime_flag18=\n   \
    \ local prime_flag19=\n    local prime_flag20=\n    local prime_flag21=\n    local\
    \ prime_flag22=\n    local prime_flag23=\n    local prime_flag24=\n    local prime_flag25=\n\
    \    local prime_flag26=\n    local prime_flag27=\n    local prime_flag28=\n \
    \   local prime_flag29=\n    local prime_flag30=\n    local prime_flag31=\n  \
    \  local prime_flag32=\n    local prime_flag33=\n    local prime_flag34=\n   \
    \ local prime_flag35=\n    local prime_flag36=\n    local prime_flag37=\n    local\
    \ prime_flag38=\n    local prime_flag39=\n    local prime_flag40=\n    local prime_flag41=\n\
    \    local prime_flag42=\n    local prime_flag43=\n    local prime_flag44=\n \
    \   local prime_flag45=\n    local prime_flag46=\n    local prime_flag47=\n  \
    \  local prime_flag48=\n    local prime_flag49=\n    local prime_flag50=\n   \
    \ local prime_flag51=\n    local prime_flag52=\n    local prime_flag53=\n    local\
    \ prime_flag54=\n    local prime_flag55=\n    local prime_flag56=\n    local prime_",
  "    local interval1=$1\n    local interval2=$2\n    local length1\n    local length2\n\
    \    local result\n    local i\n    local j\n    local prime\n    local prime_found\n\
    \    local prime_found2\n    local prime_found3\n    local prime_found4\n    local\
    \ prime_found5\n    local prime_found6\n    local prime_found7\n    local prime_found8\n\
    \    local prime_found9\n    local prime_found10\n    local prime_found11\n  \
    \  local prime_found12\n    local prime_found13\n    local prime_found14\n   \
    \ local prime_found15\n    local prime_found16\n    local prime_found17\n    local\
    \ prime_found18\n    local prime_found19\n    local prime_found20\n    local prime_found21\n\
    \    local prime_found22\n    local prime_found23\n    local prime_found24\n \
    \   local prime_found25\n    local prime_found26\n    local prime_found27\n  \
    \  local prime_found28\n    local prime_found29\n    local prime_found30\n   \
    \ local prime_found31\n    local prime_found32\n    local prime_found33\n    local\
    \ prime_found34\n    local prime_found35\n    local prime_found36\n    local prime_found37\n\
    \    local prime_found38\n    local prime_found39\n    local prime_found40\n \
    \   local prime_found41\n    local prime_found42\n    local prime_found43\n  \
    \  local prime_found44\n    local prime_found45\n    local prime_found46\n   \
    \ local prime_found47\n    local prime_found48\n    local prime_found49\n    local\
    \ prime_found50\n    local prime_found51\n    local prime_found52\n    local prime_found53\n\
    \    local prime_found54\n    local prime_found55\n    local prime_found56\n \
    \   local prime_found57\n    local prime_found58\n    local prime_found59\n  \
    \  local prime_found60\n    local prime_found61\n    local prime_found62\n   \
    \ local prime_found63\n    local prime_found64\n    local prime_found65\n    local\
    \ prime_found66\n    local prime_found67\n    local prime_", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n\
    \    local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((length1\
    \ + length2))\n    local prime=false\n    local prime_length=2\n    local prime_start=2\n\
    \    local prime_end=2\n    local prime_step=1\n    local prime_prime=true\n \
    \   local prime_prime_start=2\n    local prime_prime_end=2\n    local prime_prime_step=1\n\
    \    local prime_prime_prime=true\n    local prime_prime_prime_start=2\n    local\
    \ prime_prime_prime_end=2\n    local prime_prime_prime_step=1\n    local prime_prime_prime_prime=true\n\
    \    local prime_prime_prime_prime_start=2\n    local prime_prime_prime_prime_end=2\n\
    \    local prime_prime_prime_prime_step=1\n    local prime_prime_prime_prime_prime=true\n\
    \    local prime_prime_prime_prime_prime_start=2\n    local prime_prime_prime_prime_prime_end=2\n\
    \    local prime_prime_prime_prime_prime_step=1\n    local prime_prime_prime_prime_prime_prime=true\n\
    \    local prime_prime_prime_prime_prime_prime_start=2\n    local prime_prime_prime_prime_prime_prime_end=2\n\
    \    local prime_prime_prime_prime_prime_prime_step=1\n    local prime_prime_prime_prime_prime_prime_prime=true\n\
    \    local prime_prime_prime_prime_prime_prime_prime_start=2\n    local prime_prime_prime_prime_prime_prime_prime_end=2\n\
    \    local prime_prime_prime_prime_prime_prime_prime_step=1\n    local prime_prime_prime_prime_prime_prime_prime_prime=true\n\
    \    local prime_prime_prime_prime_prime_prime_prime_prime_start=2\n    local\
    \ prime_prime_prime_prime_prime_prime_prime_prime_end=2\n    local prime_prime_prime_prime_prime_prime_prime_prime_prime_step=1\n\
    \    local prime_prime", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection\n    length_intersection=$(intersect\
    \ \"$interval_1\" \"${interval_2}\")\n    if [[ \"$length_intersection\" == \"\
    \" ]]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", " \
    \   local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ len_intersection\n    len_intersection=$(echo \"$interval_1 $interval_2\" |\
    \ sort -n | uniq | wc -l)\n    if [ $len_intersection -eq 0 ]\n    then\n    \
    \    echo \"NO\"\n    else\n        local i\n        local j\n        local len_intersection_prime\n\
    \        len_intersection_prime=$(echo \"$interval_1 $interval_2\" | sort -n |\
    \ uniq | wc -l)\n        if [ $len_intersection_prime -eq 0 ]\n        then\n\
    \            echo \"NO\"\n        else\n            local i\n            local\
    \ j\n            local len_intersection_prime\n            len_intersection_prime=$(echo\
    \ \"$interval_1 $interval_2\" | sort -n | uniq | wc -l)\n            if [ $len_intersection_prime\
    \ -eq 0 ]\n            then\n                echo \"NO\"\n            else\n \
    \               local i\n                local j\n                local len_intersection_prime\n\
    \                len_intersection_prime=$(echo \"$interval_1 $interval_2\" | sort\
    \ -n | uniq | wc -l)\n                if [ $len_intersection_prime -eq 0 ]\n \
    \               then\n                    echo \"NO\"\n                else\n\
    \                    local i\n                    local j\n                  \
    \  local len_intersection_prime\n                    len_intersection_prime=$(echo\
    \ \"$interval_1 $interval_2\" | sort -n | uniq | wc -l)\n                    if\
    \ [ $len_intersection_prime -eq 0 ]\n                    then\n              \
    \          echo \"NO\"\n                    else\n                        local\
    \ i\n                        local j\n                        local len_intersection_prime\n\
    \                        len_intersection_prime=$(echo \"$interval_1 $interval_2\"\
    \ | sort -n | uniq | wc -l)\n                        if [ $len_intersection_prime\
    \ -eq 0 ]\n                        then\n                            echo \"NO\"\
    \n                        else\n                            local i\n        \
    \                    local j\n                            local len_intersection_prime\n\
    \                            len_intersection_prime=$(echo \"$interval_1 $interval_2\"\
    \ | sort -n | uniq | wc -l)\n                            if [ $len_intersection_prime\
    \ -eq 0 ]\n                            then\n                                echo\
    \ \"NO\"\n                            else\n                                local\
    \ i\n                                local j\n                               \
    \ local len_intersection_prime\n                                len_intersection_prime=$(echo\
    \ \"$interval_1 $interval_2\" | sort -n | uniq | wc -l)\n                    \
    \            if [ $len_intersection_prime -eq 0 ]\n                          \
    \      then\n                                    ", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection\n    length_intersection=$(intersect\
    \ \"$interval_1\" \"${interval_2}\")\n    if [[ \"$length_intersection\" == \"\
    \" ]]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", " \
    \   local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((length1+length2))\n\
    \    local prime=\n    local prime_flag=\n    local prime_flag2=\n    local prime_flag3=\n\
    \    local prime_flag4=\n    local prime_flag5=\n    local prime_flag6=\n    local\
    \ prime_flag7=\n    local prime_flag8=\n    local prime_flag9=\n    local prime_flag10=\n\
    \    local prime_flag11=\n    local prime_flag12=\n    local prime_flag13=\n \
    \   local prime_flag14=\n    local prime_flag15=\n    local prime_flag16=\n  \
    \  local prime_flag17=\n    local prime_flag18=\n    local prime_flag19=\n   \
    \ local prime_flag20=\n    local prime_flag21=\n    local prime_flag22=\n    local\
    \ prime_flag23=\n    local prime_flag24=\n    local prime_flag25=\n    local prime_flag26=\n\
    \    local prime_flag27=\n    local prime_flag28=\n    local prime_flag29=\n \
    \   local prime_flag30=\n    local prime_flag31=\n    local prime_flag32=\n  \
    \  local prime_flag33=\n    local prime_flag34=\n    local prime_flag35=\n   \
    \ local prime_flag36=\n    local prime_flag37=\n    local prime_flag38=\n    local\
    \ prime_flag39=\n    local prime_flag40=\n    local prime_flag41=\n    local prime_flag42=\n\
    \    local prime_flag43=\n    local prime_flag44=\n    local prime_flag45=\n \
    \   local prime_flag46=\n    local prime_flag47=\n    local prime_flag48=\n  \
    \  local prime_flag49=\n    local prime_flag50=\n    local prime_flag51=\n   \
    \ local prime_flag52=\n    local prime_flag53=\n    local prime_flag54=\n    local\
    \ prime_flag55=\n    local prime_flag56=\n    local prime_", "    local a b c\
    \ d e f g h i j k l m n o p q r s t u v w x y z\n    local interval_length\n \
    \   local prime_number\n    local prime_number_string\n    local prime_number_string_length\n\
    \    local prime_number_string_length_string\n    local prime_number_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string\n    local prime_number_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string\n   \
    \ local prime_number_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \    local prime_number_string_length_string_length_string_length_string_length_string_length_string_",
  "    local interval_1 interval_2\n    interval_1=( $1 )\n    interval_2=( $2 )\n\
    \    local length_intersection\n    length_intersection=$(intersect \"${interval_1[@]}\"\
    \ \"${interval_2[@]}\")\n    if [[ $length_intersection == *\"YES\"* ]]; then\n\
    \        echo \"YES\"\n    else\n        echo \"NO\"\n    fi", "    local interval_1\
    \ interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection\
    \ prime_number\n    length_interval=$(expr ${interval_1}[1] - ${interval_2}[1])\n\
    \    prime_number=$(expr ${length_interval} * ${length_interval} - ${length_interval})\n\
    \    if [[ ${prime_number} -eq 0 ]]; then\n        echo \"NO\"\n    else\n   \
    \     echo \"YES\"\n    fi", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection_1 length_intersection_2\n  \
    \  length_intersection_1=$(echo \"$interval_1\" | wc -w)\n    length_intersection_2=$(echo\
    \ \"$interval_2\" | wc -w)\n    local length_1 length_2 length_length_1 length_length_2\
    \ length_length_length_1 length_length_length_2 length_length_length_length_1\
    \ length_length_length_length_2 length_length_length_length_length_1 length_length_length_length_length_2\
    \ length_length_length_length_length_length_1 length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_", "    local interval1=$1\n    local interval2=$2\n    local length1\n\
    \    local length2\n    local length\n    local prime\n    local prime_flag\n\
    \    local prime_flag2\n    local prime_flag3\n    local prime_flag4\n    local\
    \ prime_flag5\n    local prime_flag6\n    local prime_flag7\n    local prime_flag8\n\
    \    local prime_flag9\n    local prime_flag10\n    local prime_flag11\n    local\
    \ prime_flag12\n    local prime_flag13\n    local prime_flag14\n    local prime_flag15\n\
    \    local prime_flag16\n    local prime_flag17\n    local prime_flag18\n    local\
    \ prime_flag19\n    local prime_flag20\n    local prime_flag21\n    local prime_flag22\n\
    \    local prime_flag23\n    local prime_flag24\n    local prime_flag25\n    local\
    \ prime_flag26\n    local prime_flag27\n    local prime_flag28\n    local prime_flag29\n\
    \    local prime_flag30\n    local prime_flag31\n    local prime_flag32\n    local\
    \ prime_flag33\n    local prime_flag34\n    local prime_flag35\n    local prime_flag36\n\
    \    local prime_flag37\n    local prime_flag38\n    local prime_flag39\n    local\
    \ prime_flag40\n    local prime_flag41\n    local prime_flag42\n    local prime_flag43\n\
    \    local prime_flag44\n    local prime_flag45\n    local prime_flag46\n    local\
    \ prime_flag47\n    local prime_flag48\n    local prime_flag49\n    local prime_flag50\n\
    \    local prime_flag51\n    local prime_flag52\n    local prime_flag53\n    local\
    \ prime_flag54\n    local prime_flag55\n    local prime_flag56\n    local prime_flag57\n\
    \    local prime_flag58\n    local prime_flag59\n    local prime_flag60\n    local\
    \ prime_flag61\n    local prime_flag62\n    local prime_flag63\n    local prime_flag64\n\
    \    local prime_flag65\n    local prime_flag66\n    local prime_flag67\n    local\
    \ prime_flag68\n    local prime_flag", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local length\n    local prime\n   \
    \ local result\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i1\n    local i2\n    local\
    \ j1\n    local j2\n    local k1\n    local k2\n    local l1\n    local l2\n \
    \   local m1\n    local m2\n    local n1\n    local n2\n    local o1\n    local\
    \ o2\n    local p1\n    local p2\n    local q1\n    local q2\n    local r1\n \
    \   local r2\n    local s1\n    local s2\n    local t1\n    local t2\n    local\
    \ u1\n    local u2\n    local v1\n    local v2\n    local w1\n    local w2\n \
    \   local x1\n    local x2\n    local y1\n    local y2\n    local z1\n    local\
    \ z2\n    local a1\n    local b1\n    local c1\n    local d1\n    local e1\n \
    \   local f1\n    local g1\n    local h1\n    local i11\n    local i12\n    local\
    \ j11\n    local j12\n    local k11\n    local k12\n    local l11\n    local l12\n\
    \    local m11\n    local m12\n    local n11\n    local n12\n    local o11\n \
    \   local o12\n    local p11\n    local p12\n    local q11\n    local q12\n  \
    \  local r11\n    local r12\n    local s11\n    local s12\n    local t11\n   \
    \ local t12\n    local u11\n    local u12\n    local v11\n    local v12\n    local\
    \ w11\n    local w12\n    local x11\n    local x12\n    local y11\n    local y12\n\
    \    local z11\n    local z12\n    local a", "    local interval1=$1\n    local\
    \ interval2=$2\n    local length1\n    local length2\n    local prime\n    local\
    \ result\n    local i\n    local j\n    local k\n    local l\n    local m\n  \
    \  local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n", "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((length1+length2))\n\
    \    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n    local\
    \ prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n    local prime_flag6=0\n\
    \    local prime_flag7=0\n    local prime_flag8=0\n    local prime_flag9=0\n \
    \   local prime_flag10=0\n    local prime_flag11=0\n    local prime_flag12=0\n\
    \    local prime_flag13=0\n    local prime_flag14=0\n    local prime_flag15=0\n\
    \    local prime_flag16=0\n    local prime_flag17=0\n    local prime_flag18=0\n\
    \    local prime_flag19=0\n    local prime_flag20=0\n    local prime_flag21=0\n\
    \    local prime_flag22=0\n    local prime_flag23=0\n    local prime_flag24=0\n\
    \    local prime_flag25=0\n    local prime_flag26=0\n    local prime_flag27=0\n\
    \    local prime_flag28=0\n    local prime_flag29=0\n    local prime_flag30=0\n\
    \    local prime_flag31=0\n    local prime_flag32=0\n    local prime_flag33=0\n\
    \    local prime_flag34=0\n    local prime_flag35=0\n    local prime_flag36=0\n\
    \    local prime_flag37=0\n    local prime_flag38=0\n    local prime_flag39=0\n\
    \    local prime_flag40=0\n    local prime_flag41=0\n    local prime_flag42=0\n\
    \    local prime_flag43=0\n    local prime_flag44=0\n    local prime_flag45=0\n\
    \    local prime_flag46=0\n    local prime_flag47=0\n    local prime_flag48=0\n\
    \    local prime_flag49=0\n    local prime_flag50=0\n    local prime_flag51=0\n\
    \    local prime_flag52=0\n    local prime_flag53=0\n    local prime_flag54=0\n\
    \    local prime_flag55=0\n    local prime_flag56=0\n    local ", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n\
    \    local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((length1\
    \ + length2))\n    local prime\n    local prime_flag\n    local prime_flag2\n\
    \    local prime_flag3\n    local prime_flag4\n    local prime_flag5\n    local\
    \ prime_flag6\n    local prime_flag7\n    local prime_flag8\n    local prime_flag9\n\
    \    local prime_flag10\n    local prime_flag11\n    local prime_flag12\n    local\
    \ prime_flag13\n    local prime_flag14\n    local prime_flag15\n    local prime_flag16\n\
    \    local prime_flag17\n    local prime_flag18\n    local prime_flag19\n    local\
    \ prime_flag20\n    local prime_flag21\n    local prime_flag22\n    local prime_flag23\n\
    \    local prime_flag24\n    local prime_flag25\n    local prime_flag26\n    local\
    \ prime_flag27\n    local prime_flag28\n    local prime_flag29\n    local prime_flag30\n\
    \    local prime_flag31\n    local prime_flag32\n    local prime_flag33\n    local\
    \ prime_flag34\n    local prime_flag35\n    local prime_flag36\n    local prime_flag37\n\
    \    local prime_flag38\n    local prime_flag39\n    local prime_flag40\n    local\
    \ prime_flag41\n    local prime_flag42\n    local prime_flag43\n    local prime_flag44\n\
    \    local prime_flag45\n    local prime_flag46\n    local prime_flag47\n    local\
    \ prime_flag48\n    local prime_flag49\n    local prime_flag50\n    local prime_flag51\n\
    \    local prime_flag52\n    local prime_flag53\n    local prime_flag54\n    local\
    \ prime_flag55\n    local prime_flag56\n    local prime_flag57\n    local prime_flag58\n\
    \    local prime_flag59\n    local prime_flag60\n    local prime_flag61\n    local\
    \ prime_flag62\n    local prime_flag63\n    local prime_flag64\n    local prime",
  "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection prime_number\n    length_interval=$(expr ${interval_1}[1]\
    \ - ${interval_2}[1])\n    prime_number=$(expr ${length_interval} / 2)\n    if\
    \ [[ ${prime_number} -eq 0 ]]; then\n        echo \"NO\"\n    else\n        echo\
    \ \"YES\"\n    fi", "    local interval1=$1\n    local interval2=$2\n    local\
    \ length1=$((${#interval1} - 1))\n    local length2=$((${#interval2} - 1))\n \
    \   local length=$((length1 + length2))\n    local start1=$((${interval1[0]}))\n\
    \    local end1=$((${interval1[1]}))\n    local start2=$((${interval2[0]}))\n\
    \    local end2=$((${interval2[1]}))\n    local start=$((start1 < start2 ? start1\
    \ : start2))\n    local end=$((end1 < end2 ? end1 : end2))\n    local flag=0\n\
    \    local prime=1\n    local prime_flag=0\n    local prime_start=1\n    local\
    \ prime_end=1\n    local prime_length=1\n    local prime_start1=1\n    local prime_end1=1\n\
    \    local prime_length1=1\n    local prime_start2=1\n    local prime_end2=1\n\
    \    local prime_length2=1\n    local prime_start3=1\n    local prime_end3=1\n\
    \    local prime_length3=1\n    local prime_start4=1\n    local prime_end4=1\n\
    \    local prime_length4=1\n    local prime_start5=1\n    local prime_end5=1\n\
    \    local prime_length5=1\n    local prime_start6=1\n    local prime_end6=1\n\
    \    local prime_length6=1\n    local prime_start7=1\n    local prime_end7=1\n\
    \    local prime_length7=1\n    local prime_start8=1\n    local prime_end8=1\n\
    \    local prime_length8=1\n    local prime_start9=1\n    local prime_end9=1\n\
    \    local prime_length9=1\n    local prime_start10=1\n    local prime_end10=1\n\
    \    local prime_length10=1\n    local prime_start11=1\n    local prime_end11=1\n\
    \    local prime_length11=1\n    local prime_start12=1\n    local prime_end12=1\n\
    \    local prime_length12=1\n    local prime_start13=1\n    local prime_end13=1\n\
    \    local prime_length13=1\n    local prime_start14=1\n    local prime_end14=1\n\
    \    local prime_length14=1\n    local prime_start15=1\n    local ", "    local\
    \ interval1=$1\n    local interval2=$2\n    local length1=$((${#interval1} - 1))\n\
    \    local length2=$((${#interval2} - 1))\n    local start1=$((${interval1[0]}))\n\
    \    local end1=$((${interval1[1]}))\n    local start2=$((${interval2[0]}))\n\
    \    local end2=$((${interval2[1]}))\n    local length_intersection=$((${end1}\
    \ - ${start1} + ${end2} - ${start2}))\n    local prime_number=0\n    local prime_number_flag=0\n\
    \    local prime_number_flag2=0\n    local prime_number_flag3=0\n    local prime_number_flag4=0\n\
    \    local prime_number_flag5=0\n    local prime_number_flag6=0\n    local prime_number_flag7=0\n\
    \    local prime_number_flag8=0\n    local prime_number_flag9=0\n    local prime_number_flag10=0\n\
    \    local prime_number_flag11=0\n    local prime_number_flag12=0\n    local prime_number_flag13=0\n\
    \    local prime_number_flag14=0\n    local prime_number_flag15=0\n    local prime_number_flag16=0\n\
    \    local prime_number_flag17=0\n    local prime_number_flag18=0\n    local prime_number_flag19=0\n\
    \    local prime_number_flag20=0\n    local prime_number_flag21=0\n    local prime_number_flag22=0\n\
    \    local prime_number_flag23=0\n    local prime_number_flag24=0\n    local prime_number_flag25=0\n\
    \    local prime_number_flag26=0\n    local prime_number_flag27=0\n    local prime_number_flag28=0\n\
    \    local prime_number_flag29=0\n    local prime_number_flag30=0\n    local prime_number_flag31=0\n\
    \    local prime_number_flag32=0\n    local prime_number_flag33=0\n    local prime_number_flag34=0\n\
    \    local prime_number_flag35=0\n    local prime_number_flag36=0\n    local prime_number_flag37=0\n\
    \    local prime_number_flag38=0\n    local prime_number_flag39=0\n    local prime_number_flag40=0\n\
    \    local prime_number_flag41=0\n    local prime_number_flag42=0\n    local prime_number_flag43=0\n\
    \    local prime_number_flag44", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local length\n    local prime\n   \
    \ local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local prime", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n\
    \    local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((length1\
    \ + length2))\n    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n\
    \    local prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n \
    \   local prime_flag6=0\n    local prime_flag7=0\n    local prime_flag8=0\n  \
    \  local prime_flag9=0\n    local prime_flag10=0\n    local prime_flag11=0\n \
    \   local prime_flag12=0\n    local prime_flag13=0\n    local prime_flag14=0\n\
    \    local prime_flag15=0\n    local prime_flag16=0\n    local prime_flag17=0\n\
    \    local prime_flag18=0\n    local prime_flag19=0\n    local prime_flag20=0\n\
    \    local prime_flag21=0\n    local prime_flag22=0\n    local prime_flag23=0\n\
    \    local prime_flag24=0\n    local prime_flag25=0\n    local prime_flag26=0\n\
    \    local prime_flag27=0\n    local prime_flag28=0\n    local prime_flag29=0\n\
    \    local prime_flag30=0\n    local prime_flag31=0\n    local prime_flag32=0\n\
    \    local prime_flag33=0\n    local prime_flag34=0\n    local prime_flag35=0\n\
    \    local prime_flag36=0\n    local prime_flag37=0\n    local prime_flag38=0\n\
    \    local prime_flag39=0\n    local prime_flag40=0\n    local prime_flag41=0\n\
    \    local prime_flag42=0\n    local prime_flag43=0\n    local prime_flag44=0\n\
    \    local prime_flag45=0\n    local prime_flag46=0\n    local prime_flag47=0\n\
    \    local prime_flag48=0\n    local prime_flag49=0\n    local prime_flag50=0\n\
    \    local prime_flag51=0\n    local prime_flag52=0\n    local prime_flag53=0\n\
    \    local prime_flag54=0\n    local prime_flag55=0\n    local prime_flag56=0\n\
    \    local ", "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((length1 + length2))\n    local start1=$((${interval1[0]}))\n\
    \    local end1=$((${interval1[1]}))\n    local start2=$((${interval2[0]}))\n\
    \    local end2=$((${interval2[1]}))\n    local prime=1\n    local prime2=1\n\
    \    local prime3=1\n    local prime4=1\n    local prime5=1\n    local prime6=1\n\
    \    local prime7=1\n    local prime8=1\n    local prime9=1\n    local prime10=1\n\
    \    local prime11=1\n    local prime12=1\n    local prime13=1\n    local prime14=1\n\
    \    local prime15=1\n    local prime16=1\n    local prime17=1\n    local prime18=1\n\
    \    local prime19=1\n    local prime20=1\n    local prime21=1\n    local prime22=1\n\
    \    local prime23=1\n    local prime24=1\n    local prime25=1\n    local prime26=1\n\
    \    local prime27=1\n    local prime28=1\n    local prime29=1\n    local prime30=1\n\
    \    local prime31=1\n    local prime32=1\n    local prime33=1\n    local prime34=1\n\
    \    local prime35=1\n    local prime36=1\n    local prime37=1\n    local prime38=1\n\
    \    local prime39=1\n    local prime40=1\n    local prime41=1\n    local prime42=1\n\
    \    local prime43=1\n    local prime44=1\n    local prime45=1\n    local prime46=1\n\
    \    local prime47=1\n    local prime48=1\n    local prime49=1\n    local prime50=1\n\
    \    local prime51=1\n    local prime52=1\n    local prime53=1\n    local prime54=1\n\
    \    local prime55=1\n    local prime56=1\n    local prime57=1\n    local prime58=1\n\
    \    local prime59=1\n    local prime60=1\n    local prime61=1\n    local prime62=1\n\
    \    local prime63=1\n    local prime64=1\n    local prime65=1\n    local prime66=1\n\
    \    local prime67=1\n    local prime68=1", "    local a b\n    local len\n  \
    \  local i\n    local j\n    local result\n    local prime\n    local primes\n\
    \    local primes_len\n    local primes_str\n    local primes_str1\n    local\
    \ primes_str2\n    local primes_str3\n    local primes_str4\n    local primes_str5\n\
    \    local primes_str6\n    local primes_str7\n    local primes_str8\n    local\
    \ primes_str9\n    local primes_str10\n    local primes_str11\n    local primes_str12\n\
    \    local primes_str13\n    local primes_str14\n    local primes_str15\n    local\
    \ primes_str16\n    local primes_str17\n    local primes_str18\n    local primes_str19\n\
    \    local primes_str20\n    local primes_str21\n    local primes_str22\n    local\
    \ primes_str23\n    local primes_str24\n    local primes_str25\n    local primes_str26\n\
    \    local primes_str27\n    local primes_str28\n    local primes_str29\n    local\
    \ primes_str30\n    local primes_str31\n    local primes_str32\n    local primes_str33\n\
    \    local primes_str34\n    local primes_str35\n    local primes_str36\n    local\
    \ primes_str37\n    local primes_str38\n    local primes_str39\n    local primes_str40\n\
    \    local primes_str41\n    local primes_str42\n    local primes_str43\n    local\
    \ primes_str44\n    local primes_str45\n    local primes_str46\n    local primes_str47\n\
    \    local primes_str48\n    local primes_str49\n    local primes_str50\n    local\
    \ primes_str51\n    local primes_str52\n    local primes_str53\n    local primes_str54\n\
    \    local primes_str55\n    local primes_str56\n    local primes_str57\n    local\
    \ primes_str58\n    local primes_str59\n    local primes_str60\n    local primes_str61\n\
    \    local primes_str62\n    local primes_str63\n    local primes_str64\n    local\
    \ primes_str65\n    local primes_str66\n    local primes_str67\n    local ", " \
    \   local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection\n    length_intersection=$(intersect \"$interval_1\" \"\
    ${interval_2}\")\n    if [ \"$length_intersection\" -eq \"0\" ]; then\n      \
    \  echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${#interval1} - 1))\n    local length2=$((${#interval2}\
    \ - 1))\n    local length_intersection=$((length1 + length2))\n    local length_prime=0\n\
    \    local prime_number=\"YES\"\n    local prime_number_flag=\"NO\"\n    local\
    \ prime_number_flag2=\"NO\"\n    local prime_number_flag3=\"NO\"\n    local prime_number_flag4=\"\
    NO\"\n    local prime_number_flag5=\"NO\"\n    local prime_number_flag6=\"NO\"\
    \n    local prime_number_flag7=\"NO\"\n    local prime_number_flag8=\"NO\"\n \
    \   local prime_number_flag9=\"NO\"\n    local prime_number_flag10=\"NO\"\n  \
    \  local prime_number_flag11=\"NO\"\n    local prime_number_flag12=\"NO\"\n  \
    \  local prime_number_flag13=\"NO\"\n    local prime_number_flag14=\"NO\"\n  \
    \  local prime_number_flag15=\"NO\"\n    local prime_number_flag16=\"NO\"\n  \
    \  local prime_number_flag17=\"NO\"\n    local prime_number_flag18=\"NO\"\n  \
    \  local prime_number_flag19=\"NO\"\n    local prime_number_flag20=\"NO\"\n  \
    \  local prime_number_flag21=\"NO\"\n    local prime_number_flag22=\"NO\"\n  \
    \  local prime_number_flag23=\"NO\"\n    local prime_number_flag24=\"NO\"\n  \
    \  local prime_number_flag25=\"NO\"\n    local prime_number_flag26=\"NO\"\n  \
    \  local prime_number_flag27=\"NO\"\n    local prime_number_flag28=\"NO\"\n  \
    \  local prime_number_flag29=\"NO\"\n    local prime_number_flag30=\"NO\"\n  \
    \  local prime_number_flag31=\"NO\"\n    local prime_number_flag32=\"NO\"\n  \
    \  local prime_number_flag33=\"NO\"\n    local prime_number_flag34=\"NO\"\n  \
    \  local prime_number_flag35=\"NO\"\n    local prime_number_flag36=\"NO\"\n  \
    \  local prime_number_flag37=\"NO\"\n    local prime_number_flag38=\"NO\"\n  \
    \  local prime_number_flag39=\"NO\"\n    local prime_number_flag40=\"NO\"\n  \
    \  local prime_number_flag", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection prime_number\n    length_interval=$(expr\
    \ ${interval_1}[1] - ${interval_2}[1])\n    prime_number=$(expr ${length_interval}\
    \ / 2)\n    if [ ${length_interval} -eq ${prime_number} ]; then\n        echo\
    \ \"YES\"\n    else\n        echo \"NO\"\n    fi", "    local interval1=$1\n \
    \   local interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n\
    \    local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((length1\
    \ + length2))\n    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n\
    \    local prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n \
    \   local prime_flag6=0\n    local prime_flag7=0\n    local prime_flag8=0\n  \
    \  local prime_flag9=0\n    local prime_flag10=0\n    local prime_flag11=0\n \
    \   local prime_flag12=0\n    local prime_flag13=0\n    local prime_flag14=0\n\
    \    local prime_flag15=0\n    local prime_flag16=0\n    local prime_flag17=0\n\
    \    local prime_flag18=0\n    local prime_flag19=0\n    local prime_flag20=0\n\
    \    local prime_flag21=0\n    local prime_flag22=0\n    local prime_flag23=0\n\
    \    local prime_flag24=0\n    local prime_flag25=0\n    local prime_flag26=0\n\
    \    local prime_flag27=0\n    local prime_flag28=0\n    local prime_flag29=0\n\
    \    local prime_flag30=0\n    local prime_flag31=0\n    local prime_flag32=0\n\
    \    local prime_flag33=0\n    local prime_flag34=0\n    local prime_flag35=0\n\
    \    local prime_flag36=0\n    local prime_flag37=0\n    local prime_flag38=0\n\
    \    local prime_flag39=0\n    local prime_flag40=0\n    local prime_flag41=0\n\
    \    local prime_flag42=0\n    local prime_flag43=0\n    local prime_flag44=0\n\
    \    local prime_flag45=0\n    local prime_flag46=0\n    local prime_flag47=0\n\
    \    local prime_flag48=0\n    local prime_flag49=0\n    local prime_flag50=0\n\
    \    local prime_flag51=0\n    local prime_flag52=0\n    local prime_flag53=0\n\
    \    local prime_flag54=0\n    local prime_flag55=0\n    local prime_flag56=0\n\
    \    local ", "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((length1+length2))\n\
    \    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n    local\
    \ prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n    local prime_flag6=0\n\
    \    local prime_flag7=0\n    local prime_flag8=0\n    local prime_flag9=0\n \
    \   local prime_flag10=0\n    local prime_flag11=0\n    local prime_flag12=0\n\
    \    local prime_flag13=0\n    local prime_flag14=0\n    local prime_flag15=0\n\
    \    local prime_flag16=0\n    local prime_flag17=0\n    local prime_flag18=0\n\
    \    local prime_flag19=0\n    local prime_flag20=0\n    local prime_flag21=0\n\
    \    local prime_flag22=0\n    local prime_flag23=0\n    local prime_flag24=0\n\
    \    local prime_flag25=0\n    local prime_flag26=0\n    local prime_flag27=0\n\
    \    local prime_flag28=0\n    local prime_flag29=0\n    local prime_flag30=0\n\
    \    local prime_flag31=0\n    local prime_flag32=0\n    local prime_flag33=0\n\
    \    local prime_flag34=0\n    local prime_flag35=0\n    local prime_flag36=0\n\
    \    local prime_flag37=0\n    local prime_flag38=0\n    local prime_flag39=0\n\
    \    local prime_flag40=0\n    local prime_flag41=0\n    local prime_flag42=0\n\
    \    local prime_flag43=0\n    local prime_flag44=0\n    local prime_flag45=0\n\
    \    local prime_flag46=0\n    local prime_flag47=0\n    local prime_flag48=0\n\
    \    local prime_flag49=0\n    local prime_flag50=0\n    local prime_flag51=0\n\
    \    local prime_flag52=0\n    local prime_flag53=0\n    local prime_flag54=0\n\
    \    local prime_flag55=0\n    local prime_flag56=0\n    local ", "    local interval_1\
    \ interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection\n\
    \    length_intersection=$(intersect \"$interval_1\" \"${interval_2}\")\n    if\
    \ [[ $length_intersection -eq 0 ]]; then\n        echo \"NO\"\n    else\n    \
    \    echo \"YES\"\n    fi", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection_1 length_intersection_2\n  \
    \  length_intersection_1=$(echo \"$interval_1\" | awk '{print length($1)}')\n\
    \    length_intersection_2=$(echo \"$interval_2\" | awk '{print length($2)}')\n\
    \    if [ \"$length_intersection_1\" -gt \"$length_intersection_2\" ]; then\n\
    \        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval_1\
    \ interval_2 length prime_number\n    interval_1=$1\n    interval_2=$2\n    length=$(expr\
    \ ${interval_1}[1] - ${interval_2}[1])\n    prime_number=$((length / 2))\n   \
    \ if [ $prime_number -eq 0 ]; then\n        echo \"NO\"\n    else\n        echo\
    \ \"YES\"\n    fi", "    local interval1=$1\n    local interval2=$2\n    local\
    \ length1\n    local length2\n    local length\n    local prime\n    local prime_check\n\
    \    local prime_check2\n    local prime_check3\n    local prime_check4\n    local\
    \ prime_check5\n    local prime_check6\n    local prime_check7\n    local prime_check8\n\
    \    local prime_check9\n    local prime_check10\n    local prime_check11\n  \
    \  local prime_check12\n    local prime_check13\n    local prime_check14\n   \
    \ local prime_check15\n    local prime_check16\n    local prime_check17\n    local\
    \ prime_check18\n    local prime_check19\n    local prime_check20\n    local prime_check21\n\
    \    local prime_check22\n    local prime_check23\n    local prime_check24\n \
    \   local prime_check25\n    local prime_check26\n    local prime_check27\n  \
    \  local prime_check28\n    local prime_check29\n    local prime_check30\n   \
    \ local prime_check31\n    local prime_check32\n    local prime_check33\n    local\
    \ prime_check34\n    local prime_check35\n    local prime_check36\n    local prime_check37\n\
    \    local prime_check38\n    local prime_check39\n    local prime_check40\n \
    \   local prime_check41\n    local prime_check42\n    local prime_check43\n  \
    \  local prime_check44\n    local prime_check45\n    local prime_check46\n   \
    \ local prime_check47\n    local prime_check48\n    local prime_check49\n    local\
    \ prime_check50\n    local prime_check51\n    local prime_check52\n    local prime_check53\n\
    \    local prime_check54\n    local prime_check55\n    local prime_check56\n \
    \   local prime_check57\n    local prime_check58\n    local prime_check59\n  \
    \  local prime_check60\n    local prime_check61\n    local prime_check62\n   \
    \ local prime_check63\n    local prime_check64\n    local prime_check65\n    local\
    \ prime_check66\n    local prime_check67\n    local prime_check68\n    local prime_check",
  "    local interval1=$1\n    local interval2=$2\n    local length1=$((${#interval1}\
    \ - 1))\n    local length2=$((${#interval2} - 1))\n    local length_intersection=$((length1\
    \ + length2))\n    local prime_numbers=()\n    local prime_numbers_length=()\n\
    \    local prime_numbers_count=()\n    local prime_numbers_count_length=()\n \
    \   local prime_numbers_count_length_prime=()\n    local prime_numbers_count_length_prime_prime=()\n\
    \    local prime_numbers_count_length_prime_prime_prime=()\n    local prime_numbers_count_length_prime_prime_prime_prime=()\n\
    \    local prime_numbers_count_length_prime_prime_prime_prime_prime=()\n    local\
    \ prime_numbers_count_length_prime_prime_prime_prime_prime_prime=()\n    local\
    \ prime_numbers_count_length_prime_prime_prime_prime_prime_prime_prime=()\n  \
    \  local prime_numbers_count_length_prime_prime_prime_prime_prime_prime_prime_prime=()\n\
    \    local prime_numbers_count_length_prime_prime_prime_prime_prime_prime_prime_prime_prime=()\n\
    \    local prime_numbers_count_length_prime_prime_prime_prime_prime_prime_prime_prime_prime=()\n\
    \    local prime_numbers_count_length_prime_prime_prime_prime_prime_prime_prime_prime_prime=()\n\
    \    local prime_numbers_count_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime=()\n\
    \    local prime_numbers_count_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime=()\n\
    \    local prime_numbers_count_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime=()\n\
    \    local prime_numbers_count_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime=()\n\
    \    local prime_numbers_count_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime=()\n\
    \    local prime_numbers_count_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_",
  "    local interval_1 interval_2\n    interval_1=( $1 )\n    interval_2=( $2 )\n\
    \    local length_intersection\n    length_intersection=$(intersect \"${interval_1[@]}\"\
    \ \"$interval_2\")\n    if [[ $length_intersection -eq 0 ]]; then\n        echo\
    \ \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection_1 length_intersection_2\n\
    \    length_intersection_1=$(echo \"$interval_1\" | awk '{print $1}')\n    length_intersection_2=$(echo\
    \ \"$interval_2\" | awk '{print $1}')\n    if [[ $length_intersection_1 -gt $length_intersection_2\
    \ ]]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "  \
    \  local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection\n    length_intersection=$(intersect \"$interval_1\" \"\
    ${interval_2[@]}\")\n    if [ \"$length_intersection\" -eq 0 ]; then\n       \
    \ echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval_1\
    \ interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection\n\
    \    length_intersection=$(intersect \"$interval_1\" \"${interval_2}\")\n    if\
    \ [[ $length_intersection == *\"YES\"* ]]; then\n        echo \"YES\"\n    else\n\
    \        echo \"NO\"\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local length\n    local prime\n   \
    \ local result\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection prime_number\n    length_interval=$(echo \"$interval_1\
    \ $interval_2\" | awk '{print $1-$2}')\n    prime_number=$((length_interval %\
    \ 2))\n    if [ \"$prime_number\" -eq \"1\" ]; then\n        echo \"NO\"\n   \
    \ else\n        echo \"YES\"\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local length\n    local prime\n   \
    \ local result\n    local interval1start\n    local interval1end\n    local interval2start\n\
    \    local interval2end\n    local interval1start2\n    local interval1end2\n\
    \    local interval2start2\n    local interval2end2\n    local interval1start3\n\
    \    local interval1end3\n    local interval2start3\n    local interval2end3\n\
    \    local interval1start4\n    local interval1end4\n    local interval2start4\n\
    \    local interval2end4\n    local interval1start5\n    local interval1end5\n\
    \    local interval2start5\n    local interval2end5\n    local interval1start6\n\
    \    local interval1end6\n    local interval2start6\n    local interval2end6\n\
    \    local interval1start7\n    local interval1end7\n    local interval2start7\n\
    \    local interval2end7\n    local interval1start8\n    local interval1end8\n\
    \    local interval2start8\n    local interval2end8\n    local interval1start9\n\
    \    local interval1end9\n    local interval2start9\n    local interval2end9\n\
    \    local interval1start10\n    local interval1end10\n    local interval2start10\n\
    \    local interval2end10\n    local interval1start11\n    local interval1end11\n\
    \    local interval2start11\n    local interval2end11\n    local interval1start12\n\
    \    local interval1end12\n    local interval2start12\n    local interval2end12\n\
    \    local interval1start13\n    local interval1end13\n    local interval2start13\n\
    \    local interval2end13\n    local interval1start14\n    local interval1end14\n\
    \    local interval2start14\n    local interval2end14\n    local interval1start15\n\
    \    local interval1end15\n    local interval2start15\n    local interval2end15\n\
    \    local interval1start16\n    local interval1end16\n    local interval2start16\n\
    \    local interval2end16\n    local interval1start17\n    local interval1end17\n\
    \    local interval2start17\n    local interval2end17\n    local interval1", " \
    \   local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((length1 + length2))\n    local prime=1\n    local prime_flag=0\n\
    \    local prime_flag2=0\n    local prime_flag3=0\n    local prime_flag4=0\n \
    \   local prime_flag5=0\n    local prime_flag6=0\n    local prime_flag7=0\n  \
    \  local prime_flag8=0\n    local prime_flag9=0\n    local prime_flag10=0\n  \
    \  local prime_flag11=0\n    local prime_flag12=0\n    local prime_flag13=0\n\
    \    local prime_flag14=0\n    local prime_flag15=0\n    local prime_flag16=0\n\
    \    local prime_flag17=0\n    local prime_flag18=0\n    local prime_flag19=0\n\
    \    local prime_flag20=0\n    local prime_flag21=0\n    local prime_flag22=0\n\
    \    local prime_flag23=0\n    local prime_flag24=0\n    local prime_flag25=0\n\
    \    local prime_flag26=0\n    local prime_flag27=0\n    local prime_flag28=0\n\
    \    local prime_flag29=0\n    local prime_flag30=0\n    local prime_flag31=0\n\
    \    local prime_flag32=0\n    local prime_flag33=0\n    local prime_flag34=0\n\
    \    local prime_flag35=0\n    local prime_flag36=0\n    local prime_flag37=0\n\
    \    local prime_flag38=0\n    local prime_flag39=0\n    local prime_flag40=0\n\
    \    local prime_flag41=0\n    local prime_flag42=0\n    local prime_flag43=0\n\
    \    local prime_flag44=0\n    local prime_flag45=0\n    local prime_flag46=0\n\
    \    local prime_flag47=0\n    local prime_flag48=0\n    local prime_flag49=0\n\
    \    local prime_flag50=0\n    local prime_flag51=0\n    local prime_flag52=0\n\
    \    local prime_flag53=0\n    local prime_flag54=0\n    local prime_flag55=0\n\
    \    local prime_flag56=0\n    local ", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1=$((${interval1[1]} - ${interval1[0]}))\n    local length2=$((${interval2[1]}\
    \ - ${interval2[0]}))\n    local length_intersection=$((${length1} + ${length2}))\n\
    \    local length_prime=1\n    local prime_number=\"YES\"\n    local prime_number_flag=\"\
    YES\"\n    local prime_number_flag2=\"YES\"\n    local prime_number_flag3=\"YES\"\
    \n    local prime_number_flag4=\"YES\"\n    local prime_number_flag5=\"YES\"\n\
    \    local prime_number_flag6=\"YES\"\n    local prime_number_flag7=\"YES\"\n\
    \    local prime_number_flag8=\"YES\"\n    local prime_number_flag9=\"YES\"\n\
    \    local prime_number_flag10=\"YES\"\n    local prime_number_flag11=\"YES\"\n\
    \    local prime_number_flag12=\"YES\"\n    local prime_number_flag13=\"YES\"\n\
    \    local prime_number_flag14=\"YES\"\n    local prime_number_flag15=\"YES\"\n\
    \    local prime_number_flag16=\"YES\"\n    local prime_number_flag17=\"YES\"\n\
    \    local prime_number_flag18=\"YES\"\n    local prime_number_flag19=\"YES\"\n\
    \    local prime_number_flag20=\"YES\"\n    local prime_number_flag21=\"YES\"\n\
    \    local prime_number_flag22=\"YES\"\n    local prime_number_flag23=\"YES\"\n\
    \    local prime_number_flag24=\"YES\"\n    local prime_number_flag25=\"YES\"\n\
    \    local prime_number_flag26=\"YES\"\n    local prime_number_flag27=\"YES\"\n\
    \    local prime_number_flag28=\"YES\"\n    local prime_number_flag29=\"YES\"\n\
    \    local prime_number_flag30=\"YES\"\n    local prime_number_flag31=\"YES\"\n\
    \    local prime_number_flag32=\"YES\"\n    local prime_number_flag33=\"YES\"\n\
    \    local prime_number_flag34=\"YES\"\n    local prime_number_flag35=\"YES\"\n\
    \    local prime_number_flag36=\"YES\"\n    local prime_number_flag37=\"YES\"\n\
    \    local prime_number_flag38=\"YES\"\n    local prime_number_flag39=\"YES\"\n\
    \    local prime_number_", "    local interval1=$1\n    local interval2=$2\n \
    \   local length1=$((${interval1[1]}+1))\n    local length2=$((${interval2[1]}+1))\n\
    \    local length_intersection=$((${length1}+${length2}))\n    local length_prime=1\n\
    \    local prime_number=\"YES\"\n    local prime_number_flag=\"NO\"\n    local\
    \ prime_number_flag2=\"NO\"\n    local prime_number_flag3=\"NO\"\n    local prime_number_flag4=\"\
    NO\"\n    local prime_number_flag5=\"NO\"\n    local prime_number_flag6=\"NO\"\
    \n    local prime_number_flag7=\"NO\"\n    local prime_number_flag8=\"NO\"\n \
    \   local prime_number_flag9=\"NO\"\n    local prime_number_flag10=\"NO\"\n  \
    \  local prime_number_flag11=\"NO\"\n    local prime_number_flag12=\"NO\"\n  \
    \  local prime_number_flag13=\"NO\"\n    local prime_number_flag14=\"NO\"\n  \
    \  local prime_number_flag15=\"NO\"\n    local prime_number_flag16=\"NO\"\n  \
    \  local prime_number_flag17=\"NO\"\n    local prime_number_flag18=\"NO\"\n  \
    \  local prime_number_flag19=\"NO\"\n    local prime_number_flag20=\"NO\"\n  \
    \  local prime_number_flag21=\"NO\"\n    local prime_number_flag22=\"NO\"\n  \
    \  local prime_number_flag23=\"NO\"\n    local prime_number_flag24=\"NO\"\n  \
    \  local prime_number_flag25=\"NO\"\n    local prime_number_flag26=\"NO\"\n  \
    \  local prime_number_flag27=\"NO\"\n    local prime_number_flag28=\"NO\"\n  \
    \  local prime_number_flag29=\"NO\"\n    local prime_number_flag30=\"NO\"\n  \
    \  local prime_number_flag31=\"NO\"\n    local prime_number_flag32=\"NO\"\n  \
    \  local prime_number_flag33=\"NO\"\n    local prime_number_flag34=\"NO\"\n  \
    \  local prime_number_flag35=\"NO\"\n    local prime_number_flag36=\"NO\"\n  \
    \  local prime_number_flag37=\"NO\"\n    local prime_number_flag38=\"NO\"\n  \
    \  local prime_number_flag39=\"NO\"\n    local prime_number_flag40=\"NO\"\n",
  "    local a b c d e f g h i j k l m n o p q r s t u v w x y z\n    local interval_length\n\
    \    local prime_number\n    local prime_number_flag\n    local prime_number_flag2\n\
    \    local prime_number_flag3\n    local prime_number_flag4\n    local prime_number_flag5\n\
    \    local prime_number_flag6\n    local prime_number_flag7\n    local prime_number_flag8\n\
    \    local prime_number_flag9\n    local prime_number_flag10\n    local prime_number_flag11\n\
    \    local prime_number_flag12\n    local prime_number_flag13\n    local prime_number_flag14\n\
    \    local prime_number_flag15\n    local prime_number_flag16\n    local prime_number_flag17\n\
    \    local prime_number_flag18\n    local prime_number_flag19\n    local prime_number_flag20\n\
    \    local prime_number_flag21\n    local prime_number_flag22\n    local prime_number_flag23\n\
    \    local prime_number_flag24\n    local prime_number_flag25\n    local prime_number_flag26\n\
    \    local prime_number_flag27\n    local prime_number_flag28\n    local prime_number_flag29\n\
    \    local prime_number_flag30\n    local prime_number_flag31\n    local prime_number_flag32\n\
    \    local prime_number_flag33\n    local prime_number_flag34\n    local prime_number_flag35\n\
    \    local prime_number_flag36\n    local prime_number_flag37\n    local prime_number_flag38\n\
    \    local prime_number_flag39\n    local prime_number_flag40\n    local prime_number_flag41\n\
    \    local prime_number_flag42\n    local prime_number_flag43\n    local prime_number_flag44\n\
    \    local prime_number_flag45\n    local prime_number_flag46\n    local prime_number_flag47\n\
    \    local prime_number_flag48\n    local prime_number_flag49\n    local prime_number_flag50\n\
    \    local prime_number_flag51\n    local prime_number_flag52\n    local prime_number_flag53\n\
    \    local prime_number_flag54\n    local prime_number_flag55\n    local prime_number_flag56\n\
    \    local prime_number_flag57\n    local prime_number_flag58\n    local prime_number_flag59\n",
  "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection_1 length_intersection_2 length_1 length_2\n    length_intersection_1=$(expr\
    \ ${interval_1}[1] - ${interval_1}[0])\n    length_intersection_2=$(expr ${interval_2}[1]\
    \ - ${interval_2}[0])\n    length_1=$(expr ${interval_1}[1] - ${interval_1}[0])\n\
    \    length_2=$(expr ${interval_2}[1] - ${interval_2}[0])\n    if [[ ${length_intersection_1}\
    \ -eq ${length_intersection_2} ]]; then\n        if [[ ${length_intersection_1}\
    \ -eq ${length_1} ]]; then\n            if [[ ${length_intersection_2} -eq ${length_2}\
    \ ]]; then\n                if [[ ${interval_1}[0] -gt ${interval_2}[0] ]]; then\n\
    \                    echo \"YES\"\n                else\n                    echo\
    \ \"NO\"\n                fi\n            else\n                echo \"NO\"\n\
    \            fi\n        else\n            echo \"NO\"\n        fi\n    else\n\
    \        echo \"NO\"\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local result\n    local i\n    local\
    \ j\n    local prime\n    local primes\n    local primesLength\n    local primesLength2\n\
    \    local primesLength3\n    local primesLength4\n    local primesLength5\n \
    \   local primesLength6\n    local primesLength7\n    local primesLength8\n  \
    \  local primesLength9\n    local primesLength10\n    local primesLength11\n \
    \   local primesLength12\n    local primesLength13\n    local primesLength14\n\
    \    local primesLength15\n    local primesLength16\n    local primesLength17\n\
    \    local primesLength18\n    local primesLength19\n    local primesLength20\n\
    \    local primesLength21\n    local primesLength22\n    local primesLength23\n\
    \    local primesLength24\n    local primesLength25\n    local primesLength26\n\
    \    local primesLength27\n    local primesLength28\n    local primesLength29\n\
    \    local primesLength30\n    local primesLength31\n    local primesLength32\n\
    \    local primesLength33\n    local primesLength34\n    local primesLength35\n\
    \    local primesLength36\n    local primesLength37\n    local primesLength38\n\
    \    local primesLength39\n    local primesLength40\n    local primesLength41\n\
    \    local primesLength42\n    local primesLength43\n    local primesLength44\n\
    \    local primesLength45\n    local primesLength46\n    local primesLength47\n\
    \    local primesLength48\n    local primesLength49\n    local primesLength50\n\
    \    local primesLength51\n    local primesLength52\n    local primesLength53\n\
    \    local primesLength54\n    local primesLength55\n    local primesLength56\n\
    \    local primesLength57\n    local primesLength58\n    local primesLength59\n\
    \    local primesLength60\n    local primesLength61\n    local primesLength62\n\
    \    local primesLength63\n    local primesLength64\n    local primesLength65\n\
    \    local primesLength66\n    local primesLength67", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1\n    local length2\n    local result\n\
    \    local i\n    local j\n    local prime\n    local primes\n    local primesLength\n\
    \    local primesLength2\n    local primesLength3\n    local primesLength4\n \
    \   local primesLength5\n    local primesLength6\n    local primesLength7\n  \
    \  local primesLength8\n    local primesLength9\n    local primesLength10\n  \
    \  local primesLength11\n    local primesLength12\n    local primesLength13\n\
    \    local primesLength14\n    local primesLength15\n    local primesLength16\n\
    \    local primesLength17\n    local primesLength18\n    local primesLength19\n\
    \    local primesLength20\n    local primesLength21\n    local primesLength22\n\
    \    local primesLength23\n    local primesLength24\n    local primesLength25\n\
    \    local primesLength26\n    local primesLength27\n    local primesLength28\n\
    \    local primesLength29\n    local primesLength30\n    local primesLength31\n\
    \    local primesLength32\n    local primesLength33\n    local primesLength34\n\
    \    local primesLength35\n    local primesLength36\n    local primesLength37\n\
    \    local primesLength38\n    local primesLength39\n    local primesLength40\n\
    \    local primesLength41\n    local primesLength42\n    local primesLength43\n\
    \    local primesLength44\n    local primesLength45\n    local primesLength46\n\
    \    local primesLength47\n    local primesLength48\n    local primesLength49\n\
    \    local primesLength50\n    local primesLength51\n    local primesLength52\n\
    \    local primesLength53\n    local primesLength54\n    local primesLength55\n\
    \    local primesLength56\n    local primesLength57\n    local primesLength58\n\
    \    local primesLength59\n    local primesLength60\n    local primesLength61\n\
    \    local primesLength62\n    local primesLength63\n    local primesLength64\n\
    \    local primesLength65\n    local primesLength66\n    local primesLength67",
  "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection_1 length_intersection_2 length_1 length_2\n    length_intersection_1=$(echo\
    \ \"$interval_1\" | wc -w)\n    length_intersection_2=$(echo \"$interval_2\" |\
    \ wc -w)\n    length_1=$(echo \"$interval_1\" | wc -w)\n    length_2=$(echo \"\
    $interval_2\" | wc -w)\n    if [ $length_intersection_1 -eq $length_intersection_2\
    \ ]; then\n        if [ $length_1 -eq $length_2 ]; then\n            echo \"YES\"\
    \n        else\n            echo \"NO\"\n        fi\n    else\n        echo \"\
    NO\"\n    fi", "    local a b\n    a=$1\n    b=$2\n    local len\n    len=$((\
    \ ${#a} - ${#b} ))\n    local i\n    for i in $(seq 0 $(( ${#a} - 1 ))); do\n\
    \        if [[ ${a[$i]} -gt ${b[$i]} ]]; then\n            echo \"NO\"\n     \
    \       return\n        fi\n    done\n    local j\n    for j in $(seq 0 $(( ${#b}\
    \ - 1 ))); do\n        if [[ ${a[$i]} -gt ${b[$j]} ]]; then\n            echo\
    \ \"NO\"\n            return\n        fi\n    done\n    local k\n    for k in\
    \ $(seq 0 $(( ${#a} - 1 ))); do\n        if [[ ${a[$k]} -gt ${b[$k]} ]]; then\n\
    \            echo \"NO\"\n            return\n        fi\n    done\n    local\
    \ l\n    for l in $(seq 0 $(( ${#b} - 1 ))); do\n        if [[ ${a[$k]} -gt ${b[$l]}\
    \ ]]; then\n            echo \"NO\"\n            return\n        fi\n    done\n\
    \    local m\n    for m in $(seq 0 $(( ${#a} - 1 ))); do\n        if [[ ${b[$m]}\
    \ -gt ${a[$m]} ]]; then\n            echo \"NO\"\n            return\n       \
    \ fi\n    done\n    local n\n    for n in $(seq 0 $(( ${#b} - 1 ))); do\n    \
    \    if [[ ${b[$n]} -gt ${a[$n]} ]]; then\n            echo \"NO\"\n         \
    \   return\n        fi\n    done\n    local o\n    for o in $(seq 0 $(( ${#a}\
    \ - 1 ))); do\n        if [[ ${a[$o]} -gt ${b[$o]} ]]; then\n            echo\
    \ \"NO\"\n            return\n        fi\n    done\n    local p\n    for p in\
    \ $(seq 0 $(( ${#b} - 1 ))); do\n        if [[ ${a[$o]} -gt ${b[$p]} ]]; then\n\
    \            echo \"NO\"\n            return\n        fi\n    done\n    local\
    \ q\n    for q in $(seq 0 $(( ${#a} - 1 ))); do\n        if [[ ${b[$q]} -gt ${a[$q]}\
    \ ]]; then\n            echo \"NO\"\n            return\n        fi\n    done\n\
    \    local r\n    for r in $(seq 0 $(( ", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1=$((${interval1[1]}+1))\n    local length2=$((${interval2[1]}+1))\n\
    \    local length_intersection=$((${length1}+${length2}))\n    local length_prime=$((${length_intersection}-1))\n\
    \    local prime_number=$((${length_prime}+1))\n    local prime_number_string=$((${prime_number}+1))\n\
    \    local prime_number_string_with_zero=$((${prime_number_string}+1))\n    local\
    \ prime_number_string_with_zero_with_space=$((${prime_number_string_with_zero}+1))\n\
    \    local prime_number_string_with_zero_with_space_with_comma=$((${prime_number_string_with_zero_with_space}+1))\n\
    \    local prime_number_string_with_zero_with_space_with_comma_with_space=$((${prime_number_string_with_zero_with_space_with_comma}+1))\n\
    \    local prime_number_string_with_zero_with_space_with_comma_with_space_with_comma=$((${prime_number_string_with_zero_with_space_with_comma_with_space}+1))\n\
    \    local prime_number_string_with_zero_with_space_with_comma_with_space_with_comma_with_space=$((${prime_number_string_with_zero_with_space_with_comma_with_space_with_comma}+1))\n\
    \    local prime_number_string_with_zero_with_space_with_comma_with_space_with_comma_with_space=$((${prime_number_string_with_zero_with_space_with_comma_with_space_with_comma_with_space}+1))\n\
    \    local prime_number_string_with_zero_with_space_with_comma_with_space_with_comma_with_space_with_comma=$((${prime_number_string_with_zero_with_space_with_comma_with_space_with_comma_with_space_with_comma}+1))\n\
    \    local prime_number_string_with_zero_with_space_with_comma_with_space_with_comma_with_space_with_comma_with_space=$((${prime_number_string_with_zero_with_space_with_comma_with_space_with_comma_with_space_with_comma_with_space}+1))\n\
    \    local prime_number_string_with_zero_with_space_with_comma_with_space_with_comma_with_space_with_comma_with_space_with_comma=$((${prime_number_string_with_zero_with_space_with_comma_with_space_with_comma_with_space_with_comma_with_space_with_comma_with_space}+1))\n\
    \    local prime_number_string_with_zero_with_space_with_comma_with_space_with_comma_with_space_with_comma_with_space_with_comma_with_space=$((${prime_number_string_with_zero_with_space_with_comma_with_space_with_comma_with_space_with_comma_with_space_",
  "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection_1 length_intersection_2 length_1 length_2 length_of_intersection\n\
    \    length_intersection_1=$(echo $interval_1 | awk '{print $1}')\n    length_intersection_2=$(echo\
    \ $interval_2 | awk '{print $1}')\n    length_1=$(echo $interval_1 | awk '{print\
    \ $2}')\n    length_2=$(echo $interval_2 | awk '{print $2}')\n    length_of_intersection=$(echo\
    \ $length_intersection_1 | $length_intersection_2)\n    if [ $length_of_intersection\
    \ -eq 0 ]\n    then\n        echo \"NO\"\n    else\n        if [ $length_of_intersection\
    \ -eq $length_1 ]\n        then\n            if [ $length_of_intersection -eq\
    \ $length_2 ]\n            then\n                echo \"YES\"\n            else\n\
    \                echo \"NO\"\n            fi\n        else\n            echo \"\
    NO\"\n        fi\n    fi", "    local interval1=$1\n    local interval2=$2\n \
    \   local length1=$((${interval1[1]}+1))\n    local length2=$((${interval2[1]}+1))\n\
    \    local length=$((length1<length2?length1:length2))\n    local start1=$((${interval1[0]}+1))\n\
    \    local start2=$((${interval2[0]}+1))\n    local start=$((start1<start2?start1:start2))\n\
    \    local end=$((start1<start2?start2:start1))\n    local prime=0\n    local\
    \ prime1=0\n    local prime2=0\n    local prime3=0\n    local prime4=0\n    local\
    \ prime5=0\n    local prime6=0\n    local prime7=0\n    local prime8=0\n    local\
    \ prime9=0\n    local prime10=0\n    local prime11=0\n    local prime12=0\n  \
    \  local prime13=0\n    local prime14=0\n    local prime15=0\n    local prime16=0\n\
    \    local prime17=0\n    local prime18=0\n    local prime19=0\n    local prime20=0\n\
    \    local prime21=0\n    local prime22=0\n    local prime23=0\n    local prime24=0\n\
    \    local prime25=0\n    local prime26=0\n    local prime27=0\n    local prime28=0\n\
    \    local prime29=0\n    local prime30=0\n    local prime31=0\n    local prime32=0\n\
    \    local prime33=0\n    local prime34=0\n    local prime35=0\n    local prime36=0\n\
    \    local prime37=0\n    local prime38=0\n    local prime39=0\n    local prime40=0\n\
    \    local prime41=0\n    local prime42=0\n    local prime43=0\n    local prime44=0\n\
    \    local prime45=0\n    local prime46=0\n    local prime47=0\n    local prime48=0\n\
    \    local prime49=0\n    local prime50=0\n    local prime51=0\n    local prime52=0\n\
    \    local prime53=0\n    local prime54=0\n    local prime55=0\n    local prime56=0\n\
    \    local prime57=0\n    local prime58=0\n    local prime59=0\n    local prime60=0\n\
    \    local prime61=0\n    local prime62=0\n    local prime63=0\n    local prime64=0\n\
    \    local prime65=0", "    local interval1=$1\n    local interval2=$2\n    local\
    \ length1\n    local length2\n    local length\n    local prime\n    local prime_flag\n\
    \    local prime_flag2\n    local prime_flag3\n    local prime_flag4\n    local\
    \ prime_flag5\n    local prime_flag6\n    local prime_flag7\n    local prime_flag8\n\
    \    local prime_flag9\n    local prime_flag10\n    local prime_flag11\n    local\
    \ prime_flag12\n    local prime_flag13\n    local prime_flag14\n    local prime_flag15\n\
    \    local prime_flag16\n    local prime_flag17\n    local prime_flag18\n    local\
    \ prime_flag19\n    local prime_flag20\n    local prime_flag21\n    local prime_flag22\n\
    \    local prime_flag23\n    local prime_flag24\n    local prime_flag25\n    local\
    \ prime_flag26\n    local prime_flag27\n    local prime_flag28\n    local prime_flag29\n\
    \    local prime_flag30\n    local prime_flag31\n    local prime_flag32\n    local\
    \ prime_flag33\n    local prime_flag34\n    local prime_flag35\n    local prime_flag36\n\
    \    local prime_flag37\n    local prime_flag38\n    local prime_flag39\n    local\
    \ prime_flag40\n    local prime_flag41\n    local prime_flag42\n    local prime_flag43\n\
    \    local prime_flag44\n    local prime_flag45\n    local prime_flag46\n    local\
    \ prime_flag47\n    local prime_flag48\n    local prime_flag49\n    local prime_flag50\n\
    \    local prime_flag51\n    local prime_flag52\n    local prime_flag53\n    local\
    \ prime_flag54\n    local prime_flag55\n    local prime_flag56\n    local prime_flag57\n\
    \    local prime_flag58\n    local prime_flag59\n    local prime_flag60\n    local\
    \ prime_flag61\n    local prime_flag62\n    local prime_flag63\n    local prime_flag64\n\
    \    local prime_flag65\n    local prime_flag66\n    local prime_flag67\n    local\
    \ prime_flag68\n    local prime_flag", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection prime_number\n    length_interval=$(expr\
    \ ${interval_1}[1] - ${interval_2}[1])\n    prime_number=$((length_interval %\
    \ 2))\n    if [[ ${prime_number} -eq 0 ]]; then\n        echo \"YES\"\n    else\n\
    \        echo \"NO\"\n    fi", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection_1 length_intersection_2\n  \
    \  length_intersection_1=$(echo \"$interval_1 | cut -d' ' -f1\"| wc -w)\n    length_intersection_2=$(echo\
    \ \"$interval_2 | cut -d' ' -f1\"| wc -w)\n    if [ $length_intersection_1 -eq\
    \ $length_intersection_2 ]; then\n        echo \"$interval_1 intersect $interval_2\"\
    \n    else\n        echo \"NO\"\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1=$((${interval1[1]} - ${interval1[0]}))\n    local length2=$((${interval2[1]}\
    \ - ${interval2[0]}))\n    local length=$((length1 + length2))\n    local start1=$((${interval1[0]}))\n\
    \    local end1=$((${interval1[1]}))\n    local start2=$((${interval2[0]}))\n\
    \    local end2=$((${interval2[1]}))\n    local prime=1\n    local prime2=1\n\
    \    local prime3=1\n    local prime4=1\n    local prime5=1\n    local prime6=1\n\
    \    local prime7=1\n    local prime8=1\n    local prime9=1\n    local prime10=1\n\
    \    local prime11=1\n    local prime12=1\n    local prime13=1\n    local prime14=1\n\
    \    local prime15=1\n    local prime16=1\n    local prime17=1\n    local prime18=1\n\
    \    local prime19=1\n    local prime20=1\n    local prime21=1\n    local prime22=1\n\
    \    local prime23=1\n    local prime24=1\n    local prime25=1\n    local prime26=1\n\
    \    local prime27=1\n    local prime28=1\n    local prime29=1\n    local prime30=1\n\
    \    local prime31=1\n    local prime32=1\n    local prime33=1\n    local prime34=1\n\
    \    local prime35=1\n    local prime36=1\n    local prime37=1\n    local prime38=1\n\
    \    local prime39=1\n    local prime40=1\n    local prime41=1\n    local prime42=1\n\
    \    local prime43=1\n    local prime44=1\n    local prime45=1\n    local prime46=1\n\
    \    local prime47=1\n    local prime48=1\n    local prime49=1\n    local prime50=1\n\
    \    local prime51=1\n    local prime52=1\n    local prime53=1\n    local prime54=1\n\
    \    local prime55=1\n    local prime56=1\n    local prime57=1\n    local prime58=1\n\
    \    local prime59=1\n    local prime60=1\n    local prime61=1\n    local prime62=1\n\
    \    local prime63=1\n    local prime64=1\n    local prime65=1\n    local prime66=1\n\
    \    local prime67=1\n    local prime68=1", "    local interval1=$1\n    local\
    \ interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n    local\
    \ length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((length1+length2))\n\
    \    local prime=\n    local prime_length=\n    local prime_start=\n    local\
    \ prime_end=\n    local prime_length=\n    local prime_start=\n    local prime_end=\n\
    \    local prime_length=\n    local prime_start=\n    local prime_end=\n    local\
    \ prime_length=\n    local prime_start=\n    local prime_end=\n    local prime_length=\n\
    \    local prime_start=\n    local prime_end=\n    local prime_length=\n    local\
    \ prime_start=\n    local prime_end=\n    local prime_length=\n    local prime_start=\n\
    \    local prime_end=\n    local prime_length=\n    local prime_start=\n    local\
    \ prime_end=\n    local prime_length=\n    local prime_start=\n    local prime_end=\n\
    \    local prime_length=\n    local prime_start=\n    local prime_end=\n    local\
    \ prime_length=\n    local prime_start=\n    local prime_end=\n    local prime_length=\n\
    \    local prime_start=\n    local prime_end=\n    local prime_length=\n    local\
    \ prime_start=\n    local prime_end=\n    local prime_length=\n    local prime_start=\n\
    \    local prime_end=\n    local prime_length=\n    local prime_start=\n    local\
    \ prime_end=\n    local prime_length=\n    local prime_start=\n    local prime_end=\n\
    \    local prime_length=\n    local prime_start=\n    local prime_end=\n    local\
    \ prime_length=\n    local prime_start=\n    local prime_end=\n    local prime_length=\n\
    \    local prime_start=\n    local prime_end=\n    local prime_length=\n    local\
    \ prime_start=\n    local prime_end=\n    local prime_length=\n    local prime_start=\n\
    \    local prime_end=\n    local prime_length=\n    local prime_start=\n    local\
    \ prime_end=\n    local prime_length=\n    local prime_start=\n    local prime_end=\n\
    \    local prime_length=\n    local prime_start=\n    local prime_end=\n    local\
    \ prime_length=\n    local prime_start=\n    local prime_end=", "    local interval_1\
    \ interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection\n\
    \    length_intersection=$(intersect $interval_1 $interval_2)\n    if [ \"$length_intersection\"\
    \ -eq \"0\" ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n   \
    \ fi", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection_1 length_intersection_2 length_1 length_2 prime_number\n\
    \    length_intersection_1=$(echo \"$interval_1\" | wc -w)\n    length_intersection_2=$(echo\
    \ \"$interval_2\" | wc -w)\n    length_1=$(echo \"$interval_1\" | wc -w)\n   \
    \ length_2=$(echo \"$interval_2\" | wc -w)\n    prime_number=$((length_intersection_1\
    \ + length_intersection_2))\n    if [ \"$prime_number\" -eq \"2\" ]; then\n  \
    \      if [ \"$length_intersection_1\" -eq \"$length_intersection_2\" ]; then\n\
    \            if [ \"$length_1\" -eq \"$length_2\" ]; then\n                if\
    \ [ \"$interval_1\" -le \"$interval_2\" ]; then\n                    echo \"YES\"\
    \n                else\n                    echo \"NO\"\n                fi\n\
    \            else\n                echo \"NO\"\n            fi\n        else\n\
    \            echo \"NO\"\n        fi\n    else\n        echo \"NO\"\n    fi",
  "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((length1 + length2))\n    local prime=1\n    local prime_flag=0\n\
    \    local prime_flag2=0\n    local prime_flag3=0\n    local prime_flag4=0\n \
    \   local prime_flag5=0\n    local prime_flag6=0\n    local prime_flag7=0\n  \
    \  local prime_flag8=0\n    local prime_flag9=0\n    local prime_flag10=0\n  \
    \  local prime_flag11=0\n    local prime_flag12=0\n    local prime_flag13=0\n\
    \    local prime_flag14=0\n    local prime_flag15=0\n    local prime_flag16=0\n\
    \    local prime_flag17=0\n    local prime_flag18=0\n    local prime_flag19=0\n\
    \    local prime_flag20=0\n    local prime_flag21=0\n    local prime_flag22=0\n\
    \    local prime_flag23=0\n    local prime_flag24=0\n    local prime_flag25=0\n\
    \    local prime_flag26=0\n    local prime_flag27=0\n    local prime_flag28=0\n\
    \    local prime_flag29=0\n    local prime_flag30=0\n    local prime_flag31=0\n\
    \    local prime_flag32=0\n    local prime_flag33=0\n    local prime_flag34=0\n\
    \    local prime_flag35=0\n    local prime_flag36=0\n    local prime_flag37=0\n\
    \    local prime_flag38=0\n    local prime_flag39=0\n    local prime_flag40=0\n\
    \    local prime_flag41=0\n    local prime_flag42=0\n    local prime_flag43=0\n\
    \    local prime_flag44=0\n    local prime_flag45=0\n    local prime_flag46=0\n\
    \    local prime_flag47=0\n    local prime_flag48=0\n    local prime_flag49=0\n\
    \    local prime_flag50=0\n    local prime_flag51=0\n    local prime_flag52=0\n\
    \    local prime_flag53=0\n    local prime_flag54=0\n    local prime_flag55=0\n\
    \    local prime_flag56=0\n    local ", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local i\n    local j\n    local prime\n\
    \    local primes\n    local primesLength\n    local primesLength2\n    local\
    \ primesLength3\n    local primesLength4\n    local primesLength5\n    local primesLength6\n\
    \    local primesLength7\n    local primesLength8\n    local primesLength9\n \
    \   local primesLength10\n    local primesLength11\n    local primesLength12\n\
    \    local primesLength13\n    local primesLength14\n    local primesLength15\n\
    \    local primesLength16\n    local primesLength17\n    local primesLength18\n\
    \    local primesLength19\n    local primesLength20\n    local primesLength21\n\
    \    local primesLength22\n    local primesLength23\n    local primesLength24\n\
    \    local primesLength25\n    local primesLength26\n    local primesLength27\n\
    \    local primesLength28\n    local primesLength29\n    local primesLength30\n\
    \    local primesLength31\n    local primesLength32\n    local primesLength33\n\
    \    local primesLength34\n    local primesLength35\n    local primesLength36\n\
    \    local primesLength37\n    local primesLength38\n    local primesLength39\n\
    \    local primesLength40\n    local primesLength41\n    local primesLength42\n\
    \    local primesLength43\n    local primesLength44\n    local primesLength45\n\
    \    local primesLength46\n    local primesLength47\n    local primesLength48\n\
    \    local primesLength49\n    local primesLength50\n    local primesLength51\n\
    \    local primesLength52\n    local primesLength53\n    local primesLength54\n\
    \    local primesLength55\n    local primesLength56\n    local primesLength57\n\
    \    local primesLength58\n    local primesLength59\n    local primesLength60\n\
    \    local primesLength61\n    local primesLength62\n    local primesLength63\n\
    \    local primesLength64\n    local primesLength65\n    local primesLength66\n\
    \    local primesLength67\n    local prime", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection_1 length_intersection_2\
    \ length_1 length_2 length_of_intersection\n    length_intersection_1=$(expr ${interval_1}[1]\
    \ - ${interval_1}[0])\n    length_intersection_2=$(expr ${interval_2}[1] - ${interval_2}[0])\n\
    \    length_1=$(expr ${interval_1}[1] - ${interval_1}[0])\n    length_2=$(expr\
    \ ${interval_2}[1] - ${interval_2}[0])\n    length_of_intersection=$(expr ${length_intersection_1}\
    \ + ${length_intersection_2})\n    if [ ${length_of_intersection} -eq 0 ]; then\n\
    \        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((length1+length2))\n\
    \    local result=\"NO\"\n    if [ $length -eq 1 ]\n    then\n        result=\"\
    YES\"\n    else\n        local i1=$((${interval1[0]}))\n        local i2=$((${interval2[0]}))\n\
    \        local j1=$((${interval1[1]}))\n        local j2=$((${interval2[1]}))\n\
    \        local i3=$((${interval1[1]}))\n        local j3=$((${interval2[1]}))\n\
    \        local i4=$((${interval1[1]}))\n        local j4=$((${interval2[1]}))\n\
    \        local i5=$((${interval1[1]}))\n        local j5=$((${interval2[1]}))\n\
    \        local i6=$((${interval1[1]}))\n        local j6=$((${interval2[1]}))\n\
    \        local i7=$((${interval1[1]}))\n        local j7=$((${interval2[1]}))\n\
    \        local i8=$((${interval1[1]}))\n        local j8=$((${interval2[1]}))\n\
    \        local i9=$((${interval1[1]}))\n        local j9=$((${interval2[1]}))\n\
    \        local i10=$((${interval1[1]}))\n        local j10=$((${interval2[1]}))\n\
    \        local i11=$((${interval1[1]}))\n        local j11=$((${interval2[1]}))\n\
    \        local i12=$((${interval1[1]}))\n        local j12=$((${interval2[1]}))\n\
    \        local i13=$((${interval1[1]}))\n        local j13=$((${interval2[1]}))\n\
    \        local i14=$((${interval1[1]}))\n        local j14=$((${interval2[1]}))\n\
    \        local i15=$((${interval1[1]}))\n        local j15=$((${interval2[1]}))\n\
    \        local i16=$((${interval1[1]}))\n        local j16=$((${interval2[1]}))\n\
    \        local i17=$((${interval1[1]}))\n        local j17=$((${interval2[1]}))\n\
    \        local i18=$((${interval1[1]}))\n        local j18=$((${interval2[1]",
  "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((length1 + length2))\n    local prime=1\n    local prime_flag=0\n\
    \    local prime_flag2=0\n    local prime_flag3=0\n    local prime_flag4=0\n \
    \   local prime_flag5=0\n    local prime_flag6=0\n    local prime_flag7=0\n  \
    \  local prime_flag8=0\n    local prime_flag9=0\n    local prime_flag10=0\n  \
    \  local prime_flag11=0\n    local prime_flag12=0\n    local prime_flag13=0\n\
    \    local prime_flag14=0\n    local prime_flag15=0\n    local prime_flag16=0\n\
    \    local prime_flag17=0\n    local prime_flag18=0\n    local prime_flag19=0\n\
    \    local prime_flag20=0\n    local prime_flag21=0\n    local prime_flag22=0\n\
    \    local prime_flag23=0\n    local prime_flag24=0\n    local prime_flag25=0\n\
    \    local prime_flag26=0\n    local prime_flag27=0\n    local prime_flag28=0\n\
    \    local prime_flag29=0\n    local prime_flag30=0\n    local prime_flag31=0\n\
    \    local prime_flag32=0\n    local prime_flag33=0\n    local prime_flag34=0\n\
    \    local prime_flag35=0\n    local prime_flag36=0\n    local prime_flag37=0\n\
    \    local prime_flag38=0\n    local prime_flag39=0\n    local prime_flag40=0\n\
    \    local prime_flag41=0\n    local prime_flag42=0\n    local prime_flag43=0\n\
    \    local prime_flag44=0\n    local prime_flag45=0\n    local prime_flag46=0\n\
    \    local prime_flag47=0\n    local prime_flag48=0\n    local prime_flag49=0\n\
    \    local prime_flag50=0\n    local prime_flag51=0\n    local prime_flag52=0\n\
    \    local prime_flag53=0\n    local prime_flag54=0\n    local prime_flag55=0\n\
    \    local prime_flag56=0\n    local ", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local result\n    local i\n    local\
    \ j\n    local prime\n    local prime_flag\n    local prime_flag2\n    local prime_flag3\n\
    \    local prime_flag4\n    local prime_flag5\n    local prime_flag6\n    local\
    \ prime_flag7\n    local prime_flag8\n    local prime_flag9\n    local prime_flag10\n\
    \    local prime_flag11\n    local prime_flag12\n    local prime_flag13\n    local\
    \ prime_flag14\n    local prime_flag15\n    local prime_flag16\n    local prime_flag17\n\
    \    local prime_flag18\n    local prime_flag19\n    local prime_flag20\n    local\
    \ prime_flag21\n    local prime_flag22\n    local prime_flag23\n    local prime_flag24\n\
    \    local prime_flag25\n    local prime_flag26\n    local prime_flag27\n    local\
    \ prime_flag28\n    local prime_flag29\n    local prime_flag30\n    local prime_flag31\n\
    \    local prime_flag32\n    local prime_flag33\n    local prime_flag34\n    local\
    \ prime_flag35\n    local prime_flag36\n    local prime_flag37\n    local prime_flag38\n\
    \    local prime_flag39\n    local prime_flag40\n    local prime_flag41\n    local\
    \ prime_flag42\n    local prime_flag43\n    local prime_flag44\n    local prime_flag45\n\
    \    local prime_flag46\n    local prime_flag47\n    local prime_flag48\n    local\
    \ prime_flag49\n    local prime_flag50\n    local prime_flag51\n    local prime_flag52\n\
    \    local prime_flag53\n    local prime_flag54\n    local prime_flag55\n    local\
    \ prime_flag56\n    local prime_flag57\n    local prime_flag58\n    local prime_flag59\n\
    \    local prime_flag60\n    local prime_flag61\n    local prime_flag62\n    local\
    \ prime_flag63\n    local prime_flag64\n    local prime_flag65\n    local prime_flag66\n\
    \    local prime_flag67\n    local prime_", "    local interval_1 interval_2 length_1\
    \ length_2 result\n    interval_1=\"${1}\"\n    interval_2=\"${2}\"\n    length_1=\"\
    ${#interval_1}\"\n    length_2=\"${#interval_2}\"\n    if [[ ${length_1} -eq 0\
    \ || ${length_2} -eq 0 ]]; then\n        result=\"NO\"\n    else\n        result=\"\
    YES\"\n    fi\n    echo \"${result}\"", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1=$((${interval1[1]} - ${interval1[0]}))\n    local length2=$((${interval2[1]}\
    \ - ${interval2[0]}))\n    local length_intersection=$((length1 + length2))\n\
    \    local length_prime=1\n    local prime_number=\"YES\"\n    local prime_number_flag=\"\
    YES\"\n    local prime_number_flag2=\"YES\"\n    local prime_number_flag3=\"YES\"\
    \n    local prime_number_flag4=\"YES\"\n    local prime_number_flag5=\"YES\"\n\
    \    local prime_number_flag6=\"YES\"\n    local prime_number_flag7=\"YES\"\n\
    \    local prime_number_flag8=\"YES\"\n    local prime_number_flag9=\"YES\"\n\
    \    local prime_number_flag10=\"YES\"\n    local prime_number_flag11=\"YES\"\n\
    \    local prime_number_flag12=\"YES\"\n    local prime_number_flag13=\"YES\"\n\
    \    local prime_number_flag14=\"YES\"\n    local prime_number_flag15=\"YES\"\n\
    \    local prime_number_flag16=\"YES\"\n    local prime_number_flag17=\"YES\"\n\
    \    local prime_number_flag18=\"YES\"\n    local prime_number_flag19=\"YES\"\n\
    \    local prime_number_flag20=\"YES\"\n    local prime_number_flag21=\"YES\"\n\
    \    local prime_number_flag22=\"YES\"\n    local prime_number_flag23=\"YES\"\n\
    \    local prime_number_flag24=\"YES\"\n    local prime_number_flag25=\"YES\"\n\
    \    local prime_number_flag26=\"YES\"\n    local prime_number_flag27=\"YES\"\n\
    \    local prime_number_flag28=\"YES\"\n    local prime_number_flag29=\"YES\"\n\
    \    local prime_number_flag30=\"YES\"\n    local prime_number_flag31=\"YES\"\n\
    \    local prime_number_flag32=\"YES\"\n    local prime_number_flag33=\"YES\"\n\
    \    local prime_number_flag34=\"YES\"\n    local prime_number_flag35=\"YES\"\n\
    \    local prime_number_flag36=\"YES\"\n    local prime_number_flag37=\"YES\"\n\
    \    local prime_number_flag38=\"YES\"\n    local prime_number_flag39=\"YES\"\n\
    \    local prime_number_flag40=\"YES", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local result\n    local prime\n   \
    \ local primes\n    local primesLength\n    local primesLength2\n    local primesLength3\n\
    \    local primesLength4\n    local primesLength5\n    local primesLength6\n \
    \   local primesLength7\n    local primesLength8\n    local primesLength9\n  \
    \  local primesLength10\n    local primesLength11\n    local primesLength12\n\
    \    local primesLength13\n    local primesLength14\n    local primesLength15\n\
    \    local primesLength16\n    local primesLength17\n    local primesLength18\n\
    \    local primesLength19\n    local primesLength20\n    local primesLength21\n\
    \    local primesLength22\n    local primesLength23\n    local primesLength24\n\
    \    local primesLength25\n    local primesLength26\n    local primesLength27\n\
    \    local primesLength28\n    local primesLength29\n    local primesLength30\n\
    \    local primesLength31\n    local primesLength32\n    local primesLength33\n\
    \    local primesLength34\n    local primesLength35\n    local primesLength36\n\
    \    local primesLength37\n    local primesLength38\n    local primesLength39\n\
    \    local primesLength40\n    local primesLength41\n    local primesLength42\n\
    \    local primesLength43\n    local primesLength44\n    local primesLength45\n\
    \    local primesLength46\n    local primesLength47\n    local primesLength48\n\
    \    local primesLength49\n    local primesLength50\n    local primesLength51\n\
    \    local primesLength52\n    local primesLength53\n    local primesLength54\n\
    \    local primesLength55\n    local primesLength56\n    local primesLength57\n\
    \    local primesLength58\n    local primesLength59\n    local primesLength60\n\
    \    local primesLength61\n    local primesLength62\n    local primesLength63\n\
    \    local primesLength64\n    local primesLength65\n    local primesLength66\n\
    \    local primesLength67\n    local primesLength68\n", "    local interval_1\
    \ interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection\n\
    \    length_intersection=$(intersect \"$interval_1\" \"${interval_2[@]}\")\n \
    \   if [[ $length_intersection -eq 0 ]]; then\n        echo \"NO\"\n    else\n\
    \        echo \"YES\"\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local length\n    local prime\n   \
    \ local result\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i1\n    local i2\n    local\
    \ j1\n    local j2\n    local k1\n    local k2\n    local l1\n    local l2\n \
    \   local m1\n    local m2\n    local n1\n    local n2\n    local o1\n    local\
    \ o2\n    local p1\n    local p2\n    local q1\n    local q2\n    local r1\n \
    \   local r2\n    local s1\n    local s2\n    local t1\n    local t2\n    local\
    \ u1\n    local u2\n    local v1\n    local v2\n    local w1\n    local w2\n \
    \   local x1\n    local x2\n    local y1\n    local y2\n    local z1\n    local\
    \ z2\n    local a1\n    local b1\n    local c1\n    local d1\n    local e1\n \
    \   local f1\n    local g1\n    local h1\n    local i11\n    local j11\n    local\
    \ k11\n    local l11\n    local m11\n    local n11\n    local o11\n    local p11\n\
    \    local q11\n    local r11\n    local s11\n    local t11\n    local u11\n \
    \   local v11\n    local w11\n    local x11\n    local y11\n    local z11\n  \
    \  local a11\n    local b11\n    local c11\n    local d11\n    local e11\n   \
    \ local f11\n    local g11\n    local h11\n    local i21\n    local j21\n    local\
    \ k21\n    local l21\n    local m21\n    local n21\n    local o21\n    local p21\n\
    \    local q21\n    local r21\n    local s21", "    local interval_1 interval_2\n\
    \    interval_1=$(echo $1 | sed 's/ /, /g')\n    interval_2=$(echo $2 | sed 's/\
    \ /, /g')\n    local length_intersection\n    length_intersection=$(echo $interval_1\
    \ | grep -o \"[0-9]*\" | wc -w)\n    length_intersection=$(echo $interval_2 |\
    \ grep -o \"[0-9]*\" | wc -w)\n    if [ $length_intersection -eq 0 ]; then\n \
    \       echo \"NO\"\n    elif [ $length_intersection -eq 1 ]; then\n        echo\
    \ \"YES\"\n    elif [ $length_intersection -gt 1 ]; then\n        echo \"NO\"\n\
    \    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local intersect\n    local prime\n\
    \    local prime_check\n    local prime_check2\n    local prime_check3\n    local\
    \ prime_check4\n    local prime_check5\n    local prime_check6\n    local prime_check7\n\
    \    local prime_check8\n    local prime_check9\n    local prime_check10\n   \
    \ local prime_check11\n    local prime_check12\n    local prime_check13\n    local\
    \ prime_check14\n    local prime_check15\n    local prime_check16\n    local prime_check17\n\
    \    local prime_check18\n    local prime_check19\n    local prime_check20\n \
    \   local prime_check21\n    local prime_check22\n    local prime_check23\n  \
    \  local prime_check24\n    local prime_check25\n    local prime_check26\n   \
    \ local prime_check27\n    local prime_check28\n    local prime_check29\n    local\
    \ prime_check30\n    local prime_check31\n    local prime_check32\n    local prime_check33\n\
    \    local prime_check34\n    local prime_check35\n    local prime_check36\n \
    \   local prime_check37\n    local prime_check38\n    local prime_check39\n  \
    \  local prime_check40\n    local prime_check41\n    local prime_check42\n   \
    \ local prime_check43\n    local prime_check44\n    local prime_check45\n    local\
    \ prime_check46\n    local prime_check47\n    local prime_check48\n    local prime_check49\n\
    \    local prime_check50\n    local prime_check51\n    local prime_check52\n \
    \   local prime_check53\n    local prime_check54\n    local prime_check55\n  \
    \  local prime_check56\n    local prime_check57\n    local prime_check58\n   \
    \ local prime_check59\n    local prime_check60\n    local prime_check61\n    local\
    \ prime_check62\n    local prime_check63\n    local prime_check64\n    local prime_check65\n\
    \    local prime_check66\n    local prime_check67\n    local prime_check68\n \
    \   local prime_check", "    local interval1=$1\n    local interval2=$2\n    local\
    \ length1=$((${interval1[1]} - ${interval1[0]}))\n    local length2=$((${interval2[1]}\
    \ - ${interval2[0]}))\n    local length=$((length1 + length2))\n    if [ $length\
    \ -eq 0 ]\n    then\n        echo \"NO\"\n    else\n        local start1=$((${interval1[0]}))\n\
    \        local end1=$((${interval1[1]}))\n        local start2=$((${interval2[0]}))\n\
    \        local end2=$((${interval2[1]}))\n        local start=$((${start1} + ${start2}))\n\
    \        local end=$((${end1} + ${end2}))\n        if [ $start -le $end ]\n  \
    \      then\n            local prime=1\n            for ((i=$start; i<=$end; i++));\
    \ do\n                if [ $((${prime}%${i})) -eq 0 ]\n                then\n\
    \                    prime=0\n                    break\n                fi\n\
    \            done\n            if [ $prime -eq 1 ]\n            then\n       \
    \         echo \"YES\"\n            else\n                echo \"NO\"\n      \
    \      fi\n        else\n            echo \"NO\"\n        fi\n    fi", "    local\
    \ interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection_1\
    \ length_intersection_2\n    length_intersection_1=$(echo \"$interval_1\" | awk\
    \ '{print $1}')\n    length_intersection_2=$(echo \"$interval_2\" | awk '{print\
    \ $1}')\n    if [ \"$length_intersection_1\" -gt \"$length_intersection_2\" ];\
    \ then\n        echo \"$interval_1\" | awk '{print $1}'\n    elif [ \"$length_intersection_1\"\
    \ -lt \"$length_intersection_2\" ]; then\n        echo \"$interval_2\" | awk '{print\
    \ $1}'\n    else\n        echo \"NO\"\n    fi", "    local interval1=$1\n    local\
    \ interval2=$2\n    local length1=$((${interval1[1]}+1))\n    local length2=$((${interval2[1]}+1))\n\
    \    local length=$((length1<length2?length1:length2))\n    local start1=$((${interval1[0]}-1))\n\
    \    local end1=$((${interval1[1]}-1))\n    local start2=$((${interval2[0]}-1))\n\
    \    local end2=$((${interval2[1]}-1))\n    local start=$((start1<start2?start1:start2))\n\
    \    local end=$((end1<end2?end1:end2))\n    local prime=\n    local prime1=\n\
    \    local prime2=\n    local prime3=\n    local prime4=\n    local prime5=\n\
    \    local prime6=\n    local prime7=\n    local prime8=\n    local prime9=\n\
    \    local prime10=\n    local prime11=\n    local prime12=\n    local prime13=\n\
    \    local prime14=\n    local prime15=\n    local prime16=\n    local prime17=\n\
    \    local prime18=\n    local prime19=\n    local prime20=\n    local prime21=\n\
    \    local prime22=\n    local prime23=\n    local prime24=\n    local prime25=\n\
    \    local prime26=\n    local prime27=\n    local prime28=\n    local prime29=\n\
    \    local prime30=\n    local prime31=\n    local prime32=\n    local prime33=\n\
    \    local prime34=\n    local prime35=\n    local prime36=\n    local prime37=\n\
    \    local prime38=\n    local prime39=\n    local prime40=\n    local prime41=\n\
    \    local prime42=\n    local prime43=\n    local prime44=\n    local prime45=\n\
    \    local prime46=\n    local prime47=\n    local prime48=\n    local prime49=\n\
    \    local prime50=\n    local prime51=\n    local prime52=\n    local prime53=\n\
    \    local prime54=\n    local prime55=\n    local prime56=\n    local prime57=\n\
    \    local prime58=\n    local prime59=\n    local prime60=\n    local prime61=\n\
    \    local ", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection\n    length_intersection=$(intersect \"$interval_1\"\
    \ \"${interval_2}\")\n    if [[ \"$length_intersection\" == \"\" ]]; then\n  \
    \      echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]}+1))\n    local length2=$((${interval2[1]}+1))\n\
    \    local length=$((length1<length2?length1:length2))\n    local start1=$((${interval1[0]}-1))\n\
    \    local end1=$((${interval1[1]}-1))\n    local start2=$((${interval2[0]}-1))\n\
    \    local end2=$((${interval2[1]}-1))\n    local start=$((start1<start2?start1:start2))\n\
    \    local end=$((end1<end2?end1:end2))\n    local flag=0\n    local prime=0\n\
    \    local prime1=0\n    local prime2=0\n    local prime3=0\n    local prime4=0\n\
    \    local prime5=0\n    local prime6=0\n    local prime7=0\n    local prime8=0\n\
    \    local prime9=0\n    local prime10=0\n    local prime11=0\n    local prime12=0\n\
    \    local prime13=0\n    local prime14=0\n    local prime15=0\n    local prime16=0\n\
    \    local prime17=0\n    local prime18=0\n    local prime19=0\n    local prime20=0\n\
    \    local prime21=0\n    local prime22=0\n    local prime23=0\n    local prime24=0\n\
    \    local prime25=0\n    local prime26=0\n    local prime27=0\n    local prime28=0\n\
    \    local prime29=0\n    local prime30=0\n    local prime31=0\n    local prime32=0\n\
    \    local prime33=0\n    local prime34=0\n    local prime35=0\n    local prime36=0\n\
    \    local prime37=0\n    local prime38=0\n    local prime39=0\n    local prime40=0\n\
    \    local prime41=0\n    local prime42=0\n    local prime43=0\n    local prime44=0\n\
    \    local prime45=0\n    local prime46=0\n    local prime47=0\n    local prime48=0\n\
    \    local prime49=0\n    local prime50=0\n    local prime51=0\n    local prime52=0\n\
    \    local prime53=0\n    local prime54=0\n    local prime55=0\n    local prime56=0\n\
    \    local prime57=0\n    local prime58=0\n    local prime59=0\n    local prime60=0\n",
  "    local a b\n    local len\n    local i\n    local j\n    local prime\n    local\
    \ primes\n    local result\n    local tmp\n    local tmp2\n    local tmp3\n  \
    \  local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n    local tmp", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1\n    local length2\n    local result\n\
    \    local i\n    local j\n    local prime\n    local primes\n    local prime_found\n\
    \    local prime_found1\n    local prime_found2\n    local prime_found3\n    local\
    \ prime_found4\n    local prime_found5\n    local prime_found6\n    local prime_found7\n\
    \    local prime_found8\n    local prime_found9\n    local prime_found10\n   \
    \ local prime_found11\n    local prime_found12\n    local prime_found13\n    local\
    \ prime_found14\n    local prime_found15\n    local prime_found16\n    local prime_found17\n\
    \    local prime_found18\n    local prime_found19\n    local prime_found20\n \
    \   local prime_found21\n    local prime_found22\n    local prime_found23\n  \
    \  local prime_found24\n    local prime_found25\n    local prime_found26\n   \
    \ local prime_found27\n    local prime_found28\n    local prime_found29\n    local\
    \ prime_found30\n    local prime_found31\n    local prime_found32\n    local prime_found33\n\
    \    local prime_found34\n    local prime_found35\n    local prime_found36\n \
    \   local prime_found37\n    local prime_found38\n    local prime_found39\n  \
    \  local prime_found40\n    local prime_found41\n    local prime_found42\n   \
    \ local prime_found43\n    local prime_found44\n    local prime_found45\n    local\
    \ prime_found46\n    local prime_found47\n    local prime_found48\n    local prime_found49\n\
    \    local prime_found50\n    local prime_found51\n    local prime_found52\n \
    \   local prime_found53\n    local prime_found54\n    local prime_found55\n  \
    \  local prime_found56\n    local prime_found57\n    local prime_found58\n   \
    \ local prime_found59\n    local prime_found60\n    local prime_found61\n    local\
    \ prime_found62\n    local prime_found63\n    local prime_found64\n    local prime_found65\n\
    \    local prime_found66", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection prime_number\n    length_interval=$(echo\
    \ \"${interval_1}${interval_2}\" | wc -w)\n    if [[ ${length_interval} -eq 0\
    \ ]]; then\n        echo \"NO\"\n    else\n        prime_number=$((length_interval\
    \ % 2))\n        if [[ ${prime_number} -eq 0 ]]; then\n            echo \"YES\"\
    \n        else\n            echo \"NO\"\n        fi\n    fi", "    local interval_1\
    \ interval_2\n    interval_1=( $1 )\n    interval_2=( $2 )\n    local length_intersection_1\
    \ length_intersection_2\n    length_intersection_1=${#interval_1[@]}\n    length_intersection_2=${#interval_2[@]}\n\
    \    if [ $length_intersection_1 -eq $length_intersection_2 ]\n    then\n    \
    \    local i\n        for (( i=0; i<$length_intersection_1; i++ ))\n        do\n\
    \            if [ ${interval_1[i]} -gt ${interval_2[i]} ]\n            then\n\
    \                interval_1[i]=${interval_2[i]}\n            fi\n        done\n\
    \        local j\n        for (( j=0; j<$length_intersection_2; j++ ))\n     \
    \   do\n            if [ ${interval_2[j]} -gt ${interval_1[j]} ]\n           \
    \ then\n                interval_2[j]=${interval_1[j]}\n            fi\n     \
    \   done\n        local length_1\n        length_1=${#interval_1[@]}\n       \
    \ local length_2\n        length_2=${#interval_2[@]}\n        if [ $length_1 -eq\
    \ $length_2 ]\n        then\n            local i\n            for (( i=0; i<$length_1;\
    \ i++ ))\n            do\n                if [ ${interval_1[i]} -eq ${interval_2[i]}\
    \ ]\n                then\n                    interval_1[i]=${interval_2[i]}\n\
    \                fi\n            done\n            local j\n            for ((\
    \ j=0; j<$length_2; j++ ))\n            do\n                if [ ${interval_2[j]}\
    \ -eq ${interval_1[j]} ]\n                then\n                    interval_2[j]=${interval_1[j]}\n\
    \                fi\n            done\n            local length_1\n          \
    \  length_1=${#interval_1[@]}\n            local length_2\n            length_2=${#interval_2[@]}\n\
    \            if [ $length_1 -eq $length_2 ]\n            then\n              \
    \  local i\n                for (( i=0; i<$length_1; i++ ))\n                do\n\
    \                    if [ ${interval_1[i]} -eq ${interval_2[i]} ]\n          \
    \          then\n                        interval_1[i]=${interval_2[i]}\n    \
    \                fi\n                done\n                local j\n         \
    \       for (( j=0; j<$length_2; j++ ))\n                do\n                \
    \    if [ ${interval_2[j]} -eq ${interval_1[j]} ]\n                    then\n\
    \                        interval_2[j]=${interval_1[j]}\n                    fi\n\
    \                done\n                local length_1\n                length_1=${#interval_1[@]}",
  "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((length1 + length2))\n    local prime=1\n    local prime_flag=0\n\
    \    local prime_flag2=0\n    local prime_flag3=0\n    local prime_flag4=0\n \
    \   local prime_flag5=0\n    local prime_flag6=0\n    local prime_flag7=0\n  \
    \  local prime_flag8=0\n    local prime_flag9=0\n    local prime_flag10=0\n  \
    \  local prime_flag11=0\n    local prime_flag12=0\n    local prime_flag13=0\n\
    \    local prime_flag14=0\n    local prime_flag15=0\n    local prime_flag16=0\n\
    \    local prime_flag17=0\n    local prime_flag18=0\n    local prime_flag19=0\n\
    \    local prime_flag20=0\n    local prime_flag21=0\n    local prime_flag22=0\n\
    \    local prime_flag23=0\n    local prime_flag24=0\n    local prime_flag25=0\n\
    \    local prime_flag26=0\n    local prime_flag27=0\n    local prime_flag28=0\n\
    \    local prime_flag29=0\n    local prime_flag30=0\n    local prime_flag31=0\n\
    \    local prime_flag32=0\n    local prime_flag33=0\n    local prime_flag34=0\n\
    \    local prime_flag35=0\n    local prime_flag36=0\n    local prime_flag37=0\n\
    \    local prime_flag38=0\n    local prime_flag39=0\n    local prime_flag40=0\n\
    \    local prime_flag41=0\n    local prime_flag42=0\n    local prime_flag43=0\n\
    \    local prime_flag44=0\n    local prime_flag45=0\n    local prime_flag46=0\n\
    \    local prime_flag47=0\n    local prime_flag48=0\n    local prime_flag49=0\n\
    \    local prime_flag50=0\n    local prime_flag51=0\n    local prime_flag52=0\n\
    \    local prime_flag53=0\n    local prime_flag54=0\n    local prime_flag55=0\n\
    \    local prime_flag56=0\n    local ", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local i\n    local j\n    local prime\n\
    \    local prime_flag\n    local prime_flag2\n    local prime_flag3\n    local\
    \ prime_flag4\n    local prime_flag5\n    local prime_flag6\n    local prime_flag7\n\
    \    local prime_flag8\n    local prime_flag9\n    local prime_flag10\n    local\
    \ prime_flag11\n    local prime_flag12\n    local prime_flag13\n    local prime_flag14\n\
    \    local prime_flag15\n    local prime_flag16\n    local prime_flag17\n    local\
    \ prime_flag18\n    local prime_flag19\n    local prime_flag20\n    local prime_flag21\n\
    \    local prime_flag22\n    local prime_flag23\n    local prime_flag24\n    local\
    \ prime_flag25\n    local prime_flag26\n    local prime_flag27\n    local prime_flag28\n\
    \    local prime_flag29\n    local prime_flag30\n    local prime_flag31\n    local\
    \ prime_flag32\n    local prime_flag33\n    local prime_flag34\n    local prime_flag35\n\
    \    local prime_flag36\n    local prime_flag37\n    local prime_flag38\n    local\
    \ prime_flag39\n    local prime_flag40\n    local prime_flag41\n    local prime_flag42\n\
    \    local prime_flag43\n    local prime_flag44\n    local prime_flag45\n    local\
    \ prime_flag46\n    local prime_flag47\n    local prime_flag48\n    local prime_flag49\n\
    \    local prime_flag50\n    local prime_flag51\n    local prime_flag52\n    local\
    \ prime_flag53\n    local prime_flag54\n    local prime_flag55\n    local prime_flag56\n\
    \    local prime_flag57\n    local prime_flag58\n    local prime_flag59\n    local\
    \ prime_flag60\n    local prime_flag61\n    local prime_flag62\n    local prime_flag63\n\
    \    local prime_flag64\n    local prime_flag65\n    local prime_flag66\n    local\
    \ prime_flag67\n    local prime_flag68\n    ", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection prime_number\n\
    \    length_interval=$(expr ${interval_1}[1] - ${interval_2}[1])\n    prime_number=$((${length_interval}\
    \ == 0))\n    if [ \"${prime_number}\" = \"1\" ]; then\n        echo \"NO\"\n\
    \    else\n        echo \"YES\"\n    fi", "    local interval_1 interval_2\n \
    \   interval_1=( $1 )\n    interval_2=( $2 )\n    local length_intersection\n\
    \    length_intersection=$(( ${#interval_1[@]} + ${#interval_2[@]} - 1 ))\n  \
    \  if [ $length_intersection -eq 0 ]\n    then\n        echo \"NO\"\n    else\n\
    \        local i\n        for i in $(seq 0 $(( $length_intersection - 1 )))\n\
    \        do\n            if [ $i -eq 0 ]\n            then\n                if\
    \ [ $interval_1[$i] -le $interval_2[$i] ]\n                then\n            \
    \        echo \"YES\"\n                    break\n                else\n     \
    \               echo \"NO\"\n                    break\n                fi\n \
    \           else\n                if [ $interval_1[$i] -le $interval_2[$i] ]\n\
    \                then\n                    if [ $interval_1[$i - 1] -le $interval_2[$i]\
    \ ]\n                    then\n                        echo \"YES\"\n        \
    \                break\n                    else\n                        echo\
    \ \"NO\"\n                        break\n                    fi\n            \
    \    else\n                    if [ $interval_1[$i - 1] -le $interval_2[$i] ]\n\
    \                    then\n                        if [ $interval_1[$i - 1] -gt\
    \ $interval_2[$i] ]\n                        then\n                          \
    \  echo \"YES\"\n                            break\n                        else\n\
    \                            echo \"NO\"\n                            break\n\
    \                        fi\n                    else\n                      \
    \  if [ $interval_1[$i - 1] -gt $interval_2[$i] ]\n                        then\n\
    \                            if [ $interval_1[$i - 1] -gt $interval_2[$i] ]\n\
    \                            then\n                                echo \"YES\"\
    \n                                break\n                            else\n  \
    \                              echo \"NO\"\n                                break\n\
    \                            fi\n                        else\n              \
    \              echo \"NO\"\n                            break\n              \
    \          fi\n                    fi\n                fi\n            fi\n  \
    \      done\n    fi", "    local interval1=$1\n    local interval2=$2\n    local\
    \ length1=$((${interval1[1]}-${interval1[0]}))\n    local length2=$((${interval2[1]}-${interval2[0]}))\n\
    \    local length=$((length1+length2))\n    if [ $length -eq 0 ]; then\n     \
    \   echo \"NO\"\n        return\n    fi\n    local prime=1\n    local prime2=1\n\
    \    local prime3=1\n    local prime4=1\n    local prime5=1\n    local prime6=1\n\
    \    local prime7=1\n    local prime8=1\n    local prime9=1\n    local prime10=1\n\
    \    local prime11=1\n    local prime12=1\n    local prime13=1\n    local prime14=1\n\
    \    local prime15=1\n    local prime16=1\n    local prime17=1\n    local prime18=1\n\
    \    local prime19=1\n    local prime20=1\n    local prime21=1\n    local prime22=1\n\
    \    local prime23=1\n    local prime24=1\n    local prime25=1\n    local prime26=1\n\
    \    local prime27=1\n    local prime28=1\n    local prime29=1\n    local prime30=1\n\
    \    local prime31=1\n    local prime32=1\n    local prime33=1\n    local prime34=1\n\
    \    local prime35=1\n    local prime36=1\n    local prime37=1\n    local prime38=1\n\
    \    local prime39=1\n    local prime40=1\n    local prime41=1\n    local prime42=1\n\
    \    local prime43=1\n    local prime44=1\n    local prime45=1\n    local prime46=1\n\
    \    local prime47=1\n    local prime48=1\n    local prime49=1\n    local prime50=1\n\
    \    local prime51=1\n    local prime52=1\n    local prime53=1\n    local prime54=1\n\
    \    local prime55=1\n    local prime56=1\n    local prime57=1\n    local prime58=1\n\
    \    local prime59=1\n    local prime60=1\n    local prime61=1\n    local prime62=1\n\
    \    local prime63=1\n    local prime64=1\n    local prime65=1\n    local prime66=1\n\
    \    local prime67=1\n    local prime68=1\n    local prime69=1\n    local prime70=1\n\
    \    local prime71=1\n    local prime72=1\n    local prime73=1", "    local interval_1\
    \ interval_2\n    interval_1=$(echo $1 | tr \" \" \"\\n\")\n    interval_2=$(echo\
    \ $2 | tr \" \" \"\\n\")\n    local length\n    length=$(echo $interval_1 | wc\
    \ -w)\n    length=$(echo $interval_2 | wc -w)\n    if [ $length -lt $((length-1))\
    \ ]; then\n        echo \"NO\"\n    else\n        local i\n        for i in $(seq\
    \ 0 $((length-1)) -1 ); do\n            if [[ $interval_1[$i] -gt $interval_2[$i]\
    \ ]]; then\n                echo \"NO\"\n                break\n            else\n\
    \                if [[ $interval_1[$i] -lt $interval_2[$i] ]]; then\n        \
    \            echo \"NO\"\n                    break\n                else\n  \
    \                  echo \"YES\"\n                    break\n                fi\n\
    \            fi\n        done\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local length\n    local prime\n   \
    \ local result\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection\n    length_intersection=$(intersect $interval_1\
    \ $interval_2)\n    if [ $length_intersection -eq 0 ]; then\n        echo \"NO\"\
    \n    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n    local\
    \ interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n    local\
    \ length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((length1+length2))\n\
    \    local prime=1\n    local prime_flag=1\n    local prime_flag2=1\n    local\
    \ prime_flag3=1\n    local prime_flag4=1\n    local prime_flag5=1\n    local prime_flag6=1\n\
    \    local prime_flag7=1\n    local prime_flag8=1\n    local prime_flag9=1\n \
    \   local prime_flag10=1\n    local prime_flag11=1\n    local prime_flag12=1\n\
    \    local prime_flag13=1\n    local prime_flag14=1\n    local prime_flag15=1\n\
    \    local prime_flag16=1\n    local prime_flag17=1\n    local prime_flag18=1\n\
    \    local prime_flag19=1\n    local prime_flag20=1\n    local prime_flag21=1\n\
    \    local prime_flag22=1\n    local prime_flag23=1\n    local prime_flag24=1\n\
    \    local prime_flag25=1\n    local prime_flag26=1\n    local prime_flag27=1\n\
    \    local prime_flag28=1\n    local prime_flag29=1\n    local prime_flag30=1\n\
    \    local prime_flag31=1\n    local prime_flag32=1\n    local prime_flag33=1\n\
    \    local prime_flag34=1\n    local prime_flag35=1\n    local prime_flag36=1\n\
    \    local prime_flag37=1\n    local prime_flag38=1\n    local prime_flag39=1\n\
    \    local prime_flag40=1\n    local prime_flag41=1\n    local prime_flag42=1\n\
    \    local prime_flag43=1\n    local prime_flag44=1\n    local prime_flag45=1\n\
    \    local prime_flag46=1\n    local prime_flag47=1\n    local prime_flag48=1\n\
    \    local prime_flag49=1\n    local prime_flag50=1\n    local prime_flag51=1\n\
    \    local prime_flag52=1\n    local prime_flag53=1\n    local prime_flag54=1\n\
    \    local prime_flag55=1\n    local prime_flag56=1\n    local ", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1\n    local length2\n    local length\n\
    \    local prime\n    local primes\n    local primesCount\n    local primesCount2\n\
    \    local primesCount3\n    local primesCount4\n    local primesCount5\n    local\
    \ primesCount6\n    local primesCount7\n    local primesCount8\n    local primesCount9\n\
    \    local primesCount10\n    local primesCount11\n    local primesCount12\n \
    \   local primesCount13\n    local primesCount14\n    local primesCount15\n  \
    \  local primesCount16\n    local primesCount17\n    local primesCount18\n   \
    \ local primesCount19\n    local primesCount20\n    local primesCount21\n    local\
    \ primesCount22\n    local primesCount23\n    local primesCount24\n    local primesCount25\n\
    \    local primesCount26\n    local primesCount27\n    local primesCount28\n \
    \   local primesCount29\n    local primesCount30\n    local primesCount31\n  \
    \  local primesCount32\n    local primesCount33\n    local primesCount34\n   \
    \ local primesCount35\n    local primesCount36\n    local primesCount37\n    local\
    \ primesCount38\n    local primesCount39\n    local primesCount40\n    local primesCount41\n\
    \    local primesCount42\n    local primesCount43\n    local primesCount44\n \
    \   local primesCount45\n    local primesCount46\n    local primesCount47\n  \
    \  local primesCount48\n    local primesCount49\n    local primesCount50\n   \
    \ local primesCount51\n    local primesCount52\n    local primesCount53\n    local\
    \ primesCount54\n    local primesCount55\n    local primesCount56\n    local primesCount57\n\
    \    local primesCount58\n    local primesCount59\n    local primesCount60\n \
    \   local primesCount61\n    local primesCount62\n    local primesCount63\n  \
    \  local primesCount64\n    local primesCount65\n    local primesCount66\n   \
    \ local primesCount67\n    local primesCount68\n", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection\n    length_intersection=$(intersect\
    \ \"$interval_1\" \"${interval_2}\")\n    if [[ $length_intersection -eq 0 ]];\
    \ then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local\
    \ interval1=$1\n    local interval2=$2\n    local length1\n    local length2\n\
    \    local result\n    local i\n    local j\n    local prime\n    local primes\n\
    \    local primesCount\n    local primesCount2\n    local primesCount3\n    local\
    \ primesCount4\n    local primesCount5\n    local primesCount6\n    local primesCount7\n\
    \    local primesCount8\n    local primesCount9\n    local primesCount10\n   \
    \ local primesCount11\n    local primesCount12\n    local primesCount13\n    local\
    \ primesCount14\n    local primesCount15\n    local primesCount16\n    local primesCount17\n\
    \    local primesCount18\n    local primesCount19\n    local primesCount20\n \
    \   local primesCount21\n    local primesCount22\n    local primesCount23\n  \
    \  local primesCount24\n    local primesCount25\n    local primesCount26\n   \
    \ local primesCount27\n    local primesCount28\n    local primesCount29\n    local\
    \ primesCount30\n    local primesCount31\n    local primesCount32\n    local primesCount33\n\
    \    local primesCount34\n    local primesCount35\n    local primesCount36\n \
    \   local primesCount37\n    local primesCount38\n    local primesCount39\n  \
    \  local primesCount40\n    local primesCount41\n    local primesCount42\n   \
    \ local primesCount43\n    local primesCount44\n    local primesCount45\n    local\
    \ primesCount46\n    local primesCount47\n    local primesCount48\n    local primesCount49\n\
    \    local primesCount50\n    local primesCount51\n    local primesCount52\n \
    \   local primesCount53\n    local primesCount54\n    local primesCount55\n  \
    \  local primesCount56\n    local primesCount57\n    local primesCount58\n   \
    \ local primesCount59\n    local primesCount60\n    local primesCount61\n    local\
    \ primesCount62\n    local primesCount63\n    local primesCount64\n    local primesCount65\n\
    \    local primesCount66\n    local primesCount67", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]}+1))\n    local length2=$((${interval2[1]}+1))\n\
    \    local length_intersection=$((length1-length2))\n    local length_prime=$((length_intersection/2))\n\
    \    local prime_number\n    local prime_number_flag\n    local prime_number_flag2\n\
    \    local prime_number_flag3\n    local prime_number_flag4\n    local prime_number_flag5\n\
    \    local prime_number_flag6\n    local prime_number_flag7\n    local prime_number_flag8\n\
    \    local prime_number_flag9\n    local prime_number_flag10\n    local prime_number_flag11\n\
    \    local prime_number_flag12\n    local prime_number_flag13\n    local prime_number_flag14\n\
    \    local prime_number_flag15\n    local prime_number_flag16\n    local prime_number_flag17\n\
    \    local prime_number_flag18\n    local prime_number_flag19\n    local prime_number_flag20\n\
    \    local prime_number_flag21\n    local prime_number_flag22\n    local prime_number_flag23\n\
    \    local prime_number_flag24\n    local prime_number_flag25\n    local prime_number_flag26\n\
    \    local prime_number_flag27\n    local prime_number_flag28\n    local prime_number_flag29\n\
    \    local prime_number_flag30\n    local prime_number_flag31\n    local prime_number_flag32\n\
    \    local prime_number_flag33\n    local prime_number_flag34\n    local prime_number_flag35\n\
    \    local prime_number_flag36\n    local prime_number_flag37\n    local prime_number_flag38\n\
    \    local prime_number_flag39\n    local prime_number_flag40\n    local prime_number_flag41\n\
    \    local prime_number_flag42\n    local prime_number_flag43\n    local prime_number_flag44\n\
    \    local prime_number_flag45\n    local prime_number_flag46\n    local prime_number_flag47\n\
    \    local prime_number_flag48\n    local prime_number_flag49\n    local prime_number_flag50\n\
    \    local prime_number_flag51\n    local prime_number_flag52\n    local prime_number_flag53\n\
    \    local prime_number_flag54\n    local prime_number_flag55\n    ", "    local\
    \ interval_1 interval_2\n    interval_1=$(echo $1 | sed 's/ /, /g')\n    interval_2=$(echo\
    \ $2 | sed 's/ /, /g')\n    local length\n    length=$(echo $interval_1 | wc -w)\n\
    \    length=$(echo $length | awk '{print $1}')\n    length=$(echo $length | awk\
    \ '{print $2}')\n    local i\n    local j\n    local prime\n    prime=\"YES\"\n\
    \    for i in $(seq 0 $((length-1))); do\n        for j in $(seq 0 $((length-1)));\
    \ do\n            if [[ $i -eq $j ]]; then\n                continue\n       \
    \     fi\n            if [[ $i -le $j ]]; then\n                if [[ $interval_1[$i]\
    \ -le $interval_2[$j] ]]; then\n                    prime=\"NO\"\n           \
    \         break\n                fi\n            fi\n        done\n    done\n\
    \    echo \"$prime\"", "    local interval_1 interval_2\n    interval_1=$1\n \
    \   interval_2=$2\n    local length_intersection prime_number\n    length_interval=$(expr\
    \ ${interval_2}-${interval_1} + 1)\n    prime_number=$((${length_interval}-1))\n\
    \    if [[ ${length_interval} -eq ${prime_number} ]]; then\n        echo \"YES\"\
    \n    else\n        echo \"NO\"\n    fi", "    local interval_1 interval_2\n \
    \   interval_1=$1\n    interval_2=$2\n    local length_intersection_1 length_intersection_2\
    \ length_1 length_2\n    length_intersection_1=$(echo \"$interval_1\" | wc -w)\n\
    \    length_intersection_2=$(echo \"$interval_2\" | wc -w)\n    length_1=$(echo\
    \ \"$interval_1\" | wc -w)\n    length_2=$(echo \"$interval_2\" | wc -w)\n   \
    \ if [ $length_intersection_1 -eq $length_intersection_2 ]; then\n        if [\
    \ $length_1 -eq $length_2 ]; then\n            if [ $length_intersection_1 -eq\
    \ 1 ]; then\n                echo \"YES\"\n            else\n                echo\
    \ \"NO\"\n            fi\n        else\n            echo \"NO\"\n        fi\n\
    \    else\n        echo \"NO\"\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local length\n    local result\n  \
    \  local i\n    local j\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n", "    local interval_1\
    \ interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection\n\
    \    length_intersection=$(intersect \"$interval_1\" \"${interval_2}\")\n    if\
    \ [[ \"$length_intersection\" == \"\" ]]; then\n        echo \"NO\"\n    else\n\
    \        echo \"YES\"\n    fi", "    local interval_1 interval_2\n    interval_1=(\
    \ $1 )\n    interval_2=( $2 )\n    local len_intersection\n    len_intersection=(\
    \ $(echo \"${interval_1[0]} ${interval_1[1]}\" | bc -l) )\n    local len_1\n \
    \   len_1=( $(echo \"${interval_1[0]}\" | bc -l) )\n    local len_2\n    len_2=(\
    \ $(echo \"${interval_2[0]}\" | bc -l) )\n    local i\n    local j\n    local\
    \ k\n    local prime\n    prime=( $(echo \"${interval_1[0]} ${interval_1[1]}\"\
    \ | bc -l) )\n    local prime_check\n    prime_check=( $(echo \"${interval_2[0]}\
    \ ${interval_2[1]}\" | bc -l) )\n    local prime_check2\n    prime_check2=( $(echo\
    \ \"${interval_1[0]} ${interval_1[1]}\" | bc -l) )\n    local prime_check3\n \
    \   prime_check3=( $(echo \"${interval_2[0]} ${interval_2[1]}\" | bc -l) )\n \
    \   local prime_check4\n    prime_check4=( $(echo \"${interval_1[0]} ${interval_1[1]}\"\
    \ | bc -l) )\n    local prime_check5\n    prime_check5=( $(echo \"${interval_2[0]}\
    \ ${interval_2[1]}\" | bc -l) )\n    local prime_check6\n    prime_check6=( $(echo\
    \ \"${interval_1[0]} ${interval_1[1]}\" | bc -l) )\n    local prime_check7\n \
    \   prime_check7=( $(echo \"${interval_2[0]} ${interval_2[1]}\" | bc -l) )\n \
    \   local prime_check8\n    prime_check8=( $(echo \"${interval_1[0]} ${interval_1[1]}\"\
    \ | bc -l) )\n    local prime_check9\n    prime_check9=( $(echo \"${interval_2[0]}\
    \ ${interval_2[1]}\" | bc -l) )\n    local prime_check10\n    prime_check10=(\
    \ $(echo \"${interval_1[0]} ${interval_1[1]}\" | bc -l) )\n    local prime_check11\n\
    \    prime_check11=( $(echo \"${interval_2[0]} ${interval_2[1]}\" | bc -l) )\n\
    \    local prime_check12\n    prime_check12=( $(echo \"${interval_1[0]} ${interval_1[1]}\"\
    \ ", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection\n    length_intersection=$(intersect \"$interval_1\"\
    \ \"${interval_2}\")\n    if [[ \"$length_intersection\" == \"\" ]]; then\n  \
    \      echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval_1\
    \ interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection_1\
    \ length_intersection_2\n    length_intersection_1=$(echo \"${interval_1}\" |\
    \ wc -w)\n    length_intersection_2=$(echo \"${interval_2}\" | wc -w)\n    if\
    \ [[ ${length_intersection_1} -eq ${length_intersection_2} ]]; then\n        local\
    \ length_intersection_1_prime length_intersection_2_prime\n        length_intersection_1_prime=$(echo\
    \ \"${length_intersection_1}\" | awk '{print $1}')\n        length_intersection_2_prime=$(echo\
    \ \"${length_intersection_2}\" | awk '{print $1}')\n        if [[ ${length_intersection_1_prime}\
    \ -eq ${length_intersection_2_prime} ]]; then\n            if [[ ${length_intersection_1}\
    \ -le ${length_intersection_2} ]]; then\n                local prime_number\n\
    \                prime_number=$(echo \"${length_intersection_1} + ${length_intersection_2}\"\
    | bc -l)\n                if [[ ${prime_number} -eq ${length_intersection_1} ]];\
    \ then\n                    echo \"YES\"\n                else\n             \
    \       echo \"NO\"\n                fi\n            else\n                echo\
    \ \"NO\"\n            fi\n        else\n            echo \"NO\"\n        fi\n\
    \    else\n        echo \"NO\"\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1=$((${interval1[1]} - ${interval1[0]}))\n    local length2=$((${interval2[1]}\
    \ - ${interval2[0]}))\n    local length=$((length1 + length2))\n    if [ $length\
    \ -eq 0 ]\n    then\n        echo \"NO\"\n    else\n        local prime=1\n  \
    \      for (( i=1; i<=$length; i++ ))\n        do\n            if [ $(($i % $length))\
    \ -eq 0 ]\n            then\n                prime=0\n                break\n\
    \            fi\n        done\n        if [ $prime -eq 1 ]\n        then\n   \
    \         echo \"YES\"\n        else\n            echo \"NO\"\n        fi\n  \
    \  fi", "    local interval_1 interval_2\n    interval_1=( $1 )\n    interval_2=(\
    \ $2 )\n    local len_intersection\n    len_intersection=`expr $(( ${#interval_1[@]}\
    \ - ${#interval_2[@]} ))`\n    if [ ${len_intersection} -eq 0 ]\n    then\n  \
    \      echo \"NO\"\n    else\n        local i\n        local j\n        local\
    \ prime\n        prime=\"YES\"\n        for (( i=1; i<${#interval_1[@]}; i++ ))\n\
    \        do\n            for (( j=1; j<${#interval_2[@]}; j++ ))\n           \
    \ do\n                if [ ${interval_1[i]} -le ${interval_2[j]} ]\n         \
    \       then\n                    local m\n                    m=$(( ${interval_1[i]}\
    \ + ${interval_2[j]} ))\n                    if [ ${m} -eq ${m} ]\n          \
    \          then\n                        prime=\"NO\"\n                      \
    \  break\n                    fi\n                fi\n            done\n     \
    \   done\n        echo \"$prime\"\n    fi", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection\n    length_intersection=$(echo\
    \ \"${interval_1}${interval_2}\" | wc -w)\n    if [[ ${length_intersection} -eq\
    \ 0 ]]; then\n        echo \"NO\"\n    else\n        local length_intersection_prime\n\
    \        length_intersection_prime=$(echo \"${length_intersection}\" | awk '{print\
    \ $1}')\n        if [[ ${length_intersection_prime} -eq 0 ]]; then\n         \
    \   echo \"NO\"\n        else\n            if [[ ${length_intersection} -eq ${length_intersection_prime}\
    \ ]]; then\n                echo \"YES\"\n            else\n                echo\
    \ \"NO\"\n            fi\n        fi\n    fi", "    local interval1=$1\n    local\
    \ interval2=$2\n    local length1\n    local length2\n    local length\n    local\
    \ prime\n    local primes\n    local primesCount\n    local primesCount2\n   \
    \ local primesCount3\n    local primesCount4\n    local primesCount5\n    local\
    \ primesCount6\n    local primesCount7\n    local primesCount8\n    local primesCount9\n\
    \    local primesCount10\n    local primesCount11\n    local primesCount12\n \
    \   local primesCount13\n    local primesCount14\n    local primesCount15\n  \
    \  local primesCount16\n    local primesCount17\n    local primesCount18\n   \
    \ local primesCount19\n    local primesCount20\n    local primesCount21\n    local\
    \ primesCount22\n    local primesCount23\n    local primesCount24\n    local primesCount25\n\
    \    local primesCount26\n    local primesCount27\n    local primesCount28\n \
    \   local primesCount29\n    local primesCount30\n    local primesCount31\n  \
    \  local primesCount32\n    local primesCount33\n    local primesCount34\n   \
    \ local primesCount35\n    local primesCount36\n    local primesCount37\n    local\
    \ primesCount38\n    local primesCount39\n    local primesCount40\n    local primesCount41\n\
    \    local primesCount42\n    local primesCount43\n    local primesCount44\n \
    \   local primesCount45\n    local primesCount46\n    local primesCount47\n  \
    \  local primesCount48\n    local primesCount49\n    local primesCount50\n   \
    \ local primesCount51\n    local primesCount52\n    local primesCount53\n    local\
    \ primesCount54\n    local primesCount55\n    local primesCount56\n    local primesCount57\n\
    \    local primesCount58\n    local primesCount59\n    local primesCount60\n \
    \   local primesCount61\n    local primesCount62\n    local primesCount63\n  \
    \  local primesCount64\n    local primesCount65\n    local primesCount66\n   \
    \ local primesCount67\n    local primesCount68\n", "    local interval1=$1\n \
    \   local interval2=$2\n    local length1\n    local length2\n    local prime\n\
    \    local prime_flag\n\n    length1=$(expr ${interval1[1]} - ${interval1[0]})\n\
    \    length2=$(expr ${interval2[1]} - ${interval2[0]})\n\n    if [ $length1 -eq\
    \ 0 -o $length2 -eq 0 ]\n    then\n        echo \"NO\"\n        return\n    fi\n\
    \n    prime_flag=0\n    for (( i=1; i<=$length1; i++ ))\n    do\n        prime=$((\
    \ ${interval1[0]} + $i ))\n        if [ $prime -le $length2 ]\n        then\n\
    \            prime_flag=1\n            break\n        fi\n    done\n\n    if [\
    \ $prime_flag -eq 0 ]\n    then\n        echo \"NO\"\n        return\n    fi\n\
    \n    prime_flag=0\n    for (( j=1; j<=$length2; j++ ))\n    do\n        prime=$((\
    \ ${interval2[0]} + $j ))\n        if [ $prime -le $length1 ]\n        then\n\
    \            prime_flag=1\n            break\n        fi\n    done\n\n    if [\
    \ $prime_flag -eq 0 ]\n    then\n        echo \"NO\"\n        return\n    fi\n\
    \n    prime_flag=0\n    for (( k=1; k<=$length1; k++ ))\n    do\n        prime=$((\
    \ ${interval1[0]} + $k ))\n        if [ $prime -le $length2 ]\n        then\n\
    \            prime_flag=1\n            break\n        fi\n    done\n\n    if [\
    \ $prime_flag -eq 0 ]\n    then\n        echo \"NO\"\n        return\n    fi\n\
    \n    prime_flag=0\n    for (( l=1; l<=$length2; l++ ))\n    do\n        prime=$((\
    \ ${interval2[0]} + $l ))\n        if [ $prime -le $length1 ]\n        then\n\
    \            prime_flag=1\n            break\n        fi\n    done\n\n    if [\
    \ $prime_flag -eq 0 ]\n    then\n        echo \"NO\"\n        return\n    fi\n\
    \n    prime_flag=0\n    for (( m=1; m<=$length1; m++ ))\n    do\n        prime=$((\
    \ ${interval1[0]} + $m ))\n        if [ $prime -le $length2 ]\n        then\n\
    \            prime_flag=1\n            break\n        fi\n    done\n\n    if [\
    \ $prime_", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection_1 length_intersection_2 length_1 length_2 length_length_1\
    \ length_length_2 length_length_length_1 length_length_length_2 length_length_length_length_1\
    \ length_length_length_length_2 length_length_length_length_length_1 length_length_length_length_length_2\
    \ length_length_length_length_length_length_1 length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_length_1\
    \ length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_length_length_length_length_1 length_length_length_length_length_length_length_length_length_length_length_length_2\
    \ length_length_length_length_length_length_", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection prime_number\n\
    \    length_interval=$(echo \"$interval_1 $interval_2\" | awk '{print length($0)}')\n\
    \    prime_number=$((length_interval % 2))\n    if [ \"$prime_number\" -eq \"\
    1\" ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", " \
    \   local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((length1 + length2))\n    if [ $length -eq 0 ]\n    then\n\
    \        echo \"NO\"\n    else\n        local prime=1\n        for (( i=1; i<=$length;\
    \ i++ ))\n        do\n            if [ $(($i % $length)) -ne 0 ]\n           \
    \ then\n                prime=0\n                break\n            fi\n     \
    \   done\n        if [ $prime -eq 1 ]\n        then\n            echo \"YES\"\n\
    \        else\n            echo \"NO\"\n        fi\n    fi", "    local interval_1\
    \ interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection\
    \ prime_number\n    length_interval=$(expr ${interval_1}[1] - ${interval_2}[1])\n\
    \    prime_number=$((${length_interval} == 0))\n    if [ \"${prime_number}\" =\
    \ \"1\" ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi",
  "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection\n    length_intersection=$(intersect \"$interval_1\" \"\
    ${interval_2[@]}\")\n    if [[ \"$length_intersection\" == \"\" ]]; then\n   \
    \     echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval_1\
    \ interval_2\n    interval_1=( $1 )\n    interval_2=( $2 )\n    local length_intersection\n\
    \    length_intersection=( $(( ${#interval_1[@]} + ${#interval_2[@]} - 1 )) )\n\
    \    if [ $length_intersection -eq 0 ]\n    then\n        echo \"NO\"\n    else\n\
    \        local i\n        for i in $(seq 0 $(($length_intersection - 1))); do\n\
    \            if [ ${interval_1[$i]} -gt ${interval_2[$i]} ]\n            then\n\
    \                echo \"NO\"\n                break\n            else\n      \
    \          echo \"YES\"\n                break\n            fi\n        done\n\
    \    fi", "    local a b c d e f g h i j k l m n o p q r s t u v w x y z\n   \
    \ local -i len\n    local -a arr\n    local -i i\n    local -a arr2\n    local\
    \ -i j\n    local -a arr3\n    local -i k\n    local -a arr4\n    local -i l\n\
    \    local -a arr5\n    local -i m\n    local -a arr6\n    local -i n\n    local\
    \ -a arr7\n    local -i o\n    local -a arr8\n    local -i p\n    local -a arr9\n\
    \    local -i q\n    local -a arr10\n    local -i r\n    local -a arr11\n    local\
    \ -i s\n    local -a arr12\n    local -i t\n    local -a arr13\n    local -i u\n\
    \    local -a arr14\n    local -i v\n    local -a arr15\n    local -i w\n    local\
    \ -a arr16\n    local -i x\n    local -a arr17\n    local -i y\n    local -a arr18\n\
    \    local -i z\n    local -a arr19\n    local -i len\n    local -a arr20\n  \
    \  local -i i\n    local -a arr21\n    local -i j\n    local -a arr22\n    local\
    \ -i k\n    local -a arr23\n    local -i l\n    local -a arr24\n    local -i m\n\
    \    local -a arr25\n    local -i n\n    local -a arr26\n    local -i o\n    local\
    \ -a arr27\n    local -i p\n    local -a arr28\n    local -i q\n    local -a arr29\n\
    \    local -i r\n    local -a arr30\n    local -i s\n    local -a arr31\n    local\
    \ -i t\n    local -a arr32\n    local -i u\n    local -a arr33\n    local -i v\n\
    \    local -a arr34\n    local -i w\n    local -a arr35\n    local -i x\n    local\
    \ -a arr36\n    local -i y\n    local -a arr37\n    local -i z\n    local -a arr38\n\
    \    local -i len\n    local -a arr39\n    local -i i\n    local -a arr40\n  \
    \  local -i j", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection_1 length_intersection_2\n    length_intersection_1=$(expr\
    \ ${interval_1}[1] - ${interval_1}[0])\n    length_intersection_2=$(expr ${interval_2}[1]\
    \ - ${interval_2}[0])\n    if [[ ${length_intersection_1} -le ${length_intersection_2}\
    \ ]]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "  \
    \  local interval_1 interval_2\n    interval_1=( $1 )\n    interval_2=( $2 )\n\
    \    local len_intersection\n    len_intersection=$(intersect \"${interval_1[@]}\"\
    \ \"$interval_2\")\n    if [[ $len_intersection -eq 0 ]]; then\n        echo \"\
    NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection\n    length_intersection=$(intersect\
    \ \"$interval_1\" \"${interval_2[@]}\")\n    if [ \"$length_intersection\" -eq\
    \ 0 ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", " \
    \   local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection\n    length_intersection=$(echo \"$interval_1\" \"$interval_2\"\
    \ | sort -n | uniq -c | sort -nr | head -1)\n    if [ \"$length_intersection\"\
    \ -eq \"1\" ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n   \
    \ fi", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection prime_number\n    length_interval=$(echo \"${interval_1}${interval_2}\"\
    \ | wc -w)\n    if [ $length_interval -eq 0 ]\n    then\n        echo \"NO\"\n\
    \    else\n        prime_number=$((length_interval % 2))\n        if [ $prime_number\
    \ -eq 0 ]\n        then\n            echo \"NO\"\n        else\n            echo\
    \ \"YES\"\n        fi\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local result\n    local prime\n   \
    \ local prime_flag\n\n    length1=$(expr ${interval1[1]} - ${interval1[0]})\n\
    \    length2=$(expr ${interval2[1]} - ${interval2[0]})\n    prime_flag=false\n\
    \    prime=false\n    \n    for (( i=1; i<${length1}; i++ )); do\n        for\
    \ (( j=1; j<${length2}; j++ )); do\n            if [[ ${interval1[0]} -eq ${interval2[0]}\
    \ ]]; then\n                if [[ ${interval1[1]} -le ${interval2[1]} ]]; then\n\
    \                    if [[ ${interval1[0]} -le ${interval2[1]} ]]; then\n    \
    \                    if [[ ${interval1[1]} -le ${interval2[1]} ]]; then\n    \
    \                        if [[ ${interval1[0]} -le ${interval2[1]} ]]; then\n\
    \                                if [[ ${interval1[1]} -le ${interval2[1]} ]];\
    \ then\n                                    if [[ ${interval1[0]} -le ${interval2[1]}\
    \ ]]; then\n                                        if [[ ${interval1[1]} -le\
    \ ${interval2[1]} ]]; then\n                                            if [[\
    \ ${interval1[0]} -le ${interval2[1]} ]]; then\n                             \
    \                   if [[ ${interval1[1]} -le ${interval2[1]} ]]; then\n     \
    \                                               if [[ ${interval1[0]} -le ${interval2[1]}\
    \ ]]; then\n                                                        if [[ ${interval1[1]}\
    \ -le ${interval2[1]} ]]; then\n                                             \
    \               if [[ ${interval1[0]} -le ${interval2[1]} ]]; then\n         \
    \                                                       if [[ ${interval1[1]}\
    \ -le ${interval2[1]} ]]; then\n                                             \
    \                       if [[ ${interval1[0]} -le ${interval2[1]} ]]; then\n \
    \                                                                       if [[\
    \ ${interval1[1]} -le ${interval2[1]} ]]; then\n                             \
    \                                               if [[ ${interval1[0]} -le ${interval2[1]}\
    \ ]]; then\n                                                                 \
    \               if [[ ${interval1[1]} -le ${interval2[1]} ]]; then\n         \
    \                                                                           if\
    \ [[ ${interval1[0]} -le ${interval2[1]} ]]; then\n                          \
    \                                                              if [[ ${interval1[1]}\
    \ -le ${interval2[1]} ]]; then\n                                             \
    \                                               if [[ ${interval1[0]} -le ${interval2[1]}\
    \ ]]; then\n                                                                 \
    \                               if [[ ${interval1[1]} -le ${interval2[1]} ]];\
    \ then\n                                                                     \
    \                               if [[ ${interval1[0]} -", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n\
    \    local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((length1\
    \ + length2))\n    local i\n    local j\n    local prime\n    local prime_flag\n\
    \    local prime_flag2\n    local prime_flag3\n    local prime_flag4\n    local\
    \ prime_flag5\n    local prime_flag6\n    local prime_flag7\n    local prime_flag8\n\
    \    local prime_flag9\n    local prime_flag10\n    local prime_flag11\n    local\
    \ prime_flag12\n    local prime_flag13\n    local prime_flag14\n    local prime_flag15\n\
    \    local prime_flag16\n    local prime_flag17\n    local prime_flag18\n    local\
    \ prime_flag19\n    local prime_flag20\n    local prime_flag21\n    local prime_flag22\n\
    \    local prime_flag23\n    local prime_flag24\n    local prime_flag25\n    local\
    \ prime_flag26\n    local prime_flag27\n    local prime_flag28\n    local prime_flag29\n\
    \    local prime_flag30\n    local prime_flag31\n    local prime_flag32\n    local\
    \ prime_flag33\n    local prime_flag34\n    local prime_flag35\n    local prime_flag36\n\
    \    local prime_flag37\n    local prime_flag38\n    local prime_flag39\n    local\
    \ prime_flag40\n    local prime_flag41\n    local prime_flag42\n    local prime_flag43\n\
    \    local prime_flag44\n    local prime_flag45\n    local prime_flag46\n    local\
    \ prime_flag47\n    local prime_flag48\n    local prime_flag49\n    local prime_flag50\n\
    \    local prime_flag51\n    local prime_flag52\n    local prime_flag53\n    local\
    \ prime_flag54\n    local prime_flag55\n    local prime_flag56\n    local prime_flag57\n\
    \    local prime_flag58\n    local prime_flag59\n    local prime_flag60\n    local\
    \ prime_flag61\n    local prime_flag62\n    local prime_flag63\n    local ", " \
    \   local interval1=$1\n    local interval2=$2\n    local length1\n    local length2\n\
    \    local prime\n    local prime_flag\n    local prime_flag2\n    local prime_flag3\n\
    \    local prime_flag4\n    local prime_flag5\n    local prime_flag6\n    local\
    \ prime_flag7\n    local prime_flag8\n    local prime_flag9\n    local prime_flag10\n\
    \    local prime_flag11\n    local prime_flag12\n    local prime_flag13\n    local\
    \ prime_flag14\n    local prime_flag15\n    local prime_flag16\n    local prime_flag17\n\
    \    local prime_flag18\n    local prime_flag19\n    local prime_flag20\n    local\
    \ prime_flag21\n    local prime_flag22\n    local prime_flag23\n    local prime_flag24\n\
    \    local prime_flag25\n    local prime_flag26\n    local prime_flag27\n    local\
    \ prime_flag28\n    local prime_flag29\n    local prime_flag30\n    local prime_flag31\n\
    \    local prime_flag32\n    local prime_flag33\n    local prime_flag34\n    local\
    \ prime_flag35\n    local prime_flag36\n    local prime_flag37\n    local prime_flag38\n\
    \    local prime_flag39\n    local prime_flag40\n    local prime_flag41\n    local\
    \ prime_flag42\n    local prime_flag43\n    local prime_flag44\n    local prime_flag45\n\
    \    local prime_flag46\n    local prime_flag47\n    local prime_flag48\n    local\
    \ prime_flag49\n    local prime_flag50\n    local prime_flag51\n    local prime_flag52\n\
    \    local prime_flag53\n    local prime_flag54\n    local prime_flag55\n    local\
    \ prime_flag56\n    local prime_flag57\n    local prime_flag58\n    local prime_flag59\n\
    \    local prime_flag60\n    local prime_flag61\n    local prime_flag62\n    local\
    \ prime_flag63\n    local prime_flag64\n    local prime_flag65\n    local prime_flag66\n\
    \    local prime_flag67\n    local prime_flag68\n    local prime_flag69\n    local ",
  "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection_1 length_intersection_2\n    length_intersection_1=$(echo\
    \ \"$interval_1\" | awk '{print $1}')\n    length_intersection_2=$(echo \"$interval_2\"\
    \ | awk '{print $1}')\n    if [ \"$length_intersection_1\" -gt \"$length_intersection_2\"\
    \ ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "   \
    \ local interval_1 interval_2\n    interval_1=( $1 )\n    interval_2=( $2 )\n\
    \    local length_intersection\n    length_intersection=$(intersect \"${interval_1[@]}\"\
    \ \"$interval_2\")\n    if [ \"$length_intersection\" -eq 0 ]; then\n        echo\
    \ \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n \
    \   local interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n\
    \    local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((length1\
    \ + length2))\n    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n\
    \    local prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n \
    \   local prime_flag6=0\n    local prime_flag7=0\n    local prime_flag8=0\n  \
    \  local prime_flag9=0\n    local prime_flag10=0\n    local prime_flag11=0\n \
    \   local prime_flag12=0\n    local prime_flag13=0\n    local prime_flag14=0\n\
    \    local prime_flag15=0\n    local prime_flag16=0\n    local prime_flag17=0\n\
    \    local prime_flag18=0\n    local prime_flag19=0\n    local prime_flag20=0\n\
    \    local prime_flag21=0\n    local prime_flag22=0\n    local prime_flag23=0\n\
    \    local prime_flag24=0\n    local prime_flag25=0\n    local prime_flag26=0\n\
    \    local prime_flag27=0\n    local prime_flag28=0\n    local prime_flag29=0\n\
    \    local prime_flag30=0\n    local prime_flag31=0\n    local prime_flag32=0\n\
    \    local prime_flag33=0\n    local prime_flag34=0\n    local prime_flag35=0\n\
    \    local prime_flag36=0\n    local prime_flag37=0\n    local prime_flag38=0\n\
    \    local prime_flag39=0\n    local prime_flag40=0\n    local prime_flag41=0\n\
    \    local prime_flag42=0\n    local prime_flag43=0\n    local prime_flag44=0\n\
    \    local prime_flag45=0\n    local prime_flag46=0\n    local prime_flag47=0\n\
    \    local prime_flag48=0\n    local prime_flag49=0\n    local prime_flag50=0\n\
    \    local prime_flag51=0\n    local prime_flag52=0\n    local prime_flag53=0\n\
    \    local prime_flag54=0\n    local prime_flag55=0\n    local prime_flag56=0\n\
    \    local ", "    local interval1=$1\n    local interval2=$2\n    local length1\n\
    \    local length2\n    local result\n    local i\n    local j\n    local k\n\
    \    local prime\n    local prime_flag\n\n    length1=${#interval1[@]}\n    length2=${#interval2[@]}\n\
    \    if [ $length1 -eq 0 ] || [ $length2 -eq 0 ]; then\n        result=\"NO\"\n\
    \    else\n        result=\"YES\"\n    fi\n\n    for (( i=0; i<$length1; i++ ));\
    \ do\n        for (( j=0; j<$length2; j++ )); do\n            if [ $i -eq $j ];\
    \ then\n                continue\n            fi\n            prime_flag=false\n\
    \            k=$(( $i + $j + 1 ))\n            prime=true\n            for ((\
    \ k=$i; k<$length1; k++ )); do\n                if [ $(( $interval1[ $k ] )) -eq\
    \ $(( $interval2[ $j ] )) ]; then\n                    prime_flag=true\n     \
    \               break\n                fi\n            done\n            if [\
    \ $prime_flag = true ]; then\n                result=\"NO\"\n                break\n\
    \            fi\n        done\n    done\n    echo \"$result\"", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n\
    \    local length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((length1+length2))\n\
    \    if [ $length -eq 0 ]; then\n        echo \"NO\"\n    else\n        local\
    \ i\n        for ((i=length-1; i>=0; i--)); do\n            if [ $((${interval1[0]}\
    \ + i)) -le $((${interval2[0]} - i)) ]; then\n                if [ $((${interval1[1]}\
    \ + i)) -le $((${interval2[1]} - i)) ]; then\n                    echo \"YES\"\
    \n                    exit 0\n                fi\n            fi\n        done\n\
    \        echo \"NO\"\n    fi", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection\n    length_intersection=$(intersect\
    \ \"$interval_1\" \"${interval_2}\")\n    if [ \"$length_intersection\" == \"\"\
    \ ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "   \
    \ local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection_1 length_intersection_2\n    length_intersection_1=$(echo\
    \ \"$interval_1\" | awk '{print $1}')\n    length_intersection_2=$(echo \"$interval_2\"\
    \ | awk '{print $1}')\n    if [ \"$length_intersection_1\" -gt \"$length_intersection_2\"\
    \ ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "   \
    \ local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection\n    length_intersection=$(intersect \"$interval_1\" \"\
    ${interval_2}\")\n    if [[ $length_intersection -eq 0 ]]; then\n        echo\
    \ \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection_1 length_intersection_2\n\
    \    length_intersection_1=$(echo \"$interval_1\" | wc -w)\n    length_intersection_2=$(echo\
    \ \"$interval_2\" | wc -w)\n    if [ $length_intersection_1 -eq $length_intersection_2\
    \ ]; then\n        echo \"$interval_1\" | awk '{print $1}' | sort | uniq -c |\
    \ sort -nr | head -1\n    else\n        echo \"NO\"\n    fi", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${#interval1} - 1))\n    local length2=$((${#interval2}\
    \ - 1))\n    local i\n    local j\n    local prime\n    local result\n    local\
    \ length\n    local interval\n    local interval1\n    local interval2\n    local\
    \ length1\n    local length2\n    local i\n    local j\n    local prime\n    local\
    \ result\n    local length\n    local interval\n    local interval1\n    local\
    \ interval2\n    local length1\n    local length2\n    local i\n    local j\n\
    \    local prime\n    local result\n    local length\n    local interval\n   \
    \ local interval1\n    local interval2\n    local length1\n    local length2\n\
    \    local i\n    local j\n    local prime\n    local result\n    local length\n\
    \    local interval\n    local interval1\n    local interval2\n    local length1\n\
    \    local length2\n    local i\n    local j\n    local prime\n    local result\n\
    \    local length\n    local interval\n    local interval1\n    local interval2\n\
    \    local length1\n    local length2\n    local i\n    local j\n    local prime\n\
    \    local result\n    local length\n    local interval\n    local interval1\n\
    \    local interval2\n    local length1\n    local length2\n    local i\n    local\
    \ j\n    local prime\n    local result\n    local length\n    local interval\n\
    \    local interval1\n    local interval2\n    local length1\n    local length2\n\
    \    local i\n    local j\n    local prime\n    local result\n    local length\n\
    \    local interval\n    local interval1\n    local interval2\n    local length1\n\
    \    local length2\n    local i\n    local j\n    local prime\n    local result\n\
    \    local length\n    local interval\n    local interval1\n    local interval2\n\
    \    local length1\n    local length2\n    local i\n    local j\n    local prime\n\
    \    local result\n    local length\n    local interval\n    local interval1\n\
    \    local interval2\n    local length1\n    local length2\n    local i\n    local\
    \ j\n    local prime\n    local result\n    local length\n    local interval\n\
    \    local interval1\n    local interval", "    local interval_1 interval_2\n\
    \    interval_1=( $1 )\n    interval_2=( $2 )\n    local length_intersection\n\
    \    length_intersection=( $(( ${#interval_1[@]} + ${#interval_2[@]} - 1 )) )\n\
    \    local is_prime\n    is_prime=\"YES\"\n    for (( i = 0; i < ${#interval_1[@]};\
    \ i++ )); do\n        if [[ ${interval_1[i]} -gt ${interval_2[i]} ]]; then\n \
    \           is_prime=\"NO\"\n            break\n        fi\n    done\n    echo\
    \ $is_prime", "    local a b\n    a=$1\n    b=$2\n    local len\n    len=$(( ${#a}\
    \ - ${#b} ))\n    local i\n    for i in $(seq 0 $(( ${#a} - 1 ))); do\n      \
    \  if [[ ${a[$i]} -gt ${b[$i]} ]]; then\n            (( len-- ))\n        elif\
    \ [[ ${a[$i]} -lt ${b[$i]} ]]; then\n            (( len++ ))\n        fi\n   \
    \ done\n    if [[ $len -eq 0 ]]; then\n        echo \"NO\"\n    else\n       \
    \ echo \"YES\"\n    fi", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection_1 length_intersection_2\n  \
    \  length_intersection_1=$(echo \"$interval_1\" | wc -w)\n    length_intersection_2=$(echo\
    \ \"$interval_2\" | wc -w)\n    if [ $length_intersection_1 -eq $length_intersection_2\
    \ ]; then\n        local interval_1_array interval_2_array\n        interval_1_array=$(echo\
    \ \"$interval_1\" | tr -d '()')\n        interval_2_array=$(echo \"$interval_2\"\
    \ | tr -d '()')\n        local length_intersection_1_array length_intersection_2_array\n\
    \        length_intersection_1_array=$(echo \"$interval_1_array\" | wc -w)\n \
    \       length_intersection_2_array=$(echo \"$interval_2_array\" | wc -w)\n  \
    \      if [ $length_intersection_1_array -eq $length_intersection_2_array ]; then\n\
    \            local length_array\n            length_array=$(echo \"$length_intersection_1_array\"\
    \ | tr -d '()')\n            if [ $length_array -eq 1 ]; then\n              \
    \  if [[ $interval_1_array[$length_array-1] -ge $interval_2_array[$length_array-1]\
    \ ]]; then\n                    echo \"YES\"\n                else\n         \
    \           echo \"NO\"\n                fi\n            else\n              \
    \  echo \"NO\"\n            fi\n        else\n            echo \"NO\"\n      \
    \  fi\n    else\n        echo \"NO\"\n    fi", "    local interval1=$1\n    local\
    \ interval2=$2\n    local length1\n    local length2\n    local length\n    local\
    \ prime\n    local result\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n", "    local interval_1 interval_2\n    interval_1=( $1 )\n   \
    \ interval_2=( $2 )\n    local length_intersection\n    length_intersection=(\
    \ $(( ${#interval_1[@]} - ${#interval_2[@]} )) )\n    if [ $length_intersection\
    \ -eq 0 ]\n    then\n        echo \"NO\"\n    else\n        local prime_number\n\
    \        prime_number=$(( ${#interval_1[@]} - ${#interval_2[@]} ))\n        if\
    \ [ $prime_number -eq 0 ]\n        then\n            echo \"NO\"\n        else\n\
    \            local prime_number_check\n            prime_number_check=$(( ${#interval_1[@]}\
    \ - ${#interval_2[@]} ))\n            if [ $prime_number_check -eq 0 ]\n     \
    \       then\n                echo \"NO\"\n            else\n                local\
    \ prime_number_check2\n                prime_number_check2=$(( ${#interval_1[@]}\
    \ - ${#interval_2[@]} ))\n                if [ $prime_number_check2 -eq 0 ]\n\
    \                then\n                    echo \"NO\"\n                else\n\
    \                    local prime_number_check3\n                    prime_number_check3=$((\
    \ ${#interval_1[@]} - ${#interval_2[@]} ))\n                    if [ $prime_number_check3\
    \ -eq 0 ]\n                    then\n                        echo \"NO\"\n   \
    \                 else\n                        local prime_number_check4\n  \
    \                      prime_number_check4=$(( ${#interval_1[@]} - ${#interval_2[@]}\
    \ ))\n                        if [ $prime_number_check4 -eq 0 ]\n            \
    \            then\n                            echo \"NO\"\n                 \
    \       else\n                            local prime_number_check5\n        \
    \                    prime_number_check5=$(( ${#interval_1[@]} - ${#interval_2[@]}\
    \ ))\n                            if [ $prime_number_check5 -eq 0 ]\n        \
    \                    then\n                                echo \"NO\"\n     \
    \                       else\n                                local prime_number_check6\n\
    \                                prime_number_check6=$(( ${#interval_1[@]} - ${#interval_2[@]}\
    \ ))\n                                if [ $prime_number_check6 -eq 0 ]\n    \
    \                            then\n                                    echo \"\
    NO\"\n                                else\n                                 \
    \   local prime_number_check7\n                                    prime_number_check7=$((\
    \ ${#interval_1[@]} - ${#interval_2[@]} ))\n                                 \
    \   if [ $prime_number_check7 -eq ", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local intersect\n    local prime\n\
    \    local prime_flag\n    local prime_flag2\n    local prime_flag3\n    local\
    \ prime_flag4\n    local prime_flag5\n    local prime_flag6\n    local prime_flag7\n\
    \    local prime_flag8\n    local prime_flag9\n    local prime_flag10\n    local\
    \ prime_flag11\n    local prime_flag12\n    local prime_flag13\n    local prime_flag14\n\
    \    local prime_flag15\n    local prime_flag16\n    local prime_flag17\n    local\
    \ prime_flag18\n    local prime_flag19\n    local prime_flag20\n    local prime_flag21\n\
    \    local prime_flag22\n    local prime_flag23\n    local prime_flag24\n    local\
    \ prime_flag25\n    local prime_flag26\n    local prime_flag27\n    local prime_flag28\n\
    \    local prime_flag29\n    local prime_flag30\n    local prime_flag31\n    local\
    \ prime_flag32\n    local prime_flag33\n    local prime_flag34\n    local prime_flag35\n\
    \    local prime_flag36\n    local prime_flag37\n    local prime_flag38\n    local\
    \ prime_flag39\n    local prime_flag40\n    local prime_flag41\n    local prime_flag42\n\
    \    local prime_flag43\n    local prime_flag44\n    local prime_flag45\n    local\
    \ prime_flag46\n    local prime_flag47\n    local prime_flag48\n    local prime_flag49\n\
    \    local prime_flag50\n    local prime_flag51\n    local prime_flag52\n    local\
    \ prime_flag53\n    local prime_flag54\n    local prime_flag55\n    local prime_flag56\n\
    \    local prime_flag57\n    local prime_flag58\n    local prime_flag59\n    local\
    \ prime_flag60\n    local prime_flag61\n    local prime_flag62\n    local prime_flag63\n\
    \    local prime_flag64\n    local prime_flag65\n    local prime_flag66\n    local\
    \ prime_flag67\n    local prime_flag68\n    local prime_flag", "    local interval_1\
    \ interval_2\n    interval_1=$1\n    interval_2=$2\n    local length_intersection\n\
    \    length_intersection=$(intersect \"$interval_1\" \"${interval_2}\")\n    if\
    \ [ \"$length_intersection\" == \"\" ]; then\n        echo \"NO\"\n    else\n\
    \        echo \"YES\"\n    fi", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection_1 length_intersection_2\n  \
    \  length_intersection_1=$(echo \"$interval_1\" | wc -w)\n    length_intersection_2=$(echo\
    \ \"$interval_2\" | wc -w)\n    local length_1 length_2 length_of_intersection\n\
    \    length_1=$(echo \"$interval_1\" | wc -w)\n    length_2=$(echo \"$interval_2\"\
    \ | wc -w)\n    length_of_intersection=$((length_intersection_1 + length_intersection_2))\n\
    \    if [ $length_of_intersection -eq $length_1 ]; then\n        echo \"YES\"\n\
    \    else\n        echo \"NO\"\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1=$((${interval1[1]} - ${interval1[0]}))\n    local length2=$((${interval2[1]}\
    \ - ${interval2[0]}))\n    local length=$((length1 + length2))\n    local prime=1\n\
    \    local prime_flag=0\n    local prime_flag2=0\n    local prime_flag3=0\n  \
    \  local prime_flag4=0\n    local prime_flag5=0\n    local prime_flag6=0\n   \
    \ local prime_flag7=0\n    local prime_flag8=0\n    local prime_flag9=0\n    local\
    \ prime_flag10=0\n    local prime_flag11=0\n    local prime_flag12=0\n    local\
    \ prime_flag13=0\n    local prime_flag14=0\n    local prime_flag15=0\n    local\
    \ prime_flag16=0\n    local prime_flag17=0\n    local prime_flag18=0\n    local\
    \ prime_flag19=0\n    local prime_flag20=0\n    local prime_flag21=0\n    local\
    \ prime_flag22=0\n    local prime_flag23=0\n    local prime_flag24=0\n    local\
    \ prime_flag25=0\n    local prime_flag26=0\n    local prime_flag27=0\n    local\
    \ prime_flag28=0\n    local prime_flag29=0\n    local prime_flag30=0\n    local\
    \ prime_flag31=0\n    local prime_flag32=0\n    local prime_flag33=0\n    local\
    \ prime_flag34=0\n    local prime_flag35=0\n    local prime_flag36=0\n    local\
    \ prime_flag37=0\n    local prime_flag38=0\n    local prime_flag39=0\n    local\
    \ prime_flag40=0\n    local prime_flag41=0\n    local prime_flag42=0\n    local\
    \ prime_flag43=0\n    local prime_flag44=0\n    local prime_flag45=0\n    local\
    \ prime_flag46=0\n    local prime_flag47=0\n    local prime_flag48=0\n    local\
    \ prime_flag49=0\n    local prime_flag50=0\n    local prime_flag51=0\n    local\
    \ prime_flag52=0\n    local prime_flag53=0\n    local prime_flag54=0\n    local\
    \ prime_flag55=0\n    local prime_flag56=0\n    local ", "    local a b c d e\
    \ f g h i j k l m n o p q r s t u v w x y z\n    a=$1\n    b=$2\n    \n    [[\
    \ \"$a\" =~ ^[0-9]+$ ]] || { echo \"$a is not a number\"; return 1; }\n    [[\
    \ \"$b\" =~ ^[0-9]+$ ]] || { echo \"$b is not a number\"; return 1; }\n    \n\
    \    [[ \"$a\" -gt \"$b\" ]] || { echo \"$a is greater than $b\"; return 1; }\n\
    \    [[ \"$a\" -lt \"$b\" ]] || { echo \"$a is less than $b\"; return 1; }\n \
    \   \n    [[ \"$a\" -gt \"$b\" ]] || { echo \"$a is greater than $b\"; return\
    \ 1; }\n    [[ \"$a\" -lt \"$b\" ]] || { echo \"$a is less than $b\"; return 1;\
    \ }\n    \n    [[ \"$a\" -gt \"$b\" ]] || { echo \"$a is greater than $b\"; return\
    \ 1; }\n    [[ \"$a\" -lt \"$b\" ]] || { echo \"$a is less than $b\"; return 1;\
    \ }\n    \n    [[ \"$a\" -gt \"$b\" ]] || { echo \"$a is greater than $b\"; return\
    \ 1; }\n    [[ \"$a\" -lt \"$b\" ]] || { echo \"$a is less than $b\"; return 1;\
    \ }\n    \n    [[ \"$a\" -gt \"$b\" ]] || { echo \"$a is greater than $b\"; return\
    \ 1; }\n    [[ \"$a\" -lt \"$b\" ]] || { echo \"$a is less than $b\"; return 1;\
    \ }\n    \n    [[ \"$a\" -gt \"$b\" ]] || { echo \"$a is greater than $b\"; return\
    \ 1; }\n    [[ \"$a\" -lt \"$b\" ]] || { echo \"$a is less than $b\"; return 1;\
    \ }\n    \n    [[ \"$a\" -gt \"$b\" ]] || { echo \"$a is greater than $b\"; return\
    \ 1; }\n    [[ \"$a\" -lt \"$b\" ]] || { echo \"$a is less than $b\"; return 1;\
    \ }\n    \n    [[ \"$a\" -gt \"$b\" ]] || { echo \"$a is greater than $b\"; return\
    \ 1; }\n    [[ \"$a\" -lt \"$b\" ]] || { echo \"$a is less than $b\"; return 1;\
    \ }\n    \n    [[ \"$a\" -gt \"$b\" ]] || { echo \"$a is greater than $b\"; return\
    \ 1; }\n    [[ \"$a\" -lt \"$b\" ]] || { echo \"$a is less than $b", "    local\
    \ interval1=$1\n    local interval2=$2\n    local length1\n    local length2\n\
    \    local prime\n    local prime_flag\n    local prime_flag2\n    local prime_flag3\n\
    \    local prime_flag4\n    local prime_flag5\n    local prime_flag6\n    local\
    \ prime_flag7\n    local prime_flag8\n    local prime_flag9\n    local prime_flag10\n\
    \    local prime_flag11\n    local prime_flag12\n    local prime_flag13\n    local\
    \ prime_flag14\n    local prime_flag15\n    local prime_flag16\n    local prime_flag17\n\
    \    local prime_flag18\n    local prime_flag19\n    local prime_flag20\n    local\
    \ prime_flag21\n    local prime_flag22\n    local prime_flag23\n    local prime_flag24\n\
    \    local prime_flag25\n    local prime_flag26\n    local prime_flag27\n    local\
    \ prime_flag28\n    local prime_flag29\n    local prime_flag30\n    local prime_flag31\n\
    \    local prime_flag32\n    local prime_flag33\n    local prime_flag34\n    local\
    \ prime_flag35\n    local prime_flag36\n    local prime_flag37\n    local prime_flag38\n\
    \    local prime_flag39\n    local prime_flag40\n    local prime_flag41\n    local\
    \ prime_flag42\n    local prime_flag43\n    local prime_flag44\n    local prime_flag45\n\
    \    local prime_flag46\n    local prime_flag47\n    local prime_flag48\n    local\
    \ prime_flag49\n    local prime_flag50\n    local prime_flag51\n    local prime_flag52\n\
    \    local prime_flag53\n    local prime_flag54\n    local prime_flag55\n    local\
    \ prime_flag56\n    local prime_flag57\n    local prime_flag58\n    local prime_flag59\n\
    \    local prime_flag60\n    local prime_flag61\n    local prime_flag62\n    local\
    \ prime_flag63\n    local prime_flag64\n    local prime_flag65\n    local prime_flag66\n\
    \    local prime_flag67\n    local prime_flag68\n    local prime_flag69\n    local ",
  "    local interval1=$1\n    local interval2=$2\n    local length1=$((${#interval1}\
    \ - 1))\n    local length2=$((${#interval2} - 1))\n    local start1=$((${interval1[0]}))\n\
    \    local end1=$((${interval1[1]}))\n    local start2=$((${interval2[0]}))\n\
    \    local end2=$((${interval2[1]}))\n    local length_intersection=$((${end1}\
    \ - ${start1} + ${end2} - ${start2}))\n    local prime_number=$((${length_intersection}\
    \ % ${length1} + ${length2} - ${length_intersection} % ${length2}))\n    if [[\
    \ ${prime_number} -eq 0 ]]; then\n        echo \"NO\"\n    else\n        echo\
    \ \"YES\"\n    fi", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection\n    length_intersection=$(intersect \"$interval_1\"\
    \ \"${interval_2}\")\n    if [[ \"$length_intersection\" == \"\" ]]; then\n  \
    \      echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${#interval1} - 1))\n    local length2=$((${#interval2}\
    \ - 1))\n    local length_intersection=$((length1 + length2))\n    local prime_number=\"\
    YES\"\n    local prime_number_flag=\"NO\"\n    local prime_number_flag2=\"NO\"\
    \n    local prime_number_flag3=\"NO\"\n    local prime_number_flag4=\"NO\"\n \
    \   local prime_number_flag5=\"NO\"\n    local prime_number_flag6=\"NO\"\n   \
    \ local prime_number_flag7=\"NO\"\n    local prime_number_flag8=\"NO\"\n    local\
    \ prime_number_flag9=\"NO\"\n    local prime_number_flag10=\"NO\"\n    local prime_number_flag11=\"\
    NO\"\n    local prime_number_flag12=\"NO\"\n    local prime_number_flag13=\"NO\"\
    \n    local prime_number_flag14=\"NO\"\n    local prime_number_flag15=\"NO\"\n\
    \    local prime_number_flag16=\"NO\"\n    local prime_number_flag17=\"NO\"\n\
    \    local prime_number_flag18=\"NO\"\n    local prime_number_flag19=\"NO\"\n\
    \    local prime_number_flag20=\"NO\"\n    local prime_number_flag21=\"NO\"\n\
    \    local prime_number_flag22=\"NO\"\n    local prime_number_flag23=\"NO\"\n\
    \    local prime_number_flag24=\"NO\"\n    local prime_number_flag25=\"NO\"\n\
    \    local prime_number_flag26=\"NO\"\n    local prime_number_flag27=\"NO\"\n\
    \    local prime_number_flag28=\"NO\"\n    local prime_number_flag29=\"NO\"\n\
    \    local prime_number_flag30=\"NO\"\n    local prime_number_flag31=\"NO\"\n\
    \    local prime_number_flag32=\"NO\"\n    local prime_number_flag33=\"NO\"\n\
    \    local prime_number_flag34=\"NO\"\n    local prime_number_flag35=\"NO\"\n\
    \    local prime_number_flag36=\"NO\"\n    local prime_number_flag37=\"NO\"\n\
    \    local prime_number_flag38=\"NO\"\n    local prime_number_flag39=\"NO\"\n\
    \    local prime_number_flag40=\"NO\"\n    local prime_number_flag41=\"NO\"\n\
    \    ", "    local interval1=$1\n    local interval2=$2\n    local length1\n \
    \   local length2\n    local length\n    local prime\n    local result\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i1\n    local i2\n    local j1\n    local j2\n   \
    \ local k1\n    local k2\n    local l1\n    local l2\n    local m1\n    local\
    \ m2\n    local n1\n    local n2\n    local o1\n    local o2\n    local p1\n \
    \   local p2\n    local q1\n    local q2\n    local r1\n    local r2\n    local\
    \ s1\n    local s2\n    local t1\n    local t2\n    local u1\n    local u2\n \
    \   local v1\n    local v2\n    local w1\n    local w2\n    local x1\n    local\
    \ x2\n    local y1\n    local y2\n    local z1\n    local z2\n    local a1\n \
    \   local b1\n    local c1\n    local d1\n    local e1\n    local f1\n    local\
    \ g1\n    local h1\n    local i11\n    local i12\n    local j11\n    local j12\n\
    \    local k11\n    local k12\n    local l11\n    local l12\n    local m11\n \
    \   local m12\n    local n11\n    local n12\n    local o11\n    local o12\n  \
    \  local p11\n    local p12\n    local q11\n    local q12\n    local r11\n   \
    \ local r12\n    local s11\n    local s12\n    local t11\n    local t12\n    local\
    \ u11\n    local u12\n    local v11\n    local v12\n    local w11\n    local w12\n\
    \    local x11\n    local x12\n    local y11\n    local y12\n    local z11\n \
    \   local z12\n    local a11", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection\n    length_intersection=$(intersect\
    \ \"$interval_1\" \"${interval_2}\")\n    if [ \"$length_intersection\" == \"\"\
    \ ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "   \
    \ local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection_1 length_intersection_2\n    length_intersection_1=$(echo\
    \ \"$interval_1\" | awk '{print length($1)}')\n    length_intersection_2=$(echo\
    \ \"$interval_2\" | awk '{print length($2)}')\n    if [ $length_intersection_1\
    \ -eq $length_intersection_2 ]; then\n        if [ $length_intersection_1 -eq\
    \ 1 ]; then\n            if [ $length_intersection_2 -eq 1 ]; then\n         \
    \       if [ $interval_1 -le $interval_2 ]; then\n                    echo \"\
    YES\"\n                else\n                    echo \"NO\"\n               \
    \ fi\n            else\n                if [ $interval_1 -le $interval_2 ]; then\n\
    \                    echo \"YES\"\n                else\n                    echo\
    \ \"NO\"\n                fi\n            fi\n        else\n            if [ $interval_1\
    \ -le $interval_2 ]; then\n                echo \"YES\"\n            else\n  \
    \              echo \"NO\"\n            fi\n        fi\n    else\n        if [\
    \ $length_intersection_1 -eq 1 ]; then\n            if [ $length_intersection_2\
    \ -eq 1 ]; then\n                if [ $interval_1 -le $interval_2 ]; then\n  \
    \                  echo \"YES\"\n                else\n                    echo\
    \ \"NO\"\n                fi\n            else\n                if [ $interval_1\
    \ -le $interval_2 ]; then\n                    echo \"YES\"\n                else\n\
    \                    echo \"NO\"\n                fi\n            fi\n       \
    \ else\n            if [ $interval_1 -le $interval_2 ]; then\n               \
    \ echo \"YES\"\n            else\n                echo \"NO\"\n            fi\n\
    \        fi\n    fi", "    local a b i j k l m n o p q r s t u v w x y z\n   \
    \ local -a intervals\n    intervals=($1)\n    intervals=(\"${intervals[@]}\" \"\
    $2\")\n    for (( i=0; i<${#intervals[@]}; i++ )); do\n        a=${intervals[$i]}\n\
    \        b=${intervals[$(($i+1))]}\n        (( i>0 && i<${#intervals[@]} - 1 ))\
    \ && echo \"NO\"\n        (( i>0 && i<${#intervals[@]} - 1 )) && echo \"NO\"\n\
    \        (( i>0 && i<${#intervals[@]} - 1 )) && echo \"NO\"\n        (( i>0 &&\
    \ i<${#intervals[@]} - 1 )) && echo \"NO\"\n        (( i>0 && i<${#intervals[@]}\
    \ - 1 )) && echo \"NO\"\n        (( i>0 && i<${#intervals[@]} - 1 )) && echo \"\
    NO\"\n        (( i>0 && i<${#intervals[@]} - 1 )) && echo \"NO\"\n        (( i>0\
    \ && i<${#intervals[@]} - 1 )) && echo \"NO\"\n        (( i>0 && i<${#intervals[@]}\
    \ - 1 )) && echo \"NO\"\n        (( i>0 && i<${#intervals[@]} - 1 )) && echo \"\
    NO\"\n        (( i>0 && i<${#intervals[@]} - 1 )) && echo \"NO\"\n        (( i>0\
    \ && i<${#intervals[@]} - 1 )) && echo \"NO\"\n        (( i>0 && i<${#intervals[@]}\
    \ - 1 )) && echo \"NO\"\n        (( i>0 && i<${#intervals[@]} - 1 )) && echo \"\
    NO\"\n        (( i>0 && i<${#intervals[@]} - 1 )) && echo \"NO\"\n        (( i>0\
    \ && i<${#intervals[@]} - 1 )) && echo \"NO\"\n        (( i>0 && i<${#intervals[@]}\
    \ - 1 )) && echo \"NO\"\n        (( i>0 && i<${#intervals[@]} - 1 )) && echo \"\
    NO\"\n        (( i>0 && i<${#intervals[@]} - 1 )) && echo \"NO\"\n        (( i>0\
    \ && i<${#intervals[@]} - 1 )) && echo \"NO\"\n        (( i>0 && i<${#intervals[@]}\
    \ - 1 )) && echo \"NO\"\n        (( i>0 && i<${#interval", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1\n    local length2\n    local i\n \
    \   local j\n    local prime\n    local prime_flag\n\n    length1=$(expr ${interval1[1]}\
    \ - ${interval1[0]})\n    length2=$(expr ${interval2[1]} - ${interval2[0]})\n\
    \    prime_flag=0\n\n    for (( i=1; i<${length1}; i++ )); do\n        for ((\
    \ j=1; j<${length2}; j++ )); do\n            if [[ ${interval1[0]} -eq ${interval2[0]}\
    \ ]]; then\n                if [[ ${interval1[1]} -le ${interval2[1]} ]]; then\n\
    \                    if [[ ${interval1[0]} -le ${interval2[1]} ]]; then\n    \
    \                    if [[ ${interval1[1]} -le ${interval2[1]} ]]; then\n    \
    \                        if [[ ${interval1[0]} -eq ${interval2[1]} ]]; then\n\
    \                                prime_flag=1\n                            fi\n\
    \                        fi\n                    fi\n                fi\n    \
    \        fi\n        done\n    done\n\n    if [[ ${prime_flag} -eq 1 ]]; then\n\
    \        prime=\"YES\"\n    else\n        prime=\"NO\"\n    fi\n\n    echo ${prime}",
  "    local interval1=$1\n    local interval2=$2\n    local length1\n    local length2\n\
    \    local length\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local prime", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection_1 length_intersection_2 length_1 length_2\n   \
    \ length_intersection_1=$(echo $interval_1 | wc -w)\n    length_intersection_2=$(echo\
    \ $interval_2 | wc -w)\n    length_1=$(echo $interval_1 | wc -w)\n    length_2=$(echo\
    \ $interval_2 | wc -w)\n    if [ $length_intersection_1 -eq $length_intersection_2\
    \ ]; then\n        if [ $length_1 -eq $length_2 ]; then\n            local prime_number\n\
    \            prime_number=$(echo $length_intersection_1 | bc)\n            if\
    \ [ $prime_number -eq 1 ]; then\n                echo \"NO\"\n            else\n\
    \                echo \"YES\"\n            fi\n        else\n            echo\
    \ \"NO\"\n        fi\n    else\n        echo \"NO\"\n    fi", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n\
    \    local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((length1\
    \ + length2))\n    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n\
    \    local prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n \
    \   local prime_flag6=0\n    local prime_flag7=0\n    local prime_flag8=0\n  \
    \  local prime_flag9=0\n    local prime_flag10=0\n    local prime_flag11=0\n \
    \   local prime_flag12=0\n    local prime_flag13=0\n    local prime_flag14=0\n\
    \    local prime_flag15=0\n    local prime_flag16=0\n    local prime_flag17=0\n\
    \    local prime_flag18=0\n    local prime_flag19=0\n    local prime_flag20=0\n\
    \    local prime_flag21=0\n    local prime_flag22=0\n    local prime_flag23=0\n\
    \    local prime_flag24=0\n    local prime_flag25=0\n    local prime_flag26=0\n\
    \    local prime_flag27=0\n    local prime_flag28=0\n    local prime_flag29=0\n\
    \    local prime_flag30=0\n    local prime_flag31=0\n    local prime_flag32=0\n\
    \    local prime_flag33=0\n    local prime_flag34=0\n    local prime_flag35=0\n\
    \    local prime_flag36=0\n    local prime_flag37=0\n    local prime_flag38=0\n\
    \    local prime_flag39=0\n    local prime_flag40=0\n    local prime_flag41=0\n\
    \    local prime_flag42=0\n    local prime_flag43=0\n    local prime_flag44=0\n\
    \    local prime_flag45=0\n    local prime_flag46=0\n    local prime_flag47=0\n\
    \    local prime_flag48=0\n    local prime_flag49=0\n    local prime_flag50=0\n\
    \    local prime_flag51=0\n    local prime_flag52=0\n    local prime_flag53=0\n\
    \    local prime_flag54=0\n    local prime_flag55=0\n    local prime_flag56=0\n\
    \    local ", "    local interval1=$1\n    local interval2=$2\n    local length1\n\
    \    local length2\n    local length\n    local prime\n    local result\n    local\
    \ interval1Array\n    local interval2Array\n    local interval1Start\n    local\
    \ interval1End\n    local interval2Start\n    local interval2End\n    local interval1ArrayLength\n\
    \    local interval2ArrayLength\n    local interval1ArrayLength2\n    local interval2ArrayLength2\n\
    \    local interval1ArrayLength3\n    local interval2ArrayLength3\n    local interval1ArrayLength4\n\
    \    local interval2ArrayLength4\n    local interval1ArrayLength5\n    local interval2ArrayLength5\n\
    \    local interval1ArrayLength6\n    local interval2ArrayLength6\n    local interval1ArrayLength7\n\
    \    local interval2ArrayLength7\n    local interval1ArrayLength8\n    local interval2ArrayLength8\n\
    \    local interval1ArrayLength9\n    local interval2ArrayLength9\n    local interval1ArrayLength10\n\
    \    local interval2ArrayLength10\n    local interval1ArrayLength11\n    local\
    \ interval2ArrayLength11\n    local interval1ArrayLength12\n    local interval2ArrayLength12\n\
    \    local interval1ArrayLength13\n    local interval2ArrayLength13\n    local\
    \ interval1ArrayLength14\n    local interval2ArrayLength14\n    local interval1ArrayLength15\n\
    \    local interval2ArrayLength15\n    local interval1ArrayLength16\n    local\
    \ interval2ArrayLength16\n    local interval1ArrayLength17\n    local interval2ArrayLength17\n\
    \    local interval1ArrayLength18\n    local interval2ArrayLength18\n    local\
    \ interval1ArrayLength19\n    local interval2ArrayLength19\n    local interval1ArrayLength20\n\
    \    local interval2ArrayLength20\n    local interval1ArrayLength21\n    local\
    \ interval2ArrayLength21\n    local interval1ArrayLength22\n    local interval2ArrayLength22\n\
    \    local interval1ArrayLength23\n    local interval2ArrayLength23\n    local\
    \ interval1ArrayLength24\n    local interval2ArrayLength24\n    local interval1ArrayLength25\n\
    \    local interval2ArrayLength25\n    local interval1ArrayLength26\n    local\
    \ interval2ArrayLength26\n    local interval1ArrayLength27\n    local interval2ArrayLength27\n\
    \    local interval1ArrayLength28\n    local ", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection prime_number\n\
    \    length_interval=$(echo \"$interval_1 $interval_2\" | awk '{print length($0)}')\n\
    \    prime_number=$((length_interval % 2))\n    if [ \"$prime_number\" -eq 0 ];\
    \ then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local\
    \ interval1=$1\n    local interval2=$2\n    local length1\n    local length2\n\
    \    local result\n    local i\n    local j\n    local prime\n    local prime_flag\n\
    \n    length1=${#interval1[@]}\n    length2=${#interval2[@]}\n\n    if [ $length1\
    \ -eq $length2 ]\n    then\n        result=\"NO\"\n    else\n        result=\"\
    YES\"\n    fi\n\n    for (( i=0; i<$length1; i++ ))\n    do\n        prime_flag=false\n\
    \        for (( j=0; j<$length2; j++ ))\n        do\n            if [ $i -eq $j\
    \ ]\n            then\n                continue\n            fi\n\n          \
    \  if [ $interval1[i] -gt $interval2[j] ]\n            then\n                prime_flag=true\n\
    \                break\n            fi\n        done\n\n        if [ $prime_flag\
    \ = true ]\n        then\n            result=\"NO\"\n            break\n     \
    \   fi\n    done\n\n    echo \"$result\"", "    local interval1=$1\n    local\
    \ interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n   \
    \ local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((length1\
    \ + length2))\n    local prime=1\n    local prime_flag=0\n    local prime_flag2=0\n\
    \    local prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n \
    \   local prime_flag6=0\n    local prime_flag7=0\n    local prime_flag8=0\n  \
    \  local prime_flag9=0\n    local prime_flag10=0\n    local prime_flag11=0\n \
    \   local prime_flag12=0\n    local prime_flag13=0\n    local prime_flag14=0\n\
    \    local prime_flag15=0\n    local prime_flag16=0\n    local prime_flag17=0\n\
    \    local prime_flag18=0\n    local prime_flag19=0\n    local prime_flag20=0\n\
    \    local prime_flag21=0\n    local prime_flag22=0\n    local prime_flag23=0\n\
    \    local prime_flag24=0\n    local prime_flag25=0\n    local prime_flag26=0\n\
    \    local prime_flag27=0\n    local prime_flag28=0\n    local prime_flag29=0\n\
    \    local prime_flag30=0\n    local prime_flag31=0\n    local prime_flag32=0\n\
    \    local prime_flag33=0\n    local prime_flag34=0\n    local prime_flag35=0\n\
    \    local prime_flag36=0\n    local prime_flag37=0\n    local prime_flag38=0\n\
    \    local prime_flag39=0\n    local prime_flag40=0\n    local prime_flag41=0\n\
    \    local prime_flag42=0\n    local prime_flag43=0\n    local prime_flag44=0\n\
    \    local prime_flag45=0\n    local prime_flag46=0\n    local prime_flag47=0\n\
    \    local prime_flag48=0\n    local prime_flag49=0\n    local prime_flag50=0\n\
    \    local prime_flag51=0\n    local prime_flag52=0\n    local prime_flag53=0\n\
    \    local prime_flag54=0\n    local prime_flag55=0\n    local prime_flag56=0\n\
    \    local ", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection_1 length_intersection_2 length_1 length_2\n   \
    \ length_intersection_1=$(echo $interval_1 | wc -w)\n    length_intersection_2=$(echo\
    \ $interval_2 | wc -w)\n    length_1=$(echo $interval_1 | wc -w)\n    length_2=$(echo\
    \ $interval_2 | wc -w)\n    if [ $length_1 -eq $length_intersection_1 ] && [ $length_2\
    \ -eq $length_intersection_2 ]; then\n        local start1 end1 start2 end2\n\
    \        start1=$(echo $interval_1 | cut -d \" \" -f1)\n        end1=$(echo $interval_1\
    \ | cut -d \" \" -f2)\n        start2=$(echo $interval_2 | cut -d \" \" -f1)\n\
    \        end2=$(echo $interval_2 | cut -d \" \" -f2)\n        if [ $start1 -le\
    \ $end2 ] && [ $start2 -le $end1 ]; then\n            local length_intersection_prime\n\
    \            length_intersection_prime=$(echo $length_intersection_1 | $(($length_1\
    \ - $length_2)) | $(($length_intersection_2 - $length_intersection_1)) | $(($length_2\
    \ - $length_1)) | $(($length_intersection_1 - $length_intersection_2)) | $(($length_1\
    \ - $length_2)) | $(($length_intersection_2 - $length_intersection_1)) | $(($length_2\
    \ - $length_1)) | $(($length_intersection_1 - $length_intersection_2)) | $(($length_1\
    \ - $length_2)) | $(($length_intersection_2 - $length_intersection_1)) | $(($length_2\
    \ - $length_1)) | $(($length_intersection_1 - $length_intersection_2)) | $(($length_1\
    \ - $length_2)) | $(($length_intersection_2 - $length_intersection_1)) | $(($length_2\
    \ - $length_1)))\n            if [ $length_intersection_prime -eq 1 ]; then\n\
    \                echo \"YES\"\n            else\n                echo \"NO\"\n\
    \            fi\n        else\n            echo \"NO\"\n        fi\n    else\n\
    \        echo \"NO\"\n    fi", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection\n    length_intersection=$(intersect\
    \ \"$interval_1\" \"${interval_2[@]}\")\n    if [[ $length_intersection -eq 0\
    \ ]]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "  \
    \  local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection_1 length_intersection_2\n    length_intersection_1=$(echo\
    \ \"${interval_1}\" | wc -w)\n    length_intersection_2=$(echo \"${interval_2}\"\
    \ | wc -w)\n    if [ \"${length_intersection_1}\" == \"${length_intersection_2}\"\
    \ ]; then\n        local length_intersection_1_prime length_intersection_2_prime\n\
    \        length_intersection_1_prime=$(echo \"${length_intersection_1}\" | awk\
    \ '{print $1}')\n        length_intersection_2_prime=$(echo \"${length_intersection_2}\"\
    \ | awk '{print $1}')\n        if [ \"${length_intersection_1_prime}\" -eq \"\
    ${length_intersection_2_prime}\" ]; then\n            if [ \"${length_intersection_1_prime}\"\
    \ -eq 2 ]; then\n                if [ \"${interval_1}\" == \"${interval_2}\" ];\
    \ then\n                    echo \"YES\"\n                else\n             \
    \       echo \"NO\"\n                fi\n            else\n                if\
    \ [ \"${interval_1}\" == \"${interval_2}\" ]; then\n                    echo \"\
    YES\"\n                else\n                    echo \"NO\"\n               \
    \ fi\n            fi\n        else\n            if [ \"${length_intersection_1_prime}\"\
    \ -eq 1 ]; then\n                if [ \"${interval_1}\" == \"${interval_2}\" ];\
    \ then\n                    echo \"YES\"\n                else\n             \
    \       echo \"NO\"\n                fi\n            else\n                if\
    \ [ \"${interval_1}\" == \"${interval_2}\" ]; then\n                    echo \"\
    YES\"\n                else\n                    echo \"NO\"\n               \
    \ fi\n            fi\n        fi\n    else\n        echo \"NO\"\n    fi", "  \
    \  local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection\n    length_intersection=$(intersect \"$interval_1\" \"\
    ${interval_2}\")\n    if [[ \"$length_intersection\" == \"\" ]]; then\n      \
    \  echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval_1\
    \ interval_2\n    interval_1=( $1 )\n    interval_2=( $2 )\n    local length_intersection\n\
    \    length_intersection=( $(( ${#interval_1[@]} + ${#interval_2[@]} - 1 )) )\n\
    \    local prime_number\n    prime_number=0\n    local prime_number_flag\n   \
    \ prime_number_flag=0\n    local prime_number_flag2\n    prime_number_flag2=0\n\
    \    local prime_number_flag3\n    prime_number_flag3=0\n    local prime_number_flag4\n\
    \    prime_number_flag4=0\n    local prime_number_flag5\n    prime_number_flag5=0\n\
    \    local prime_number_flag6\n    prime_number_flag6=0\n    local prime_number_flag7\n\
    \    prime_number_flag7=0\n    local prime_number_flag8\n    prime_number_flag8=0\n\
    \    local prime_number_flag9\n    prime_number_flag9=0\n    local prime_number_flag10\n\
    \    prime_number_flag10=0\n    local prime_number_flag11\n    prime_number_flag11=0\n\
    \    local prime_number_flag12\n    prime_number_flag12=0\n    local prime_number_flag13\n\
    \    prime_number_flag13=0\n    local prime_number_flag14\n    prime_number_flag14=0\n\
    \    local prime_number_flag15\n    prime_number_flag15=0\n    local prime_number_flag16\n\
    \    prime_number_flag16=0\n    local prime_number_flag17\n    prime_number_flag17=0\n\
    \    local prime_number_flag18\n    prime_number_flag18=0\n    local prime_number_flag19\n\
    \    prime_number_flag19=0\n    local prime_number_flag20\n    prime_number_flag20=0\n\
    \    local prime_number_flag21\n    prime_number_flag21=0\n    local prime_number_flag22\n\
    \    prime_number_flag22=0\n    local prime_number_flag23\n    prime_number_flag23=0\n\
    \    local prime_number_flag24\n    prime_number_flag24=0\n    local prime_number_flag25\n\
    \    prime_number_flag25=0\n    local prime_number_flag26\n    prime_number_flag26=0\n\
    \    local prime_number_flag27\n    prime_number_flag27=0\n    local prime_number_flag28\n\
    \    ", "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n\
    \    local length_intersection prime_number\n    length_interval=$(echo \"${interval_1}${interval_2}\"\
    \ | wc -w)\n    if [ $length_interval -eq 0 ]\n    then\n        echo \"NO\"\n\
    \    else\n        prime_number=$((length_interval / 2))\n        if [ $prime_number\
    \ -eq 0 ]\n        then\n            echo \"NO\"\n        else\n            echo\
    \ \"YES\"\n        fi\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1=$((${interval1[1]} - ${interval1[0]}))\n    local length2=$((${interval2[1]}\
    \ - ${interval2[0]}))\n    local length=$((length1 + length2))\n    if [ $length\
    \ -eq 0 ]; then\n        echo \"NO\"\n    else\n        local prime=1\n      \
    \  local prime_flag=0\n        local prime_flag2=0\n        local prime_flag3=0\n\
    \        local prime_flag4=0\n        local prime_flag5=0\n        local prime_flag6=0\n\
    \        local prime_flag7=0\n        local prime_flag8=0\n        local prime_flag9=0\n\
    \        local prime_flag10=0\n        local prime_flag11=0\n        local prime_flag12=0\n\
    \        local prime_flag13=0\n        local prime_flag14=0\n        local prime_flag15=0\n\
    \        local prime_flag16=0\n        local prime_flag17=0\n        local prime_flag18=0\n\
    \        local prime_flag19=0\n        local prime_flag20=0\n        local prime_flag21=0\n\
    \        local prime_flag22=0\n        local prime_flag23=0\n        local prime_flag24=0\n\
    \        local prime_flag25=0\n        local prime_flag26=0\n        local prime_flag27=0\n\
    \        local prime_flag28=0\n        local prime_flag29=0\n        local prime_flag30=0\n\
    \        local prime_flag31=0\n        local prime_flag32=0\n        local prime_flag33=0\n\
    \        local prime_flag34=0\n        local prime_flag35=0\n        local prime_flag36=0\n\
    \        local prime_flag37=0\n        local prime_flag38=0\n        local prime_flag39=0\n\
    \        local prime_flag40=0\n        local prime_flag41=0\n        local prime_flag42=0\n\
    \        local prime_flag43=0\n        local prime_flag44=0\n        local prime_flag45=0\n\
    \        local prime_flag46=0\n        local prime_flag47=0\n        local prime_flag48=0\n\
    \        local prime_flag49=0\n        local prime_flag50=0\n        local prime_flag51=0\n\
    \        local prime_flag52=0\n        local prime_flag53=0\n        local prime_flag54=0\n\
    \        local ", "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length_intersection=$((length1 + length2))\n    if [ $length_intersection\
    \ -eq 0 ]; then\n        echo \"NO\"\n    else\n        local prime_number=$((length_intersection\
    \ % length1))\n        if [ $prime_number -eq 0 ]; then\n            echo \"YES\"\
    \n        else\n            echo \"NO\"\n        fi\n    fi", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]}+1))\n    local length2=$((${interval2[1]}+1))\n\
    \    local length_intersection=$((length1<length2?length1:length2))\n    local\
    \ length_prime=1\n    local prime_flag=false\n    local prime_flag2=false\n  \
    \  local prime_flag3=false\n    local prime_flag4=false\n    local prime_flag5=false\n\
    \    local prime_flag6=false\n    local prime_flag7=false\n    local prime_flag8=false\n\
    \    local prime_flag9=false\n    local prime_flag10=false\n    local prime_flag11=false\n\
    \    local prime_flag12=false\n    local prime_flag13=false\n    local prime_flag14=false\n\
    \    local prime_flag15=false\n    local prime_flag16=false\n    local prime_flag17=false\n\
    \    local prime_flag18=false\n    local prime_flag19=false\n    local prime_flag20=false\n\
    \    local prime_flag21=false\n    local prime_flag22=false\n    local prime_flag23=false\n\
    \    local prime_flag24=false\n    local prime_flag25=false\n    local prime_flag26=false\n\
    \    local prime_flag27=false\n    local prime_flag28=false\n    local prime_flag29=false\n\
    \    local prime_flag30=false\n    local prime_flag31=false\n    local prime_flag32=false\n\
    \    local prime_flag33=false\n    local prime_flag34=false\n    local prime_flag35=false\n\
    \    local prime_flag36=false\n    local prime_flag37=false\n    local prime_flag38=false\n\
    \    local prime_flag39=false\n    local prime_flag40=false\n    local prime_flag41=false\n\
    \    local prime_flag42=false\n    local prime_flag43=false\n    local prime_flag44=false\n\
    \    local prime_flag45=false\n    local prime_flag46=false\n    local prime_flag47=false\n\
    \    local prime_flag48=false\n    local prime_flag49=false\n    local prime_flag50=false",
  "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection_1 length_intersection_2 length_1 length_2 length_of_intersection\n\
    \    length_intersection_1=$(echo \"$interval_1\" | wc -w)\n    length_intersection_2=$(echo\
    \ \"$interval_2\" | wc -w)\n    length_1=$(echo \"$interval_1\" | wc -w)\n   \
    \ length_2=$(echo \"$interval_2\" | wc -w)\n    length_of_intersection=$((length_intersection_1\
    \ + length_intersection_2))\n    if [ \"$length_of_intersection\" -eq \"$length_1\"\
    \ ] || [ \"$length_of_intersection\" -eq \"$length_2\" ]; then\n        echo \"\
    NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n    local\
    \ interval2=$2\n    local length1=$((${interval1[1]}-${interval1[0]}))\n    local\
    \ length2=$((${interval2[1]}-${interval2[0]}))\n    local length=$((length1+length2))\n\
    \    local prime=\n    for (( i=0; i<${length}; i++ )); do\n        if [[ ${interval1[0]}\
    \ -eq ${interval2[0]} ]]; then\n            if [[ ${interval1[1]} -le ${interval2[1]}\
    \ ]]; then\n                prime=\"YES\"\n                break\n           \
    \ else\n                prime=\"NO\"\n                break\n            fi\n\
    \        fi\n    done\n    echo $prime", "    local a b\n    local len\n    local\
    \ i\n    local j\n    local prime\n    local primes\n    local result\n    local\
    \ tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local\
    \ tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local\
    \ tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n\
    \    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local\
    \ tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n\
    \    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local\
    \ tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n\
    \    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local\
    \ tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n\
    \    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local\
    \ tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n\
    \    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local\
    \ tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n\
    \    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local\
    \ tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n\
    \    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local\
    \ tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n\
    \    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local\
    \ tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n\
    \    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local\
    \ tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n\
    \    local tmp", "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((length1 + length2))\n    local isPrime\n    local prime\n\
    \    local primes\n    local primesLength\n    local primesLength2\n    local\
    \ primesLength3\n    local primesLength4\n    local primesLength5\n    local primesLength6\n\
    \    local primesLength7\n    local primesLength8\n    local primesLength9\n \
    \   local primesLength10\n    local primesLength11\n    local primesLength12\n\
    \    local primesLength13\n    local primesLength14\n    local primesLength15\n\
    \    local primesLength16\n    local primesLength17\n    local primesLength18\n\
    \    local primesLength19\n    local primesLength20\n    local primesLength21\n\
    \    local primesLength22\n    local primesLength23\n    local primesLength24\n\
    \    local primesLength25\n    local primesLength26\n    local primesLength27\n\
    \    local primesLength28\n    local primesLength29\n    local primesLength30\n\
    \    local primesLength31\n    local primesLength32\n    local primesLength33\n\
    \    local primesLength34\n    local primesLength35\n    local primesLength36\n\
    \    local primesLength37\n    local primesLength38\n    local primesLength39\n\
    \    local primesLength40\n    local primesLength41\n    local primesLength42\n\
    \    local primesLength43\n    local primesLength44\n    local primesLength45\n\
    \    local primesLength46\n    local primesLength47\n    local primesLength48\n\
    \    local primesLength49\n    local primesLength50\n    local primesLength51\n\
    \    local primesLength52\n    local primesLength53\n    local primesLength54\n\
    \    local primesLength55\n    local primesLength56\n    local primesLength57\n\
    \    local primesLength58\n    local primesLength59\n    local primesLength60\n\
    \    local primesLength61\n    local primesLength62\n    local primesLength63",
  "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    if [[ ${length1} -eq ${length2} ]]; then\n        local intersect=${interval1[0]}\
    \ ${interval2[1]}\n        local length_intersect=$((${intersect[1]} - ${intersect[0]}))\n\
    \        if [[ ${length_intersect} -eq ${length1} ]]; then\n            echo \"\
    YES\"\n        else\n            echo \"NO\"\n        fi\n    else\n        echo\
    \ \"NO\"\n    fi", "    local interval1=$1\n    local interval2=$2\n    local\
    \ length1\n    local length2\n    local result\n    local i\n    local j\n   \
    \ local prime\n    local primes\n    local primesLength\n    local primesLength2\n\
    \    local primesLength3\n    local primesLength4\n    local primesLength5\n \
    \   local primesLength6\n    local primesLength7\n    local primesLength8\n  \
    \  local primesLength9\n    local primesLength10\n    local primesLength11\n \
    \   local primesLength12\n    local primesLength13\n    local primesLength14\n\
    \    local primesLength15\n    local primesLength16\n    local primesLength17\n\
    \    local primesLength18\n    local primesLength19\n    local primesLength20\n\
    \    local primesLength21\n    local primesLength22\n    local primesLength23\n\
    \    local primesLength24\n    local primesLength25\n    local primesLength26\n\
    \    local primesLength27\n    local primesLength28\n    local primesLength29\n\
    \    local primesLength30\n    local primesLength31\n    local primesLength32\n\
    \    local primesLength33\n    local primesLength34\n    local primesLength35\n\
    \    local primesLength36\n    local primesLength37\n    local primesLength38\n\
    \    local primesLength39\n    local primesLength40\n    local primesLength41\n\
    \    local primesLength42\n    local primesLength43\n    local primesLength44\n\
    \    local primesLength45\n    local primesLength46\n    local primesLength47\n\
    \    local primesLength48\n    local primesLength49\n    local primesLength50\n\
    \    local primesLength51\n    local primesLength52\n    local primesLength53\n\
    \    local primesLength54\n    local primesLength55\n    local primesLength56\n\
    \    local primesLength57\n    local primesLength58\n    local primesLength59\n\
    \    local primesLength60\n    local primesLength61\n    local primesLength62\n\
    \    local primesLength63\n    local primesLength64\n    local primesLength65\n\
    \    local primesLength66\n    local primesLength67", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n\
    \    local length2=$((${interval2[1]} - ${interval2[0]}))\n    local length=$((${length1}\
    \ + ${length2}))\n    local prime=true\n    local prime_flag=false\n    local\
    \ prime_flag2=false\n    local prime_flag3=false\n    local prime_flag4=false\n\
    \    local prime_flag5=false\n    local prime_flag6=false\n    local prime_flag7=false\n\
    \    local prime_flag8=false\n    local prime_flag9=false\n    local prime_flag10=false\n\
    \    local prime_flag11=false\n    local prime_flag12=false\n    local prime_flag13=false\n\
    \    local prime_flag14=false\n    local prime_flag15=false\n    local prime_flag16=false\n\
    \    local prime_flag17=false\n    local prime_flag18=false\n    local prime_flag19=false\n\
    \    local prime_flag20=false\n    local prime_flag21=false\n    local prime_flag22=false\n\
    \    local prime_flag23=false\n    local prime_flag24=false\n    local prime_flag25=false\n\
    \    local prime_flag26=false\n    local prime_flag27=false\n    local prime_flag28=false\n\
    \    local prime_flag29=false\n    local prime_flag30=false\n    local prime_flag31=false\n\
    \    local prime_flag32=false\n    local prime_flag33=false\n    local prime_flag34=false\n\
    \    local prime_flag35=false\n    local prime_flag36=false\n    local prime_flag37=false\n\
    \    local prime_flag38=false\n    local prime_flag39=false\n    local prime_flag40=false\n\
    \    local prime_flag41=false\n    local prime_flag42=false\n    local prime_flag43=false\n\
    \    local prime_flag44=false\n    local prime_flag45=false\n    local prime_flag46=false\n\
    \    local prime_flag47=false\n    local prime_flag48=false\n    local prime_flag49=false\n\
    \    local prime_flag50", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection_1 length_intersection_2\n  \
    \  length_intersection_1=$(echo \"$interval_1 | cut -d ' ' -f 1\"| wc -w)\n  \
    \  length_intersection_2=$(echo \"$interval_2 | cut -d ' ' -f 1\"| wc -w)\n  \
    \  if [ \"$length_intersection_1\" -gt \"$length_intersection_2\" ]; then\n  \
    \      echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]}+1))\n    local length2=$((${interval2[1]}+1))\n\
    \    local length=$((length1<length2?length1:length2))\n    local start1=$((${interval1[0]}-1))\n\
    \    local start2=$((${interval2[0]}-1))\n    local end1=$((${interval1[1]}-1))\n\
    \    local end2=$((${interval2[1]}-1))\n    local start=$((start1<start2?start1:start2))\n\
    \    local end=$((end1<end2?end1:end2))\n    local prime=false\n    local prime_flag=false\n\
    \    local prime_flag2=false\n    local prime_flag3=false\n    local prime_flag4=false\n\
    \    local prime_flag5=false\n    local prime_flag6=false\n    local prime_flag7=false\n\
    \    local prime_flag8=false\n    local prime_flag9=false\n    local prime_flag10=false\n\
    \    local prime_flag11=false\n    local prime_flag12=false\n    local prime_flag13=false\n\
    \    local prime_flag14=false\n    local prime_flag15=false\n    local prime_flag16=false\n\
    \    local prime_flag17=false\n    local prime_flag18=false\n    local prime_flag19=false\n\
    \    local prime_flag20=false\n    local prime_flag21=false\n    local prime_flag22=false\n\
    \    local prime_flag23=false\n    local prime_flag24=false\n    local prime_flag25=false\n\
    \    local prime_flag26=false\n    local prime_flag27=false\n    local prime_flag28=false\n\
    \    local prime_flag29=false\n    local prime_flag30=false\n    local prime_flag31=false\n\
    \    local prime_flag32=false\n    local prime_flag33=false\n    local prime_flag34=false\n\
    \    local prime_flag35=false\n    local prime_flag36=false\n    local prime_flag37=false\n\
    \    local prime_flag38=false\n    local prime_flag39=false\n    local prime_flag40=false\n\
    \    local prime_flag41=", "    local interval_1 interval_2\n    interval_1=$1\n\
    \    interval_2=$2\n    local length_intersection\n    length_intersection=$(echo\
    \ \"$interval_1 $interval_2\" | awk '{print $1 - $2}')\n    if [ $length_intersection\
    \ -eq 0 ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi",
  "    local interval1=$1\n    local interval2=$2\n    local length1\n    local length2\n\
    \    local length\n    local prime\n    local result\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n", "    local interval_1 interval_2\n\
    \    interval_1=$1\n    interval_2=$2\n    local length_intersection prime_number\n\
    \    length_interval=$(echo \"$interval_1 $interval_2\" | awk '{print $1 - $2}')\n\
    \    prime_number=$((length_interval % 2))\n    if [ \"$prime_number\" -eq \"\
    1\" ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", " \
    \   local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection_1 length_intersection_2\n    length_intersection_1=$(echo\
    \ $interval_1 | wc -w)\n    length_intersection_2=$(echo $interval_2 | wc -w)\n\
    \    local length_1 length_2 length_of_intersection\n    length_1=$(echo $interval_1\
    \ | wc -w)\n    length_2=$(echo $interval_2 | wc -w)\n    length_of_intersection=$((length_intersection_1\
    \ + length_intersection_2))\n    if [ $length_of_intersection -eq $length_1 ];\
    \ then\n        echo \"YES\"\n    else\n        echo \"NO\"\n    fi", "    local\
    \ interval_1 interval_2\n    interval_1=$(echo $1 | tr ' ' '\\n' | sort -n)\n\
    \    interval_2=$(echo $2 | tr ' ' '\\n' | sort -n)\n    local length_intersection\n\
    \    length_intersection=$(echo $(($(echo \"$interval_1 $interval_2\" | sort -n\
    \ | uniq -c | sort -nr | head -1))))\n    if [ $length_intersection -eq 1 ]; then\n\
    \        echo \"NO\"\n    else\n        echo \"YES\"\n    fi", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${interval1[1]} - ${interval1[0]}))\n\
    \    local length2=$((${interval2[1]} - ${interval2[0]}))\n    if [ $length1 -eq\
    \ 0 ] || [ $length2 -eq 0 ]; then\n        echo \"NO\"\n        return\n    fi\n\
    \    if [ $length1 -eq $length2 ]; then\n        echo \"YES\"\n        return\n\
    \    fi\n    if [ $length1 -le $length2 ]; then\n        local start1=$((${interval1[0]}))\n\
    \        local end1=$((${interval1[1]}))\n        local start2=$((${interval2[0]}))\n\
    \        local end2=$((${interval2[1]}))\n        local start=$((${start1} + ${start2}))\n\
    \        local end=$((${end1} + ${end2}))\n        local length=$((${end} - ${start}))\n\
    \        if [ $length -eq 0 ]; then\n            echo \"NO\"\n            return\n\
    \        fi\n        if [ $length -eq $length1 ]; then\n            echo \"YES\"\
    \n            return\n        fi\n        if [ $length -le $length2 ]; then\n\
    \            local start1=$((${interval1[0]}))\n            local end1=$((${interval1[1]}))\n\
    \            local start2=$((${interval2[0]}))\n            local end2=$((${interval2[1]}))\n\
    \            local start=$((${start1} + ${start2}))\n            local end=$((${end1}\
    \ + ${end2}))\n            local length=$((${end} - ${start}))\n            if\
    \ [ $length -eq 0 ]; then\n                echo \"NO\"\n                return\n\
    \            fi\n            if [ $length -eq $length1 ]; then\n             \
    \   echo \"YES\"\n                return\n            fi\n            if [ $length\
    \ -le $length2 ]; then\n                local start1=$((${interval1[0]}))\n  \
    \              local end1=$((${interval1[1]}))\n                local start2=$((${interval2[0]}))\n\
    \                local end2=$((${interval2[1]}))\n                local start=$((${start1}\
    \ + ${start2}))\n                local end=$((${end1} + ${end2}))\n          \
    \      local length=$((${end} - ${start}))\n                if [ $length -eq 0\
    \ ]; then\n                    echo \"NO\"\n                    return\n     \
    \           fi\n                if [ $length -eq $length1 ]; then\n          \
    \          echo \"YES\"\n                    return\n                fi\n    \
    \            if [ $length -le ", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1=$((${interval1[1]} - ${interval1[0]}))\n    local length2=$((${interval2[1]}\
    \ - ${interval2[0]}))\n    local length=$((length1 + length2))\n    local prime=1\n\
    \    local prime_flag=0\n    local prime_flag2=0\n    local prime_flag3=0\n  \
    \  local prime_flag4=0\n    local prime_flag5=0\n    local prime_flag6=0\n   \
    \ local prime_flag7=0\n    local prime_flag8=0\n    local prime_flag9=0\n    local\
    \ prime_flag10=0\n    local prime_flag11=0\n    local prime_flag12=0\n    local\
    \ prime_flag13=0\n    local prime_flag14=0\n    local prime_flag15=0\n    local\
    \ prime_flag16=0\n    local prime_flag17=0\n    local prime_flag18=0\n    local\
    \ prime_flag19=0\n    local prime_flag20=0\n    local prime_flag21=0\n    local\
    \ prime_flag22=0\n    local prime_flag23=0\n    local prime_flag24=0\n    local\
    \ prime_flag25=0\n    local prime_flag26=0\n    local prime_flag27=0\n    local\
    \ prime_flag28=0\n    local prime_flag29=0\n    local prime_flag30=0\n    local\
    \ prime_flag31=0\n    local prime_flag32=0\n    local prime_flag33=0\n    local\
    \ prime_flag34=0\n    local prime_flag35=0\n    local prime_flag36=0\n    local\
    \ prime_flag37=0\n    local prime_flag38=0\n    local prime_flag39=0\n    local\
    \ prime_flag40=0\n    local prime_flag41=0\n    local prime_flag42=0\n    local\
    \ prime_flag43=0\n    local prime_flag44=0\n    local prime_flag45=0\n    local\
    \ prime_flag46=0\n    local prime_flag47=0\n    local prime_flag48=0\n    local\
    \ prime_flag49=0\n    local prime_flag50=0\n    local prime_flag51=0\n    local\
    \ prime_flag52=0\n    local prime_flag53=0\n    local prime_flag54=0\n    local\
    \ prime_flag55=0\n    local prime_flag56=0\n    local ", "    local interval1=$1\n\
    \    local interval2=$2\n    local length1=$((${#interval1} + 1))\n    local length2=$((${#interval2}\
    \ + 1))\n    local start1=0\n    local end1=0\n    local start2=0\n    local end2=0\n\
    \    local intersect=0\n    local prime=0\n    local prime_flag=0\n    local prime_flag2=0\n\
    \    local prime_flag3=0\n    local prime_flag4=0\n    local prime_flag5=0\n \
    \   local prime_flag6=0\n    local prime_flag7=0\n    local prime_flag8=0\n  \
    \  local prime_flag9=0\n    local prime_flag10=0\n    local prime_flag11=0\n \
    \   local prime_flag12=0\n    local prime_flag13=0\n    local prime_flag14=0\n\
    \    local prime_flag15=0\n    local prime_flag16=0\n    local prime_flag17=0\n\
    \    local prime_flag18=0\n    local prime_flag19=0\n    local prime_flag20=0\n\
    \    local prime_flag21=0\n    local prime_flag22=0\n    local prime_flag23=0\n\
    \    local prime_flag24=0\n    local prime_flag25=0\n    local prime_flag26=0\n\
    \    local prime_flag27=0\n    local prime_flag28=0\n    local prime_flag29=0\n\
    \    local prime_flag30=0\n    local prime_flag31=0\n    local prime_flag32=0\n\
    \    local prime_flag33=0\n    local prime_flag34=0\n    local prime_flag35=0\n\
    \    local prime_flag36=0\n    local prime_flag37=0\n    local prime_flag38=0\n\
    \    local prime_flag39=0\n    local prime_flag40=0\n    local prime_flag41=0\n\
    \    local prime_flag42=0\n    local prime_flag43=0\n    local prime_flag44=0\n\
    \    local prime_flag45=0\n    local prime_flag46=0\n    local prime_flag47=0\n\
    \    local prime_flag48=0\n    local prime_flag49=0\n    local prime_flag50=0\n\
    \    local prime_flag51=0\n    local prime_flag52=0\n    local prime_flag53=0\n\
    \    local prime_flag54=0\n    local prime_flag55=0", "    local interval_1 interval_2\n\
    \    interval_1=$(echo \"$1\" | tr \" \" \"\\n\")\n    interval_2=$(echo \"$2\"\
    \ | tr \" \" \"\\n\")\n    local length_intersection\n    length_intersection=$(echo\
    \ \"$interval_1 $interval_2\" | sort | uniq | wc -l)\n    if [ $length_intersection\
    \ -eq 1 ]; then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi",
  "    local interval_1 interval_2\n    interval_1=$1\n    interval_2=$2\n    local\
    \ length_intersection_1 length_intersection_2\n    length_intersection_1=$(echo\
    \ \"$interval_1\" | awk '{print $1}')\n    length_intersection_2=$(echo \"$interval_2\"\
    \ | awk '{print $1}')\n    if [ \"$length_intersection_1\" -gt \"$length_intersection_2\"\
    \ ]; then\n        echo \"NO\"\n    else\n        local length_1 length_2 length_of_intersection\n\
    \        length_1=$(echo \"$interval_1\" | awk '{print $2}')\n        length_2=$(echo\
    \ \"$interval_2\" | awk '{print $2}')\n        length_of_intersection=$((length_1+length_2))\n\
    \        if [ \"$length_of_intersection\" -eq \"$length_intersection_1\" ]; then\n\
    \            echo \"YES\"\n        else\n            echo \"NO\"\n        fi\n\
    \    fi", "    local interval1=$1\n    local interval2=$2\n    local length1\n\
    \    local length2\n    local i\n    local j\n    local prime\n    local prime_flag\n\
    \    local prime_flag2\n    local prime_flag3\n    local prime_flag4\n    local\
    \ prime_flag5\n    local prime_flag6\n    local prime_flag7\n    local prime_flag8\n\
    \    local prime_flag9\n    local prime_flag10\n    local prime_flag11\n    local\
    \ prime_flag12\n    local prime_flag13\n    local prime_flag14\n    local prime_flag15\n\
    \    local prime_flag16\n    local prime_flag17\n    local prime_flag18\n    local\
    \ prime_flag19\n    local prime_flag20\n    local prime_flag21\n    local prime_flag22\n\
    \    local prime_flag23\n    local prime_flag24\n    local prime_flag25\n    local\
    \ prime_flag26\n    local prime_flag27\n    local prime_flag28\n    local prime_flag29\n\
    \    local prime_flag30\n    local prime_flag31\n    local prime_flag32\n    local\
    \ prime_flag33\n    local prime_flag34\n    local prime_flag35\n    local prime_flag36\n\
    \    local prime_flag37\n    local prime_flag38\n    local prime_flag39\n    local\
    \ prime_flag40\n    local prime_flag41\n    local prime_flag42\n    local prime_flag43\n\
    \    local prime_flag44\n    local prime_flag45\n    local prime_flag46\n    local\
    \ prime_flag47\n    local prime_flag48\n    local prime_flag49\n    local prime_flag50\n\
    \    local prime_flag51\n    local prime_flag52\n    local prime_flag53\n    local\
    \ prime_flag54\n    local prime_flag55\n    local prime_flag56\n    local prime_flag57\n\
    \    local prime_flag58\n    local prime_flag59\n    local prime_flag60\n    local\
    \ prime_flag61\n    local prime_flag62\n    local prime_flag63\n    local prime_flag64\n\
    \    local prime_flag65\n    local prime_flag66\n    local prime_flag67\n    local\
    \ prime_flag68\n    ", "    local interval1=$1\n    local interval2=$2\n    local\
    \ length1\n    local length2\n    local length\n    local prime\n    local result\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n", "    local\
    \ a b\n    a=$1\n    b=$2\n    local len\n    len=$(( (${#a} - ${#b}) / 2 ))\n\
    \    local i\n    for i in $(seq 0 $((len - 1)) )\n    do\n        if [[ $(( ${a[$i]}\
    \ >= ${b[$i]} )) -eq 0 ]]\n        then\n            echo \"NO\"\n           \
    \ return\n        fi\n    done\n    local j\n    for j in $(seq 0 $((len - 1))\
    \ )\n    do\n        if [[ $(( ${a[$j]} <= ${b[$j]} )) -eq 0 ]]\n        then\n\
    \            echo \"NO\"\n            return\n        fi\n    done\n    local\
    \ k\n    for k in $(seq 0 $((len - 1)) )\n    do\n        if [[ $(( ${a[$k]} <\
    \ ${b[$k]} )) -eq 0 ]]\n        then\n            echo \"NO\"\n            return\n\
    \        fi\n    done\n    local l\n    for l in $(seq 0 $((len - 1)) )\n    do\n\
    \        if [[ $(( ${a[$l]} > ${b[$l]} )) -eq 0 ]]\n        then\n           \
    \ echo \"NO\"\n            return\n        fi\n    done\n    echo \"YES\"", " \
    \   local interval1=$1\n    local interval2=$2\n    local length1\n    local length2\n\
    \    local prime\n    local prime_flag\n\n    length1=$(echo $interval1 | awk\
    \ '{print length}')\n    length2=$(echo $interval2 | awk '{print length}')\n\n\
    \    if [ $length1 -eq $length2 ]; then\n        prime_flag=true\n    else\n \
    \       prime_flag=false\n    fi\n\n    if [ $prime_flag = true ]; then\n    \
    \    prime=$(echo $interval1 | awk '{print $1; print $2}')\n        if [ $prime\
    \ -eq 0 ]; then\n            prime=$(echo $interval2 | awk '{print $1; print $2}')\n\
    \        fi\n        if [ $prime -eq $length1 ]; then\n            prime_flag=true\n\
    \        fi\n        if [ $prime -eq $length2 ]; then\n            prime_flag=true\n\
    \        fi\n    fi\n\n    if [ $prime_flag = true ]; then\n        echo \"YES\"\
    \n    else\n        echo \"NO\"\n    fi", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1=$((${interval1[1]}-${interval1[0]}))\n    local length2=$((${interval2[1]}-${interval2[0]}))\n\
    \    local length=$((length1+length2))\n    local prime=0\n    local prime_flag=0\n\
    \    local prime_flag2=0\n    local prime_flag3=0\n    local prime_flag4=0\n \
    \   local prime_flag5=0\n    local prime_flag6=0\n    local prime_flag7=0\n  \
    \  local prime_flag8=0\n    local prime_flag9=0\n    local prime_flag10=0\n  \
    \  local prime_flag11=0\n    local prime_flag12=0\n    local prime_flag13=0\n\
    \    local prime_flag14=0\n    local prime_flag15=0\n    local prime_flag16=0\n\
    \    local prime_flag17=0\n    local prime_flag18=0\n    local prime_flag19=0\n\
    \    local prime_flag20=0\n    local prime_flag21=0\n    local prime_flag22=0\n\
    \    local prime_flag23=0\n    local prime_flag24=0\n    local prime_flag25=0\n\
    \    local prime_flag26=0\n    local prime_flag27=0\n    local prime_flag28=0\n\
    \    local prime_flag29=0\n    local prime_flag30=0\n    local prime_flag31=0\n\
    \    local prime_flag32=0\n    local prime_flag33=0\n    local prime_flag34=0\n\
    \    local prime_flag35=0\n    local prime_flag36=0\n    local prime_flag37=0\n\
    \    local prime_flag38=0\n    local prime_flag39=0\n    local prime_flag40=0\n\
    \    local prime_flag41=0\n    local prime_flag42=0\n    local prime_flag43=0\n\
    \    local prime_flag44=0\n    local prime_flag45=0\n    local prime_flag46=0\n\
    \    local prime_flag47=0\n    local prime_flag48=0\n    local prime_flag49=0\n\
    \    local prime_flag50=0\n    local prime_flag51=0\n    local prime_flag52=0\n\
    \    local prime_flag53=0\n    local prime_flag54=0\n    local prime_flag55=0\n\
    \    local prime_flag56=0\n    local ", "    local interval1=$1\n    local interval2=$2\n\
    \    local length1\n    local length2\n    local result\n    local prime\n   \
    \ local i\n    local j\n    local k\n    local l\n    local m\n    local n\n \
    \   local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n",
  "    local interval1=$1\n    local interval2=$2\n    local length1=$((${interval1[1]}\
    \ - ${interval1[0]}))\n    local length2=$((${interval2[1]} - ${interval2[0]}))\n\
    \    local length=$((length1 + length2))\n    if [ $length -eq 0 ]\n    then\n\
    \        echo \"NO\"\n    else\n        local i\n        local j\n        local\
    \ prime=1\n        local prime_flag=0\n        for (( i=1; i<=$length; i++))\n\
    \        do\n            for (( j=1; j<=$length; j++))\n            do\n     \
    \           if [ $((${interval1[0]} + $i)) -eq $((${interval2[0]} + $j)) ]\n \
    \               then\n                    prime_flag=1\n                    break\n\
    \                fi\n            done\n            if [ $prime_flag -eq 0 ]\n\
    \            then\n                prime=0\n                break\n          \
    \  fi\n        done\n        if [ $prime -eq 1 ]\n        then\n            echo\
    \ \"YES\"\n        else\n            echo \"NO\"\n        fi\n    fi"]
stop_tokens:
- "\n}"

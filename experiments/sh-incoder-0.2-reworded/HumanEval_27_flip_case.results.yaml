language: sh
name: HumanEval_27_flip_case
results:
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^}\"\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output\n    for\
    \ (( i=0; i<${#string}; i++ )); do\n        output=\"${string:$i:1}${string:$i:1}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1,,}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [a-z]) output=\"${output:${#output}-1:1}${string:$i:1}\";;\n\
    \            [A-Z]) output=\"${output:${#output}-1:1}${string:$i:1}\";;\n    \
    \        *) output=\"${output}${string:$i:1}\";;\n        esac\n    done\n   \
    \ echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/' -e 's/\\(.\\)/\\L\\1/')\n    echo \"\
    $output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\\
    !\" ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output\n \
    \   output=$(echo \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"\
    $output\" | sed 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1,,}\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=$1\n  echo \"${string^^}\"\n}\n\
    \ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1,,}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output\n \
    \   output=$(echo \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo\
    \ \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        output=\"\
    ${output}${string[i]^^}\"\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [:lower:])\n           \
    \     output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n              \
    \  ;;\n            [:upper:])\n                output+=\"$(echo \"$c\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n                ;;\n            *)\n                output+=\"\
    $c\"\n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:])\n\
    \                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n   \
    \             ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local letter=\"${string:$i:1}\"\
    \n        case \"$letter\" in\n            A) output+=\"a\" ;;\n            B)\
    \ output+=\"b\" ;;\n            C) output+=\"c\" ;;\n            D) output+=\"\
    d\" ;;\n            E) output+=\"e\" ;;\n            F) output+=\"f\" ;;\n   \
    \         G) output+=\"g\" ;;\n            H) output+=\"h\" ;;\n            I)\
    \ output+=\"i\" ;;\n            J) output+=\"j\" ;;\n            K) output+=\"\
    k\" ;;\n            L) output+=\"l\" ;;\n            M) output+=\"m\" ;;\n   \
    \         N) output+=\"n\" ;;\n            O) output+=\"o\" ;;\n            P)\
    \ output+=\"p\" ;;\n            Q) output+=\"q\" ;;\n            R) output+=\"\
    r\" ;;\n            S) output+=\"s\" ;;\n            T) output+=\"t\" ;;\n   \
    \         U) output+=\"u\" ;;\n            V) output+=\"v\" ;;\n            W)\
    \ output+=\"w\" ;;\n            X) output+=\"x\" ;;\n            Y) output+=\"\
    y\" ;;\n            Z) output+=\"z\" ;;\n            *) output+=\"$letter\" ;;\n\
    \        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local char=\"${string:$i:1}\"\
    \n        case \"$char\" in\n            [:lower:])\n                char=\"$(echo\
    \ \"$char\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:])\n\
    \                char=\"$(echo \"$char\" | tr '[:lower:]' '[:upper:]')\"\n   \
    \             ;;\n        esac\n        output+=\"$char\"\n    done\n    echo\
    \ \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output=\"\"\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        local c=${string:$i:1}\n  \
    \      case \"$c\" in\n            [a-z]) output+=\"[A-Z]\" ;;\n            [A-Z])\
    \ output+=\"[a-z]\" ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local new_string=\"\
    \"\n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [:lower:] )\n          \
    \      new_string+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n         \
    \       ;;\n            [:upper:] )\n                new_string+=\"$(echo \"$c\"\
    \ | tr '[:lower:]' '[:upper:]')\"\n                ;;\n            * )\n     \
    \           new_string+=\"$c\"\n                ;;\n        esac\n    done\n \
    \   echo \"$new_string\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [:lower:])\n           \
    \     output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n              \
    \  ;;\n            [:upper:])\n                output+=\"$(echo \"$c\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n                ;;\n            *)\n                output+=\"\
    $c\"\n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                c=$(echo \"\
    $c\" | tr '[:upper:]' '[:lower:]')\n                ;;\n            [:upper:])\n\
    \                c=$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\n             \
    \   ;;\n            *)\n                c=$(echo \"$c\")\n                ;;\n\
    \        esac\n        output+=\"$c\"\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1,,}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    local j\n    for (( i = 0; i < ${#string}; i++ )); do\n   \
    \     j=${i}\n        output=\"${output}${string:$j:1}${string:$j:0:1}\"\n   \
    \ done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8pxqp7a8.sh: line 14: string: 0:1: syntax error in expression (error
    token is ":1")

    '
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:] )\n                output+=\"\
    $(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n          \
    \  [:upper:] )\n                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\
    \n                ;;\n            * )\n                output+=\"$c\"\n      \
    \          ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:] )\n                output+=\"\
    $(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n          \
    \  [:upper:] )\n                output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\
    \n                ;;\n            * )\n                output+=\"$c\"\n      \
    \          ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output\n    for\
    \ (( i = 0; i < ${#string}; i++ )); do\n        output=\"${string:i:1}${string:i:1}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local new_string=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n\
    \        if [[ $char == [a-z] ]]; then\n            new_string+=\"${char^^}\"\n\
    \        else\n            new_string+=\"${char}\"\n        fi\n    done\n   \
    \ echo \"$new_string\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:] )\n                output+=\"\
    $(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n          \
    \  [:upper:] )\n                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\
    \n                ;;\n            * )\n                output+=\"$c\"\n      \
    \          ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1,,}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ $string | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\\
    (.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [:lower:])\n           \
    \     c=$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\n                ;;\n    \
    \        [:upper:])\n                c=$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\n\
    \                ;;\n            *)\n                c=$(echo \"$c\")\n      \
    \          ;;\n        esac\n        output+=\"$c\"\n    done\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  local output=\"\"\n\
    \  local i\n  for (( i=0; i<${#string}; i++ )); do\n    local c=${string:$i:1}\n\
    \    case \"$c\" in\n      [a-z]) c=\"[A-Z]\" ;;\n      [A-Z]) c=\"[a-z]\" ;;\n\
    \      *) c=\"$c\" ;;\n    esac\n    output+=\"$c\"\n  done\n  echo \"$output\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output=\"\"\n\
    \    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=$(echo\
    \ $string | cut -d'_' -f $i)\n        case \"$c\" in\n            A) output+=\"\
    a\" ;;\n            B) output+=\"b\" ;;\n            C) output+=\"c\" ;;\n   \
    \         D) output+=\"d\" ;;\n            E) output+=\"e\" ;;\n            F)\
    \ output+=\"f\" ;;\n            G) output+=\"g\" ;;\n            H) output+=\"\
    h\" ;;\n            I) output+=\"i\" ;;\n            J) output+=\"j\" ;;\n   \
    \         K) output+=\"k\" ;;\n            L) output+=\"l\" ;;\n            M)\
    \ output+=\"m\" ;;\n            N) output+=\"n\" ;;\n            O) output+=\"\
    o\" ;;\n            P) output+=\"p\" ;;\n            Q) output+=\"q\" ;;\n   \
    \         R) output+=\"r\" ;;\n            S) output+=\"s\" ;;\n            T)\
    \ output+=\"t\" ;;\n            U) output+=\"u\" ;;\n            V) output+=\"\
    v\" ;;\n            W) output+=\"w\" ;;\n            X) output+=\"x\" ;;\n   \
    \         Y) output+=\"y\" ;;\n            Z) output+=\"z\" ;;\n            *)\
    \ output+=\"$c\" ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    '
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local result=\"\"\n\
    \    for (( i = 0; i < ${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        result+=\"${c:0:1}${c:1:1}\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1,,}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output\n \
    \   for (( i = 0; i < ${#string}; i++ )); do\n        output=\"${string:i:1}${string:i:1}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local newstring=\"\
    \"\n    for (( i=0; i<${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        case \"$c\" in\n            [:lower:] )\n                newstring+=\"\
    $(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n          \
    \  [:upper:] )\n                newstring+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\
    \n                ;;\n            * )\n                newstring+=\"$c\"\n   \
    \             ;;\n        esac\n    done\n    echo \"$newstring\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local result=\"\"\
    \n    for (( i = 0; i < ${#string}; i++ )); do\n        local char=\"${string:$i:1}\"\
    \n        if [[ $char == [a-z] ]]; then\n            char=\"[A-Z]\"\n        elif\
    \ [[ $char == [A-Z] ]]; then\n            char=\"[a-z]\"\n        fi\n       \
    \ result+=\"$char\"\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  local output=\"\"\n\
    \  local i\n  for (( i=0; i<${#string}; i++ )); do\n    local c=\"${string:$i:1}\"\
    \n    case \"$c\" in\n      [a-z]) output+=\"[A-Z]\";;\n      [A-Z]) output+=\"\
    [a-z]\";;\n      *) output+=\"$c\";;\n    esac\n  done\n  echo \"$output\"\n}\n\
    \ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        case \"${string:$i:1}\" in\n\
    \            [a-z]) output+=\"[A-Z]\";;\n            [A-Z]) output+=\"[a-z]\"\
    ;;\n        esac\n    done\n    echo \"${output}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        if [[ \"$c\" == [a-z] ]]; then\n            c=\"[A-Z]\"\
    \n        elif [[ \"$c\" == [A-Z] ]]; then\n            c=\"[a-z]\"\n        fi\n\
    \        output+=\"$c\"\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^}\"\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local newstring=\"\
    \"\n    for (( i=0; i<${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        case $c in\n            a)\n                newstring+=\"B\"\n      \
    \          ;;\n            b)\n                newstring+=\"a\"\n            \
    \    ;;\n            c)\n                newstring+=\"C\"\n                ;;\n\
    \            d)\n                newstring+=\"D\"\n                ;;\n      \
    \      e)\n                newstring+=\"E\"\n                ;;\n            f)\n\
    \                newstring+=\"F\"\n                ;;\n            g)\n      \
    \          newstring+=\"G\"\n                ;;\n            h)\n            \
    \    newstring+=\"H\"\n                ;;\n            i)\n                newstring+=\"\
    I\"\n                ;;\n            j)\n                newstring+=\"J\"\n  \
    \              ;;\n            k)\n                newstring+=\"K\"\n        \
    \        ;;\n            l)\n                newstring+=\"L\"\n              \
    \  ;;\n            m)\n                newstring+=\"M\"\n                ;;\n\
    \            n)\n                newstring+=\"N\"\n                ;;\n      \
    \      o)\n                newstring+=\"O\"\n                ;;\n            p)\n\
    \                newstring+=\"P\"\n                ;;\n            q)\n      \
    \          newstring+=\"Q\"\n                ;;\n            r)\n            \
    \    newstring+=\"R\"\n                ;;\n            s)\n                newstring+=\"\
    S\"\n                ;;\n            t)\n                newstring+=\"T\"\n  \
    \              ;;\n            u)\n                newstring+=\"U\"\n        \
    \        ;;\n            v)\n                newstring+=\"V\"\n              \
    \  ;;\n            w)\n                newstring+=\"W\"\n                ;;\n\
    \            x)\n                newstring+=\"X\"\n                ;;\n      \
    \      y)\n                newstring+=\"Y\"\n                ;;\n            z)\n\
    \                newstring+=\"Z\"\n                ;;\n            *)\n      \
    \          newstring+=\"$c\"\n                ;;\n        esac\n    done\n   \
    \ echo \"$newstring\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  local newstring=\"\"\
    \n  local i\n  for i in \"${string}\"; do\n    case $i in\n      [a-z]) newstring+=\"\
    [A-Z]\";;\n      [A-Z]) newstring+=\"[a-z]\";;\n      *) newstring+=\"$i\";;\n\
    \    esac\n  done\n  echo \"$newstring\"\n}\n\ncandidate() {\n    flip_case \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output\n    for\
    \ (( i = 0; i < ${#string}; i++ )); do\n        [[ \"${string:$i:1}\" == [a-z]\
    \ ]] && output=\"${output:+${output}${string:$i:1}${string:$i:2}}\"\n        [[\
    \ \"${string:$i:1}\" == [A-Z] ]] && output=\"${output:+${output}${string:$i:1}${string:$i:2}}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=$1\n  local result=\"\"\n  local\
    \ i\n  for i in \"${string}\"; do\n    case $i in\n      [a-z])\n        result+=\"\
    [A-Z]\"\n        ;;\n      [A-Z])\n        result+=\"[a-z]\"\n        ;;\n   \
    \   *)\n        result+=$i\n        ;;\n    esac\n  done\n  echo \"$result\"\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:] )\n                output+=\"\
    $(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n          \
    \  [:upper:] )\n                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\
    \n                ;;\n            * )\n                output+=\"$c\"\n      \
    \          ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local new_string=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n\
    \        case \"$char\" in\n            [:lower:])\n                new_string+=\"\
    $(echo \"$char\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n       \
    \     [:upper:])\n                new_string+=\"$(echo \"$char\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n                ;;\n        esac\n    done\n    echo \"$new_string\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output\n \
    \   for (( i = 0; i < ${#string}; i++ )); do\n        output=\"${string:$i:1}${string:$i:1}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                c=\"$(printf\
    \ '%s' \"${c:0:1}\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n    \
    \        [:upper:])\n                c=\"$(printf '%s' \"${c:0:1}\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n                ;;\n        esac\n        output+=\"$c\"\n \
    \   done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output=\"\"\n\
    \    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        case $c in\n            [:lower:])\n                c=$(echo \"$c\" |\
    \ tr '[:upper:]' '[:lower:]')\n                ;;\n            [:upper:])\n  \
    \              c=$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\n               \
    \ ;;\n        esac\n        output+=\"$c\"\n    done\n    echo \"$output\"\n}\n\
    \ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output=\"\"\n\
    \    local i\n    for (( i=1; i<${#string}; i++ )); do\n        output+=\"${string[i]^^}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  local output=\"\"\n\
    \  local i\n  for (( i = 0; i < ${#string}; i++ )); do\n    local c=\"${string:$i:1}\"\
    \n    case \"$c\" in\n      [a-z]) c=\"[A-Z]\" ;;\n      [A-Z]) c=\"[a-z]\" ;;\n\
    \      *) c=\"${c:0:1}\" ;;\n    esac\n    output+=\"$c\"\n  done\n  echo \"$output\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^}\"\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1,,}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i=1; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                c=\"$(echo \"\
    $c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:])\n\
    \                c=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n         \
    \       ;;\n        esac\n        output+=\"$c\"\n    done\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  local output\n  output=\"\
    $(tr '[:lower:]' '[:upper:]' <<< \"$string\")\"\n  output=\"$(tr '[:upper:]' '[:lower:]'\
    \ <<< \"$output\")\"\n  echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local newstring\n\
    \    newstring=$(echo \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    newstring=$(echo\
    \ \"$newstring\" | sed 's/\\(.\\)/\\L\\1/')\n    echo \"$newstring\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local newstring=\"\
    \"\n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case $c in\n            A) newstring+=\"a\"\n      \
    \      ;;\n            B) newstring+=\"b\"\n            ;;\n            C) newstring+=\"\
    c\"\n            ;;\n            D) newstring+=\"d\"\n            ;;\n       \
    \     E) newstring+=\"e\"\n            ;;\n            F) newstring+=\"f\"\n \
    \           ;;\n            G) newstring+=\"g\"\n            ;;\n            H)\
    \ newstring+=\"h\"\n            ;;\n            I) newstring+=\"i\"\n        \
    \    ;;\n            J) newstring+=\"j\"\n            ;;\n            K) newstring+=\"\
    k\"\n            ;;\n            L) newstring+=\"l\"\n            ;;\n       \
    \     M) newstring+=\"m\"\n            ;;\n            N) newstring+=\"n\"\n \
    \           ;;\n            O) newstring+=\"o\"\n            ;;\n            P)\
    \ newstring+=\"p\"\n            ;;\n            Q) newstring+=\"q\"\n        \
    \    ;;\n            R) newstring+=\"r\"\n            ;;\n            S) newstring+=\"\
    s\"\n            ;;\n            T) newstring+=\"t\"\n            ;;\n       \
    \     U) newstring+=\"u\"\n            ;;\n            V) newstring+=\"v\"\n \
    \           ;;\n            W) newstring+=\"w\"\n            ;;\n            X)\
    \ newstring+=\"x\"\n            ;;\n            Y) newstring+=\"y\"\n        \
    \    ;;\n            Z) newstring+=\"z\"\n            ;;\n            *) newstring+=\"\
    $c\"\n            ;;\n        esac\n    done\n    echo \"$newstring\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=$1\n  local output=\"\"\n  local\
    \ i\n  for i in $(seq 0 $((${#string}-1)))\n  do\n    local c=${string:$i:1}\n\
    \    case \"$c\" in\n      [a-z]) c=${c:0:1}${c:1:1} ;;\n      [A-Z]) c=${c:0:1}${c:1:1}\
    \ ;;\n      *) c=${c:0:1}${c:1:1} ;;\n    esac\n    output+=\"$c\"\n  done\n \
    \ echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output=\"\"\n\
    \    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        case $c in\n            A|a) output+=\"A\";;\n            B|b) output+=\"\
    B\";;\n            C|c) output+=\"C\";;\n            D|d) output+=\"D\";;\n  \
    \          E|e) output+=\"E\";;\n            F|f) output+=\"F\";;\n          \
    \  G|g) output+=\"G\";;\n            H|h) output+=\"H\";;\n            I|i) output+=\"\
    I\";;\n            J|j) output+=\"J\";;\n            K|k) output+=\"K\";;\n  \
    \          L|l) output+=\"L\";;\n            M|m) output+=\"M\";;\n          \
    \  N|n) output+=\"N\";;\n            O|o) output+=\"O\";;\n            P|p) output+=\"\
    P\";;\n            Q|q) output+=\"Q\";;\n            R|r) output+=\"R\";;\n  \
    \          S|s) output+=\"S\";;\n            T|t) output+=\"T\";;\n          \
    \  U|u) output+=\"U\";;\n            V|v) output+=\"V\";;\n            W|w) output+=\"\
    W\";;\n            X|x) output+=\"X\";;\n            Y|y) output+=\"Y\";;\n  \
    \          Z|z) output+=\"Z\";;\n            *)    output+=\"$c\";;\n        esac\n\
    \    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output\n \
    \   output=$(echo \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo\
    \ \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output\n \
    \   output=$(echo \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo\
    \ \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:] )\n                output+=\"\
    $(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n          \
    \  [:upper:] )\n                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\
    \n                ;;\n            * )\n                output+=\"$c\"\n      \
    \          ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output\n    for\
    \ (( i=0; i<${#string}; i++ )); do\n        output=\"${string:$i:1}${string:$i:1}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 2
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local new_string=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n\
    \        case \"$char\" in\n            \\?) char=\"?\" ;;\n            \\*) char=\"\
    *\" ;;\n            \\#) char=\"#\" ;;\n            \\^) char=\"^\" ;;\n     \
    \       \\&) char=\"&\" ;;\n            \\|) char=\"|\" ;;\n            \\~) char=\"\
    ~\" ;;\n            \\`) char=\"`\" ;;\n            \\!) char=\"!\" ;;\n     \
    \       \\@) char=\"@\" ;;\n            \\#\\*) char=\"##\" ;;\n            \\\
    #\\?) char=\"##?\" ;;\n            \\#\\#) char=\"###\" ;;\n            \\#\\\
    ^) char=\"##^\" ;;\n            \\#\\&) char=\"##&\" ;;\n            \\#\\|) char=\"\
    ##|\" ;;\n            \\#\\~) char=\"##~\" ;;\n            \\#\\`) char=\"##`\"\
    \ ;;\n            \\#\\!) char=\"##!\" ;;\n            \\#\\@) char=\"##@\" ;;\n\
    \            \\#\\#\\*) char=\"###\" ;;\n            \\#\\#\\?) char=\"###?\"\
    \ ;;\n            \\#\\#\\#) char=\"####\" ;;\n            \\#\\#\\^) char=\"\
    ###^\" ;;\n            \\#\\#\\&) char=\"###&\" ;;\n            \\#\\#\\|) char=\"\
    ###|\" ;;\n            \\#\\#\\~) char=\"###~\" ;;\n            \\#\\#\\`) char=\"\
    ###`\" ;;\n            \\#\\#\\!) char=\"###!\" ;;\n            \\#\\#\\@) char=\"\
    ###@\" ;;\n            \\#\\#\\#\\*) char=\"####\" ;;\n            \\#\\#\\#\\\
    ?) char=\"####?\" ;;\n            \\#\\#\\#\\#) char=\"#####\" ;;\n          \
    \  \\#\\#\\#\\^) char=\"####^\" ;;\n            \\#\\#\\#\\&) char=\"####&\" ;;\n\
    \            \\#\\#\\#\\|) char=\"####|\" ;;\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpium0hyry.sh: line 40: unexpected EOF while looking for matching
    ``''

    /tmp/tmpium0hyry.sh: line 63: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local new_string=\"\"\
    \n    local i\n    for (( i = 0; i <= ${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        case $c in\n            [:lower:])\n                new_string=${new_string}$c\n\
    \                ;;\n            [:upper:])\n                new_string=${new_string}$c\n\
    \                ;;\n            *)\n                new_string=${new_string}$c\n\
    \                ;;\n        esac\n    done\n    echo \"$new_string\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local result=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local char=\"${string:$i:1}\"\
    \n        if [[ \"$char\" == [a-z] ]]; then\n            result+=\"[A-Z]\"\n \
    \       else\n            result+=\"$char\"\n        fi\n    done\n    echo \"\
    $result\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\\
    !\" ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/' -e 's/\\(.\\)/\\L\\1/')\n    echo \"\
    $output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\\
    !\" ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [:lower:] )\n          \
    \      output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n             \
    \   ;;\n            [:upper:] )\n                output+=\"$(echo \"$c\" | tr\
    \ '[:lower:]' '[:upper:]')\"\n                ;;\n            * )\n          \
    \      output+=\"$c\"\n                ;;\n        esac\n    done\n    echo \"\
    $output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\\
    !\" ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 2
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i = 0; i < ${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            \\?) output+=\"?\" ;;\n            \\\
    *) output+=\"*\" ;;\n            \\#) output+=\"#\" ;;\n            \\^) output+=\"\
    ^\" ;;\n            \\&) output+=\"&\" ;;\n            \\~) output+=\"~\" ;;\n\
    \            \\`) output+=\"`\" ;;\n            \\!) output+=\"!\" ;;\n      \
    \      \\@) output+=\"@\" ;;\n            \\#\\^) output+=\"\\^\" ;;\n       \
    \     \\#\\&) output+=\"\\&\" ;;\n            \\#\\~) output+=\"\\~\" ;;\n   \
    \         \\#\\`) output+=\"\\`\" ;;\n            \\#\\!) output+=\"\\!\" ;;\n\
    \            \\#\\@) output+=\"\\@\" ;;\n            \\#\\#) output+=\"\\#\" ;;\n\
    \            \\#\\^) output+=\"\\^\" ;;\n            \\#\\&) output+=\"\\&\" ;;\n\
    \            \\#\\~) output+=\"\\~\" ;;\n            \\#\\`) output+=\"\\`\" ;;\n\
    \            \\#\\!) output+=\"\\!\" ;;\n            \\#\\@) output+=\"\\@\" ;;\n\
    \            \\#\\#) output+=\"\\#\" ;;\n            \\#\\^) output+=\"\\^\" ;;\n\
    \            \\#\\&) output+=\"\\&\" ;;\n            \\#\\~) output+=\"\\~\" ;;\n\
    \            \\#\\`) output+=\"\\`\" ;;\n            \\#\\!) output+=\"\\!\" ;;\n\
    \            \\#\\@) output+=\"\\@\" ;;\n            \\#\\#) output+=\"\\#\" ;;\n\
    \            \\#\\^) output+=\"\\^\" ;;\n            \\#\\&) output+=\"\\&\" ;;\n\
    \            \\#\\~) output+=\"\\~\" ;;\n            \\#\\`) output+=\"\\`\" ;;\n\
    \            \\#\\!) output+=\"\\!\" ;;\n            \\#\\@) output+=\"\\@\" \n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1qn9s69r.sh: line 19: unexpected EOF while looking for matching
    ``''

    /tmp/tmp1qn9s69r.sh: line 63: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^^}\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:] )\n                output+=\"\
    $(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n          \
    \  [:upper:] )\n                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\
    \n                ;;\n            * )\n                output+=\"$c\"\n      \
    \          ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1,,}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=$1\n  local newstring=\"\"\n \
    \ local i\n  for i in $(seq 0 $((${#string}-1)))\n  do\n    local c=${string:$i:1}\n\
    \    local u=${c:0:1}\n    local l=${c:1}\n    local u=${u:0:1}\n    local l=${l:1}\n\
    \    newstring+=\"${u}${l}\"\n  done\n  echo \"${newstring}\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local new_string=\"\"\
    \n    local i\n    for (( i = 0; i <= ${#string}; i++ )); do\n        local char=${string:$i:1}\n\
    \        case \"$char\" in\n            [a-z])\n                new_string+=\"\
    [A-Z]\"\n                ;;\n            [A-Z])\n                new_string+=\"\
    [a-z]\"\n                ;;\n            *)\n                new_string+=\"$char\"\
    \n                ;;\n        esac\n    done\n    echo \"$new_string\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1,,}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n            [:upper:])\n\
    \                output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n   \
    \             ;;\n            *)\n                output+=\"$c\"\n           \
    \     ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n \
    \   flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=$1\n  local new_string=\"\"\n\
    \  local i\n  for i in $(seq 0 $((${#string}-1))); do\n    local c=${string:$i:1}\n\
    \    local u=${c:0:1}\n    local l=${c:1}\n    local u=${u:0:1}\n    local l=${l:1}\n\
    \    new_string+=\"${u}${l}\"\n  done\n  echo \"${new_string}\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^}\"\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i = 0; i < ${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            [a-z]) output+=\"[A-Z]\";;\n       \
    \     [A-Z]) output+=\"[a-z]\";;\n        esac\n    done\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local lower\n  \
    \  local upper\n    lower=$(echo \"$string\" | sed 's/[a-z]/[&]/g')\n    upper=$(echo\
    \ \"$string\" | sed 's/[A-Z]/[&]/g')\n    echo ${string/$lower/$upper}\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output\n \
    \   for (( i = 0; i < ${#string}; i++ )); do\n        output=\"${string:i:1}${string:i+1:1}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 2
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n\
    \    output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"\
    $output\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  \
    \  output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"\
    $output\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  \
    \  output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"\
    $output\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  \
    \  output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"\
    $output\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  \
    \  output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"\
    $output\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  \
    \  output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"\
    $output\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed '\n}\n\ncandidate() {\n \
    \   flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfpsvnwl3.sh: line 36: unexpected EOF while looking for matching
    `''''

    /tmp/tmpfpsvnwl3.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  local output=\"\"\n\
    \  local i\n  for i in \"${string}\"; do\n    case \"$i\" in\n      [a-z]) output+=\"\
    [A-Z]\";;\n      [A-Z]) output+=\"[a-z]\";;\n      *) output+=\"$i\";;\n    esac\n\
    \  done\n  echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1,,}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local new_string=\"\
    \"\n    local i\n    local j\n    for ((i=0; i<${#string}; i++)); do\n       \
    \ j=\"${i:i:1}\"\n        if [[ \"$j\" == \"a\" ]]; then\n            j=\"A\"\n\
    \        elif [[ \"$j\" == \"b\" ]]; then\n            j=\"B\"\n        elif [[\
    \ \"$j\" == \"c\" ]]; then\n            j=\"C\"\n        elif [[ \"$j\" == \"\
    d\" ]]; then\n            j=\"D\"\n        elif [[ \"$j\" == \"e\" ]]; then\n\
    \            j=\"E\"\n        elif [[ \"$j\" == \"f\" ]]; then\n            j=\"\
    F\"\n        elif [[ \"$j\" == \"g\" ]]; then\n            j=\"G\"\n        elif\
    \ [[ \"$j\" == \"h\" ]]; then\n            j=\"H\"\n        elif [[ \"$j\" ==\
    \ \"i\" ]]; then\n            j=\"I\"\n        elif [[ \"$j\" == \"j\" ]]; then\n\
    \            j=\"J\"\n        elif [[ \"$j\" == \"k\" ]]; then\n            j=\"\
    K\"\n        elif [[ \"$j\" == \"l\" ]]; then\n            j=\"L\"\n        elif\
    \ [[ \"$j\" == \"m\" ]]; then\n            j=\"M\"\n        elif [[ \"$j\" ==\
    \ \"n\" ]]; then\n            j=\"N\"\n        elif [[ \"$j\" == \"o\" ]]; then\n\
    \            j=\"O\"\n        elif [[ \"$j\" == \"p\" ]]; then\n            j=\"\
    P\"\n        elif [[ \"$j\" == \"q\" ]]; then\n            j=\"Q\"\n        elif\
    \ [[ \"$j\" == \"r\" ]]; then\n            j=\"R\"\n        elif [[ \"$j\" ==\
    \ \"s\" ]]; then\n            j=\"S\"\n        elif [[ \"$j\" == \"t\" ]]; then\n\
    \            j=\"T\"\n        elif [[ \"$j\" == \"u\" ]]; then\n            j=\"\
    U\"\n        elif [[ \"$j\" == \"v\" ]]; then\n            j=\"V\"\n        elif\
    \ [[ \"$j\" == \"w\" ]]; then\n            j=\"W\"\n        elif [[ \"$j\" ==\
    \ \"x\" ]]; then\n            j=\"X\"\n        elif [[ \"$j\" == \"y\" ]]; then\n\
    \            j=\"Y\"\n        elif [[ \"$j\" == \"z\" ]]; then\n            j=\"\
    Z\"\n        fi\n        new_string=\"${new_string}$j\"\n    done\n    echo \"\
    ${new_string}\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case $c in\n            A) output+=\"B\";;\n            B) output+=\"\
    a\";;\n            C) output+=\"C\";;\n            D) output+=\"d\";;\n      \
    \      E) output+=\"e\";;\n            F) output+=\"f\";;\n            G) output+=\"\
    g\";;\n            H) output+=\"h\";;\n            I) output+=\"i\";;\n      \
    \      J) output+=\"j\";;\n            K) output+=\"k\";;\n            L) output+=\"\
    l\";;\n            M) output+=\"m\";;\n            N) output+=\"n\";;\n      \
    \      O) output+=\"o\";;\n            P) output+=\"p\";;\n            Q) output+=\"\
    q\";;\n            R) output+=\"r\";;\n            S) output+=\"s\";;\n      \
    \      T) output+=\"t\";;\n            U) output+=\"u\";;\n            V) output+=\"\
    v\";;\n            W) output+=\"w\";;\n            X) output+=\"x\";;\n      \
    \      Y) output+=\"y\";;\n            Z) output+=\"z\";;\n            *) output+=\"\
    $c\";;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n   \
    \ flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"\
    These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local newString=\"\"\
    \n    local i\n    local j\n    for (( i=1; i<${#string}; i++ )); do\n       \
    \ j=$(( ${#string} - i - 1 ))\n        newString+=\"${string:$i:1}${string:j:1}\"\
    \n    done\n    echo \"$newString\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        if [[ $c =~ ^[a-z] ]]; then\n            c=\"${c:0:1}${c:1:1}${c:2:1}\"\
    \n        fi\n        output+=\"$c\"\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^}\"\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i = 0; i < ${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            \\?) output+=\"?\";;\n            \\\
    *) output+=\"*\";;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output=\"\"\n\
    \    for (( i = 0; i < ${#string}; i++ )); do\n        output+=\"${string[i]^^}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local new_string=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n\
    \        case $char in\n            a)\n                new_string+=\"B\"\n  \
    \              ;;\n            b)\n                new_string+=\"a\"\n       \
    \         ;;\n            c)\n                new_string+=\"C\"\n            \
    \    ;;\n            d)\n                new_string+=\"d\"\n                ;;\n\
    \            e)\n                new_string+=\"E\"\n                ;;\n     \
    \       f) new_string+=\"f\"\n                ;;\n            g) new_string+=\"\
    g\"\n                ;;\n            h) new_string+=\"H\"\n                ;;\n\
    \            i) new_string+=\"I\"\n                ;;\n            j)\n      \
    \          new_string+=\"J\"\n                ;;\n            k) new_string+=\"\
    K\"\n                ;;\n            l) new_string+=\"L\"\n                ;;\n\
    \            m) new_string+=\"M\"\n                ;;\n            n) new_string+=\"\
    N\"\n                ;;\n            o) new_string+=\"O\"\n                ;;\n\
    \            p) new_string+=\"P\"\n                ;;\n            q) new_string+=\"\
    Q\"\n                ;;\n            r) new_string+=\"R\"\n                ;;\n\
    \            s) new_string+=\"S\"\n                ;;\n            t) new_string+=\"\
    T\"\n                ;;\n            u) new_string+=\"U\"\n                ;;\n\
    \            v) new_string+=\"V\"\n                ;;\n            w) new_string+=\"\
    W\"\n                ;;\n            x) new_string+=\"X\"\n                ;;\n\
    \            y) new_string+=\"Y\"\n                ;;\n            z) new_string+=\"\
    Z\"\n                ;;\n            *)\n                new_string+=$char\n \
    \               ;;\n        esac\n    done\n    echo \"$new_string\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=$1\n  local output\n  output=$(echo\
    \ $string | sed 's/\\(.\\)/\\U\\1/')\n  output=$(echo $output | sed 's/\\(.\\\
    )/\\L\\1/')\n  output=$(echo $output | sed 's/\\(.\\)/\\U\\1/')\n  echo $output\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^}\"\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local new_string=\"\
    \"\n    for (( i=0; i<${#string}; i++ )); do\n        local char=\"${string:$i:1}\"\
    \n        if [[ $char == [a-z] ]]; then\n            char=\"[A-Z]\"\n        elif\
    \ [[ $char == [A-Z] ]]; then\n            char=\"[a-z]\"\n        fi\n       \
    \ new_string+=\"${char}\"\n    done\n    echo \"${new_string}\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [:lower:])\n           \
    \     c=$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\n                ;;\n    \
    \        [:upper:])\n                c=$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\n\
    \                ;;\n        esac\n        output+=\"$c\"\n    done\n    echo\
    \ \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  local output=\"\"\n\
    \  local i\n  for i in \"${string}\"; do\n    case \"$i\" in\n      [a-z]) output+=\"\
    [A-Z]\";;\n      [A-Z]) output+=\"[a-z]\";;\n      *) output+=\"$i\";;\n    esac\n\
    \  done\n  echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [:lower:] )\n          \
    \      output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n             \
    \   ;;\n            [:upper:] )\n                output+=\"$(echo \"$c\" | tr\
    \ '[:lower:]' '[:upper:]')\"\n                ;;\n            * )\n          \
    \      output+=\"$c\"\n                ;;\n        esac\n    done\n    echo \"\
    $output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\\
    !\" ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 2
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  local output\n  output=\"\
    ${string^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^}\"\n  output=\"\
    ${output^^}\"\n  output=\"${output^^}\"\n  output=\"${output^^\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwfav9px2.sh: line 92: unexpected EOF while looking for matching
    `"''

    /tmp/tmpwfav9px2.sh: line 96: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case $c in\n            [:lower:] )\n                output+=\"$(echo\
    \ \"$c\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n            [:upper:]\
    \ )\n                output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n\
    \                ;;\n            * )\n                output+=\"$c\"\n       \
    \         ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output\n \
    \   output=$(echo \"$string\" | sed -e 's/\\(.\\)/\\U\\1/' -e 's/\\(.\\)/\\L\\\
    1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case $c in\n            [:lower:] )\n              \
    \  output+=\"$(printf '%s' \"${c:0:1}\" | tr '[:upper:]' '[:lower:]')\"\n    \
    \            ;;\n            [:upper:] )\n                output+=\"$(printf '%s'\
    \ \"${c:0:1}\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n         \
    \   * )\n                output+=\"$c\"\n                ;;\n        esac\n  \
    \  done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^^}\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local newstring=\"\
    \"\n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [:lower:] )\n          \
    \      newstring+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n          \
    \      ;;\n            [:upper:] )\n                newstring+=\"$(echo \"$c\"\
    \ | tr '[:lower:]' '[:upper:]')\"\n                ;;\n            * )\n     \
    \           newstring+=\"$c\"\n                ;;\n        esac\n    done\n  \
    \  echo \"$newstring\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:])\n\
    \                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n   \
    \             ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case $c in\n            [:lower:])\n                output+=\"$(printf\
    \ \"%s\" \"${c:0:1}${c:1:1}\")\"\n                ;;\n            [:upper:])\n\
    \                output+=\"$(printf \"%s\" \"${c:0:1}${c:1:1}\")\"\n         \
    \       ;;\n            *)\n                output+=\"$c\"\n                ;;\n\
    \        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [a-z]) output+=\"[A-Z]\";;\n           \
    \ [A-Z]) output+=\"[a-z]\";;\n        esac\n    done\n    echo \"$output\"\n}\n\
    \ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            A) output+=\"a\" ;;\n            B)\
    \ output+=\"b\" ;;\n            C) output+=\"c\" ;;\n            D) output+=\"\
    d\" ;;\n            E) output+=\"e\" ;;\n            F) output+=\"f\" ;;\n   \
    \         G) output+=\"g\" ;;\n            H) output+=\"h\" ;;\n            I)\
    \ output+=\"i\" ;;\n            J) output+=\"j\" ;;\n            K) output+=\"\
    k\" ;;\n            L) output+=\"l\" ;;\n            M) output+=\"m\" ;;\n   \
    \         N) output+=\"n\" ;;\n            O) output+=\"o\" ;;\n            P)\
    \ output+=\"p\" ;;\n            Q) output+=\"q\" ;;\n            R) output+=\"\
    r\" ;;\n            S) output+=\"s\" ;;\n            T) output+=\"t\" ;;\n   \
    \         U) output+=\"u\" ;;\n            V) output+=\"v\" ;;\n            W)\
    \ output+=\"w\" ;;\n            X) output+=\"x\" ;;\n            Y) output+=\"\
    y\" ;;\n            Z) output+=\"z\" ;;\n            *) output+=\"$letter\" ;;\n\
    \        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i = 0; i < ${#string}; i++ )); do\n        local char=\"${string:$i:1}\"\
    \n        case \"$char\" in\n            [a-z]) char=\"[A-Z]\" ;;\n          \
    \  [A-Z]) char=\"[a-z]\" ;;\n        esac\n        output+=\"$char\"\n    done\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                output+=\"$(printf\
    \ \"%s\" \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n        \
    \    [:upper:])\n                output+=\"$(printf \"%s\" \"$c\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n                ;;\n            *)\n                output+=\"\
    $c\"\n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output=\"\"\n\
    \    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        case $c in\n            [a-z])\n                output+=\"[A-Z]${string:$((i+1)):1}\"\
    \n                ;;\n            *)\n                output+=\"$c\"\n       \
    \         ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local char=\"${string:$i:1}\"\
    \n        case \"$char\" in\n            [:lower:])\n                output+=\"\
    $(echo \"$char\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n       \
    \     [:upper:])\n                output+=\"$(echo \"$char\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n                ;;\n            *)\n                output+=\"\
    $char\"\n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\
    \ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:] )\n                output+=\"\
    $(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n          \
    \  [:upper:] )\n                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\
    \n                ;;\n            * )\n                output+=\"$c\"\n      \
    \          ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 2
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    local j\n    for (( i = 0; i < ${#string}; i++ )); do\n   \
    \     j=${i}\n        while [[ $j -le ${#string} ]] && [[ $string ${j:j:1} = ${string:i:1}\
    \ ]]; then\n            string=${string:0:j}${string:j:1}${string:j+1:1}\n   \
    \         j=$(( j + 1 ))\n        done\n        output+=\"${string:i:1}${string:j:1}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp1tuyjn1u.sh: line 14: conditional binary operator expected

    /tmp/tmp1tuyjn1u.sh: line 14: syntax error near `${j:j:1}''

    /tmp/tmp1tuyjn1u.sh: line 14: `        while [[ $j -le ${#string} ]] && [[ $string
    ${j:j:1} = ${string:i:1} ]]; then''

    '
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local result=\"\"\n\
    \    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        if [[ \"$c\" == [a-z] ]]; then\n            c=${c:0:1}\n        elif\
    \ [[ \"$c\" == [A-Z] ]]; then\n            c=${c:0:1}\n            c=${c:1}\n\
    \        fi\n        result+=\"$c\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        output=\"\
    ${output}${string[i]^^}\"\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case $c in\n            [:lower:] )\n                output+=\"$(echo\
    \ \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:]\
    \ )\n                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n\
    \                ;;\n            * )\n                output+=\"$c\"\n       \
    \         ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local newString\n  \
    \  newString=$(echo \"$string\" | sed -e 's/\\(.\\)/\\U\\1/' -e 's/\\(.\\)/\\\
    L\\1/')\n    echo \"$newString\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local new_string=\"\
    \"\n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n\
    \        case \"$char\" in\n            [a-z]) char=${char^^};;\n            [A-Z])\
    \ char=${char^^};;\n            *) char=${char^^};;\n        esac\n        new_string+=\"\
    $char\"\n    done\n    echo \"$new_string\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local newstring=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n\
    \        case \"$char\" in\n            [a-z]) char=u;;\n            [A-Z]) char=l;;\n\
    \            *) char=$char;;\n        esac\n        newstring+=$char\n    done\n\
    \    echo \"$newstring\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1,,}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^}\"\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        output=\"\
    ${output}${string[i]^^}\"\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output\n    for\
    \ (( i=0; i<${#string}; i++ )); do\n        output=\"${string:i:1}${string:i:1}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                c=$(echo \"\
    $c\" | tr '[:upper:]' '[:lower:]')\n                ;;\n            [:upper:])\n\
    \                c=$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\n             \
    \   ;;\n        esac\n        output+=\"$c\"\n    done\n    echo \"$output\"\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local newstring=\"\
    \"\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case $c in\n            A) newstring+=\"a\"\n            ;;\n      \
    \      B) newstring+=\"b\"\n            ;;\n            C) newstring+=\"c\"\n\
    \            ;;\n            D) newstring+=\"d\"\n            ;;\n           \
    \ E) newstring+=\"e\"\n            ;;\n            F) newstring+=\"f\"\n     \
    \       ;;\n            G) newstring+=\"g\"\n            ;;\n            H) newstring+=\"\
    h\"\n            ;;\n            I) newstring+=\"i\"\n            ;;\n       \
    \     J) newstring+=\"j\"\n            ;;\n            K) newstring+=\"k\"\n \
    \           ;;\n            L) newstring+=\"l\"\n            ;;\n            M)\
    \ newstring+=\"m\"\n            ;;\n            N) newstring+=\"n\"\n        \
    \    ;;\n            O) newstring+=\"o\"\n            ;;\n            P) newstring+=\"\
    p\"\n            ;;\n            Q) newstring+=\"q\"\n            ;;\n       \
    \     R) newstring+=\"r\"\n            ;;\n            S) newstring+=\"s\"\n \
    \           ;;\n            T) newstring+=\"t\"\n            ;;\n            U)\
    \ newstring+=\"u\"\n            ;;\n            V) newstring+=\"v\"\n        \
    \    ;;\n            W) newstring+=\"w\"\n            ;;\n            X) newstring+=\"\
    x\"\n            ;;\n            Y) newstring+=\"y\"\n            ;;\n       \
    \     Z) newstring+=\"z\"\n            ;;\n            * ) newstring+=\"$c\"\n\
    \            ;;\n        esac\n    done\n    echo \"$newstring\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case $c in\n            [:lower:] )\n                output+=\"$(echo\
    \ \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:]\
    \ )\n                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n\
    \                ;;\n            * )\n                output+=\"$c\"\n       \
    \         ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local newstring\n  \
    \  newstring=$(echo $string | tr '[:upper:]' '[:lower:]')\n    newstring=$(echo\
    \ $newstring | tr '[:lower:]' '[:upper:]')\n    echo $newstring\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [a-z]) c=\"[A-Z]\" ;;\n\
    \            [A-Z]) c=\"[a-z]\" ;;\n            *) c=\"${c^^}\"\n        esac\n\
    \        output+=\"$c\"\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local upper\n    local\
    \ lower\n    upper=$(echo \"$string\" | tr '[:upper:]' '[:lower:]')\n    lower=$(echo\
    \ \"$string\" | tr '[:lower:]' '[:upper:]')\n    echo \"$lower\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output\n \
    \   output=$(echo \"$string\" | sed -e 's/\\(.\\)/\\U\\1/' -e 's/\\(.\\)/\\L\\\
    1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:])\n\
    \                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n   \
    \             ;;\n            *)\n                output+=\"$c\"\n           \
    \     ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n \
    \   flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                c=\"$(tr '[:upper:]'\
    \ '[:lower:]' <<< \"$c\")\"\n                ;;\n            [:upper:])\n    \
    \            c=\"$(tr '[:lower:]' '[:upper:]' <<< \"$c\")\"\n                ;;\n\
    \        esac\n        output+=\"$c\"\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 2
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local new_string=\"\"\
    \n    local i\n    local j\n    for (( i = 0; i < ${#string}; i++ )); do\n   \
    \     j=${i}\n        while (( j > 0 )) ; do\n            [[ \"${string:$j:1}\"\
    \ == \"[\" ]] && { new_string+=\"\\\\[${string:$j:1}\"; j=$(( j - 1 )); continue;\
    \ }\n            [[ \"${string:$j:1}\" == \"\\\\\" ]] && { new_string+=\"\\\\\\\
    \\\"; j=$(( j - 1 )); continue; }\n            [[ \"${string:$j:1}\" == \"^\"\
    \ ]] && { new_string+=\"\\\\^${string:$j:1}\"; j=$(( j - 1 )); continue; }\n \
    \           [[ \"${string:$j:1}\" == \"_\" ]] && { new_string+=\"\\\\_${string:$j:1}\"\
    ; j=$(( j - 1 )); continue; }\n            [[ \"${string:$j:1}\" == \"-\" ]] &&\
    \ { new_string+=\"\\\\-${string:$j:1}\"; j=$(( j - 1 )); continue; }\n       \
    \     [[ \"${string:$j:1}\" == \".\" ]] && { new_string+=\"\\\\.${string:$j:1}\"\
    ; j=$(( j - 1 )); continue; }\n            [[ \"${string:$j:1}\" == \"$\" ]] &&\
    \ { new_string+=\"\\\\$${string:$j:1}\"; j=$(( j - 1 )); continue; }\n       \
    \     [[ \"${string:$j:1}\" == \"&\" ]] && { new_string+=\"\\\\&${string:$j:1}\"\
    ; j=$(( j - 1 )); continue; }\n            [[ \"${string:$j:1}\" == \"'\" ]] &&\
    \ { new_string+=\"\\\\'${string:$j:1}\"; j=$(( j - 1 )); continue; }\n       \
    \     [[ \"${string:$j:1}\" == \"!\" ]] && { new_string+=\"\\\\!${string:$j:1}\"\
    ; j=$(( j - 1 )); continue; }\n            [[ \"${string:$j:1}\" == \"~\" ]] &&\
    \ { new_string+=\"\\\\~${string:$j:1}\"; j=$(( j - 1 )); continue; }\n       \
    \     [[ \"${string:$j:1}\" == \"*\" ]] && { new_string+=\"\\\\*${string:$j:1}\"\
    ; j=$(( j - 1 )); continue; }\n            [[ \"${string:$j:1}\" == \"(\" ]] &&\
    \ { new_string+=\"\\\\(${string:$j:1}\"; j=$(( j - 1 )); continue; }\n       \
    \     [[ \"${string:\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz4a4pt65.sh: line 39: conditional binary operator expected

    /tmp/tmpz4a4pt65.sh: line 39: syntax error near `VIOLENT''

    /tmp/tmpz4a4pt65.sh: line 39: `    [[ $(candidate "These violent delights have
    violent ends") = "tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS" ]]''

    '
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  local upper=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n  local lower=\"abcdefghijklmnopqrstuvwxyz\"\n  local upper_to_lower=\"${upper//[!$string]}\"\
    \n  local lower_to_upper=\"${lower//[$string]}\"\n  echo \"${upper_to_lower}${lower_to_upper}\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^^}\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:])\n\
    \                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n   \
    \             ;;\n            *)\n                output+=\"$c\"\n           \
    \     ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n \
    \   flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local newstring=\"\
    \"\n    for (( i = 0; i < ${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            a)\n                newstring+=\"B\"\
    \n                ;;\n            b)\n                newstring+=\"a\"\n     \
    \           ;;\n            c)\n                newstring+=\"C\"\n           \
    \     ;;\n            d)\n                newstring+=\"D\"\n                ;;\n\
    \            e)\n                newstring+=\"E\"\n                ;;\n      \
    \      f) \n                newstring+=\"F\"\n                ;;\n           \
    \ g) \n                newstring+=\"G\"\n                ;;\n            h) \n\
    \                newstring+=\"H\"\n                ;;\n            i) \n     \
    \           newstring+=\"I\"\n                ;;\n            j)\n           \
    \     newstring+=\"J\"\n                ;;\n            k) \n                newstring+=\"\
    K\"\n                ;;\n            l) \n                newstring+=\"L\"\n \
    \               ;;\n            m) \n                newstring+=\"M\"\n      \
    \          ;;\n            n) \n                newstring+=\"N\"\n           \
    \     ;;\n            o) \n                newstring+=\"O\"\n                ;;\n\
    \            p) \n                newstring+=\"P\"\n                ;;\n     \
    \       q) \n                newstring+=\"Q\"\n                ;;\n          \
    \  r) \n                newstring+=\"R\"\n                ;;\n            s) \n\
    \                newstring+=\"S\"\n                ;;\n            t) \n     \
    \           newstring+=\"T\"\n                ;;\n            u) \n          \
    \      newstring+=\"U\"\n                ;;\n            v) \n               \
    \ newstring+=\"V\"\n                ;;\n            w) \n                newstring+=\"\
    W\"\n                ;;\n            x) \n                newstring+=\"X\"\n \
    \               ;;\n            y) \n                newstring+=\"Y\"\n      \
    \          ;;\n            z) \n                newstring+=\"Z\"\n           \
    \     ;;\n            *)\n                newstring+=\"$letter\"\n           \
    \     ;;\n        esac\n    done\n    echo \"$newstring\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1,,}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [:lower:])\n           \
    \     c=$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\n                ;;\n    \
    \        [:upper:])\n                c=$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\n\
    \                ;;\n        esac\n        output=\"$output$c\"\n    done\n  \
    \  echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output=\"\"\n\
    \    local i\n    local j\n    for (( i = 0; i < ${#string}; i++ )); do\n    \
    \    j=${string:i:1}\n        output=\"${output}${j:0:1}${j:1:1}\"\n    done\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^}\"\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [:lower:] )\n          \
    \      output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n             \
    \   ;;\n            [:upper:] )\n                output+=\"$(echo \"$c\" | tr\
    \ '[:lower:]' '[:upper:]')\"\n                ;;\n            * )\n          \
    \      output+=\"$c\"\n                ;;\n        esac\n    done\n    echo \"\
    $output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\\
    !\" ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=$1\n  local output\n  output=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  output=$(echo\
    \ \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n  echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [:lower:])\n           \
    \     output+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n              \
    \  ;;\n            [:upper:])\n                output+=\"$(echo \"$c\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n                ;;\n            *)\n                output+=\"\
    $c\"\n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local new_string=\"\"\
    \n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        if [[ $c =~ ^[a-z]$ ]]; then\n            c=${c^^}\n        fi\n    \
    \    new_string+=$c\n    done\n    echo \"$new_string\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1,,}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local newstring=\"\
    \"\n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [:lower:])\n           \
    \     newstring=\"${newstring:+$newstring}$(c)\"\n                ;;\n       \
    \     [:upper:])\n                newstring=\"${newstring:+$newstring}$(c)\"\n\
    \                ;;\n            *)\n                newstring=\"${newstring:+$newstring}$c\"\
    \n                ;;\n        esac\n    done\n    echo \"$newstring\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjinbb3_j.sh: line 15: c: command not found

    /tmp/tmpjinbb3_j.sh: line 15: c: command not found

    /tmp/tmpjinbb3_j.sh: line 15: c: command not found

    /tmp/tmpjinbb3_j.sh: line 15: c: command not found

    '
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output\n    for\
    \ (( i = 0; i < ${#string}; i++ )); do\n        output=\"${string:$i:1}${string:$i:1}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    local j\n    for (( i = 0; i < ${#string}; i++ )); do\n   \
    \     j=${i}\n        output=\"${output}${string[j]}\"\n        if [[ ${string[j]}\
    \ == [a-z] ]]; then\n            output=\"${output}${string[j][1,1]}\"\n     \
    \   fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output\n \
    \   for (( i=0; i<${#string}; i++ )); do\n        output=\"${string:$i:1}${string:$i:1}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local newstring\n  \
    \  newstring=$(echo \"$string\" | sed -e 's/\\(.\\)/\\U\\1/' -e 's/\\(.\\)/\\\
    L\\1/')\n    echo \"$newstring\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1,,}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:] ) output+=\"\\U$c\";;\n      \
    \      [:upper:] ) output+=\"\\L$c\";;\n        esac\n    done\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i = 0; i < ${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            a)\n                letter=A\n     \
    \           ;;\n            b)\n                letter=B\n                ;;\n\
    \            c)\n                letter=C\n                ;;\n            d)\n\
    \                letter=D\n                ;;\n            e)\n              \
    \  letter=E\n                ;;\n            f) letter=F\n                ;;\n\
    \            g) letter=G\n                ;;\n            h) letter=H\n      \
    \          ;;\n            i) letter=I\n                ;;\n            j) letter=J\n\
    \                ;;\n            k) letter=K\n                ;;\n           \
    \ l) letter=L\n                ;;\n            m) letter=M\n                ;;\n\
    \            n) letter=N\n                ;;\n            o) letter=O\n      \
    \          ;;\n            p) letter=P\n                ;;\n            q) letter=Q\n\
    \                ;;\n            r) letter=R\n                ;;\n           \
    \ s) letter=S\n                ;;\n            t) letter=T\n                ;;\n\
    \            u) letter=U\n                ;;\n            v) letter=V\n      \
    \          ;;\n            w) letter=W\n                ;;\n            x) letter=X\n\
    \                ;;\n            y) letter=Y\n                ;;\n           \
    \ z) letter=Z\n                ;;\n            *)\n                letter=${letter:0:1}\n\
    \                letter=${letter:0:1}\n                ;;\n        esac\n    \
    \    output+=\"$letter\"\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local upper\n    upper=$(echo\
    \ \"$string\" | tr '[:upper:]' '[:lower:]')\n    lower=$(echo \"$string\" | tr\
    \ '[:lower:]' '[:upper:]')\n    echo \"$upper$lower\"\n}\n\ncandidate() {\n  \
    \  flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"\
    These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^}\"\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output\n \
    \   output=$(echo \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo\
    \ \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:])\n\
    \                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n   \
    \             ;;\n            *)\n                output+=\"$c\"\n           \
    \     ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n \
    \   flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1,,}\" | sed -e 's/\\(.\\)/\\U\\1/'\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            A) output+=\"a\" ;;\n            B)\
    \ output+=\"b\" ;;\n            C) output+=\"c\" ;;\n            D) output+=\"\
    d\" ;;\n            E) output+=\"e\" ;;\n            F) output+=\"f\" ;;\n   \
    \         G) output+=\"g\" ;;\n            H) output+=\"h\" ;;\n            I)\
    \ output+=\"i\" ;;\n            J) output+=\"j\" ;;\n            K) output+=\"\
    k\" ;;\n            L) output+=\"l\" ;;\n            M) output+=\"m\" ;;\n   \
    \         N) output+=\"n\" ;;\n            O) output+=\"o\" ;;\n            P)\
    \ output+=\"p\" ;;\n            Q) output+=\"q\" ;;\n            R) output+=\"\
    r\" ;;\n            S) output+=\"s\" ;;\n            T) output+=\"t\" ;;\n   \
    \         U) output+=\"u\" ;;\n            V) output+=\"v\" ;;\n            W)\
    \ output+=\"w\" ;;\n            X) output+=\"x\" ;;\n            Y) output+=\"\
    y\" ;;\n            Z) output+=\"z\" ;;\n            *) output+=\"$letter\" ;;\n\
    \        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local newstring=\"\
    \"\n    for (( i=0; i<${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"${letter}\" in\n            A|a) newstring+=\"a\" ;;\n       \
    \     B|b) newstring+=\"b\" ;;\n            C|c) newstring+=\"c\" ;;\n       \
    \     D|d) newstring+=\"d\" ;;\n            E|e) newstring+=\"e\" ;;\n       \
    \     F|f) newstring+=\"f\" ;;\n            G|g) newstring+=\"g\" ;;\n       \
    \     H|h) newstring+=\"h\" ;;\n            I|i) newstring+=\"i\" ;;\n       \
    \     J|j) newstring+=\"j\" ;;\n            K|k) newstring+=\"k\" ;;\n       \
    \     L|l) newstring+=\"l\" ;;\n            M|m) newstring+=\"m\" ;;\n       \
    \     N|n) newstring+=\"n\" ;;\n            O|o) newstring+=\"o\" ;;\n       \
    \     P|p) newstring+=\"p\" ;;\n            Q|q) newstring+=\"q\" ;;\n       \
    \     R|r) newstring+=\"r\" ;;\n            S|s) newstring+=\"s\" ;;\n       \
    \     T|t) newstring+=\"t\" ;;\n            U|u) newstring+=\"u\" ;;\n       \
    \     V|v) newstring+=\"v\" ;;\n            W|w) newstring+=\"w\" ;;\n       \
    \     X|x) newstring+=\"x\" ;;\n            Y|y) newstring+=\"y\" ;;\n       \
    \     Z|z) newstring+=\"z\" ;;\n            *) newstring+=\"${letter}\" ;;\n \
    \       esac\n    done\n    echo \"${newstring}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i = 0; i <= ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        if [[ \"$c\" == [a-z] ]]; then\n            c=\"[A-Z]\"\
    \n        elif [[ \"$c\" == [A-Z] ]]; then\n            c=\"[a-z]\"\n        fi\n\
    \        output+=\"$c\"\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        output=\"${output}${string[i]^^}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:])\n\
    \                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n   \
    \             ;;\n            *)\n                output+=\"$c\"\n           \
    \     ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n \
    \   flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local result=\"\"\n\
    \    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=$(echo\
    \ $string | sed \"s/^.\\(.\\)/\\U\\1/\")\n        result+=\"${c}\"\n    done\n\
    \    echo \"$result\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1,,}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:])\n\
    \                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n   \
    \             ;;\n            *)\n                output+=\"$c\"\n           \
    \     ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n \
    \   flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output=\"\"\n\
    \    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        case \"$c\" in\n            [:lower:] )\n                output+=\"$(echo\
    \ \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:]\
    \ )\n                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n\
    \                ;;\n            * )\n                output+=\"$c\"\n       \
    \         ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:] )\n                output+=\"\
    $(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n          \
    \  [:upper:] )\n                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\
    \n                ;;\n            * )\n                output+=\"$c\"\n      \
    \          ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local new_string=\"\
    \"\n    for (( i = 0; i < ${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            a)\n                new_string=\"${new_string}A\"\
    \n                ;;\n            b)\n                new_string=\"${new_string}B\"\
    \n                ;;\n            c)\n                new_string=\"${new_string}C\"\
    \n                ;;\n            d)\n                new_string=\"${new_string}D\"\
    \n                ;;\n            e)\n                new_string=\"${new_string}E\"\
    \n                ;;\n            f) \n                new_string=\"${new_string}F\"\
    \n                ;;\n            g) \n                new_string=\"${new_string}G\"\
    \n                ;;\n            h) \n                new_string=\"${new_string}H\"\
    \n                ;;\n            i) \n                new_string=\"${new_string}I\"\
    \n                ;;\n            j)\n                new_string=\"${new_string}J\"\
    \n                ;;\n            k) \n                new_string=\"${new_string}K\"\
    \n                ;;\n            l) \n                new_string=\"${new_string}L\"\
    \n                ;;\n            m) \n                new_string=\"${new_string}M\"\
    \n                ;;\n            n) \n                new_string=\"${new_string}N\"\
    \n                ;;\n            o) \n                new_string=\"${new_string}O\"\
    \n                ;;\n            p) \n                new_string=\"${new_string}P\"\
    \n                ;;\n            q) \n                new_string=\"${new_string}Q\"\
    \n                ;;\n            r) \n                new_string=\"${new_string}R\"\
    \n                ;;\n            s) \n                new_string=\"${new_string}S\"\
    \n                ;;\n            t) \n                new_string=\"${new_string}T\"\
    \n                ;;\n            u) \n                new_string=\"${new_string}U\"\
    \n                ;;\n            v) \n                new_string=\"${new_string}V\"\
    \n                ;;\n            w) \n                new_string=\"${new_string}W\"\
    \n                ;;\n            x) \n                new_string=\"${new_string}X\"\
    \n                ;;\n            y) \n                new_string=\"${new_string}Y\"\
    \n                ;;\n            z) \n                new_string=\"${new_string}Z\"\
    \n                ;;\n            *) \n                new_string=\"${new_string}$letter\"\
    \n                ;;\n        esac\n    done\n    echo \"$new_string\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:])\n\
    \                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n   \
    \             ;;\n            *)\n                output+=\"$c\"\n           \
    \     ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n \
    \   flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local newstring=\"\
    \"\n    for (( i=0; i<${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            A) newstring+=\"a\" ;;\n           \
    \ B) newstring+=\"b\" ;;\n            C) newstring+=\"c\" ;;\n            D) newstring+=\"\
    d\" ;;\n            E) newstring+=\"e\" ;;\n            F) newstring+=\"f\" ;;\n\
    \            G) newstring+=\"g\" ;;\n            H) newstring+=\"h\" ;;\n    \
    \        I) newstring+=\"i\" ;;\n            J) newstring+=\"j\" ;;\n        \
    \    K) newstring+=\"k\" ;;\n            L) newstring+=\"l\" ;;\n            M)\
    \ newstring+=\"m\" ;;\n            N) newstring+=\"n\" ;;\n            O) newstring+=\"\
    o\" ;;\n            P) newstring+=\"p\" ;;\n            Q) newstring+=\"q\" ;;\n\
    \            R) newstring+=\"r\" ;;\n            S) newstring+=\"s\" ;;\n    \
    \        T) newstring+=\"t\" ;;\n            U) newstring+=\"u\" ;;\n        \
    \    V) newstring+=\"v\" ;;\n            W) newstring+=\"w\" ;;\n            X)\
    \ newstring+=\"x\" ;;\n            Y) newstring+=\"y\" ;;\n            Z) newstring+=\"\
    z\" ;;\n            *) newstring+=\"$letter\" ;;\n        esac\n    done\n   \
    \ echo \"$newstring\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local newString=\"\
    \"\n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [:lower:] )\n          \
    \      newString+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n          \
    \      ;;\n            [:upper:] )\n                newString+=\"$(echo \"$c\"\
    \ | tr '[:lower:]' '[:upper:]')\"\n                ;;\n            * )\n     \
    \           newString+=\"$c\"\n                ;;\n        esac\n    done\n  \
    \  echo \"$newString\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i = 0; i < ${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            A) output+=\"a\" ;;\n            B)\
    \ output+=\"b\" ;;\n            C) output+=\"c\" ;;\n            D) output+=\"\
    d\" ;;\n            E) output+=\"e\" ;;\n            F) output+=\"f\" ;;\n   \
    \         G) output+=\"g\" ;;\n            H) output+=\"h\" ;;\n            I)\
    \ output+=\"i\" ;;\n            J) output+=\"j\" ;;\n            K) output+=\"\
    k\" ;;\n            L) output+=\"l\" ;;\n            M) output+=\"m\" ;;\n   \
    \         N) output+=\"n\" ;;\n            O) output+=\"o\" ;;\n            P)\
    \ output+=\"p\" ;;\n            Q) output+=\"q\" ;;\n            R) output+=\"\
    r\" ;;\n            S) output+=\"s\" ;;\n            T) output+=\"t\" ;;\n   \
    \         U) output+=\"u\" ;;\n            V) output+=\"v\" ;;\n            W)\
    \ output+=\"w\" ;;\n            X) output+=\"x\" ;;\n            Y) output+=\"\
    y\" ;;\n            Z) output+=\"z\" ;;\n            *) output+=\"$letter\" ;;\n\
    \        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^^}\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output=\"\"\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n\
    \        case \"$char\" in\n            [a-z]) char=${char^^};;\n            [A-Z])\
    \ char=${char^^};;\n            *) char=${char^^};;\n        esac\n        output+=\"\
    ${char}\"\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"\
    ${string:$i:1}\"\n        case \"$c\" in\n            [:lower:])\n           \
    \     output+=\"\\U$c\"\n                ;;\n            [:upper:])\n        \
    \        output+=\"\\L$c\"\n                ;;\n            *)\n             \
    \   output+=\"$c\"\n                ;;\n        esac\n    done\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 2
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output\n \
    \   for (( i = 0; i < ${#string}; i++ )); do\n        [[ \"${string:$i:1}\" ==\
    \ [a-z] ]] && output=\"${output:+${output}${string:$i:1}${string:$i:1}\"} || output=\"\
    ${output:+${output}${string:$i:1}${string:$i:1}\"}\"\n        [[ \"${string:$i:1}\"\
    \ == [A-Z] ]] && output=\"${output:+${output}${string:$i:1}${string:$i:1}\"} ||\
    \ output=\"${output:+${output}${string:$i:1}${string:$i:1}\"}\"\n    done\n  \
    \  echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn3u8vayp.sh: line 25: unexpected EOF while looking for matching
    `"''

    /tmp/tmpn3u8vayp.sh: line 29: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  local output=\"\"\n\
    \  local i\n  for i in \"${string}\"; do\n    case \"$i\" in\n      [a-z]) output+=\"\
    [A-Z]\";;\n      [A-Z]) output+=\"[a-z]\";;\n      *) output+=\"$i\";;\n    esac\n\
    \  done\n  echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local newString=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n\
    \        case \"$char\" in\n            [a-z]) char=${char^^};;\n            [A-Z])\
    \ char=${char^^};;\n            *) newString+=\"$char\";;\n        esac\n    done\n\
    \    echo \"$newString\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  local newstring=\"\"\
    \n  local i\n  for i in \"${string}\"; do\n    case \"$i\" in\n      [a-z]) newstring+=\"\
    [A-Z]\";;\n      [A-Z]) newstring+=\"[a-z]\";;\n      *) newstring+=\"$i\";;\n\
    \    esac\n  done\n  echo \"$newstring\"\n}\n\ncandidate() {\n    flip_case \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^^}\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:] )\n                output+=\"\
    $(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n          \
    \  [:upper:] )\n                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\
    \n                ;;\n            * )\n                output+=\"$c\"\n      \
    \          ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local lower=\"abcdefghijklmnopqrstuvwxyz\"\
    \n    local upper=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local output=\"\"\n    for\
    \ (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\n     \
    \   case \"$c\" in\n            ${lower:0:1})\n                c=$(echo \"$c\"\
    \ | tr '[:lower:]' '[:upper:]')\n                ;;\n            ${upper:0:1})\n\
    \                c=$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\n             \
    \   ;;\n        esac\n        output+=\"$c\"\n    done\n    echo \"$output\"\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^^}\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^^}\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output\n \
    \   output=$(echo \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo\
    \ \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local newstring=\"\
    \"\n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        case \"$c\" in\n            [:lower:] )\n                newstring+=\"\
    $(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n          \
    \  [:upper:] )\n                newstring+=\"$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\
    \n                ;;\n            * )\n                newstring+=\"$c\"\n   \
    \             ;;\n        esac\n    done\n    echo \"$newstring\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local new_string=\"\"\
    \n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        case $c in\n            A|a) new_string+=\"a\" ;;\n            B|b) new_string+=\"\
    b\" ;;\n            C|c) new_string+=\"c\" ;;\n            D|d) new_string+=\"\
    d\" ;;\n            E|e) new_string+=\"e\" ;;\n            F|f) new_string+=\"\
    f\" ;;\n            G|g) new_string+=\"g\" ;;\n            H|h) new_string+=\"\
    h\" ;;\n            I|i) new_string+=\"i\" ;;\n            J|j) new_string+=\"\
    j\" ;;\n            K|k) new_string+=\"k\" ;;\n            L|l) new_string+=\"\
    l\" ;;\n            M|m) new_string+=\"m\" ;;\n            N|n) new_string+=\"\
    n\" ;;\n            O|o) new_string+=\"o\" ;;\n            P|p) new_string+=\"\
    p\" ;;\n            Q|q) new_string+=\"q\" ;;\n            R|r) new_string+=\"\
    r\" ;;\n            S|s) new_string+=\"s\" ;;\n            T|t) new_string+=\"\
    t\" ;;\n            U|u) new_string+=\"u\" ;;\n            V|v) new_string+=\"\
    v\" ;;\n            W|w) new_string+=\"w\" ;;\n            X|x) new_string+=\"\
    x\" ;;\n            Y|y) new_string+=\"y\" ;;\n            Z|z) new_string+=\"\
    z\" ;;\n            *) new_string+=$c ;;\n        esac\n    done\n    echo \"\
    $new_string\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 2
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ $string | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\\
    (.\\)/\\L\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\l\\1/')\n   \
    \ output=$(echo $output | sed -e 's/\\(.\\)/\\u\\1/')\n    output=$(echo $output\
    \ | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\\
    )/\\L\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\l\\1/')\n    output=$(echo\
    \ $output | sed -e 's/\\(.\\)/\\u\\1/')\n    output=$(echo $output | sed -e 's/\\\
    (.\\)/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\L\\1/')\n   \
    \ output=$(echo $output | sed -e 's/\\(.\\)/\\l\\1/')\n    output=$(echo $output\
    \ | sed -e 's/\\(.\\)/\\u\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\\
    )/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo\
    \ $output | sed -e 's/\\(.\\)/\\l\\1/')\n    output=$(echo $output | sed -e 's/\\\
    (.\\)/\\u\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\U\\1/')\n   \
    \ output=$(echo $output | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo $output\
    \ | sed -e 's/\\(.\\)/\\l\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\\
    )/\\u\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo\
    \ $output | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo $output | sed -e 's/\\\
    (.\\)/\\l\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\u\\1/')\n   \
    \ output=$(echo $output | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo $output\
    \ | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\\
    )/\\l\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\\
    !\" ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr26x77uu.sh: line 36: unexpected EOF while looking for matching
    `''''

    /tmp/tmpr26x77uu.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^^}\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    local i\n    local j\n    for (( i = 0; i < ${#string}; i++ )); do\n   \
    \     j=\"${i:i:1}\"\n        output=\"${output}${j:0:1}${j:1:1}${j:2:1}\"\n \
    \   done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n  echo \"${1,,}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\
    \n    for (( i=0; i<${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            [a-z]) output+=\"[A-Z]\";;\n       \
    \     [A-Z]) output+=\"[a-z]\";;\n        esac\n    done\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041682
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n\
    # $1 is a string\nflip_case() {\n    local string=\"$1\"\n    local output\n \
    \   for (( i = 0; i < ${#string}; i++ )); do\n        output=\"${string:$i:1}${string:$i:1}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041681

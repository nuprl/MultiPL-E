language: sh
name: HumanEval_93_encode
results:
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local vowelsCount=$(echo $vowels | wc -w)\n    local vowelsIndex=0\n\
    \    local encodedMessage=\"\"\n    local encodedMessageIndex=0\n    local encodedMessageIndex2=0\n\
    \    local encodedMessageIndex3=0\n    local encodedMessageIndex4=0\n    local\
    \ encodedMessageIndex5=0\n    local encodedMessageIndex6=0\n    local encodedMessageIndex7=0\n\
    \    local encodedMessageIndex8=0\n    local encodedMessageIndex9=0\n    local\
    \ encodedMessageIndex10=0\n    local encodedMessageIndex11=0\n    local encodedMessageIndex12=0\n\
    \    local encodedMessageIndex13=0\n    local encodedMessageIndex14=0\n    local\
    \ encodedMessageIndex15=0\n    local encodedMessageIndex16=0\n    local encodedMessageIndex17=0\n\
    \    local encodedMessageIndex18=0\n    local encodedMessageIndex19=0\n    local\
    \ encodedMessageIndex20=0\n    local encodedMessageIndex21=0\n    local encodedMessageIndex22=0\n\
    \    local encodedMessageIndex23=0\n    local encodedMessageIndex24=0\n    local\
    \ encodedMessageIndex25=0\n    local encodedMessageIndex26=0\n    local encodedMessageIndex27=0\n\
    \    local encodedMessageIndex28=0\n    local encodedMessageIndex29=0\n    local\
    \ encodedMessageIndex30=0\n    local encodedMessageIndex31=0\n    local encodedMessageIndex32=0\n\
    \    local encodedMessageIndex33=0\n    local encodedMessageIndex34=0\n    local\
    \ encodedMessageIndex35=0\n    local encodedMessageIndex36=0\n    local encodedMessageIndex37=0\n\
    \    local encodedMessageIndex38=0\n    local encodedMessageIndex39=0\n    local\
    \ encodedMessageIndex40=0\n    local encodedMessageIndex41=0\n    local encodedMessageIndex42=0\n\
    \    local encodedMessageIndex43=0\n    local encodedMessageIndex44=0\n    local\
    \ encodedMessageIndex45=0\n    local encodedMessageIndex46=0\n    local encodedMessageIndex47=0\n\
    \    local encodedMessageIndex48=0\n    local encodedMessageIndex49=0\n    local\
    \ encodedMessageIndex50=0\n    local encodedMessageIndex51=0\n    local encodedMessageIndex52=0\n\
    \    local encodedMessageIndex53=0\n    local encodedMessageIndex54=0\n    local\
    \ encodedMessageIndex55=0\n    local encodedMessageIndex56=0\n    local encodedMessageIndex57=0\n\
    \    local encodedMessageIndex58=0\n    local encodedMessageIndex\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        local nextLetter=${message:$((i+1)):1}\n   \
    \     if [[ ${vowels:0:1} == ${letter} ]]; then\n            letter=${vowels:1:1}\n\
    \            nextLetter=${vowels:2:1}\n        fi\n        output+=\"${letter}\"\
    \n        output+=\"${nextLetter}\"\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local output=\"\"\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z\"\n  local result=\"\"\n  local vowel_positions=\"\"\n  local letter_positions=\"\
    \"\n  local vowel_letter=\"\"\n  local letter_letter=\"\"\n  local vowel_position=\"\
    \"\n  local letter_position=\"\"\n  local vowel_letter_index=\"\"\n  local letter_letter_index=\"\
    \"\n  local vowel_position_index=\"\"\n  local letter_position_index=\"\"\n  local\
    \ vowel_letter_index2=\"\"\n  local letter_letter_index2=\"\"\n  local vowel_position_index2=\"\
    \"\n  local letter_position_index2=\"\"\n  local vowel_letter_index3=\"\"\n  local\
    \ letter_letter_index3=\"\"\n  local vowel_position_index3=\"\"\n  local letter_position_index3=\"\
    \"\n  local vowel_letter_index4=\"\"\n  local letter_letter_index4=\"\"\n  local\
    \ vowel_position_index4=\"\"\n  local letter_position_index4=\"\"\n  local vowel_letter_index5=\"\
    \"\n  local letter_letter_index5=\"\"\n  local vowel_position_index5=\"\"\n  local\
    \ letter_position_index5=\"\"\n  local vowel_letter_index6=\"\"\n  local letter_letter_index6=\"\
    \"\n  local vowel_position_index6=\"\"\n  local letter_position_index6=\"\"\n\
    \  local vowel_letter_index7=\"\"\n  local letter_letter_index7=\"\"\n  local\
    \ vowel_position_index7=\"\"\n  local letter_position_index7=\"\"\n  local vowel_letter_index8=\"\
    \"\n  local letter_letter_index8=\"\"\n  local vowel_position_index8=\"\"\n  local\
    \ letter_position_index8=\"\"\n  local vowel_letter_index9=\"\"\n  local letter_letter_index9=\"\
    \"\n  local vowel_position_index9=\"\"\n  local letter_position_index9=\"\"\n\
    \  local vowel_letter_index10=\"\"\n  local letter_letter_index10=\"\"\n  local\
    \ vowel_position_index10=\"\"\n  local letter_position_index10=\"\"\n  local vowel_letter_index11=\"\
    \"\n  local letter_letter_index11=\"\"\n  local vowel_position_index11=\"\"\n\
    \  local letter_position_index11=\"\"\n  local vowel_letter_index12=\"\"\n  local\
    \ letter_letter_index12=\"\"\n  local vowel_position_index12=\"\"\n  local letter_position_index12=\"\
    \"\n  local vowel_letter_index13=\"\"\n  local letter_letter\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\
    \n  local output=\"\"\n  local vowel_count=0\n  local vowel_position=0\n  local\
    \ vowel_position2=0\n  local vowel_position3=0\n  local vowel_position4=0\n  local\
    \ vowel_position5=0\n  local vowel_position6=0\n  local vowel_position7=0\n  local\
    \ vowel_position8=0\n  local vowel_position9=0\n  local vowel_position10=0\n \
    \ local vowel_position11=0\n  local vowel_position12=0\n  local vowel_position13=0\n\
    \  local vowel_position14=0\n  local vowel_position15=0\n  local vowel_position16=0\n\
    \  local vowel_position17=0\n  local vowel_position18=0\n  local vowel_position19=0\n\
    \  local vowel_position20=0\n  local vowel_position21=0\n  local vowel_position22=0\n\
    \  local vowel_position23=0\n  local vowel_position24=0\n  local vowel_position25=0\n\
    \  local vowel_position26=0\n  local vowel_position27=0\n  local vowel_position28=0\n\
    \  local vowel_position29=0\n  local vowel_position30=0\n  local vowel_position31=0\n\
    \  local vowel_position32=0\n  local vowel_position33=0\n  local vowel_position34=0\n\
    \  local vowel_position35=0\n  local vowel_position36=0\n  local vowel_position37=0\n\
    \  local vowel_position38=0\n  local vowel_position39=0\n  local vowel_position40=0\n\
    \  local vowel_position41=0\n  local vowel_position42=0\n  local vowel_position43=0\n\
    \  local vowel_position44=0\n  local vowel_position45=0\n  local vowel_position46=0\n\
    \  local vowel_position47=0\n  local vowel_position48=0\n  local vowel_position49=0\n\
    \  local vowel_position50=0\n  local vowel_position51=0\n  local vowel_position52=0\n\
    \  local vowel_position53=0\n  local vowel_position54=0\n  local vowel_position55=0\n\
    \  local vowel_position56=0\n  local vowel_position57=0\n  local vowel_position58=0\n\
    \  local vowel_position59=0\n  local vowel_position60=0\n  local vowel_position\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local output=\"\"\n  local\
    \ vowelCount=0\n  local letterCount=0\n  local currentLetter=\"\"\n  local currentVowel=\"\
    \"\n  local currentVowelCount=0\n  local currentLetterCount=0\n  local currentLetterIndex=0\n\
    \  local currentVowelIndex=0\n  local currentVowelCountIndex=0\n  local currentVowelIndexCount=0\n\
    \  local currentVowelIndexCountIndex=0\n  local currentVowelIndexCountIndex=0\n\
    \  local currentVowelIndexCountIndexCount=0\n  local currentVowelIndexCountIndexCountIndex=0\n\
    \  local currentVowelIndexCountIndexCountIndex=0\n  local currentVowelIndexCountIndexCountIndexCount=0\n\
    \  local currentVowelIndexCountIndexCountIndexCountIndex=0\n  local currentVowelIndexCountIndexCountIndexCountIndex=0\n\
    \  local currentVowelIndexCountIndexCountIndexCountIndex=0\n  local currentVowelIndexCountIndexCountIndexCountIndexCount=0\n\
    \  local currentVowelIndexCountIndexCountIndexCountIndexCountIndex=0\n  local\
    \ currentVowelIndexCountIndexCountIndexCountIndexCountIndex=0\n  local currentVowelIndexCountIndexCountIndexCountIndexCountIndexCount=0\n\
    \  local currentVowelIndexCountIndexCountIndexCountIndexCountIndexCountIndex=0\n\
    \  local currentVowelIndexCountIndexCountIndexCountIndexCountIndexCountIndex=0\n\
    \  local currentVowelIndexCountIndexCountIndexCountIndexCountIndexCountIndexCount=0\n\
    \  local currentVowelIndexCountIndexCountIndexCountIndexCountIndexCountIndexCountIndex=0\n\
    \  local currentVowelIndexCountIndexCountIndexCountIndexCountIndexCountIndexCountIndexCount=0\n\
    \  local currentVowelIndexCountIndexCountIndexCountIndexCountIndexCountIndexCountIndexCountIndex=0\n\
    \  local currentVowelIndexCountIndexCountIndexCountIndexCountIndexCountIndexCountIndexCountIndex=0\n\
    \  local currentVowelIndexCountIndexCountIndexCountIndexCountIndexCountIndexCountIndexCountIndexCount=0\n\
    \  local currentVowelIndexCountIndexCountIndexCountIndexCountIndexCountIndexCountIndexCountIndexCountIndexCount=0\n\
    \  local currentVowelIndexCountIndexCountIndex\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n  \
    \  local vowelCount=0\n    local letterCount=0\n    local letterIndex=0\n    local\
    \ vowelIndex=0\n    local letter\n    local vowel\n    local letter2\n    local\
    \ vowel2\n    local letter3\n    local vowel3\n    local letter4\n    local vowel4\n\
    \    local letter5\n    local vowel5\n    local letter6\n    local vowel6\n  \
    \  local letter7\n    local vowel7\n    local letter8\n    local vowel8\n    local\
    \ letter9\n    local vowel9\n    local letter10\n    local vowel10\n    local\
    \ letter11\n    local vowel11\n    local letter12\n    local vowel12\n    local\
    \ letter13\n    local vowel13\n    local letter14\n    local vowel14\n    local\
    \ letter15\n    local vowel15\n    local letter16\n    local vowel16\n    local\
    \ letter17\n    local vowel17\n    local letter18\n    local vowel18\n    local\
    \ letter19\n    local vowel19\n    local letter20\n    local vowel20\n    local\
    \ letter21\n    local vowel21\n    local letter22\n    local vowel22\n    local\
    \ letter23\n    local vowel23\n    local letter24\n    local vowel24\n    local\
    \ letter25\n    local vowel25\n    local letter26\n    local vowel26\n    local\
    \ letter27\n    local vowel27\n    local letter28\n    local vowel28\n    local\
    \ letter29\n    local vowel29\n    local letter30\n    local vowel30\n    local\
    \ letter31\n    local vowel31\n    local letter32\n    local vowel32\n    local\
    \ letter33\n    local vowel33\n    local letter34\n    local vowel34\n    local\
    \ letter35\n    local vowel35\n    local letter36\n    local vowel36\n    local\
    \ letter37\n    local vowel37\n    local letter38\n    local vowel38\n    local\
    \ letter39\n    local vowel39\n    local letter40\n    local vowel40\n    local\
    \ letter41\n    local vowel41\n    local letter42\n    local vowel42\n    local\
    \ letter43\n    local vowel43\n    local letter44\n    local vowel44\n    local\
    \ letter45\n    local vowel45\n    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=\"\"\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local A\n\
    \  local B\n  local C\n  local D\n  local E\n  local F\n  local G\n  local H\n\
    \  local I\n  local J\n  local K\n  local L\n  local M\n  local N\n  local O\n\
    \  local P\n  local Q\n  local R\n  local S\n  local T\n  local U\n  local V\n\
    \  local W\n  local X\n  local Y\n  local Z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local A\n  local B\n  local C\n  local D\n  local E\n\
    \  local F\n  local G\n  local H\n  local I\n  local J\n  local K\n  local L\n\
    \  local M\n  local N\n  local O\n  local P\n  local Q\n  local R\n  local S\n\
    \  local T\n  local U\n  local V\n  local W\n  local X\n  local Y\n  local Z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local msg2=\"\"\n   \
    \ local vowels=\"aeiouAEIOU\"\n    local vowels2=\"AEIOUaeiou\"\n    local vowels3=\"\
    AEIOUaeiouAEIOU\"\n    local vowels4=\"AEIOUaeiouAEIOUaeiou\"\n    local vowels5=\"\
    AEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels6=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels7=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels8=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowels9=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n\
    \    local vowels11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels14=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels15=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels16=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels17=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUae\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgh_r4k6i.sh: line 46: unexpected EOF while looking for matching
    `"''

    /tmp/tmpgh_r4k6i.sh: line 50: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelPosition=0\n    local letterIndex=0\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterPosition=0\n    \n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"\n    local result=\"\"\n    local vowelCount=0\n    local letterCount=0\n\
    \    local letterIndex=0\n    local vowelIndex=0\n    local letter\n    local\
    \ vowel\n    local letter2\n    local vowel2\n    local letter3\n    local vowel3\n\
    \    local letter4\n    local vowel4\n    local letter5\n    local vowel5\n  \
    \  local letter6\n    local vowel6\n    local letter7\n    local vowel7\n    local\
    \ letter8\n    local vowel8\n    local letter9\n    local vowel9\n    local letter10\n\
    \    local vowel10\n    local letter11\n    local vowel11\n    local letter12\n\
    \    local vowel12\n    local letter13\n    local vowel13\n    local letter14\n\
    \    local vowel14\n    local letter15\n    local vowel15\n    local letter16\n\
    \    local vowel16\n    local letter17\n    local vowel17\n    local letter18\n\
    \    local vowel18\n    local letter19\n    local vowel19\n    local letter20\n\
    \    local vowel20\n    local letter21\n    local vowel21\n    local letter22\n\
    \    local vowel22\n    local letter23\n    local vowel23\n    local letter24\n\
    \    local vowel24\n    local letter25\n    local vowel25\n    local letter26\n\
    \    local vowel26\n    local letter27\n    local vowel27\n    local letter28\n\
    \    local vowel28\n    local letter29\n    local vowel29\n    local letter30\n\
    \    local vowel30\n    local letter31\n    local vowel31\n    local letter32\n\
    \    local vowel32\n    local letter33\n    local vowel33\n    local letter34\n\
    \    local vowel34\n    local letter35\n    local vowel35\n    local letter36\n\
    \    local vowel36\n    local letter37\n    local vowel37\n    local letter38\n\
    \    local vowel38\n    local letter39\n    local vowel39\n    local letter40\n\
    \    local vowel40\n    local letter41\n    local vowel41\n    local letter42\n\
    \    local vowel42\n    local letter43\n    local vowel43\n    local letter44\n\
    \    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelIndex=0\n    local letterIndex=0\n   \
    \ local vowelCount=0\n    local letterCount=0\n    local vowelIndex2=0\n    local\
    \ letterIndex2=0\n    local vowelCount2=0\n    local letterCount2=0\n    local\
    \ vowelIndex3=0\n    local letterIndex3=0\n    local vowelCount3=0\n    local\
    \ letterCount3=0\n    local vowelIndex4=0\n    local letterIndex4=0\n    local\
    \ vowelCount4=0\n    local letterCount4=0\n    local vowelIndex5=0\n    local\
    \ letterIndex5=0\n    local vowelCount5=0\n    local letterCount5=0\n    local\
    \ vowelIndex6=0\n    local letterIndex6=0\n    local vowelCount6=0\n    local\
    \ letterCount6=0\n    local vowelIndex7=0\n    local letterIndex7=0\n    local\
    \ vowelCount7=0\n    local letterCount7=0\n    local vowelIndex8=0\n    local\
    \ letterIndex8=0\n    local vowelCount8=0\n    local letterCount8=0\n    local\
    \ vowelIndex9=0\n    local letterIndex9=0\n    local vowelCount9=0\n    local\
    \ letterCount9=0\n    local vowelIndex10=0\n    local letterIndex10=0\n    local\
    \ vowelCount10=0\n    local letterCount10=0\n    local vowelIndex11=0\n    local\
    \ letterIndex11=0\n    local vowelCount11=0\n    local letterCount11=0\n    local\
    \ vowelIndex12=0\n    local letterIndex12=0\n    local vowelCount12=0\n    local\
    \ letterCount12=0\n    local vowelIndex13=0\n    local letterIndex13=0\n    local\
    \ vowelCount13=0\n    local letterCount13=0\n    local vowelIndex14=0\n    local\
    \ letterIndex14=0\n    local vowelCount14=0\n    local letterCount14=0\n    local\
    \ vowelIndex15=0\n    local letterIndex15=0\n    local vowelCount15=0\n    local\
    \ letterCount15=0\n    local vowelIndex16=0\n    local letterIndex16=0\n    local\
    \ vowelCount16=0\n    local letterCount16=0\n    local vowelIndex17=0\n    local\
    \ letterIndex17=0\n    local vowelCount17=0\n    local letterCount17=0\n    local\
    \ vowelIndex18=0\n    local letterIndex18=0\n    local vowelCount\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local alphabet=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n  local vowels=\"AEIOU\"\n  local output=\"\"\n  local vowelCount=0\n  local\
    \ vowelIndex=0\n  local currentVowel\n  local currentLetter\n  local currentLetterIndex\n\
    \  local currentLetterCount\n  local currentLetterIndex2\n  local currentLetterCount2\n\
    \  local currentLetterIndex3\n  local currentLetterCount3\n  local currentLetterIndex4\n\
    \  local currentLetterCount4\n  local currentLetterIndex5\n  local currentLetterCount5\n\
    \  local currentLetterIndex6\n  local currentLetterCount6\n  local currentLetterIndex7\n\
    \  local currentLetterCount7\n  local currentLetterIndex8\n  local currentLetterCount8\n\
    \  local currentLetterIndex9\n  local currentLetterCount9\n  local currentLetterIndex10\n\
    \  local currentLetterCount10\n  local currentLetterIndex11\n  local currentLetterCount11\n\
    \  local currentLetterIndex12\n  local currentLetterCount12\n  local currentLetterIndex13\n\
    \  local currentLetterCount13\n  local currentLetterIndex14\n  local currentLetterCount14\n\
    \  local currentLetterIndex15\n  local currentLetterCount15\n  local currentLetterIndex16\n\
    \  local currentLetterCount16\n  local currentLetterIndex17\n  local currentLetterCount17\n\
    \  local currentLetterIndex18\n  local currentLetterCount18\n  local currentLetterIndex19\n\
    \  local currentLetterCount19\n  local currentLetterIndex20\n  local currentLetterCount20\n\
    \  local currentLetterIndex21\n  local currentLetterCount21\n  local currentLetterIndex22\n\
    \  local currentLetterCount22\n  local currentLetterIndex23\n  local currentLetterCount23\n\
    \  local currentLetterIndex24\n  local currentLetterCount24\n  local currentLetterIndex25\n\
    \  local currentLetterCount25\n  local currentLetterIndex26\n  local currentLetterCount26\n\
    \  local currentLetterIndex27\n  local currentLetterCount27\n  local currentLetterIndex28\n\
    \  local currentLetterCount28\n  local currentLetterIndex29\n  local currentLetterCount29\n\
    \  local currentLetterIndex30\n  local currentLetterCount30\n  local currentLetterIndex31\n\
    \  local currentLetterCount31\n  local currentLetterIndex32\n  local currentLetterCount32\n\
    \  local current\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowel_positions=$(echo\
    \ $message | tr [a-z] [A-Z])\n    local vowel_positions_sorted=$(echo $vowel_positions\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n    local vowel_positions_sorted_2=$(\
    \ echo $vowel_positions_sorted | sed 's/ /\\n/g' | awk '{print $2}' | sort -n\
    \ | tr '\\n' ' ')\n    local vowel_positions_sorted_2_2=$( echo $vowel_positions_sorted_2\
    \ | sed 's/ /\\n/g' | awk '{print $2}' | sort -n | tr '\\n' ' ')\n    local vowel_positions_sorted_2_3=$(\
    \ echo $vowel_positions_sorted_2 | sed 's/ /\\n/g' | awk '{print $2}' | sort -n\
    \ | tr '\\n' ' ')\n    local vowel_positions_sorted_2_4=$( echo $vowel_positions_sorted_2\
    \ | sed 's/ /\\n/g' | awk '{print $2}' | sort -n | tr '\\n' ' ')\n    local vowel_positions_sorted_2_5=$(\
    \ echo $vowel_positions_sorted_2 | sed 's/ /\\n/g' | awk '{print $2}' | sort -n\
    \ | tr '\\n' ' ')\n    local vowel_positions_sorted_2_6=$( echo $vowel_positions_sorted_2\
    \ | sed 's/ /\\n/g' | awk '{print $2}' | sort -n | tr '\\n' ' ')\n    local vowel_positions_sorted_2_7=$(\
    \ echo $vowel_positions_sorted_2 | sed 's/ /\\n/g' | awk '{print $2}' | sort -n\
    \ | tr '\\n' ' ')\n    local vowel_positions_sorted_2_8=$( echo $vowel_positions_sorted_2\
    \ | sed 's/ /\\n/g' | awk '{print $2}' | sort -n | tr '\\n' ' ')\n    local vowel_positions_sorted_2_9=$(\
    \ echo $vowel_positions_sorted_2 | sed 's/ /\\n/g' | awk '{print $2}' | sort -n\
    \ | tr '\\n' ' ')\n    local vowel_positions_sorted_2_10=$( echo $vowel_positions_sorted_2\
    \ | sed 's/ /\\n/g' | awk '{print $2}' | sort -n | tr '\\n' ' ')\n    local vowel_positions_\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local result=\"\"\n    local vowel\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n  \
    \  local vowelCount=0\n    local letterCount=0\n    local currentLetter=\"\"\n\
    \    local currentVowel=\"\"\n    local currentVowel2=\"\"\n    local currentVowel3=\"\
    \"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\"\n    local currentVowel6=\"\
    \"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\"\n    local currentVowel9=\"\
    \"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\"\n    local currentVowel12=\"\
    \"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\"\n    local currentVowel15=\"\
    \"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\"\n    local currentVowel18=\"\
    \"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\"\n    local currentVowel21=\"\
    \"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\"\n    local currentVowel24=\"\
    \"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\"\n    local currentVowel27=\"\
    \"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\"\n    local currentVowel30=\"\
    \"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\"\n    local currentVowel33=\"\
    \"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\"\n    local currentVowel36=\"\
    \"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\"\n    local currentVowel39=\"\
    \"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\"\n    local currentVowel42=\"\
    \"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\"\n    local currentVowel45=\"\
    \"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\"\n    local currentVowel48=\"\
    \"\n    local currentVowel49=\"\"\n    local currentVowel50=\"\"\n    local currentVowel\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local output=\"\"\n  local\
    \ vowelCount=0\n  local letterCount=0\n  local currentLetter=\"\"\n  local currentVowel=\"\
    \"\n  local currentVowel2=\"\"\n  local currentVowel3=\"\"\n  local currentVowel4=\"\
    \"\n  local currentVowel5=\"\"\n  local currentVowel6=\"\"\n  local currentVowel7=\"\
    \"\n  local currentVowel8=\"\"\n  local currentVowel9=\"\"\n  local currentVowel10=\"\
    \"\n  local currentVowel11=\"\"\n  local currentVowel12=\"\"\n  local currentVowel13=\"\
    \"\n  local currentVowel14=\"\"\n  local currentVowel15=\"\"\n  local currentVowel16=\"\
    \"\n  local currentVowel17=\"\"\n  local currentVowel18=\"\"\n  local currentVowel19=\"\
    \"\n  local currentVowel20=\"\"\n  local currentVowel21=\"\"\n  local currentVowel22=\"\
    \"\n  local currentVowel23=\"\"\n  local currentVowel24=\"\"\n  local currentVowel25=\"\
    \"\n  local currentVowel26=\"\"\n  local currentVowel27=\"\"\n  local currentVowel28=\"\
    \"\n  local currentVowel29=\"\"\n  local currentVowel30=\"\"\n  local currentVowel31=\"\
    \"\n  local currentVowel32=\"\"\n  local currentVowel33=\"\"\n  local currentVowel34=\"\
    \"\n  local currentVowel35=\"\"\n  local currentVowel36=\"\"\n  local currentVowel37=\"\
    \"\n  local currentVowel38=\"\"\n  local currentVowel39=\"\"\n  local currentVowel40=\"\
    \"\n  local currentVowel41=\"\"\n  local currentVowel42=\"\"\n  local currentVowel43=\"\
    \"\n  local currentVowel44=\"\"\n  local currentVowel45=\"\"\n  local currentVowel46=\"\
    \"\n  local currentVowel47=\"\"\n  local currentVowel48=\"\"\n  local currentVowel49=\"\
    \"\n  local currentVowel50=\"\"\n  local currentVowel\n}\n\ncandidate() {\n  \
    \  encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"\n    local vowelsCount=$(echo $vowels | wc -w)\n    local lettersCount=$(echo\
    \ $letters | wc -w)\n    local vowelsCount2=0\n    local lettersCount2=0\n   \
    \ local vowelsCount3=0\n    local lettersCount3=0\n    local vowelsCount4=0\n\
    \    local lettersCount4=0\n    local vowelsCount5=0\n    local lettersCount5=0\n\
    \    local vowelsCount6=0\n    local lettersCount6=0\n    local vowelsCount7=0\n\
    \    local lettersCount7=0\n    local vowelsCount8=0\n    local lettersCount8=0\n\
    \    local vowelsCount9=0\n    local lettersCount9=0\n    local vowelsCount10=0\n\
    \    local lettersCount10=0\n    local vowelsCount11=0\n    local lettersCount11=0\n\
    \    local vowelsCount12=0\n    local lettersCount12=0\n    local vowelsCount13=0\n\
    \    local lettersCount13=0\n    local vowelsCount14=0\n    local lettersCount14=0\n\
    \    local vowelsCount15=0\n    local lettersCount15=0\n    local vowelsCount16=0\n\
    \    local lettersCount16=0\n    local vowelsCount17=0\n    local lettersCount17=0\n\
    \    local vowelsCount18=0\n    local lettersCount18=0\n    local vowelsCount19=0\n\
    \    local lettersCount19=0\n    local vowelsCount20=0\n    local lettersCount20=0\n\
    \    local vowelsCount21=0\n    local lettersCount21=0\n    local vowelsCount22=0\n\
    \    local lettersCount22=0\n    local vowelsCount23=0\n    local lettersCount23=0\n\
    \    local vowelsCount24=0\n    local lettersCount24=0\n    local vowelsCount25=0\n\
    \    local lettersCount25=0\n    local vowelsCount26=0\n    local lettersCount26=0\n\
    \    local vowelsCount27=0\n    local lettersCount27=0\n    local vowelsCount28=0\n\
    \    local lettersCount28=0\n    local vowelsCount29=0\n    local lettersCount29=0\n\
    \    local vowelsCount30=0\n    local lettersCount30=0\n    \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local result=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        local vowel=${vowels:$i:1}\n        local nextLetter=${letters:$((i+1)):1}\n\
    \        if [[ $letter =~ $vowel ]]; then\n            result+=$nextLetter\n \
    \       else\n            result+=$letter\n        fi\n    done\n    echo $result\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local letterCount=0\n\
    \    local vowelCount=0\n    local encodedMessage=\"\"\n    local encodedLetter=\"\
    \"\n    local encodedVowel=\"\"\n    local encodedLetterCount=0\n    local encodedVowelCount=0\n\
    \    local encodedVowelCount2=0\n    local encodedVowelCount3=0\n    local encodedVowelCount4=0\n\
    \    local encodedVowelCount5=0\n    local encodedVowelCount6=0\n    local encodedVowelCount7=0\n\
    \    local encodedVowelCount8=0\n    local encodedVowelCount9=0\n    local encodedVowelCount10=0\n\
    \    local encodedVowelCount11=0\n    local encodedVowelCount12=0\n    local encodedVowelCount13=0\n\
    \    local encodedVowelCount14=0\n    local encodedVowelCount15=0\n    local encodedVowelCount16=0\n\
    \    local encodedVowelCount17=0\n    local encodedVowelCount18=0\n    local encodedVowelCount19=0\n\
    \    local encodedVowelCount20=0\n    local encodedVowelCount21=0\n    local encodedVowelCount22=0\n\
    \    local encodedVowelCount23=0\n    local encodedVowelCount24=0\n    local encodedVowelCount25=0\n\
    \    local encodedVowelCount26=0\n    local encodedVowelCount27=0\n    local encodedVowelCount28=0\n\
    \    local encodedVowelCount29=0\n    local encodedVowelCount30=0\n    local encodedVowelCount31=0\n\
    \    local encodedVowelCount32=0\n    local encodedVowelCount33=0\n    local encodedVowelCount34=0\n\
    \    local encodedVowelCount35=0\n    local encodedVowelCount36=0\n    local encodedVowelCount37=0\n\
    \    local encodedVowelCount38=0\n    local encodedVowelCount39=0\n    local encodedVowelCount40=0\n\
    \    local encodedVowelCount41=0\n    local encodedVowelCount42=0\n    local encodedVowelCount43=0\n\
    \    local encodedVowelCount44=0\n\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local vowelsCount=$(echo $vowels\
    \ | wc -w)\n  local lettersCount=$(echo $letters | wc -w)\n  local vowelsPositions=$(echo\
    \ $vowels | awk '{print $1}')\n  local lettersPositions=$(echo $letters | awk\
    \ '{print $1}')\n  local vowelsPositionsCount=$(echo $vowelsPositions | wc -w)\n\
    \  local lettersPositionsCount=$(echo $lettersPositions | wc -w)\n  local vowelsPositionsCount2=$((vowelsPositionsCount-1))\n\
    \  local lettersPositionsCount2=$((lettersPositionsCount-1))\n  local vowelsPositionsCount3=$((vowelsPositionsCount-2))\n\
    \  local lettersPositionsCount3=$((lettersPositionsCount-2))\n  local vowelsPositionsCount4=$((vowelsPositionsCount-3))\n\
    \  local lettersPositionsCount4=$((lettersPositionsCount-3))\n  local vowelsPositionsCount5=$((vowelsPositionsCount-4))\n\
    \  local lettersPositionsCount5=$((lettersPositionsCount-4))\n  local vowelsPositionsCount6=$((vowelsPositionsCount-5))\n\
    \  local lettersPositionsCount6=$((lettersPositionsCount-5))\n  local vowelsPositionsCount7=$((vowelsPositionsCount-6))\n\
    \  local lettersPositionsCount7=$((lettersPositionsCount-6))\n  local vowelsPositionsCount8=$((vowelsPositionsCount-7))\n\
    \  local lettersPositionsCount8=$((lettersPositionsCount-7))\n  local vowelsPositionsCount9=$((vowelsPositionsCount-8))\n\
    \  local lettersPositionsCount9=$((lettersPositionsCount-8))\n  local vowelsPositionsCount10=$((vowelsPositionsCount-9))\n\
    \  local lettersPositionsCount10=$((lettersPositionsCount-9))\n  local vowelsPositionsCount11=$((vowelsPositionsCount-10))\n\
    \  local lettersPositionsCount11=$((lettersPositionsCount-10))\n  local vowelsPositionsCount12=$((vowelsPositionsCount-11))\n\
    \  local lettersPositionsCount12=$((lettersPositionsCount-11))\n  local vowelsPositionsCount13=$((vowels\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4a4m_od3.sh: line 46: unexpected EOF while looking for matching
    `)''

    /tmp/tmp4a4m_od3.sh: line 63: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local output=\"\"\n    local count=0\n    local vowel_count=0\n\
    \    local vowel_position=0\n    local letter\n    local vowel\n    local letter2\n\
    \    local letter3\n    local letter4\n    local letter5\n    local letter6\n\
    \    local letter7\n    local letter8\n    local letter9\n    local letter10\n\
    \    local letter11\n    local letter12\n    local letter13\n    local letter14\n\
    \    local letter15\n    local letter16\n    local letter17\n    local letter18\n\
    \    local letter19\n    local letter20\n    local letter21\n    local letter22\n\
    \    local letter23\n    local letter24\n    local letter25\n    local letter26\n\
    \    local letter27\n    local letter28\n    local letter29\n    local letter30\n\
    \    local letter31\n    local letter32\n    local letter33\n    local letter34\n\
    \    local letter35\n    local letter36\n    local letter37\n    local letter38\n\
    \    local letter39\n    local letter40\n    local letter41\n    local letter42\n\
    \    local letter43\n    local letter44\n    local letter45\n    local letter46\n\
    \    local letter47\n    local letter48\n    local letter49\n    local letter50\n\
    \    local letter51\n    local letter52\n    local letter53\n    local letter54\n\
    \    local letter55\n    local letter56\n    local letter57\n    local letter58\n\
    \    local letter59\n    local letter60\n    local letter61\n    local letter62\n\
    \    local letter63\n    local letter64\n    local letter65\n    local letter66\n\
    \    local letter67\n    local letter68\n    local letter69\n    local letter70\n\
    \    local letter71\n    local letter72\n    local letter73\n    local letter74\n\
    \    local letter75\n    local letter76\n    local letter77\n    local letter78\n\
    \    local letter79\n    local letter80\n    local letter81\n    local letter82\n\
    \    local letter83\n    local letter84\n    local letter85\n    local letter86\n\
    \    local letter87\n    local letter88\n    local letter89\n    local letter90\n\
    \    local letter91\n    local letter92\n    local letter93\n    local letter94\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local vowelsCount=$(echo $vowels | wc -w)\n  local vowelsArray=($vowels)\n\
    \  local vowelsArrayLength=${#vowelsArray[@]}\n  local vowelsArrayIndex=0\n  local\
    \ vowelsArrayIndex2=0\n  local vowelsArrayIndex3=0\n  local vowelsArrayIndex4=0\n\
    \  local vowelsArrayIndex5=0\n  local vowelsArrayIndex6=0\n  local vowelsArrayIndex7=0\n\
    \  local vowelsArrayIndex8=0\n  local vowelsArrayIndex9=0\n  local vowelsArrayIndex10=0\n\
    \  local vowelsArrayIndex11=0\n  local vowelsArrayIndex12=0\n  local vowelsArrayIndex13=0\n\
    \  local vowelsArrayIndex14=0\n  local vowelsArrayIndex15=0\n  local vowelsArrayIndex16=0\n\
    \  local vowelsArrayIndex17=0\n  local vowelsArrayIndex18=0\n  local vowelsArrayIndex19=0\n\
    \  local vowelsArrayIndex20=0\n  local vowelsArrayIndex21=0\n  local vowelsArrayIndex22=0\n\
    \  local vowelsArrayIndex23=0\n  local vowelsArrayIndex24=0\n  local vowelsArrayIndex25=0\n\
    \  local vowelsArrayIndex26=0\n  local vowelsArrayIndex27=0\n  local vowelsArrayIndex28=0\n\
    \  local vowelsArrayIndex29=0\n  local vowelsArrayIndex30=0\n  local vowelsArrayIndex31=0\n\
    \  local vowelsArrayIndex32=0\n  local vowelsArrayIndex33=0\n  local vowelsArrayIndex34=0\n\
    \  local vowelsArrayIndex35=0\n  local vowelsArrayIndex36=0\n  local vowelsArrayIndex37=0\n\
    \  local vowelsArrayIndex38=0\n  local vowelsArrayIndex39=0\n  local vowelsArrayIndex40=0\n\
    \  local vowelsArrayIndex41=0\n  local vowelsArrayIndex42=0\n  local vowelsArrayIndex43=0\n\
    \  local vowelsArrayIndex44=0\n  local vowelsArrayIndex45=0\n  local vowelsArrayIndex46=0\n\
    \  local vowelsArrayIndex47=0\n  local vowelsArrayIndex48=0\n  local vowelsArrayIndex49=0\n\
    \  local vowelsArrayIndex50=0\n  local vowelsArrayIndex51=0\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local encodedMessage=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n\
    \    local letterIndex=0\n    local letterCount=0\n    local letter=\"\"\n   \
    \ local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \    local encodedLetter=\"\"\n    local encodedLetterIndex=0\n    local encodedLetterCount=0\n\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n  \
    \  local vowel\n    local letter\n    local count\n    local i\n    local j\n\
    \    for ((i=0; i<${#message}; i++)); do\n        letter=${message:$i:1}\n   \
    \     if [[ ${letters:$i:1} = ${vowels} ]]; then\n            count=0\n      \
    \      for ((j=i; j<${#message}; j++)); do\n                if [[ \"${message:$j:1}\"\
    \ != \"${letter}\" ]]; then\n                    count=$((count+1))\n        \
    \        fi\n            done\n            if [[ ${count} -gt 1 ]]; then\n   \
    \             vowel=${letters:$((i+1)):1}\n                result+=\"${vowel}\"\
    \n            else\n                result+=\"${letter}\"\n            fi\n  \
    \      else\n            result+=\"${letter}\"\n        fi\n    done\n    echo\
    \ \"$result\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelPosition=0\n \
    \   local currentVowel\n    local currentLetter\n    local currentLetterPosition\n\
    \    local currentLetterCount\n    local currentLetterPosition2\n    local currentLetterCount2\n\
    \    local currentLetterPosition3\n    local currentLetterCount3\n    local currentLetterPosition4\n\
    \    local currentLetterCount4\n    local currentLetterPosition5\n    local currentLetterCount5\n\
    \    local currentLetterPosition6\n    local currentLetterCount6\n    local currentLetterPosition7\n\
    \    local currentLetterCount7\n    local currentLetterPosition8\n    local currentLetterCount8\n\
    \    local currentLetterPosition9\n    local currentLetterCount9\n    local currentLetterPosition10\n\
    \    local currentLetterCount10\n    local currentLetterPosition11\n    local\
    \ currentLetterCount11\n    local currentLetterPosition12\n    local currentLetterCount12\n\
    \    local currentLetterPosition13\n    local currentLetterCount13\n    local\
    \ currentLetterPosition14\n    local currentLetterCount14\n    local currentLetterPosition15\n\
    \    local currentLetterCount15\n    local currentLetterPosition16\n    local\
    \ currentLetterCount16\n    local currentLetterPosition17\n    local currentLetterCount17\n\
    \    local currentLetterPosition18\n    local currentLetterCount18\n    local\
    \ currentLetterPosition19\n    local currentLetterCount19\n    local currentLetterPosition20\n\
    \    local currentLetterCount20\n    local currentLetterPosition21\n    local\
    \ currentLetterCount21\n    local currentLetterPosition22\n    local currentLetterCount22\n\
    \    local currentLetterPosition23\n    local currentLetterCount23\n    local\
    \ currentLetterPosition24\n    local currentLetterCount24\n    local currentLetterPosition25\n\
    \    local currentLetterCount25\n    local currentLetterPosition26\n    local\
    \ currentLetterCount26\n    local currentLetterPosition27\n    local currentLetterCount27\n\
    \    local currentLetterPosition28\n    local currentLetterCount28\n    local\
    \ currentLetterPosition29\n    local currentLetterCount29\n    local currentLetterPosition30\n\
    \    local currentLetterCount30\n    local currentLetterPosition31\n    local\
    \ currentLetterCount31\n    local currentLetterPosition32\n    local currentLetterCount32\n\
    \    local currentLetterPosition33\n    local currentLetterCount33\n    local\
    \ currentLetterPosition34\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=\"\"\n  local vowel_count=0\n  local vowel_index=0\n  local vowel_letter=\"\
    \"\n  local letter_index=0\n  local letter_letter=\"\"\n  local letter_index2=0\n\
    \  local letter_letter2=\"\"\n  local letter_index3=0\n  local letter_letter3=\"\
    \"\n  local letter_index4=0\n  local letter_letter4=\"\"\n  local letter_index5=0\n\
    \  local letter_letter5=\"\"\n  local letter_index6=0\n  local letter_letter6=\"\
    \"\n  local letter_index7=0\n  local letter_letter7=\"\"\n  local letter_index8=0\n\
    \  local letter_letter8=\"\"\n  local letter_index9=0\n  local letter_letter9=\"\
    \"\n  local letter_index10=0\n  local letter_letter10=\"\"\n  local letter_index11=0\n\
    \  local letter_letter11=\"\"\n  local letter_index12=0\n  local letter_letter12=\"\
    \"\n  local letter_index13=0\n  local letter_letter13=\"\"\n  local letter_index14=0\n\
    \  local letter_letter14=\"\"\n  local letter_index15=0\n  local letter_letter15=\"\
    \"\n  local letter_index16=0\n  local letter_letter16=\"\"\n  local letter_index17=0\n\
    \  local letter_letter17=\"\"\n  local letter_index18=0\n  local letter_letter18=\"\
    \"\n  local letter_index19=0\n  local letter_letter19=\"\"\n  local letter_index20=0\n\
    \  local letter_letter20=\"\"\n  local letter_index21=0\n  local letter_letter21=\"\
    \"\n  local letter_index22=0\n  local letter_letter22=\"\"\n  local letter_index23=0\n\
    \  local letter_letter23=\"\"\n  local letter_index24=0\n  local letter_letter24=\"\
    \"\n  local letter_index25=0\n  local letter_letter25=\"\"\n  local letter_index26=0\n\
    \  local letter_letter26=\"\"\n  local letter_index27=0\n  local letter_letter27=\"\
    \"\n  local letter_index28=0\n  local letter_letter28=\"\"\n  local letter_index29=0\n\
    \  local letter_letter29=\"\"\n  local letter_index30=0\n  local letter_letter30=\"\
    \"\n  local letter_index31=0\n  local letter_letter31=\"\"\n  local letter_index32=0\n\
    \  local letter_letter32=\"\"\n  local letter_index33=0\n  local letter_letter33=\"\
    \"\n  local letter_index34=0\n  local letter_letter\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=\"\"\n  local i\n  local j\n  local k\n  for (( i=0; i<${#message};\
    \ i++ )); do\n    case \"${message:$i:1}\" in\n      a) output+=\"a\" ;;\n   \
    \   e) output+=\"e\" ;;\n      i) output+=\"i\" ;;\n      o) output+=\"o\" ;;\n\
    \      u) output+=\"u\" ;;\n      *) output+=\"${message:$i:1}\" ;;\n    esac\n\
    \  done\n  for (( i=0; i<${#output}; i++ )); do\n    case \"${output:$i:1}\" in\n\
    \      a) output+=\"a\" ;;\n      e) output+=\"e\" ;;\n      i) output+=\"i\"\
    \ ;;\n      o) output+=\"o\" ;;\n      u) output+=\"u\" ;;\n      *) output+=\"\
    ${output:$i:1}\" ;;\n    esac\n  done\n  for (( j=0; j<${#vowels}; j++ )); do\n\
    \    case \"${vowels:$j:1}\" in\n      a) output+=\"a\" ;;\n      e) output+=\"\
    e\" ;;\n      i) output+=\"i\" ;;\n      o) output+=\"o\" ;;\n      u) output+=\"\
    u\" ;;\n      *) output+=\"${vowels:$j:1}\" ;;\n    esac\n  done\n  for (( k=0;\
    \ k<${#output}; k++ )); do\n    case \"${output:$k:1}\" in\n      a) output+=\"\
    a\" ;;\n      e) output+=\"e\" ;;\n      i) output+=\"i\" ;;\n      o) output+=\"\
    o\" ;;\n      u) output+=\"u\" ;;\n      *) output+=\"${output:$k:1}\" ;;\n  \
    \  esac\n  done\n  echo \"$output\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=22 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=19 encoding='utf-8'>
  timestamp: 1660042917
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z\"\n  local output=\"\"\n  local vowelCount=0\n  local letterCount=0\n  local\
    \ letterIndex=0\n  local vowelIndex=0\n  local letterToSwap=\"\"\n  local vowelToSwap=\"\
    \"\n  local letterToSwapIndex=0\n  local vowelToSwapIndex=0\n  local letterToSwapCount=0\n\
    \  local vowelToSwapCount=0\n  local letterToSwapIndex2=0\n  local vowelToSwapIndex2=0\n\
    \  local letterToSwapCount2=0\n  local vowelToSwapCount2=0\n  local letterToSwapIndex3=0\n\
    \  local vowelToSwapIndex3=0\n  local letterToSwapCount3=0\n  local vowelToSwapCount3=0\n\
    \  local letterToSwapIndex4=0\n  local vowelToSwapIndex4=0\n  local letterToSwapCount4=0\n\
    \  local vowelToSwapCount4=0\n  local letterToSwapIndex5=0\n  local vowelToSwapIndex5=0\n\
    \  local letterToSwapCount5=0\n  local vowelToSwapCount5=0\n  local letterToSwapIndex6=0\n\
    \  local vowelToSwapIndex6=0\n  local letterToSwapCount6=0\n  local vowelToSwapCount6=0\n\
    \  local letterToSwapIndex7=0\n  local vowelToSwapIndex7=0\n  local letterToSwapCount7=0\n\
    \  local vowelToSwapCount7=0\n  local letterToSwapIndex8=0\n  local vowelToSwapIndex8=0\n\
    \  local letterToSwapCount8=0\n  local vowelToSwapCount8=0\n  local letterToSwapIndex9=0\n\
    \  local vowelToSwapIndex9=0\n  local letterToSwapCount9=0\n  local vowelToSwapCount9=0\n\
    \  local letterToSwapIndex10=0\n  local vowelToSwapIndex10=0\n  local letterToSwapCount10=0\n\
    \  local vowelToSwapCount10=0\n  local letterToSwapIndex11=0\n  local vowelToSwapIndex11=0\n\
    \  local letterToSwapCount11=0\n  local vowelToSwapCount11=0\n  local letterToSwapIndex12=0\n\
    \  local vowelToSwapIndex12=0\n  local letterToSwapCount12=0\n  \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local output=''\n    local vowelCount=0\n    local vowelIndex=0\n\
    \    local vowelIndex2=0\n    local vowelIndex3=0\n    local vowelIndex4=0\n \
    \   local vowelIndex5=0\n    local vowelIndex6=0\n    local vowelIndex7=0\n  \
    \  local vowelIndex8=0\n    local vowelIndex9=0\n    local vowelIndex10=0\n  \
    \  local vowelIndex11=0\n    local vowelIndex12=0\n    local vowelIndex13=0\n\
    \    local vowelIndex14=0\n    local vowelIndex15=0\n    local vowelIndex16=0\n\
    \    local vowelIndex17=0\n    local vowelIndex18=0\n    local vowelIndex19=0\n\
    \    local vowelIndex20=0\n    local vowelIndex21=0\n    local vowelIndex22=0\n\
    \    local vowelIndex23=0\n    local vowelIndex24=0\n    local vowelIndex25=0\n\
    \    local vowelIndex26=0\n    local vowelIndex27=0\n    local vowelIndex28=0\n\
    \    local vowelIndex29=0\n    local vowelIndex30=0\n    local vowelIndex31=0\n\
    \    local vowelIndex32=0\n    local vowelIndex33=0\n    local vowelIndex34=0\n\
    \    local vowelIndex35=0\n    local vowelIndex36=0\n    local vowelIndex37=0\n\
    \    local vowelIndex38=0\n    local vowelIndex39=0\n    local vowelIndex40=0\n\
    \    local vowelIndex41=0\n    local vowelIndex42=0\n    local vowelIndex43=0\n\
    \    local vowelIndex44=0\n    local vowelIndex45=0\n    local vowelIndex46=0\n\
    \    local vowelIndex47=0\n    local vowelIndex48=0\n    local vowelIndex49=0\n\
    \    local vowelIndex50=0\n    local vowelIndex51=0\n    local vowelIndex52=0\n\
    \    local vowelIndex53=0\n    local vowelIndex54=0\n    local vowelIndex55=0\n\
    \    local vowelIndex56=0\n    local vowelIndex57=0\n    local vowelIndex58=0\n\
    \    local vowelIndex59=0\n    local vowelIndex60=0\n    local vowelIndex61=0\n\
    \    local vowelIndex62=0\n    local vowelIndex63=0\n    local vowelIndex64=0\n\
    \    local vowelIndex65=0\n    local vowelIndex66=0\n    local vowelIndex67=0\n\
    \    local vowelIndex68=0\n    local vowelIndex69=0\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelIndex2=0\n    local vowelIndex3=0\n    local vowelIndex4=0\n    local vowelIndex5=0\n\
    \    local vowelIndex6=0\n    local vowelIndex7=0\n    local vowelIndex8=0\n \
    \   local vowelIndex9=0\n    local vowelIndex10=0\n    local vowelIndex11=0\n\
    \    local vowelIndex12=0\n    local vowelIndex13=0\n    local vowelIndex14=0\n\
    \    local vowelIndex15=0\n    local vowelIndex16=0\n    local vowelIndex17=0\n\
    \    local vowelIndex18=0\n    local vowelIndex19=0\n    local vowelIndex20=0\n\
    \    local vowelIndex21=0\n    local vowelIndex22=0\n    local vowelIndex23=0\n\
    \    local vowelIndex24=0\n    local vowelIndex25=0\n    local vowelIndex26=0\n\
    \    local vowelIndex27=0\n    local vowelIndex28=0\n    local vowelIndex29=0\n\
    \    local vowelIndex30=0\n    local vowelIndex31=0\n    local vowelIndex32=0\n\
    \    local vowelIndex33=0\n    local vowelIndex34=0\n    local vowelIndex35=0\n\
    \    local vowelIndex36=0\n    local vowelIndex37=0\n    local vowelIndex38=0\n\
    \    local vowelIndex39=0\n    local vowelIndex40=0\n    local vowelIndex41=0\n\
    \    local vowelIndex42=0\n    local vowelIndex43=0\n    local vowelIndex44=0\n\
    \    local vowelIndex45=0\n    local vowelIndex46=0\n    local vowelIndex47=0\n\
    \    local vowelIndex48=0\n    local vowelIndex49=0\n    local vowelIndex50=0\n\
    \    local vowelIndex51=0\n    local vowelIndex52=0\n    local vowelIndex53=0\n\
    \    local vowelIndex54=0\n    local vowelIndex55=0\n    local vowelIndex56=0\n\
    \    local vowelIndex57=0\n    local vowelIndex58=0\n    local vowelIndex59=0\n\
    \    local vowelIndex60=0\n    local vowelIndex61=0\n    local vowelIndex62=0\n\
    \    local vowelIndex63=0\n    local vowelIndex64=0\n    local vowelIndex65=0\n\
    \    local vowelIndex66=0\n    local vowelIndex67=0\n    local vowelIndex68=0\n\
    \    local vowelIndex69=0\n    local \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local letters_2=\"bcdefghijklmnopqrstuvwxyz\"\
    \n  local letters_3=\"cdefghijklmnopqrstuvwxyz\"\n  local letters_4=\"defghijklmnopqrstuvwxyz\"\
    \n  local letters_5=\"efghijklmnopqrstuvwxyz\"\n  local letters_6=\"fghijklmnopqrstuvwxyz\"\
    \n  local letters_7=\"ghijklmnopqrstuvwxyz\"\n  local letters_8=\"hijklmnopqrstuvwxyz\"\
    \n  local letters_9=\"ijklmnopqrstuvwxyz\"\n  local letters_10=\"jklmnopqrstuvwxyz\"\
    \n  local letters_11=\"klmnopqrstuvwxyz\"\n  local letters_12=\"lmnopqrstuvwxyz\"\
    \n  local letters_13=\"nopqrstuvwxyz\"\n  local letters_14=\"opqrstuvwxyz\"\n\
    \  local letters_15=\"pqrstuvwxyz\"\n  local letters_16=\"qrstuvwxyz\"\n  local\
    \ letters_17=\"rstuvwxyz\"\n  local letters_18=\"stuvwxyz\"\n  local letters_19=\"\
    tuvwxyz\"\n  local letters_20=\"uvwxyz\"\n  local letters_21=\"vwxyz\"\n  local\
    \ letters_22=\"xwxyz\"\n  local letters_23=\"ywxyz\"\n  local letters_24=\"zwxyz\"\
    \n  local letters_25=\"AEIOUaeiou\"\n  local letters_26=\"bcdefghijklmnopqrstuvwxyz\"\
    \n  local letters_27=\"cdefghijklmnopqrstuvwxyz\"\n  local letters_28=\"defghijklmnopqrstuvwxyz\"\
    \n  local letters_29=\"efghijklmnopqrstuvwxyz\"\n  local letters_30=\"fghijklmnopqrstuvwxyz\"\
    \n  local letters_31=\"ghijklmnopqrstuvwxyz\"\n  local letters_32=\"hijklmnopqrst\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbaqu_g3b.sh: line 61: unexpected EOF while looking for matching
    `"''

    /tmp/tmpbaqu_g3b.sh: line 65: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042912
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local result=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        local vowel=${vowels:$i:1}\n        local letter2=\"\
    ${letters:$((i+1)):1}\"\n        local letter3=\"${letters:$((i+2)):1}\"\n   \
    \     local letter4=\"${letters:$((i+3)):1}\"\n        local letter5=\"${letters:$((i+4)):1}\"\
    \n        local letter6=\"${letters:$((i+5)):1}\"\n        local letter7=\"${letters:$((i+6)):1}\"\
    \n        local letter8=\"${letters:$((i+7)):1}\"\n        local letter9=\"${letters:$((i+8)):1}\"\
    \n        local letter10=\"${letters:$((i+9)):1}\"\n        local letter11=\"\
    ${letters:$((i+10)):1}\"\n        local letter12=\"${letters:$((i+11)):1}\"\n\
    \        local letter13=\"${letters:$((i+12)):1}\"\n        local letter14=\"\
    ${letters:$((i+13)):1}\"\n        local letter15=\"${letters:$((i+14)):1}\"\n\
    \        local letter16=\"${letters:$((i+15)):1}\"\n        local letter17=\"\
    ${letters:$((i+16)):1}\"\n        local letter18=\"${letters:$((i+17)):1}\"\n\
    \        local letter19=\"${letters:$((i+18)):1}\"\n        local letter20=\"\
    ${letters:$((i+19)):1}\"\n        local letter21=\"${letters:$((i+20)):1}\"\n\
    \        local letter22=\"${letters:$((i+21)):1}\"\n        local letter23=\"\
    ${letters:$((i+22)):1}\"\n        local letter24=\"${letters:$((i+23)):1}\"\n\
    \        local letter25=\"${letters:$((i+24)):1}\"\n        local letter26=\"\
    ${letters:$((i+25)):1}\"\n        local letter27=\"${letters:$((i+26)):1}\"\n\
    \        local letter28=\"${letters:$((i+27)):1}\"\n        local letter29=\"\
    ${letters:$((i+28)):1}\"\n        local letter30=\"${letters:\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfjz9d1z7.sh: line 63: unexpected EOF while looking for matching
    `"''

    /tmp/tmpfjz9d1z7.sh: line 67: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n  \
    \  local vowelCount=0\n    local letterCount=0\n    local letterIndex=0\n    local\
    \ vowelIndex=0\n    local letter\n    local vowel\n    local letter2\n    local\
    \ vowel2\n    local letter3\n    local vowel3\n    local letter4\n    local vowel4\n\
    \    local letter5\n    local vowel5\n    local letter6\n    local vowel6\n  \
    \  local letter7\n    local vowel7\n    local letter8\n    local vowel8\n    local\
    \ letter9\n    local vowel9\n    local letter10\n    local vowel10\n    local\
    \ letter11\n    local vowel11\n    local letter12\n    local vowel12\n    local\
    \ letter13\n    local vowel13\n    local letter14\n    local vowel14\n    local\
    \ letter15\n    local vowel15\n    local letter16\n    local vowel16\n    local\
    \ letter17\n    local vowel17\n    local letter18\n    local vowel18\n    local\
    \ letter19\n    local vowel19\n    local letter20\n    local vowel20\n    local\
    \ letter21\n    local vowel21\n    local letter22\n    local vowel22\n    local\
    \ letter23\n    local vowel23\n    local letter24\n    local vowel24\n    local\
    \ letter25\n    local vowel25\n    local letter26\n    local vowel26\n    local\
    \ letter27\n    local vowel27\n    local letter28\n    local vowel28\n    local\
    \ letter29\n    local vowel29\n    local letter30\n    local vowel30\n    local\
    \ letter31\n    local vowel31\n    local letter32\n    local vowel32\n    local\
    \ letter33\n    local vowel33\n    local letter34\n    local vowel34\n    local\
    \ letter35\n    local vowel35\n    local letter36\n    local vowel36\n    local\
    \ letter37\n    local vowel37\n    local letter38\n    local vowel38\n    local\
    \ letter39\n    local vowel39\n    local letter40\n    local vowel40\n    local\
    \ letter41\n    local vowel41\n    local letter42\n    local vowel42\n    local\
    \ letter43\n    local vowel43\n    local letter44\n    local vowel44\n    local\
    \ letter45\n    local vowel45\n    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local msg2=\"\"\n   \
    \ local vowels=\"a e i o u y\"\n    local vowels2=\"a e i o u y\"\n    local vowels3=\"\
    a e i o u y\"\n    local vowels4=\"a e i o u y\"\n    local vowels5=\"a e i o\
    \ u y\"\n    local vowels6=\"a e i o u y\"\n    local vowels7=\"a e i o u y\"\n\
    \    local vowels8=\"a e i o u y\"\n    local vowels9=\"a e i o u y\"\n    local\
    \ vowels10=\"a e i o u y\"\n    local vowels11=\"a e i o u y\"\n    local vowels12=\"\
    a e i o u y\"\n    local vowels13=\"a e i o u y\"\n    local vowels14=\"a e i\
    \ o u y\"\n    local vowels15=\"a e i o u y\"\n    local vowels16=\"a e i o u\
    \ y\"\n    local vowels17=\"a e i o u y\"\n    local vowels18=\"a e i o u y\"\n\
    \    local vowels19=\"a e i o u y\"\n    local vowels20=\"a e i o u y\"\n    local\
    \ vowels21=\"a e i o u y\"\n    local vowels22=\"a e i o u y\"\n    local vowels23=\"\
    a e i o u y\"\n    local vowels24=\"a e i o u y\"\n    local vowels25=\"a e i\
    \ o u y\"\n    local vowels26=\"a e i o u y\"\n    local vowels27=\"a e i o u\
    \ y\"\n    local vowels28=\"a e i o u y\"\n    local vowels29=\"a e i o u y\"\n\
    \    local vowels30=\"a e i o u y\"\n    local vowels31=\"a e i o u y\"\n    local\
    \ vowels32=\"a e i o u y\"\n    local vowels33=\"a e i o u y\"\n    local vowels34=\"\
    a e i o u y\"\n    local vowels35=\"a e i o u y\"\n    local vowels36=\"a e i\
    \ o u y\"\n    local vowels37=\"a e i o u y\"\n    local vowels38=\"a e i o u\
    \ y\"\n    local vowels39=\"a e i o \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsgom0jdf.sh: line 68: unexpected EOF while looking for matching
    `"''

    /tmp/tmpsgom0jdf.sh: line 72: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local vowelsCount=$(echo $vowels\
    \ | wc -w)\n  local lettersCount=$(echo $letters | wc -w)\n  local vowelsIndex=0\n\
    \  local lettersIndex=0\n  local encodedMessage=\"\"\n  local encodedLetter=\"\
    \"\n  local encodedVowel=\"\"\n  local encodedLetterIndex=0\n  local encodedVowelIndex=0\n\
    \  local encodedVowelCount=0\n  local encodedLetterCount=0\n  local encodedVowelIndex2=0\n\
    \  local encodedLetterIndex2=0\n  local encodedVowelCount2=0\n  local encodedLetterCount2=0\n\
    \  local encodedVowelIndex3=0\n  local encodedLetterIndex3=0\n  local encodedVowelCount3=0\n\
    \  local encodedLetterCount3=0\n  local encodedVowelIndex4=0\n  local encodedLetterIndex4=0\n\
    \  local encodedVowelCount4=0\n  local encodedLetterCount4=0\n  local encodedVowelIndex5=0\n\
    \  local encodedLetterIndex5=0\n  local encodedVowelCount5=0\n  local encodedLetterCount5=0\n\
    \  local encodedVowelIndex6=0\n  local encodedLetterIndex6=0\n  local encodedVowelCount6=0\n\
    \  local encodedLetterCount6=0\n  local encodedVowelIndex7=0\n  local encodedLetterIndex7=0\n\
    \  local encodedVowelCount7=0\n  local encodedLetterCount7=0\n  local encodedVowelIndex8=0\n\
    \  local encodedLetterIndex8=0\n  local encodedVowelCount8=0\n  local encodedLetterCount8=0\n\
    \  local encodedVowelIndex9=0\n  local encodedLetterIndex9=0\n  local encodedVowelCount9=0\n\
    \  local encodedLetterCount9=0\n  local encodedVowelIndex10=0\n  local encodedLetterIndex10=0\n\
    \  local encodedVowelCount10=0\n  local encodedLetterCount10=0\n  local encodedVowelIndex11=0\n\
    \  local encodedLetterIndex11=0\n  local encodedVowelCount11=0\n  local encodedLetterCount11=0\n\
    \  local encodedVowelIndex12=0\n  local encodedLetterIndex12=0\n  local encodedVowelCount12\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=''\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelIndex2=0\n    local vowelIndex3=0\n    local vowelIndex4=0\n    local vowelIndex5=0\n\
    \    local vowelIndex6=0\n    local vowelIndex7=0\n    local vowelIndex8=0\n \
    \   local vowelIndex9=0\n    local vowelIndex10=0\n    local vowelIndex11=0\n\
    \    local vowelIndex12=0\n    local vowelIndex13=0\n    local vowelIndex14=0\n\
    \    local vowelIndex15=0\n    local vowelIndex16=0\n    local vowelIndex17=0\n\
    \    local vowelIndex18=0\n    local vowelIndex19=0\n    local vowelIndex20=0\n\
    \    local vowelIndex21=0\n    local vowelIndex22=0\n    local vowelIndex23=0\n\
    \    local vowelIndex24=0\n    local vowelIndex25=0\n    local vowelIndex26=0\n\
    \    local vowelIndex27=0\n    local vowelIndex28=0\n    local vowelIndex29=0\n\
    \    local vowelIndex30=0\n    local vowelIndex31=0\n    local vowelIndex32=0\n\
    \    local vowelIndex33=0\n    local vowelIndex34=0\n    local vowelIndex35=0\n\
    \    local vowelIndex36=0\n    local vowelIndex37=0\n    local vowelIndex38=0\n\
    \    local vowelIndex39=0\n    local vowelIndex40=0\n    local vowelIndex41=0\n\
    \    local vowelIndex42=0\n    local vowelIndex43=0\n    local vowelIndex44=0\n\
    \    local vowelIndex45=0\n    local vowelIndex46=0\n    local vowelIndex47=0\n\
    \    local vowelIndex48=0\n    local vowelIndex49=0\n    local vowelIndex50=0\n\
    \    local vowelIndex51=0\n    local vowelIndex52=0\n    local vowelIndex53=0\n\
    \    local vowelIndex54=0\n    local vowelIndex55=0\n    local vowelIndex56=0\n\
    \    local vowelIndex57=0\n    local vowelIndex58=0\n    local vowelIndex59=0\n\
    \    local vowelIndex60=0\n    local vowelIndex61=0\n    local vowelIndex62=0\n\
    \    local vowelIndex63=0\n    local vowelIndex64=0\n    local vowelIndex65=0\n\
    \    local vowelIndex66=0\n    local vowelIndex67=0\n    local vowelIndex68=0\n\
    \    local vowelIndex69=0\n    local \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels=\"aeiou\"\n    local output=\"\"\
    \n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local vowelsCount=$(echo $vowels\
    \ | wc -w)\n  local lettersCount=$(echo $letters | wc -w)\n  local result=\"\"\
    \n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local \n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local output=\"\"\n    local vowel\n    local letter\n    local index\n \
    \   local count\n    local vowelCount\n    local letterCount\n    local letterIndex\n\
    \    local letterCount2\n    local letterIndex2\n    local letterCount3\n    local\
    \ letterIndex3\n    local letterCount4\n    local letterIndex4\n    local letterCount5\n\
    \    local letterIndex5\n    local letterCount6\n    local letterIndex6\n    local\
    \ letterCount7\n    local letterIndex7\n    local letterCount8\n    local letterIndex8\n\
    \    local letterCount9\n    local letterIndex9\n    local letterCount10\n   \
    \ local letterIndex10\n    local letterCount11\n    local letterIndex11\n    local\
    \ letterCount12\n    local letterIndex12\n    local letterCount13\n    local letterIndex13\n\
    \    local letterCount14\n    local letterIndex14\n    local letterCount15\n \
    \   local letterIndex15\n    local letterCount16\n    local letterIndex16\n  \
    \  local letterCount17\n    local letterIndex17\n    local letterCount18\n   \
    \ local letterIndex18\n    local letterCount19\n    local letterIndex19\n    local\
    \ letterCount20\n    local letterIndex20\n    local letterCount21\n    local letterIndex21\n\
    \    local letterCount22\n    local letterIndex22\n    local letterCount23\n \
    \   local letterIndex23\n    local letterCount24\n    local letterIndex24\n  \
    \  local letterCount25\n    local letterIndex25\n    local letterCount26\n   \
    \ local letterIndex26\n    local letterCount27\n    local letterIndex27\n    local\
    \ letterCount28\n    local letterIndex28\n    local letterCount29\n    local letterIndex29\n\
    \    local letterCount30\n    local letterIndex30\n    local letterCount31\n \
    \   local letterIndex31\n    local letterCount32\n    local letterIndex32\n  \
    \  local letterCount33\n    local letterIndex33\n    local letterCount34\n   \
    \ local letterIndex34\n    local letterCount35\n    local letterIndex35\n    local\
    \ letterCount36\n    local letterIndex36\n    local letterCount37\n    local letter\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowel_count=0\n    local vowel_position=0\n\
    \    local letter_index=0\n    local letter\n    local letter_index2\n    local\
    \ letter2\n    local letter3\n    local letter4\n    local letter5\n    local\
    \ letter6\n    local letter7\n    local letter8\n    local letter9\n    local\
    \ letter10\n    local letter11\n    local letter12\n    local letter13\n    local\
    \ letter14\n    local letter15\n    local letter16\n    local letter17\n    local\
    \ letter18\n    local letter19\n    local letter20\n    local letter21\n    local\
    \ letter22\n    local letter23\n    local letter24\n    local letter25\n    local\
    \ letter26\n    local letter27\n    local letter28\n    local letter29\n    local\
    \ letter30\n    local letter31\n    local letter32\n    local letter33\n    local\
    \ letter34\n    local letter35\n    local letter36\n    local letter37\n    local\
    \ letter38\n    local letter39\n    local letter40\n    local letter41\n    local\
    \ letter42\n    local letter43\n    local letter44\n    local letter45\n    local\
    \ letter46\n    local letter47\n    local letter48\n    local letter49\n    local\
    \ letter50\n    local letter51\n    local letter52\n    local letter53\n    local\
    \ letter54\n    local letter55\n    local letter56\n    local letter57\n    local\
    \ letter58\n    local letter59\n    local letter60\n    local letter61\n    local\
    \ letter62\n    local letter63\n    local letter64\n    local letter65\n    local\
    \ letter66\n    local letter67\n    local letter68\n    local letter69\n    local\
    \ letter70\n    local letter71\n    local letter72\n    local letter73\n    local\
    \ letter74\n    local letter75\n    local letter76\n    local letter77\n    local\
    \ letter78\n    local letter79\n    local letter80\n    local letter81\n    local\
    \ letter82\n    local letter83\n    local letter84\n    local letter85\n    local\
    \ letter86\n    local letter87\n    local letter88\n    local letter89\n    local\
    \ letter90\n    local letter91\n    local letter92\n    local letter93\n    \n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowel_count=0\n    local vowel_position=0\n\
    \    local letter_index=0\n    local letter\n    local letter_index\n    local\
    \ vowel_position\n    local vowel\n    local vowel_index\n    local vowel_position\n\
    \    local vowel_index\n    local letter\n    local letter_index\n    local vowel_position\n\
    \    local vowel\n    local vowel_index\n    local vowel_position\n    local vowel_index\n\
    \    local letter\n    local letter_index\n    local vowel_position\n    local\
    \ vowel\n    local vowel_index\n    local vowel_position\n    local vowel_index\n\
    \    local letter\n    local letter_index\n    local vowel_position\n    local\
    \ vowel\n    local vowel_index\n    local vowel_position\n    local vowel_index\n\
    \    local letter\n    local letter_index\n    local vowel_position\n    local\
    \ vowel\n    local vowel_index\n    local vowel_position\n    local vowel_index\n\
    \    local letter\n    local letter_index\n    local vowel_position\n    local\
    \ vowel\n    local vowel_index\n    local vowel_position\n    local vowel_index\n\
    \    local letter\n    local letter_index\n    local vowel_position\n    local\
    \ vowel\n    local vowel_index\n    local vowel_position\n    local vowel_index\n\
    \    local letter\n    local letter_index\n    local vowel_position\n    local\
    \ vowel\n    local vowel_index\n    local vowel_position\n    local vowel_index\n\
    \    local letter\n    local letter_index\n    local vowel_position\n    local\
    \ vowel\n    local vowel_index\n    local vowel_position\n    local vowel_index\n\
    \    local letter\n    local letter_index\n    local vowel_position\n    local\
    \ vowel\n    local vowel_index\n    local vowel_position\n    local vowel_index\n\
    \    local letter\n    local letter_index\n    local vowel_position\n    local\
    \ vowel\n    local vowel_index\n    local vowel_position\n    local vowel_index\n\
    \    local letter\n    local letter_index\n    local vowel_position\n    local\
    \ vowel\n    local vowel_index\n    local vowel_position\n    local vowel_index\n\
    \    local letter\n    local letter_index\n    local vowel_position\n    local\
    \ vowel\n    local vowel_index\n    local vowel_position\n    local vowel_index\n\
    \    local letter\n    local letter_index\n    local vowel_position\n    \n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n  \
    \  local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    \n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=\"\"\n  local vowelCount=0\n  local vowelIndex=0\n  local currentVowel\n\
    \  local currentLetter\n  local currentLetterIndex\n  local currentLetterIndex2\n\
    \  local currentLetterIndex3\n  local currentLetterIndex4\n  local currentLetterIndex5\n\
    \  local currentLetterIndex6\n  local currentLetterIndex7\n  local currentLetterIndex8\n\
    \  local currentLetterIndex9\n  local currentLetterIndex10\n  local currentLetterIndex11\n\
    \  local currentLetterIndex12\n  local currentLetterIndex13\n  local currentLetterIndex14\n\
    \  local currentLetterIndex15\n  local currentLetterIndex16\n  local currentLetterIndex17\n\
    \  local currentLetterIndex18\n  local currentLetterIndex19\n  local currentLetterIndex20\n\
    \  local currentLetterIndex21\n  local currentLetterIndex22\n  local currentLetterIndex23\n\
    \  local currentLetterIndex24\n  local currentLetterIndex25\n  local currentLetterIndex26\n\
    \  local currentLetterIndex27\n  local currentLetterIndex28\n  local currentLetterIndex29\n\
    \  local currentLetterIndex30\n  local currentLetterIndex31\n  local currentLetterIndex32\n\
    \  local currentLetterIndex33\n  local currentLetterIndex34\n  local currentLetterIndex35\n\
    \  local currentLetterIndex36\n  local currentLetterIndex37\n  local currentLetterIndex38\n\
    \  local currentLetterIndex39\n  local currentLetterIndex40\n  local currentLetterIndex41\n\
    \  local currentLetterIndex42\n  local currentLetterIndex43\n  local currentLetterIndex44\n\
    \  local currentLetterIndex45\n  local currentLetterIndex46\n  local currentLetterIndex47\n\
    \  local currentLetterIndex48\n  local currentLetterIndex49\n  local currentLetterIndex50\n\
    \  local currentLetterIndex51\n  local currentLetterIndex52\n  local currentLetterIndex53\n\
    \  local currentLetterIndex54\n  local currentLetterIndex55\n  local currentLetterIndex56\n\
    \  local currentLetterIndex57\n  local currentLetterIndex58\n  local currentLetterIndex59\n\
    \  local currentLetterIndex60\n  local currentLetterIndex61\n  local currentLetterIndex62\n\
    \  local currentLetterIndex63\n  local currentLetterIndex64\n  local currentLetterIndex65\n\
    \  local currentLetterIndex66\n  local currentLetterIndex\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local encodedMessage=\"\"\n    local vowelCount=0\n    local encodedVowelCount=0\n\
    \    local encodedVowel=\"\"\n    local encodedVowelCount2=0\n    local encodedVowel2=\"\
    \"\n    local encodedVowel3=\"\"\n    local encodedVowel4=\"\"\n    local encodedVowel5=\"\
    \"\n    local encodedVowel6=\"\"\n    local encodedVowel7=\"\"\n    local encodedVowel8=\"\
    \"\n    local encodedVowel9=\"\"\n    local encodedVowel10=\"\"\n    local encodedVowel11=\"\
    \"\n    local encodedVowel12=\"\"\n    local encodedVowel13=\"\"\n    local encodedVowel14=\"\
    \"\n    local encodedVowel15=\"\"\n    local encodedVowel16=\"\"\n    local encodedVowel17=\"\
    \"\n    local encodedVowel18=\"\"\n    local encodedVowel19=\"\"\n    local encodedVowel20=\"\
    \"\n    local encodedVowel21=\"\"\n    local encodedVowel22=\"\"\n    local encodedVowel23=\"\
    \"\n    local encodedVowel24=\"\"\n    local encodedVowel25=\"\"\n    local encodedVowel26=\"\
    \"\n    local encodedVowel27=\"\"\n    local encodedVowel28=\"\"\n    local encodedVowel29=\"\
    \"\n    local encodedVowel30=\"\"\n    local encodedVowel31=\"\"\n    local encodedVowel32=\"\
    \"\n    local encodedVowel33=\"\"\n    local encodedVowel34=\"\"\n    local encodedVowel35=\"\
    \"\n    local encodedVowel36=\"\"\n    local encodedVowel37=\"\"\n    local encodedVowel38=\"\
    \"\n    local encodedVowel39=\"\"\n    local encodedVowel40=\"\"\n    local encodedVowel41=\"\
    \"\n    local encodedVowel42=\"\"\n    local encodedVowel43=\"\"\n    local encodedVowel44=\"\
    \"\n    local encodedVowel45=\"\"\n    local encodedVowel46=\"\"\n    local encodedVowel47=\"\
    \"\n    local encodedVowel48=\"\"\n    local encodedVowel49=\"\"\n    local encodedVowel50=\"\
    \"\n    local encodedVowel51=\"\"\n    local encodedVowel\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local result=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelChar=\"\"\n    local messageChar=\"\"\n    local messageCharCount=0\n \
    \   local messageCharIndex=0\n    local messageCharIndex2=0\n    local messageCharIndex3=0\n\
    \    local messageCharIndex4=0\n    local messageCharIndex5=0\n    local messageCharIndex6=0\n\
    \    local messageCharIndex7=0\n    local messageCharIndex8=0\n    local messageCharIndex9=0\n\
    \    local messageCharIndex10=0\n    local messageCharIndex11=0\n    local messageCharIndex12=0\n\
    \    local messageCharIndex13=0\n    local messageCharIndex14=0\n    local messageCharIndex15=0\n\
    \    local messageCharIndex16=0\n    local messageCharIndex17=0\n    local messageCharIndex18=0\n\
    \    local messageCharIndex19=0\n    local messageCharIndex20=0\n    local messageCharIndex21=0\n\
    \    local messageCharIndex22=0\n    local messageCharIndex23=0\n    local messageCharIndex24=0\n\
    \    local messageCharIndex25=0\n    local messageCharIndex26=0\n    local messageCharIndex27=0\n\
    \    local messageCharIndex28=0\n    local messageCharIndex29=0\n    local messageCharIndex30=0\n\
    \    local messageCharIndex31=0\n    local messageCharIndex32=0\n    local messageCharIndex33=0\n\
    \    local messageCharIndex34=0\n    local messageCharIndex35=0\n    local messageCharIndex36=0\n\
    \    local messageCharIndex37=0\n    local messageCharIndex38=0\n    local messageCharIndex39=0\n\
    \    local messageCharIndex40=0\n    local messageCharIndex41=0\n    local messageCharIndex42=0\n\
    \    local messageCharIndex43=0\n    local messageCharIndex44=0\n    local messageCharIndex45=0\n\
    \    local messageCharIndex46=0\n    local messageCharIndex47=0\n    local messageCharIndex48=0\n\
    \    local messageCharIndex49=0\n    local messageCharIndex50=0\n    local messageCharIndex51=0\n\
    \    local messageCharIndex52=0\n    local messageCharIndex53=0\n    local messageCharIndex54=0\n\
    \    local messageCharIndex55=0\n    local messageCharIndex56=0\n    local messageCharIndex57=0\n\
    \    local messageChar\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local vowel_positions=$(echo $message | tr [a-z] [A-Z])\n    local vowel_positions_sorted=$(echo\
    \ $vowel_positions | tr \" \" \"\\n\" | sort -u)\n    local vowel_positions_sorted_reverse=$(echo\
    \ $vowel_positions_sorted | rev | tr \" \" \"\\n\" | sort -u)\n    local vowel_positions_sorted_reverse_2=$(($(echo\
    \ $vowel_positions_sorted_reverse | wc -l) - 1))\n    local vowel_positions_sorted_reverse_2_position=$(echo\
    \ $vowel_positions_sorted_reverse_2 | cut -d \" \" -f 1)\n    local vowel_positions_sorted_reverse_2_position_position=$(echo\
    \ $vowel_positions_sorted_reverse_2_position | cut -d \" \" -f 1)\n    local vowel_positions_sorted_reverse_2_position_position_position=$(echo\
    \ $vowel_positions_sorted_reverse_2_position_position | cut -d \" \" -f 1)\n \
    \   local vowel_positions_sorted_reverse_2_position_position_position_position=$(echo\
    \ $vowel_positions_sorted_reverse_2_position_position_position_position | cut\
    \ -d \" \" -f 1)\n    local vowel_positions_sorted_reverse_2_position_position_position_position_position=$(echo\
    \ $vowel_positions_sorted_reverse_2_position_position_position_position_position\
    \ | cut -d \" \" -f 1)\n    local vowel_positions_sorted_reverse_2_position_position_position_position_position_position=$(echo\
    \ $vowel_positions_sorted_reverse_2_position_position_position_position_position_position\
    \ | cut -d \" \" -f 1)\n    local vowel_positions_sorted_reverse_2_position_position_position_position_position_position_position=$(echo\
    \ $vowel_positions_sorted_reverse_2_position_position_position_position_position_position_position\
    \ | cut -d \" \" -f 1)\n    local vowel_positions_sorted_reverse_2_position_position_position_position_position_position_position_position=$(echo\
    \ $vowel_positions_sorted_reverse_2_position_position_position_position_position_position_position_position\
    \ | cut -d \" \" -f 1)\n    local vowel_positions_sorted_reverse_2_position_position_position_position_position_position_position_position_position=$(echo\
    \ $vowel_positions_sorted_reverse_2_position_position_position_position_position_position_position_position_position\
    \ | cut -d \" \" -f 1)\n    local vowel_positions_sorted_reverse_2_position_position_position_position_position_position_position_position_position=$(echo\
    \ $vowel_positions_sorted_reverse_2_position_position_position_position_position_position_position_position_position\
    \ | cut -d \" \" -f 1)\n    local vowel_positions_sorted_reverse_2_position_position_position_position_position_position_position_position_position_position=$(echo\
    \ $vowel_positions_sorted_reverse_2_position_position_position_position_position_position_position_position_position_position\
    \ | \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphnv8x7q0.sh: line 31: unexpected EOF while looking for matching
    `)''

    /tmp/tmphnv8x7q0.sh: line 48: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local result=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelIndex2=0\n    local vowelIndex3=0\n    local vowelIndex4=0\n    local vowelIndex5=0\n\
    \    local vowelIndex6=0\n    local vowelIndex7=0\n    local vowelIndex8=0\n \
    \   local vowelIndex9=0\n    local vowelIndex10=0\n    local vowelIndex11=0\n\
    \    local vowelIndex12=0\n    local vowelIndex13=0\n    local vowelIndex14=0\n\
    \    local vowelIndex15=0\n    local vowelIndex16=0\n    local vowelIndex17=0\n\
    \    local vowelIndex18=0\n    local vowelIndex19=0\n    local vowelIndex20=0\n\
    \    local vowelIndex21=0\n    local vowelIndex22=0\n    local vowelIndex23=0\n\
    \    local vowelIndex24=0\n    local vowelIndex25=0\n    local vowelIndex26=0\n\
    \    local vowelIndex27=0\n    local vowelIndex28=0\n    local vowelIndex29=0\n\
    \    local vowelIndex30=0\n    local vowelIndex31=0\n    local vowelIndex32=0\n\
    \    local vowelIndex33=0\n    local vowelIndex34=0\n    local vowelIndex35=0\n\
    \    local vowelIndex36=0\n    local vowelIndex37=0\n    local vowelIndex38=0\n\
    \    local vowelIndex39=0\n    local vowelIndex40=0\n    local vowelIndex41=0\n\
    \    local vowelIndex42=0\n    local vowelIndex43=0\n    local vowelIndex44=0\n\
    \    local vowelIndex45=0\n    local vowelIndex46=0\n    local vowelIndex47=0\n\
    \    local vowelIndex48=0\n    local vowelIndex49=0\n    local vowelIndex50=0\n\
    \    local vowelIndex51=0\n    local vowelIndex52=0\n    local vowelIndex53=0\n\
    \    local vowelIndex54=0\n    local vowelIndex55=0\n    local vowelIndex56=0\n\
    \    local vowelIndex57=0\n    local vowelIndex58=0\n    local vowelIndex59=0\n\
    \    local vowelIndex60=0\n    local vowelIndex61=0\n    local vowelIndex62=0\n\
    \    local vowelIndex63=0\n    local vowelIndex64=0\n    local vowelIndex65=0\n\
    \    local vowelIndex66=0\n    local vowelIndex67=0\n    local vowelIndex68=0\n\
    \    local vowelIndex69=0\n    local \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowel\n    local vowel_position\n    local\
    \ letter\n    local letter_position\n    local letter_index\n    local letter_index2\n\
    \    local letter_index3\n    local letter_index4\n    local letter_index5\n \
    \   local letter_index6\n    local letter_index7\n    local letter_index8\n  \
    \  local letter_index9\n    local letter_index10\n    local letter_index11\n \
    \   local letter_index12\n    local letter_index13\n    local letter_index14\n\
    \    local letter_index15\n    local letter_index16\n    local letter_index17\n\
    \    local letter_index18\n    local letter_index19\n    local letter_index20\n\
    \    local letter_index21\n    local letter_index22\n    local letter_index23\n\
    \    local letter_index24\n    local letter_index25\n    local letter_index26\n\
    \    local letter_index27\n    local letter_index28\n    local letter_index29\n\
    \    local letter_index30\n    local letter_index31\n    local letter_index32\n\
    \    local letter_index33\n    local letter_index34\n    local letter_index35\n\
    \    local letter_index36\n    local letter_index37\n    local letter_index38\n\
    \    local letter_index39\n    local letter_index40\n    local letter_index41\n\
    \    local letter_index42\n    local letter_index43\n    local letter_index44\n\
    \    local letter_index45\n    local letter_index46\n    local letter_index47\n\
    \    local letter_index48\n    local letter_index49\n    local letter_index50\n\
    \    local letter_index51\n    local letter_index52\n    local letter_index53\n\
    \    local letter_index54\n    local letter_index55\n    local letter_index56\n\
    \    local letter_index57\n    local letter_index58\n    local letter_index59\n\
    \    local letter_index60\n    local letter_index61\n    local letter_index62\n\
    \    local letter_index63\n    local letter_index64\n    local letter_index65\n\
    \    local letter_index66\n    local letter_index67\n    local letter_index68\n\
    \    local letter_index69\n    local letter_index70\n    local letter_index71\n\
    \    local letter_index72\n    local letter_index73\n    local letter_index74\n\
    \    local letter_index75\n    local letter_index76\n    local letter_index77\n\
    \    local letter_index78\n    local letter_index\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelIndex2=0\n    local vowelIndex3=0\n    local vowelIndex4=0\n    local vowelIndex5=0\n\
    \    local vowelIndex6=0\n    local vowelIndex7=0\n    local vowelIndex8=0\n \
    \   local vowelIndex9=0\n    local vowelIndex10=0\n    local vowelIndex11=0\n\
    \    local vowelIndex12=0\n    local vowelIndex13=0\n    local vowelIndex14=0\n\
    \    local vowelIndex15=0\n    local vowelIndex16=0\n    local vowelIndex17=0\n\
    \    local vowelIndex18=0\n    local vowelIndex19=0\n    local vowelIndex20=0\n\
    \    local vowelIndex21=0\n    local vowelIndex22=0\n    local vowelIndex23=0\n\
    \    local vowelIndex24=0\n    local vowelIndex25=0\n    local vowelIndex26=0\n\
    \    local vowelIndex27=0\n    local vowelIndex28=0\n    local vowelIndex29=0\n\
    \    local vowelIndex30=0\n    local vowelIndex31=0\n    local vowelIndex32=0\n\
    \    local vowelIndex33=0\n    local vowelIndex34=0\n    local vowelIndex35=0\n\
    \    local vowelIndex36=0\n    local vowelIndex37=0\n    local vowelIndex38=0\n\
    \    local vowelIndex39=0\n    local vowelIndex40=0\n    local vowelIndex41=0\n\
    \    local vowelIndex42=0\n    local vowelIndex43=0\n    local vowelIndex44=0\n\
    \    local vowelIndex45=0\n    local vowelIndex46=0\n    local vowelIndex47=0\n\
    \    local vowelIndex48=0\n    local vowelIndex49=0\n    local vowelIndex50=0\n\
    \    local vowelIndex51=0\n    local vowelIndex52=0\n    local vowelIndex53=0\n\
    \    local vowelIndex54=0\n    local vowelIndex55=0\n    local vowelIndex56=0\n\
    \    local vowelIndex57=0\n    local vowelIndex58=0\n    local vowelIndex59=0\n\
    \    local vowelIndex60=0\n    local vowelIndex61=0\n    local vowelIndex62=0\n\
    \    local vowelIndex63=0\n    local vowelIndex64=0\n    local vowelIndex65=0\n\
    \    local vowelIndex66=0\n    local vowelIndex67=0\n    local vowelIndex68=0\n\
    \    local vowelIndex69=0\n    local \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\
    \n  local result=\"\"\n  local vowel\n  local vowel_index\n  local vowel_position\n\
    \  local vowel_position_index\n  local vowel_position_count\n  local vowel_position_count_index\n\
    \  local vowel_position_count_index\n  local vowel_position_count_index\n  local\
    \ vowel_position_count_index\n  local vowel_position_count_index\n  local vowel_position_count_index\n\
    \  local vowel_position_count_index\n  local vowel_position_count_index\n  local\
    \ vowel_position_count_index\n  local vowel_position_count_index\n  local vowel_position_count_index\n\
    \  local vowel_position_count_index\n  local vowel_position_count_index\n  local\
    \ vowel_position_count_index\n  local vowel_position_count_index\n  local vowel_position_count_index\n\
    \  local vowel_position_count_index\n  local vowel_position_count_index\n  local\
    \ vowel_position_count_index\n  local vowel_position_count_index\n  local vowel_position_count_index\n\
    \  local vowel_position_count_index\n  local vowel_position_count_index\n  local\
    \ vowel_position_count_index\n  local vowel_position_count_index\n  local vowel_position_count_index\n\
    \  local vowel_position_count_index\n  local vowel_position_count_index\n  local\
    \ vowel_position_count_index\n  local vowel_position_count_index\n  local vowel_position_count_index\n\
    \  local vowel_position_count_index\n  local vowel_position_count_index\n  local\
    \ vowel_position_count_index\n  local vowel_position_count_index\n  local vowel_position_count_index\n\
    \  local vowel_position_count_index\n  local vowel_position_count_index\n  local\
    \ vowel_position_count_index\n  local vowel_position_count_index\n  local vowel_position_count_index\n\
    \  local vowel_position_count_index\n  local vowel_position_count_index\n  local\
    \ vowel_position_count_index\n  local vowel_position_count_index\n  local vowel_position_count_index\n\
    \  local vowel_position_count_index\n  local vowel_position_count_index\n  local\
    \ vowel_position_count_index\n  local vowel_position_count_index\n  local vowel_position_count_index\n\
    \  local vowel_position_count_index\n  local vowel_position_count_index\n  local\
    \ vowel_position_count_index\n  local vowel_position_count_index\n  local vowel_position_count_index\n\
    \  local vowel_position_count_index\n  local vowel_position_\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local output=\"\"\n  local\
    \ count=0\n  local vowel\n  local letter\n  local letter2\n  local letter3\n \
    \ local letter4\n  local letter5\n  local letter6\n  local letter7\n  local letter8\n\
    \  local letter9\n  local letter10\n  local letter11\n  local letter12\n  local\
    \ letter13\n  local letter14\n  local letter15\n  local letter16\n  local letter17\n\
    \  local letter18\n  local letter19\n  local letter20\n  local letter21\n  local\
    \ letter22\n  local letter23\n  local letter24\n  local letter25\n  local letter26\n\
    \  local letter27\n  local letter28\n  local letter29\n  local letter30\n  local\
    \ letter31\n  local letter32\n  local letter33\n  local letter34\n  local letter35\n\
    \  local letter36\n  local letter37\n  local letter38\n  local letter39\n  local\
    \ letter40\n  local letter41\n  local letter42\n  local letter43\n  local letter44\n\
    \  local letter45\n  local letter46\n  local letter47\n  local letter48\n  local\
    \ letter49\n  local letter50\n  local letter51\n  local letter52\n  local letter53\n\
    \  local letter54\n  local letter55\n  local letter56\n  local letter57\n  local\
    \ letter58\n  local letter59\n  local letter60\n  local letter61\n  local letter62\n\
    \  local letter63\n  local letter64\n  local letter65\n  local letter66\n  local\
    \ letter67\n  local letter68\n  local letter69\n  local letter70\n  local letter71\n\
    \  local letter72\n  local letter73\n  local letter74\n  local letter75\n  local\
    \ letter76\n  local letter77\n  local letter78\n  local letter79\n  local letter80\n\
    \  local letter81\n  local letter82\n  local letter83\n  local letter84\n  local\
    \ letter85\n  local letter86\n  local letter87\n  local letter88\n  local letter89\n\
    \  local letter90\n  local letter91\n  local letter92\n  local letter93\n\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelIndex2=0\n    local vowelIndex3=0\n    local vowelIndex4=0\n    local vowelIndex5=0\n\
    \    local vowelIndex6=0\n    local vowelIndex7=0\n    local vowelIndex8=0\n \
    \   local vowelIndex9=0\n    local vowelIndex10=0\n    local vowelIndex11=0\n\
    \    local vowelIndex12=0\n    local vowelIndex13=0\n    local vowelIndex14=0\n\
    \    local vowelIndex15=0\n    local vowelIndex16=0\n    local vowelIndex17=0\n\
    \    local vowelIndex18=0\n    local vowelIndex19=0\n    local vowelIndex20=0\n\
    \    local vowelIndex21=0\n    local vowelIndex22=0\n    local vowelIndex23=0\n\
    \    local vowelIndex24=0\n    local vowelIndex25=0\n    local vowelIndex26=0\n\
    \    local vowelIndex27=0\n    local vowelIndex28=0\n    local vowelIndex29=0\n\
    \    local vowelIndex30=0\n    local vowelIndex31=0\n    local vowelIndex32=0\n\
    \    local vowelIndex33=0\n    local vowelIndex34=0\n    local vowelIndex35=0\n\
    \    local vowelIndex36=0\n    local vowelIndex37=0\n    local vowelIndex38=0\n\
    \    local vowelIndex39=0\n    local vowelIndex40=0\n    local vowelIndex41=0\n\
    \    local vowelIndex42=0\n    local vowelIndex43=0\n    local vowelIndex44=0\n\
    \    local vowelIndex45=0\n    local vowelIndex46=0\n    local vowelIndex47=0\n\
    \    local vowelIndex48=0\n    local vowelIndex49=0\n    local vowelIndex50=0\n\
    \    local vowelIndex51=0\n    local vowelIndex52=0\n    local vowelIndex53=0\n\
    \    local vowelIndex54=0\n    local vowelIndex55=0\n    local vowelIndex56=0\n\
    \    local vowelIndex57=0\n    local vowelIndex58=0\n    local vowelIndex59=0\n\
    \    local vowelIndex60=0\n    local vowelIndex61=0\n    local vowelIndex62=0\n\
    \    local vowelIndex63=0\n    local vowelIndex64=0\n    local vowelIndex65=0\n\
    \    local vowelIndex66=0\n    local vowelIndex67=0\n    local vowelIndex68=0\n\
    \    local vowelIndex69=0\n    local \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ letterIndex=0\n    local letterCount=0\n    local letter=\"\"\n    local letterCount=0\n\
    \    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n   \
    \ local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local\
    \ letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n   \
    \ local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n    local\
    \ letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n    local letter=\"\
    \"\n    local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n\
    \    local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n   \
    \ local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n    local\
    \ letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n\
    \    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n   \
    \ local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local\
    \ letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n   \
    \ local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n    local\
    \ letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n    local letter=\"\
    \"\n    local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n\
    \    local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n   \
    \ local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n    local\
    \ letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n\
    \    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n   \
    \ local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local\
    \ letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n   \
    \ local letter=\"\"\n    local \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local msg2=\"\"\n   \
    \ local vowels=\"a e i o u y\" \n    local vowels2=\"a e i o u y\"\n    local\
    \ vowels3=\"a e i o u y\"\n    local vowels4=\"a e i o u y\"\n    local vowels5=\"\
    a e i o u y\"\n    local vowels6=\"a e i o u y\"\n    local vowels7=\"a e i o\
    \ u y\"\n    local vowels8=\"a e i o u y\"\n    local vowels9=\"a e i o u y\"\n\
    \    local vowels10=\"a e i o u y\"\n    local vowels11=\"a e i o u y\"\n    local\
    \ vowels12=\"a e i o u y\"\n    local vowels13=\"a e i o u y\"\n    local vowels14=\"\
    a e i o u y\"\n    local vowels15=\"a e i o u y\"\n    local vowels16=\"a e i\
    \ o u y\"\n    local vowels17=\"a e i o u y\"\n    local vowels18=\"a e i o u\
    \ y\"\n    local vowels19=\"a e i o u y\"\n    local vowels20=\"a e i o u y\"\n\
    \    local vowels21=\"a e i o u y\"\n    local vowels22=\"a e i o u y\"\n    local\
    \ vowels23=\"a e i o u y\"\n    local vowels24=\"a e i o u y\"\n    local vowels25=\"\
    a e i o u y\"\n    local vowels26=\"a e i o u y\"\n    local vowels27=\"a e i\
    \ o u y\"\n    local vowels28=\"a e i o u y\"\n    local vowels29=\"a e i o u\
    \ y\"\n    local vowels30=\"a e i o u y\"\n    local vowels31=\"a e i o u y\"\n\
    \    local vowels32=\"a e i o u y\"\n    local vowels33=\"a e i o u y\"\n    local\
    \ vowels34=\"a e i o u y\"\n    local vowels35=\"a e i o u y\"\n    local vowels36=\"\
    a e i o u y\"\n    local vowels37=\"a e i o u y\"\n    local vowels38=\"a e i\
    \ o u y\"\n    local vowels39=\"a e i \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk9anqi78.sh: line 68: unexpected EOF while looking for matching
    `"''

    /tmp/tmpk9anqi78.sh: line 72: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n  \
    \  local vowelCount=0\n    local letterCount=0\n    local currentLetter=\"\"\n\
    \    local currentVowel=\"\"\n    local currentVowel2=\"\"\n    local currentVowel3=\"\
    \"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\"\n    local currentVowel6=\"\
    \"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\"\n    local currentVowel9=\"\
    \"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\"\n    local currentVowel12=\"\
    \"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\"\n    local currentVowel15=\"\
    \"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\"\n    local currentVowel18=\"\
    \"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\"\n    local currentVowel21=\"\
    \"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\"\n    local currentVowel24=\"\
    \"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\"\n    local currentVowel27=\"\
    \"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\"\n    local currentVowel30=\"\
    \"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\"\n    local currentVowel33=\"\
    \"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\"\n    local currentVowel36=\"\
    \"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\"\n    local currentVowel39=\"\
    \"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\"\n    local currentVowel42=\"\
    \"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\"\n    local currentVowel45=\"\
    \"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\"\n    local currentVowel48=\"\
    \"\n    local currentVowel49=\"\"\n    local currentVowel50=\"\"\n    local currentVowel\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local output=\"\"\n  local\
    \ vowelCount=0\n  local letterCount=0\n  local currentLetter=\"\"\n  local currentVowel=\"\
    \"\n  local currentVowel2=\"\"\n  local currentVowel3=\"\"\n  local currentVowel4=\"\
    \"\n  local currentVowel5=\"\"\n  local currentVowel6=\"\"\n  local currentVowel7=\"\
    \"\n  local currentVowel8=\"\"\n  local currentVowel9=\"\"\n  local currentVowel10=\"\
    \"\n  local currentVowel11=\"\"\n  local currentVowel12=\"\"\n  local currentVowel13=\"\
    \"\n  local currentVowel14=\"\"\n  local currentVowel15=\"\"\n  local currentVowel16=\"\
    \"\n  local currentVowel17=\"\"\n  local currentVowel18=\"\"\n  local currentVowel19=\"\
    \"\n  local currentVowel20=\"\"\n  local currentVowel21=\"\"\n  local currentVowel22=\"\
    \"\n  local currentVowel23=\"\"\n  local currentVowel24=\"\"\n  local currentVowel25=\"\
    \"\n  local currentVowel26=\"\"\n  local currentVowel27=\"\"\n  local currentVowel28=\"\
    \"\n  local currentVowel29=\"\"\n  local currentVowel30=\"\"\n  local currentVowel31=\"\
    \"\n  local currentVowel32=\"\"\n  local currentVowel33=\"\"\n  local currentVowel34=\"\
    \"\n  local currentVowel35=\"\"\n  local currentVowel36=\"\"\n  local currentVowel37=\"\
    \"\n  local currentVowel38=\"\"\n  local currentVowel39=\"\"\n  local currentVowel40=\"\
    \"\n  local currentVowel41=\"\"\n  local currentVowel42=\"\"\n  local currentVowel43=\"\
    \"\n  local currentVowel44=\"\"\n  local currentVowel45=\"\"\n  local currentVowel46=\"\
    \"\n  local currentVowel47=\"\"\n  local currentVowel48=\"\"\n  local currentVowel49=\"\
    \"\n  local currentVowel50=\"\"\n  local currentVowel\n}\n\ncandidate() {\n  \
    \  encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels=\"aeiouAEIOU\"\n  local output=\"\"\n  local i\n  local j\n \
    \ local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  \n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local msg2=\"\"\n   \
    \ local vowels=\"AEIOUaeiou\"\n    local vowels2=\"AEIOUaeiou\"\n    local vowels3=\"\
    AEIOUaeiou\"\n    local vowels4=\"AEIOUaeiou\"\n    local vowels5=\"AEIOUaeiou\"\
    \n    local vowels6=\"AEIOUaeiou\"\n    local vowels7=\"AEIOUaeiou\"\n    local\
    \ vowels8=\"AEIOUaeiou\"\n    local vowels9=\"AEIOUaeiou\"\n    local vowels10=\"\
    AEIOUaeiou\"\n    local vowels11=\"AEIOUaeiou\"\n    local vowels12=\"AEIOUaeiou\"\
    \n    local vowels13=\"AEIOUaeiou\"\n    local vowels14=\"AEIOUaeiou\"\n    local\
    \ vowels15=\"AEIOUaeiou\"\n    local vowels16=\"AEIOUaeiou\"\n    local vowels17=\"\
    AEIOUaeiou\"\n    local vowels18=\"AEIOUaeiou\"\n    local vowels19=\"AEIOUaeiou\"\
    \n    local vowels20=\"AEIOUaeiou\"\n    local vowels21=\"AEIOUaeiou\"\n    local\
    \ vowels22=\"AEIOUaeiou\"\n    local vowels23=\"AEIOUaeiou\"\n    local vowels24=\"\
    AEIOUaeiou\"\n    local vowels25=\"AEIOUaeiou\"\n    local vowels26=\"AEIOUaeiou\"\
    \n    local vowels27=\"AEIOUaeiou\"\n    local vowels28=\"AEIOUaeiou\"\n    local\
    \ vowels29=\"AEIOUaeiou\"\n    local vowels30=\"AEIOUaeiou\"\n    local vowels31=\"\
    AEIOUaeiou\"\n    local vowels32=\"AEIOUaeiou\"\n    local vowels33=\"AEIOUaeiou\"\
    \n    local vowels34=\"AEIOUaeiou\"\n    local vowels35=\"AEIOUaeiou\"\n    local\
    \ vowels36=\"AEIOUaeiou\"\n    local vowels37=\"AEIOUaeiou\"\n    local vowels38=\"\
    AEIOUaeiou\"\n    local vowels39=\"AEIOUae\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpubjkolu0.sh: line 68: unexpected EOF while looking for matching
    `"''

    /tmp/tmpubjkolu0.sh: line 72: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=\"\"\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local alphabet=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n  local vowels=\"AEIOU\"\n  local result=\"\"\n  local i\n  for i in $message;\
    \ do\n    local j\n    for j in $alphabet; do\n      if [[ \"$i\" == \"$j\" ]];\
    \ then\n        i=$j\n      fi\n    done\n    local k\n    for k in $vowels; do\n\
    \      if [[ \"$i\" == \"$k\" ]]; then\n        i=$k\n      fi\n    done\n   \
    \ local l\n    for l in $alphabet; do\n      if [[ \"$i\" == \"$l\" ]]; then\n\
    \        i=$l\n      fi\n    done\n    local m\n    for m in $vowels; do\n   \
    \   if [[ \"$i\" == \"$m\" ]]; then\n        i=$m\n      fi\n    done\n    local\
    \ n\n    for n in $alphabet; do\n      if [[ \"$i\" == \"$n\" ]]; then\n     \
    \   i=$n\n      fi\n    done\n    local o\n    for o in $vowels; do\n      if\
    \ [[ \"$i\" == \"$o\" ]]; then\n        i=$o\n      fi\n    done\n    local p\n\
    \    for p in $alphabet; do\n      if [[ \"$i\" == \"$p\" ]]; then\n        i=$p\n\
    \      fi\n    done\n    local q\n    for q in $vowels; do\n      if [[ \"$i\"\
    \ == \"$q\" ]]; then\n        i=$q\n      fi\n    done\n    local r\n    for r\
    \ in $alphabet; do\n      if [[ \"$i\" == \"$r\" ]]; then\n        i=$r\n    \
    \  fi\n    done\n    local s\n    for s in $vowels; do\n      if [[ \"$i\" ==\
    \ \"$s\" ]]; then\n        i=$s\n      fi\n    done\n    local t\n    for t in\
    \ $alphabet; do\n      if [[ \"$i\" == \"$t\" ]]; then\n        i=$t\n      fi\n\
    \    done\n    local u\n    for u in $vowels; do\n      if [[ \"$i\" == \"$u\"\
    \ ]]; then\n        i=$u\n      fi\n    done\n    local v\n    for v in $alphabet;\
    \ do\n      if [[ \"$i\" == \"$v\" ]]; then\n        i=$v\n      fi\n    done\n\
    \    local w\n    for w in $vowels; do\n      if [[ \"$i\" == \"$w\" ]]; then\n\
    \        i=$w\n      fi\n    done\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplhqa79v4.sh: line 105: syntax error near unexpected token `}''

    /tmp/tmplhqa79v4.sh: line 105: `}''

    '
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ letterIndex=0\n    local letterCount=0\n    local letter=\"\"\n    local letter2=\"\
    \"\n    local letter3=\"\"\n    local letter4=\"\"\n    local letter5=\"\"\n \
    \   local letter6=\"\"\n    local letter7=\"\"\n    local letter8=\"\"\n    local\
    \ letter9=\"\"\n    local letter10=\"\"\n    local letter11=\"\"\n    local letter12=\"\
    \"\n    local letter13=\"\"\n    local letter14=\"\"\n    local letter15=\"\"\n\
    \    local letter16=\"\"\n    local letter17=\"\"\n    local letter18=\"\"\n \
    \   local letter19=\"\"\n    local letter20=\"\"\n    local letter21=\"\"\n  \
    \  local letter22=\"\"\n    local letter23=\"\"\n    local letter24=\"\"\n   \
    \ local letter25=\"\"\n    local letter26=\"\"\n    local letter27=\"\"\n    local\
    \ letter28=\"\"\n    local letter29=\"\"\n    local letter30=\"\"\n    local letter31=\"\
    \"\n    local letter32=\"\"\n    local letter33=\"\"\n    local letter34=\"\"\n\
    \    local letter35=\"\"\n    local letter36=\"\"\n    local letter37=\"\"\n \
    \   local letter38=\"\"\n    local letter39=\"\"\n    local letter40=\"\"\n  \
    \  local letter41=\"\"\n    local letter42=\"\"\n    local letter43=\"\"\n   \
    \ local letter44=\"\"\n    local letter45=\"\"\n    local letter46=\"\"\n    local\
    \ letter47=\"\"\n    local letter48=\"\"\n    local letter49=\"\"\n    local letter50=\"\
    \"\n    local letter51=\"\"\n    local letter52=\"\"\n    local letter53=\"\"\n\
    \    local letter54=\"\"\n    local letter55=\"\"\n    local letter56=\"\"\n \
    \   local letter57=\"\"\n    local letter58=\"\"\n    local letter59=\"\"\n  \
    \  local letter60=\"\"\n    local letter61=\"\"\n    local letter62=\"\"\n   \
    \ local letter63=\"\"\n    local letter64=\"\"\n    local letter65=\"\"\n    local\
    \ letter66=\"\"\n    local letter67=\"\"\n    local letter68=\"\"\n    local letter69=\"\
    \"\n    local letter70=\"\"\n    local letter71=\"\"\n    local letter72=\"\"\n\
    \    local letter73=\"\"\n    local letter74=\"\"\n    local letter75=\"\"\n \
    \   local letter76=\"\"\n    local letter77=\"\"\n    local letter78=\"\"\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local result=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        local nextLetter=${message:$((i+1)):1}\n   \
    \     if [[ ${vowels:$letter:1} == ${vowels:$nextLetter:1} ]]; then\n        \
    \    letter=${vowels:$letter:1}\n            nextLetter=${vowels:$nextLetter:1}\n\
    \        fi\n        result+=\"${letter:1}${nextLetter:1}\"\n    done\n    echo\
    \ \"$result\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local output=\"\"\n    local vowel_count=0\n    local vowel_position=0\n\
    \    local vowel_letter=\"\"\n    local letter=\"\"\n    local letter_index=0\n\
    \    local letter_count=0\n    local letter_position=0\n    local letter_letter=\"\
    \"\n    local letter_index=0\n    local letter_count=0\n    local letter_position=0\n\
    \    local letter_letter=\"\"\n    local letter_index=0\n    local letter_count=0\n\
    \    local letter_position=0\n    local letter_letter=\"\"\n    local letter_index=0\n\
    \    local letter_count=0\n    local letter_position=0\n    local letter_letter=\"\
    \"\n    local letter_index=0\n    local letter_count=0\n    local letter_position=0\n\
    \    local letter_letter=\"\"\n    local letter_index=0\n    local letter_count=0\n\
    \    local letter_position=0\n    local letter_letter=\"\"\n    local letter_index=0\n\
    \    local letter_count=0\n    local letter_position=0\n    local letter_letter=\"\
    \"\n    local letter_index=0\n    local letter_count=0\n    local letter_position=0\n\
    \    local letter_letter=\"\"\n    local letter_index=0\n    local letter_count=0\n\
    \    local letter_position=0\n    local letter_letter=\"\"\n    local letter_index=0\n\
    \    local letter_count=0\n    local letter_position=0\n    local letter_letter=\"\
    \"\n    local letter_index=0\n    local letter_count=0\n    local letter_position=0\n\
    \    local letter_letter=\"\"\n    local letter_index=0\n    local letter_count=0\n\
    \    local letter_position=0\n    local letter_letter=\"\"\n    local letter_index=0\n\
    \    local letter_count=0\n    local letter_position=0\n    local letter_letter=\"\
    \"\n    local letter_index=0\n    local letter_count=0\n    local letter_position=0\n\
    \    local letter_letter=\"\"\n    local letter_index=0\n    local letter_count=0\n\
    \    local letter_position=0\n    local letter_letter=\"\"\n    local letter_index=0\n\
    \    local letter_count=0\n    local letter_position=0\n    local letter_letter=\"\
    \"\n    local letter_index=0\n    local letter_count=0\n    local letter_position=0\n\
    \    local letter_letter=\"\"\n    local letter_index=0\n    local letter_count=0\n\
    \    local letter_position=0\n    local letter_letter=\"\"\n    local letter_index=0\n\
    \    local letter_count=0\n    local letter_position=0\n    local letter_letter=\"\
    \"\n    local letter_index=0\n    local letter_\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local result=\"\"\n    local vowelCount=0\n    local letterCount=0\n    local\
    \ currentLetter=\"\"\n    local currentVowel=\"\"\n    local currentVowel2=\"\"\
    \n    local currentVowel3=\"\"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\
    \"\n    local currentVowel6=\"\"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\
    \"\n    local currentVowel9=\"\"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\
    \"\n    local currentVowel12=\"\"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\
    \"\n    local currentVowel15=\"\"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\
    \"\n    local currentVowel18=\"\"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\
    \"\n    local currentVowel21=\"\"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\
    \"\n    local currentVowel24=\"\"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\
    \"\n    local currentVowel27=\"\"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\
    \"\n    local currentVowel30=\"\"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\
    \"\n    local currentVowel33=\"\"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\
    \"\n    local currentVowel36=\"\"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\
    \"\n    local currentVowel39=\"\"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\
    \"\n    local currentVowel42=\"\"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\
    \"\n    local currentVowel45=\"\"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\
    \"\n    local currentVowel48=\"\"\n    local currentVowel49=\"\"\n    local \n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=\"\"\n  local vowelCount=0\n  local vowelIndex=0\n  local letterIndex=0\n\
    \  local letterCount=0\n  local letter=\"\"\n  local letter2=\"\"\n  local letter3=\"\
    \"\n  local letter4=\"\"\n  local letter5=\"\"\n  local letter6=\"\"\n  local\
    \ letter7=\"\"\n  local letter8=\"\"\n  local letter9=\"\"\n  local letter10=\"\
    \"\n  local letter11=\"\"\n  local letter12=\"\"\n  local letter13=\"\"\n  local\
    \ letter14=\"\"\n  local letter15=\"\"\n  local letter16=\"\"\n  local letter17=\"\
    \"\n  local letter18=\"\"\n  local letter19=\"\"\n  local letter20=\"\"\n  local\
    \ letter21=\"\"\n  local letter22=\"\"\n  local letter23=\"\"\n  local letter24=\"\
    \"\n  local letter25=\"\"\n  local letter26=\"\"\n  local letter27=\"\"\n  local\
    \ letter28=\"\"\n  local letter29=\"\"\n  local letter30=\"\"\n  local letter31=\"\
    \"\n  local letter32=\"\"\n  local letter33=\"\"\n  local letter34=\"\"\n  local\
    \ letter35=\"\"\n  local letter36=\"\"\n  local letter37=\"\"\n  local letter38=\"\
    \"\n  local letter39=\"\"\n  local letter40=\"\"\n  local letter41=\"\"\n  local\
    \ letter42=\"\"\n  local letter43=\"\"\n  local letter44=\"\"\n  local letter45=\"\
    \"\n  local letter46=\"\"\n  local letter47=\"\"\n  local letter48=\"\"\n  local\
    \ letter49=\"\"\n  local letter50=\"\"\n  local letter51=\"\"\n  local letter52=\"\
    \"\n  local letter53=\"\"\n  local letter54=\"\"\n  local letter55=\"\"\n  local\
    \ letter56=\"\"\n  local letter57=\"\"\n  local letter58=\"\"\n  local letter59=\"\
    \"\n  local letter60=\"\"\n  local letter61=\"\"\n  local letter62=\"\"\n  local\
    \ letter63=\"\"\n  local letter64=\"\"\n  local letter65=\"\"\n  local letter66=\"\
    \"\n  local letter67=\"\"\n  local letter68=\"\"\n  local letter69=\"\"\n  local\
    \ letter70=\"\"\n  local letter71=\"\"\n  local letter72=\"\"\n  local letter73=\"\
    \"\n  local letter74=\"\"\n  local letter75=\"\"\n  local letter76=\"\"\n  local\
    \ letter77=\"\"\n  local letter78=\"\"\n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local vowelCount=0\n  local\
    \ letterCount=0\n  local encodedMessage=\"\"\n  local encodedLetter=\"\"\n  local\
    \ encodedVowel=\"\"\n  local encodedLetterCount=0\n  local encodedVowelCount=0\n\
    \  local encodedVowelCount2=0\n  local encodedVowelCount3=0\n  local encodedVowelCount4=0\n\
    \  local encodedVowelCount5=0\n  local encodedVowelCount6=0\n  local encodedVowelCount7=0\n\
    \  local encodedVowelCount8=0\n  local encodedVowelCount9=0\n  local encodedVowelCount10=0\n\
    \  local encodedVowelCount11=0\n  local encodedVowelCount12=0\n  local encodedVowelCount13=0\n\
    \  local encodedVowelCount14=0\n  local encodedVowelCount15=0\n  local encodedVowelCount16=0\n\
    \  local encodedVowelCount17=0\n  local encodedVowelCount18=0\n  local encodedVowelCount19=0\n\
    \  local encodedVowelCount20=0\n  local encodedVowelCount21=0\n  local encodedVowelCount22=0\n\
    \  local encodedVowelCount23=0\n  local encodedVowelCount24=0\n  local encodedVowelCount25=0\n\
    \  local encodedVowelCount26=0\n  local encodedVowelCount27=0\n  local encodedVowelCount28=0\n\
    \  local encodedVowelCount29=0\n  local encodedVowelCount30=0\n  local encodedVowelCount31=0\n\
    \  local encodedVowelCount32=0\n  local encodedVowelCount33=0\n  local encodedVowelCount34=0\n\
    \  local encodedVowelCount35=0\n  local encodedVowelCount36=0\n  local encodedVowelCount37=0\n\
    \  local encodedVowelCount38=0\n  local encodedVowelCount39=0\n  local encodedVowelCount40=0\n\
    \  local encodedVowelCount41=0\n  local encodedVowelCount42=0\n  local encodedVowelCount43=0\n\
    \  local encodedVowelCount44=0\n\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local count=0\n    local vowel_index=0\n    local\
    \ vowel_position=0\n    local letter_index=0\n    local letter_position=0\n  \
    \  local letter\n    local letter_index\n    local letter_position\n    local\
    \ vowel\n    local vowel_index\n    local vowel_position\n    local vowel_letter\n\
    \    local vowel_letter_index\n    local vowel_letter_position\n    local vowel_letter_count\n\
    \    local vowel_letter_position\n    local vowel_letter_count\n    local vowel_letter_position\n\
    \    local vowel_letter_count\n    local vowel_letter_position\n    local vowel_letter_count\n\
    \    local vowel_letter_position\n    local vowel_letter_count\n    local vowel_letter_position\n\
    \    local vowel_letter_count\n    local vowel_letter_position\n    local vowel_letter_count\n\
    \    local vowel_letter_position\n    local vowel_letter_count\n    local vowel_letter_position\n\
    \    local vowel_letter_count\n    local vowel_letter_position\n    local vowel_letter_count\n\
    \    local vowel_letter_position\n    local vowel_letter_count\n    local vowel_letter_position\n\
    \    local vowel_letter_count\n    local vowel_letter_position\n    local vowel_letter_count\n\
    \    local vowel_letter_position\n    local vowel_letter_count\n    local vowel_letter_position\n\
    \    local vowel_letter_count\n    local vowel_letter_position\n    local vowel_letter_count\n\
    \    local vowel_letter_position\n    local vowel_letter_count\n    local vowel_letter_position\n\
    \    local vowel_letter_count\n    local vowel_letter_position\n    local vowel_letter_count\n\
    \    local vowel_letter_position\n    local vowel_letter_count\n    local vowel_letter_position\n\
    \    local vowel_letter_count\n    local vowel_letter_position\n    local vowel_letter_count\n\
    \    local vowel_letter_position\n    local vowel_letter_count\n    local vowel_letter_position\n\
    \    local vowel_letter_count\n    local vowel_letter_position\n    local vowel_letter_count\n\
    \    local vowel_letter_position\n    local vowel_letter_count\n    local vowel_letter_position\n\
    \    local vowel_letter_count\n    local vowel_letter_position\n    local vowel_letter_count\n\
    \    local vowel_letter_position\n    local vowel_letter_count\n    local vowel_letter_position\n\
    \    local vowel_letter_\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowelsCount=0\n\
    \    local lettersCount=0\n    local encodedMessage=\"\"\n    local encodedLetter=\"\
    \"\n    local encodedVowel=\"\"\n    local encodedLetterIndex=0\n    local encodedVowelIndex=0\n\
    \    local encodedVowelIndex2=0\n    local encodedLetterIndex2=0\n    local encodedVowelIndex3=0\n\
    \    local encodedLetterIndex3=0\n    local encodedVowelIndex4=0\n    local encodedLetterIndex4=0\n\
    \    local encodedVowelIndex5=0\n    local encodedLetterIndex5=0\n    local encodedVowelIndex6=0\n\
    \    local encodedLetterIndex6=0\n    local encodedVowelIndex7=0\n    local encodedLetterIndex7=0\n\
    \    local encodedVowelIndex8=0\n    local encodedLetterIndex8=0\n    local encodedVowelIndex9=0\n\
    \    local encodedLetterIndex9=0\n    local encodedVowelIndex10=0\n    local encodedLetterIndex10=0\n\
    \    local encodedVowelIndex11=0\n    local encodedLetterIndex11=0\n    local\
    \ encodedVowelIndex12=0\n    local encodedLetterIndex12=0\n    local encodedVowelIndex13=0\n\
    \    local encodedLetterIndex13=0\n    local encodedVowelIndex14=0\n    local\
    \ encodedLetterIndex14=0\n    local encodedVowelIndex15=0\n    local encodedLetterIndex15=0\n\
    \    local encodedVowelIndex16=0\n    local encodedLetterIndex16=0\n    local\
    \ encodedVowelIndex17=0\n    local encodedLetterIndex17=0\n    local encodedVowelIndex18=0\n\
    \    local encodedLetterIndex18=0\n    local encodedVowelIndex19=0\n    local\
    \ encodedLetterIndex19=0\n    local encodedVowelIndex20=0\n    local encodedLetterIndex20=0\n\
    \    local encodedVowelIndex21=0\n    local encodedLetterIndex21=0\n    local\
    \ encodedVowelIndex22=0\n    local encodedLetterIndex22=0\n    local encodedVowelIndex23=0\n\
    \    local encodedLetterIndex23=0\n    local encodedVowelIndex24=0\n    local\
    \ encodedLetterIndex24=0\n    local encodedVowelIndex25=0\n    local encodedLetterIndex\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=''\n    local vowelCount=0\n    local vowelPosition=0\n   \
    \ local vowelPosition2=0\n    local letterPosition=0\n    local letterPosition2=0\n\
    \    local letterCount=0\n    local letterPosition=0\n    local letterPosition2=0\n\
    \    local letterCount2=0\n    local letterPosition3=0\n    local letterPosition4=0\n\
    \    local letterCount3=0\n    local letterPosition5=0\n    local letterCount4=0\n\
    \    local letterPosition6=0\n    local letterCount5=0\n    local letterPosition7=0\n\
    \    local letterCount6=0\n    local letterPosition8=0\n    local letterCount7=0\n\
    \    local letterPosition9=0\n    local letterCount8=0\n    local letterPosition10=0\n\
    \    local letterCount9=0\n    local letterPosition11=0\n    local letterCount10=0\n\
    \    local letterPosition12=0\n    local letterCount11=0\n    local letterPosition13=0\n\
    \    local letterCount12=0\n    local letterPosition14=0\n    local letterCount13=0\n\
    \    local letterPosition15=0\n    local letterCount14=0\n    local letterPosition16=0\n\
    \    local letterCount15=0\n    local letterPosition17=0\n    local letterCount16=0\n\
    \    local letterPosition18=0\n    local letterCount17=0\n    local letterPosition19=0\n\
    \    local letterCount18=0\n    local letterPosition20=0\n    local letterCount19=0\n\
    \    local letterPosition21=0\n    local letterCount20=0\n    local letterPosition22=0\n\
    \    local letterCount21=0\n    local letterPosition23=0\n    local letterCount22=0\n\
    \    local letterPosition24=0\n    local letterCount23=0\n    local letterPosition25=0\n\
    \    local letterCount24=0\n    local letterPosition26=0\n    local letterCount25=0\n\
    \    local letterPosition27=0\n    local letterCount26=0\n    local letterPosition28=0\n\
    \    local letterCount27=0\n    local letterPosition29=0\n    local letterCount28=0\n\
    \    local letterPosition30=0\n    local letterCount29=0\n    local letterPosition31=0\n\
    \    local letterCount30=0\n    local letterPosition32=0\n    local letterCount31=0\n\
    \    local letterPosition33=0\n    local letterCount32=0\n    local letterPosition34\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local result=\"\"\n  local vowel\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local A\n  local B\n  local C\n  local D\n  local E\n  local F\n  local\
    \ G\n  local H\n  local I\n  local J\n  local K\n  local L\n  local M\n  local\
    \ N\n  local O\n  local P\n  local Q\n  local R\n  local S\n  local T\n  local\
    \ U\n  local V\n  local W\n  local X\n  local Y\n  local Z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local A\n  local B\n  local C\n  local\
    \ D\n  local E\n  local F\n  local G\n  local H\n  local I\n  local J\n  local\
    \ K\n  local L\n  local M\n  local N\n  local O\n  local P\n  local Q\n  local\
    \ R\n  local S\n  local T\n  local U\n  local V\n  local W\n  local X\n  local\
    \ Y\n  local Z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=''\n  local vowel_count=0\n  local vowel_position=0\n  local\
    \ vowel_position2=0\n  local letter_index=0\n  local letter_index2=0\n  local\
    \ letter_position=0\n  local letter_position2=0\n  local letter_count=0\n  local\
    \ letter_count2=0\n  local letter_position3=0\n  local letter_position4=0\n  local\
    \ letter_position5=0\n  local letter_position6=0\n  local letter_position7=0\n\
    \  local letter_position8=0\n  local letter_position9=0\n  local letter_position10=0\n\
    \  local letter_position11=0\n  local letter_position12=0\n  local letter_position13=0\n\
    \  local letter_position14=0\n  local letter_position15=0\n  local letter_position16=0\n\
    \  local letter_position17=0\n  local letter_position18=0\n  local letter_position19=0\n\
    \  local letter_position20=0\n  local letter_position21=0\n  local letter_position22=0\n\
    \  local letter_position23=0\n  local letter_position24=0\n  local letter_position25=0\n\
    \  local letter_position26=0\n  local letter_position27=0\n  local letter_position28=0\n\
    \  local letter_position29=0\n  local letter_position30=0\n  local letter_position31=0\n\
    \  local letter_position32=0\n  local letter_position33=0\n  local letter_position34=0\n\
    \  local letter_position35=0\n  local letter_position36=0\n  local letter_position37=0\n\
    \  local letter_position38=0\n  local letter_position39=0\n  local letter_position40=0\n\
    \  local letter_position41=0\n  local letter_position42=0\n  local letter_position43=0\n\
    \  local letter_position44=0\n  local letter_position45=0\n  local letter_position46=0\n\
    \  local letter_position47=0\n  local letter_position48=0\n  local letter_position49=0\n\
    \  local letter_position50=0\n  local letter_position51=0\n  local letter_position52=0\n\
    \  local letter_position53=0\n  local letter_position54=0\n  local letter_position55=0\n\
    \  local letter_position56=0\n  local letter_position57=0\n  local letter_position58=0\n\
    \  local letter_position59=0\n  local letter_position60=0\n  local letter_position61=0\n\
    \  local letter_position62=0\n  local letter_position63=0\n  local letter_\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ letterIndex=0\n    local letterCount=0\n    local letter=\"\"\n    local letterToSwap=\"\
    \"\n    local swappedLetter=\"\"\n    local swappedLetterIndex=0\n    local swappedLetterCount=0\n\
    \    local swappedLetterToSwap=\"\"\n    local swappedVowel=\"\"\n    local swappedVowelIndex=0\n\
    \    local swappedVowelCount=0\n    local swappedVowelToSwap=\"\"\n    local swappedVowelIndex2=0\n\
    \    local swappedVowelCount2=0\n    local swappedVowelToSwap2=\"\"\n    local\
    \ swappedVowelIndex3=0\n    local swappedVowelCount3=0\n    local swappedVowelToSwap3=\"\
    \"\n    local swappedVowelIndex4=0\n    local swappedVowelCount4=0\n    local\
    \ swappedVowelToSwap4=\"\"\n    local swappedVowelIndex5=0\n    local swappedVowelCount5=0\n\
    \    local swappedVowelToSwap5=\"\"\n    local swappedVowelIndex6=0\n    local\
    \ swappedVowelCount6=0\n    local swappedVowelToSwap6=\"\"\n    local swappedVowelIndex7=0\n\
    \    local swappedVowelCount7=0\n    local swappedVowelToSwap7=\"\"\n    local\
    \ swappedVowelIndex8=0\n    local swappedVowelCount8=0\n    local swappedVowelToSwap8=\"\
    \"\n    local swappedVowelIndex9=0\n    local swappedVowelCount9=0\n    local\
    \ swappedVowelToSwap9=\"\"\n    local swappedVowelIndex10=0\n    local swappedVowelCount10=0\n\
    \    local swappedVowelToSwap10=\"\"\n    local swappedVowelIndex11=0\n    local\
    \ swappedVowelCount11=0\n    local swappedVowelToSwap11=\"\"\n    local swappedVowelIndex12=0\n\
    \    local swappedVowelCount12=0\n    local swappedVowelToSwap12=\"\"\n    local\
    \ swappedVowelIndex\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=\"\"\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local vowelCount=0\n    local letterCount=0\n    local encodedMessage=\"\"\
    \n    for (( i=0; i<${#message}; i++ )); do\n        local letter=${message:$i:1}\n\
    \        local vowel=${vowels:$i:1}\n        if [[ \"${letter}\" =~ \"${vowels}\"\
    \ ]]; then\n            (( vowelCount++ ))\n        fi\n        if [[ \"${letter}\"\
    \ =~ \"${letters}\" ]]; then\n            (( letterCount++ ))\n        fi\n  \
    \  done\n    if [[ ${letterCount} -gt 1 ]]; then\n        encodedMessage=\"${message:0:1}${letters:$((letterCount-1))}${message:$((i+1))}\"\
    \n    elif [[ ${letterCount} -eq 1 ]]; then\n        encodedMessage=\"${message:0:1}${letters:$((letterCount-1))}\"\
    \n    else\n        encodedMessage=\"${message}\"\n    fi\n    if [[ ${vowelCount}\
    \ -gt 1 ]]; then\n        encodedMessage=\"${encodedMessage:0:1}${vowels:$((vowelCount-1))}${encodedMessage:$((i+1))}\"\
    \n    elif [[ ${vowelCount} -eq 1 ]]; then\n        encodedMessage=\"${encodedMessage:0:1}${vowels:$((vowelCount-1))}\"\
    \n    else\n        encodedMessage=\"${encodedMessage}\"\n    fi\n    echo \"\
    ${encodedMessage}\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n  \
    \  local vowelCount=0\n    local letterCount=0\n    local currentLetter=\"\"\n\
    \    local currentVowel=\"\"\n    local currentLetterIndex=0\n    local currentVowelIndex=0\n\
    \    local currentVowelIndex2=0\n    local currentVowelIndex3=0\n    local currentVowelIndex4=0\n\
    \    local currentVowelIndex5=0\n    local currentVowelIndex6=0\n    local currentVowelIndex7=0\n\
    \    local currentVowelIndex8=0\n    local currentVowelIndex9=0\n    local currentVowelIndex10=0\n\
    \    local currentVowelIndex11=0\n    local currentVowelIndex12=0\n    local currentVowelIndex13=0\n\
    \    local currentVowelIndex14=0\n    local currentVowelIndex15=0\n    local currentVowelIndex16=0\n\
    \    local currentVowelIndex17=0\n    local currentVowelIndex18=0\n    local currentVowelIndex19=0\n\
    \    local currentVowelIndex20=0\n    local currentVowelIndex21=0\n    local currentVowelIndex22=0\n\
    \    local currentVowelIndex23=0\n    local currentVowelIndex24=0\n    local currentVowelIndex25=0\n\
    \    local currentVowelIndex26=0\n    local currentVowelIndex27=0\n    local currentVowelIndex28=0\n\
    \    local currentVowelIndex29=0\n    local currentVowelIndex30=0\n    local currentVowelIndex31=0\n\
    \    local currentVowelIndex32=0\n    local currentVowelIndex33=0\n    local currentVowelIndex34=0\n\
    \    local currentVowelIndex35=0\n    local currentVowelIndex36=0\n    local currentVowelIndex37=0\n\
    \    local currentVowelIndex38=0\n    local currentVowelIndex39=0\n    local currentVowelIndex40=0\n\
    \    local currentVowelIndex41=0\n    local currentVowelIndex42=0\n    local currentVowelIndex43=0\n\
    \    local currentVowelIndex44=0\n    \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z\"\n  local vowelsCount=0\n  local lettersCount=0\n  local encodedMessage=\"\
    \"\n  local vowelsPositions=\"\"\n  local lettersPositions=\"\"\n  local encodedLetters=\"\
    \"\n  local encodedVowels=\"\"\n  local encodedVowelsPositions=\"\"\n  local encodedLettersPositions=\"\
    \"\n  local encodedVowelsPositionsCount=\"\"\n  local encodedLettersPositionsCount=\"\
    \"\n  local encodedVowelsPositionsCount2=\"\"\n  local encodedLettersPositionsCount2=\"\
    \"\n  local encodedVowelsPositionsCount3=\"\"\n  local encodedLettersPositionsCount3=\"\
    \"\n  local encodedVowelsPositionsCount4=\"\"\n  local encodedLettersPositionsCount4=\"\
    \"\n  local encodedVowelsPositionsCount5=\"\"\n  local encodedLettersPositionsCount5=\"\
    \"\n  local encodedVowelsPositionsCount6=\"\"\n  local encodedLettersPositionsCount6=\"\
    \"\n  local encodedVowelsPositionsCount7=\"\"\n  local encodedLettersPositionsCount7=\"\
    \"\n  local encodedVowelsPositionsCount8=\"\"\n  local encodedLettersPositionsCount8=\"\
    \"\n  local encodedVowelsPositionsCount9=\"\"\n  local encodedLettersPositionsCount9=\"\
    \"\n  local encodedVowelsPositionsCount10=\"\"\n  local encodedLettersPositionsCount10=\"\
    \"\n  local encodedVowelsPositionsCount11=\"\"\n  local encodedLettersPositionsCount11=\"\
    \"\n  local encodedVowelsPositionsCount12=\"\"\n  local encodedLettersPositionsCount12=\"\
    \"\n  local encodedVowelsPositionsCount13=\"\"\n  local encodedLettersPositionsCount13=\"\
    \"\n  local encodedVowelsPositionsCount14=\"\"\n  local encodedLettersPositionsCount14=\"\
    \"\n  local encodedVowelsPositionsCount15=\"\"\n  local encodedLettersPositionsCount15=\"\
    \"\n  local encodedVowelsPositionsCount16=\"\"\n  local encodedLettersPositionsCount16=\"\
    \"\n  local encodedVowelsPositionsCount17\n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local output=\"\"\n  local\
    \ vowel_index=0\n  local letter_index=0\n  local vowel_positions=()\n  local letter_positions=()\n\
    \  local vowel_letters=()\n  local letter_letters=()\n  local vowel_letter_index=0\n\
    \  local letter_letter_index=0\n  local vowel_letter_positions=()\n  local letter_letter_positions=()\n\
    \  local vowel_letter_letters=()\n  local letter_letter_letters=()\n  local vowel_letter_letter_index=0\n\
    \  local letter_letter_letter_index=0\n  local vowel_letter_letter_positions=()\n\
    \  local letter_letter_letter_positions=()\n  local vowel_letter_letter_letters=()\n\
    \  local letter_letter_letter_letters=()\n  local vowel_letter_letter_letter_index=0\n\
    \  local letter_letter_letter_letter_index=0\n  local vowel_letter_letter_letter_positions=()\n\
    \  local letter_letter_letter_letter_positions=()\n  local vowel_letter_letter_letter_letters=()\n\
    \  local letter_letter_letter_letter_letters=()\n  local vowel_letter_letter_letter_letter_index=0\n\
    \  local letter_letter_letter_letter_letter_index=0\n  local vowel_letter_letter_letter_letter_positions=()\n\
    \  local letter_letter_letter_letter_letter_positions=()\n  local vowel_letter_letter_letter_letter_letters=()\n\
    \  local letter_letter_letter_letter_letters=()\n  local vowel_letter_letter_letter_letter_letter_index=0\n\
    \  local letter_letter_letter_letter_letter_letter_index=0\n  local vowel_letter_letter_letter_letter_letter_positions=()\n\
    \  local letter_letter_letter_letter_letter_positions=()\n  local vowel_letter_letter_letter_letter_letters=()\n\
    \  local letter_letter_letter_letter_letters=()\n  local vowel_letter_letter_letter_letter_letter_index=0\n\
    \  local letter_letter_letter_letter_letter_letter_index=0\n  local vowel_letter_letter_letter_letter_letter_positions=()\n\
    \  local letter_letter_letter_letter_letter_positions=()\n  local vowel_letter_letter_letter_letter_letters=()\n\
    \  local letter_letter_letter_letter_letters=()\n  local vowel_letter_letter_letter_letter_letter_index=0\n\
    \  local letter_letter_letter_letter_letter_letter_index=0\n  local vowel_letter_letter_letter_letter_letter_positions=()\n\
    \  local letter_letter_letter_letter_letter_positions=()\n  local vowel_letter_letter_letter_letter_letters=()\n\
    \  local letter_\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local output=\"\"\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local output=\"\"\n  local\
    \ vowelCount=0\n  local letterCount=0\n  local currentLetter=\"\"\n  local currentVowel=\"\
    \"\n  local currentVowel2=\"\"\n  local currentVowel3=\"\"\n  local currentVowel4=\"\
    \"\n  local currentVowel5=\"\"\n  local currentVowel6=\"\"\n  local currentVowel7=\"\
    \"\n  local currentVowel8=\"\"\n  local currentVowel9=\"\"\n  local currentVowel10=\"\
    \"\n  local currentVowel11=\"\"\n  local currentVowel12=\"\"\n  local currentVowel13=\"\
    \"\n  local currentVowel14=\"\"\n  local currentVowel15=\"\"\n  local currentVowel16=\"\
    \"\n  local currentVowel17=\"\"\n  local currentVowel18=\"\"\n  local currentVowel19=\"\
    \"\n  local currentVowel20=\"\"\n  local currentVowel21=\"\"\n  local currentVowel22=\"\
    \"\n  local currentVowel23=\"\"\n  local currentVowel24=\"\"\n  local currentVowel25=\"\
    \"\n  local currentVowel26=\"\"\n  local currentVowel27=\"\"\n  local currentVowel28=\"\
    \"\n  local currentVowel29=\"\"\n  local currentVowel30=\"\"\n  local currentVowel31=\"\
    \"\n  local currentVowel32=\"\"\n  local currentVowel33=\"\"\n  local currentVowel34=\"\
    \"\n  local currentVowel35=\"\"\n  local currentVowel36=\"\"\n  local currentVowel37=\"\
    \"\n  local currentVowel38=\"\"\n  local currentVowel39=\"\"\n  local currentVowel40=\"\
    \"\n  local currentVowel41=\"\"\n  local currentVowel42=\"\"\n  local currentVowel43=\"\
    \"\n  local currentVowel44=\"\"\n  local currentVowel45=\"\"\n  local currentVowel46=\"\
    \"\n  local currentVowel47=\"\"\n  local currentVowel48=\"\"\n  local currentVowel49=\"\
    \"\n  local currentVowel50=\"\"\n  local currentVowel\n}\n\ncandidate() {\n  \
    \  encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\
    \n  local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n \
    \ local result=\"\"\n  local vowel\n  local letter\n  local count\n  local i\n\
    \  local j\n  \n  for ((i=0; i<${#message}; i++)); do\n    letter=${message:$i:1}\n\
    \    vowel=${vowels:$letter:1}\n    count=$(echo $letter | wc -c)\n    \n    for\
    \ ((j=0; j<count; j++)); do\n      i=$((i+1))\n      letter=${message:$i:1}\n\
    \      vowel=${vowels:$letter:1}\n      result+=\"${letters:$vowel:1}\"\n    done\n\
    \    \n    result+=\"${letters:$vowel:1}\"\n  done\n  \n  echo $result\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local result=\"\"\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ letterIndex=0\n    local letterCount=0\n    local letter=\"\"\n    local letterCount=0\n\
    \    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local\
    \ letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\
    \"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local\
    \ letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\
    \"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local\
    \ letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\
    \"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local\
    \ letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\
    \"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local\
    \ letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\
    \"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local\
    \ letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\
    \"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local\
    \ letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\
    \"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local\
    \ letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\
    \"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local\
    \ letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\
    \"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local\
    \ letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\
    \"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local\
    \ letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\
    \"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local\
    \ letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\
    \"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local\
    \ letter=\"\"\n    local letter=\"\"\n    local letter=\"\"\n    local letter=\"\
    \"\n\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local i\n    local j\n    local k\n    local vowel\n\
    \    local letter\n    local letter2\n    local letter3\n    local letter4\n \
    \   local letter5\n    local letter6\n    local letter7\n    local letter8\n \
    \   local letter9\n    local letter10\n    local letter11\n    local letter12\n\
    \    local letter13\n    local letter14\n    local letter15\n    local letter16\n\
    \    local letter17\n    local letter18\n    local letter19\n    local letter20\n\
    \    local letter21\n    local letter22\n    local letter23\n    local letter24\n\
    \    local letter25\n    local letter26\n    local letter27\n    local letter28\n\
    \    local letter29\n    local letter30\n    local letter31\n    local letter32\n\
    \    local letter33\n    local letter34\n    local letter35\n    local letter36\n\
    \    local letter37\n    local letter38\n    local letter39\n    local letter40\n\
    \    local letter41\n    local letter42\n    local letter43\n    local letter44\n\
    \    local letter45\n    local letter46\n    local letter47\n    local letter48\n\
    \    local letter49\n    local letter50\n    local letter51\n    local letter52\n\
    \    local letter53\n    local letter54\n    local letter55\n    local letter56\n\
    \    local letter57\n    local letter58\n    local letter59\n    local letter60\n\
    \    local letter61\n    local letter62\n    local letter63\n    local letter64\n\
    \    local letter65\n    local letter66\n    local letter67\n    local letter68\n\
    \    local letter69\n    local letter70\n    local letter71\n    local letter72\n\
    \    local letter73\n    local letter74\n    local letter75\n    local letter76\n\
    \    local letter77\n    local letter78\n    local letter79\n    local letter80\n\
    \    local letter81\n    local letter82\n    local letter83\n    local letter84\n\
    \    local letter85\n    local letter86\n    local letter87\n    local letter88\n\
    \    local letter89\n    local letter90\n    local letter91\n    local letter92\n\
    \    local letter93\n    local letter94\n    local letter95\n\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels=\"aeiouAEIOU\"\n    local output=\"\
    \"\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\
    \n  local output=\"\"\n  local vowel\n  local vowel2\n  local i\n  local j\n \
    \ local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelIndex2=0\n    local vowelIndex3=0\n    local vowelIndex4=0\n    local vowelIndex5=0\n\
    \    local vowelIndex6=0\n    local vowelIndex7=0\n    local vowelIndex8=0\n \
    \   local vowelIndex9=0\n    local vowelIndex10=0\n    local vowelIndex11=0\n\
    \    local vowelIndex12=0\n    local vowelIndex13=0\n    local vowelIndex14=0\n\
    \    local vowelIndex15=0\n    local vowelIndex16=0\n    local vowelIndex17=0\n\
    \    local vowelIndex18=0\n    local vowelIndex19=0\n    local vowelIndex20=0\n\
    \    local vowelIndex21=0\n    local vowelIndex22=0\n    local vowelIndex23=0\n\
    \    local vowelIndex24=0\n    local vowelIndex25=0\n    local vowelIndex26=0\n\
    \    local vowelIndex27=0\n    local vowelIndex28=0\n    local vowelIndex29=0\n\
    \    local vowelIndex30=0\n    local vowelIndex31=0\n    local vowelIndex32=0\n\
    \    local vowelIndex33=0\n    local vowelIndex34=0\n    local vowelIndex35=0\n\
    \    local vowelIndex36=0\n    local vowelIndex37=0\n    local vowelIndex38=0\n\
    \    local vowelIndex39=0\n    local vowelIndex40=0\n    local vowelIndex41=0\n\
    \    local vowelIndex42=0\n    local vowelIndex43=0\n    local vowelIndex44=0\n\
    \    local vowelIndex45=0\n    local vowelIndex46=0\n    local vowelIndex47=0\n\
    \    local vowelIndex48=0\n    local vowelIndex49=0\n    local vowelIndex50=0\n\
    \    local vowelIndex51=0\n    local vowelIndex52=0\n    local vowelIndex53=0\n\
    \    local vowelIndex54=0\n    local vowelIndex55=0\n    local vowelIndex56=0\n\
    \    local vowelIndex57=0\n    local vowelIndex58=0\n    local vowelIndex59=0\n\
    \    local vowelIndex60=0\n    local vowelIndex61=0\n    local vowelIndex62=0\n\
    \    local vowelIndex63=0\n    local vowelIndex64=0\n    local vowelIndex65=0\n\
    \    local vowelIndex66=0\n    local vowelIndex67=0\n    local vowelIndex68=0\n\
    \    local vowelIndex69=0\n    local \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local vowels_2=\"AEIOUaeiou\"\n    local vowels_3=\"AEIOUaeiouAEIOU\"\n\
    \    local vowels_4=\"AEIOUaeiouAEIOUaeiou\"\n    local vowels_5=\"AEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_6=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowels_7=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels_8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_9=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local\
    \ vowels_11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n\
    \    local vowels_13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_14=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_15=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_16=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_17=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf3a1hq_r.sh: line 45: unexpected EOF while looking for matching
    `"''

    /tmp/tmpf3a1hq_r.sh: line 49: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local result=\"\"\n    local vowel\n    local vowel_index\n    local letter\n\
    \    local letter_index\n    local letter_index2\n    local letter_index3\n  \
    \  local letter_index4\n    local letter_index5\n    local letter_index6\n   \
    \ local letter_index7\n    local letter_index8\n    local letter_index9\n    local\
    \ letter_index10\n    local letter_index11\n    local letter_index12\n    local\
    \ letter_index13\n    local letter_index14\n    local letter_index15\n    local\
    \ letter_index16\n    local letter_index17\n    local letter_index18\n    local\
    \ letter_index19\n    local letter_index20\n    local letter_index21\n    local\
    \ letter_index22\n    local letter_index23\n    local letter_index24\n    local\
    \ letter_index25\n    local letter_index26\n    local letter_index27\n    local\
    \ letter_index28\n    local letter_index29\n    local letter_index30\n    local\
    \ letter_index31\n    local letter_index32\n    local letter_index33\n    local\
    \ letter_index34\n    local letter_index35\n    local letter_index36\n    local\
    \ letter_index37\n    local letter_index38\n    local letter_index39\n    local\
    \ letter_index40\n    local letter_index41\n    local letter_index42\n    local\
    \ letter_index43\n    local letter_index44\n    local letter_index45\n    local\
    \ letter_index46\n    local letter_index47\n    local letter_index48\n    local\
    \ letter_index49\n    local letter_index50\n    local letter_index51\n    local\
    \ letter_index52\n    local letter_index53\n    local letter_index54\n    local\
    \ letter_index55\n    local letter_index56\n    local letter_index57\n    local\
    \ letter_index58\n    local letter_index59\n    local letter_index60\n    local\
    \ letter_index61\n    local letter_index62\n    local letter_index63\n    local\
    \ letter_index64\n    local letter_index65\n    local letter_index66\n    local\
    \ letter_index67\n    local letter_index68\n    local letter_index69\n    local\
    \ letter_index70\n    local letter_index71\n    local letter_index72\n    local\
    \ letter_index73\n    local letter_index74\n    local letter_index75\n    local\
    \ letter_index76\n    local letter_index77\n    local letter_index78\n    local\
    \ letter_index79\n    local letter_index\n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local output=\"\"\n  local\
    \ vowelCount=0\n  local letterCount=0\n  local currentLetter=\"\"\n  local currentVowel=\"\
    \"\n  local currentVowel2=\"\"\n  local currentVowel3=\"\"\n  local currentVowel4=\"\
    \"\n  local currentVowel5=\"\"\n  local currentVowel6=\"\"\n  local currentVowel7=\"\
    \"\n  local currentVowel8=\"\"\n  local currentVowel9=\"\"\n  local currentVowel10=\"\
    \"\n  local currentVowel11=\"\"\n  local currentVowel12=\"\"\n  local currentVowel13=\"\
    \"\n  local currentVowel14=\"\"\n  local currentVowel15=\"\"\n  local currentVowel16=\"\
    \"\n  local currentVowel17=\"\"\n  local currentVowel18=\"\"\n  local currentVowel19=\"\
    \"\n  local currentVowel20=\"\"\n  local currentVowel21=\"\"\n  local currentVowel22=\"\
    \"\n  local currentVowel23=\"\"\n  local currentVowel24=\"\"\n  local currentVowel25=\"\
    \"\n  local currentVowel26=\"\"\n  local currentVowel27=\"\"\n  local currentVowel28=\"\
    \"\n  local currentVowel29=\"\"\n  local currentVowel30=\"\"\n  local currentVowel31=\"\
    \"\n  local currentVowel32=\"\"\n  local currentVowel33=\"\"\n  local currentVowel34=\"\
    \"\n  local currentVowel35=\"\"\n  local currentVowel36=\"\"\n  local currentVowel37=\"\
    \"\n  local currentVowel38=\"\"\n  local currentVowel39=\"\"\n  local currentVowel40=\"\
    \"\n  local currentVowel41=\"\"\n  local currentVowel42=\"\"\n  local currentVowel43=\"\
    \"\n  local currentVowel44=\"\"\n  local currentVowel45=\"\"\n  local currentVowel46=\"\
    \"\n  local currentVowel47=\"\"\n  local currentVowel48=\"\"\n  local currentVowel49=\"\
    \"\n  local currentVowel50=\"\"\n  local currentVowel\n}\n\ncandidate() {\n  \
    \  encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n\
    \    local letterIndex=0\n    local letterCount=0\n    local letter=\"\"\n   \
    \ local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n    local\
    \ letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n\
    \    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n   \
    \ local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local\
    \ letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n   \
    \ local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n    local\
    \ letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n    local letter=\"\
    \"\n    local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n\
    \    local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n   \
    \ local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n    local\
    \ letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n\
    \    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n   \
    \ local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local\
    \ letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n   \
    \ local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n    local\
    \ letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n    local letter=\"\
    \"\n    local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n\
    \    local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n   \
    \ local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n    local\
    \ letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n\
    \    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n   \
    \ local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local\
    \ letterIndex=0\n    local letter=\"\"\n    local \n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local result=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        if [[ ${message:$i:1} =~ $vowels ]]; then\n\
    \            letter=${letter:0:1}\n        fi\n        result+=\"${letter:1}${letter:2:1}\"\
    \n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local vowels_2=\"AEIOUaeiou\"\n    local new_message=\"\"\n    local vowel_position=0\n\
    \    local vowel_position_2=0\n    local vowel_position_2_index=0\n    local vowel_position_3_index=0\n\
    \    local vowel_position_4_index=0\n    local vowel_position_5_index=0\n    local\
    \ vowel_position_6_index=0\n    local vowel_position_7_index=0\n    local vowel_position_8_index=0\n\
    \    local vowel_position_9_index=0\n    local vowel_position_10_index=0\n   \
    \ local vowel_position_11_index=0\n    local vowel_position_12_index=0\n    local\
    \ vowel_position_13_index=0\n    local vowel_position_14_index=0\n    local vowel_position_15_index=0\n\
    \    local vowel_position_16_index=0\n    local vowel_position_17_index=0\n  \
    \  local vowel_position_18_index=0\n    local vowel_position_19_index=0\n    local\
    \ vowel_position_20_index=0\n    local vowel_position_21_index=0\n    local vowel_position_22_index=0\n\
    \    local vowel_position_23_index=0\n    local vowel_position_24_index=0\n  \
    \  local vowel_position_25_index=0\n    local vowel_position_26_index=0\n    local\
    \ vowel_position_27_index=0\n    local vowel_position_28_index=0\n    local vowel_position_29_index=0\n\
    \    local vowel_position_30_index=0\n    local vowel_position_31_index=0\n  \
    \  local vowel_position_32_index=0\n    local vowel_position_33_index=0\n    local\
    \ vowel_position_34_index=0\n    local vowel_position_35_index=0\n    local vowel_position_36_index=0\n\
    \    local vowel_position_37_index=0\n    local vowel_position_38_index=0\n  \
    \  local vowel_position_39_index=0\n    local vowel_position_40_index=0\n    local\
    \ vowel_position_41_index=0\n    local vowel_position_42_index=0\n    local vowel_position_43_index=0\n\
    \    local vowel_position_44_index=0\n    local vowel_position_45_index=0\n  \
    \  local vowel_position_46_index=0\n    local vowel_position_47_index=0\n    local\
    \ vowel_position_48_index=0\n    local vowel_position_49_index=0\n    local vowel_position_50_index=0\n\
    \    local vowel_position_51_index=0\n    local vowel_position_52_index=0\n  \
    \  local \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ currentVowel\n    local currentLetter\n    local currentLetterIndex\n    local\
    \ currentLetterIndex2\n    local currentLetterIndex3\n    local currentLetterIndex4\n\
    \    local currentLetterIndex5\n    local currentLetterIndex6\n    local currentLetterIndex7\n\
    \    local currentLetterIndex8\n    local currentLetterIndex9\n    local currentLetterIndex10\n\
    \    local currentLetterIndex11\n    local currentLetterIndex12\n    local currentLetterIndex13\n\
    \    local currentLetterIndex14\n    local currentLetterIndex15\n    local currentLetterIndex16\n\
    \    local currentLetterIndex17\n    local currentLetterIndex18\n    local currentLetterIndex19\n\
    \    local currentLetterIndex20\n    local currentLetterIndex21\n    local currentLetterIndex22\n\
    \    local currentLetterIndex23\n    local currentLetterIndex24\n    local currentLetterIndex25\n\
    \    local currentLetterIndex26\n    local currentLetterIndex27\n    local currentLetterIndex28\n\
    \    local currentLetterIndex29\n    local currentLetterIndex30\n    local currentLetterIndex31\n\
    \    local currentLetterIndex32\n    local currentLetterIndex33\n    local currentLetterIndex34\n\
    \    local currentLetterIndex35\n    local currentLetterIndex36\n    local currentLetterIndex37\n\
    \    local currentLetterIndex38\n    local currentLetterIndex39\n    local currentLetterIndex40\n\
    \    local currentLetterIndex41\n    local currentLetterIndex42\n    local currentLetterIndex43\n\
    \    local currentLetterIndex44\n    local currentLetterIndex45\n    local currentLetterIndex46\n\
    \    local currentLetterIndex47\n    local currentLetterIndex48\n    local currentLetterIndex49\n\
    \    local currentLetterIndex50\n    local currentLetterIndex51\n    local currentLetterIndex52\n\
    \    local currentLetterIndex53\n    local currentLetterIndex54\n    local currentLetterIndex55\n\
    \    local currentLetterIndex56\n    local currentLetterIndex57\n    local currentLetterIndex58\n\
    \    local currentLetterIndex59\n    local currentLetterIndex60\n    local currentLetterIndex61\n\
    \    local currentLetterIndex62\n    local currentLetterIndex63\n    local currentLetterIndex64\n\
    \    local currentLetterIndex65\n    local currentLetterIndex66\n    local currentLetterIndex\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowel_positions=$(echo\
    \ $message | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzq8kfflm.sh: line 18: unexpected EOF while looking for matching
    `)''

    /tmp/tmpzq8kfflm.sh: line 35: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042912
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local vowels=\"a e i\
    \ o u y\"\n    local vowels_2=\"a e i o u y A E I O U Y\"\n    local vowels_3=\"\
    a e i o u y A E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_4=\"a e i\
    \ o u y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_5=\"\
    a e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n  \
    \  local vowels_6=\"a e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U\
    \ Y A E I O U Y A E I O U Y\"\n    local vowels_7=\"a e i o u y A E I O U Y A\
    \ E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n  \
    \  local vowels_8=\"a e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U\
    \ Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_9=\"a\
    \ e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I\
    \ O U Y A E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_10=\"a e i o u\
    \ y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A\
    \ E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_11=\"a e i\
    \ o u y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U\
    \ Y A E I \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyg5zt8cd.sh: line 39: unexpected EOF while looking for matching
    `"''

    /tmp/tmpyg5zt8cd.sh: line 43: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local result=\"\"\n  local vowel_index=0\n  local vowel_positions=()\n  local\
    \ vowel_positions_count=()\n  local vowel_positions_index=0\n  local vowel_positions_index_count=0\n\
    \  local vowel_positions_index_count_max=0\n  local vowel_positions_index_count_min=0\n\
    \  local vowel_positions_index_count_min_index=0\n  local vowel_positions_index_count_max_index=0\n\
    \  local vowel_positions_index_count_min_index_max=0\n  local vowel_positions_index_count_min_index_min=0\n\
    \  local vowel_positions_index_count_max_index_min=0\n  local vowel_positions_index_count_min_index_max_min=0\n\
    \  local vowel_positions_index_count_min_index_max_min_index=0\n  local vowel_positions_index_count_max_index_min_index_max=0\n\
    \  local vowel_positions_index_count_min_index_max_min_index_min=0\n  local vowel_positions_index_count_max_index_min_index_max_min=0\n\
    \  local vowel_positions_index_count_min_index_max_min_index_max_min=0\n  local\
    \ vowel_positions_index_count_max_index_min_index_max_min_index_min=0\n  local\
    \ vowel_positions_index_count_max_index_min_index_max_min_index_max_min=0\n  local\
    \ vowel_positions_index_count_min_index_max_min_index_max_min_index_max_min=0\n\
    \  local vowel_positions_index_count_max_index_min_index_max_min_index_max_min_index_min=0\n\
    \  local vowel_positions_index_count_max_index_min_index_max_min_index_max_min_index_min=0\n\
    \  local vowel_positions_index_count_min_index_max_min_index_max_min_index_max_min_index_max_min=0\n\
    \  local vowel_positions_index_count_max_index_min_index_max_min_index_max_min_index_max_min_index_min=0\n\
    \  local vowel_positions_index_count_max_index_min_index_max_min_index_max_min_index_max_min_index_max_min=0\n\
    \  local vowel_positions_index_count_min_index_max_min_index_max_min_index_max_min_index_max_min_index_max_min=0\n\
    \  local vowel_positions_index_count_max_index_min_index_max_min_index_max_min_index_max_min_index_max_min_index_max_min=0\n\
    \  local vowel_positions_index_count_min_index_max_min_index_max_min_index_max_min_index_max_min_index_max_min_index_max_min_index_max_min=0\n\
    \  local vowel_positions_index_count_max_index_min_index_max_\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels=\"aeiouAEIOU\"\n  local output=\"\"\n  local i\n  local j\n \
    \ local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  \n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local result=\"\"\n  \
    \  local vowel\n    local letter\n    local count\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local alphabet=\"a b c d e f g h i j k l m n o p q r s t u v w x\
    \ y z\"\n  local result=\"\"\n  local vowelCount=0\n  local vowelIndex=0\n  local\
    \ vowelIndex2=0\n  local vowelIndex3=0\n  local vowelIndex4=0\n  local vowelIndex5=0\n\
    \  local vowelIndex6=0\n  local vowelIndex7=0\n  local vowelIndex8=0\n  local\
    \ vowelIndex9=0\n  local vowelIndex10=0\n  local vowelIndex11=0\n  local vowelIndex12=0\n\
    \  local vowelIndex13=0\n  local vowelIndex14=0\n  local vowelIndex15=0\n  local\
    \ vowelIndex16=0\n  local vowelIndex17=0\n  local vowelIndex18=0\n  local vowelIndex19=0\n\
    \  local vowelIndex20=0\n  local vowelIndex21=0\n  local vowelIndex22=0\n  local\
    \ vowelIndex23=0\n  local vowelIndex24=0\n  local vowelIndex25=0\n  local vowelIndex26=0\n\
    \  local vowelIndex27=0\n  local vowelIndex28=0\n  local vowelIndex29=0\n  local\
    \ vowelIndex30=0\n  local vowelIndex31=0\n  local vowelIndex32=0\n  local vowelIndex33=0\n\
    \  local vowelIndex34=0\n  local vowelIndex35=0\n  local vowelIndex36=0\n  local\
    \ vowelIndex37=0\n  local vowelIndex38=0\n  local vowelIndex39=0\n  local vowelIndex40=0\n\
    \  local vowelIndex41=0\n  local vowelIndex42=0\n  local vowelIndex43=0\n  local\
    \ vowelIndex44=0\n  local vowelIndex45=0\n  local vowelIndex46=0\n  local vowelIndex47=0\n\
    \  local vowelIndex48=0\n  local vowelIndex49=0\n  local vowelIndex50=0\n  local\
    \ vowelIndex51=0\n  local vowelIndex52=0\n  local vowelIndex53=0\n  local vowelIndex54=0\n\
    \  local vowelIndex55=0\n  local vowelIndex56=0\n  local vowelIndex57=0\n  local\
    \ vowelIndex58=0\n  local vowelIndex59=0\n  local vowelIndex60=0\n  local vowelIndex61=0\n\
    \  local vowelIndex62=0\n  local vowelIndex63=0\n  local vowelIndex64=0\n  local\
    \ vowelIndex65\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowelsCount=0\n\
    \    local lettersCount=0\n    local encodedMessage=\"\"\n    local encodedLetter=\"\
    \"\n    local encodedVowel=\"\"\n    local encodedVowel2=\"\"\n    local encodedVowel3=\"\
    \"\n    local encodedVowel4=\"\"\n    local encodedVowel5=\"\"\n    local encodedVowel6=\"\
    \"\n    local encodedVowel7=\"\"\n    local encodedVowel8=\"\"\n    local encodedVowel9=\"\
    \"\n    local encodedVowel10=\"\"\n    local encodedVowel11=\"\"\n    local encodedVowel12=\"\
    \"\n    local encodedVowel13=\"\"\n    local encodedVowel14=\"\"\n    local encodedVowel15=\"\
    \"\n    local encodedVowel16=\"\"\n    local encodedVowel17=\"\"\n    local encodedVowel18=\"\
    \"\n    local encodedVowel19=\"\"\n    local encodedVowel20=\"\"\n    local encodedVowel21=\"\
    \"\n    local encodedVowel22=\"\"\n    local encodedVowel23=\"\"\n    local encodedVowel24=\"\
    \"\n    local encodedVowel25=\"\"\n    local encodedVowel26=\"\"\n    local encodedVowel27=\"\
    \"\n    local encodedVowel28=\"\"\n    local encodedVowel29=\"\"\n    local encodedVowel30=\"\
    \"\n    local encodedVowel31=\"\"\n    local encodedVowel32=\"\"\n    local encodedVowel33=\"\
    \"\n    local encodedVowel34=\"\"\n    local encodedVowel35=\"\"\n    local encodedVowel36=\"\
    \"\n    local encodedVowel37=\"\"\n    local encodedVowel38=\"\"\n    local encodedVowel39=\"\
    \"\n    local encodedVowel40=\"\"\n    local encodedVowel41=\"\"\n    local encodedVowel42=\"\
    \"\n    local encodedVowel43=\"\"\n    local encodedVowel44=\"\"\n    local encodedVowel45=\"\
    \"\n    local encodedVowel46=\"\"\n    local encodedVowel47=\"\"\n    local encodedVowel48=\"\
    \"\n    local encodedVowel49=\"\"\n    local encodedVowel50=\"\"\n    local encodedV\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowel_positions=$(echo\
    \ $message | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z |\
    \ tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp96m0k88d.sh: line 18: unexpected EOF while looking for matching
    `)''

    /tmp/tmp96m0k88d.sh: line 35: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n  \
    \  local vowelCount=0\n    local letterCount=0\n    local letterIndex=0\n    local\
    \ vowelIndex=0\n    local letterToSwap=\"\"\n    local vowelToSwap=\"\"\n    local\
    \ letterToSwapIndex=0\n    local vowelToSwapIndex=0\n    local letterToSwapCount=0\n\
    \    local vowelToSwapCount=0\n    local letterToSwapIndex2=0\n    local vowelToSwapIndex2=0\n\
    \    local letterToSwapCount2=0\n    local vowelToSwapCount2=0\n    local letterToSwapIndex3=0\n\
    \    local vowelToSwapIndex3=0\n    local letterToSwapCount3=0\n    local vowelToSwapCount3=0\n\
    \    local letterToSwapIndex4=0\n    local vowelToSwapIndex4=0\n    local letterToSwapCount4=0\n\
    \    local vowelToSwapCount4=0\n    local letterToSwapIndex5=0\n    local vowelToSwapIndex5=0\n\
    \    local letterToSwapCount5=0\n    local vowelToSwapCount5=0\n    local letterToSwapIndex6=0\n\
    \    local vowelToSwapIndex6=0\n    local letterToSwapCount6=0\n    local vowelToSwapCount6=0\n\
    \    local letterToSwapIndex7=0\n    local vowelToSwapIndex7=0\n    local letterToSwapCount7=0\n\
    \    local vowelToSwapCount7=0\n    local letterToSwapIndex8=0\n    local vowelToSwapIndex8=0\n\
    \    local letterToSwapCount8=0\n    local vowelToSwapCount8=0\n    local letterToSwapIndex9=0\n\
    \    local vowelToSwapIndex9=0\n    local letterToSwapCount9=0\n    local vowelToSwapCount9=0\n\
    \    local letterToSwapIndex10=0\n    local vowelToSwapIndex10=0\n    local letterToSwapCount10=0\n\
    \    local vowelToSwapCount10=0\n    local letterToSwapIndex11=0\n    local vowelToSwapIndex11=0\n\
    \    local letterToSwapCount11=0\n    local vowelToSwapCount11=0\n    local letterToSwapIndex12=0\n\
    \    local vowelToSwapIndex12=0\n    local letterToSwapCount12=0\n    local vowelToSwapCount12=0\n\
    \    local letterToSwapIndex13\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local count=0\n    local vowel_index=0\n    local\
    \ vowel_position=0\n    local vowel_position2=0\n    local vowel_position3=0\n\
    \    local vowel_position4=0\n    local vowel_position5=0\n    local vowel_position6=0\n\
    \    local vowel_position7=0\n    local vowel_position8=0\n    local vowel_position9=0\n\
    \    local vowel_position10=0\n    local vowel_position11=0\n    local vowel_position12=0\n\
    \    local vowel_position13=0\n    local vowel_position14=0\n    local vowel_position15=0\n\
    \    local vowel_position16=0\n    local vowel_position17=0\n    local vowel_position18=0\n\
    \    local vowel_position19=0\n    local vowel_position20=0\n    local vowel_position21=0\n\
    \    local vowel_position22=0\n    local vowel_position23=0\n    local vowel_position24=0\n\
    \    local vowel_position25=0\n    local vowel_position26=0\n    local vowel_position27=0\n\
    \    local vowel_position28=0\n    local vowel_position29=0\n    local vowel_position30=0\n\
    \    local vowel_position31=0\n    local vowel_position32=0\n    local vowel_position33=0\n\
    \    local vowel_position34=0\n    local vowel_position35=0\n    local vowel_position36=0\n\
    \    local vowel_position37=0\n    local vowel_position38=0\n    local vowel_position39=0\n\
    \    local vowel_position40=0\n    local vowel_position41=0\n    local vowel_position42=0\n\
    \    local vowel_position43=0\n    local vowel_position44=0\n    local vowel_position45=0\n\
    \    local vowel_position46=0\n    local vowel_position47=0\n    local vowel_position48=0\n\
    \    local vowel_position49=0\n    local vowel_position50=0\n    local vowel_position51=0\n\
    \    local vowel_position52=0\n    local vowel_position53=0\n    local vowel_position54=0\n\
    \    local vowel_position55=0\n    local vowel_position56=0\n    local vowel_position57=0\n\
    \    local vowel_position58=0\n    local vowel_position59=0\n    local vowel_position60=0\n\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local count=0\n    local vowel\n    local letter\n\
    \    local letter2\n    local letter3\n    local letter4\n    local letter5\n\
    \    local letter6\n    local letter7\n    local letter8\n    local letter9\n\
    \    local letter10\n    local letter11\n    local letter12\n    local letter13\n\
    \    local letter14\n    local letter15\n    local letter16\n    local letter17\n\
    \    local letter18\n    local letter19\n    local letter20\n    local letter21\n\
    \    local letter22\n    local letter23\n    local letter24\n    local letter25\n\
    \    local letter26\n    local letter27\n    local letter28\n    local letter29\n\
    \    local letter30\n    local letter31\n    local letter32\n    local letter33\n\
    \    local letter34\n    local letter35\n    local letter36\n    local letter37\n\
    \    local letter38\n    local letter39\n    local letter40\n    local letter41\n\
    \    local letter42\n    local letter43\n    local letter44\n    local letter45\n\
    \    local letter46\n    local letter47\n    local letter48\n    local letter49\n\
    \    local letter50\n    local letter51\n    local letter52\n    local letter53\n\
    \    local letter54\n    local letter55\n    local letter56\n    local letter57\n\
    \    local letter58\n    local letter59\n    local letter60\n    local letter61\n\
    \    local letter62\n    local letter63\n    local letter64\n    local letter65\n\
    \    local letter66\n    local letter67\n    local letter68\n    local letter69\n\
    \    local letter70\n    local letter71\n    local letter72\n    local letter73\n\
    \    local letter74\n    local letter75\n    local letter76\n    local letter77\n\
    \    local letter78\n    local letter79\n    local letter80\n    local letter81\n\
    \    local letter82\n    local letter83\n    local letter84\n    local letter85\n\
    \    local letter86\n    local letter87\n    local letter88\n    local letter89\n\
    \    local letter90\n    local letter91\n    local letter92\n    local letter93\n\
    \    local letter94\n    local letter95\n    local letter96\n    local \n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"\n    local output=\"\"\n    local vowelCount=0\n    local letterCount=0\n\
    \    local letterIndex=0\n    local vowelIndex=0\n    local letter\n    local\
    \ vowel\n    local letter2\n    local vowel2\n    local letter3\n    local vowel3\n\
    \    local letter4\n    local vowel4\n    local letter5\n    local vowel5\n  \
    \  local letter6\n    local vowel6\n    local letter7\n    local vowel7\n    local\
    \ letter8\n    local vowel8\n    local letter9\n    local vowel9\n    local letter10\n\
    \    local vowel10\n    local letter11\n    local vowel11\n    local letter12\n\
    \    local vowel12\n    local letter13\n    local vowel13\n    local letter14\n\
    \    local vowel14\n    local letter15\n    local vowel15\n    local letter16\n\
    \    local vowel16\n    local letter17\n    local vowel17\n    local letter18\n\
    \    local vowel18\n    local letter19\n    local vowel19\n    local letter20\n\
    \    local vowel20\n    local letter21\n    local vowel21\n    local letter22\n\
    \    local vowel22\n    local letter23\n    local vowel23\n    local letter24\n\
    \    local vowel24\n    local letter25\n    local vowel25\n    local letter26\n\
    \    local vowel26\n    local letter27\n    local vowel27\n    local letter28\n\
    \    local vowel28\n    local letter29\n    local vowel29\n    local letter30\n\
    \    local vowel30\n    local letter31\n    local vowel31\n    local letter32\n\
    \    local vowel32\n    local letter33\n    local vowel33\n    local letter34\n\
    \    local vowel34\n    local letter35\n    local vowel35\n    local letter36\n\
    \    local vowel36\n    local letter37\n    local vowel37\n    local letter38\n\
    \    local vowel38\n    local letter39\n    local vowel39\n    local letter40\n\
    \    local vowel40\n    local letter41\n    local vowel41\n    local letter42\n\
    \    local vowel42\n    local letter43\n    local vowel43\n    local letter44\n\
    \    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local result=\"\"\n    local i\n    local j\n    local k\n    local l\n \
    \   local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n\n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\
    \n  local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n \
    \ local vowel_count=0\n  local letter_count=0\n  local new_message=\"\"\n  local\
    \ new_vowels=\"\"\n  local new_letters=\"\"\n  local new_vowel_count=0\n  local\
    \ new_letter_count=0\n  local new_vowel_letters=\"\"\n  local new_letter_vowels=\"\
    \"\n  local new_vowel_letter_count=0\n  local new_letter_vowel_count=0\n  local\
    \ new_vowel_letter_letters=\"\"\n  local new_letter_vowel_letters=\"\"\n  local\
    \ new_vowel_letter_letter_count=0\n  local new_letter_vowel_letter_count=0\n \
    \ local new_vowel_letter_letter_letters=\"\"\n  local new_letter_vowel_letter_letters=\"\
    \"\n  local new_vowel_letter_letter_letter_count=0\n  local new_letter_vowel_letter_letter_count=0\n\
    \  local new_vowel_letter_letter_letter_letters=\"\"\n  local new_letter_vowel_letter_letter_letters=\"\
    \"\n  local new_vowel_letter_letter_letter_letter_count=0\n  local new_letter_vowel_letter_letter_letter_count=0\n\
    \  local new_vowel_letter_letter_letter_letter_letters=\"\"\n  local new_letter_vowel_letter_letter_letter_letters=\"\
    \"\n  local new_vowel_letter_letter_letter_letter_letter_count=0\n  local new_letter_vowel_letter_letter_letter_count=0\n\
    \  local new_vowel_letter_letter_letter_letter_letters=\"\"\n  local new_letter_vowel_letter_letter_letter_letters=\"\
    \"\n  local new_vowel_letter_letter_letter_letter_letter_count=0\n  local new_letter_vowel_letter_letter_letter_count=0\n\
    \  local new_vowel_letter_letter_letter_letter_letters=\"\"\n  local new_letter_vowel_letter_letter_letter_letters=\"\
    \"\n  local new_vowel_letter_letter_letter_letter_letter_count=0\n  local new_letter_vowel_letter_letter_letter_letter_count=0\n\
    \  local new_vowel_letter_letter_letter_letter_letter_letters=\"\"\n  local new_letter_vowel_letter_letter_letter_letter_letters=\"\
    \"\n  local new_vowel_letter_letter_letter_letter_letter_letter_count=0\n  local\
    \ new_letter_vowel_letter_letter_letter_letter_count=0\n  local new_vowel_letter_letter_letter_letter_letter_letters=\"\
    \"\n  local new_letter_vowel_letter_letter_letter_letter_letters=\"\"\n  local\
    \ new_vowel_letter_letter_letter_letter_letter_letter_count=0\n  local \n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\
    \n  local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n \
    \ local result=\"\"\n  local vowelCount=0\n  local letterCount=0\n  local lastVowel=\"\
    \"\n  local lastLetter=\"\"\n  local currentVowel=\"\"\n  local currentLetter=\"\
    \"\n  local currentLetterCount=0\n  local currentVowelCount=0\n  local currentVowelIndex=0\n\
    \  local currentLetterIndex=0\n  local currentVowelIndex2=0\n  local currentLetterIndex2=0\n\
    \  local currentVowelIndex3=0\n  local currentLetterIndex3=0\n  local currentVowelIndex4=0\n\
    \  local currentLetterIndex4=0\n  local currentVowelIndex5=0\n  local currentLetterIndex5=0\n\
    \  local currentVowelIndex6=0\n  local currentLetterIndex6=0\n  local currentVowelIndex7=0\n\
    \  local currentLetterIndex7=0\n  local currentVowelIndex8=0\n  local currentLetterIndex8=0\n\
    \  local currentVowelIndex9=0\n  local currentLetterIndex9=0\n  local currentVowelIndex10=0\n\
    \  local currentLetterIndex10=0\n  local currentVowelIndex11=0\n  local currentLetterIndex11=0\n\
    \  local currentVowelIndex12=0\n  local currentLetterIndex12=0\n  local currentVowelIndex13=0\n\
    \  local currentLetterIndex13=0\n  local currentVowelIndex14=0\n  local currentLetterIndex14=0\n\
    \  local currentVowelIndex15=0\n  local currentLetterIndex15=0\n  local currentVowelIndex16=0\n\
    \  local currentLetterIndex16=0\n  local currentVowelIndex17=0\n  local currentLetterIndex17=0\n\
    \  local currentVowelIndex18=0\n  local currentLetterIndex18=0\n  local currentVowelIndex19=0\n\
    \  local currentLetterIndex19=0\n  local currentVowelIndex20=0\n  local currentLetterIndex20=0\n\
    \  local currentVowelIndex21=0\n  local currentLetterIndex21=0\n  local currentVowelIndex22=0\n\
    \  local currentLetterIndex22=0\n  local currentVowelIndex23=0\n\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local msg2=\"\"\n   \
    \ local msg3=\"\"\n    local msg4=\"\"\n    local msg5=\"\"\n    local msg6=\"\
    \"\n    local msg7=\"\"\n    local msg8=\"\"\n    local msg9=\"\"\n    local msg10=\"\
    \"\n    local msg11=\"\"\n    local msg12=\"\"\n    local msg13=\"\"\n    local\
    \ msg14=\"\"\n    local msg15=\"\"\n    local msg16=\"\"\n    local msg17=\"\"\
    \n    local msg18=\"\"\n    local msg19=\"\"\n    local msg20=\"\"\n    local\
    \ msg21=\"\"\n    local msg22=\"\"\n    local msg23=\"\"\n    local msg24=\"\"\
    \n    local msg25=\"\"\n    local msg26=\"\"\n    local msg27=\"\"\n    local\
    \ msg28=\"\"\n    local msg29=\"\"\n    local msg30=\"\"\n    local msg31=\"\"\
    \n    local msg32=\"\"\n    local msg33=\"\"\n    local msg34=\"\"\n    local\
    \ msg35=\"\"\n    local msg36=\"\"\n    local msg37=\"\"\n    local msg38=\"\"\
    \n    local msg39=\"\"\n    local msg40=\"\"\n    local msg41=\"\"\n    local\
    \ msg42=\"\"\n    local msg43=\"\"\n    local msg44=\"\"\n    local msg45=\"\"\
    \n    local msg46=\"\"\n    local msg47=\"\"\n    local msg48=\"\"\n    local\
    \ msg49=\"\"\n    local msg50=\"\"\n    local msg51=\"\"\n    local msg52=\"\"\
    \n    local msg53=\"\"\n    local msg54=\"\"\n    local msg55=\"\"\n    local\
    \ msg56=\"\"\n    local msg57=\"\"\n    local msg58=\"\"\n    local msg59=\"\"\
    \n    local msg60=\"\"\n    local msg61=\"\"\n    local msg62=\"\"\n    local\
    \ msg63=\"\"\n    local msg64=\"\"\n    local msg65=\"\"\n    local msg66=\"\"\
    \n    local msg67=\"\"\n    local msg68=\"\"\n    local msg69=\"\"\n    local\
    \ msg70=\"\"\n    local msg71=\"\"\n    local msg72=\"\"\n    local msg73=\"\"\
    \n    local msg74=\"\"\n    local msg75=\"\"\n    local msg76=\"\"\n    local\
    \ msg77=\"\"\n    local msg78=\"\"\n    local msg79=\"\"\n    local msg80=\"\"\
    \n    local msg81=\"\"\n    local msg82=\"\"\n    local msg83=\"\"\n    local\
    \ msg84=\"\"\n    local msg85=\"\"\n    local \n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"\n    local result=\"\"\n    local vowel_count=0\n    local letter_count=0\n\
    \    local letter_index=0\n    local vowel_index=0\n    local letter_to_swap=\"\
    \"\n    local vowel_to_swap=\"\"\n    local letter_to_replace=\"\"\n    local\
    \ vowel_to_replace=\"\"\n    local letter_to_add=\"\"\n    local vowel_to_add=\"\
    \"\n    local letter_to_remove=\"\"\n    local vowel_to_remove=\"\"\n    local\
    \ letter_to_add2=\"\"\n    local vowel_to_add2=\"\"\n    local letter_to_remove2=\"\
    \"\n    local vowel_to_remove2=\"\"\n    local letter_to_add3=\"\"\n    local\
    \ vowel_to_add3=\"\"\n    local letter_to_remove3=\"\"\n    local vowel_to_remove3=\"\
    \"\n    local letter_to_add4=\"\"\n    local vowel_to_add4=\"\"\n    local letter_to_remove4=\"\
    \"\n    local vowel_to_remove4=\"\"\n    local letter_to_add5=\"\"\n    local\
    \ vowel_to_add5=\"\"\n    local letter_to_remove5=\"\"\n    local vowel_to_remove5=\"\
    \"\n    local letter_to_add6=\"\"\n    local vowel_to_add6=\"\"\n    local letter_to_remove6=\"\
    \"\n    local vowel_to_remove6=\"\"\n    local letter_to_add7=\"\"\n    local\
    \ vowel_to_add7=\"\"\n    local letter_to_remove7=\"\"\n    local vowel_to_remove7=\"\
    \"\n    local letter_to_add8=\"\"\n    local vowel_to_add8=\"\"\n    local letter_to_remove8=\"\
    \"\n    local vowel_to_remove8=\"\"\n    local letter_to_add9=\"\"\n    local\
    \ vowel_to_add9=\"\"\n    local letter_to_remove9=\"\"\n    local vowel_to_remove9=\"\
    \"\n    local letter_to_add10=\"\"\n    local vowel_to_add10=\"\"\n    local letter_to_remove10=\"\
    \"\n    local vowel_to_remove10=\"\"\n    local letter_to_add11=\"\"\n    local\
    \ vowel_to_add11=\"\"\n    local letter_to_remove11=\"\"\n    local vowel_to_remove11=\"\
    \"\n    local letter_to_add12=\"\"\n    local vowel_to_add12=\"\"\n    local letter_to_remove12=\"\
    \"\n    local vowel_to_remove12=\"\"\n    local letter_to_add13=\"\"\n    local\
    \ vowel_to_add13=\"\"\n    local letter_to_remove13=\"\"\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowel_count=0\n    local vowel_position=0\n\
    \    local vowel_letter=\"\"\n    local letter_index=0\n    local letter_position=0\n\
    \    local letter=\"\"\n    local letter_index=0\n    local letter_position=0\n\
    \    local letter_index=0\n    local letter_position=0\n    local letter_index=0\n\
    \    local letter_position=0\n    local letter_index=0\n    local letter_position=0\n\
    \    local letter_index=0\n    local letter_position=0\n    local letter_index=0\n\
    \    local letter_position=0\n    local letter_index=0\n    local letter_position=0\n\
    \    local letter_index=0\n    local letter_position=0\n    local letter_index=0\n\
    \    local letter_position=0\n    local letter_index=0\n    local letter_position=0\n\
    \    local letter_index=0\n    local letter_position=0\n    local letter_index=0\n\
    \    local letter_position=0\n    local letter_index=0\n    local letter_position=0\n\
    \    local letter_index=0\n    local letter_position=0\n    local letter_index=0\n\
    \    local letter_position=0\n    local letter_index=0\n    local letter_position=0\n\
    \    local letter_index=0\n    local letter_position=0\n    local letter_index=0\n\
    \    local letter_position=0\n    local letter_index=0\n    local letter_position=0\n\
    \    local letter_index=0\n    local letter_position=0\n    local letter_index=0\n\
    \    local letter_position=0\n    local letter_index=0\n    local letter_position=0\n\
    \    local letter_index=0\n    local letter_position=0\n    local letter_index=0\n\
    \    local letter_position=0\n    local letter_index=0\n    local letter_position=0\n\
    \    local letter_index=0\n    local letter_position=0\n    local letter_index=0\n\
    \    local letter_position=0\n    local letter_index=0\n    local letter_position=0\n\
    \    local letter_index=0\n    local letter_position=0\n    local letter_index=0\n\
    \    local letter_position=0\n    local letter_index=0\n    local letter_position=0\n\
    \    local letter_index=0\n    local letter_position=0\n    local letter_index=0\n\
    \    local letter_position=0\n    local letter_index=0\n    local letter_position=0\n\
    \    local letter_index=0\n    local letter_position=0\n    local letter_index=0\n\
    \    local letter_position=0\n    local letter_index=0\n    local letter_position=0\n\
    \    local letter_index=0\n    local letter_\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n  \
    \  local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    \n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local result=\"\"\n    local vowelIndex=0\n    local vowelCount=0\n    local\
    \ letterIndex=0\n    local letterCount=0\n    local letter\n    local letter2\n\
    \    local letter3\n    local letter4\n    local letter5\n    local letter6\n\
    \    local letter7\n    local letter8\n    local letter9\n    local letter10\n\
    \    local letter11\n    local letter12\n    local letter13\n    local letter14\n\
    \    local letter15\n    local letter16\n    local letter17\n    local letter18\n\
    \    local letter19\n    local letter20\n    local letter21\n    local letter22\n\
    \    local letter23\n    local letter24\n    local letter25\n    local letter26\n\
    \    local letter27\n    local letter28\n    local letter29\n    local letter30\n\
    \    local letter31\n    local letter32\n    local letter33\n    local letter34\n\
    \    local letter35\n    local letter36\n    local letter37\n    local letter38\n\
    \    local letter39\n    local letter40\n    local letter41\n    local letter42\n\
    \    local letter43\n    local letter44\n    local letter45\n    local letter46\n\
    \    local letter47\n    local letter48\n    local letter49\n    local letter50\n\
    \    local letter51\n    local letter52\n    local letter53\n    local letter54\n\
    \    local letter55\n    local letter56\n    local letter57\n    local letter58\n\
    \    local letter59\n    local letter60\n    local letter61\n    local letter62\n\
    \    local letter63\n    local letter64\n    local letter65\n    local letter66\n\
    \    local letter67\n    local letter68\n    local letter69\n    local letter70\n\
    \    local letter71\n    local letter72\n    local letter73\n    local letter74\n\
    \    local letter75\n    local letter76\n    local letter77\n    local letter78\n\
    \    local letter79\n    local letter80\n    local letter81\n    local letter82\n\
    \    local letter83\n    local letter84\n    local letter85\n    local letter86\n\
    \    local letter87\n    local letter88\n    local letter89\n    local letter90\n\
    \    local letter91\n    local letter92\n    local letter93\n    local \n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowelsCount=0\n\
    \    local lettersCount=0\n    local newMessage=\"\"\n    local vowelsLetter=\"\
    \"\n    local lettersLetter=\"\"\n    local vowelsLetter2=\"\"\n    local lettersLetter2=\"\
    \"\n    local vowelsLetter3=\"\"\n    local lettersLetter3=\"\"\n    local vowelsLetter4=\"\
    \"\n    local lettersLetter4=\"\"\n    local vowelsLetter5=\"\"\n    local lettersLetter5=\"\
    \"\n    local vowelsLetter6=\"\"\n    local lettersLetter6=\"\"\n    local vowelsLetter7=\"\
    \"\n    local lettersLetter7=\"\"\n    local vowelsLetter8=\"\"\n    local lettersLetter8=\"\
    \"\n    local vowelsLetter9=\"\"\n    local lettersLetter9=\"\"\n    local vowelsLetter10=\"\
    \"\n    local lettersLetter10=\"\"\n    local vowelsLetter11=\"\"\n    local lettersLetter11=\"\
    \"\n    local vowelsLetter12=\"\"\n    local lettersLetter12=\"\"\n    local vowelsLetter13=\"\
    \"\n    local lettersLetter13=\"\"\n    local vowelsLetter14=\"\"\n    local lettersLetter14=\"\
    \"\n    local vowelsLetter15=\"\"\n    local lettersLetter15=\"\"\n    local vowelsLetter16=\"\
    \"\n    local lettersLetter16=\"\"\n    local vowelsLetter17=\"\"\n    local lettersLetter17=\"\
    \"\n    local vowelsLetter18=\"\"\n    local lettersLetter18=\"\"\n    local vowelsLetter19=\"\
    \"\n    local lettersLetter19=\"\"\n    local vowelsLetter20=\"\"\n    local lettersLetter20=\"\
    \"\n    local vowelsLetter21=\"\"\n    local lettersLetter21=\"\"\n    local vowelsLetter22=\"\
    \"\n    local lettersLetter22=\"\"\n    local vowelsLetter23=\"\"\n    local lettersLetter23=\"\
    \"\n    local vowelsLetter24=\"\"\n    local lettersLetter24=\"\"\n    local vowelsLetter25=\"\
    \"\n    local lettersLetter25=\"\"\n    local vowelsLetter26=\"\"\n    local lettersLetter26=\"\
    \"\n    local vowelsLetter27=\"\"\n    local lettersLetter27=\"\"\n    local vowelsLetter28=\"\
    \"\n    local lettersLetter28=\"\"\n    local vowelsLetter29=\"\"\n    local lettersLetter29=\"\
    \"\n    local vowelsLetter30=\"\"\n    local lettersLetter30=\"\"\n    local vowelsLetter31=\"\
    \"\n    local letters\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local count=0\n    local vowel_count=0\n    local\
    \ vowel_letter=\"\"\n    local letter=\"\"\n    local letter2=\"\"\n    local\
    \ letter3=\"\"\n    local letter4=\"\"\n    local letter5=\"\"\n    local letter6=\"\
    \"\n    local letter7=\"\"\n    local letter8=\"\"\n    local letter9=\"\"\n \
    \   local letter10=\"\"\n    local letter11=\"\"\n    local letter12=\"\"\n  \
    \  local letter13=\"\"\n    local letter14=\"\"\n    local letter15=\"\"\n   \
    \ local letter16=\"\"\n    local letter17=\"\"\n    local letter18=\"\"\n    local\
    \ letter19=\"\"\n    local letter20=\"\"\n    local letter21=\"\"\n    local letter22=\"\
    \"\n    local letter23=\"\"\n    local letter24=\"\"\n    local letter25=\"\"\n\
    \    local letter26=\"\"\n    local letter27=\"\"\n    local letter28=\"\"\n \
    \   local letter29=\"\"\n    local letter30=\"\"\n    local letter31=\"\"\n  \
    \  local letter32=\"\"\n    local letter33=\"\"\n    local letter34=\"\"\n   \
    \ local letter35=\"\"\n    local letter36=\"\"\n    local letter37=\"\"\n    local\
    \ letter38=\"\"\n    local letter39=\"\"\n    local letter40=\"\"\n    local letter41=\"\
    \"\n    local letter42=\"\"\n    local letter43=\"\"\n    local letter44=\"\"\n\
    \    local letter45=\"\"\n    local letter46=\"\"\n    local letter47=\"\"\n \
    \   local letter48=\"\"\n    local letter49=\"\"\n    local letter50=\"\"\n  \
    \  local letter51=\"\"\n    local letter52=\"\"\n    local letter53=\"\"\n   \
    \ local letter54=\"\"\n    local letter55=\"\"\n    local letter56=\"\"\n    local\
    \ letter57=\"\"\n    local letter58=\"\"\n    local letter59=\"\"\n    local letter60=\"\
    \"\n    local letter61=\"\"\n    local letter62=\"\"\n    local letter63=\"\"\n\
    \    local letter64=\"\"\n    local letter65=\"\"\n    local letter66=\"\"\n \
    \   local letter67=\"\"\n    local letter68=\"\"\n    local letter69=\"\"\n  \
    \  local letter70=\"\"\n    local letter71=\"\"\n    local letter72=\"\"\n   \
    \ local letter73=\"\"\n    local letter74=\"\"\n    local letter75=\"\"\n    local\
    \ letter76=\"\"\n    local letter77=\"\"\n    local letter78=\"\"\n    local letter79=\"\
    \"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local letters_2=\"bcdfghjklmnpqrstvwxyz\"\
    \n  local letters_3=\"dghklmnpqrstvwxyz\"\n  local letters_4=\"ejkmnpqrstvwxyz\"\
    \n  local letters_5=\"fghklmnpqrstvwxyz\"\n  local letters_6=\"ghkmnpqrstvwxyz\"\
    \n  local letters_7=\"hkmnprstvwxyz\"\n  local letters_8=\"ijkmnoprstvwxyz\"\n\
    \  local letters_9=\"jkmnoprstvwxyz\"\n  local letters_10=\"kjmnoprstvwxyz\"\n\
    \  local letters_11=\"ljkmnoprstvwxyz\"\n  local letters_12=\"mjkmnoprstvwxyz\"\
    \n  local letters_13=\"njkmnoprstvwxyz\"\n  local letters_14=\"ojkmnoprstvwxyz\"\
    \n  local letters_15=\"pjkmnoprstvwxyz\"\n  local letters_16=\"qjkmnoprstvwxyz\"\
    \n  local letters_17=\"rjkmnoprstvwxyz\"\n  local letters_18=\"sjkmnoprstvwxyz\"\
    \n  local letters_19=\"tjkmnoprstvwxyz\"\n  local letters_20=\"ujkmnoprstvwxyz\"\
    \n  local letters_21=\"vjkmnoprstvwxyz\"\n  local letters_22=\"wjkmnoprstvwxyz\"\
    \n  local letters_23=\"xjkmnoprstvwxyz\"\n  local letters_24=\"yjkmnoprstvwxyz\"\
    \n  local letters_25=\"zjkmnoprstvwxyz\"\n  local letters_26=\"AEIOUaeiouAEIOU\"\
    \n  local letters_27=\"bcdfghjklmnpqrstvwxyz\"\n  local letters_28=\"dghklmnpqrstvwxyz\"\
    \n  local letters_29=\"ejkmnpqrstvwxyz\"\n  local letters_30=\"fghklmnpqrstvwxyz\"\
    \n  local letters_31=\"ghkmnpq\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr8tn_to1.sh: line 60: unexpected EOF while looking for matching
    `"''

    /tmp/tmpr8tn_to1.sh: line 64: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z\"\n  local output=\"\"\n  local count=0\n  local vowel_count=0\n  local letter_count=0\n\
    \  local letter_index=0\n  local vowel_index=0\n  local letter_index2=0\n  local\
    \ vowel_index2=0\n  local letter_index3=0\n  local vowel_index3=0\n  local letter_index4=0\n\
    \  local vowel_index4=0\n  local letter_index5=0\n  local vowel_index5=0\n  local\
    \ letter_index6=0\n  local vowel_index6=0\n  local letter_index7=0\n  local vowel_index7=0\n\
    \  local letter_index8=0\n  local vowel_index8=0\n  local letter_index9=0\n  local\
    \ vowel_index9=0\n  local letter_index10=0\n  local vowel_index10=0\n  local letter_index11=0\n\
    \  local vowel_index11=0\n  local letter_index12=0\n  local vowel_index12=0\n\
    \  local letter_index13=0\n  local vowel_index13=0\n  local letter_index14=0\n\
    \  local vowel_index14=0\n  local letter_index15=0\n  local vowel_index15=0\n\
    \  local letter_index16=0\n  local vowel_index16=0\n  local letter_index17=0\n\
    \  local vowel_index17=0\n  local letter_index18=0\n  local vowel_index18=0\n\
    \  local letter_index19=0\n  local vowel_index19=0\n  local letter_index20=0\n\
    \  local vowel_index20=0\n  local letter_index21=0\n  local vowel_index21=0\n\
    \  local letter_index22=0\n  local vowel_index22=0\n  local letter_index23=0\n\
    \  local vowel_index23=0\n  local letter_index24=0\n  local vowel_index24=0\n\
    \  local letter_index25=0\n  local vowel_index25=0\n  local letter_index26=0\n\
    \  local vowel_index26=0\n  local letter_index27=0\n  local vowel_index27=0\n\
    \  local letter_index28=0\n  local vowel_index28=0\n  local letter_index29=0\n\
    \  local vowel_index29=0\n  local letter_index30=0\n  local vowel_index30=0\n\
    \  local letter_index31=0\n  local vowel_index31=0\n  local letter_index32=0\n\
    \  local \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n  \
    \  local vowel\n    local letter\n    local count\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    \n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=\"\"\n  local vowel\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local alphabet=\"a b c d e f g h i j k l m n o p q r s t u\
    \ v w x y z\"\n    local result=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n\
    \        local letter=${message:$i:1}\n        local position=${message:$i:2}\n\
    \        if [[ ${vowels} =~ $letter ]]; then\n            letter=${alphabet:$((position-1)):1}\n\
    \        fi\n        result+=$letter\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=\"\"\n  local vowelCount=0\n  local vowelIndex=0\n  local vowelIndex2=0\n\
    \  local vowelIndex3=0\n  local vowelIndex4=0\n  local vowelIndex5=0\n  local\
    \ vowelIndex6=0\n  local vowelIndex7=0\n  local vowelIndex8=0\n  local vowelIndex9=0\n\
    \  local vowelIndex10=0\n  local vowelIndex11=0\n  local vowelIndex12=0\n  local\
    \ vowelIndex13=0\n  local vowelIndex14=0\n  local vowelIndex15=0\n  local vowelIndex16=0\n\
    \  local vowelIndex17=0\n  local vowelIndex18=0\n  local vowelIndex19=0\n  local\
    \ vowelIndex20=0\n  local vowelIndex21=0\n  local vowelIndex22=0\n  local vowelIndex23=0\n\
    \  local vowelIndex24=0\n  local vowelIndex25=0\n  local vowelIndex26=0\n  local\
    \ vowelIndex27=0\n  local vowelIndex28=0\n  local vowelIndex29=0\n  local vowelIndex30=0\n\
    \  local vowelIndex31=0\n  local vowelIndex32=0\n  local vowelIndex33=0\n  local\
    \ vowelIndex34=0\n  local vowelIndex35=0\n  local vowelIndex36=0\n  local vowelIndex37=0\n\
    \  local vowelIndex38=0\n  local vowelIndex39=0\n  local vowelIndex40=0\n  local\
    \ vowelIndex41=0\n  local vowelIndex42=0\n  local vowelIndex43=0\n  local vowelIndex44=0\n\
    \  local vowelIndex45=0\n  local vowelIndex46=0\n  local vowelIndex47=0\n  local\
    \ vowelIndex48=0\n  local vowelIndex49=0\n  local vowelIndex50=0\n  local vowelIndex51=0\n\
    \  local vowelIndex52=0\n  local vowelIndex53=0\n  local vowelIndex54=0\n  local\
    \ vowelIndex55=0\n  local vowelIndex56=0\n  local vowelIndex57=0\n  local vowelIndex58=0\n\
    \  local vowelIndex59=0\n  local vowelIndex60=0\n  local vowelIndex61=0\n  local\
    \ vowelIndex62=0\n  local vowelIndex63=0\n  local vowelIndex64=0\n  local vowelIndex65=0\n\
    \  local vowelIndex66=0\n  local vowelIndex67=0\n  local vowelIndex68=0\n  local\
    \ vowelIndex69=0\n  local \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n  \
    \  local vowelCount=0\n    local letterCount=0\n    local currentLetter=\"\"\n\
    \    local currentVowel=\"\"\n    local currentVowel2=\"\"\n    local currentVowel3=\"\
    \"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\"\n    local currentVowel6=\"\
    \"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\"\n    local currentVowel9=\"\
    \"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\"\n    local currentVowel12=\"\
    \"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\"\n    local currentVowel15=\"\
    \"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\"\n    local currentVowel18=\"\
    \"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\"\n    local currentVowel21=\"\
    \"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\"\n    local currentVowel24=\"\
    \"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\"\n    local currentVowel27=\"\
    \"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\"\n    local currentVowel30=\"\
    \"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\"\n    local currentVowel33=\"\
    \"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\"\n    local currentVowel36=\"\
    \"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\"\n    local currentVowel39=\"\
    \"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\"\n    local currentVowel42=\"\
    \"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\"\n    local currentVowel45=\"\
    \"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\"\n    local currentVowel48=\"\
    \"\n    local currentVowel49=\"\"\n    local currentVowel50=\"\"\n    local currentVowel\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\
    \n  local output=\"\"\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local output=\"\"\n  local\
    \ vowel\n  local letter\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowel_positions=\"\
    \"\n    local letter_positions=\"\"\n    local letter_index=0\n    local vowel_index=0\n\
    \    local letter_to_replace=\"\"\n    local vowel_to_replace=\"\"\n    local\
    \ letter_to_add=\"\"\n    local vowel_to_add=\"\"\n    local new_message=\"\"\n\
    \    local new_vowels=\"\"\n    local new_letters=\"\"\n    local new_vowel_positions=\"\
    \"\n    local new_letter_positions=\"\"\n    local new_letter_index=0\n    local\
    \ new_vowel_index=0\n    local new_letter_to_replace=\"\"\n    local new_vowel_to_replace=\"\
    \"\n    local new_letter_to_add=\"\"\n    local new_vowel_to_add=\"\"\n    local\
    \ new_letter_to_replace_index=0\n    local new_vowel_to_replace_index=0\n    local\
    \ new_letter_to_add_index=0\n    local new_vowel_to_add_index=0\n    local new_letter_to_replace_index2=0\n\
    \    local new_vowel_to_replace_index2=0\n    local new_letter_to_add_index2=0\n\
    \    local new_vowel_to_add_index2=0\n    local new_letter_to_replace_index3=0\n\
    \    local new_vowel_to_replace_index3=0\n    local new_letter_to_add_index3=0\n\
    \    local new_vowel_to_add_index3=0\n    local new_letter_to_replace_index4=0\n\
    \    local new_vowel_to_replace_index4=0\n    local new_letter_to_add_index4=0\n\
    \    local new_vowel_to_add_index4=0\n    local new_letter_to_replace_index5=0\n\
    \    local new_vowel_to_replace_index5=0\n    local new_letter_to_add_index5=0\n\
    \    local new_vowel_to_add_index5=0\n    local new_letter_to_replace_index6=0\n\
    \    local new_vowel_to_replace_index6=0\n    local new_letter_to_add_index6=0\n\
    \    local new_vowel_to_add_index6=0\n    local new_letter_to_replace_index7=0\n\
    \    local new_vowel_to_replace_index7=0\n    local new_letter_to_add_index7=0\n\
    \    local new_vowel_to_add_index7=0\n    local new_letter_to_replace_index8=0\n\
    \    local new_vowel_to_replace_index8=0\n    local new_letter_to_add_index8=0\n\
    \    local new_vowel_to_add_index8=0\n    local new_letter_to_replace_index9=0\n\
    \    local new_vowel_to_replace_index9=0\n    local new_letter\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z\"\n  local output=\"\"\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local A\n  local B\n  local\
    \ C\n  local D\n  local E\n  local F\n  local G\n  local H\n  local I\n  local\
    \ J\n  local K\n  local L\n  local M\n  local N\n  local O\n  local P\n  local\
    \ Q\n  local R\n  local S\n  local T\n  local U\n  local V\n  local W\n  local\
    \ X\n  local Y\n  local Z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local A\n  local B\n  local C\n  local D\n  local E\n  local F\n  local\
    \ G\n  local H\n  local I\n  local J\n  local K\n  local L\n  local M\n  local\
    \ N\n  local O\n  local P\n  local Q\n  local R\n  local \n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local vowel_positions=$(echo $message | tr A-Z a-z | tr a-z A-Z | tr a-z\
    \ A-Z | tr A-Z a-z | tr A-Z a-z)\n    local letter_positions=$(echo $message |\
    \ tr A-Z a-z | tr a-z A-Z | tr a-z A-Z | tr A-Z a-z | tr A-Z a-z)\n    local new_message=\"\
    \"\n    local new_vowels=\"\"\n    local new_letters=\"\"\n    local new_vowel_positions=\"\
    \"\n    local new_letter_positions=\"\"\n    local i\n    for (( i=0; i<${#message};\
    \ i++ )); do\n        local letter=${message:$i:1}\n        local vowel=${message:$i:2}\n\
    \        if [[ ${vowels:$i:1} == \"a\" ]]; then\n            new_vowels=$new_vowels$letter\n\
    \            new_vowel_positions=$new_vowel_positions$vowel\n        elif [[ ${vowels:$i:1}\
    \ == \"e\" ]]; then\n            new_vowels=$new_vowels$letter\n            new_vowel_positions=$new_vowel_positions$vowel\n\
    \        elif [[ ${vowels:$i:1} == \"i\" ]]; then\n            new_vowels=$new_vowels$letter\n\
    \            new_vowel_positions=$new_vowel_positions$vowel\n        elif [[ ${vowels:$i:1}\
    \ == \"o\" ]]; then\n            new_vowels=$new_vowels$letter\n            new_vowel_positions=$new_vowel_positions$vowel\n\
    \        elif [[ ${vowels:$i:1} == \"u\" ]]; then\n            new_vowels=$new_vowels$letter\n\
    \            new_vowel_positions=$new_vowel_positions$vowel\n        elif [[ ${vowels:$i:1}\
    \ == \"A\" ]]; then\n            new_vowels=$new_vowels$letter\n            new_vowel_positions=$new_vowel_positions$vowel\n\
    \        elif [[ ${vowels:$i:1} == \"E\" ]]; then\n            new_vowels=$new_vowels$letter\n\
    \            new_vowel_positions=$new_vowel_positions$vowel\n        elif [[ ${vowels:$i:1}\
    \ == \"I\" ]]; then\n            new_vowels=$new_vowels$letter\n            new_vowel_positions=$new_vowel_positions$vowel\n\
    \        elif [[ ${vowels:$i:1} == \"O\" ]]; then\n            new_vowels=$new_vowels$letter\n\
    \            new_\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjf9zay48.sh: line 56: syntax error near unexpected token `}''

    /tmp/tmpjf9zay48.sh: line 56: `}''

    '
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\
    \n  local result=\"\"\n  local vowel\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels=\"aeiouAEIOU\"\n    local output=\"\
    \"\n    local count=0\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ currentVowel\n    local currentLetter\n    local currentLetterIndex\n    local\
    \ currentLetterIndex2\n    local currentLetterIndex3\n    local currentLetterIndex4\n\
    \    local currentLetterIndex5\n    local currentLetterIndex6\n    local currentLetterIndex7\n\
    \    local currentLetterIndex8\n    local currentLetterIndex9\n    local currentLetterIndex10\n\
    \    local currentLetterIndex11\n    local currentLetterIndex12\n    local currentLetterIndex13\n\
    \    local currentLetterIndex14\n    local currentLetterIndex15\n    local currentLetterIndex16\n\
    \    local currentLetterIndex17\n    local currentLetterIndex18\n    local currentLetterIndex19\n\
    \    local currentLetterIndex20\n    local currentLetterIndex21\n    local currentLetterIndex22\n\
    \    local currentLetterIndex23\n    local currentLetterIndex24\n    local currentLetterIndex25\n\
    \    local currentLetterIndex26\n    local currentLetterIndex27\n    local currentLetterIndex28\n\
    \    local currentLetterIndex29\n    local currentLetterIndex30\n    local currentLetterIndex31\n\
    \    local currentLetterIndex32\n    local currentLetterIndex33\n    local currentLetterIndex34\n\
    \    local currentLetterIndex35\n    local currentLetterIndex36\n    local currentLetterIndex37\n\
    \    local currentLetterIndex38\n    local currentLetterIndex39\n    local currentLetterIndex40\n\
    \    local currentLetterIndex41\n    local currentLetterIndex42\n    local currentLetterIndex43\n\
    \    local currentLetterIndex44\n    local currentLetterIndex45\n    local currentLetterIndex46\n\
    \    local currentLetterIndex47\n    local currentLetterIndex48\n    local currentLetterIndex49\n\
    \    local currentLetterIndex50\n    local currentLetterIndex51\n    local currentLetterIndex52\n\
    \    local currentLetterIndex53\n    local currentLetterIndex54\n    local currentLetterIndex55\n\
    \    local currentLetterIndex56\n    local currentLetterIndex57\n    local currentLetterIndex58\n\
    \    local currentLetterIndex59\n    local currentLetterIndex60\n    local currentLetterIndex61\n\
    \    local currentLetterIndex62\n    local currentLetterIndex63\n    local currentLetter\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local output=\"\"\n    local vowel_count=0\n    local vowel_position=0\n\
    \    local vowel_position2=0\n    local vowel_position3=0\n    local vowel_position4=0\n\
    \    local vowel_position5=0\n    local vowel_position6=0\n    local vowel_position7=0\n\
    \    local vowel_position8=0\n    local vowel_position9=0\n    local vowel_position10=0\n\
    \    local vowel_position11=0\n    local vowel_position12=0\n    local vowel_position13=0\n\
    \    local vowel_position14=0\n    local vowel_position15=0\n    local vowel_position16=0\n\
    \    local vowel_position17=0\n    local vowel_position18=0\n    local vowel_position19=0\n\
    \    local vowel_position20=0\n    local vowel_position21=0\n    local vowel_position22=0\n\
    \    local vowel_position23=0\n    local vowel_position24=0\n    local vowel_position25=0\n\
    \    local vowel_position26=0\n    local vowel_position27=0\n    local vowel_position28=0\n\
    \    local vowel_position29=0\n    local vowel_position30=0\n    local vowel_position31=0\n\
    \    local vowel_position32=0\n    local vowel_position33=0\n    local vowel_position34=0\n\
    \    local vowel_position35=0\n    local vowel_position36=0\n    local vowel_position37=0\n\
    \    local vowel_position38=0\n    local vowel_position39=0\n    local vowel_position40=0\n\
    \    local vowel_position41=0\n    local vowel_position42=0\n    local vowel_position43=0\n\
    \    local vowel_position44=0\n    local vowel_position45=0\n    local vowel_position46=0\n\
    \    local vowel_position47=0\n    local vowel_position48=0\n    local vowel_position49=0\n\
    \    local vowel_position50=0\n    local vowel_position51=0\n    local vowel_position52=0\n\
    \    local vowel_position53=0\n    local vowel_position54=0\n    local vowel_position55=0\n\
    \    local vowel_position56=0\n    local vowel_position57=0\n    local vowel_position58=0\n\
    \    local vowel_position59=0\n    local vowel_position60=0\n    local vowel_position\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local output=\"\"\n    local vowelCount=0\n    local vowelPosition=0\n\
    \    local currentLetter=\"\"\n    local previousLetter=\"\"\n    local previousVowel=\"\
    \"\n    local previousVowelPosition=0\n    local currentVowel=\"\"\n    local\
    \ currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelPositionInLetter=0\n\
    \    local currentVowelPositionInVowel=0\n    local previousVowelPositionInLetter=0\n\
    \    local previousVowelPositionInVowel=0\n    local previousVowelCount=0\n  \
    \  local previousVowelPosition=0\n    local previousVowelPositionInLetter=0\n\
    \    local previousVowelPositionInVowel=0\n    local previousVowelPositionInVowelCount=0\n\
    \    local previousVowelPositionInVowelPosition=0\n    local previousVowelPositionInVowelPositionInLetter=0\n\
    \    local previousVowelPositionInVowelPositionInVowel=0\n    local previousVowelPositionInVowelPositionInVowelCount=0\n\
    \    local previousVowelPositionInVowelPositionInVowelPosition=0\n    local previousVowelPositionInVowelPositionInVowelPositionInLetter=0\n\
    \    local previousVowelPositionInVowelPositionInVowelPositionInVowel=0\n    local\
    \ previousVowelPositionInVowelPositionInVowelPositionInVowelCount=0\n    local\
    \ previousVowelPositionInVowelPositionInVowelPositionInVowelPosition=0\n    local\
    \ previousVowelPositionInVowelPositionInVowelPositionInVowelPositionInLetter=0\n\
    \    local previousVowelPositionInVowelPositionInVowelPositionInVowelPositionInVowel=0\n\
    \    local previousVowelPositionInVowelPositionInVowelPositionInVowelPositionInVowelCount=0\n\
    \    local previousVowelPositionInVowelPositionInVowelPositionInVowelPositionInVowelPosition=0\n\
    \    local previousVowelPositionInVowelPositionInVowelPositionInVowelPositionInVowelPositionInLetter\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local vowelsCount=$(echo $vowels | wc -w)\n    local vowelsArray=($vowels)\n\
    \    local vowelsArrayCount=$(echo ${vowelsArray[@]} | wc -w)\n    local vowelsArrayIndex=0\n\
    \    local vowelsArrayIndexCount=0\n    local vowelsArrayIndexEnd=$((vowelsArrayIndex+vowelsArrayCount-1))\n\
    \    local vowelsArrayIndexStart=$((vowelsArrayIndex-1))\n    local vowelsArrayIndexStartEnd=$((vowelsArrayIndex+1))\n\
    \    local vowelsArrayIndexStartEndCount=$((vowelsArrayIndexEnd-vowelsArrayIndexStart))\n\
    \    local vowelsArrayIndexStartEndCountCount=$((vowelsArrayIndexCount-vowelsArrayIndexStartEndCount))\n\
    \    local vowelsArrayIndexStartEndCountCountCount=$((vowelsArrayIndexCountCount-vowelsArrayIndexStartEndCountCount))\n\
    \    local vowelsArrayIndexStartEndCountCountCountCount=$((vowelsArrayIndexCountCountCountCount-vowelsArrayIndexStartEndCountCountCount))\n\
    \    local vowelsArrayIndexStartEndCountCountCountCountCount=$((vowelsArrayIndexCountCountCountCountCountCount-vowelsArrayIndexStartEndCountCountCountCountCount))\n\
    \    local vowelsArrayIndexStartEndCountCountCountCountCountCount=$((vowelsArrayIndexCountCountCountCountCountCountCountCount-vowelsArrayIndexStartEndCountCountCountCountCountCount))\n\
    \    local vowelsArrayIndexStartEndCountCountCountCountCountCountCount=$((vowelsArrayIndexCountCountCountCountCountCountCountCountCountCount-vowelsArrayIndexStartEndCountCountCountCountCountCountCountCount))\n\
    \    local vowelsArrayIndexStartEndCountCountCountCountCountCountCountCount=$((vowelsArrayIndexCountCountCountCountCountCountCountCountCountCountCountCount-vowelsArrayIndexStartEndCountCountCountCountCountCountCountCountCountCount))\n\
    \    local vowelsArrayIndexStartEndCountCountCountCountCountCountCountCount=$((vowelsArrayIndexCountCountCountCountCountCountCountCountCountCountCountCountCountCount-vowelsArrayIndexStartEndCountCountCountCountCountCountCountCountCountCountCountCount))\n\
    \    local vowelsArrayIndexStartEndCountCountCountCountCountCountCountCountCountCount=$((vowelsArrayIndexCountCountCount\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjqosoj71.sh: line 34: unexpected EOF while looking for matching
    `)''

    /tmp/tmpjqosoj71.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local vowelsCount=$(echo $vowels | wc -w)\n    local vowelsIndex=$(echo\
    \ $vowels | awk '{print $1}')\n    local vowelsIndex2=$(echo $vowels | awk '{print\
    \ $2}')\n    local vowelsIndex3=$(echo $vowels | awk '{print $3}')\n    local\
    \ vowelsIndex4=$(echo $vowels | awk '{print $4}')\n    local vowelsIndex5=$(echo\
    \ $vowels | awk '{print $5}')\n    local vowelsIndex6=$(echo $vowels | awk '{print\
    \ $6}')\n    local vowelsIndex7=$(echo $vowels | awk '{print $7}')\n    local\
    \ vowelsIndex8=$(echo $vowels | awk '{print $8}')\n    local vowelsIndex9=$(echo\
    \ $vowels | awk '{print $9}')\n    local vowelsIndex10=$(echo $vowels | awk '{print\
    \ $10}')\n    local vowelsIndex11=$(echo $vowels | awk '{print $11}')\n    local\
    \ vowelsIndex12=$(echo $vowels | awk '{print $12}')\n    local vowelsIndex13=$(echo\
    \ $vowels | awk '{print $13}')\n    local vowelsIndex14=$(echo $vowels | awk '{print\
    \ $14}')\n    local vowelsIndex15=$(echo $vowels | awk '{print $15}')\n    local\
    \ vowelsIndex16=$(echo $vowels | awk '{print $16}')\n    local vowelsIndex17=$(echo\
    \ $vowels | awk '{print $17}')\n    local vowelsIndex18=$(echo $vowels | awk '{print\
    \ $18}')\n    local vowelsIndex19=$(echo $vowels | awk '{print $19}')\n    local\
    \ vowelsIndex20=$(echo $vowels | awk '{print $20}')\n    local vowelsIndex21=$(echo\
    \ $vowels | awk '{print $21}')\n    local vowelsIndex22=$(echo $vowels | awk '{print\
    \ $22}')\n    local vowelsIndex23=$(echo $vowels | awk '{print $23}')\n    local\
    \ vowelsIndex24=$(echo $vowels | awk '{print $24}')\n    local vowelsIndex25=$(echo\
    \ $vowels | awk '{print $25}')\n    local vowelsIndex26=$(echo $vowels | awk '{print\
    \ $26}')\n    local vowelsIndex27=$(echo $vowels | awk '{print $27}')\n    local\
    \ vowelsIndex28=$(echo $vowels | awk '{print $28}')\n    local vowelsIndex29\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelChar=\"\"\n    local vowelIndex2=0\n    local vowelChar2=\"\"\n    local\
    \ vowelIndex3=0\n    local vowelChar3=\"\"\n    local vowelIndex4=0\n    local\
    \ vowelChar4=\"\"\n    local vowelIndex5=0\n    local vowelChar5=\"\"\n    local\
    \ vowelIndex6=0\n    local vowelChar6=\"\"\n    local vowelIndex7=0\n    local\
    \ vowelChar7=\"\"\n    local vowelIndex8=0\n    local vowelChar8=\"\"\n    local\
    \ vowelIndex9=0\n    local vowelChar9=\"\"\n    local vowelIndex10=0\n    local\
    \ vowelChar10=\"\"\n    local vowelIndex11=0\n    local vowelChar11=\"\"\n   \
    \ local vowelIndex12=0\n    local vowelChar12=\"\"\n    local vowelIndex13=0\n\
    \    local vowelChar13=\"\"\n    local vowelIndex14=0\n    local vowelChar14=\"\
    \"\n    local vowelIndex15=0\n    local vowelChar15=\"\"\n    local vowelIndex16=0\n\
    \    local vowelChar16=\"\"\n    local vowelIndex17=0\n    local vowelChar17=\"\
    \"\n    local vowelIndex18=0\n    local vowelChar18=\"\"\n    local vowelIndex19=0\n\
    \    local vowelChar19=\"\"\n    local vowelIndex20=0\n    local vowelChar20=\"\
    \"\n    local vowelIndex21=0\n    local vowelChar21=\"\"\n    local vowelIndex22=0\n\
    \    local vowelChar22=\"\"\n    local vowelIndex23=0\n    local vowelChar23=\"\
    \"\n    local vowelIndex24=0\n    local vowelChar24=\"\"\n    local vowelIndex25=0\n\
    \    local vowelChar25=\"\"\n    local vowelIndex26=0\n    local vowelChar26=\"\
    \"\n    local vowelIndex27=0\n    local vowelChar27=\"\"\n    local vowelIndex28=0\n\
    \    local vowelChar28=\"\"\n    local vowelIndex29=0\n    local vowelChar29=\"\
    \"\n    local vowelIndex30=0\n    local vowelChar30=\"\"\n    local vowelIndex31=0\n\
    \    local vowelChar31=\"\"\n    local vowelIndex32=0\n    local vowelChar32=\"\
    \"\n    local vowelIndex33=0\n    local vowelChar33=\"\"\n    local vowelIndex34=0\n\
    \    local vowelChar34=\"\"\n    local vowelIndex35=0\n    local vowel\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local result=\"\"\n  local vowelIndex=0\n  local vowelCount=0\n  local currentVowel\n\
    \  local currentLetter\n  local currentLetterIndex\n  local currentLetterCount\n\
    \  local currentLetterIndex2\n  local currentLetterCount2\n  local currentLetterIndex3\n\
    \  local currentLetterCount3\n  local currentLetterIndex4\n  local currentLetterCount4\n\
    \  local currentLetterIndex5\n  local currentLetterCount5\n  local currentLetterIndex6\n\
    \  local currentLetterCount6\n  local currentLetterIndex7\n  local currentLetterCount7\n\
    \  local currentLetterIndex8\n  local currentLetterCount8\n  local currentLetterIndex9\n\
    \  local currentLetterCount9\n  local currentLetterIndex10\n  local currentLetterCount10\n\
    \  local currentLetterIndex11\n  local currentLetterCount11\n  local currentLetterIndex12\n\
    \  local currentLetterCount12\n  local currentLetterIndex13\n  local currentLetterCount13\n\
    \  local currentLetterIndex14\n  local currentLetterCount14\n  local currentLetterIndex15\n\
    \  local currentLetterCount15\n  local currentLetterIndex16\n  local currentLetterCount16\n\
    \  local currentLetterIndex17\n  local currentLetterCount17\n  local currentLetterIndex18\n\
    \  local currentLetterCount18\n  local currentLetterIndex19\n  local currentLetterCount19\n\
    \  local currentLetterIndex20\n  local currentLetterCount20\n  local currentLetterIndex21\n\
    \  local currentLetterCount21\n  local currentLetterIndex22\n  local currentLetterCount22\n\
    \  local currentLetterIndex23\n  local currentLetterCount23\n  local currentLetterIndex24\n\
    \  local currentLetterCount24\n  local currentLetterIndex25\n  local currentLetterCount25\n\
    \  local currentLetterIndex26\n  local currentLetterCount26\n  local currentLetterIndex27\n\
    \  local currentLetterCount27\n  local currentLetterIndex28\n  local currentLetterCount28\n\
    \  local currentLetterIndex29\n  local currentLetterCount29\n  local currentLetterIndex30\n\
    \  local currentLetterCount30\n  local currentLetterIndex31\n  local currentLetterCount31\n\
    \  local currentLetterIndex32\n  local currentLetterCount32\n  local currentLetterIndex33\n\
    \  local currentLetterCount33\n  local currentLetterIndex34\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels=\"aeiouAEIOU\"\n    local result=\"\
    \"\n    local vowel\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        if [[ \"${vowels}\" =~ \"${letter}\" ]]; then\n\
    \            letter=${letter:0:1}\n        fi\n        output+=\"${letter}\"\n\
    \    done\n    echo \"${output}\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n  \
    \  local vowel\n    local letter\n    local i\n    local j\n    local k\n    for\
    \ ((i=0; i<${#message}; i++)); do\n        letter=${message:i:1}\n        if [[\
    \ ${letters:0:1} == \"${letter}\" ]]; then\n            letter=${letter:1}\n \
    \       fi\n        for ((j=0; j<${#vowels}; j++)); do\n            vowel=${vowels:j:1}\n\
    \            if [[ ${vowels:0:1} == \"${vowel}\" ]]; then\n                vowel=${vowel:1}\n\
    \            fi\n            if [[ ${message:i:1} == \"${vowel}\" ]]; then\n \
    \               k=$(expr ${i} + ${j})\n                result=\"${result:0:k}${letter:1}${result:k+1}\"\
    \n            fi\n        done\n    done\n    echo \"${result}\"\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelIndex2=0\n    local vowelIndex3=0\n    local vowelIndex4=0\n    local vowelIndex5=0\n\
    \    local vowelIndex6=0\n    local vowelIndex7=0\n    local vowelIndex8=0\n \
    \   local vowelIndex9=0\n    local vowelIndex10=0\n    local vowelIndex11=0\n\
    \    local vowelIndex12=0\n    local vowelIndex13=0\n    local vowelIndex14=0\n\
    \    local vowelIndex15=0\n    local vowelIndex16=0\n    local vowelIndex17=0\n\
    \    local vowelIndex18=0\n    local vowelIndex19=0\n    local vowelIndex20=0\n\
    \    local vowelIndex21=0\n    local vowelIndex22=0\n    local vowelIndex23=0\n\
    \    local vowelIndex24=0\n    local vowelIndex25=0\n    local vowelIndex26=0\n\
    \    local vowelIndex27=0\n    local vowelIndex28=0\n    local vowelIndex29=0\n\
    \    local vowelIndex30=0\n    local vowelIndex31=0\n    local vowelIndex32=0\n\
    \    local vowelIndex33=0\n    local vowelIndex34=0\n    local vowelIndex35=0\n\
    \    local vowelIndex36=0\n    local vowelIndex37=0\n    local vowelIndex38=0\n\
    \    local vowelIndex39=0\n    local vowelIndex40=0\n    local vowelIndex41=0\n\
    \    local vowelIndex42=0\n    local vowelIndex43=0\n    local vowelIndex44=0\n\
    \    local vowelIndex45=0\n    local vowelIndex46=0\n    local vowelIndex47=0\n\
    \    local vowelIndex48=0\n    local vowelIndex49=0\n    local vowelIndex50=0\n\
    \    local vowelIndex51=0\n    local vowelIndex52=0\n    local vowelIndex53=0\n\
    \    local vowelIndex54=0\n    local vowelIndex55=0\n    local vowelIndex56=0\n\
    \    local vowelIndex57=0\n    local vowelIndex58=0\n    local vowelIndex59=0\n\
    \    local vowelIndex60=0\n    local vowelIndex61=0\n    local vowelIndex62=0\n\
    \    local vowelIndex63=0\n    local vowelIndex64=0\n    local vowelIndex65=0\n\
    \    local vowelIndex66=0\n    local vowelIndex67=0\n    local vowelIndex68=0\n\
    \    local vowelIndex69=0\n    local \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels=\"aeiouAEIOU\"\n  local output=\"\"\n  local count=0\n  local\
    \ vowelCount=0\n  local vowelIndex=0\n  local currentChar\n  local currentCharIndex\n\
    \  local currentCharCount\n  local currentCharValue\n  local currentCharValueIndex\n\
    \  local currentCharValueCount\n  local currentCharValueIndex2\n  local currentCharValueCount2\n\
    \  local currentCharValueIndex3\n  local currentCharValueCount3\n  local currentCharValueIndex4\n\
    \  local currentCharValueCount4\n  local currentCharValueIndex5\n  local currentCharValueCount5\n\
    \  local currentCharValueIndex6\n  local currentCharValueCount6\n  local currentCharValueIndex7\n\
    \  local currentCharValueCount7\n  local currentCharValueIndex8\n  local currentCharValueCount8\n\
    \  local currentCharValueIndex9\n  local currentCharValueCount9\n  local currentCharValueIndex10\n\
    \  local currentCharValueCount10\n  local currentCharValueIndex11\n  local currentCharValueCount11\n\
    \  local currentCharValueIndex12\n  local currentCharValueCount12\n  local currentCharValueIndex13\n\
    \  local currentCharValueCount13\n  local currentCharValueIndex14\n  local currentCharValueCount14\n\
    \  local currentCharValueIndex15\n  local currentCharValueCount15\n  local currentCharValueIndex16\n\
    \  local currentCharValueCount16\n  local currentCharValueIndex17\n  local currentCharValueCount17\n\
    \  local currentCharValueIndex18\n  local currentCharValueCount18\n  local currentCharValueIndex19\n\
    \  local currentCharValueCount19\n  local currentCharValueIndex20\n  local currentCharValueCount20\n\
    \  local currentCharValueIndex21\n  local currentCharValueCount21\n  local currentCharValueIndex22\n\
    \  local currentCharValueCount22\n  local currentCharValueIndex23\n  local currentCharValueCount23\n\
    \  local currentCharValueIndex24\n  local currentCharValueCount24\n  local currentCharValueIndex25\n\
    \  local currentCharValueCount25\n  local currentCharValueIndex26\n  local currentCharValueCount26\n\
    \  local currentCharValueIndex27\n  local currentCharValueCount27\n  local current\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels=\"aeiouAEIOU\"\n    local output=\"\
    \"\n    local count=0\n    local lastVowel=\"\"\n    local lastLetter=\"\"\n \
    \   local lastLetterCount=0\n    local lastVowelCount=0\n    local lastVowelPosition=0\n\
    \    local lastLetterPosition=0\n    local currentLetter=\"\"\n    local currentVowel=\"\
    \"\n    local currentLetterCount=0\n    local currentVowelPosition=0\n    local\
    \ currentVowelCount=0\n    local currentLetterPosition=0\n    local currentVowelPositionCount=0\n\
    \    local currentVowelPositionCount=0\n    local currentVowelPositionCount=0\n\
    \    local currentVowelPositionCount=0\n    local currentVowelPositionCount=0\n\
    \    local currentVowelPositionCount=0\n    local currentVowelPositionCount=0\n\
    \    local currentVowelPositionCount=0\n    local currentVowelPositionCount=0\n\
    \    local currentVowelPositionCount=0\n    local currentVowelPositionCount=0\n\
    \    local currentVowelPositionCount=0\n    local currentVowelPositionCount=0\n\
    \    local currentVowelPositionCount=0\n    local currentVowelPositionCount=0\n\
    \    local currentVowelPositionCount=0\n    local currentVowelPositionCount=0\n\
    \    local currentVowelPositionCount=0\n    local currentVowelPositionCount=0\n\
    \    local currentVowelPositionCount=0\n    local currentVowelPositionCount=0\n\
    \    local currentVowelPositionCount=0\n    local currentVowelPositionCount=0\n\
    \    local currentVowelPositionCount=0\n    local currentVowelPositionCount=0\n\
    \    local currentVowelPositionCount=0\n    local currentVowelPositionCount=0\n\
    \    local currentVowelPositionCount=0\n    local currentVowelPositionCount=0\n\
    \    local currentVowelPositionCount=0\n    local currentVowelPositionCount=0\n\
    \    local currentVowelPositionCount=0\n    local currentVowelPositionCount=0\n\
    \    local currentVowelPositionCount=0\n    local currentVowelPositionCount=0\n\
    \    local currentVowelPositionCount=0\n    local currentVowelPositionCount=0\n\
    \    local currentVowel\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local vowel_positions=$(echo $message | sed 's/\\(.\\)\\(.\\)\\(.\\)\\(.\\\
    )\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\\
    )\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\\
    )\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\\
    )\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\\
    )\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\\
    )\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\\
    )\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\\
    )\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\\
    )\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\\
    )\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\\
    )\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\\
    )\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\\
    )\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\\
    )\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\)\\(.\\\
    )\\(.\\)\\(.\\)\\(.\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwln6tt6w.sh: line 17: unexpected EOF while looking for matching
    `''''

    /tmp/tmpwln6tt6w.sh: line 34: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042913
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local msg2=\"\"\n   \
    \ local vowels=\"a e i o u y\"\n    local vowels2=\"a e i o u y\"\n    local vowels3=\"\
    a e i o u y\"\n    local vowels4=\"a e i o u y\"\n    local vowels5=\"a e i o\
    \ u y\"\n    local vowels6=\"a e i o u y\"\n    local vowels7=\"a e i o u y\"\n\
    \    local vowels8=\"a e i o u y\"\n    local vowels9=\"a e i o u y\"\n    local\
    \ vowels10=\"a e i o u y\"\n    local vowels11=\"a e i o u y\"\n    local vowels12=\"\
    a e i o u y\"\n    local vowels13=\"a e i o u y\"\n    local vowels14=\"a e i\
    \ o u y\"\n    local vowels15=\"a e i o u y\"\n    local vowels16=\"a e i o u\
    \ y\"\n    local vowels17=\"a e i o u y\"\n    local vowels18=\"a e i o u y\"\n\
    \    local vowels19=\"a e i o u y\"\n    local vowels20=\"a e i o u y\"\n    local\
    \ vowels21=\"a e i o u y\"\n    local vowels22=\"a e i o u y\"\n    local vowels23=\"\
    a e i o u y\"\n    local vowels24=\"a e i o u y\"\n    local vowels25=\"a e i\
    \ o u y\"\n    local vowels26=\"a e i o u y\"\n    local vowels27=\"a e i o u\
    \ y\"\n    local vowels28=\"a e i o u y\"\n    local vowels29=\"a e i o u y\"\n\
    \    local vowels30=\"a e i o u y\"\n    local vowels31=\"a e i o u y\"\n    local\
    \ vowels32=\"a e i o u y\"\n    local vowels33=\"a e i o u y\"\n    local vowels34=\"\
    a e i o u y\"\n    local vowels35=\"a e i o u y\"\n    local vowels36=\"a e i\
    \ o u y\"\n    local vowels37=\"a e i o u y\"\n    local vowels38=\"a e i o u\
    \ y\"\n    local vowels39=\"a e i o \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsgom0jdf.sh: line 68: unexpected EOF while looking for matching
    `"''

    /tmp/tmpsgom0jdf.sh: line 72: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042912
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\
    \n  local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n \
    \ local vowel_positions=$(echo $message | sed -e 's/\\([aeiou]\\)\\([aeiou]\\\
    )\\([aeiou]\\)/\\1 \\2 \\3/g')\n  local letter_positions=$(echo $message | sed\
    \ -e 's/\\([aeiou]\\)\\([aeiou]\\)\\([aeiou]\\)/\\1 \\2 \\3/g' | sed -e 's/\\\
    ([aeiou]\\)\\([aeiou]\\)\\([aeiou]\\)/\\1 \\2 \\3/g' | sed -e 's/\\([aeiou]\\\
    )\\([aeiou]\\)\\([aeiou]\\)/\\1 \\2 \\3/g' | sed -e 's/\\([aeiou]\\)\\([aeiou]\\\
    )\\([aeiou]\\)/\\1 \\2 \\3/g' | sed -e 's/\\([aeiou]\\)\\([aeiou]\\)\\([aeiou]\\\
    )/\\1 \\2 \\3/g' | sed -e 's/\\([aeiou]\\)\\([aeiou]\\)\\([aeiou]\\)/\\1 \\2 \\\
    3/g' | sed -e 's/\\([aeiou]\\)\\([aeiou]\\)\\([aeiou]\\)/\\1 \\2 \\3/g' | sed\
    \ -e 's/\\([aeiou]\\)\\([aeiou]\\)\\([aeiou]\\)/\\1 \\2 \\3/g' | sed -e 's/\\\
    ([aeiou]\\)\\([aeiou]\\)\\([aeiou]\\)/\\1 \\2 \\3/g' | sed -e 's/\\([aeiou]\\\
    )\\([aeiou]\\)\\([aeiou]\\)/\\1 \\2 \\3/g' | sed -e 's/\\([aeiou]\\)\\([aeiou]\\\
    )\\([aeiou]\\)/\\1 \\2 \\3/g' | sed -e 's/\\([aeiou]\\)\\([aeiou]\\)\\([aeiou]\\\
    )/\\1 \\2 \\3/g' | sed -e 's/\\([aeiou]\\)\\([aeiou]\\)\\([aeiou]\\)/\\1 \\2 \\\
    3/g' | sed -e 's/\\([aeiou]\\)\\([aeiou]\\)\\([aeiou]\\)/\\1 \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl_4a_dnv.sh: line 19: unexpected EOF while looking for matching
    `''''

    /tmp/tmpl_4a_dnv.sh: line 36: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042913
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local vowels_2=\"a e i o u y A E I O U Y\"\n  local vowels_3=\"a\
    \ e i o u y A E I O U Y A E I O U Y\"\n  local vowels_4=\"a e i o u y A E I O\
    \ U Y A E I O U Y A E I O U Y\"\n  local vowels_5=\"a e i o u y A E I O U Y A\
    \ E I O U Y A E I O U Y A E I O U Y\"\n  local vowels_6=\"a e i o u y A E I O\
    \ U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n  local vowels_7=\"a\
    \ e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I\
    \ O U Y\"\n  local vowels_8=\"a e i o u y A E I O U Y A E I O U Y A E I O U Y\
    \ A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n  local vowels_9=\"a e i\
    \ o u y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U\
    \ Y A E I O U Y A E I O U Y\"\n  local vowels_10=\"a e i o u y A E I O U Y A E\
    \ I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O\
    \ U Y A E I O U Y\"\n  local vowels_11=\"a e i o u y A E I O U Y A E I O U Y A\
    \ E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I\
    \ O U Y\"\n  local vowels_12=\"a e i o u y A E I O U Y A E I O U Y A E I O U Y\
    \ A \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdlega11u.sh: line 40: unexpected EOF while looking for matching
    `"''

    /tmp/tmpdlega11u.sh: line 44: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n\
    \    local vowelIndex2=0\n    local vowelIndex3=0\n    local vowelIndex4=0\n \
    \   local vowelIndex5=0\n    local vowelIndex6=0\n    local vowelIndex7=0\n  \
    \  local vowelIndex8=0\n    local vowelIndex9=0\n    local vowelIndex10=0\n  \
    \  local vowelIndex11=0\n    local vowelIndex12=0\n    local vowelIndex13=0\n\
    \    local vowelIndex14=0\n    local vowelIndex15=0\n    local vowelIndex16=0\n\
    \    local vowelIndex17=0\n    local vowelIndex18=0\n    local vowelIndex19=0\n\
    \    local vowelIndex20=0\n    local vowelIndex21=0\n    local vowelIndex22=0\n\
    \    local vowelIndex23=0\n    local vowelIndex24=0\n    local vowelIndex25=0\n\
    \    local vowelIndex26=0\n    local vowelIndex27=0\n    local vowelIndex28=0\n\
    \    local vowelIndex29=0\n    local vowelIndex30=0\n    local vowelIndex31=0\n\
    \    local vowelIndex32=0\n    local vowelIndex33=0\n    local vowelIndex34=0\n\
    \    local vowelIndex35=0\n    local vowelIndex36=0\n    local vowelIndex37=0\n\
    \    local vowelIndex38=0\n    local vowelIndex39=0\n    local vowelIndex40=0\n\
    \    local vowelIndex41=0\n    local vowelIndex42=0\n    local vowelIndex43=0\n\
    \    local vowelIndex44=0\n    local vowelIndex45=0\n    local vowelIndex46=0\n\
    \    local vowelIndex47=0\n    local vowelIndex48=0\n    local vowelIndex49=0\n\
    \    local vowelIndex50=0\n    local vowelIndex51=0\n    local vowelIndex52=0\n\
    \    local vowelIndex53=0\n    local vowelIndex54=0\n    local vowelIndex55=0\n\
    \    local vowelIndex56=0\n    local vowelIndex57=0\n    local vowelIndex58=0\n\
    \    local vowelIndex59=0\n    local vowelIndex60=0\n    local vowelIndex61=0\n\
    \    local vowelIndex62=0\n    local vowelIndex63=0\n    local vowelIndex64=0\n\
    \    local vowelIndex65=0\n    local vowelIndex66=0\n    local vowelIndex67=0\n\
    \    local vowelIndex68=0\n    local vowelIndex69=0\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels=\"aeiou\"\n    local result=\"\"\
    \n    local count=0\n    local vowel_position=0\n    local vowel_position2=0\n\
    \    local vowel_position3=0\n    local vowel_position4=0\n    local vowel_position5=0\n\
    \    local vowel_position6=0\n    local vowel_position7=0\n    local vowel_position8=0\n\
    \    local vowel_position9=0\n    local vowel_position10=0\n    local vowel_position11=0\n\
    \    local vowel_position12=0\n    local vowel_position13=0\n    local vowel_position14=0\n\
    \    local vowel_position15=0\n    local vowel_position16=0\n    local vowel_position17=0\n\
    \    local vowel_position18=0\n    local vowel_position19=0\n    local vowel_position20=0\n\
    \    local vowel_position21=0\n    local vowel_position22=0\n    local vowel_position23=0\n\
    \    local vowel_position24=0\n    local vowel_position25=0\n    local vowel_position26=0\n\
    \    local vowel_position27=0\n    local vowel_position28=0\n    local vowel_position29=0\n\
    \    local vowel_position30=0\n    local vowel_position31=0\n    local vowel_position32=0\n\
    \    local vowel_position33=0\n    local vowel_position34=0\n    local vowel_position35=0\n\
    \    local vowel_position36=0\n    local vowel_position37=0\n    local vowel_position38=0\n\
    \    local vowel_position39=0\n    local vowel_position40=0\n    local vowel_position41=0\n\
    \    local vowel_position42=0\n    local vowel_position43=0\n    local vowel_position44=0\n\
    \    local vowel_position45=0\n    local vowel_position46=0\n    local vowel_position47=0\n\
    \    local vowel_position48=0\n    local vowel_position49=0\n    local vowel_position50=0\n\
    \    local vowel_position51=0\n    local vowel_position52=0\n    local vowel_position53=0\n\
    \    local vowel_position54=0\n    local vowel_position55=0\n    local vowel_position56=0\n\
    \    local vowel_position57=0\n    local vowel_position58=0\n    local vowel_position59=0\n\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local count=0\n    local vowel_position=0\n    local\
    \ vowel_letter=\"\"\n    local letter=\"\"\n    local letter2=\"\"\n    local\
    \ letter3=\"\"\n    local letter4=\"\"\n    local letter5=\"\"\n    local letter6=\"\
    \"\n    local letter7=\"\"\n    local letter8=\"\"\n    local letter9=\"\"\n \
    \   local letter10=\"\"\n    local letter11=\"\"\n    local letter12=\"\"\n  \
    \  local letter13=\"\"\n    local letter14=\"\"\n    local letter15=\"\"\n   \
    \ local letter16=\"\"\n    local letter17=\"\"\n    local letter18=\"\"\n    local\
    \ letter19=\"\"\n    local letter20=\"\"\n    local letter21=\"\"\n    local letter22=\"\
    \"\n    local letter23=\"\"\n    local letter24=\"\"\n    local letter25=\"\"\n\
    \    local letter26=\"\"\n    local letter27=\"\"\n    local letter28=\"\"\n \
    \   local letter29=\"\"\n    local letter30=\"\"\n    local letter31=\"\"\n  \
    \  local letter32=\"\"\n    local letter33=\"\"\n    local letter34=\"\"\n   \
    \ local letter35=\"\"\n    local letter36=\"\"\n    local letter37=\"\"\n    local\
    \ letter38=\"\"\n    local letter39=\"\"\n    local letter40=\"\"\n    local letter41=\"\
    \"\n    local letter42=\"\"\n    local letter43=\"\"\n    local letter44=\"\"\n\
    \    local letter45=\"\"\n    local letter46=\"\"\n    local letter47=\"\"\n \
    \   local letter48=\"\"\n    local letter49=\"\"\n    local letter50=\"\"\n  \
    \  local letter51=\"\"\n    local letter52=\"\"\n    local letter53=\"\"\n   \
    \ local letter54=\"\"\n    local letter55=\"\"\n    local letter56=\"\"\n    local\
    \ letter57=\"\"\n    local letter58=\"\"\n    local letter59=\"\"\n    local letter60=\"\
    \"\n    local letter61=\"\"\n    local letter62=\"\"\n    local letter63=\"\"\n\
    \    local letter64=\"\"\n    local letter65=\"\"\n    local letter66=\"\"\n \
    \   local letter67=\"\"\n    local letter68=\"\"\n    local letter69=\"\"\n  \
    \  local letter70=\"\"\n    local letter71=\"\"\n    local letter72=\"\"\n   \
    \ local letter73=\"\"\n    local letter74=\"\"\n    local letter75=\"\"\n    local\
    \ letter76=\"\"\n    local letter77=\"\"\n    local letter78=\"\"\n    local letter79\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowel_positions=\"\
    \"\n    local letter_positions=\"\"\n    local letter_index=0\n    local vowel_index=0\n\
    \    local letters_index=0\n    local vowels_index=0\n    local new_message=\"\
    \"\n    local new_vowels=\"\"\n    local new_letters=\"\"\n    local new_vowel_positions=\"\
    \"\n    local new_letter_positions=\"\"\n    local new_letter_index=0\n    local\
    \ new_vowel_index=0\n    local new_letters_index=0\n    local new_vowels_index=0\n\
    \    local new_letters_index=0\n    local new_vowels_index=0\n    local new_letter_index=0\n\
    \    local new_vowel_index=0\n    local new_letter_index=0\n    local new_vowel_index=0\n\
    \    local new_letter_index=0\n    local new_vowel_index=0\n    local new_letter_index=0\n\
    \    local new_vowel_index=0\n    local new_letter_index=0\n    local new_vowel_index=0\n\
    \    local new_letter_index=0\n    local new_vowel_index=0\n    local new_letter_index=0\n\
    \    local new_vowel_index=0\n    local new_letter_index=0\n    local new_vowel_index=0\n\
    \    local new_letter_index=0\n    local new_vowel_index=0\n    local new_letter_index=0\n\
    \    local new_vowel_index=0\n    local new_letter_index=0\n    local new_vowel_index=0\n\
    \    local new_letter_index=0\n    local new_vowel_index=0\n    local new_letter_index=0\n\
    \    local new_vowel_index=0\n    local new_letter_index=0\n    local new_vowel_index=0\n\
    \    local new_letter_index=0\n    local new_vowel_index=0\n    local new_letter_index=0\n\
    \    local new_vowel_index=0\n    local new_letter_index=0\n    local new_vowel_index=0\n\
    \    local new_letter_index=0\n    local new_vowel_index=0\n    local new_letter_index=0\n\
    \    local new_vowel_index=0\n    local new_letter_index=0\n    local new_vowel_index=0\n\
    \    local new_letter_index=0\n    local new_vowel_index=0\n    local new_letter_index=0\n\
    \    local new_vowel_index=0\n    local new_letter_index=0\n    local new_vowel_index=0\n\
    \    local new_letter_index=0\n    local new_vowel_index=0\n    local new_letter_index=0\n\
    \    local new_vowel_index=0\n    local new_letter\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local msg2=\"\"\n   \
    \ local vowels=\"a e i o u y\" # vowels in english\n    local vowels2=\"a e i\
    \ o u y\" # vowels in english\n    local vowels3=\"a e i o u y\" # vowels in english\n\
    \    local vowels4=\"a e i o u y\" # vowels in english\n    local vowels5=\"a\
    \ e i o u y\" # vowels in english\n    local vowels6=\"a e i o u y\" # vowels\
    \ in english\n    local vowels7=\"a e i o u y\" # vowels in english\n    local\
    \ vowels8=\"a e i o u y\" # vowels in english\n    local vowels9=\"a e i o u y\"\
    \ # vowels in english\n    local vowels10=\"a e i o u y\" # vowels in english\n\
    \    local vowels11=\"a e i o u y\" # vowels in english\n    local vowels12=\"\
    a e i o u y\" # vowels in english\n    local vowels13=\"a e i o u y\" # vowels\
    \ in english\n    local vowels14=\"a e i o u y\" # vowels in english\n    local\
    \ vowels15=\"a e i o u y\" # vowels in english\n    local vowels16=\"a e i o u\
    \ y\" # vowels in english\n    local vowels17=\"a e i o u y\" # vowels in english\n\
    \    local vowels18=\"a e i o u y\" # vowels in english\n    local vowels19=\"\
    a e i o u y\" # vowels in english\n    local vowels20=\"a e i o u y\" # vowels\
    \ in english\n    local vowels21=\"a e i o u y\" # vowels in english\n    local\
    \ vowels22=\"a e i o u y\" # vowels in english\n    local vowels23=\"a e i o u\
    \ y\" # vowels in english\n    local vowels24=\"a e i o u y\" # vowels in english\n\
    \    local vowels25=\"a e i o u y\" # vowels in english\n    local vowels26=\"\
    a e i o u y\" # vowels in english\n    local vowels27=\"a e i o u y\" # vowels\
    \ in english\n    local vowels28=\"a e i o u y\" # vowels in english\n\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels=\"aeiouy\"\n  local output=\"\"\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n  \
    \  for (( i=0; i<${#message}; i++ )); do\n        local letter=${message:$i:1}\n\
    \        local nextLetter=${message:$((i+1)):1}\n        if [[ ${letter} == ${nextLetter}\
    \ ]]; then\n            local replacement=${letters:$letter:2}\n            output+=\"\
    ${replacement}\"\n        else\n            output+=\"${letter}\"\n        fi\n\
    \    done\n    echo \"$output\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local result=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        local nextLetter=${message:$((i+1)):1}\n   \
    \     if [[ \"${letter}\" == \"a\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"e\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"i\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"o\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"u\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"A\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"E\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"I\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"O\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"U\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"0\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"1\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"2\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"3\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"4\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"5\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"6\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"7\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"8\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"9\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"+\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"-\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \".\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"/\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"_\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"*\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"?\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"!\" ]]; then\n            result+=\"${letter}\"\
    \n        elif [[ \"${letter}\" == \"@\" ]]; then\n\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps5lyjcuj.sh: line 79: syntax error near unexpected token `}''

    /tmp/tmps5lyjcuj.sh: line 79: `}''

    '
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n  \
    \  local vowelCount=0\n    local letterCount=0\n    local currentLetter=\"\"\n\
    \    local currentVowel=\"\"\n    local currentVowel2=\"\"\n    local currentVowel3=\"\
    \"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\"\n    local currentVowel6=\"\
    \"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\"\n    local currentVowel9=\"\
    \"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\"\n    local currentVowel12=\"\
    \"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\"\n    local currentVowel15=\"\
    \"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\"\n    local currentVowel18=\"\
    \"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\"\n    local currentVowel21=\"\
    \"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\"\n    local currentVowel24=\"\
    \"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\"\n    local currentVowel27=\"\
    \"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\"\n    local currentVowel30=\"\
    \"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\"\n    local currentVowel33=\"\
    \"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\"\n    local currentVowel36=\"\
    \"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\"\n    local currentVowel39=\"\
    \"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\"\n    local currentVowel42=\"\
    \"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\"\n    local currentVowel45=\"\
    \"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\"\n    local currentVowel48=\"\
    \"\n    local currentVowel49=\"\"\n    local currentVowel50=\"\"\n    local currentVowel\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local vowelsCount=$(echo $vowels\
    \ | wc -w)\n  local lettersCount=$(echo $letters | wc -w)\n  local vowelsIndex=0\n\
    \  local lettersIndex=0\n  local encodedMessage=\"\"\n  local vowelsChar=\"\"\n\
    \  local lettersChar=\"\"\n  local encodedChar=\"\"\n  local vowelsCharIndex=0\n\
    \  local lettersCharIndex=0\n  local encodedCharIndex=0\n  local vowelsCharCount=0\n\
    \  local lettersCharCount=0\n  local encodedCharCount=0\n  local vowelsCharCountIndex=0\n\
    \  local lettersCharCountIndex=0\n  local encodedCharCountIndex=0\n  local vowelsCharCountIndex2=0\n\
    \  local lettersCharCountIndex2=0\n  local encodedCharCountIndex2=0\n  local vowelsCharCountIndex3=0\n\
    \  local lettersCharCountIndex3=0\n  local encodedCharCountIndex3=0\n  local vowelsCharCountIndex4=0\n\
    \  local lettersCharCountIndex4=0\n  local encodedCharCountIndex4=0\n  local vowelsCharCountIndex5=0\n\
    \  local lettersCharCountIndex5=0\n  local encodedCharCountIndex5=0\n  local vowelsCharCountIndex6=0\n\
    \  local lettersCharCountIndex6=0\n  local encodedCharCountIndex6=0\n  local vowelsCharCountIndex7=0\n\
    \  local lettersCharCountIndex7=0\n  local encodedCharCountIndex7=0\n  local vowelsCharCountIndex8=0\n\
    \  local lettersCharCountIndex8=0\n  local encodedCharCountIndex8=0\n  local vowelsCharCountIndex9=0\n\
    \  local lettersCharCountIndex9=0\n  local encodedCharCountIndex9=0\n  local vowelsCharCountIndex10=0\n\
    \  local lettersCharCountIndex10=0\n  local encodedCharCountIndex10=0\n  local\
    \ vowelsCharCountIndex11=0\n  local lettersCharCountIndex11=0\n  local encodedCharCountIndex11=0\n\
    \  local vowelsCharCountIndex12=0\n  local lettersCharCountIndex12=0\n  local\
    \ encodedCharCountIndex12=0\n  local vowelsCharCountIndex13=0\n  local lettersCharCountIndex13=0\n\
    \  local encodedCharCountIndex13=0\n  local vowelsCharCountIndex14\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local msg2=\"\"\n  local\
    \ msg3=\"\"\n  local msg4=\"\"\n  local msg5=\"\"\n  local msg6=\"\"\n  local\
    \ msg7=\"\"\n  local msg8=\"\"\n  local msg9=\"\"\n  local msg10=\"\"\n  local\
    \ msg11=\"\"\n  local msg12=\"\"\n  local msg13=\"\"\n  local msg14=\"\"\n  local\
    \ msg15=\"\"\n  local msg16=\"\"\n  local msg17=\"\"\n  local msg18=\"\"\n  local\
    \ msg19=\"\"\n  local msg20=\"\"\n  local msg21=\"\"\n  local msg22=\"\"\n  local\
    \ msg23=\"\"\n  local msg24=\"\"\n  local msg25=\"\"\n  local msg26=\"\"\n  local\
    \ msg27=\"\"\n  local msg28=\"\"\n  local msg29=\"\"\n  local msg30=\"\"\n  local\
    \ msg31=\"\"\n  local msg32=\"\"\n  local msg33=\"\"\n  local msg34=\"\"\n  local\
    \ msg35=\"\"\n  local msg36=\"\"\n  local msg37=\"\"\n  local msg38=\"\"\n  local\
    \ msg39=\"\"\n  local msg40=\"\"\n  local msg41=\"\"\n  local msg42=\"\"\n  local\
    \ msg43=\"\"\n  local msg44=\"\"\n  local msg45=\"\"\n  local msg46=\"\"\n  local\
    \ msg47=\"\"\n  local msg48=\"\"\n  local msg49=\"\"\n  local msg50=\"\"\n  local\
    \ msg51=\"\"\n  local msg52=\"\"\n  local msg53=\"\"\n  local msg54=\"\"\n  local\
    \ msg55=\"\"\n  local msg56=\"\"\n  local msg57=\"\"\n  local msg58=\"\"\n  local\
    \ msg59=\"\"\n  local msg60=\"\"\n  local msg61=\"\"\n  local msg62=\"\"\n  local\
    \ msg63=\"\"\n  local msg64=\"\"\n  local msg65=\"\"\n  local msg66=\"\"\n  local\
    \ msg67=\"\"\n  local msg68=\"\"\n  local msg69=\"\"\n  local msg70=\"\"\n  local\
    \ msg71=\"\"\n  local msg72=\"\"\n  local msg73=\"\"\n  local msg74=\"\"\n  local\
    \ msg75=\"\"\n  local msg76=\"\"\n  local msg77=\"\"\n  local msg78=\"\"\n  local\
    \ msg79=\"\"\n  local msg80=\"\"\n  local msg81=\"\"\n  local msg82=\"\"\n  local\
    \ msg83=\"\"\n  local msg84=\"\"\n  local msg85=\"\"\n  local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels=\"aeiouAEIOU\"\n    local output=\"\
    \"\n    local count=0\n    local vowel\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels=\"aeiouAEIOU\"\n    local output=\"\
    \"\n    for (( i=0; i<${#message}; i++ )); do\n        local letter=${message:$i:1}\n\
    \        local nextLetter=${message:$((i+1)):1}\n        if [[ ${alphabet:$i:1}\
    \ =~ $vowels ]]; then\n            letter=${alphabet:$i:1}\n            nextLetter=${alphabet:$((i+1)):1}\n\
    \        fi\n        local outputLetter=${alphabet:$i:1}\n        local outputNextLetter=${alphabet:$((i+1)):1}\n\
    \        output=${output}${outputLetter:$((nextLetter-1)):1}\n        output=${output}${letter:$((nextLetter-1)):1}\n\
    \        output=${output}${outputNextLetter:$((nextLetter)):1}\n    done\n   \
    \ echo \"$output\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n  \
    \  local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    \n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local vowels_2=\"a e i o u y AE AI OE UY ae ai oe uy\"\n  local vowels_3=\"\
    a e i o u y AE AI OE UY ae ai oe uy AEA AIO OUY aeai oouy\"\n  local vowels_4=\"\
    a e i o u y AE AI OE UY ae ai oe uy AEA AIO OUY aeai oouy AEAE AIOE OUYY aeaio\
    \ ouyA\"\n  local vowels_5=\"a e i o u y AE AI OE UY ae ai oe uy AEA AIO OUY aeai\
    \ oouy AEAE AIOE OUYY aeaio ouyA AEAI AIOU OUYY aeaiou ouya\"\n  local vowels_6=\"\
    a e i o u y AE AI OE UY ae ai oe uy AEA AIO OUY aeai oouy AEAE AIOE OUYY aeaio\
    \ ouyA AEAI AIOU OUYY aeaiou ouya AEAIO AIOYO OUYSY aeaioo ouyas\"\n  local vowels_7=\"\
    a e i o u y AE AI OE UY ae ai oe uy AEA AIO OUY aeai oouy AEAE AIOE OUYY aeaio\
    \ ouyA AEAI AIOU OUYY aeaiou ouya AEAIO AIOYO OUYSY aeaioo ouyas AEAIOO AIOYO\
    \ OUYSY aeaiooo ouyase\"\n  local vowels_8=\"a e i o u y AE AI OE UY ae ai oe\
    \ uy AEA AIO OUY aeai oouy AEAE AIOE OUYY aeaio ouyA AEAI AIOU OUYY aeaiou ouya\
    \ AEAIO AIOYO OUYSY aeaioo ouyas AEAIOO AIOYO OUYSY aeaiooo ouyase AEAIO\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbvv0rnfo.sh: line 36: unexpected EOF while looking for matching
    `"''

    /tmp/tmpbvv0rnfo.sh: line 40: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local result=\"\"\n  local vowelCount=0\n  local vowelIndex=0\n  local letterIndex=0\n\
    \  local letterCount=0\n  local letter=\"\"\n  local letter2=\"\"\n  local letter3=\"\
    \"\n  local letter4=\"\"\n  local letter5=\"\"\n  local letter6=\"\"\n  local\
    \ letter7=\"\"\n  local letter8=\"\"\n  local letter9=\"\"\n  local letter10=\"\
    \"\n  local letter11=\"\"\n  local letter12=\"\"\n  local letter13=\"\"\n  local\
    \ letter14=\"\"\n  local letter15=\"\"\n  local letter16=\"\"\n  local letter17=\"\
    \"\n  local letter18=\"\"\n  local letter19=\"\"\n  local letter20=\"\"\n  local\
    \ letter21=\"\"\n  local letter22=\"\"\n  local letter23=\"\"\n  local letter24=\"\
    \"\n  local letter25=\"\"\n  local letter26=\"\"\n  local letter27=\"\"\n  local\
    \ letter28=\"\"\n  local letter29=\"\"\n  local letter30=\"\"\n  local letter31=\"\
    \"\n  local letter32=\"\"\n  local letter33=\"\"\n  local letter34=\"\"\n  local\
    \ letter35=\"\"\n  local letter36=\"\"\n  local letter37=\"\"\n  local letter38=\"\
    \"\n  local letter39=\"\"\n  local letter40=\"\"\n  local letter41=\"\"\n  local\
    \ letter42=\"\"\n  local letter43=\"\"\n  local letter44=\"\"\n  local letter45=\"\
    \"\n  local letter46=\"\"\n  local letter47=\"\"\n  local letter48=\"\"\n  local\
    \ letter49=\"\"\n  local letter50=\"\"\n  local letter51=\"\"\n  local letter52=\"\
    \"\n  local letter53=\"\"\n  local letter54=\"\"\n  local letter55=\"\"\n  local\
    \ letter56=\"\"\n  local letter57=\"\"\n  local letter58=\"\"\n  local letter59=\"\
    \"\n  local letter60=\"\"\n  local letter61=\"\"\n  local letter62=\"\"\n  local\
    \ letter63=\"\"\n  local letter64=\"\"\n  local letter65=\"\"\n  local letter66=\"\
    \"\n  local letter67=\"\"\n  local letter68=\"\"\n  local letter69=\"\"\n  local\
    \ letter70=\"\"\n  local letter71=\"\"\n  local letter72=\"\"\n  local letter73=\"\
    \"\n  local letter74=\"\"\n  local letter75=\"\"\n  local letter76=\"\"\n  local\
    \ letter77=\"\"\n  local letter78=\"\"\n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"\n    local vowelsCount=$(echo $vowels | wc -w)\n    local lettersCount=$(echo\
    \ $letters | wc -w)\n    local vowelsIndex=0\n    local lettersIndex=0\n    local\
    \ encodedMessage=\"\"\n    local encodedLetters=\"\"\n    local encodedVowels=\"\
    \"\n    local encodedVowelsCount=0\n    local encodedLettersCount=0\n    local\
    \ encodedVowelsIndex=0\n    local encodedLettersIndex=0\n    local encodedVowelsIndex2=0\n\
    \    local encodedLettersIndex2=0\n    local encodedVowelsIndex3=0\n    local\
    \ encodedLettersIndex3=0\n    local encodedVowelsIndex4=0\n    local encodedLettersIndex4=0\n\
    \    local encodedVowelsIndex5=0\n    local encodedLettersIndex5=0\n    local\
    \ encodedVowelsIndex6=0\n    local encodedLettersIndex6=0\n    local encodedVowelsIndex7=0\n\
    \    local encodedLettersIndex7=0\n    local encodedVowelsIndex8=0\n    local\
    \ encodedLettersIndex8=0\n    local encodedVowelsIndex9=0\n    local encodedLettersIndex9=0\n\
    \    local encodedVowelsIndex10=0\n    local encodedLettersIndex10=0\n    local\
    \ encodedVowelsIndex11=0\n    local encodedLettersIndex11=0\n    local encodedVowelsIndex12=0\n\
    \    local encodedLettersIndex12=0\n    local encodedVowelsIndex13=0\n    local\
    \ encodedLettersIndex13=0\n    local encodedVowelsIndex14=0\n    local encodedLettersIndex14=0\n\
    \    local encodedVowelsIndex15=0\n    local encodedLettersIndex15=0\n    local\
    \ encodedVowelsIndex16=0\n    local encodedLettersIndex16=0\n    local encodedVowelsIndex17=0\n\
    \    local encodedLettersIndex17=0\n    local encodedVowelsIndex18=0\n    local\
    \ encodedLettersIndex18=0\n    local encodedVowelsIndex19=0\n    local encodedLettersIndex19=0\n\
    \    local encodedVow\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local output=\"\"\n  local\
    \ vowelCount=0\n  local letterCount=0\n  local lastVowel=\"\"\n  local lastLetter=\"\
    \"\n  local lastLetterCount=0\n  local lastVowelCount=0\n  local lastVowelPosition=0\n\
    \  local lastLetterPosition=0\n  local lastLetterPositionCount=0\n  local lastVowelPositionCount=0\n\
    \  local lastVowelPositionCount=0\n  local lastLetterPositionCount=0\n  local\
    \ lastVowelPositionCount=0\n  local lastLetterPositionCount=0\n  local lastVowelPositionCount=0\n\
    \  local lastLetterPositionCount=0\n  local lastVowelPositionCount=0\n  local\
    \ lastLetterPositionCount=0\n  local lastVowelPositionCount=0\n  local lastLetterPositionCount=0\n\
    \  local lastVowelPositionCount=0\n  local lastLetterPositionCount=0\n  local\
    \ lastVowelPositionCount=0\n  local lastLetterPositionCount=0\n  local lastVowelPositionCount=0\n\
    \  local lastLetterPositionCount=0\n  local lastVowelPositionCount=0\n  local\
    \ lastLetterPositionCount=0\n  local lastVowelPositionCount=0\n  local lastLetterPositionCount=0\n\
    \  local lastVowelPositionCount=0\n  local lastLetterPositionCount=0\n  local\
    \ lastVowelPositionCount=0\n  local lastLetterPositionCount=0\n  local lastVowelPositionCount=0\n\
    \  local lastLetterPositionCount=0\n  local lastVowelPositionCount=0\n  local\
    \ lastLetterPositionCount=0\n  local lastVowelPositionCount=0\n  local lastLetterPositionCount=0\n\
    \  local lastVowelPositionCount=0\n  local lastLetterPositionCount=0\n  local\
    \ lastVowelPositionCount=0\n  local lastLetterPositionCount=0\n  local lastVowelPositionCount=0\n\
    \  local lastLetterPositionCount=0\n  local lastVowelPositionCount=0\n  local\
    \ lastLetterPositionCount=0\n  local lastVowelPositionCount=0\n  local lastLetterPositionCount=0\n\
    \  local lastVowelPositionCount=0\n  local lastLetterPositionCount=0\n  local\
    \ lastVowelPositionCount=0\n  local lastLetterPositionCount=0\n  \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\
    \n  local output=\"\"\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"\n    local result=\"\"\n    local vowelCount=0\n    local letterCount=0\n\
    \    local currentLetter=\"\"\n    local currentVowel=\"\"\n    local currentVowel2=\"\
    \"\n    local currentVowel3=\"\"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\
    \"\n    local currentVowel6=\"\"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\
    \"\n    local currentVowel9=\"\"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\
    \"\n    local currentVowel12=\"\"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\
    \"\n    local currentVowel15=\"\"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\
    \"\n    local currentVowel18=\"\"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\
    \"\n    local currentVowel21=\"\"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\
    \"\n    local currentVowel24=\"\"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\
    \"\n    local currentVowel27=\"\"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\
    \"\n    local currentVowel30=\"\"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\
    \"\n    local currentVowel33=\"\"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\
    \"\n    local currentVowel36=\"\"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\
    \"\n    local currentVowel39=\"\"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\
    \"\n    local currentVowel42=\"\"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\
    \"\n    local currentVowel45=\"\"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\
    \"\n    local currentVowel48=\"\"\n    local currentVowel49=\"\"\n\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=\"\"\n  local vowelCount=0\n  local vowelIndex=0\n  local letterIndex=0\n\
    \  local letterCount=0\n  local letter\n  local letterCount2\n  local letter2\n\
    \  local letter3\n  local letter4\n  local letter5\n  local letter6\n  local letter7\n\
    \  local letter8\n  local letter9\n  local letter10\n  local letter11\n  local\
    \ letter12\n  local letter13\n  local letter14\n  local letter15\n  local letter16\n\
    \  local letter17\n  local letter18\n  local letter19\n  local letter20\n  local\
    \ letter21\n  local letter22\n  local letter23\n  local letter24\n  local letter25\n\
    \  local letter26\n  local letter27\n  local letter28\n  local letter29\n  local\
    \ letter30\n  local letter31\n  local letter32\n  local letter33\n  local letter34\n\
    \  local letter35\n  local letter36\n  local letter37\n  local letter38\n  local\
    \ letter39\n  local letter40\n  local letter41\n  local letter42\n  local letter43\n\
    \  local letter44\n  local letter45\n  local letter46\n  local letter47\n  local\
    \ letter48\n  local letter49\n  local letter50\n  local letter51\n  local letter52\n\
    \  local letter53\n  local letter54\n  local letter55\n  local letter56\n  local\
    \ letter57\n  local letter58\n  local letter59\n  local letter60\n  local letter61\n\
    \  local letter62\n  local letter63\n  local letter64\n  local letter65\n  local\
    \ letter66\n  local letter67\n  local letter68\n  local letter69\n  local letter70\n\
    \  local letter71\n  local letter72\n  local letter73\n  local letter74\n  local\
    \ letter75\n  local letter76\n  local letter77\n  local letter78\n  local letter79\n\
    \  local letter80\n  local letter81\n  local letter82\n  local letter83\n  local\
    \ letter84\n  local letter85\n  local letter86\n  local letter87\n  local letter88\n\
    \  local letter89\n  local letter90\n  local letter91\n  local letter92\n  \n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ letterIndex=0\n    local letterCount=0\n    local letter=\"\"\n    local letter2=\"\
    \"\n    local letter3=\"\"\n    local letter4=\"\"\n    local letter5=\"\"\n \
    \   local letter6=\"\"\n    local letter7=\"\"\n    local letter8=\"\"\n    local\
    \ letter9=\"\"\n    local letter10=\"\"\n    local letter11=\"\"\n    local letter12=\"\
    \"\n    local letter13=\"\"\n    local letter14=\"\"\n    local letter15=\"\"\n\
    \    local letter16=\"\"\n    local letter17=\"\"\n    local letter18=\"\"\n \
    \   local letter19=\"\"\n    local letter20=\"\"\n    local letter21=\"\"\n  \
    \  local letter22=\"\"\n    local letter23=\"\"\n    local letter24=\"\"\n   \
    \ local letter25=\"\"\n    local letter26=\"\"\n    local letter27=\"\"\n    local\
    \ letter28=\"\"\n    local letter29=\"\"\n    local letter30=\"\"\n    local letter31=\"\
    \"\n    local letter32=\"\"\n    local letter33=\"\"\n    local letter34=\"\"\n\
    \    local letter35=\"\"\n    local letter36=\"\"\n    local letter37=\"\"\n \
    \   local letter38=\"\"\n    local letter39=\"\"\n    local letter40=\"\"\n  \
    \  local letter41=\"\"\n    local letter42=\"\"\n    local letter43=\"\"\n   \
    \ local letter44=\"\"\n    local letter45=\"\"\n    local letter46=\"\"\n    local\
    \ letter47=\"\"\n    local letter48=\"\"\n    local letter49=\"\"\n    local letter50=\"\
    \"\n    local letter51=\"\"\n    local letter52=\"\"\n    local letter53=\"\"\n\
    \    local letter54=\"\"\n    local letter55=\"\"\n    local letter56=\"\"\n \
    \   local letter57=\"\"\n    local letter58=\"\"\n    local letter59=\"\"\n  \
    \  local letter60=\"\"\n    local letter61=\"\"\n    local letter62=\"\"\n   \
    \ local letter63=\"\"\n    local letter64=\"\"\n    local letter65=\"\"\n    local\
    \ letter66=\"\"\n    local letter67=\"\"\n    local letter68=\"\"\n    local letter69=\"\
    \"\n    local letter70=\"\"\n    local letter71=\"\"\n    local letter72=\"\"\n\
    \    local letter73=\"\"\n    local letter74=\"\"\n    local letter75=\"\"\n \
    \   local letter76=\"\"\n    local letter77=\"\"\n    local letter78=\"\"\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowel_positions=$(echo\
    \ $message | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z |\
    \ tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z\
    \ | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp96m0k88d.sh: line 18: unexpected EOF while looking for matching
    `)''

    /tmp/tmp96m0k88d.sh: line 35: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n  \
    \  local vowelCount=0\n    local letterCount=0\n    local currentLetter=\"\"\n\
    \    local currentVowel=\"\"\n    local currentVowel2=\"\"\n    local currentVowel3=\"\
    \"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\"\n    local currentVowel6=\"\
    \"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\"\n    local currentVowel9=\"\
    \"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\"\n    local currentVowel12=\"\
    \"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\"\n    local currentVowel15=\"\
    \"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\"\n    local currentVowel18=\"\
    \"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\"\n    local currentVowel21=\"\
    \"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\"\n    local currentVowel24=\"\
    \"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\"\n    local currentVowel27=\"\
    \"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\"\n    local currentVowel30=\"\
    \"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\"\n    local currentVowel33=\"\
    \"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\"\n    local currentVowel36=\"\
    \"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\"\n    local currentVowel39=\"\
    \"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\"\n    local currentVowel42=\"\
    \"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\"\n    local currentVowel45=\"\
    \"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\"\n    local currentVowel48=\"\
    \"\n    local currentVowel49=\"\"\n    local currentVowel50=\"\"\n    local currentVowel\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local output=\"\"\n  local vowelCount=0\n  local vowelIndex=0\n \
    \ local letterIndex=0\n  local letterCount=0\n  local letter=\"\"\n  local letter2=\"\
    \"\n  local letter3=\"\"\n  local letter4=\"\"\n  local letter5=\"\"\n  local\
    \ letter6=\"\"\n  local letter7=\"\"\n  local letter8=\"\"\n  local letter9=\"\
    \"\n  local letter10=\"\"\n  local letter11=\"\"\n  local letter12=\"\"\n  local\
    \ letter13=\"\"\n  local letter14=\"\"\n  local letter15=\"\"\n  local letter16=\"\
    \"\n  local letter17=\"\"\n  local letter18=\"\"\n  local letter19=\"\"\n  local\
    \ letter20=\"\"\n  local letter21=\"\"\n  local letter22=\"\"\n  local letter23=\"\
    \"\n  local letter24=\"\"\n  local letter25=\"\"\n  local letter26=\"\"\n  local\
    \ letter27=\"\"\n  local letter28=\"\"\n  local letter29=\"\"\n  local letter30=\"\
    \"\n  local letter31=\"\"\n  local letter32=\"\"\n  local letter33=\"\"\n  local\
    \ letter34=\"\"\n  local letter35=\"\"\n  local letter36=\"\"\n  local letter37=\"\
    \"\n  local letter38=\"\"\n  local letter39=\"\"\n  local letter40=\"\"\n  local\
    \ letter41=\"\"\n  local letter42=\"\"\n  local letter43=\"\"\n  local letter44=\"\
    \"\n  local letter45=\"\"\n  local letter46=\"\"\n  local letter47=\"\"\n  local\
    \ letter48=\"\"\n  local letter49=\"\"\n  local letter50=\"\"\n  local letter51=\"\
    \"\n  local letter52=\"\"\n  local letter53=\"\"\n  local letter54=\"\"\n  local\
    \ letter55=\"\"\n  local letter56=\"\"\n  local letter57=\"\"\n  local letter58=\"\
    \"\n  local letter59=\"\"\n  local letter60=\"\"\n  local letter61=\"\"\n  local\
    \ letter62=\"\"\n  local letter63=\"\"\n  local letter64=\"\"\n  local letter65=\"\
    \"\n  local letter66=\"\"\n  local letter67=\"\"\n  local letter68=\"\"\n  local\
    \ letter69=\"\"\n  local letter70=\"\"\n  local letter71=\"\"\n  local letter72=\"\
    \"\n  local letter73=\"\"\n  local letter74=\"\"\n  local letter75=\"\"\n  local\
    \ letter76=\"\"\n  local letter77=\"\"\n  local letter78=\"\"\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local msg2=\"\"\n  local\
    \ vowels=\"aeiouAEIOU\"\n  local vowels2=\"AEIOUaeiou\"\n  local vowels3=\"AEIOUaeiouAEIOU\"\
    \n  local vowels4=\"AEIOUaeiouAEIOUaeiou\"\n  local vowels5=\"AEIOUaeiouAEIOUaeiouAEIOU\"\
    \n  local vowels6=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n  local vowels7=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n  local vowels8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n  local vowels9=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n  local vowels10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n  local vowels11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n  local vowels12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n  local vowels13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n  local vowels14=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n  local vowels15=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n  local vowels16=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n  local vowels17=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUae\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkzo2f694.sh: line 46: unexpected EOF while looking for matching
    `"''

    /tmp/tmpkzo2f694.sh: line 50: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowel_count=0\n    local vowel_position=0\n\
    \    local letter_index=0\n    local letter_position=0\n    local letter\n   \
    \ local vowel\n    local letter_to_swap\n    local letter_to_swap_position\n \
    \   local letter_to_swap_letter\n    local letter_to_swap_letter_position\n  \
    \  local letter_to_swap_letter_position2\n    local letter_to_swap_letter_position3\n\
    \    local letter_to_swap_letter_position4\n    local letter_to_swap_letter_position5\n\
    \    local letter_to_swap_letter_position6\n    local letter_to_swap_letter_position7\n\
    \    local letter_to_swap_letter_position8\n    local letter_to_swap_letter_position9\n\
    \    local letter_to_swap_letter_position10\n    local letter_to_swap_letter_position11\n\
    \    local letter_to_swap_letter_position12\n    local letter_to_swap_letter_position13\n\
    \    local letter_to_swap_letter_position14\n    local letter_to_swap_letter_position15\n\
    \    local letter_to_swap_letter_position16\n    local letter_to_swap_letter_position17\n\
    \    local letter_to_swap_letter_position18\n    local letter_to_swap_letter_position19\n\
    \    local letter_to_swap_letter_position20\n    local letter_to_swap_letter_position21\n\
    \    local letter_to_swap_letter_position22\n    local letter_to_swap_letter_position23\n\
    \    local letter_to_swap_letter_position24\n    local letter_to_swap_letter_position25\n\
    \    local letter_to_swap_letter_position26\n    local letter_to_swap_letter_position27\n\
    \    local letter_to_swap_letter_position28\n    local letter_to_swap_letter_position29\n\
    \    local letter_to_swap_letter_position30\n    local letter_to_swap_letter_position31\n\
    \    local letter_to_swap_letter_position32\n    local letter_to_swap_letter_position33\n\
    \    local letter_to_swap_letter_position34\n    local letter_to_swap_letter_position35\n\
    \    local letter_to_swap_letter_position36\n    local letter_to_swap_letter_position37\n\
    \    local letter_to_swap_letter_position38\n    local letter_to_swap_letter_position39\n\
    \    local letter_to_swap_letter_position40\n    local letter_to_swap_letter_position41\n\
    \    local letter_to_swap_letter_position42\n    local letter_to_swap_letter_position43\n\
    \    local letter_to_swap_letter_position44\n    local letter_to_swap_letter_position45\n\
    \    local letter_to_swap_letter_position46\n    local letter_to_swap_letter_position47\n\
    \    local letter_to_swap_letter_position48\n    local letter_to_swap_letter_\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=\"\"\n  local vowelCount=0\n  local vowelIndex=0\n  local letterIndex=0\n\
    \  local letterCount=0\n  local letter=\"\"\n  local letter2=\"\"\n  local letter3=\"\
    \"\n  local letter4=\"\"\n  local letter5=\"\"\n  local letter6=\"\"\n  local\
    \ letter7=\"\"\n  local letter8=\"\"\n  local letter9=\"\"\n  local letter10=\"\
    \"\n  local letter11=\"\"\n  local letter12=\"\"\n  local letter13=\"\"\n  local\
    \ letter14=\"\"\n  local letter15=\"\"\n  local letter16=\"\"\n  local letter17=\"\
    \"\n  local letter18=\"\"\n  local letter19=\"\"\n  local letter20=\"\"\n  local\
    \ letter21=\"\"\n  local letter22=\"\"\n  local letter23=\"\"\n  local letter24=\"\
    \"\n  local letter25=\"\"\n  local letter26=\"\"\n  local letter27=\"\"\n  local\
    \ letter28=\"\"\n  local letter29=\"\"\n  local letter30=\"\"\n  local letter31=\"\
    \"\n  local letter32=\"\"\n  local letter33=\"\"\n  local letter34=\"\"\n  local\
    \ letter35=\"\"\n  local letter36=\"\"\n  local letter37=\"\"\n  local letter38=\"\
    \"\n  local letter39=\"\"\n  local letter40=\"\"\n  local letter41=\"\"\n  local\
    \ letter42=\"\"\n  local letter43=\"\"\n  local letter44=\"\"\n  local letter45=\"\
    \"\n  local letter46=\"\"\n  local letter47=\"\"\n  local letter48=\"\"\n  local\
    \ letter49=\"\"\n  local letter50=\"\"\n  local letter51=\"\"\n  local letter52=\"\
    \"\n  local letter53=\"\"\n  local letter54=\"\"\n  local letter55=\"\"\n  local\
    \ letter56=\"\"\n  local letter57=\"\"\n  local letter58=\"\"\n  local letter59=\"\
    \"\n  local letter60=\"\"\n  local letter61=\"\"\n  local letter62=\"\"\n  local\
    \ letter63=\"\"\n  local letter64=\"\"\n  local letter65=\"\"\n  local letter66=\"\
    \"\n  local letter67=\"\"\n  local letter68=\"\"\n  local letter69=\"\"\n  local\
    \ letter70=\"\"\n  local letter71=\"\"\n  local letter72=\"\"\n  local letter73=\"\
    \"\n  local letter74=\"\"\n  local letter75=\"\"\n  local letter76=\"\"\n  local\
    \ letter77=\"\"\n  local letter78=\"\"\n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local output=\"\"\n  local\
    \ count=0\n  local vowel_index=0\n  local letter_index=0\n  local vowel_letter=\"\
    \"\n  local letter_letter=\"\"\n  local vowel_letter_count=0\n  local letter_letter_count=0\n\
    \  local vowel_letter_letter=\"\"\n  local letter_letter_letter=\"\"\n  local\
    \ vowel_letter_letter_count=0\n  local letter_letter_letter_count=0\n  local vowel_letter_letter_letter=\"\
    \"\n  local letter_letter_letter_letter=\"\"\n  local vowel_letter_letter_letter_count=0\n\
    \  local letter_letter_letter_letter_count=0\n  local vowel_letter_letter_letter_letter=\"\
    \"\n  local letter_letter_letter_letter_letter=\"\"\n  local vowel_letter_letter_letter_letter_count=0\n\
    \  local letter_letter_letter_letter_letter_count=0\n  local vowel_letter_letter_letter_letter_letter=\"\
    \"\n  local letter_letter_letter_letter_letter=\"\"\n  local vowel_letter_letter_letter_letter_count=0\n\
    \  local letter_letter_letter_letter_letter_count=0\n  local vowel_letter_letter_letter_letter_letter=\"\
    \"\n  local letter_letter_letter_letter_letter=\"\"\n  local vowel_letter_letter_letter_letter_letter_count=0\n\
    \  local letter_letter_letter_letter_letter_count=0\n  local vowel_letter_letter_letter_letter_letter=\"\
    \"\n  local letter_letter_letter_letter_letter=\"\"\n  local vowel_letter_letter_letter_letter_letter_count=0\n\
    \  local letter_letter_letter_letter_letter_count=0\n  local vowel_letter_letter_letter_letter_letter=\"\
    \"\n  local letter_letter_letter_letter_letter=\"\"\n  local vowel_letter_letter_letter_letter_letter_count=0\n\
    \  local letter_letter_letter_letter_letter_count=0\n  local vowel_letter_letter_letter_letter_letter=\"\
    \"\n  local letter_letter_letter_letter_letter=\"\"\n  local vowel_letter_letter_letter_letter_letter_count=0\n\
    \  local letter_letter_letter_letter_letter_count=0\n  local vowel_letter_letter_letter_letter_letter=\"\
    \"\n  local letter_letter_letter_letter_letter=\"\"\n  local vowel_letter_letter_letter_letter_letter_count=0\n\
    \  local letter_letter_letter_letter_letter_count=0\n  local vowel_letter_letter_letter_letter_letter=\"\
    \"\n  local letter_letter_letter_letter_letter=\"\"\n  local vowel_letter_letter_letter_letter_letter_count=0\n\
    \  local letter_letter_letter_letter_letter_count=0\n  local vowel_letter_letter_letter_letter_letter=\"\
    \"\n  local letter_letter_letter_letter_letter=\"\"\n  local vowel_letter_letter_letter_\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local output=\"\"\n  local vowel_positions=\"\"\n  local vowel_positions_count=0\
    \ \n  local vowel_positions_string=\"\"\n  local vowel_positions_string_length=0\
    \ \n  local vowel_positions_string_length_count=0\n  local vowel_positions_string_length_string=\"\
    \"\n  local vowel_positions_string_length_string_length=0 \n  local vowel_positions_string_length_string_length_count=0\n\
    \  local vowel_positions_string_length_string_length_string=\"\"\n  local vowel_positions_string_length_string_length_string_length=0\
    \ \n  local vowel_positions_string_length_string_length_string_length_count=0\n\
    \  local vowel_positions_string_length_string_length_string_length_string=\"\"\
    \n  local vowel_positions_string_length_string_length_string_length_string_length=0\
    \ \n  local vowel_positions_string_length_string_length_string_length_string_length_count=0\n\
    \  local vowel_positions_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local vowel_positions_string_length_string_length_string_length_string_length_string_length=0\
    \ \n  local vowel_positions_string_length_string_length_string_length_string_length_string_length_count=0\n\
    \  local vowel_positions_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local vowel_positions_string_length_string_length_string_length_string_length_string_length_string_length=0\
    \ \n  local vowel_positions_string_length_string_length_string_length_string_length_string_length_string_length_count=0\n\
    \  local vowel_positions_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local vowel_positions_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\
    \ \n  local vowel_positions_string_length_string_length_string_length_string_length_string_length_string_length_string_length_count=0\n\
    \  local vowel_positions_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local vowel_positions_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\
    \ \n  local vowel_positions_string_length_string_length_string_length_string_length_string_length_string_length_string_length_count=0\n\
    \  local vowel_positions_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local vowel_positions_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\
    \ \n  local vowel_positions_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n  \
    \  local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    \n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels=\"aeiouAEIOU\"\n    local output=\"\
    \"\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local vowel_count=$(echo $message | tr ' ' '\\n' | grep -o\
    \ -E '[aeiouy]' | wc -l)\n    local vowel_count_2=$((vowel_count - 1))\n    local\
    \ vowel_count_3=$((vowel_count + 1))\n    local vowel_count_4=$((vowel_count_2\
    \ + 1))\n    local vowel_count_5=$((vowel_count_3 + 1))\n    local vowel_count_6=$((vowel_count_4\
    \ + 1))\n    local vowel_count_7=$((vowel_count_5 + 1))\n    local vowel_count_8=$((vowel_count_6\
    \ + 1))\n    local vowel_count_9=$((vowel_count_7 + 1))\n    local vowel_count_10=$((vowel_count_8\
    \ + 1))\n    local vowel_count_11=$((vowel_count_9 + 1))\n    local vowel_count_12=$((vowel_count_10\
    \ + 1))\n    local vowel_count_13=$((vowel_count_11 + 1))\n    local vowel_count_14=$((vowel_count_12\
    \ + 1))\n    local vowel_count_15=$((vowel_count_13 + 1))\n    local vowel_count_16=$((vowel_count_14\
    \ + 1))\n    local vowel_count_17=$((vowel_count_15 + 1))\n    local vowel_count_18=$((vowel_count_16\
    \ + 1))\n    local vowel_count_19=$((vowel_count_17 + 1))\n    local vowel_count_20=$((vowel_count_18\
    \ + 1))\n    local vowel_count_21=$((vowel_count_19 + 1))\n    local vowel_count_22=$((vowel_count_20\
    \ + 1))\n    local vowel_count_23=$((vowel_count_21 + 1))\n    local vowel_count_24=$((vowel_count_22\
    \ + 1))\n    local vowel_count_25=$((vowel_count_23 + 1))\n    local vowel_count_26=$((vowel_count_24\
    \ + 1))\n    local vowel_count_27=$((vowel_count_25 + 1))\n    local vowel_count_28=$((vowel_count_26\
    \ + 1))\n    local vowel_count_29=$((vowel_count_27 + 1))\n    local vowel_count_30=$((vowel_count_28\
    \ + 1))\n    local vowel_count_31=$((vowel_count_29 + 1))\n    local vowel_count_32=$((vowel_count_30\
    \ + 1))\n    local vowel_count_33=$\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local result=\"\"\n    local vowelCount=0\n    local letterCount=0\n    local\
    \ letterIndex=0\n    local vowelIndex=0\n    local letterToSwap=\"\"\n    local\
    \ vowelToSwap=\"\"\n    local swappedLetter=\"\"\n    local swappedVowel=\"\"\n\
    \    local swappedLetterIndex=0\n    local swappedVowelIndex=0\n    local swappedLetterCount=0\n\
    \    local swappedVowelCount=0\n    local swappedLetterIndexToSwap=0\n    local\
    \ swappedVowelIndexToSwap=0\n    local swappedLetterCountToSwap=0\n    local swappedVowelCountToSwap=0\n\
    \    local swappedLetterIndexToSwap2=0\n    local swappedVowelIndexToSwap2=0\n\
    \    local swappedLetterCountToSwap2=0\n    local swappedVowelCountToSwap2=0\n\
    \    local swappedLetterIndexToSwap3=0\n    local swappedVowelIndexToSwap3=0\n\
    \    local swappedLetterCountToSwap3=0\n    local swappedVowelCountToSwap3=0\n\
    \    local swappedLetterIndexToSwap4=0\n    local swappedVowelIndexToSwap4=0\n\
    \    local swappedLetterCountToSwap4=0\n    local swappedVowelCountToSwap4=0\n\
    \    local swappedLetterIndexToSwap5=0\n    local swappedVowelIndexToSwap5=0\n\
    \    local swappedLetterCountToSwap5=0\n    local swappedVowelCountToSwap5=0\n\
    \    local swappedLetterIndexToSwap6=0\n    local swappedVowelIndexToSwap6=0\n\
    \    local swappedLetterCountToSwap6=0\n    local swappedVowelCountToSwap6=0\n\
    \    local swappedLetterIndexToSwap7=0\n    local swappedVowelIndexToSwap7=0\n\
    \    local swappedLetterCountToSwap7=0\n    local swappedVowelCountToSwap7=0\n\
    \    local swappedLetterIndexToSwap8=0\n    local swappedVowelIndexToSwap8=0\n\
    \    local swappedLetterCountToSwap8=0\n    local swap\n}\n\ncandidate() {\n \
    \   encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local vowels_2=\"AEIOUaeiouAEIOUaeiou\"\n    local vowels_3=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_4=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowels_5=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowels_6=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_7=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_9=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAE\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3ymebriu.sh: line 41: unexpected EOF while looking for matching
    `"''

    /tmp/tmp3ymebriu.sh: line 45: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local count=0\n    local vowel\n    local letter\n\
    \    local letter2\n    local letter3\n    local letter4\n    local letter5\n\
    \    local letter6\n    local letter7\n    local letter8\n    local letter9\n\
    \    local letter10\n    local letter11\n    local letter12\n    local letter13\n\
    \    local letter14\n    local letter15\n    local letter16\n    local letter17\n\
    \    local letter18\n    local letter19\n    local letter20\n    local letter21\n\
    \    local letter22\n    local letter23\n    local letter24\n    local letter25\n\
    \    local letter26\n    local letter27\n    local letter28\n    local letter29\n\
    \    local letter30\n    local letter31\n    local letter32\n    local letter33\n\
    \    local letter34\n    local letter35\n    local letter36\n    local letter37\n\
    \    local letter38\n    local letter39\n    local letter40\n    local letter41\n\
    \    local letter42\n    local letter43\n    local letter44\n    local letter45\n\
    \    local letter46\n    local letter47\n    local letter48\n    local letter49\n\
    \    local letter50\n    local letter51\n    local letter52\n    local letter53\n\
    \    local letter54\n    local letter55\n    local letter56\n    local letter57\n\
    \    local letter58\n    local letter59\n    local letter60\n    local letter61\n\
    \    local letter62\n    local letter63\n    local letter64\n    local letter65\n\
    \    local letter66\n    local letter67\n    local letter68\n    local letter69\n\
    \    local letter70\n    local letter71\n    local letter72\n    local letter73\n\
    \    local letter74\n    local letter75\n    local letter76\n    local letter77\n\
    \    local letter78\n    local letter79\n    local letter80\n    local letter81\n\
    \    local letter82\n    local letter83\n    local letter84\n    local letter85\n\
    \    local letter86\n    local letter87\n    local letter88\n    local letter89\n\
    \    local letter90\n    local letter91\n    local letter92\n    local letter93\n\
    \    local letter94\n    local letter95\n    local letter96\n    local \n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042912
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local output=\"\"\n  local vowelCount=0\n  local vowelIndex=0\n  local letterIndex=0\n\
    \  local letterCount=0\n  local letter=\"\"\n  local letterCount2=0\n  local letter2=\"\
    \"\n  local letter3=\"\"\n  local letter4=\"\"\n  local letter5=\"\"\n  local\
    \ letter6=\"\"\n  local letter7=\"\"\n  local letter8=\"\"\n  local letter9=\"\
    \"\n  local letter10=\"\"\n  local letter11=\"\"\n  local letter12=\"\"\n  local\
    \ letter13=\"\"\n  local letter14=\"\"\n  local letter15=\"\"\n  local letter16=\"\
    \"\n  local letter17=\"\"\n  local letter18=\"\"\n  local letter19=\"\"\n  local\
    \ letter20=\"\"\n  local letter21=\"\"\n  local letter22=\"\"\n  local letter23=\"\
    \"\n  local letter24=\"\"\n  local letter25=\"\"\n  local letter26=\"\"\n  local\
    \ letter27=\"\"\n  local letter28=\"\"\n  local letter29=\"\"\n  local letter30=\"\
    \"\n  local letter31=\"\"\n  local letter32=\"\"\n  local letter33=\"\"\n  local\
    \ letter34=\"\"\n  local letter35=\"\"\n  local letter36=\"\"\n  local letter37=\"\
    \"\n  local letter38=\"\"\n  local letter39=\"\"\n  local letter40=\"\"\n  local\
    \ letter41=\"\"\n  local letter42=\"\"\n  local letter43=\"\"\n  local letter44=\"\
    \"\n  local letter45=\"\"\n  local letter46=\"\"\n  local letter47=\"\"\n  local\
    \ letter48=\"\"\n  local letter49=\"\"\n  local letter50=\"\"\n  local letter51=\"\
    \"\n  local letter52=\"\"\n  local letter53=\"\"\n  local letter54=\"\"\n  local\
    \ letter55=\"\"\n  local letter56=\"\"\n  local letter57=\"\"\n  local letter58=\"\
    \"\n  local letter59=\"\"\n  local letter60=\"\"\n  local letter61=\"\"\n  local\
    \ letter62=\"\"\n  local letter63=\"\"\n  local letter64=\"\"\n  local letter65=\"\
    \"\n  local letter66=\"\"\n  local letter67=\"\"\n  local letter68=\"\"\n  local\
    \ letter69=\"\"\n  local letter70=\"\"\n  local letter71=\"\"\n  local letter72=\"\
    \"\n  local letter73=\"\"\n  local letter74=\"\"\n  local letter75=\"\"\n  local\
    \ letter76=\"\"\n  local letter77\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n  \
    \  local count=0\n    local vowel_position=0\n    local letter_position=0\n  \
    \  local letter_index=0\n    local vowel_index=0\n    local letter_to_swap=\"\"\
    \n    local vowel_to_swap=\"\"\n    local letter_to_add=\"\"\n    local vowel_to_add=\"\
    \"\n    local letter_to_remove=\"\"\n    local vowel_to_remove=\"\"\n    local\
    \ letter_to_add2=\"\"\n    local vowel_to_add2=\"\"\n    local letter_to_remove2=\"\
    \"\n    local vowel_to_remove2=\"\"\n    local letter_to_add3=\"\"\n    local\
    \ vowel_to_add3=\"\"\n    local letter_to_remove3=\"\"\n    local vowel_to_remove3=\"\
    \"\n    local letter_to_add4=\"\"\n    local vowel_to_add4=\"\"\n    local letter_to_remove4=\"\
    \"\n    local vowel_to_remove4=\"\"\n    local letter_to_add5=\"\"\n    local\
    \ vowel_to_add5=\"\"\n    local letter_to_remove5=\"\"\n    local vowel_to_remove5=\"\
    \"\n    local letter_to_add6=\"\"\n    local vowel_to_add6=\"\"\n    local letter_to_remove6=\"\
    \"\n    local vowel_to_remove6=\"\"\n    local letter_to_add7=\"\"\n    local\
    \ vowel_to_add7=\"\"\n    local letter_to_remove7=\"\"\n    local vowel_to_remove7=\"\
    \"\n    local letter_to_add8=\"\"\n    local vowel_to_add8=\"\"\n    local letter_to_remove8=\"\
    \"\n    local vowel_to_remove8=\"\"\n    local letter_to_add9=\"\"\n    local\
    \ vowel_to_add9=\"\"\n    local letter_to_remove9=\"\"\n    local vowel_to_remove9=\"\
    \"\n    local letter_to_add10=\"\"\n    local vowel_to_add10=\"\"\n    local letter_to_remove10=\"\
    \"\n    local vowel_to_remove10=\"\"\n    local letter_to_add11=\"\"\n    local\
    \ vowel_to_add11=\"\"\n    local letter_to_remove11=\"\"\n    local vowel_to_remove11=\"\
    \"\n    local letter_to_add12=\"\"\n    local vowel_to_add12=\"\"\n    local letter_to_remove12=\"\
    \"\n    local vowel_to_remove12=\"\"\n    local letter_to_add13=\"\"\n    local\
    \ vowel_to_add13=\"\"\n    local letter_to_remove13=\"\"\n    local vowel_to_remove13=\"\
    \"\n    local letter_to_add14=\"\"\n    local vowel_to_add14=\"\"\n    \n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOU\"\
    \n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local vowelsCount=0\n\
    \    local lettersCount=0\n    local encodedMessage=\"\"\n    local encodedLetter=\"\
    \"\n    local encodedVowel=\"\"\n    local encodedVowel2=\"\"\n    local encodedVowel3=\"\
    \"\n    local encodedVowel4=\"\"\n    local encodedVowel5=\"\"\n    local encodedVowel6=\"\
    \"\n    local encodedVowel7=\"\"\n    local encodedVowel8=\"\"\n    local encodedVowel9=\"\
    \"\n    local encodedVowel10=\"\"\n    local encodedVowel11=\"\"\n    local encodedVowel12=\"\
    \"\n    local encodedVowel13=\"\"\n    local encodedVowel14=\"\"\n    local encodedVowel15=\"\
    \"\n    local encodedVowel16=\"\"\n    local encodedVowel17=\"\"\n    local encodedVowel18=\"\
    \"\n    local encodedVowel19=\"\"\n    local encodedVowel20=\"\"\n    local encodedVowel21=\"\
    \"\n    local encodedVowel22=\"\"\n    local encodedVowel23=\"\"\n    local encodedVowel24=\"\
    \"\n    local encodedVowel25=\"\"\n    local encodedVowel26=\"\"\n    local encodedVowel27=\"\
    \"\n    local encodedVowel28=\"\"\n    local encodedVowel29=\"\"\n    local encodedVowel30=\"\
    \"\n    local encodedVowel31=\"\"\n    local encodedVowel32=\"\"\n    local encodedVowel33=\"\
    \"\n    local encodedVowel34=\"\"\n    local encodedVowel35=\"\"\n    local encodedVowel36=\"\
    \"\n    local encodedVowel37=\"\"\n    local encodedVowel38=\"\"\n    local encodedVowel39=\"\
    \"\n    local encodedVowel40=\"\"\n    local encodedVowel41=\"\"\n    local encodedVowel42=\"\
    \"\n    local encodedVowel43=\"\"\n    local encodedVowel44=\"\"\n    local encodedVowel45=\"\
    \"\n    local encodedVowel46=\"\"\n    local encodedVowel47=\"\"\n    local encodedVowel48=\"\
    \"\n    local encodedVowel49=\"\"\n    local encodedVowel50=\"\"\n    local encodedV\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ currentVowel\n    local currentLetter\n    local currentLetterIndex\n    local\
    \ currentLetterCount\n    local currentLetterIndex2\n    local currentLetterCount2\n\
    \    local currentLetterIndex3\n    local currentLetterCount3\n    local currentLetterIndex4\n\
    \    local currentLetterCount4\n    local currentLetterIndex5\n    local currentLetterCount5\n\
    \    local currentLetterIndex6\n    local currentLetterCount6\n    local currentLetterIndex7\n\
    \    local currentLetterCount7\n    local currentLetterIndex8\n    local currentLetterCount8\n\
    \    local currentLetterIndex9\n    local currentLetterCount9\n    local currentLetterIndex10\n\
    \    local currentLetterCount10\n    local currentLetterIndex11\n    local currentLetterCount11\n\
    \    local currentLetterIndex12\n    local currentLetterCount12\n    local currentLetterIndex13\n\
    \    local currentLetterCount13\n    local currentLetterIndex14\n    local currentLetterCount14\n\
    \    local currentLetterIndex15\n    local currentLetterCount15\n    local currentLetterIndex16\n\
    \    local currentLetterCount16\n    local currentLetterIndex17\n    local currentLetterCount17\n\
    \    local currentLetterIndex18\n    local currentLetterCount18\n    local currentLetterIndex19\n\
    \    local currentLetterCount19\n    local currentLetterIndex20\n    local currentLetterCount20\n\
    \    local currentLetterIndex21\n    local currentLetterCount21\n    local currentLetterIndex22\n\
    \    local currentLetterCount22\n    local currentLetterIndex23\n    local currentLetterCount23\n\
    \    local currentLetterIndex24\n    local currentLetterCount24\n    local currentLetterIndex25\n\
    \    local currentLetterCount25\n    local currentLetterIndex26\n    local currentLetterCount26\n\
    \    local currentLetterIndex27\n    local currentLetterCount27\n    local currentLetterIndex28\n\
    \    local currentLetterCount28\n    local currentLetterIndex29\n    local currentLetterCount29\n\
    \    local currentLetterIndex30\n    local currentLetterCount30\n    local currentLetterIndex31\n\
    \    local currentLetterCount31\n    local currentLetterIndex32\n    local currentLetterCount32\n\
    \    local currentLetterIndex33\n    local currentLetterCount33\n    local currentLetterIndex34\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local output=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        local nextLetter=${message:$((i+1)):1}\n   \
    \     if [[ ${letter} == ${nextLetter} ]]; then\n            letter=${vowels:$((${#vowels}-1)):1}\n\
    \        fi\n        output+=\"${letter}\"\n    done\n    echo \"${output}\"\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ letterIndex=0\n    local letterCount=0\n    local letter=\"\"\n    local letterCount=0\n\
    \    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n   \
    \ local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local\
    \ letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n   \
    \ local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n    local\
    \ letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n    local letter=\"\
    \"\n    local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n\
    \    local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n   \
    \ local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n    local\
    \ letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n\
    \    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n   \
    \ local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local\
    \ letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n   \
    \ local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n    local\
    \ letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n    local letter=\"\
    \"\n    local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n\
    \    local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n   \
    \ local letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n    local\
    \ letterCount=0\n    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n\
    \    local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n   \
    \ local letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local\
    \ letterIndex=0\n    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterIndex=0\n   \
    \ local letter=\"\"\n    local \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local result=\"\"\n  local vowel\n  local letter\n  local count\n  local i\n\
    \  local j\n  \n  for letter in $message; do\n    count=0\n    for vowel in $vowels;\
    \ do\n      if [[ \"$letter\" == \"$vowel\" ]]; then\n        count=$((count+1))\n\
    \      fi\n    done\n    if [[ $count -gt 2 ]]; then\n      result=$result${letter}\n\
    \    else\n      result=$result${vowel}\n    fi\n  done\n  echo $result\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelPosition=0\n    local letterIndex=0\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterCount2=0\n    local letter2=\"\
    \"\n    local letter2Position=0\n    local letter2Count=0\n    local letter2Count2=0\n\
    \    local letter2Position2=0\n    local letter2=\"\"\n    local letter3=\"\"\n\
    \    local letter3Position=0\n    local letter3Count=0\n    local letter3Count2=0\n\
    \    local letter3Position2=0\n    local letter3=\"\"\n    local letter4=\"\"\n\
    \    local letter4Position=0\n    local letter4Count=0\n    local letter4Count2=0\n\
    \    local letter4Position2=0\n    local letter4=\"\"\n    local letter5=\"\"\n\
    \    local letter5Position=0\n    local letter5Count=0\n    local letter5Count2=0\n\
    \    local letter5Position2=0\n    local letter5=\"\"\n    local letter6=\"\"\n\
    \    local letter6Position=0\n    local letter6Count=0\n    local letter6Count2=0\n\
    \    local letter6Position2=0\n    local letter6=\"\"\n    local letter7=\"\"\n\
    \    local letter7Position=0\n    local letter7Count=0\n    local letter7Count2=0\n\
    \    local letter7Position2=0\n    local letter7=\"\"\n    local letter8=\"\"\n\
    \    local letter8Position=0\n    local letter8Count=0\n    local letter8Count2=0\n\
    \    local letter8Position2=0\n    local letter8=\"\"\n    local letter9=\"\"\n\
    \    local letter9Position=0\n    local letter9Count=0\n    local letter9Count2=0\n\
    \    local letter9Position2=0\n    local letter9=\"\"\n    local letter10=\"\"\
    \n    local letter10Position=0\n    local letter10Count=0\n    local letter10Count2=0\n\
    \    local letter10Position2=0\n    local letter10=\"\"\n    local letter11=\"\
    \"\n    local letter11Position=0\n    local letter11Count=0\n    local letter11Count2=0\n\
    \    local letter11Position2=0\n    local letter11=\"\"\n    local letter12=\"\
    \"\n    local letter12Position=0\n    local letter12Count=0\n    local \n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n  \
    \  local count=0\n    local vowel_position\n    local letter_position\n    local\
    \ letter\n    local vowel\n    local letter2\n    local letter3\n    local letter4\n\
    \    local letter5\n    local letter6\n    local letter7\n    local letter8\n\
    \    local letter9\n    local letter10\n    local letter11\n    local letter12\n\
    \    local letter13\n    local letter14\n    local letter15\n    local letter16\n\
    \    local letter17\n    local letter18\n    local letter19\n    local letter20\n\
    \    local letter21\n    local letter22\n    local letter23\n    local letter24\n\
    \    local letter25\n    local letter26\n    local letter27\n    local letter28\n\
    \    local letter29\n    local letter30\n    local letter31\n    local letter32\n\
    \    local letter33\n    local letter34\n    local letter35\n    local letter36\n\
    \    local letter37\n    local letter38\n    local letter39\n    local letter40\n\
    \    local letter41\n    local letter42\n    local letter43\n    local letter44\n\
    \    local letter45\n    local letter46\n    local letter47\n    local letter48\n\
    \    local letter49\n    local letter50\n    local letter51\n    local letter52\n\
    \    local letter53\n    local letter54\n    local letter55\n    local letter56\n\
    \    local letter57\n    local letter58\n    local letter59\n    local letter60\n\
    \    local letter61\n    local letter62\n    local letter63\n    local letter64\n\
    \    local letter65\n    local letter66\n    local letter67\n    local letter68\n\
    \    local letter69\n    local letter70\n    local letter71\n    local letter72\n\
    \    local letter73\n    local letter74\n    local letter75\n    local letter76\n\
    \    local letter77\n    local letter78\n    local letter79\n    local letter80\n\
    \    local letter81\n    local letter82\n    local letter83\n    local letter84\n\
    \    local letter85\n    local letter86\n    local letter87\n    local letter88\n\
    \    local letter89\n    local letter90\n    local letter91\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local result=\"\"\n  local\
    \ vowel\n  local letter\n  local count\n  local i\n  local j\n  \n  for (( i=0;\
    \ i<${#message}; i++ )); do\n    letter=${message:$i:1}\n    count=$(echo $letter\
    \ | wc -c)\n    \n    if [ $count -gt 1 ]; then\n      vowel=${message:$((i+1)):1}\n\
    \      \n      for (( j=0; j<${#vowels}; j++ )); do\n        if [ \"${vowels:$j:1}\"\
    \ = \"$vowel\" ]; then\n          break\n        fi\n      done\n      \n    \
    \  if [ $j -gt 0 ]; then\n        letter=${letter:0:$j}\n      fi\n    fi\n  \
    \  \n    result+=\"${letters:$count:1}\"\n  done\n  \n  echo $result\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n    local vowels=\"aeiouAEIOU\"\n    local output=\"\"\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local alphabet=\"a b c d e f g h i j k l m n o p q r s t u\
    \ v w x y z\"\n    local result=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n\
    \    local currentLetter=\"\"\n    local currentVowel=\"\"\n    local currentVowelIndex=0\n\
    \    local currentVowelCount=0\n    local currentVowelIndex2=0\n    local currentVowelCount2=0\n\
    \    local currentVowelIndex3=0\n    local currentVowelCount3=0\n    local currentVowelIndex4=0\n\
    \    local currentVowelCount4=0\n    local currentVowelIndex5=0\n    local currentVowelCount5=0\n\
    \    local currentVowelIndex6=0\n    local currentVowelCount6=0\n    local currentVowelIndex7=0\n\
    \    local currentVowelCount7=0\n    local currentVowelIndex8=0\n    local currentVowelCount8=0\n\
    \    local currentVowelIndex9=0\n    local currentVowelCount9=0\n    local currentVowelIndex10=0\n\
    \    local currentVowelCount10=0\n    local currentVowelIndex11=0\n    local currentVowelCount11=0\n\
    \    local currentVowelIndex12=0\n    local currentVowelCount12=0\n    local currentVowelIndex13=0\n\
    \    local currentVowelCount13=0\n    local currentVowelIndex14=0\n    local currentVowelCount14=0\n\
    \    local currentVowelIndex15=0\n    local currentVowelCount15=0\n    local currentVowelIndex16=0\n\
    \    local currentVowelCount16=0\n    local currentVowelIndex17=0\n    local currentVowelCount17=0\n\
    \    local currentVowelIndex18=0\n    local currentVowelCount18=0\n    local currentVowelIndex19=0\n\
    \    local currentVowelCount19=0\n    local currentVowelIndex20=0\n    local currentVowelCount20=0\n\
    \    local currentVowelIndex21=0\n    local currentVowelCount21=0\n    local currentVowelIndex22=0\n\
    \    local currentV\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\
    \n  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local letters_2=\"bcdefghijklmnopqrstuvwxyz\"\
    \n  local letters_3=\"defghijklmnopqrstuvwxyz\"\n  local letters_4=\"fghijklmnopqrstuvwxyz\"\
    \n  local letters_5=\"ghijklmnopqrstuvwxyz\"\n  local letters_6=\"hijklmnopqrstuvwxyz\"\
    \n  local letters_7=\"ijklmnopqrstuvwxyz\"\n  local letters_8=\"jklmnopqrstuvwxyz\"\
    \n  local letters_9=\"klmnopqrstuvwxyz\"\n  local letters_10=\"lmnopqrstuvwxyz\"\
    \n  local letters_11=\"nopqrstuvwxyz\"\n  local letters_12=\"opqrstuvwxyz\"\n\
    \  local letters_13=\"pqrstuvwxyz\"\n  local letters_14=\"qrstuvwxyz\"\n  local\
    \ letters_15=\"rstuvwxyz\"\n  local letters_16=\"stuvwxyz\"\n  local letters_17=\"\
    tuvwxyz\"\n  local letters_18=\"uvwxyz\"\n  local letters_19=\"vwxyz\"\n  local\
    \ letters_20=\"xyz\"\n  local letters_21=\"yz\"\n  local letters_22=\"z\"\n  local\
    \ letters_23=\"A\"\n  local letters_24=\"B\"\n  local letters_25=\"C\"\n  local\
    \ letters_26=\"D\"\n  local letters_27=\"E\"\n  local letters_28=\"F\"\n  local\
    \ letters_29=\"G\"\n  local letters_30=\"H\"\n  local letters_31=\"I\"\n  local\
    \ letters_32=\"J\"\n  local letters_33=\"K\"\n  local letters_34=\"L\"\n  local\
    \ letters_35=\"M\"\n  local letters_36=\"N\"\n  local letters_37=\"O\"\n  local\
    \ letters_38=\"P\"\n  local letters_39=\"Q\"\n  local letters_40=\"R\"\n  local\
    \ letters_41=\"S\"\n  local letters_42=\"T\"\n  local letters_\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"\n    local result=\"\"\n    local vowelCount=0\n    local letterCount=0\n\
    \    local currentLetter=\"\"\n    local currentVowel=\"\"\n    local currentVowel2=\"\
    \"\n    local currentVowel3=\"\"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\
    \"\n    local currentVowel6=\"\"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\
    \"\n    local currentVowel9=\"\"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\
    \"\n    local currentVowel12=\"\"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\
    \"\n    local currentVowel15=\"\"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\
    \"\n    local currentVowel18=\"\"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\
    \"\n    local currentVowel21=\"\"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\
    \"\n    local currentVowel24=\"\"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\
    \"\n    local currentVowel27=\"\"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\
    \"\n    local currentVowel30=\"\"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\
    \"\n    local currentVowel33=\"\"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\
    \"\n    local currentVowel36=\"\"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\
    \"\n    local currentVowel39=\"\"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\
    \"\n    local currentVowel42=\"\"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\
    \"\n    local currentVowel45=\"\"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\
    \"\n    local currentVowel48=\"\"\n    local currentVowel49=\"\"\n\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n  \
    \  local count=0\n    local vowelCount=0\n    local letterCount=0\n    local currentLetter=\"\
    \"\n    local currentVowel=\"\"\n    local currentVowel2=\"\"\n    local currentVowel3=\"\
    \"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\"\n    local currentVowel6=\"\
    \"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\"\n    local currentVowel9=\"\
    \"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\"\n    local currentVowel12=\"\
    \"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\"\n    local currentVowel15=\"\
    \"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\"\n    local currentVowel18=\"\
    \"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\"\n    local currentVowel21=\"\
    \"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\"\n    local currentVowel24=\"\
    \"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\"\n    local currentVowel27=\"\
    \"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\"\n    local currentVowel30=\"\
    \"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\"\n    local currentVowel33=\"\
    \"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\"\n    local currentVowel36=\"\
    \"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\"\n    local currentVowel39=\"\
    \"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\"\n    local currentVowel42=\"\
    \"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\"\n    local currentVowel45=\"\
    \"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\"\n    local currentVowel48=\"\
    \"\n    local currentVowel49=\"\"\n    local currentVowel50=\"\"\n    \n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u y\"\n  local output=\"\"\n  local vowel_count=0\n  local vowel_position=0\n\
    \  local letter_index=0\n  local letter\n  local vowel\n  \n  for letter in $message;\
    \ do\n    letter_index=$((letter_index+1))\n    letter=${message:$letter_index:1}\n\
    \    vowel=${message:$letter_index:1}\n    vowel_count=$((vowel_count+1))\n  \
    \  \n    if [[ $vowel == $vowels ]]; then\n      vowel_position=$((vowel_position+1))\n\
    \      \n      if [[ $vowel_position == 2 ]]; then\n        letter=${message:$letter_index:1}\n\
    \        letter=${letter:0:1}\n        letter=${letter:1}\n      fi\n      \n\
    \      output=$output$letter\n      \n      if [[ $letter_index -gt $((${#message}-1))\
    \ ]]; then\n        output=$output$vowel\n      fi\n    fi\n  done\n  \n  echo\
    \ $output\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660042913

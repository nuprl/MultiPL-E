language: sh
name: HumanEval_58_common
results:
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i ilist ilist2 jlist jlist2 ii jj ii jj ilist2 jlist2 ilist2len\n  \
    \  local ilist2len\n    ilist2len=0\n    for ilist in \"$@\"; do\n        ilist2len=$((ilist2len+${#ilist}))\n\
    \    done\n    ilist2len=$((ilist2len+1))\n    jlist2len=0\n    for jlist in \"\
    $@\"; do\n        jlist2len=$((jlist2len+${#jlist}))\n    done\n    ilist2len=$((ilist2len+1))\n\
    \    ilist2len=$((ilist2len+1))\n    ilist2len=$((ilist2len+1))\n    ilist2len=$((ilist2len+1))\n\
    \    ilist2len=$((ilist2len+1))\n    ilist2len=$((ilist2len+1))\n    ilist2len=$((ilist2len+1))\n\
    \    ilist2len=$((ilist2len+1))\n    ilist2len=$((ilist2len+1))\n    ilist2len=$((ilist2len+1))\n\
    \    ilist2len=$((ilist2len+1))\n    ilist2len=$((ilist2len+1))\n    ilist2len=$((ilist2len+1))\n\
    \    ilist2len=$((ilist2len+1))\n    ilist2len=$((ilist2len+1))\n    ilist2len=$((ilist2len+1))\n\
    \    ilist2len=$((ilist2len+1))\n    ilist2len=$((ilist2len+1))\n    ilist2len=$((ilist2len+1))\n\
    \    ilist2len=$((ilist2len+1))\n    ilist2len=$((ilist2len+1))\n    ilist2len=$((ilist2len+1))\n\
    \    ilist2len=$((ilist2len+1))\n    ilist2len=$((ilist2len+1))\n    ilist2len=$((ilist2len+1))\n\
    \    ilist2len=$((ilist2len+1))\n    ilist2len=$((ilist2len+1))\n    ilist2len=$((ilist2len+1))\n\
    \    ilist2len=$((ilist2len+1))\n    ilist2len=$((ilist2len+1))\n    ilist\n}\n\
    \ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpd7m5cy4a.sh: line 52: ilist: command not found

    '
  stdout: ''
  timestamp: 1660043528
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list_1 list_2\n    local i j\n    common_list=$1\n\
    \    list_1=$2\n    list_2=${list_1//,/ }\n    for (( i = 0; i < ${#list_1}; i++\
    \ )); do\n        for (( j=0; j < ${#list_2}; j++ )); do\n            if [[ ${list_1:$i:1}\
    \ = ${list_2:$j:1} ]]; then\n                common_list=\"${common_list} ${list_1:$i:1}\"\
    \n            fi\n        done\n    done\n    echo \"${common_list}\"\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043528
- exit_code: 2
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local result\n    len1=\"${#list1}\"\n    len2=\"${#list2}\"\n    len=\"${len1}\"\
    \n    if [ \"${len}\" -eq 0 ] || [ \"${len}\" -eq 1 ]; then\n        return 0\n\
    \    fi\n    if [ \"${len1}\" -eq 0 ] || [ \"${len2}\" -eq 0 ]; then\n       \
    \ return 0\n    fi\n    if [ \"${list1}\" == \"${list2}\" ]; then\n        return\
    \ 0\n    fi\n    for ((i=1; i<\"${len1}; i++)); do\n        for ((j=1; j<\"${len2}\"\
    ; j++)); do\n            k=\"${list1}$i$j\"\n            if [ \"${list2}\" ==\
    \ \"${common}\" ]; then\n                list2=\"${list2}$k\"\n            else\n\
    \                common=\"${common} ${list2}$k\"\n            fi\n        done\n\
    \    done\n    list2=\"${common}\"\n    len=\"${len1}\"\n    for ((i=1; i<\"${len}\"\
    ; i++)); do\n        k=\"${list1}$i\"\n        if [ \"${list2}\" == \"${common}\"\
    \ ]; then\n            list2=\"${list2}$k\"\n        else\n            common=\"\
    ${common} ${list2}$k\"\n        fi\n    done\n    list2=\"${common}\"\n    len=\"\
    ${len1}\"\n    for ((i=1; i<\"${len}\"; i++)); do\n        k=\"${list1}$i\"\n\
    \        if [ \"${list2}\" == \"${common}\" ]; then\n            list2=\"${list2}$k\"\
    \n        else\n            common=\"${common} ${list2}$k\"\n        fi\n    done\n\
    \    list2=\"${common}\"\n    len=\"${len1}\"\n    for ((i=1; i<\"${len}\"; i++));\
    \ do\n        k=\"${list1}$i\"\n        if [ \"${list2}\" == \"${common}\" ];\
    \ then\n            list2=\"${list2}$k\"\n        else\n            common=\"\
    ${common} ${list2}$k\"\n        fi\n    done\n    list2=\"${common}\"\n    len=\"\
    ${len1}\"\n    for ((i=1; i<\"${len}\"; i++)); do\n        k=\"${list1}$i\"\n\
    \        if [ \"${list2}\" == \"${common}\" ]; then\n            list2=\"${list2}$k\"\
    \n        else\n            common=\"${common\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzt1kzn0f.sh: line 33: unexpected EOF while looking for matching
    `)''

    /tmp/tmpzt1kzn0f.sh: line 96: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043528
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local sorted_list_1\n\
    \    local sorted_list_2\n    local common_element\n    local common_element_count\n\
    \    local common_element_count2\n    local common_element_count3\n    local common_element_count4\n\
    \    local common_element_count5\n    local common_element_count6\n    local common_element_count7\n\
    \    local common_element_count8\n    local common_element_count9\n    local common_element_count10\n\
    \    local common_element_count11\n    local common_element_count12\n    local\
    \ common_element_count13\n    local common_element_count14\n    local common_element_count15\n\
    \    local common_element_count16\n    local common_element_count17\n    local\
    \ common_element_count18\n    local common_element_count19\n    local common_element_count20\n\
    \    local common_element_count21\n    local common_element_count22\n    local\
    \ common_element_count23\n    local common_element_count24\n    local common_element_count25\n\
    \    local common_element_count26\n    local common_element_count27\n    local\
    \ common_element_count28\n    local common_element_count29\n    local common_element_count30\n\
    \    local common_element_count31\n    local common_element_count32\n    local\
    \ common_element_count33\n    local common_element_count34\n    local common_element_count35\n\
    \    local common_element_count36\n    local common_element_count37\n    local\
    \ common_element_count38\n    local common_element_count39\n    local common_element_count40\n\
    \    local common_element_count41\n    local common_element_count42\n    local\
    \ common_element_count43\n    local common_element_count44\n    local common_element_count45\n\
    \    local common_element_count46\n    local common_element_count47\n    local\
    \ common_element_count48\n    local common_element_count49\n    local common_element_count50\n\
    \    local common_element_count51\n    local common_element_count52\n    local\
    \ common_element_count53\n    local common_element_count54\n    local common_element_count55\n\
    \    local common_element_count56\n    local common_element_count57\n    local\
    \ common_element_count58\n    local common_element_count59\n    local common_element_count60\n\
    \    local common_element_count61\n    local common_element_count62\n    local\
    \ common_element_count63\n    local common_element_count64\n    local common_element_count65\n\
    \    local common_element_count66\n    local common_element_count67\n    local\
    \ common_element_count68\n    local common_\n}\n\ncandidate() {\n    common \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7\
    \ 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") =\
    \ \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043528
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local x\n    local y\n    local z\n    local sorted\n\n    list1=\"\
    ${list1//[[:space:]]/}\"\n    list2=\"${list2//[[:space:]]/}\"\n\n    len1=\"\
    ${#list1}\"\n    len2=\"${#list2}\"\n\n    if [ \"${len1}\" -eq 0 -o \"${len2}\"\
    \ -eq 0 ]; then\n        echo \"$list1 $list2\"\n        return\n    fi\n\n  \
    \  common=()\n    sorted=false\n    len=0\n    for (( i = 0; i < ${len1}; i++\
    \ )); do\n        x=\"${list1:$i:1}\"\n        for (( j = 0; i < ${len2}; j++\
    \ )); do\n            y=\"${list2:$j:1}\"\n            if [ \"$x\" == \"$y\" ];\
    \ then\n                common+=(\"$x\")\n                len=$((len + 1))\n \
    \           else\n                if [ \"$sorted\" == \"false\" ]; then\n    \
    \                common+=(\"$x\")\n                    sorted=true\n         \
    \       else\n                    tmp=\"${common[@]}\"\n                    common=()\n\
    \                    sorted=false\n                    for (( k = 0; k < ${#tmp};\
    \ k++ )); do\n                        z=\"${tmp:$k:1}\"\n                    \
    \    if [ \"$z\" == \"$y\" ]; then\n                            common+=(\"$z\"\
    )\n                            len=$((len + 1))\n                        fi\n\
    \                    done\n                fi\n            fi\n        done\n\
    \    done\n\n    if [ \"$sorted\" == \"false\" ]; then\n        echo \"$common\"\
    \n    else\n        echo \"${common[@]}\"\n    fi\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=10 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=6 encoding='utf-8'>
  timestamp: 1660043533
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local common\n  local i\n  local j\n  local k\n  local len1\n  local len2\n\
    \  local len\n  local tmp\n  local sorted\n  local unique\n\n  sorted=$(sort -u\
    \ $1)\n  unique=$(sort -u $2)\n\n  len1=${#sorted[@]}\n  len2=${#unique[@]}\n\n\
    \  if [ $len1 -eq 0 -o $len2 -eq 0 ]; then\n    return 0\n  fi\n\n  len=$((len1\
    \ > len2 ? len1 : len2))\n\n  common=()\n  i=0\n  j=0\n  k=0\n  while [ $i -lt\
    \ $len ] && [ $j -lt $len ]; do\n    if [ \"${sorted[$i]}\" == \"${unique[$j]}\"\
    \ ]; then\n      common+=(\"${sorted[$i]}\")\n      i=$((i + 1))\n      j=$((j\
    \ + 1))\n    else\n      k=$((k + 1))\n    fi\n  done\n\n  if [ $i -eq $len ];\
    \ then\n    common+=(\"${sorted[$i]}\")\n  fi\n\n  if [ $j -eq $len ]; then\n\
    \    common+=(\"${unique[$j]}\")\n  fi\n\n  echo \"${common[@]}\"\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: 34: No such file or directory

    sort: cannot read: 653: No such file or directory

    '
  stdout: ''
  timestamp: 1660043528
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local x\n    local y\n    local z\n    local sorted\n\n    sorted=false\n\
    \    common=()\n    len1=${#list1}\n    len2=${#list2}\n    len=$((len1 < len2\
    \ ? len1 : len2))\n    for ((i = 0; i < len; i++)); do\n        tmp=${list1:$i:1}\n\
    \        for ((j = 0; j < len; j++)); do\n            x=${list2:$j:1}\n      \
    \      if [ \"$x\" == \"$tmp\" ]; then\n                common+=(\"$x\")\n   \
    \             list1=\"${list1:0:i}${list1:i+1}\"\n                list2=\"${list2:0:j}${list2:j+1}\"\
    \n                len=$((len > len1 ? len : len1))\n                break\n  \
    \          fi\n        done\n    done\n    if [ \"$sorted\" == \"true\" ]; then\n\
    \        common=($(sort <<<\"${common[@]}\"; echo \"${common[@]}\"; echo \"${common[@]}\"\
    ; echo \"${common[@]}\"; echo \"${common[@]}\"; echo \"${common[@]}\"; echo \"\
    ${common[@]}\"; echo \"${common[@]}\"; echo \"${common[@]}\"; echo \"${common[@]}\"\
    ; echo \"${common[@]}\"; echo \"${common[@]}\"; echo \"${common[@]}\"; echo \"\
    ${common[@]}\"; echo \"${common[@]}\"; echo \"${common[@]}\"; echo \"${common[@]}\"\
    ; echo \"${common[@]}\"; echo \"${common[@]}\"; echo \"${common[@]}\"; echo \"\
    ${common[@]}\"; echo \"${common[@]}\"; echo \"${common[@]}\"; echo \"${common[@]}\"\
    ; echo \"${common[@]}\"; echo \"${common[@]}\"; echo \"${common[@]}\"; echo \"\
    ${common[@]}\"; echo \"${common[@]}\"; echo \"${common[@]}\"; echo \"${common[@]}\"\
    ; echo \"${common[@]}\"; echo \"${common[@]}\"; echo \"${common[@]}\"; echo \"\
    ${common[@]}\"; echo \"${common[@]}\"; echo \"${common[@]}\"; echo \"${common[@]}\"\
    ; echo \"${common[@]}\"; echo \"${common[@]}\"; echo \"${common[@]}\"\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp58alqv0k.sh: line 45: unexpected EOF while looking for matching
    `)''

    /tmp/tmp58alqv0k.sh: line 61: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043528
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local list1\n    local list2\n    local i\n    local j\n\
    \    list1=$1\n    list2=$2\n    common=()\n    for (( i = 0; i < ${#list1}; i++\
    \ )); do\n        for (( j = 0; i < ${#list2}; j++ )); do\n            if [[ ${list1:$i:1}\
    \ = ${list2:$j:1} ]]; then\n                common+=(\"${list1:$i:1}\")\n    \
    \        fi\n        done\n    done\n    echo \"${common[@]}\"\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=18 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=15 encoding='utf-8'>
  timestamp: 1660043533
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i ilist ilist2 jlist jlist2\n    local ilist ilist2 jlist jlist2\n \
    \   local ilist ilist2 jlist jlist2\n    local ilist ilist2 jlist jlist2\n   \
    \ local ilist ilist2 jlist jlist2\n    local ilist ilist2 jlist jlist2\n    local\
    \ ilist ilist2 jlist jlist2\n    local ilist ilist2 jlist jlist2\n    local ilist\
    \ ilist2 jlist jlist2\n    local ilist ilist2 jlist jlist2\n    local ilist ilist2\
    \ jlist jlist2\n    local ilist ilist2 jlist jlist2\n    local ilist ilist2 jlist\
    \ jlist2\n    local ilist ilist2 jlist jlist2\n    local ilist ilist2 jlist jlist2\n\
    \    local ilist ilist2 jlist jlist2\n    local ilist ilist2 jlist jlist2\n  \
    \  local ilist ilist2 jlist jlist2\n    local ilist ilist2 jlist jlist2\n    local\
    \ ilist ilist2 jlist jlist2\n    local ilist ilist2 jlist jlist2\n    local ilist\
    \ ilist2 jlist jlist2\n    local ilist ilist2 jlist jlist2\n    local ilist ilist2\
    \ jlist jlist2\n    local ilist ilist2 jlist jlist2\n    local ilist ilist2 jlist\
    \ jlist2\n    local ilist ilist2 jlist jlist2\n    local ilist ilist2 jlist jlist2\n\
    \    local ilist ilist2 jlist jlist2\n    local ilist ilist2 jlist jlist2\n  \
    \  local ilist ilist2 jlist jlist2\n    local ilist ilist2 jlist jlist2\n    local\
    \ ilist ilist2 jlist jlist2\n    local ilist ilist2 jlist jlist2\n    local ilist\
    \ ilist2 jlist jlist2\n    local ilist ilist2 jlist jlist2\n    local ilist ilist2\
    \ jlist jlist2\n    local ilist ilist2 jlist jlist2\n    local ilist ilist2 jlist\
    \ jlist2\n    local ilist \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043528
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list_1 list_2\n    local list_1_len list_2_len\n\
    \    local i j\n\n    list_1=$1\n    list_2=$2\n    list_1_len=$(echo $list_1\
    \ | wc -w)\n    list_2_len=$(echo $list_2 | wc -w)\n\n    if [ $list_1_len -ne\
    \ $list_2_len ]; then\n        echo \"$list_1 is not the same size as $list_2\"\
    \n        return 1\n    fi\n\n    common_list=($(echo $list_1 | sort | uniq -u))\n\
    \    for (( i=1; i<=$list_1_len; i++ )); do\n        for (( j=1; j<=$list_2_len;\
    \ j++ )); do\n            if [[ $list_1 =~ $list_2[$j] ]]; then\n            \
    \    common_list+=(\"$list_2[$j]\")\n                list_2=$list_2[@:$((j-1))]\n\
    \            fi\n        done\n    done\n\n    echo \"${common_list[@]}\"\n}\n\
    \ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043528
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local minlen\n\
    \    local maxlen\n    local min\n    local max\n    local minlen2\n    local\
    \ maxlen2\n    local min2\n    local max2\n    local minlen1\n    local maxlen1\n\
    \    local min1\n    local max1\n    local minlen2\n    local maxlen2\n    local\
    \ min2\n    local max2\n    local minlen1\n    local maxlen1\n    local min1\n\
    \    local max1\n    local minlen2\n    local maxlen2\n    local min2\n    local\
    \ max2\n    local minlen1\n    local maxlen1\n    local min1\n    local max1\n\
    \    local minlen2\n    local maxlen2\n    local min2\n    local max2\n    local\
    \ minlen1\n    local maxlen1\n    local min1\n    local max1\n    local minlen2\n\
    \    local maxlen2\n    local min2\n    local max2\n    local minlen1\n    local\
    \ maxlen1\n    local min1\n    local max1\n    local minlen2\n    local maxlen2\n\
    \    local min2\n    local max2\n    local minlen1\n    local maxlen1\n    local\
    \ min1\n    local max1\n    local minlen2\n    local maxlen2\n    local min2\n\
    \    local max2\n    local minlen1\n    local maxlen1\n    local min1\n    local\
    \ max1\n    local minlen2\n    local maxlen2\n    local min2\n    local max2\n\
    \    local minlen1\n    local maxlen1\n    local min1\n    local max1\n    local\
    \ minlen2\n    local maxlen2\n    local min2\n    local max2\n    local minlen1\n\
    \    local maxlen1\n    local min1\n    local max1\n    local minlen2\n    local\
    \ maxlen2\n    local min2\n    local max2\n    local minlen1\n    local maxlen1\n\
    \    local min1\n    local max1\n    local minlen2\n    local maxlen2\n    local\
    \ \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043528
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local x\n    local y\n    local z\n    local sorted\n    local uniq\n\n    sorted=$(sort\
    \ \"$list1\" \"$list2\")\n    uniq=$(uniq \"$sorted\")\n    len1=${#list1}\n \
    \   len2=${#list2}\n    len=${#uniq}\n    if [ $len -ne $len1 ] || [ $len -ne\
    \ $len2 ]; then\n        echo \"$list1 $list2 not same length\"\n        return\
    \ 1\n    fi\n    for (( i = 0; i <= $len; i++ )); do\n        x=${uniq[$i]}\n\
    \        for (( j = $i + 1; j <= $len; j++ )); do\n            y=${uniq[$j]}\n\
    \            common=$(echo \"$x $y\" | sort | uniq)\n            if [ \"$common\"\
    \ != \"$x\" ]; then\n                echo \"$list1 $list2 not same elements\"\n\
    \                return 1\n            fi\n        done\n    done\n    sorted=$(sort\
    \ \"$list1\" \"$list2\")\n    uniq=$(uniq \"$sorted\")\n    len1=${#list1}\n \
    \   len2=${#list2}\n    len=${#uniq}\n    if [ $len -ne $len1 ] || [ $len -ne\
    \ $len2 ]; then\n        echo \"$list1 $list2 not same length\"\n        return\
    \ 1\n    fi\n    for (( i = 0; i <= $len; i++ )); do\n        x=${uniq[$i]}\n\
    \        for (( j = $i + 1; j <= $len; j++ )); do\n            y=${uniq[$j]}\n\
    \            common=$(echo \"$x $y\" | sort | uniq)\n            if [ \"$common\"\
    \ != \"$y\" ]; then\n                echo \"$list1 $list2 not same elements\"\n\
    \                return 1\n            fi\n        done\n    done\n    return\
    \ 0\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n \
    \   [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: ''1 4 3 34 653 2 5'': No such file or directory

    uniq: '''': No such file or directory

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list_1\n    local list_2\n    local i\n    local\
    \ j\n    local common_list_1\n    local common_list_2\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    \n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local common_list_1\n    local common_list_2\n    local\
    \ common_list_1_sorted\n    local common_list_2_sorted\n    local common_list_1_sorted_unique\n\
    \    local common_list_2_sorted_unique\n    local common_list_1_sorted_unique_nospace\n\
    \    local common_list_2_sorted_unique_nospace\n    local common_list_1_sorted_unique_nospace_nospace\n\
    \    local common_list_2_sorted_unique_nospace_nospace\n    local common_list_1_sorted_unique_nospace_nospace_nospace\n\
    \    local common_list_2_sorted_unique_nospace_nospace_nospace\n    local common_list_1_sorted_unique_nospace_nospace_nospace_nospace\n\
    \    local common_list_2_sorted_unique_nospace_nospace_nospace_nospace\n    local\
    \ common_list_1_sorted_unique_nospace_nospace_nospace_nospace_nospace\n    local\
    \ common_list_2_sorted_unique_nospace_nospace_nospace_nospace_nospace\n    local\
    \ common_list_1_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_2_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_1_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_2_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_1_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_2_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_1_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_2_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_1_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_2_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_1_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_2_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_\n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043528
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local \n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local i\n    local j\n    local common_list_len\n \
    \   local common_list_len2\n    local common_list_len3\n    local common_list_len4\n\
    \    local common_list_len5\n    local common_list_len6\n    local common_list_len7\n\
    \    local common_list_len8\n    local common_list_len9\n    local common_list_len10\n\
    \    local common_list_len11\n    local common_list_len12\n    local common_list_len13\n\
    \    local common_list_len14\n    local common_list_len15\n    local common_list_len16\n\
    \    local common_list_len17\n    local common_list_len18\n    local common_list_len19\n\
    \    local common_list_len20\n    local common_list_len21\n    local common_list_len22\n\
    \    local common_list_len23\n    local common_list_len24\n    local common_list_len25\n\
    \    local common_list_len26\n    local common_list_len27\n    local common_list_len28\n\
    \    local common_list_len29\n    local common_list_len30\n    local common_list_len31\n\
    \    local common_list_len32\n    local common_list_len33\n    local common_list_len34\n\
    \    local common_list_len35\n    local common_list_len36\n    local common_list_len37\n\
    \    local common_list_len38\n    local common_list_len39\n    local common_list_len40\n\
    \    local common_list_len41\n    local common_list_len42\n    local common_list_len43\n\
    \    local common_list_len44\n    local common_list_len45\n    local common_list_len46\n\
    \    local common_list_len47\n    local common_list_len48\n    local common_list_len49\n\
    \    local common_list_len50\n    local common_list_len51\n    local common_list_len52\n\
    \    local common_list_len53\n    local common_list_len54\n    local common_list_len55\n\
    \    local common_list_len56\n    local common_list_len57\n    local common_list_len58\n\
    \    local common_list_len59\n    local common_list_len60\n    local common_list_len61\n\
    \    local common_list_len62\n    local common_list_len63\n    local common_list_len64\n\
    \    local common_list_len65\n    local common_list_len66\n    local common_list_len67\n\
    \    local common_list_len68\n    local common_list_len69\n    local common_list_len70\n\
    \    local common_list_len71\n    local common_\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local max\n   \
    \ local min\n    local minlen\n    local maxlen\n    local minlen2\n    local\
    \ maxlen2\n    local minlen2\n    local maxlen2\n    local minlen2\n    local\
    \ maxlen2\n    local minlen2\n    local maxlen2\n    local minlen2\n    local\
    \ maxlen2\n    local minlen2\n    local maxlen2\n    local minlen2\n    local\
    \ maxlen2\n    local minlen2\n    local maxlen2\n    local minlen2\n    local\
    \ maxlen2\n    local minlen2\n    local maxlen2\n    local minlen2\n    local\
    \ maxlen2\n    local minlen2\n    local maxlen2\n    local minlen2\n    local\
    \ maxlen2\n    local minlen2\n    local maxlen2\n    local minlen2\n    local\
    \ maxlen2\n    local minlen2\n    local maxlen2\n    local minlen2\n    local\
    \ maxlen2\n    local minlen2\n    local maxlen2\n    local minlen2\n    local\
    \ maxlen2\n    local minlen2\n    local maxlen2\n    local minlen2\n    local\
    \ maxlen2\n    local minlen2\n    local maxlen2\n    local minlen2\n    local\
    \ maxlen2\n    local minlen2\n    local maxlen2\n    local minlen2\n    local\
    \ maxlen2\n    local minlen2\n    local maxlen2\n    local minlen2\n    local\
    \ maxlen2\n    local minlen2\n    local maxlen2\n    local minlen2\n    local\
    \ maxlen2\n    local minlen2\n    local maxlen2\n    local minlen2\n    local\
    \ maxlen2\n    local minlen2\n    local maxlen2\n    local minlen2\n    local\
    \ maxlen2\n    local minlen2\n    local maxlen2\n    local minlen2\n    local\
    \ maxlen2\n    local minlen2\n    local maxlen2\n    local minlen2\n    local\
    \ maxlen2\n    local minlen2\n    local maxlen\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=$1; shift\n    local -n arr2=$1; shift\n    local -a res=()\n\
    \    for ((i=0; i<${#arr1[@]}; i++)); do\n        local elem1=${arr1[$i]}\n  \
    \      for ((j=0; j<${#arr2[@]}; j++)); do\n            local elem2=${arr2[$j]}\n\
    \            if [[ ${elem1} != ${elem2} ]]; then\n                continue 2\n\
    \            fi\n        done\n        res+=(\"${elem1}\")\n    done\n    sort\
    \ -u \"${res[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=25 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=16 encoding='utf-8'>
  timestamp: 1660043534
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local max\n   \
    \ local min\n    local maxlen\n    local minlen\n    local diff\n    local difflen\n\
    \    local mindiff\n    local mindifflen\n    local mindifflen2\n    local mindifflen2len\n\
    \    local mindifflen2len2\n    local mindifflen2len3\n    local mindifflen2len3len\n\
    \    local mindifflen2len3len2\n    local mindifflen2len3len2len\n    local mindifflen2len3len2len2\n\
    \    local mindifflen2len3len2len2len\n    local mindifflen2len3len2len2len2\n\
    \    local mindifflen2len3len2len2len2len\n    local mindifflen2len3len2len2len2len2\n\
    \    local mindifflen2len3len2len2len2len2len\n    local mindifflen2len3len2len2len2len2len2\n\
    \    local mindifflen2len3len2len2len2len2len2len\n    local mindifflen2len3len2len2len2len2len2len2\n\
    \    local mindifflen2len3len2len2len2len2len2len2len\n    local mindifflen2len3len2len2len2len2len2len2len\n\
    \    local mindifflen2len3len2len2len2len2len2len2len2\n    local mindifflen2len3len2len2len2len2len2len2len2len\n\
    \    local mindifflen2len3len2len2len2len2len2len2len2len\n    local mindifflen2len3len2len2len2len2len2len2len2len\n\
    \    local mindifflen2len3len2len2len2len2len2len2len2len2\n    local mindifflen2len3len2len2len2len2len2len2len2len2len\n\
    \    local mindifflen2len3len2len2len2len2len2len2len2len2len\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1=($1)\n    local list2=($2)\n    local common\n\
    \    local sorted\n\n    sorted=()\n    for (( i=0; i<${#list1[@]}; i++ )); do\n\
    \        for (( j=0; j<${#list2[@]}; j++ )); do\n            if [[ ${list1[i]}\
    \ == ${list2[j]} ]]; then\n                sorted+=(\"${list1[i]}\")\n       \
    \         list1[i]=\n                list2[j]=\n                break\n      \
    \      fi\n        done\n    done\n\n    common=()\n    for (( i=0; i<${#sorted[@]};\
    \ i++ )); do\n        common+=(\"${sorted[i]}\")\n    done\n\n    echo \"${common[@]}\"\
    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list_1 list_2\n    local i j\n    common_list=$(\
    \ echo $1 | tr ' ' '\\n' | sort -u )\n    list_1=$( echo $2 | tr ' ' '\\n' | sort\
    \ -u )\n    list_2=$( echo $2 | tr ' ' '\\n' | sort -u )\n    for (( i = 0; i\
    \ < ${#list_1}; i++ )); do\n        for (( j = 0; i < ${#list_2}; j++ )); do\n\
    \            if [[ ${list_1:$i:1} = ${list_2:$j:1} ]]; then\n                common_list=\"\
    $common_list ${list_1:$i:1}\"\n            fi\n        done\n    done\n    echo\
    \ \"$common_list\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=39 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=24 encoding='utf-8'>
  timestamp: 1660043534
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local common_list_1\n    local common_list_2\n    local\
    \ common_list_1_sorted\n    local common_list_2_sorted\n    local common_list_1_sorted_unique\n\
    \    local common_list_2_sorted_unique\n    local common_list_1_sorted_unique_nospace\n\
    \    local common_list_2_sorted_unique_nospace\n    local common_list_1_sorted_unique_nospace_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces\n    local common_list_1_sorted_unique_nospace_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces\n    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces\n  \
    \  local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_no\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local x\n    local y\n    local z\n    local sorted\n    local\
    \ sorted1\n    local sorted2\n    local sorted3\n    local sorted4\n    local\
    \ sorted5\n    local sorted6\n    local sorted7\n    local sorted8\n    local\
    \ sorted9\n    local sorted10\n    local sorted11\n    local sorted12\n    local\
    \ sorted13\n    local sorted14\n    local sorted15\n    local sorted16\n    local\
    \ sorted17\n    local sorted18\n    local sorted19\n    local sorted20\n    local\
    \ sorted21\n    local sorted22\n    local sorted23\n    local sorted24\n    local\
    \ sorted25\n    local sorted26\n    local sorted27\n    local sorted28\n    local\
    \ sorted29\n    local sorted30\n    local sorted31\n    local sorted32\n    local\
    \ sorted33\n    local sorted34\n    local sorted35\n    local sorted36\n    local\
    \ sorted37\n    local sorted38\n    local sorted39\n    local sorted40\n    local\
    \ sorted41\n    local sorted42\n    local sorted43\n    local sorted44\n    local\
    \ sorted45\n    local sorted46\n    local sorted47\n    local sorted48\n    local\
    \ sorted49\n    local sorted50\n    local sorted51\n    local sorted52\n    local\
    \ sorted53\n    local sorted54\n    local sorted55\n    local sorted56\n    local\
    \ sorted57\n    local sorted58\n    local sorted59\n    local sorted60\n    local\
    \ sorted61\n    local sorted62\n    local sorted63\n    local sorted64\n    local\
    \ sorted65\n    local sorted66\n    local sorted67\n    local sorted68\n    local\
    \ sorted69\n    local sorted70\n    local sorted71\n    local sorted72\n    local\
    \ sorted73\n    local sorted74\n    local sorted75\n    local sorted76\n    local\
    \ sorted77\n    local sorted78\n    local sorted79\n    local sorted80\n    local\
    \ sorted81\n    local sorted82\n    local sorted83\n    local sorted84\n    local\
    \ sorted85\n    local sorted86\n    local sorted87\n    local sorted88\n    local\
    \ sorted89\n    local sorted\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\"\
    ) = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local i\n    local j\n    local len1\n    local len2\n \
    \   local maxlen\n    local minlen\n    local maxlen1\n    local maxlen2\n   \
    \ local minlen1\n    local minlen2\n    local maxlen1temp\n    local maxlen2temp\n\
    \    local minlen1temp\n    local minlen2temp\n    local maxlen1temp2\n    local\
    \ maxlen2temp2\n    local minlen1temp2\n    local minlen2temp2\n    local maxlen1temp3\n\
    \    local maxlen2temp3\n    local minlen1temp3\n    local minlen2temp3\n    local\
    \ maxlen1temp4\n    local maxlen2temp4\n    local minlen1temp4\n    local minlen2temp4\n\
    \    local maxlen1temp5\n    local maxlen2temp5\n    local minlen1temp5\n    local\
    \ minlen2temp5\n    local maxlen1temp6\n    local maxlen2temp6\n    local minlen1temp6\n\
    \    local minlen2temp6\n    local maxlen1temp7\n    local maxlen2temp7\n    local\
    \ minlen1temp7\n    local minlen2temp7\n    local maxlen1temp8\n    local maxlen2temp8\n\
    \    local minlen1temp8\n    local minlen2temp8\n    local maxlen1temp9\n    local\
    \ maxlen2temp9\n    local minlen1temp9\n    local minlen2temp9\n    local maxlen1temp10\n\
    \    local maxlen2temp10\n    local minlen1temp10\n    local minlen2temp10\n \
    \   local maxlen1temp11\n    local maxlen2temp11\n    local minlen1temp11\n  \
    \  local minlen2temp11\n    local maxlen1temp12\n    local maxlen2temp12\n   \
    \ local minlen1temp12\n    local minlen2temp12\n    local maxlen1temp13\n    local\
    \ maxlen2temp13\n    local minlen1temp13\n    local minlen2temp13\n    local maxlen1temp14\n\
    \    local maxlen2temp14\n    local minlen1temp14\n    local minlen2temp14\n \
    \   local maxlen1temp15\n    local maxlen\n}\n\ncandidate() {\n    common \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5\
    \ 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"\
    2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1=($1)\n    local list2=($2)\n    local list3=($list1\
    \ $list2)\n    local list4=($(sort <<<\"${list3[@]}\"))\n    local list5=($(sort\
    \ <<<\"${list4[@]}\"))\n    local list6=($(sort <<<\"${list5[@]}\"))\n    local\
    \ list7=($(sort <<<\"${list6[@]}\"))\n    local list8=($(sort <<<\"${list7[@]}\"\
    ))\n    local list9=($(sort <<<\"${list8[@]}\"))\n    local list10=($(sort <<<\"\
    ${list9[@]}\"))\n    local list11=($(sort <<<\"${list10[@]}\"))\n    local list12=($(sort\
    \ <<<\"${list11[@]}\"))\n    local list13=($(sort <<<\"${list12[@]}\"))\n    local\
    \ list14=($(sort <<<\"${list13[@]}\"))\n    local list15=($(sort <<<\"${list14[@]}\"\
    ))\n    local list16=($(sort <<<\"${list15[@]}\"))\n    local list17=($(sort <<<\"\
    ${list16[@]}\"))\n    local list18=($(sort <<<\"${list17[@]}\"))\n    local list19=($(sort\
    \ <<<\"${list18[@]}\"))\n    local list20=($(sort <<<\"${list19[@]}\"))\n    local\
    \ list21=($(sort <<<\"${list20[@]}\"))\n    local list22=($(sort <<<\"${list21[@]}\"\
    ))\n    local list23=($(sort <<<\"${list22[@]}\"))\n    local list24=($(sort <<<\"\
    ${list23[@]}\"))\n    local list25=($(sort <<<\"${list24[@]}\"))\n    local list26=($(sort\
    \ <<<\"${list25[@]}\"))\n    local list27=($(sort <<<\"${list26[@]}\"))\n    local\
    \ list28=($(sort <<<\"${list27[@]}\"))\n    local list29=($(sort <<<\"${list28[@]}\"\
    ))\n    local list30=($(sort <<<\"${list29[@]}\"))\n    local list31=($(sort <<<\"\
    ${list30[@]}\"))\n    local list32=($(sort <<<\"${list31[@]}\"))\n    local list33=($(sort\
    \ <<<\"${list32[@]}\"))\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local i\n    local j\n    local k\n    local len1\n    local\
    \ len2\n    local len\n    local tmp\n    local sorted\n    local tmp2\n    local\
    \ tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local\
    \ tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n  \
    \  local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n}\n\ncandidate() {\n    common \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5\
    \ 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"\
    2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local common_list\n\
    \    common_list=$(bc <<< \"$(sort <<< \"$list_1 $list_2\" | uniq -u)\"\n    )\n\
    \    echo \"$common_list\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local list_1_sorted\n\
    \    list_1_sorted=$(sort -u <<< \"$list_1\")\n    local list_2_sorted\n    list_2_sorted=$(sort\
    \ -u <<< \"$list_2\")\n    local common_elements\n    common_elements=$(comm -12\
    \ <(echo \"$list_1_sorted\") <(echo \"$list_2_sorted\"))\n    echo \"$common_elements\"\
    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n\n}\n\ncandidate() {\n    common \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n list1=$1; shift\n    local -n list2=$1; shift\n    local -a sorted1\n\
    \    local -a sorted2\n    local -a common\n    local -a common1\n    local -a\
    \ common2\n    local -a common3\n    local -a common4\n    local -a common5\n\
    \    local -a common6\n    local -a common7\n    local -a common8\n    local -a\
    \ common9\n    local -a common10\n    local -a common11\n    local -a common12\n\
    \    local -a common13\n    local -a common14\n    local -a common15\n    local\
    \ -a common16\n    local -a common17\n    local -a common18\n    local -a common19\n\
    \    local -a common20\n    local -a common21\n    local -a common22\n    local\
    \ -a common23\n    local -a common24\n    local -a common25\n    local -a common26\n\
    \    local -a common27\n    local -a common28\n    local -a common29\n    local\
    \ -a common30\n    local -a common31\n    local -a common32\n    local -a common33\n\
    \    local -a common34\n    local -a common35\n    local -a common36\n    local\
    \ -a common37\n    local -a common38\n    local -a common39\n    local -a common40\n\
    \    local -a common41\n    local -a common42\n    local -a common43\n    local\
    \ -a common44\n    local -a common45\n    local -a common46\n    local -a common47\n\
    \    local -a common48\n    local -a common49\n    local -a common50\n    local\
    \ -a common51\n    local -a common52\n    local -a common53\n    local -a common54\n\
    \    local -a common55\n    local -a common56\n    local -a common57\n    local\
    \ -a common58\n    local -a common59\n    local -a common60\n    local -a common61\n\
    \    local -a common62\n    local -a common63\n    local -a common64\n    local\
    \ -a common65\n    local -a common66\n    local -a common67\n    local -\n}\n\n\
    candidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpadrttiu9.sh: line 11: local: `1 4 3 34 653 2 5'': invalid variable
    name for name reference

    /tmp/tmpadrttiu9.sh: line 12: local: `5 7 1 5 9 653 121'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local l\n    local len1\n    local len2\n    local\
    \ len\n    local match\n    local matchlen\n    local matchlen1\n    local matchlen2\n\
    \    local matchlen3\n    local matchlen4\n    local matchlen5\n    local matchlen6\n\
    \    local matchlen7\n    local matchlen8\n    local matchlen9\n    local matchlen10\n\
    \    local matchlen11\n    local matchlen12\n    local matchlen13\n    local matchlen14\n\
    \    local matchlen15\n    local matchlen16\n    local matchlen17\n    local matchlen18\n\
    \    local matchlen19\n    local matchlen20\n    local matchlen21\n    local matchlen22\n\
    \    local matchlen23\n    local matchlen24\n    local matchlen25\n    local matchlen26\n\
    \    local matchlen27\n    local matchlen28\n    local matchlen29\n    local matchlen30\n\
    \    local matchlen31\n    local matchlen32\n    local matchlen33\n    local matchlen34\n\
    \    local matchlen35\n    local matchlen36\n    local matchlen37\n    local matchlen38\n\
    \    local matchlen39\n    local matchlen40\n    local matchlen41\n    local matchlen42\n\
    \    local matchlen43\n    local matchlen44\n    local matchlen45\n    local matchlen46\n\
    \    local matchlen47\n    local matchlen48\n    local matchlen49\n    local matchlen50\n\
    \    local matchlen51\n    local matchlen52\n    local matchlen53\n    local matchlen54\n\
    \    local matchlen55\n    local matchlen56\n    local matchlen57\n    local matchlen58\n\
    \    local matchlen59\n    local matchlen60\n    local matchlen61\n    local matchlen62\n\
    \    local matchlen63\n    local matchlen64\n    local matchlen65\n    local matchlen66\n\
    \    local matchlen67\n    local matchlen68\n    local matchlen69\n    local matchlen70\n\
    \    local matchlen71\n    local matchlen72\n    local matchlen73\n    local matchlen74\n\
    \    local matchlen75\n    local matchlen76\n}\n\ncandidate() {\n    common \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7\
    \ 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") =\
    \ \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local list_1_sorted\n\
    \    local list_2_sorted\n    list_1_sorted=$(echo \"$list_1\" | tr ' ' '\\n'\
    \ | sort -u)\n    list_2_sorted=$(echo \"$list_2\" | tr ' ' '\\n' | sort -u)\n\
    \    comm -2 -3 <(echo \"$list_1_sorted\") <(echo \"$list_2_sorted\")\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n\
    \    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a\
    \ j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
    \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
    \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a a\n    local -a b\n    local -a c\n    local\
    \ -a d\n    local -a e\n    local -a f\n    local -a g\n    local -a h\n    local\
    \ -a i\n    local -a j\n    local -a k\n    local -a l\n    local -a m\n    local\
    \ -a n\n    local -a o\n    local -a p\n    local -a q\n    local -a r\n    local\
    \ -a s\n    local -a t\n    local -a u\n    local -a v\n    local -a w\n    local\
    \ -a x\n    local -a y\n    local -a z\n    local -a a\n    local -a b\n    local\
    \ -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a g\n    local\
    \ -a h\n    local -a i\n    local -a j\n    local -a k\n    local -a l\n    local\
    \ -a m\n    local -a n\n    local -a o\n    local -a p\n    local -a q\n    local\
    \ -a r\n    local -a s\n    local -a t\n    local -a u\n    local -a v\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a a\n    local\
    \ -a b\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local\
    \ -a g\n    local \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=$1; shift\n    local -n arr2=$1; shift\n    local -n result=$1;\
    \ shift\n\n    local -a arr3\n    arr3=($(comm -3 <(printf \"%s\\n\" \"${arr1[@]}\"\
    ) <(printf \"%s\\n\" \"${arr2[@]}\") | sort -u))\n    arr3=($(comm -3 <(printf\
    \ \"%s\\n\" \"${arr1[@]}\") <(printf \"%s\\n\" \"${arr3[@]}\") | sort -u))\n \
    \   arr3=($(comm -3 <(printf \"%s\\n\" \"${arr2[@]}\") <(printf \"%s\\n\" \"${arr3[@]}\"\
    ) | sort -u))\n    arr3=($(comm -3 <(printf \"%s\\n\" \"${arr3[@]}\") <(printf\
    \ \"%s\\n\" \"${arr1[@]}\") | sort -u))\n    arr3=($(comm -3 <(printf \"%s\\n\"\
    \ \"${arr3[@]}\") <(printf \"%s\\n\" \"${arr2[@]}\") | sort -u))\n    arr3=($(comm\
    \ -3 <(printf \"%s\\n\" \"${arr3[@]}\") <(printf \"%s\\n\" \"${arr3[@]}\") | sort\
    \ -u))\n    arr3=($(comm -3 <(printf \"%s\\n\" \"${arr3[@]}\") <(printf \"%s\\\
    n\" \"${arr3[@]}\") | sort -u))\n    arr3=($(comm -3 <(printf \"%s\\n\" \"${arr3[@]}\"\
    ) <(printf \"%s\\n\" \"${arr3[@]}\") | sort -u))\n    arr3=($(comm -3 <(printf\
    \ \"%s\\n\" \"${arr3[@]}\") <(printf \"%s\\n\" \"${arr3[@]}\") | sort -u))\n \
    \   arr3=($(comm -3 <(printf \"%s\\n\" \"${arr3[@]}\") <(printf \"%s\\n\" \"${arr3[@]}\"\
    ) | sort -u))\n    arr3=($(comm -3 <(printf \"%s\\n\" \"${arr3[@]}\") <(printf\
    \ \"%s\\n\" \"${arr3[@]}\") | sort -u))\n    arr3=($(comm -3 <(printf \"%s\\n\"\
    \ \"${arr3[@]}\") <(printf \"%s\\n\" \"${arr3[@]}\") | sort -u))\n    arr3=($(comm\
    \ -3 <(printf \"%s\\n\" \"${arr3[@]}\n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx3w5jiud.sh: line 40: unexpected EOF while looking for matching
    `"''

    /tmp/tmpx3w5jiud.sh: line 44: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local common\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\"\
    ) = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 2
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local result\n    local tmp\n    local x\n    local y\n    local z\n    len1=${#list1}\n\
    \    len2=${#list2}\n    len=$((len1 < len2 ? len1 : len2))\n    result=()\n \
    \   for (( i = 0; i < len; i++ )); do\n        tmp=${list1:$i:1}\n        for\
    \ (( j=0; j < len; j++ )); do\n            x=${list2:$j:1}\n            if [[\
    \ ${#tmp} -gt ${#x} ]]; then\n                x=${x:0:${#tmp}}\n            fi\n\
    \            if [[ ${#tmp} -eq ${#x} ]]; then\n                x=${x}\n      \
    \      fi\n            if [[ ${#x} -gt ${#tmp} ]]; then\n                x=${x:0:${#x}}\n\
    \            fi\n            if [[ ${#x} -eq ${#tmp} ]]; then\n              \
    \  x=${x}\n            fi\n            if [[ ${x} != ${tmp} ]]; then\n       \
    \         x=${x}\n            fi\n            if [[ ${x} != ${tmp} ]]; then\n\
    \                x=${x}\n            fi\n            if [[ ${x} != ${tmp} ]];\
    \ then\n                x=${x}\n            fi\n            if [[ ${x} != ${tmp}\
    \ ]]; then\n                x=${x}\n            fi\n            if [[ ${x} !=\
    \ ${tmp} ]]; then\n                x=${x}\n            fi\n            if [[ ${x}\
    \ != ${tmp} ]]; then\n                x=${x}\n            fi\n            if [[\
    \ ${x} != ${tmp} ]]; then\n                x=${x}\n            fi\n          \
    \  if [[ ${x} != ${tmp} ]]; then\n                x=${x}\n            fi\n   \
    \         if [[ ${x} != ${tmp} ]]; then\n                x=${x}\n            fi\n\
    \            if [[ ${x} != ${tmp} ]]; then\n                x=${x}\n         \
    \   fi\n            if [[ ${x} != ${tmp} ]]; then\n                x=${x}\n  \
    \          fi\n            if [[ ${x} != ${tmp} ]]; then\n                x=${x}\n\
    \            fi\n            if [[ ${x} != ${tmp} ]]; then\n                x=${\n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu2re4y81.sh: line 98: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local maxlen\n\
    \    local minlen\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local min\n    local max\n    local minlen\n    local maxlen\n\
    \    local minlen1\n    local minlen2\n    local min\n    local max\n    local\
    \ minlen\n    local maxlen\n    local minlen1\n    local minlen2\n    local min\n\
    \    local max\n    local minlen\n    local maxlen\n    local minlen1\n    local\
    \ minlen2\n    local min\n    local max\n    local minlen\n    local maxlen\n\
    \    local minlen1\n    local minlen2\n    local min\n    local max\n    local\
    \ minlen\n    local maxlen\n    local minlen1\n    local minlen2\n    local min\n\
    \    local max\n    local minlen\n    local maxlen\n    local minlen1\n    local\
    \ minlen2\n    local min\n    local max\n    local minlen\n    local maxlen\n\
    \    local minlen1\n    local minlen2\n    local min\n    local max\n    local\
    \ minlen\n    local maxlen\n    local minlen1\n    local minlen2\n    local min\n\
    \    local max\n    local minlen\n    local maxlen\n    local minlen1\n    local\
    \ minlen2\n    local min\n    local max\n    local minlen\n    local maxlen\n\
    \    local minlen1\n    local minlen2\n    local min\n    local max\n    local\
    \ minlen\n    local maxlen\n    local minlen1\n    local minlen2\n    local min\n\
    \    local max\n    local minlen\n    local maxlen\n    local minlen1\n    local\
    \ minlen2\n    local min\n    local max\n    local minlen\n    local maxlen\n\
    \    local minlen1\n    local minlen2\n    local min\n    local max\n    local\
    \ minlen\n    local maxlen\n    local minlen1\n    local minlen2\n    local min\n\
    \    local max\n    local minlen\n    local maxlen\n\n}\n\ncandidate() {\n   \
    \ common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local len1\n    local len2\n    local maxlen\n    local maxlen1\n\
    \    local maxlen2\n    local maxlendiff\n    local maxlendiff1\n    local maxlendiff2\n\
    \    local maxlendiffdiff\n    local maxlendiffdiff1\n    local maxlendiffdiff2\n\
    \    local maxlendiffdiffdiff\n    local maxlendiffdiff1\n    local maxlendiffdiff2\n\
    \    local maxlendiffdiffdiff\n    local maxlendiffdiff1\n    local maxlendiffdiff2\n\
    \    local maxlendiffdiff3\n    local maxlendiffdiff4\n    local maxlendiffdiff5\n\
    \    local maxlendiffdiff6\n    local maxlendiffdiff7\n    local maxlendiffdiff8\n\
    \    local maxlendiffdiff9\n    local maxlendiffdiff10\n    local maxlendiffdiff11\n\
    \    local maxlendiffdiff12\n    local maxlendiffdiff13\n    local maxlendiffdiff14\n\
    \    local maxlendiffdiff15\n    local maxlendiffdiff16\n    local maxlendiffdiff17\n\
    \    local maxlendiffdiff18\n    local maxlendiffdiff19\n    local maxlendiffdiff20\n\
    \    local maxlendiffdiff21\n    local maxlendiffdiff22\n    local maxlendiffdiff23\n\
    \    local maxlendiffdiff24\n    local maxlendiffdiff25\n    local maxlendiffdiff26\n\
    \    local maxlendiffdiff27\n    local maxlendiffdiff28\n    local maxlendiffdiff29\n\
    \    local maxlendiffdiff30\n    local maxlendiffdiff31\n    local maxlendiffdiff32\n\
    \    local maxlendiffdiff33\n    local maxlendiffdiff34\n    local maxlendiffdiff35\n\
    \    local maxlendiffdiff36\n    local maxlendiffdiff37\n    local maxlendiffdiff38\n\
    \    local maxlendiffdiff39\n    local maxlendiffdiff40\n    local maxlendiffdiff41\n\
    \    local maxlendiffdiff42\n    local maxlendiffdiff43\n    local maxlendiffdiff44\n\
    \    local maxlendiffdiff45\n    local maxlendiffdiff46\n    local maxlendiffdiff47\n\
    \    local maxlendiffdiff48\n\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\"\
    ) = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m n o p q r s t u v w x y z\n    local -a a\n    local -a b\n\
    \    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a\
    \ g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local\
    \ -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local\
    \ -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
    \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
    \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a a\n    local -a b\n    local -a c\n    local\
    \ -a d\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n\
    \    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4\
    \ 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local len1\n    local len2\n    local tmp\n    local sorted\n\
    \n    sorted=false\n    common=()\n    len1=${#list1[@]}\n    len2=${#list2[@]}\n\
    \    for ((i=0; i<${len1}; i++)); do\n        tmp=${list1[i]}\n        for ((j=0;\
    \ j<${len2}; j++)); do\n            if [[ ${list2[j]} == $tmp ]]; then\n     \
    \           common+=(\"$tmp\")\n                sorted=true\n                break\n\
    \            fi\n        done\n    done\n    if [[ $sorted == false ]]; then\n\
    \        common+=(\"$list1\")\n    fi\n    echo ${common[@]}\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local i\n    local j\n    local common_list_len\n \
    \   local common_list_len2\n    local common_list_len3\n    local common_list_len4\n\
    \    local common_list_len5\n    local common_list_len6\n    local common_list_len7\n\
    \    local common_list_len8\n    local common_list_len9\n    local common_list_len10\n\
    \    local common_list_len11\n    local common_list_len12\n    local common_list_len13\n\
    \    local common_list_len14\n    local common_list_len15\n    local common_list_len16\n\
    \    local common_list_len17\n    local common_list_len18\n    local common_list_len19\n\
    \    local common_list_len20\n    local common_list_len21\n    local common_list_len22\n\
    \    local common_list_len23\n    local common_list_len24\n    local common_list_len25\n\
    \    local common_list_len26\n    local common_list_len27\n    local common_list_len28\n\
    \    local common_list_len29\n    local common_list_len30\n    local common_list_len31\n\
    \    local common_list_len32\n    local common_list_len33\n    local common_list_len34\n\
    \    local common_list_len35\n    local common_list_len36\n    local common_list_len37\n\
    \    local common_list_len38\n    local common_list_len39\n    local common_list_len40\n\
    \    local common_list_len41\n    local common_list_len42\n    local common_list_len43\n\
    \    local common_list_len44\n    local common_list_len45\n    local common_list_len46\n\
    \    local common_list_len47\n    local common_list_len48\n    local common_list_len49\n\
    \    local common_list_len50\n    local common_list_len51\n    local common_list_len52\n\
    \    local common_list_len53\n    local common_list_len54\n    local common_list_len55\n\
    \    local common_list_len56\n    local common_list_len57\n    local common_list_len58\n\
    \    local common_list_len59\n    local common_list_len60\n    local common_list_len61\n\
    \    local common_list_len62\n    local common_list_len63\n    local common_list_len64\n\
    \    local common_list_len65\n    local common_list_len66\n    local common_list_len67\n\
    \    local common_list_len68\n    local common_list_len69\n    local common_list_len70\n\
    \    local common_list_len71\n    local common_\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local i\n    local j\n    local k\n    local len1\n    local\
    \ len2\n    local list1\n    local list2\n    local tmp\n    local x\n    local\
    \ y\n    local z\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n\n}\n\ncandidate() {\n    common \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local i j\n    common_list=$($1 cut -d ' ' -f 1 $2)\n\
    \    for (( i=0; i<${#common_list[@]}; i++ )); do\n        for (( j=0; j<${#common_list[@]};\
    \ j++ )); do\n            if [[ ${common_list[i]} == ${common_list[j]} ]]; then\n\
    \                common_list[i]=${common_list[j]}\n            fi\n        done\n\
    \    done\n    echo $common_list\n}\n\ncandidate() {\n    common \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvnldw12b.sh: line 13: 1: command not found

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list_1\n    local list_2\n    local i\n    local\
    \ j\n    local common_list_1\n    local common_list_2\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    \n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m n o p q r s t u v w x y z\n    local -a a\n    local -a b\n\
    \    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a\
    \ g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local\
    \ -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local\
    \ -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
    \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
    \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a a\n    local -a b\n    local -a c\n    local\
    \ -a d\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n\
    \    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4\
    \ 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list1=\"$1\"\n  local list2=\"$2\"\n  local i j\n  local list1_sorted\n\
    \  local list2_sorted\n  local common_sorted\n  list1_sorted=$(sort \"$list1\"\
    )\n  list2_sorted=$(sort \"$list2\")\n  common_sorted=$(comm -2 -3 <(printf '%s\\\
    n' \"$list1_sorted\") <(printf '%s\\n' \"$list2_sorted\"))\n  echo \"$common_sorted\"\
    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: ''1 4 3 34 653 2 5'': No such file or directory

    sort: cannot read: ''5 7 1 5 9 653 121'': No such file or directory

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n\
    \    local unique\n\n    list1=($list1)\n    list2=($list2)\n    unique=()\n \
    \   for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++));\
    \ do\n            if [[ ${list1[i]} == ${list2[j]} ]]; then\n                unique+=(\"\
    ${list1[i]}\")\n                break\n            fi\n        done\n    done\n\
    \    common=(\"${unique[@]}\")\n    sort -u \"${common[@]}\"\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: 653: No such file or directory

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1 list2\n    list1=$1\n    list2=$2\n    local common\n\
    \    common=()\n    for (( i=0; i<${#list1[@]}; i++ )); do\n        for (( j=0;\
    \ j<${#list2[@]}; j++ )); do\n            if [[ ${list1[i]} == ${list2[j]} ]];\
    \ then\n                common+=(\"${list1[i]}\")\n                list1[i]=\n\
    \                list2[j]=\n                break\n            fi\n        done\n\
    \    done\n    list1=\"${list1[@]}\"\n    list2=\"${list2[@]}\"\n    common=\"\
    ${common[@]}\"\n    echo \"${common[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5\
    \ 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"\
    2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list1=\"$1\"\n  local list2=\"$2\"\n  local common\n  local i\n  local\
    \ j\n  local k\n  local len1\n  local len2\n  local len\n  local tmp\n  local\
    \ x\n  local y\n  local z\n  local sorted\n  local sorted1\n  local sorted2\n\
    \  local sorted3\n  local sorted4\n  local sorted5\n  local sorted6\n  local sorted7\n\
    \  local sorted8\n  local sorted9\n  local sorted10\n  local sorted11\n  local\
    \ sorted12\n  local sorted13\n  local sorted14\n  local sorted15\n  local sorted16\n\
    \  local sorted17\n  local sorted18\n  local sorted19\n  local sorted20\n  local\
    \ sorted21\n  local sorted22\n  local sorted23\n  local sorted24\n  local sorted25\n\
    \  local sorted26\n  local sorted27\n  local sorted28\n  local sorted29\n  local\
    \ sorted30\n  local sorted31\n  local sorted32\n  local sorted33\n  local sorted34\n\
    \  local sorted35\n  local sorted36\n  local sorted37\n  local sorted38\n  local\
    \ sorted39\n  local sorted40\n  local sorted41\n  local sorted42\n  local sorted43\n\
    \  local sorted44\n  local sorted45\n  local sorted46\n  local sorted47\n  local\
    \ sorted48\n  local sorted49\n  local sorted50\n  local sorted51\n  local sorted52\n\
    \  local sorted53\n  local sorted54\n  local sorted55\n  local sorted56\n  local\
    \ sorted57\n  local sorted58\n  local sorted59\n  local sorted60\n  local sorted61\n\
    \  local sorted62\n  local sorted63\n  local sorted64\n  local sorted65\n  local\
    \ sorted66\n  local sorted67\n  local sorted68\n  local sorted69\n  local sorted70\n\
    \  local sorted71\n  local sorted72\n  local sorted73\n  local sorted74\n  local\
    \ sorted75\n  local sorted76\n  local sorted77\n  local sorted78\n  local sorted79\n\
    \  local sorted80\n  local sorted81\n  local sorted82\n  local sorted83\n  local\
    \ sorted84\n  local sorted85\n  local sorted86\n  local sorted87\n  local sorted88\n\
    \  local sorted89\n  local sorted\n}\n\ncandidate() {\n    common \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local a b i j k l m\n    local -a a1 a2\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local a b i j k l m n o p q r s t u v w x y z\n    a=\"$1\"\n    b=\"$2\"\n\
    \    local -a arr\n    local -a arr2\n    local -a arr3\n    local -a arr4\n \
    \   local -a arr5\n    local -a arr6\n    local -a arr7\n    local -a arr8\n \
    \   local -a arr9\n    local -a arr10\n    local -a arr11\n    local -a arr12\n\
    \    local -a arr13\n    local -a arr14\n    local -a arr15\n    local -a arr16\n\
    \    local -a arr17\n    local -a arr18\n    local -a arr19\n    local -a arr20\n\
    \    local -a arr21\n    local -a arr22\n    local -a arr23\n    local -a arr24\n\
    \    local -a arr25\n    local -a arr26\n    local -a arr27\n    local -a arr28\n\
    \    local -a arr29\n    local -a arr30\n    local -a arr31\n    local -a arr32\n\
    \    local -a arr33\n    local -a arr34\n    local -a arr35\n    local -a arr36\n\
    \    local -a arr37\n    local -a arr38\n    local -a arr39\n    local -a arr40\n\
    \    local -a arr41\n    local -a arr42\n    local -a arr43\n    local -a arr44\n\
    \    local -a arr45\n    local -a arr46\n    local -a arr47\n    local -a arr48\n\
    \    local -a arr49\n    local -a arr50\n    local -a arr51\n    local -a arr52\n\
    \    local -a arr53\n    local -a arr54\n    local -a arr55\n    local -a arr56\n\
    \    local -a arr57\n    local -a arr58\n    local -a arr59\n    local -a arr60\n\
    \    local -a arr61\n    local -a arr62\n    local -a arr63\n    local -a arr64\n\
    \    local -a arr65\n    local -a arr66\n    local -a arr67\n    local -a arr68\n\
    \    local -a arr69\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=(\"$@\")\n    local -n arr2=(\"$@\")\n    local -a common\n\
    \    local -a sorted\n\n    sorted=()\n    common=()\n    for ((i=0; i<${#arr1[*]};\
    \ i++)); do\n        local j=0\n        while [ \"${arr2[j]}\" != \"${arr1[i]}\"\
    \ ]; do\n            j=$((j+1))\n        done\n        sorted+=(\"${arr2[j]}\"\
    )\n        common+=(\"${arr1[i]}\")\n    done\n    sorted=(\"${sorted[@]}\")\n\
    \    common=(\"${common[@]}\")\n    sorted=(\"${sorted[@]}\")\n    common=(\"\
    ${common[@]}\")\n    sorted=(\"${sorted[@]}\")\n    common=(\"${common[@]}\")\n\
    \    sorted=(\"${sorted[@]}\")\n    common=(\"${common[@]}\")\n    sorted=(\"\
    ${sorted[@]}\")\n    common=(\"${common[@]}\")\n    sorted=(\"${sorted[@]}\")\n\
    \    common=(\"${common[@]}\")\n    sorted=(\"${sorted[@]}\")\n    common=(\"\
    ${common[@]}\")\n    sorted=(\"${sorted[@]}\")\n    common=(\"${common[@]}\")\n\
    \    sorted=(\"${sorted[@]}\")\n    common=(\"${common[@]}\")\n    sorted=(\"\
    ${sorted[@]}\")\n    common=(\"${common[@]}\")\n    sorted=(\"${sorted[@]}\")\n\
    \    common=(\"${common[@]}\")\n    sorted=(\"${sorted[@]}\")\n    common=(\"\
    ${common[@]}\")\n    sorted=(\"${sorted[@]}\")\n    common=(\"${common[@]}\")\n\
    \    sorted=(\"${sorted[@]}\")\n    common=(\"${common[@]}\")\n    sorted=(\"\
    ${sorted[@]}\")\n    common=(\"${common[@]}\")\n    sorted=(\"${sorted[@]}\")\n\
    \    common=(\"${common[@]}\")\n    sorted=(\"${sorted[@]}\")\n    common=(\"\
    ${common[@]}\")\n    sorted=(\"${sorted[@]}\")\n    common=(\"${common[@]}\")\n\
    \    sorted=(\"${sorted[@]}\")\n    common=(\"${common[@]}\")\n    sorted=(\"\
    ${sorted[@]}\")\n    common=(\"${common[@]}\")\n\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_lhfgwe4.sh: line 11: local: arr1: reference variable cannot be
    an array

    /tmp/tmp_lhfgwe4.sh: line 12: local: arr2: reference variable cannot be an array

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1 list2\n    list1=$1\n    list2=$2\n    local i j k\n    local\
    \ common\n    common=()\n    for ((i=0; i<${#list1}; i++)); do\n        for ((j=0;\
    \ j<${#list2}; j++)); do\n            if [[ ${list1:$i:1} = ${list2:$j:1} ]];\
    \ then\n                common+=(\"${list1:$i:1}\")\n            fi\n        done\n\
    \    done\n    echo \"${common[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local list1\n    local list2\n    local i\n    local j\n\
    \    local len1\n    local len2\n    local result\n    list1=$1\n    list2=$2\n\
    \    len1=${#list1}\n    len2=${#list2}\n    result=()\n    for ((i=0; i<${len1};\
    \ i++)); do\n        for ((j=0; j<${len2}; j++)); do\n            if [[ ${list1:$i:1}\
    \ = ${list2:$j:1} ]]; then\n                common+=(\"${list1:$i:1}\")\n    \
    \        fi\n        done\n    done\n    echo \"${common[@]}\"\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list1=\"$1\"\n  local list2=\"$2\"\n  local common\n  local i\n  local\
    \ j\n  local k\n  local len1\n  local len2\n  local len\n  local tmp\n  local\
    \ tmp2\n  local tmp3\n  local tmp4\n  local tmp5\n  local tmp6\n  local tmp7\n\
    \  local tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n  local tmp12\n  local\
    \ tmp13\n  local tmp14\n  local tmp15\n  local tmp16\n  local tmp17\n  local tmp18\n\
    \  local tmp19\n  local tmp20\n  local tmp21\n  local tmp22\n  local tmp23\n \
    \ local tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n  local tmp28\n  local\
    \ tmp29\n  local tmp30\n  local tmp31\n  local tmp32\n  local tmp33\n  local tmp34\n\
    \  local tmp35\n  local tmp36\n  local tmp37\n  local tmp38\n  local tmp39\n \
    \ local tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n  local tmp44\n  local\
    \ tmp45\n  local tmp46\n  local tmp47\n  local tmp48\n  local tmp49\n  local tmp50\n\
    \  local tmp51\n  local tmp52\n  local tmp53\n  local tmp54\n  local tmp55\n \
    \ local tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n  local tmp60\n  local\
    \ tmp61\n  local tmp62\n  local tmp63\n  local tmp64\n  local tmp65\n  local tmp66\n\
    \  local tmp67\n  local tmp68\n  local tmp69\n  local tmp70\n  local tmp71\n \
    \ local tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n  local tmp76\n  local\
    \ tmp77\n  local tmp78\n  local tmp79\n  local tmp80\n  local tmp81\n  local tmp82\n\
    \  local tmp83\n  local tmp84\n  local tmp85\n  local tmp86\n  local tmp87\n \
    \ local tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n  local tmp92\n  local\
    \ tmp93\n  local tmp94\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local common_list_1\n    local common_list_2\n    local\
    \ common_list_1_sorted\n    local common_list_2_sorted\n    local common_list_1_sorted_unique\n\
    \    local common_list_2_sorted_unique\n    local common_list_1_sorted_unique_nospace\n\
    \    local common_list_2_sorted_unique_nospace\n    local common_list_1_sorted_unique_nospace_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces\n    local common_list_1_sorted_unique_nospace_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces\n    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces\n  \
    \  local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_no\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list1=\"$1\"\n  local list2=\"$2\"\n  local common\n  local i\n  local\
    \ j\n  local k\n  local len1\n  local len2\n  local len\n  local match\n  local\
    \ matchlen\n  local matchlen2\n  local matchlen1\n  local matchlen1\n  local matchlen2\n\
    \  local matchlen1\n  local matchlen2\n  local matchlen1\n  local matchlen2\n\
    \  local matchlen1\n  local matchlen2\n  local matchlen1\n  local matchlen2\n\
    \  local matchlen1\n  local matchlen2\n  local matchlen1\n  local matchlen2\n\
    \  local matchlen1\n  local matchlen2\n  local matchlen1\n  local matchlen2\n\
    \  local matchlen1\n  local matchlen2\n  local matchlen1\n  local matchlen2\n\
    \  local matchlen1\n  local matchlen2\n  local matchlen1\n  local matchlen2\n\
    \  local matchlen1\n  local matchlen2\n  local matchlen1\n  local matchlen2\n\
    \  local matchlen1\n  local matchlen2\n  local matchlen1\n  local matchlen2\n\
    \  local matchlen1\n  local matchlen2\n  local matchlen1\n  local matchlen2\n\
    \  local matchlen1\n  local matchlen2\n  local matchlen1\n  local matchlen2\n\
    \  local matchlen1\n  local matchlen2\n  local matchlen1\n  local matchlen2\n\
    \  local matchlen1\n  local matchlen2\n  local matchlen1\n  local matchlen2\n\
    \  local matchlen1\n  local matchlen2\n  local matchlen1\n  local matchlen2\n\
    \  local matchlen1\n  local matchlen2\n  local matchlen1\n  local matchlen2\n\
    \  local matchlen1\n  local matchlen2\n  local matchlen1\n  local matchlen2\n\
    \  local matchlen1\n  local matchlen2\n  local matchlen1\n  local matchlen2\n\
    \  local matchlen1\n  local matchlen2\n  local matchlen1\n  local matchlen2\n\
    \  local matchlen1\n  local matchlen2\n  local matchlen1\n  local matchlen2\n\
    \  local match\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local list_1_elements\
    \ list_2_elements\n    list_1_elements=$(echo $list_1 | tr ' ' '\\n' | sort -u)\n\
    \    list_2_elements=$(echo $list_2 | tr ' ' '\\n' | sort -u)\n    local common_elements\n\
    \    common_elements=$(comm -3 <(echo $list_1_elements) <(echo $list_2_elements))\n\
    \    echo \"$common_elements\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\"\
    ) = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1 list2\n    list1=$1\n    list2=$2\n    local common\n\
    \    common=()\n    for (( i=0; i<${#list1[@]}; i++ )); do\n        for (( j=0;\
    \ j<${#list2[@]}; j++ )); do\n            if [[ ${list1[i]} == ${list2[j]} ]];\
    \ then\n                common+=(\"${list1[i]}\")\n                list1[i]=\n\
    \                list2[j]=\n                break\n            fi\n        done\n\
    \    done\n    echo ${common[@]}\n}\n\ncandidate() {\n    common \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local len1\n    local len2\n    local len\n    local result\n\
    \    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n    local tmp93\n    local tmp94\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local list1\n    local list2\n    local i\n    local j\n\
    \    local len1\n    local len2\n    local result\n\n    list1=$1\n    list2=$2\n\
    \    len1=${#list1}\n    len2=${#list2}\n    result=()\n    for ((i=0; i<len1;\
    \ i++)); do\n        for ((j=0; j<len2; j++)); do\n            if [[ ${list1:$i:1}\
    \ == ${list2:$j:1} ]]; then\n                common+=(\"${list1:$i:1}\")\n   \
    \         fi\n        done\n    done\n    echo \"${common[@]}\"\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local list_1_sorted\n\
    \    list_1_sorted=$(sort -u <<< \"$list_1\")\n    local list_2_sorted\n    list_2_sorted=$(sort\
    \ -u <<< \"$list_2\")\n    local common\n    common=$(comm -2 -3 <<< \"$list_1_sorted\"\
    \ \"$list_2_sorted\")\n    echo \"$common\"\n}\n\ncandidate() {\n    common \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7\
    \ 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") =\
    \ \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "comm: missing operand after \u20185 7 1 5 9 653 121\u2019\nTry 'comm --help'\
    \ for more information.\n"
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local list1\n    local list2\n    local i\n    list1=$1\n\
    \    list2=$2\n    common=()\n    for (( i = 0; i < ${#list1}; i++ )); do\n  \
    \      common+=(\"${list1[i]}\")\n    done\n    for (( i = 0; i < ${#list2}; i++\
    \ )); do\n        common+=(\"${list2[i]}\")\n    done\n    sort -u <<< \"${common[@]}\"\
    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list_1 list_2\n    local i j\n    common_list=$(\
    \ echo $1 | sed 's/ /\\n/g' | sort -u )\n    list_1=$( echo $2 | sed 's/ /\\n/g'\
    \ | sort -u )\n    list_2=$( echo $list_1 | sed 's/ /\\n/g' | sort -u )\n    for\
    \ (( i=0; i<${#list_1}; i++ )); do\n        for (( j=0; j<${#list_2}; j++ ));\
    \ do\n            if [[ ${list_1[i]} == ${list_2[j]} ]]; then\n              \
    \  common_list=\"$common_list ${list_1[i]}\"\n            fi\n        done\n \
    \   done\n    echo \"$common_list\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local \n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local maxlen\n\
    \    local minlen\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlendiff\n    local minlendiff\n    local maxlendiff1\n\
    \    local maxlendiff2\n    local minlendiff1\n    local minlendiff2\n    local\
    \ maxlendiffdiff\n    local minlendiffdiff\n    local maxlendiffdiff1\n    local\
    \ maxlendiffdiff2\n    local minlendiffdiff1\n    local minlendiffdiff2\n    local\
    \ maxlendiffdiff1\n    local maxlendiffdiff2\n    local minlendiffdiff1\n    local\
    \ minlendiffdiff2\n    local maxlendiffdiff1\n    local maxlendiffdiff2\n    local\
    \ minlendiffdiff1\n    local minlendiffdiff2\n    local maxlendiffdiff1\n    local\
    \ maxlendiffdiff2\n    local minlendiffdiff1\n    local minlendiffdiff2\n    local\
    \ maxlendiffdiff1\n    local maxlendiffdiff2\n    local minlendiffdiff1\n    local\
    \ minlendiffdiff2\n    local maxlendiffdiff1\n    local maxlendiffdiff2\n    local\
    \ minlendiffdiff1\n    local minlendiffdiff2\n    local maxlendiffdiff1\n    local\
    \ maxlendiffdiff2\n    local minlendiffdiff1\n    local minlendiffdiff2\n    local\
    \ maxlendiffdiff1\n    local maxlendiffdiff2\n    local minlendiffdiff1\n    local\
    \ minlendiffdiff2\n    local maxlendiffdiff1\n    local maxlendiffdiff2\n    local\
    \ minlendiffdiff1\n    local minlendiffdiff2\n    local maxlendiffdiff1\n    local\
    \ maxlendiffdiff2\n    local minlendiffdiff1\n    local minlendiffdiff2\n    local\
    \ maxlendiffdiff1\n    local maxlendiffdiff2\n    local minlendiffdiff1\n    local\
    \ minlendiffdiff2\n    local maxlendiffdiff1\n    local maxlendiffdiff2\n    local\
    \ minlendiffdiff1\n    local minlendiffdiff2\n\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local len1\n    local len2\n    local maxlen\n    local minlen\n\
    \    local min\n    local max\n    local minlen\n    local maxlen\n    local minlen\n\
    \    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local\
    \ maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n\
    \    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local\
    \ minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n\
    \    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local\
    \ maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n\
    \    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local\
    \ minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n\
    \    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local\
    \ maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n\
    \    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local\
    \ minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n\
    \    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local\
    \ maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n\
    \    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local\
    \ minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n\
    \    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local\
    \ maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n\
    \    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local\
    \ minlen\n    local maxlen\n    local minlen\n    local max\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list_1 list_2\n    local i j\n    list_1=$1\n\
    \    list_2=$2\n    common_list=$(bc <<< \"$(sort <<< \"$list_1 $list_2\" | uniq\
    \ -u)\"|tr -d '\\n')\n    for (( i = 0; i < ${#common_list}; i++ )); do\n    \
    \    list_1=$(echo \"$list_1\" | sed -n \"${i}p\")\n        list_2=$(echo \"$list_2\"\
    \ | sed -n \"${i}p\")\n    done\n    echo \"$common_list\"\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local maxlen\n\
    \    local minlen\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local maxlen1\n\n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local i\n    local j\n    local len1\n    local len2\n \
    \   local maxlen\n    local maxlen1\n    local maxlen2\n    local maxlendiff\n\
    \    local maxlendiff1\n    local maxlendiff2\n    local maxlendiffdiff\n    local\
    \ maxlendiffdiff1\n    local maxlendiffdiff2\n    local maxlendiffdiff3\n    local\
    \ maxlendiffdiff4\n    local maxlendiffdiff5\n    local maxlendiffdiff6\n    local\
    \ maxlendiffdiff7\n    local maxlendiffdiff8\n    local maxlendiffdiff9\n    local\
    \ maxlendiffdiff10\n    local maxlendiffdiff11\n    local maxlendiffdiff12\n \
    \   local maxlendiffdiff13\n    local maxlendiffdiff14\n    local maxlendiffdiff15\n\
    \    local maxlendiffdiff16\n    local maxlendiffdiff17\n    local maxlendiffdiff18\n\
    \    local maxlendiffdiff19\n    local maxlendiffdiff20\n    local maxlendiffdiff21\n\
    \    local maxlendiffdiff22\n    local maxlendiffdiff23\n    local maxlendiffdiff24\n\
    \    local maxlendiffdiff25\n    local maxlendiffdiff26\n    local maxlendiffdiff27\n\
    \    local maxlendiffdiff28\n    local maxlendiffdiff29\n    local maxlendiffdiff30\n\
    \    local maxlendiffdiff31\n    local maxlendiffdiff32\n    local maxlendiffdiff33\n\
    \    local maxlendiffdiff34\n    local maxlendiffdiff35\n    local maxlendiffdiff36\n\
    \    local maxlendiffdiff37\n    local maxlendiffdiff38\n    local maxlendiffdiff39\n\
    \    local maxlendiffdiff40\n    local maxlendiffdiff41\n    local maxlendiffdiff42\n\
    \    local maxlendiffdiff43\n    local maxlendiffdiff44\n    local maxlendiffdiff45\n\
    \    local maxlendiffdiff46\n    local maxlendiffdiff47\n    local maxlendiffdiff48\n\
    \    local maxlendiffdiff49\n    local maxlendiffdiff50\n    local maxlendiffdiff51\n\
    \    local maxlendiffdiff52\n    local maxlendiffdiff53\n    local maxlendiffdiff54\n\
    \    local maxlendiffdiff55\n    local maxlendiffdiff\n}\n\ncandidate() {\n  \
    \  common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list_1 list_2\n    local i\n    list_1=$1\n \
    \   list_2=$2\n    common_list=$(bc <<< \"$(sort <<< \"$list_1 $list_2\" | uniq\
    \ -u)\"\n    )\n    IFS=$'\\n' read -r -d '' -a common_list <<< \"$common_list\"\
    \n    echo \"${common_list[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list_1\n    local list_2\n    local i\n    local\
    \ j\n    local common_list_1\n    local common_list_2\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list1\n    local list2\n    local i\n    list1=$1\n\
    \    list2=$2\n    common_list=$( echo $list1 | tr ' ' '\\n' | sort -u )\n   \
    \ for (( i=0; i<${#list1}; i++ )); do\n        common_list=\"$common_list $( echo\
    \ $list1 | tr ' ' '\\n' | grep -w $list2[$i] )\"\n    done\n    echo $common_list\n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: 653: No such file or directory

    grep: 121[0]: No such file or directory

    grep: 653: No such file or directory

    grep: 121[1]: No such file or directory

    grep: 653: No such file or directory

    grep: 121[2]: No such file or directory

    grep: 653: No such file or directory

    grep: 121[3]: No such file or directory

    grep: 653: No such file or directory

    grep: 121[4]: No such file or directory

    grep: 653: No such file or directory

    grep: 121[5]: No such file or directory

    grep: 653: No such file or directory

    grep: 121[6]: No such file or directory

    grep: 653: No such file or directory

    grep: 121[7]: No such file or directory

    grep: 653: No such file or directory

    grep: 121[8]: No such file or directory

    grep: 653: No such file or directory

    grep: 121[9]: No such file or directory

    grep: 653: No such file or directory

    grep: 121[10]: No such file or directory

    grep: 653: No such file or directory

    grep: 121[11]: No such file or directory

    grep: 653: No such file or directory

    grep: 121[12]: No such file or directory

    grep: 653: No such file or directory

    grep: 121[13]: No such file or directory

    grep: 653: No such file or directory

    grep: 121[14]: No such file or directory

    grep: 653: No such file or directory

    grep: 121[15]: No such file or directory

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$1\"\
    \ | sort -u)\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$2\" | sort -u)\n\
    \    echo $common_list\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list_1 list_2\n    local list_1_elements list_2_elements\n\
    \    local common_list_elements\n\n    list_1=$1\n    list_2=$2\n\n    list_1_elements=$(echo\
    \ $list_1 | tr ' ' '\\n' | sort -u)\n    list_2_elements=$(echo $list_2 | tr '\
    \ ' '\\n' | sort -u)\n\n    common_list=$list_1_elements\n    for element in $list_2_elements;\
    \ do\n        if [[ $common_list != *\"$element\"* ]]; then\n            common_list=\"\
    $common_list $element\"\n        fi\n    done\n\n    echo \"$common_list\"\n}\n\
    \ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n\
    \    local -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a\
    \ i\n    local -a j\n    local -a k\n    local -a l\n    local -a m\n    local\
    \ -a n\n    local -a o\n    local -a p\n    local -a q\n    local -a r\n    local\
    \ -a s\n    local -a t\n    local -a u\n    local -a v\n    local -a w\n    local\
    \ -a x\n    local -a y\n    local -a z\n    local -a a\n    local -a b\n    local\
    \ -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a g\n    local\
    \ -a h\n    local -a i\n    local -a j\n    local -a k\n    local -a l\n    local\
    \ -a m\n    local -a n\n    local -a o\n    local -a p\n    local -a q\n    local\
    \ -a r\n    local -a s\n    local -a t\n    local -a u\n    local -a v\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a a\n    local\
    \ -a b\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local\
    \ -a g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=$1; shift\n    local -n arr2=$1; shift\n    local -a res=()\n\
    \    for (( i=0; i<${#arr1[@]}; i++ )); do\n        local elem1=${arr1[$i]}\n\
    \        for (( j=0; j<${#arr2[@]}; j++ )); do\n            local elem2=${arr2[$j]}\n\
    \            if [[ \"$elem1\" == \"$elem2\" ]]; then\n                res+=(\"\
    $elem1\")\n                break\n            fi\n        done\n    done\n   \
    \ echo \"${res[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqvxrnto5.sh: line 11: local: `1 4 3 34 653 2 5'': invalid variable
    name for name reference

    /tmp/tmpqvxrnto5.sh: line 12: local: `5 7 1 5 9 653 121'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1 list2\n    list1=$1\n    list2=$2\n    local i j\n    local common\n\
    \    common=()\n    for ((i=0; i<${#list1}; i++)); do\n        for ((j=0; j<${#list2};\
    \ j++)); do\n            if [[ ${list1:$i} = ${list2:$j} ]]; then\n          \
    \      common+=(\"${list1:$i}\")\n                list1=${list1:0:$i}\n      \
    \          list2=${list2:0:$j}\n                break\n            fi\n      \
    \  done\n    done\n    echo \"${common[@]}\"\n}\n\ncandidate() {\n    common \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7\
    \ 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") =\
    \ \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n\
    \    local list1sorted\n    local list2sorted\n    local list1sorted\n    local\
    \ list2sorted\n    local list1sorted\n    local list2sorted\n    local list1sorted\n\
    \    local list2sorted\n    local list1sorted\n    local list2sorted\n    local\
    \ list1sorted\n    local list2sorted\n    local list1sorted\n    local list2sorted\n\
    \    local list1sorted\n    local list2sorted\n    local list1sorted\n    local\
    \ list2sorted\n    local list1sorted\n    local list2sorted\n    local list1sorted\n\
    \    local list2sorted\n    local list1sorted\n    local list2sorted\n    local\
    \ list1sorted\n    local list2sorted\n    local list1sorted\n    local list2sorted\n\
    \    local list1sorted\n    local list2sorted\n    local list1sorted\n    local\
    \ list2sorted\n    local list1sorted\n    local list2sorted\n    local list1sorted\n\
    \    local list2sorted\n    local list1sorted\n    local list2sorted\n    local\
    \ list1sorted\n    local list2sorted\n    local list1sorted\n    local list2sorted\n\
    \    local list1sorted\n    local list2sorted\n    local list1sorted\n    local\
    \ list2sorted\n    local list1sorted\n    local list2sorted\n    local list1sorted\n\
    \    local list2sorted\n    local list1sorted\n    local list2sorted\n    local\
    \ list1sorted\n    local list2sorted\n    local list1sorted\n    local list2sorted\n\
    \    local list1sorted\n    local list2sorted\n    local list1sorted\n    local\
    \ list2sorted\n    local list1sorted\n    local list2sorted\n    local list1sorted\n\
    \    local list2sorted\n    local list1sorted\n    local list2sorted\n    local\
    \ list1sorted\n    local list2sorted\n    local list1sorted\n    local list2sorted\n\
    \    local list1sorted\n    local list2sorted\n    local list1sorted\n    local\
    \ list2sorted\n    local list1sorted\n    local list2sorted\n    local list1sorted\n\
    \    local list2sorted\n    local list1sorted\n    local list2sorted\n    local\
    \ list1sorted\n    local list\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\"\
    ) = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local common\n    local list1\n    local list2\n    list1=$1\n\
    \    list2=$2\n    common=()\n    for (( i = 0; i < ${#list1}; i++ )); do\n  \
    \      for (( j = 0; i < ${#list2}; j++ )); do\n            if [[ ${list1:$i:1}\
    \ = ${list2:$j:1} ]]; then\n                common+=(\"${list1:$i:1}\")\n    \
    \        fi\n        done\n    done\n    echo \"${common[@]}\"\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=9 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=4 encoding='utf-8'>
  timestamp: 1660043534
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list=\"$1\"\n    local other_list=\"$2\"\n    local sorted_common_list\n\
    \    local sorted_other_list\n    local common_list_len\n    local other_list_len\n\
    \    local common_list_element\n    local other_list_element\n    local common_list_element_count\n\
    \    local other_list_element_count\n    local common_list_element_count_minus_one\n\
    \    local other_list_element_count_minus_one\n    local common_list_element_count_minus_two\n\
    \    local other_list_element_count_minus_two\n    local common_list_element_count_minus_three\n\
    \    local other_list_element_count_minus_three\n    local common_list_element_count_minus_four\n\
    \    local other_list_element_count_minus_four\n    local common_list_element_count_minus_five\n\
    \    local other_list_element_count_minus_five\n    local common_list_element_count_minus_six\n\
    \    local other_list_element_count_minus_six\n    local common_list_element_count_minus_seven\n\
    \    local other_list_element_count_minus_seven\n    local common_list_element_count_minus_eight\n\
    \    local other_list_element_count_minus_eight\n    local common_list_element_count_minus_nine\n\
    \    local other_list_element_count_minus_nine\n    local common_list_element_count_minus_ten\n\
    \    local other_list_element_count_minus_ten\n    local common_list_element_count_minus_eleven\n\
    \    local other_list_element_count_minus_eleven\n    local common_list_element_count_minus_twelve\n\
    \    local other_list_element_count_minus_twelve\n    local common_list_element_count_minus_thirteen\n\
    \    local other_list_element_count_minus_thirteen\n    local common_list_element_count_minus_fourteen\n\
    \    local other_list_element_count_minus_fourteen\n    local common_list_element_count_minus_fifteen\n\
    \    local other_list_element_count_minus_fifteen\n    local common_list_element_count_minus_sixteen\n\
    \    local other_list_element_count_minus_sixteen\n    local common_list_element_count_minus_seventeen\n\
    \    local other_list_element_count_minus_seventeen\n    local common_list_element_count_minus_eighteen\n\
    \    local other_list_element_count_minus_eighteen\n    local common_list_element_count_minus_nineteen\n\
    \    local other_list_element_count_minus_nineteen\n    local common_list_element_count_minus_twenty\n\
    \    local other_list_element_count_minus_twenty\n    local common_list_element_count_minus_thirty\n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1 list2\n    list1=$1\n    list2=$2\n    local i imax\n    local\
    \ list\n    local sorted\n    local common\n    local result\n    local count\n\
    \    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n    local tmp93\n    local tmp\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local common_list_1\n    local common_list_2\n    local\
    \ common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    common_list=$( sort -u $( comm -2 -3 <( sort -u $1\
    \ ) <( sort -u $2 ) ) )\n    echo $common_list\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=57 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=38 encoding='utf-8'>
  timestamp: 1660043534
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1 list2\n    list1=$1\n    list2=$2\n    local list1_sorted\n\
    \    local list2_sorted\n    list1_sorted=$(sort -u <<< \"$list1\")\n    list2_sorted=$(sort\
    \ -u <<< \"$list2\")\n    local common_sorted\n    common_sorted=$(comm -2 -3\
    \ <<< \"$list1_sorted\" \"$list2_sorted\")\n    echo \"$common_sorted\"\n}\n\n\
    candidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "comm: missing operand after \u20185 7 1 5 9 653 121\u2019\nTry 'comm --help'\
    \ for more information.\n"
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list1\n    local list2\n    local i\n    local\
    \ j\n    local common_list_size\n    local list1_size\n    local list2_size\n\
    \    local common_list_elements\n    local list1_elements\n    local list2_elements\n\
    \    local common_list_element\n    local list1_element\n    local list2_element\n\
    \    local common_list_element_size\n    local list1_element_size\n    local list2_element_size\n\
    \    local common_list_element_count\n    local list1_element_count\n    local\
    \ list2_element_count\n    local common_list_element_count\n    local list1_element_count\n\
    \    local list2_element_count\n    local common_list_element_count\n    local\
    \ list1_element_count\n    local list2_element_count\n    local common_list_element_count\n\
    \    local list1_element_count\n    local list2_element_count\n    local common_list_element_count\n\
    \    local list1_element_count\n    local list2_element_count\n    local common_list_element_count\n\
    \    local list1_element_count\n    local list2_element_count\n    local common_list_element_count\n\
    \    local list1_element_count\n    local list2_element_count\n    local common_list_element_count\n\
    \    local list1_element_count\n    local list2_element_count\n    local common_list_element_count\n\
    \    local list1_element_count\n    local list2_element_count\n    local common_list_element_count\n\
    \    local list1_element_count\n    local list2_element_count\n    local common_list_element_count\n\
    \    local list1_element_count\n    local list2_element_count\n    local common_list_element_count\n\
    \    local list1_element_count\n    local list2_element_count\n    local common_list_element_count\n\
    \    local list1_element_count\n    local list2_element_count\n    local common_list_element_count\n\
    \    local list1_element_count\n    local list2_element_count\n    local common_list_element_count\n\
    \    local list1_element_count\n    local list2_element_count\n    local common_list_element_count\n\
    \    local list1_element_count\n    local list2_element_count\n    local common_list_element_count\n\
    \    local list1_element_count\n    local list2_element_count\n    local common_list_element_count\n\
    \    local list1_element_count\n    local list2_element_count\n    local common_list_element_count\n\
    \    local list1_element_count\n    local list2_element_count\n    local common_list_element_count\n\
    \    local list1_element_count\n    \n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n\n}\n\ncandidate() {\n    common \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5\
    \ 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"\
    2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=$1; shift\n    local -n arr2=$1; shift\n    local -a res=()\n\
    \    local i j\n    for ((i=0; i<${#arr1[@]}; i++)); do\n        for ((j=0; j<${#arr2[@]};\
    \ j++)); do\n            [[ ${arr1[i]} != ${arr2[j]} ]] && continue\n        \
    \    arr1[i]=${arr1[i]#\"$\"}\n            arr2[j]=${arr2[j]#\"$\"}\n        \
    \    arr1[i]=${arr1[i]%\"$\"}\n            arr2[j]=${arr2[j]%\"$\"}\n        \
    \    arr1[i]=${arr1[i]#\"$\"}\n            arr2[j]=${arr2[j]#\"$\"}\n        \
    \    res+=(\"${arr1[@]}\")\n            arr1[i]=${arr1[i]#\"$\"}\n           \
    \ arr2[j]=${arr2[j]#\"$\"}\n        done\n    done\n    res+=(\"${arr1[@]}\")\n\
    \    res+=(\"${arr2[@]}\")\n    sort -u \"${res[@]}\"\n}\n\ncandidate() {\n  \
    \  common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=19 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=7 encoding='utf-8'>
  timestamp: 1660043534
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local i\n    local j\n    local k\n    local len1\n    local\
    \ len2\n    local len\n    local sorted\n    local x\n    local y\n    local z\n\
    \    local sorted1\n    local sorted2\n    local result\n    local word\n    local\
    \ word1\n    local word2\n    local word3\n    local word4\n    local word5\n\
    \    local word6\n    local word7\n    local word8\n    local word9\n    local\
    \ word10\n    local word11\n    local word12\n    local word13\n    local word14\n\
    \    local word15\n    local word16\n    local word17\n    local word18\n    local\
    \ word19\n    local word20\n    local word21\n    local word22\n    local word23\n\
    \    local word24\n    local word25\n    local word26\n    local word27\n    local\
    \ word28\n    local word29\n    local word30\n    local word31\n    local word32\n\
    \    local word33\n    local word34\n    local word35\n    local word36\n    local\
    \ word37\n    local word38\n    local word39\n    local word40\n    local word41\n\
    \    local word42\n    local word43\n    local word44\n    local word45\n    local\
    \ word46\n    local word47\n    local word48\n    local word49\n    local word50\n\
    \    local word51\n    local word52\n    local word53\n    local word54\n    local\
    \ word55\n    local word56\n    local word57\n    local word58\n    local word59\n\
    \    local word60\n    local word61\n    local word62\n    local word63\n    local\
    \ word64\n    local word65\n    local word66\n    local word67\n    local word68\n\
    \    local word69\n    local word70\n    local word71\n    local word72\n    local\
    \ word73\n    local word74\n    local word75\n    local word76\n    local word77\n\
    \    local word78\n    local word79\n    local word80\n    local word81\n    local\
    \ word82\n    local word83\n    local word84\n    local word85\n    local word86\n\
    \    local word87\n    local word88\n    local word89\n    local word90\n}\n\n\
    candidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    common_list=\"$(sort -u \"$1\" | sort -u \"$2\")\"\n\
    \    echo \"$common_list\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: ''1 4 3 34 653 2 5''sort: cannot read: ''5 7 1 5 9 653
    121'': No such file or directory

    : No such file or directory

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list=\"$1\"\n    local other_list=\"$2\"\n    local sorted_common_list\n\
    \    local sorted_other_list\n    local common_list_sorted\n    local other_list_sorted\n\
    \    local common_list_sorted_unique\n    local other_list_sorted_unique\n   \
    \ local common_list_sorted_unique_nospace\n    local other_list_sorted_unique_nospace\n\
    \    local common_list_sorted_unique_nospace_nospace\n    local other_list_sorted_unique_nospace_nospace\n\
    \    local common_list_sorted_unique_nospace_nospace_nospace\n    local other_list_sorted_unique_nospace_nospace_nospace\n\
    \    local common_list_sorted_unique_nospace_nospace_nospace_nospace\n    local\
    \ other_list_sorted_unique_nospace_nospace_nospace_nospace\n    local common_list_sorted_unique_nospace_nospace_nospace_nospace_nospace\n\
    \    local other_list_sorted_unique_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local other_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local other_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local other_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local other_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local other_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local other_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local common_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace\n\
    \    local other_list_sorted_unique_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_nospace_no\n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local common_list_1\n    local common_list_2\n    local\
    \ common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1=($1)\n    local list2=($2)\n    local common\n\
    \    local unique\n\n    local list1_sorted=( $(sort <<<\"${list1[*]}\" ) )\n\
    \    local list2_sorted=( $(sort <<<\"${list2[*]}\" ) )\n\n    unique=()\n   \
    \ for (( i = 0; i < ${#list1[*]}; i++ )); do\n        for (( j=0; j < ${#list2[*]};\
    \ j++ )); do\n            if [[ ${list1_sorted[i]} == ${list2_sorted[j]} ]]; then\n\
    \                unique+=( ${list1_sorted[i]} )\n                break\n     \
    \       fi\n        done\n    done\n\n    common=()\n    for (( i = 0; i < ${#unique[*]};\
    \ i++ )); do\n        common+=( ${unique[i]} )\n    done\n\n    echo ${common[@]}\n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local minlen\n\
    \    local maxlen\n    local min\n    local max\n    local minlen2\n    local\
    \ maxlen2\n    local min2\n    local max2\n    local minlen1\n    local maxlen1\n\
    \    local min1\n    local max1\n    local minlen2\n    local maxlen2\n    local\
    \ min2\n    local max2\n    local minlen1\n    local maxlen1\n    local min1\n\
    \    local max1\n    local minlen2\n    local maxlen2\n    local min2\n    local\
    \ max2\n    local minlen1\n    local maxlen1\n    local min1\n    local max1\n\
    \    local minlen2\n    local maxlen2\n    local min2\n    local max2\n    local\
    \ minlen1\n    local maxlen1\n    local min1\n    local max1\n    local minlen2\n\
    \    local maxlen2\n    local min2\n    local max2\n    local minlen1\n    local\
    \ maxlen1\n    local min1\n    local max1\n    local minlen2\n    local maxlen2\n\
    \    local min2\n    local max2\n    local minlen1\n    local maxlen1\n    local\
    \ min1\n    local max1\n    local minlen2\n    local maxlen2\n    local min2\n\
    \    local max2\n    local minlen1\n    local maxlen1\n    local min1\n    local\
    \ max1\n    local minlen2\n    local maxlen2\n    local min2\n    local max2\n\
    \    local minlen1\n    local maxlen1\n    local min1\n    local max1\n    local\
    \ minlen2\n    local maxlen2\n    local min2\n    local max2\n    local minlen1\n\
    \    local maxlen1\n    local min1\n    local max1\n    local minlen2\n    local\
    \ maxlen2\n    local min2\n    local max2\n    local minlen1\n    local maxlen1\n\
    \    local min1\n    local max1\n    local minlen2\n    local maxlen2\n    local\
    \ \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043528
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i ilist jlist ilist jlist ilist jlist\n    local ilist jlist ilist jlist\
    \ ilist jlist\n    local ilist jlist ilist jlist ilist jlist\n    local ilist\
    \ jlist ilist jlist ilist jlist\n    local ilist jlist ilist jlist ilist jlist\n\
    \    local ilist jlist ilist jlist ilist jlist\n    local ilist jlist ilist jlist\
    \ ilist jlist\n    local ilist jlist ilist jlist ilist jlist\n    local ilist\
    \ jlist ilist jlist ilist jlist\n    local ilist jlist ilist jlist ilist jlist\n\
    \    local ilist jlist ilist jlist ilist jlist\n    local ilist jlist ilist jlist\
    \ ilist jlist\n    local ilist jlist ilist jlist ilist jlist\n    local ilist\
    \ jlist ilist jlist ilist jlist\n    local ilist jlist ilist jlist ilist jlist\n\
    \    local ilist jlist ilist jlist ilist jlist\n    local ilist jlist ilist jlist\
    \ ilist jlist\n    local ilist jlist ilist jlist ilist jlist\n    local ilist\
    \ jlist ilist jlist ilist jlist\n    local ilist jlist ilist jlist ilist jlist\n\
    \    local ilist jlist ilist jlist ilist jlist\n    local ilist jlist ilist jlist\
    \ ilist jlist\n    local ilist jlist ilist jlist ilist jlist\n    local ilist\
    \ jlist ilist jlist ilist jlist\n    local ilist jlist ilist jlist ilist jlist\n\
    \    local ilist jlist ilist jlist ilist jlist\n    local ilist jlist ilist jlist\
    \ ilist jlist\n    local ilist jlist ilist jlist ilist jlist\n    local ilist\
    \ jlist ilist jlist ilist jlist\n    local ilist jlist ilist jlist ilist jlist\n\
    \    local ilist jlist ilist jlist ilist jlist\n    local ilist jlist ilist jlist\
    \ ilist jlist\n    local ilist jlist ilist jlist ilist jlist\n    local ilist\
    \ jlist ilist jlist ilist jlist\n    \n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local x\n    local y\n    local z\n    local len\n    local tmp\n\
    \    local x\n    local y\n    local z\n    local len\n    local tmp\n    local\
    \ x\n    local y\n    local z\n    local len\n    local tmp\n    local x\n   \
    \ local y\n    local z\n    local len\n    local tmp\n    local x\n    local y\n\
    \    local z\n    local len\n    local tmp\n    local x\n    local y\n    local\
    \ z\n    local len\n    local tmp\n    local x\n    local y\n    local z\n   \
    \ local len\n    local tmp\n    local x\n    local y\n    local z\n    local len\n\
    \    local tmp\n    local x\n    local y\n    local z\n    local len\n    local\
    \ tmp\n    local x\n    local y\n    local z\n    local len\n    local tmp\n \
    \   local x\n    local y\n    local z\n    local len\n    local tmp\n    local\
    \ x\n    local y\n    local z\n    local len\n    local tmp\n    local x\n   \
    \ local y\n    local z\n    local len\n    local tmp\n    local x\n    local y\n\
    \    local z\n    local len\n    local tmp\n    local x\n    local y\n    local\
    \ z\n    local len\n    local tmp\n    local x\n    local y\n    local z\n   \
    \ local len\n    local tmp\n    local x\n    local y\n    local z\n    local len\n\
    \    local tmp\n    local x\n    local y\n    local z\n    local len\n    local\
    \ tmp\n    local x\n    local y\n    local z\n    local len\n    local tmp\n \
    \   local x\n    local y\n    local z\n    local len\n    local tmp\n    local\
    \ x\n    local y\n    local z\n    local len\n    local tmp\n    local x\n   \
    \ local y\n    local z\n    local len\n    local tmp\n    local x\n    local y\n\
    \    local z\n    local len\n    local tmp\n    local x\n\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local sorted\n    local tmp1\n    local tmp2\n    local tmp3\n\
    \    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n\n}\n\ncandidate() {\n   \
    \ common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local -n list1=$1; shift\n  local -n list2=$1; shift\n  local -a sorted1\n \
    \ local -a sorted2\n  local -a common\n  local -a sorted\n  local -a sorted1\n\
    \  local -a sorted2\n  local -a common\n  local -a sorted\n  local -a sorted1\n\
    \  local -a sorted2\n  local -a common\n  local -a sorted\n  local -a sorted1\n\
    \  local -a sorted2\n  local -a common\n  local -a sorted\n  local -a sorted1\n\
    \  local -a sorted2\n  local -a common\n  local -a sorted\n  local -a sorted1\n\
    \  local -a sorted2\n  local -a common\n  local -a sorted\n  local -a sorted1\n\
    \  local -a sorted2\n  local -a common\n  local -a sorted\n  local -a sorted1\n\
    \  local -a sorted2\n  local -a common\n  local -a sorted\n  local -a sorted1\n\
    \  local -a sorted2\n  local -a common\n  local -a sorted\n  local -a sorted1\n\
    \  local -a sorted2\n  local -a common\n  local -a sorted\n  local -a sorted1\n\
    \  local -a sorted2\n  local -a common\n  local -a sorted\n  local -a sorted1\n\
    \  local -a sorted2\n  local -a common\n  local -a sorted\n  local -a sorted1\n\
    \  local -a sorted2\n  local -a common\n  local -a sorted\n  local -a sorted1\n\
    \  local -a sorted2\n  local -a common\n  local -a sorted\n  local -a sorted1\n\
    \  local -a sorted2\n  local -a common\n  local -a sorted\n  local -a sorted1\n\
    \  local -a sorted2\n  local -a common\n  local -a sorted\n  local -a sorted1\n\
    \  local -a sorted2\n  local -a common\n  local -a sorted\n  local -a sorted1\n\
    \  local -a sorted2\n  local -a common\n  local -a sorted\n  local -a sorted1\n\
    \  local -a sorted2\n  local -a common\n  local -a \n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkd5ks_vs.sh: line 11: local: `1 4 3 34 653 2 5'': invalid variable
    name for name reference

    /tmp/tmpkd5ks_vs.sh: line 12: local: `5 7 1 5 9 653 121'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local list_1_sorted\n\
    \    local list_2_sorted\n    list_1_sorted=$(echo $list_1 | tr \" \" \"\\n\"\
    )\n    list_2_sorted=$(echo $list_2 | tr \" \" \"\\n\")\n    local common_elements\n\
    \    common_elements=$(comm -3 <(sort <<<\"$list_1_sorted\") <(sort <<<\"$list_2_sorted\"\
    ))\n    echo \"$common_elements\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local result\n    len1=${#list1}\n    len2=${#list2}\n    len=${#list1}\n  \
    \  for (( i=0; i<${len}; i++ )); do\n        for (( j=0; j<${len}; j++ )); do\n\
    \            if [[ ${list1:$i:1} == ${list2:$j:1} ]]; then\n                common+=(\"\
    ${list1:$i:1}\")\n            fi\n        done\n    done\n    IFS=' ' read -r\
    \ -a result <<< \"${common[@]}\"\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local common_list_1\n    local common_list_2\n    local\
    \ common_list_1_sorted\n    local common_list_2_sorted\n    local common_list_1_sorted_unique\n\
    \    local common_list_2_sorted_unique\n    local common_list_1_sorted_unique_nospace\n\
    \    local common_list_2_sorted_unique_nospace\n    local common_list_1_sorted_unique_nospace_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces\n    local common_list_1_sorted_unique_nospace_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces\n    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces\n  \
    \  local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_2_sorted_unique_nospace_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces_nospaces\n\
    \    local common_list_1_sorted_unique_nospace_nospaces_no\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local common\n    local\
    \ i\n    local j\n    local k\n    local len1\n    local len2\n    len1=$((${#list_1[@]}\
    \ + 0))\n    len2=$((${#list_2[@]} + 0))\n    common=()\n    for (( i = 0; i <\
    \ ${len1}; i++ )); do\n        for (( j = 0; i < ${len2}; j++ )); do\n       \
    \     if [[ ${list_1[i]} == ${list_2[j]} ]]; then\n                common+=(\"\
    ${list_1[i]}\")\n                list_1[i]=\n                list_2[j]=\n    \
    \            break\n            fi\n        done\n    done\n    len1=$((${#list_1[@]}\
    \ + 0))\n    len2=$((${#list_2[@]} + 0))\n    for (( k = 0; k < ${len1}; k++ ));\
    \ do\n        if [[ ${list_1[k]} != \"\" ]]; then\n            common+=(\"${list_1[k]}\"\
    )\n            list_1[k]=\n        fi\n    done\n    for (( l = 0; l < ${len2};\
    \ l++ )); do\n        if [[ ${list_2[l]} != \"\" ]]; then\n            common+=(\"\
    ${list_2[l]}\")\n            list_2[l]=\n        fi\n    done\n    echo \"${common[@]}\"\
    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=35 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=61 encoding='utf-8'>
  timestamp: 1660043534
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list1=\"$1\"\n  local list2=\"$2\"\n  local common\n  local i\n  local\
    \ j\n  local k\n  local len1\n  local len2\n  local len\n  local tmp\n  local\
    \ sorted\n\n  sorted=false\n  common=()\n  len1=${#list1}\n  len2=${#list2}\n\
    \  len=${#common[@]}\n  for i in $(seq 0 $((len-1)) ); do\n    k=$(expr $i + 1)\n\
    \    for j in $(seq 0 $((len-1)) ); do\n      if [[ $list1 == \"$list2\" ]]; then\n\
    \        if [[ $sorted ]]; then\n          tmp=\"${common[$i]}\"\n          common[$i]=\"\
    ${common[$j]}\"\n          common[$j]=\"$tmp\"\n        else\n          tmp=\"\
    ${common[$i]}\"\n          common[$i]=\"${common[$k]}\"\n          common[$k]=\"\
    $tmp\"\n        fi\n      fi\n      if [[ $list1 != \"$list2\" ]]; then\n    \
    \    if [[ $sorted ]]; then\n          tmp=\"${common[$i]}\"\n          common[$i]=\"\
    ${common[$j]}\"\n          common[$j]=\"$tmp\"\n        else\n          tmp=\"\
    ${common[$i]}\"\n          common[$i]=\"${common[$k]}\"\n          common[$k]=\"\
    $tmp\"\n        fi\n      fi\n    done\n  done\n  echo \"${common[@]}\"\n}\n\n\
    candidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local i j\n    local list1 list2\n    list1=$1\n    list2=$2\n\
    \    common=()\n    for (( i = 0; i < ${#list1}; i++ )); do\n        for (( j\
    \ = 0; i < ${#list2}; j++ )); do\n            [[ ${list1:$i:1} = ${list2:$j:1}\
    \ ]] && \\\n                (( i++ )) || \\\n                (( j++ ))\n     \
    \   done\n        common+=(\"${list1:$i:1}\")\n    done\n    echo \"${common[@]}\"\
    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=50 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=46 encoding='utf-8'>
  timestamp: 1660043534
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common=$1\n    shift\n    local other=$@\n    local sorted=\n    local\
    \ i=\n    local j=\n    local k=\n    local l=\n    local m\n    local n\n   \
    \ local o\n    local p\n    local q\n    local r\n    local s\n    local t\n \
    \   local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local \n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local len1\n    local len2\n    local ret\n    len1=\"${#list1[@]}\"\
    \n    len2=\"${#list2[@]}\"\n    common=()\n    for i in $(seq 0 \"$((len1 - 1))\"\
    ); do\n        for j in $(seq 0 \"$((len2 - 1))\"); do\n            if [ \"${list1[i]}\"\
    \ == \"${list2[j]}\" ]; then\n                common+=(\"${list1[i]}\")\n    \
    \        fi\n        done\n    done\n    IFS=$'\\n'\n    set -- \"${common[@]}\"\
    \n    IFS=$' \\t\\n'\n    set -- $common\n    IFS=$'\\n'\n    set -- \"$@\"\n\
    \    IFS=$' \\t\\n'\n    set -- \"$@\"\n    IFS=$'\\n'\n    set -- \"$@\"\n  \
    \  IFS=$'\\n'\n    set -- \"$@\"\n    IFS=$'\\n'\n    set -- \"$@\"\n    IFS=$'\\\
    n'\n    set -- \"$@\"\n    IFS=$'\\n'\n    set -- \"$@\"\n    IFS=$'\\n'\n   \
    \ set -- \"$@\"\n    IFS=$'\\n'\n    set -- \"$@\"\n    IFS=$'\\n'\n    set --\
    \ \"$@\"\n    IFS=$'\\n'\n    set -- \"$@\"\n    IFS=$'\\n'\n    set -- \"$@\"\
    \n    IFS=$'\\n'\n    set -- \"$@\"\n    IFS=$'\\n'\n    set -- \"$@\"\n    IFS=$'\\\
    n'\n    set -- \"$@\"\n    IFS=$'\\n'\n    set -- \"$@\"\n    IFS=$'\\n'\n   \
    \ set -- \"$@\"\n    IFS=$'\\n'\n    set -- \"$@\"\n    IFS=$'\\n'\n    set --\
    \ \"$@\"\n    IFS=$'\\n'\n    set -- \"$@\"\n    IFS=$'\\n'\n    set -- \"$@\"\
    \n    IFS=$'\\n'\n    set -- \"$@\"\n    IFS=$'\\n'\n    set -- \"$@\"\n    IFS=$'\\\
    n'\n    set -- \"$@\"\n    IFS=$'\\n'\n    set -- \"$@\"\n    IFS=$'\\n'\n   \
    \ set -- \"$@\"\n    IFS=$'\\n'\n    set -- \"$@\"\n    IFS=$\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n\
    \    local -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a\
    \ i\n    local -a j\n    local -a k\n    local -a l\n    local -a m\n    local\
    \ -a n\n    local -a o\n    local -a p\n    local -a q\n    local -a r\n    local\
    \ -a s\n    local -a t\n    local -a u\n    local -a v\n    local -a w\n    local\
    \ -a x\n    local -a y\n    local -a z\n    local -a a\n    local -a b\n    local\
    \ -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a g\n    local\
    \ -a h\n    local -a i\n    local -a j\n    local -a k\n    local -a l\n    local\
    \ -a m\n    local -a n\n    local -a o\n    local -a p\n    local -a q\n    local\
    \ -a r\n    local -a s\n    local -a t\n    local -a u\n    local -a v\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a a\n    local\
    \ -a b\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local\
    \ -a g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m n o p q r s t u v\n    local -a a\n    local -a b\n    local\
    \ -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a g\n    local\
    \ -a h\n    local -a i\n    local -a j\n    local -a k\n    local -a l\n    local\
    \ -a m\n    local -a n\n    local -a o\n    local -a p\n    local -a q\n    local\
    \ -a r\n    local -a s\n    local -a t\n    local -a u\n    local -a v\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a A\n    local\
    \ -a B\n    local -a C\n    local -a D\n    local -a E\n    local -a F\n    local\
    \ -a G\n    local -a H\n    local -a I\n    local -a J\n    local -a K\n    local\
    \ -a L\n    local -a M\n    local -a N\n    local -a O\n    local -a P\n    local\
    \ -a Q\n    local -a R\n    local -a S\n    local -a T\n    local -a U\n    local\
    \ -a V\n    local -a W\n    local -a X\n    local -a Y\n    local -a Z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a A\n    local -a B\n    local -a C\n    local -a D\n    local\
    \ -\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n \
    \   [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local i j k l m n o p q r s t u v w x y z\n  local -a a\n  local -a b\n  local\
    \ -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local -a h\n\
    \  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local\
    \ -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n\
    \  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local\
    \ -a y\n  local -a z\n  local -a a\n  local -a b\n  local -a c\n  local -a d\n\
    \  local -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a i\n  local\
    \ -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n\
    \  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local\
    \ -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n\
    \  local -a a\n  local -a b\n  local -a c\n  local -a d\n  local -a e\n  local\
    \ -a f\n  local -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n\
    \  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local\
    \ -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n\
    \  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a a\n  local\
    \ -a b\n  local -a c\n  local -a d\n}\n\ncandidate() {\n    common \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local maxlen\n\
    \    local minlen\n    local min\n    local max\n    local found\n    local match\n\
    \    local matchlen\n    local matchlen2\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local matchlen1\n    local matchlen1\n\
    \    local matchlen1\n    local matchlen1\n    local match\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local common_list_1\n    local common_list_2\n    local\
    \ common_list_3\n    local common_list_4\n    local common_list_5\n    local common_list_6\n\
    \    local common_list_7\n    local common_list_8\n    local common_list_9\n \
    \   local common_list_10\n    local common_list_11\n    local common_list_12\n\
    \    local common_list_13\n    local common_list_14\n    local common_list_15\n\
    \    local common_list_16\n    local common_list_17\n    local common_list_18\n\
    \    local common_list_19\n    local common_list_20\n    local common_list_21\n\
    \    local common_list_22\n    local common_list_23\n    local common_list_24\n\
    \    local common_list_25\n    local common_list_26\n    local common_list_27\n\
    \    local common_list_28\n    local common_list_29\n    local common_list_30\n\
    \    local common_list_31\n    local common_list_32\n    local common_list_33\n\
    \    local common_list_34\n    local common_list_35\n    local common_list_36\n\
    \    local common_list_37\n    local common_list_38\n    local common_list_39\n\
    \    local common_list_40\n    local common_list_41\n    local common_list_42\n\
    \    local common_list_43\n    local common_list_44\n    local common_list_45\n\
    \    local common_list_46\n    local common_list_47\n    local common_list_48\n\
    \    local common_list_49\n    local common_list_50\n    local common_list_51\n\
    \    local common_list_52\n    local common_list_53\n    local common_list_54\n\
    \    local common_list_55\n    local common_list_56\n    local common_list_57\n\
    \    local common_list_58\n    local common_list_59\n    local common_list_60\n\
    \    local common_list_61\n    local common_list_62\n    local common_list_63\n\
    \    local common_list_64\n    local common_list_65\n    local common_list_66\n\
    \    local common_list_67\n    local common_list_68\n    local common_list_69\n\
    \    local common_list_70\n    local common_list_71\n    local common_list_72\n\
    \    local common_list_73\n    local common_list_74\n    local common_list_75\n\
    \    local common_list_76\n    local common_list_77\n    local common_list_78\n\
    \    local common_list_79\n    local common_list_80\n    local common_list_81\n\
    \    local common_list_82\n    local common_list_83\n    local common_list_84\n\
    \    local common_\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=$1; shift\n    local -n arr2=$1; shift\n    local -a sorted1=()\n\
    \    local -a sorted2=()\n    local -a common=()\n    local -a sorted1=($(sort\
    \ <<<\"${arr1[*]}\" | uniq))\n    local -a sorted2=($(sort <<<\"${arr2[*]}\" |\
    \ uniq))\n    for (( i=0; i<${#sorted1[@]}; i++ )); do\n        local -n elem1=${sorted1[$i]}\n\
    \        local -n elem2=${sorted2[$i]}\n        local -n elem=${elem1}\n     \
    \   if [[ \"${elem1}\" == \"${elem2}\" ]]; then\n            common+=(\"${elem}\"\
    )\n        fi\n    done\n    IFS=$'\\n' sorted1=(\"${sorted1[*]}\")\n    IFS=$'\\\
    n' sorted2=(\"${sorted2[*]}\")\n    IFS=$'\\n' common=(\"${common[*]}\")\n   \
    \ IFS=$'\\n' sorted1=(\"${sorted1[*]}\")\n    IFS=$'\\n' sorted2=(\"${sorted2[*]}\"\
    )\n    IFS=$'\\n' common=(\"${common[*]}\")\n    IFS=$'\\n' sorted1=(\"${sorted1[*]}\"\
    )\n    IFS=$'\\n' sorted2=(\"${sorted2[*]}\")\n    IFS=$'\\n' common=(\"${common[*]}\"\
    )\n    IFS=$'\\n' sorted1=(\"${sorted1[*]}\")\n    IFS=$'\\n' sorted2=(\"${sorted2[*]}\"\
    )\n    IFS=$'\\n' common=(\"${common[*]}\")\n    IFS=$'\\n' sorted1=(\"${sorted1[*]}\"\
    )\n    IFS=$'\\n' sorted2=(\"${sorted2[*]}\")\n    IFS=$'\\n' common=(\"${common[*]}\"\
    )\n    IFS=$'\\n' sorted1=(\"${sorted1[*]}\")\n    IFS=$'\\n' sorted2=(\"${sorted2[*]}\"\
    )\n    IFS=$'\\n' common=(\"${common[*]}\")\n    IFS=$'\\n' sorted1=(\"${sorted1[*]}\"\
    )\n    IFS=$'\\n' sorted2=(\"${sorted2[*]}\")\n    IFS=$'\\n' common=(\"${common[*]\n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_12gobp5.sh: line 58: unexpected EOF while looking for matching
    `"''

    /tmp/tmp_12gobp5.sh: line 62: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m n o p q r s t u v\n    local -a a\n    local -a b\n    local\
    \ -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a g\n    local\
    \ -a h\n    local -a i\n    local -a j\n    local -a k\n    local -a l\n    local\
    \ -a m\n    local -a n\n    local -a o\n    local -a p\n    local -a q\n    local\
    \ -a r\n    local -a s\n    local -a t\n    local -a u\n    local -a v\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a a\n    local\
    \ -a b\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local\
    \ -a g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local\
    \ -\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n \
    \   [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 2
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$1\"\
    \ | sort -u)\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$common_list\"\
    \ | sort -u)\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$common_list\"\
    \ | sort -u)\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$common_list\"\
    \ | sort -u)\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$common_list\"\
    \ | sort -u)\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$common_list\"\
    \ | sort -u)\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$common_list\"\
    \ | sort -u)\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$common_list\"\
    \ | sort -u)\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$common_list\"\
    \ | sort -u)\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$common_list\"\
    \ | sort -u)\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$common_list\"\
    \ | sort -u)\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$common_list\"\
    \ | sort -u)\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$common_list\"\
    \ | sort -u)\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$common_list\"\
    \ | sort -u)\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$common_list\"\
    \ | sort -u)\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$common_list\"\
    \ | sort -u)\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$common_list\"\
    \ | sort -u)\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$common_list\"\
    \ | sort -u)\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$common_list\"\
    \ | sort -u)\n    common_list=$(awk '{print $1 \" \" $2}' <<< \"$common_list\"\
    \ | sort -u)\n    common_list=$(awk '{\n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj561yqdk.sh: line 32: unexpected EOF while looking for matching
    `''''

    /tmp/tmpj561yqdk.sh: line 48: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local sorted_1 sorted_2\n\
    \    sorted_1=$( echo $list_1 | tr ' ' '\\n' | sort -u )\n    sorted_2=$( echo\
    \ $list_2 | tr ' ' '\\n' | sort -u )\n    local common_1\n    local common_2\n\
    \    common_1=$( echo $sorted_1 | grep -F -f <(echo $sorted_2) )\n    common_2=$(\
    \ echo $sorted_2 | grep -F -f <(echo $sorted_1) )\n    echo $common_1\n    echo\
    \ $common_2\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local len1\n    local len2\n    local result\n\n    len1=\"\
    ${#list1[@]}\"\n    len2=\"${#list2[@]}\"\n\n    if [ \"${len1}\" -eq \"${len2}\"\
    \ ]; then\n        result=()\n        for ((i=0; i<${len1}; i++)); do\n      \
    \      for ((j=0; j<${len2}; j++)); do\n                if [ \"${list1[i]}\" ==\
    \ \"${list2[j]}\" ]; then\n                    result+=(\"${list1[i]}\")\n   \
    \             fi\n            done\n        done\n        IFS=$'\\n' \"${result[@]}\"\
    \ | sort -u\n    else\n        echo \"$1 has more elements than $2\"\n       \
    \ exit 1\n    fi\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m\n    local list1=($1)\n    local list2=($2)\n    local list3=($3)\n\
    \    local list4=($4)\n    local list5=($5)\n    local list6=($6)\n    local list7=($7)\n\
    \    local list8=($8)\n    local list9=($9)\n    local list10=($10)\n    local\
    \ list11=($11)\n    local list12=($12)\n    local list13=($13)\n    local list14=($14)\n\
    \    local list15=($15)\n    local list16=($16)\n    local list17=($17)\n    local\
    \ list18=($18)\n    local list19=($19)\n    local list20=($20)\n    local list21=($21)\n\
    \    local list22=($22)\n    local list23=($23)\n    local list24=($24)\n    local\
    \ list25=($25)\n    local list26=($26)\n    local list27=($27)\n    local list28=($28)\n\
    \    local list29=($29)\n    local list30=($30)\n    local list31=($31)\n    local\
    \ list32=($32)\n    local list33=($33)\n    local list34=($34)\n    local list35=($35)\n\
    \    local list36=($36)\n    local list37=($37)\n    local list38=($38)\n    local\
    \ list39=($39)\n    local list40=($40)\n    local list41=($41)\n    local list42=($42)\n\
    \    local list43=($43)\n    local list44=($44)\n    local list45=($45)\n    local\
    \ list46=($46)\n    local list47=($47)\n    local list48=($48)\n    local list49=($49)\n\
    \    local list50=($50)\n    local list51=($51)\n    local list52=($52)\n    local\
    \ list53=($53)\n    local list54=($54)\n    local list55=($55)\n    local list56=($56)\n\
    \    local list57=($57)\n    local list58=($58)\n    local list59=($59)\n    \n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local common_list_1\n    local common_list_2\n    local\
    \ common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_count\n    local common_list_2_count\n\
    \    local common_list_1_count\n    local common_list_2_count\n    local common_list_1_count\n\
    \    local common_list_2_count\n    local common_list_1_\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local i imax\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list2words\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list2words\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list2words\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list2words\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list2words\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list2words\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list2words\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list2words\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list2words\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list2words\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1 list2\n    list1=$1\n    list2=$2\n    local i j k common\n  \
    \  common=()\n    for (( i=0; i<${#list1}; i++ )); do\n        for (( j=0; j<${#list2};\
    \ j++ )); do\n            if [[ ${list1:$i:1} = ${list2:$j:1} ]]; then\n     \
    \           common+=(\"${list1:$i:1}\")\n                list1=${list1:0:$i}\n\
    \                list2=${list2:0:$j}\n                break\n            fi\n\
    \        done\n    done\n    echo \"${common[@]}\"\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local len1\n    local len2\n    local ret\n\n    len1=${#list1}\n\
    \    len2=${#list2}\n    common=()\n    for ((i=0; i<$len1; i++)); do\n      \
    \  for ((j=0; j<$len2; j++)); do\n            if [[ ${list1:$i:1} = ${list2:$j:1}\
    \ ]]; then\n                common+=(\"${list1:$i:1}\")\n                list1=\"\
    ${list1:$((i+1))}\"\n                list2=\"${list2:$((j+1))}\"\n           \
    \     len1=$((len1-1))\n                len2=$((len2-1))\n                break\n\
    \            fi\n        done\n    done\n    ret=\"${common[@]}\"\n    echo \"\
    ${ret}\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n\
    \    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4\
    \ 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local list_1_sorted\n\
    \    local list_2_sorted\n    list_1_sorted=$(echo \"$list_1\" | tr ' ' '\\n'\
    \ | sort -u)\n    list_2_sorted=$(echo \"$list_2\" | tr ' ' '\\n' | sort -u)\n\
    \    local common_elements=()\n    while read -r line; do\n        local line_sorted\n\
    \        line_sorted=$(echo \"$line\" | tr ' ' '\\n' | sort -u)\n        if [\
    \ \"$list_1_sorted\" == \"$line_sorted\" ]; then\n            common_elements+=(\"\
    $line\")\n        fi\n    done <<< \"$list_2_sorted\"\n    echo \"${common_elements[@]}\"\
    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local a b i j k l m\n    local -a a1 a2\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n\
    \    local unique\n    local sorted\n    local list1sorted\n    local list2sorted\n\
    \    local list1unique\n    local list2unique\n    local list1uniquesorted\n \
    \   local list2uniquesorted\n    local list1uniquesorted\n    local list2uniquesorted\n\
    \    local list1uniquesorted\n    local list2uniquesorted\n    local list1uniquesorted\n\
    \    local list2uniquesorted\n    local list1uniquesorted\n    local list2uniquesorted\n\
    \    local list1uniquesorted\n    local list2uniquesorted\n    local list1uniquesorted\n\
    \    local list2uniquesorted\n    local list1uniquesorted\n    local list2uniquesorted\n\
    \    local list1uniquesorted\n    local list2uniquesorted\n    local list1uniquesorted\n\
    \    local list2uniquesorted\n    local list1uniquesorted\n    local list2uniquesorted\n\
    \    local list1uniquesorted\n    local list2uniquesorted\n    local list1uniquesorted\n\
    \    local list2uniquesorted\n    local list1uniquesorted\n    local list2uniquesorted\n\
    \    local list1uniquesorted\n    local list2uniquesorted\n    local list1uniquesorted\n\
    \    local list2uniquesorted\n    local list1uniquesorted\n    local list2uniquesorted\n\
    \    local list1uniquesorted\n    local list2uniquesorted\n    local list1uniquesorted\n\
    \    local list2uniquesorted\n    local list1uniquesorted\n    local list2uniquesorted\n\
    \    local list1uniquesorted\n    local list2uniquesorted\n    local list1uniquesorted\n\
    \    local list2uniquesorted\n    local list1uniquesorted\n    local list2uniquesorted\n\
    \    local list1uniquesorted\n    local list2uniquesorted\n    local list1uniquesorted\n\
    \    local list2uniquesorted\n    local list1uniquesorted\n    local list2uniquesorted\n\
    \    local list1uniquesorted\n    local list2uniquesorted\n    local list1uniquesorted\n\
    \    local list2uniquesorted\n    local list1uniquesorted\n    local list2uniquesorted\n\
    \    local list1uniquesorted\n    local list2uniquesorted\n    local list1uniquesorted\n\
    \    local list2uniquesorted\n    local list1uniquesorted\n    local list2uniquesorted\n\
    \    local list1uniquesorted\n    local \n}\n\ncandidate() {\n    common \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5\
    \ 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"\
    2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local -a a\n  local -a b\n  local -a common\n  local -a sorted\n\n  a=($1)\n\
    \  b=($2)\n  common=()\n  sorted=()\n\n  for ((i=0; i<${#a[@]}; i++)); do\n  \
    \  [[ -z \"${b[i]}\" ]] && continue\n    [[ -z \"${common[i]}\" ]] && common+=(\"\
    ${a[i]}\") && sorted+=(\"${a[i]}\")\n    [[ -z \"${b[i]}\" ]] && continue\n  \
    \  [[ -z \"${common[i]}\" ]] && common+=(\"${b[i]}\") && sorted+=(\"${b[i]}\"\
    )\n  done\n\n  printf '%s\\n' \"${sorted[@]}\"\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m n o p q r s t u v w x y z\n    local -a a\n    local -a b\n\
    \    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a\
    \ g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local\
    \ -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local\
    \ -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
    \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
    \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a a\n    local -a b\n    local -a c\n    local\
    \ -a d\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n\
    \    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4\
    \ 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local common\n    local list1\n    local list2\n    list1=$1\n\
    \    list2=$2\n    common=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n     \
    \   for ((j=0; j<${#list2[@]}; j++)); do\n            if [[ ${list1[i]} == ${list2[j]}\
    \ ]]; then\n                common+=(\"${list1[i]}\")\n            fi\n      \
    \  done\n    done\n    echo \"${common[@]}\"\n}\n\ncandidate() {\n    common \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7\
    \ 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") =\
    \ \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local i j k common\n\
    \    common=()\n    for (( i=0; i<${#list_1}; i++ )); do\n        for (( j=0;\
    \ j<${#list_2}; j++ )); do\n            [[ \"${list_1:$i:1}\" == \"${list_2:$j:1}\"\
    \ ]] && \\\n                (( k++ )) || break\n        done\n        (( k > 0\
    \ )) && common+=(\"${list_1:$i:1}\")\n    done\n    echo \"${common[@]}\"\n}\n\
    \ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local word\n    local word1\n    local word2\n    local word3\n\
    \    local word4\n    local word5\n    local word6\n    local word7\n    local\
    \ word8\n    local word9\n    local word10\n    local word11\n    local word12\n\
    \    local word13\n    local word14\n    local word15\n    local word16\n    local\
    \ word17\n    local word18\n    local word19\n    local word20\n    local word21\n\
    \    local word22\n    local word23\n    local word24\n    local word25\n    local\
    \ word26\n    local word27\n    local word28\n    local word29\n    local word30\n\
    \    local word31\n    local word32\n    local word33\n    local word34\n    local\
    \ word35\n    local word36\n    local word37\n    local word38\n    local word39\n\
    \    local word40\n    local word41\n    local word42\n    local word43\n    local\
    \ word44\n    local word45\n    local word46\n    local word47\n    local word48\n\
    \    local word49\n    local word50\n    local word51\n    local word52\n    local\
    \ word53\n    local word54\n    local word55\n    local word56\n    local word57\n\
    \    local word58\n    local word59\n    local word60\n    local word61\n    local\
    \ word62\n    local word63\n    local word64\n    local word65\n    local word66\n\
    \    local word67\n    local word68\n    local word69\n    local word70\n    local\
    \ word71\n    local word72\n    local word73\n    local word74\n    local word75\n\
    \    local word76\n    local word77\n    local word78\n    local word79\n    local\
    \ word80\n    local word81\n    local word82\n    local word83\n    local word84\n\
    \    local word85\n    local word86\n    local word87\n    local word88\n    local\
    \ word89\n    local word90\n    local word91\n    local word92\n    \n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n    local tmp93\n    local tmp94\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=$1; shift\n    local -n arr2=$1; shift\n    local -a sorted1\n\
    \    local -a sorted2\n    local -a common\n    local -a common1\n    local -a\
    \ common2\n    local -a common1\n    local -a common2\n    local -a common1\n\
    \    local -a common2\n    local -a common1\n    local -a common2\n    local -a\
    \ common1\n    local -a common2\n    local -a common1\n    local -a common2\n\
    \    local -a common1\n    local -a common2\n    local -a common1\n    local -a\
    \ common2\n    local -a common1\n    local -a common2\n    local -a common1\n\
    \    local -a common2\n    local -a common1\n    local -a common2\n    local -a\
    \ common1\n    local -a common2\n    local -a common1\n    local -a common2\n\
    \    local -a common1\n    local -a common2\n    local -a common1\n    local -a\
    \ common2\n    local -a common1\n    local -a common2\n    local -a common1\n\
    \    local -a common2\n    local -a common1\n    local -a common2\n    local -a\
    \ common1\n    local -a common2\n    local -a common1\n    local -a common2\n\
    \    local -a common1\n    local -a common2\n    local -a common1\n    local -a\
    \ common2\n    local -a common1\n    local -a common2\n    local -a common1\n\
    \    local -a common2\n    local -a common1\n    local -a common2\n    local -a\
    \ common1\n    local -a common2\n    local -a common1\n    local -a common2\n\
    \    local -a common1\n    local -a common2\n    local -a common1\n    local -a\
    \ common2\n    local -a common1\n    local -a common2\n    local -a common1\n\
    \    local -a common2\n    local -a common1\n    local -a common2\n    local -a\
    \ common1\n    local -a common2\n    local -a common1\n    local -\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9ftmywiw.sh: line 11: local: `1 4 3 34 653 2 5'': invalid variable
    name for name reference

    /tmp/tmp9ftmywiw.sh: line 12: local: `5 7 1 5 9 653 121'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1=($1)\n    local list2=($2)\n    local common=()\n\
    \    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]};\
    \ j++)); do\n            [[ ${list1[i]} == ${list2[j]} ]] && \\\n            \
    \    ! in_array \"${list1[i]}\" \"${common[@]}\" && \\\n                common+=(\"\
    ${list1[i]}\")\n        done\n    done\n    echo \"${common[@]}\"\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpk64yym6j.sh: line 18: in_array: command not found

    /tmp/tmpk64yym6j.sh: line 18: in_array: command not found

    /tmp/tmpk64yym6j.sh: line 18: in_array: command not found

    /tmp/tmpk64yym6j.sh: line 18: in_array: command not found

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n\
    \    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a\
    \ j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
    \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
    \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a a\n    local -a b\n    local -a c\n    local\
    \ -a d\n    local -a e\n    local -a f\n    local -a g\n    local -a h\n    local\
    \ -a i\n    local -a j\n    local -a k\n    local -a l\n    local -a m\n    local\
    \ -a n\n    local -a o\n    local -a p\n    local -a q\n    local -a r\n    local\
    \ -a s\n    local -a t\n    local -a u\n    local -a v\n    local -a w\n    local\
    \ -a x\n    local -a y\n    local -a z\n    local -a a\n    local -a b\n    local\
    \ -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a g\n    local\
    \ -a h\n    local -a i\n    local -a j\n    local -a k\n    local -a l\n    local\
    \ -a m\n    local -a n\n    local -a o\n    local -a p\n    local -a q\n    local\
    \ -a r\n    local -a s\n    local -a t\n    local -a u\n    local -a v\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a a\n    local\
    \ -a b\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local\
    \ -a g\n    local \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local maxlen\n\
    \    local minlen\n    local min\n    local max\n    local minlen\n    local maxlen\n\
    \    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local\
    \ minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n\
    \    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local\
    \ maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n\
    \    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local\
    \ minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n\
    \    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local\
    \ maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n\
    \    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local\
    \ minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n\
    \    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local\
    \ maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n\
    \    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local\
    \ minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n\
    \    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local\
    \ maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n\
    \    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local\
    \ minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n\
    \    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local\
    \ maxlen\n    local minlen\n    local maxlen\n    local minlen\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list_1 list_2\n    local i\n    common_list=$(\
    \ echo $1 | tr ' ' '\\n' | sort -u )\n    list_1=$( echo $2 | tr ' ' '\\n' | sort\
    \ -u )\n    list_2=$( echo $2 | tr ' ' '\\n' | sort -u )\n    for (( i=0; i<${#list_1};\
    \ i++ )); do\n        if [[ ${list_1:$i:1} = ${list_2:$i:1} ]]; then\n       \
    \     common_list=\"$common_list ${list_1:$i:1}\"\n        fi\n    done\n    echo\
    \ \"$common_list\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local common_elements\n\
    \    common_elements=$(comm -2 -3 <(sort <<<\"$list_1\") <(sort <<<\"$list_2\"\
    ) | sort -u)\n    echo \"$common_elements\"\n}\n\ncandidate() {\n    common \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7\
    \ 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") =\
    \ \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local list_1_sorted\n\
    \    local list_2_sorted\n    list_1_sorted=$(echo \"$list_1\" | tr \" \" \"\\\
    n\" | sort -u)\n    list_2_sorted=$(echo \"$list_2\" | tr \" \" \"\\n\" | sort\
    \ -u)\n    local common_sorted\n    common_sorted=$(comm -12 <(echo \"$list_1_sorted\"\
    ) <(echo \"$list_2_sorted\"))\n    echo \"$common_sorted\"\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 2
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local i i2 j\n    local list1=($list1)\n\
    \    local list2=($list2)\n    local list3=($list1)\n    local list4=($list2)\n\
    \    local list5=($list1)\n    local list6=($list2)\n    local list7=($list1)\n\
    \    local list8=($list2)\n    local list9=($list1)\n    local list10=($list2)\n\
    \    local list11=($list1)\n    local list12=($list2)\n    local list13=($list1)\n\
    \    local list14=($list2)\n    local list15=($list1)\n    local list16=($list2)\n\
    \    local list17=($list1)\n    local list18=($list2)\n    local list19=($list1)\n\
    \    local list20=($list2)\n    local list21=($list1)\n    local list22=($list2)\n\
    \    local list23=($list1)\n    local list24=($list2)\n    local list25=($list1)\n\
    \    local list26=($list2)\n    local list27=($list1)\n    local list28=($list2)\n\
    \    local list29=($list1)\n    local list30=($list2)\n    local list31=($list1)\n\
    \    local list32=($list2)\n    local list33=($list1)\n    local list34=($list2)\n\
    \    local list35=($list1)\n    local list36=($list2)\n    local list37=($list1)\n\
    \    local list38=($list2)\n    local list39=($list1)\n    local list40=($list2)\n\
    \    local list41=($list1)\n    local list42=($list2)\n    local list43=($list1)\n\
    \    local list44=($list2)\n    local list45=($list1)\n    local list46=($list2)\n\
    \    local list47=($list1)\n    local list48=($list2)\n    local list49=($list1)\n\
    \    local list50=($list2)\n    local list51=($list1)\n    local list52=($list2)\n\
    \    local list53=($list1)\n    local list54=($list2)\n    local list55=(\n}\n\
    \ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1fa1by3m.sh: line 71: syntax error near unexpected token `(''

    /tmp/tmp1fa1by3m.sh: line 71: `candidate() {''

    /tmp/tmp1fa1by3m.sh: line 72: common: command not found

    /tmp/tmp1fa1by3m.sh: line 73: syntax error near unexpected token `}''

    /tmp/tmp1fa1by3m.sh: line 73: `}''

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local i\n    local j\n    local k\n    local len1\n    local\
    \ len2\n    local sorted1\n    local sorted2\n    local sorted\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 2
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local i j\n    local list1len\n\
    \    local list2len\n    local common\n    list1len=$(wc -w <<< \"$list1\")\n\
    \    list2len=$(wc -w <<< \"$list2\")\n    common=()\n    for ((i=0; i<$list1len;\
    \ i++)); do\n        for ((j=0; j<$list2len; j++)); do\n            if [[ \"$list1\"\
    \ == \"$list2\" ]]; then\n                common+=(\"$list1\")\n             \
    \   break\n            fi\n            if [[ \"$list1\" == \"$list2\" ]]; then\n\
    \                common+=(\"$list2\")\n                break\n            fi\n\
    \            if [[ \"$list1\" == \"$list2\" ]]; then\n                common+=(\"\
    $list1\")\n                break\n            fi\n            if [[ \"$list2\"\
    \ == \"$list1\" ]]; then\n                common+=(\"$list2\")\n             \
    \   break\n            fi\n            if [[ \"$list2\" == \"$list1\" ]]; then\n\
    \                common+=(\"$list1\")\n                break\n            fi\n\
    \            if [[ \"$list1\" == \"$list2\" ]]; then\n                common+=(\"\
    $list1\")\n                break\n            fi\n            if [[ \"$list2\"\
    \ == \"$list1\" ]]; then\n                common+=(\"$list2\")\n             \
    \   break\n            fi\n            if [[ \"$list1\" == \"$list2\" ]]; then\n\
    \                common+=(\"$list1\")\n                break\n            fi\n\
    \            if [[ \"$list2\" == \"$list1\" ]]; then\n                common+=(\"\
    $list2\")\n                break\n            fi\n            if [[ \"$list1\"\
    \ == \"$list2\" ]]; then\n                common+=(\"$list1\")\n             \
    \   break\n            fi\n            if [[ \"$list2\" == \"$list1\" ]]; then\n\
    \                common+=(\"$list2\")\n                break\n            fi\n\
    \            if [[ \"$list1\" == \"$list2\" ]]; then\n                common+=(\"\
    $list1\")\n                break\n            fi\n            if [[ \"$list2\"\
    \ == \"$list1\" ]]; then\n                common+=(\"$list2\")\n             \
    \   break\n            fi\n            if [[ \"$list1\" == \"$list2\" ]]; then\n\
    \                common+=(\"$list1\")\n                break\n            fi\n\
    \            if [[ \"$list2\" == \"$list1\" ]]; then\n                common+=(\"\
    $list2\")\n                break\n            fi\n            if [[ \"$list1\"\
    \ == \"$list2\" ]]; then\n                common+=(\"$list1\")\n             \
    \   break\n            fi\n            if [[ \"$list2\" == \"$list1\" ]]; then\n\
    \                common+=(\"$list2\")\n                break\n            fi\n\
    \            if [[ \"$list1\" == \"$list\n}\n\ncandidate() {\n    common \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5\
    \ 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"\
    2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwaq8o7tb.sh: line 90: syntax error in conditional expression

    /tmp/tmpwaq8o7tb.sh: line 99: syntax error near `5''

    /tmp/tmpwaq8o7tb.sh: line 99: `    [[ $(candidate "1 4 3 34 653 2 5" "5 7 1 5
    9 653 121") = "1 5 653" ]]''

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list1\n    local list2\n    local i\n    local\
    \ j\n    list1=$1\n    list2=$2\n    common_list=$( sort -u )\n    for (( i =\
    \ 0; i < ${#list1}; i++ )); do\n        for (( j = 0; i < ${#list2}; j++ )); do\n\
    \            if [[ ${list1:$i:1} = ${list2:$j:1} ]]; then\n                common_list=\"\
    $common_list ${list1:$i:1}\"\n            fi\n        done\n    done\n    echo\
    \ \"$common_list\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=58 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=54 encoding='utf-8'>
  timestamp: 1660043534
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local sorted\n\n    len1=\"${#list1[@]}\"\n    len2=\"${#list2[@]}\"\
    \n    len=\"${len1}\"\n    if [ \"${len}\" -eq 0 ]; then\n        return 0\n \
    \   elif [ \"${len}\" -eq 1 ]; then\n        common=\"${list1[@]}\"\n    elif\
    \ [ \"${len}\" -gt 1 ]; then\n        common=()\n        sorted=()\n        i=0;\n\
    \        while [ $i -lt \"$len1\" ]; do\n            tmp=\"${list1[$i]}\"\n  \
    \          if [ \"${sorted[@]}\" != \"${tmp}\" ]; then\n                sorted+=(\"\
    ${tmp}\")\n            fi\n            ((i++))\n        done\n        i=0;\n \
    \       while [ $i -lt \"$len2\" ]; do\n            tmp=\"${list2[$i]}\"\n   \
    \         if [ \"${sorted[@]}\" != \"${tmp}\" ]; then\n                sorted+=(\"\
    ${tmp}\")\n            fi\n            ((i++))\n        done\n        common=(\"\
    ${sorted[@]}\")\n    fi\n    k=0;\n    while [ $k -lt \"$len\" ]; do\n       \
    \ if [ \"${list1[$k]}\" == \"${list2[$k]}\" ]; then\n            ((k++))\n   \
    \     else\n            common=(\"${common[@]}\" \"$list1[$k]\" \"$list2[$k]\"\
    )\n        fi\n    done\n    echo \"${common[@]}\"\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=71 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=62 encoding='utf-8'>
  timestamp: 1660043534
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local i\n    local j\n    local common_list_len\n \
    \   local common_list_len2\n    local common_list_len3\n    local common_list_len4\n\
    \    local common_list_len5\n    local common_list_len6\n    local common_list_len7\n\
    \    local common_list_len8\n    local common_list_len9\n    local common_list_len10\n\
    \    local common_list_len11\n    local common_list_len12\n    local common_list_len13\n\
    \    local common_list_len14\n    local common_list_len15\n    local common_list_len16\n\
    \    local common_list_len17\n    local common_list_len18\n    local common_list_len19\n\
    \    local common_list_len20\n    local common_list_len21\n    local common_list_len22\n\
    \    local common_list_len23\n    local common_list_len24\n    local common_list_len25\n\
    \    local common_list_len26\n    local common_list_len27\n    local common_list_len28\n\
    \    local common_list_len29\n    local common_list_len30\n    local common_list_len31\n\
    \    local common_list_len32\n    local common_list_len33\n    local common_list_len34\n\
    \    local common_list_len35\n    local common_list_len36\n    local common_list_len37\n\
    \    local common_list_len38\n    local common_list_len39\n    local common_list_len40\n\
    \    local common_list_len41\n    local common_list_len42\n    local common_list_len43\n\
    \    local common_list_len44\n    local common_list_len45\n    local common_list_len46\n\
    \    local common_list_len47\n    local common_list_len48\n    local common_list_len49\n\
    \    local common_list_len50\n    local common_list_len51\n    local common_list_len52\n\
    \    local common_list_len53\n    local common_list_len54\n    local common_list_len55\n\
    \    local common_list_len56\n    local common_list_len57\n    local common_list_len58\n\
    \    local common_list_len59\n    local common_list_len60\n    local common_list_len61\n\
    \    local common_list_len62\n    local common_list_len63\n    local common_list_len64\n\
    \    local common_list_len65\n    local common_list_len66\n    local common_list_len67\n\
    \    local common_list_len68\n    local common_list_len69\n    local common_list_len70\n\
    \    local common_list_len71\n    local common_\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local a b i j k l m\n    a=$1\n    b=$2\n    local n\n    local -a c\n   \
    \ local -a d\n    local -a e\n    local -a f\n    local -a g\n    local -a h\n\
    \    local -a i\n    local -a j\n    local -a k\n    local -a l\n    local -a\
    \ m\n    local -a n\n    local -a o\n    local -a p\n    local -a q\n    local\
    \ -a r\n    local -a s\n    local -a t\n    local -a u\n    local -a v\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a A\n    local\
    \ -a B\n    local -a C\n    local -a D\n    local -a E\n    local -a F\n    local\
    \ -a G\n    local -a H\n    local -a I\n    local -a J\n    local -a K\n    local\
    \ -a L\n    local -a M\n    local -a N\n    local -a O\n    local -a P\n    local\
    \ -a Q\n    local -a R\n    local -a S\n    local -a T\n    local -a U\n    local\
    \ -a V\n    local -a W\n    local -a X\n    local -a Y\n    local -a Z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a A\n    local -a B\n    local -a C\n    local -a D\n    local\
    \ -a E\n    local -a \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=${1%% *}\n    local -n arr2=${2%% *}\n    local -a sorted\n\
    \    local -a sorted2\n    local -a sorted3\n    local -a sorted4\n    local -a\
    \ sorted5\n    local -a sorted6\n    local -a sorted7\n    local -a sorted8\n\
    \    local -a sorted9\n    local -a sorted10\n    local -a sorted11\n    local\
    \ -a sorted12\n    local -a sorted13\n    local -a sorted14\n    local -a sorted15\n\
    \    local -a sorted16\n    local -a sorted17\n    local -a sorted18\n    local\
    \ -a sorted19\n    local -a sorted20\n    local -a sorted21\n    local -a sorted22\n\
    \    local -a sorted23\n    local -a sorted24\n    local -a sorted25\n    local\
    \ -a sorted26\n    local -a sorted27\n    local -a sorted28\n    local -a sorted29\n\
    \    local -a sorted30\n    local -a sorted31\n    local -a sorted32\n    local\
    \ -a sorted33\n    local -a sorted34\n    local -a sorted35\n    local -a sorted36\n\
    \    local -a sorted37\n    local -a sorted38\n    local -a sorted39\n    local\
    \ -a sorted40\n    local -a sorted41\n    local -a sorted42\n    local -a sorted43\n\
    \    local -a sorted44\n    local -a sorted45\n    local -a sorted46\n    local\
    \ -a sorted47\n    local -a sorted48\n    local -a sorted49\n    local -a sorted50\n\
    \    local -a sorted51\n    local -a sorted52\n    local -a sorted53\n    local\
    \ -a sorted54\n    local -a sorted55\n    local -a sorted56\n    local -a sorted57\n\
    \    local -a sorted58\n    local -a sorted59\n    local -a sorted60\n    local\
    \ -a sorted61\n    local -a sorted62\n    local -a sorted63\n    local -a sorted64\n\
    \    local -a sorted65\n    local -a sorted66\n    local -a sorted67\n    local\
    \ -a sorted68\n    local -a sorted69\n    local -a sorted70\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpeggfmwu1.sh: line 11: local: `1'': invalid variable name for name
    reference

    /tmp/tmpeggfmwu1.sh: line 12: local: `5'': invalid variable name for name reference

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local i imax\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list2words\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list2words\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list2words\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list2words\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list2words\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list2words\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list2words\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list2words\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list2words\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list2words\n    local list1words\
    \ list2words\n    local list1words list2words\n    local list1words list2words\n\
    \    local list1words list2words\n    local list1words list\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=$1; shift\n    local -n arr2=$1; shift\n    local -a sorted=()\n\
    \    local -a common=()\n    local -a sorted1\n    local -a sorted2\n    local\
    \ -a common1\n    local -a common2\n    local i\n    local j\n    local k\n  \
    \  local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpd65goe5i.sh: line 11: local: `1 4 3 34 653 2 5'': invalid variable
    name for name reference

    /tmp/tmpd65goe5i.sh: line 12: local: `5 7 1 5 9 653 121'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=$1; shift\n    local -n arr2=$1; shift\n    local -a res\n \
    \   local i j\n    res=()\n    for ((i=0; i<${#arr1[@]}; i++)); do\n        for\
    \ ((j=0; j<${#arr2[@]}; j++)); do\n            [[ ${arr1[i]} == ${arr2[j]} ]]\
    \ && continue\n            res+=(\"${arr1[i]}\")\n        done\n    done\n   \
    \ echo \"${res[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4vwp2uy3.sh: line 11: local: `1 4 3 34 653 2 5'': invalid variable
    name for name reference

    /tmp/tmp4vwp2uy3.sh: line 12: local: `5 7 1 5 9 653 121'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m\n    local list1=($1)\n    local list2=($2)\n    local list3=($3)\n\
    \    local list4=($4)\n    local list5=($5)\n    local list6=($6)\n    local list7=($7)\n\
    \    local list8=($8)\n    local list9=($9)\n    local list10=($10)\n    local\
    \ list11=($11)\n    local list12=($12)\n    local list13=($13)\n    local list14=($14)\n\
    \    local list15=($15)\n    local list16=($16)\n    local list17=($17)\n    local\
    \ list18=($18)\n    local list19=($19)\n    local list20=($20)\n    local list21=($21)\n\
    \    local list22=($22)\n    local list23=($23)\n    local list24=($24)\n    local\
    \ list25=($25)\n    local list26=($26)\n    local list27=($27)\n    local list28=($28)\n\
    \    local list29=($29)\n    local list30=($30)\n    local list31=($31)\n    local\
    \ list32=($32)\n    local list33=($33)\n    local list34=($34)\n    local list35=($35)\n\
    \    local list36=($36)\n    local list37=($37)\n    local list38=($38)\n    local\
    \ list39=($39)\n    local list40=($40)\n    local list41=($41)\n    local list42=($42)\n\
    \    local list43=($43)\n    local list44=($44)\n    local list45=($45)\n    local\
    \ list46=($46)\n    local list47=($47)\n    local list48=($48)\n    local list49=($49)\n\
    \    local list50=($50)\n    local list51=($51)\n    local list52=($52)\n    local\
    \ list53=($53)\n    local list54=($54)\n    local list55=($55)\n    local list56=($56)\n\
    \    local list57=($57)\n    local list58=($58)\n    local list59=($59)\n    \n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local maxlen\n\
    \    local minlen\n    local min\n    local max\n    local diff\n    local difflen\n\
    \    local difflen2\n    local difflen2max\n    local difflen2min\n    local difflen2minmax\n\
    \    local difflen2minmaxlen\n    local difflen2minmaxlen2\n    local difflen2minmaxlen2max\n\
    \    local difflen2minmaxlen2max2\n    local difflen2minmaxlen2max2max\n    local\
    \ difflen2minmaxlen2max2max2\n    local difflen2minmaxlen2max2max2max\n    local\
    \ difflen2minmaxlen2max2max2max2\n    local difflen2minmaxlen2max2max2max2max\n\
    \    local difflen2minmaxlen2max2max2max2max2max\n    local difflen2minmaxlen2max2max2max2max2max2max\n\
    \    local difflen2minmaxlen2max2max2max2max2max2max2max\n    local difflen2minmaxlen2max2max2max2max2max2max2max2max\n\
    \    local difflen2minmaxlen2max2max2max2max2max2max2max2max2max\n    local difflen2minmaxlen2max2max2max2max2max2max2max2max2max2max\n\
    \    local difflen2minmaxlen2max2max2max2max2max2max2max2max2max2max2max\n   \
    \ local difflen2minmaxlen2max2max2max2max2max2max2max2max2max2max2max2max\n  \
    \  local difflen2minmaxlen2max2max2max2max2max2max2max2max2max2max2max2max2max\n\
    \    local difflen2minmaxlen2max2max2max2max2max2max2max2max2max2max2max2max2max2max\n\
    \    local difflen2minmaxlen2max2max2max2max2max2max\n}\n\ncandidate() {\n   \
    \ common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 2
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local a b i j k l m\n    a=\"${1// /, }\"\n    b=\"${2// /, }\"\n    local\
    \ -a c\n    for (( i = 0; i < ${#a}; i++ )); do\n        for (( j = 0; i < ${#b};\
    \ j++ )); do\n            if [[ ${a[i]} == ${b[j]} ]]; then\n                c=(\"\
    ${c[@]}\" ${a[i]})\n            fi\n        done\n    done\n    for (( k = 0;\
    \ k < ${#c}; k++ )); do\n        l=(\"${l[@]}\" ${c[k]})\n    done\n    local\
    \ -a sorted\n    sorted=()\n    for (( m = 0; m < ${#l[@]}; m++ )); do\n     \
    \   sorted=(\"${sorted[@]}\" ${l[m]})\n    done\n    local -a unique\n    unique=()\n\
    \    for (( m = 0; m < ${#sorted[@]}; m++ )); do\n        local -a tmp\n     \
    \   tmp=()\n        for (( i = 0; i < ${#unique[@]}; i++ )); do\n            if\
    \ [[ ${sorted[m]} == ${unique[i]} ]]; then\n                tmp=(\"${tmp[@]}\"\
    \ ${sorted[m]})\n            fi\n        done\n        unique=(\"${unique[@]}\"\
    \ ${tmp[@]})\n    done\n    local -a sorted\n    sorted=()\n    for (( m = 0;\
    \ m < ${#unique[@]}; m++ )); do\n        sorted=(\"${sorted[@]}\" ${unique[m]})\n\
    \    done\n    local -a unique\n    unique=()\n    for (( m = 0; m < ${#sorted[@]};\
    \ m++ )); do\n        local -a tmp\n        tmp=()\n        for (( i = 0; i <\
    \ ${#unique[@]}; i++ )); do\n            if [[ ${sorted[m]} == ${unique[i]} ]];\
    \ then\n                tmp=(\"${tmp[@]}\" ${sorted[m]})\n            fi\n   \
    \     done\n        unique=(\"${unique[@]}\" ${tmp[@]})\n    done\n    local -a\
    \ sorted\n    sorted=()\n    for (( m = 0; m < ${#unique[@]}; m++ )); do\n   \
    \     sorted=(\"${sorted[@]}\" ${unique[m]})\n    done\n    local -a unique\n\
    \    unique=()\n    for (( m = 0; m < ${#sorted[@]}; m++ )); do\n\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4aoolo2y.sh: line 68: syntax error near unexpected token `}''

    /tmp/tmp4aoolo2y.sh: line 68: `}''

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i ilist ilist2 jlist jlist2 klist klist2 len1 len2 len\n    local list1\
    \ list2 list3 list4 list5 list6 list7 list8 list9 list10\n    local list11 list12\
    \ list13 list14 list15 list16 list17 list18 list19\n    local list20 list21 list22\
    \ list23 list24 list25 list26 list27 list28\n    local list29 list30 list31 list32\
    \ list33 list34 list35 list36 list37\n    local list38 list39 list40 list41 list42\
    \ list43 list44 list45 list46\n    local list47 list48 list49 list50 list51 list52\
    \ list53 list54 list55\n    local list56 list57 list58 list59 list60 list61 list62\
    \ list63 list64\n    local list65 list66 list67 list68 list69 list70 list71 list72\
    \ list73\n    local list74 list75 list76 list77 list78 list79 list80 list81 list82\n\
    \    local list83 list84 list85 list86 list87 list88 list89 list90 list91\n  \
    \  local list92 list93 list94 list95 list96 list97 list98 list99 list100\n   \
    \ local list101 list102 list103 list104 list105 list106 list107 list108\n    local\
    \ list109 list110 list111 list112 list113 list114 list115 list116\n    local list117\
    \ list118 list119 list120 list121 list122 list123 list124\n    local list125 list126\
    \ list127 list128 list129 list130 list131 list132\n    local list133 list134 list135\
    \ list136 list137 list138 list139 list140\n    local list141 list142 list143 list144\
    \ list145 list146 list147 list148\n    local list149 list150 list151 list152 list153\
    \ list154 list155 list156\n    local list157 list158 list159 list160 list161 list162\
    \ list163 list164\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local a b i j k l m\n    local -a a1 a2\n    local -a a1_sorted\n    local\
    \ -a a2_sorted\n    local -a common\n    local -a common_sorted\n    local -a\
    \ common_sorted_unique\n    local -a common_sorted_unique_sorted\n    local -a\
    \ common_sorted_unique_sorted_unique\n    local -a common_sorted_unique_sorted_unique_sorted\n\
    \    local -a common_sorted_unique_sorted_unique_sorted_unique\n    local -a common_sorted_unique_sorted_unique_sorted_unique_sorted\n\
    \    local -a common_sorted_unique_sorted_unique_sorted_unique_sorted_unique\n\
    \    local -a common_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted\n\
    \    local -a common_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique\n\
    \    local -a common_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted\n\
    \    local -a common_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique\n\
    \    local -a common_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted\n\
    \    local -a common_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique\n\
    \    local -a common_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted\n\
    \    local -a common_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique\n\
    \    local -a common_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted\n\
    \    local -a common_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique\n\
    \    local -a common_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted\n\
    \    local -a common_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted\n\
    \    local -a common_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique\n\
    \    local -a common_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted\n\
    \    local -a common_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique\n\
    \    local -a common_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique\n\
    \    local -a common_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted_unique_sorted\n\
    \    local -a common_sorted_unique_sorted_unique_sorted_unique_sorted_unique_\n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local maxlen\n\
    \    local minlen\n    local maxlen1\n    local maxlen2\n    local minlen1\n \
    \   local minlen2\n    local min\n    local max\n    local minlen\n    local maxlen\n\
    \    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local\
    \ minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n\
    \    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local\
    \ maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n\
    \    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local\
    \ minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n\
    \    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local\
    \ maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n\
    \    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local\
    \ minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n\
    \    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local\
    \ maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n\
    \    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local\
    \ minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n\
    \    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local\
    \ maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n\
    \    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local\
    \ minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n\
    \    local maxlen\n    local minlen\n    local maxlen\n\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local i\n    local j\n    local k\n    local len1\n    local\
    \ len2\n    local maxlen\n    local minlen\n    local maxlen1\n    local maxlen2\n\
    \    local minlen1\n    local minlen2\n    local min\n    local max\n    local\
    \ minlen\n    local maxlen\n    local minlen1\n    local minlen2\n    local min\n\
    \    local max\n    local minlen\n    local maxlen\n    local minlen1\n    local\
    \ minlen2\n    local min\n    local max\n    local minlen\n    local maxlen\n\
    \    local minlen1\n    local minlen2\n    local min\n    local max\n    local\
    \ minlen\n    local maxlen\n    local minlen1\n    local minlen2\n    local min\n\
    \    local max\n    local minlen\n    local maxlen\n    local minlen1\n    local\
    \ minlen2\n    local min\n    local max\n    local minlen\n    local maxlen\n\
    \    local minlen1\n    local minlen2\n    local min\n    local max\n    local\
    \ minlen\n    local maxlen\n    local minlen1\n    local minlen2\n    local min\n\
    \    local max\n    local minlen\n    local maxlen\n    local minlen1\n    local\
    \ minlen2\n    local min\n    local max\n    local minlen\n    local maxlen\n\
    \    local minlen1\n    local minlen2\n    local min\n    local max\n    local\
    \ minlen\n    local maxlen\n    local minlen1\n    local minlen2\n    local min\n\
    \    local max\n    local minlen\n    local maxlen\n    local minlen1\n    local\
    \ minlen2\n    local min\n    local max\n    local minlen\n    local maxlen\n\
    \    local minlen1\n    local minlen2\n    local min\n    local max\n    local\
    \ minlen\n    local maxlen\n    local minlen1\n    local minlen2\n    local min\n\
    \    local max\n    local minlen\n    local maxlen\n    local minlen1\n    local\
    \ minlen2\n    local min\n    local max\n    local minlen\n    local maxlen\n\
    \    local minlen1\n    local minlen2\n    local \n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list_1 list_2\n    local i j\n    list_1=$1\n\
    \    list_2=$2\n    common_list=$(bc <<< \"$(sort <<< \"$list_1 $list_2\" | uniq\
    \ -u)\"| tr -d '\\n')\n    for (( i=0; i<${#common_list}; i++ )); do\n       \
    \ list_1=$(echo \"$list_1\" | sed -n \"${i}p\")\n        list_2=$(echo \"$list_2\"\
    \ | sed -n \"${i}p\")\n    done\n    echo \"$common_list\"\n}\n\ncandidate() {\n\
    \    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list_1 list_2\n  list_1=$1\n  list_2=$2\n  list_1=$(echo $list_1 | tr\
    \ ' ' '\\n' | sort -u)\n  list_2=$(echo $list_2 | tr ' ' '\\n' | sort -u)\n  comm\
    \ -2 -3 <(echo $list_1) <(echo $list_2)\n}\n\ncandidate() {\n    common \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5\
    \ 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"\
    2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    common_list=$( sort -u $( comm -2 -3 <( sort -u $1\
    \ ) <( sort -u $2 ) ) )\n    echo \"$common_list\"\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=33 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=13 encoding='utf-8'>
  timestamp: 1660043534
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local \n}\n\ncandidate() {\n    common \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9\
    \ 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list1=\"$1\"\n  local list2=\"$2\"\n  local common\n  local i\n  local\
    \ j\n  local k\n  local len1\n  local len2\n  local maxlen\n  local minlen\n \
    \ local maxlen1\n  local maxlen2\n  local minlen1\n  local minlen2\n  local maxlendiff\n\
    \  local minlendiff\n  local maxlendiff1\n  local maxlendiff2\n  local minlendiff1\n\
    \  local minlendiff2\n  local maxlendiffdiff\n  local minlendiffdiff\n  local\
    \ maxlendiffdiff1\n  local maxlendiffdiff2\n  local minlendiffdiff1\n  local minlendiffdiff2\n\
    \  local maxlendiffdiff1\n  local maxlendiffdiff2\n  local minlendiffdiff1\n \
    \ local minlendiffdiff2\n  local maxlendiffdiff1\n  local maxlendiffdiff2\n  local\
    \ minlendiffdiff1\n  local minlendiffdiff2\n  local maxlendiffdiff1\n  local maxlendiffdiff2\n\
    \  local minlendiffdiff1\n  local minlendiffdiff2\n  local maxlendiffdiff1\n \
    \ local maxlendiffdiff2\n  local minlendiffdiff1\n  local minlendiffdiff2\n  local\
    \ maxlendiffdiff1\n  local maxlendiffdiff2\n  local minlendiffdiff1\n  local minlendiffdiff2\n\
    \  local maxlendiffdiff1\n  local maxlendiffdiff2\n  local minlendiffdiff1\n \
    \ local minlendiffdiff2\n  local maxlendiffdiff1\n  local maxlendiffdiff2\n  local\
    \ minlendiffdiff1\n  local minlendiffdiff2\n  local maxlendiffdiff1\n  local maxlendiffdiff2\n\
    \  local minlendiffdiff1\n  local minlendiffdiff2\n  local maxlendiffdiff1\n \
    \ local maxlendiffdiff2\n  local minlendiffdiff1\n  local minlendiffdiff2\n  local\
    \ maxlendiffdiff1\n  local maxlendiffdiff2\n  local minlendiffdiff1\n  local minlendiffdiff2\n\
    \  local maxlendiffdiff1\n  local maxlendiffdiff2\n  local minlendiffdiff1\n \
    \ local minlendiffdiff2\n\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    common_list=($(comm -12 <(sort \"$1\") <(sort \"$2\"\
    )))\n    echo \"${common_list[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: ''5 7 1 5 9 653 121'': No such file or directory

    sort: cannot read: ''1 4 3 34 653 2 5'': No such file or directory

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local a b i j k l m\n    local -a a1 a2\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local\
    \ -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted\
    \ a2_sorted\n    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n\
    \    local -a a1_sorted a2_sorted\n    local -a a1_sorted a2_sorted\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1 list2\n    list1=$1\n    list2=$2\n    local i j\n    local list1_sorted\n\
    \    local list2_sorted\n    local common\n    list1_sorted=$(sort -u <<< \"$list1\"\
    )\n    list2_sorted=$(sort -u <<< \"$list2\")\n    common=()\n    for ((i=0; i<${#list1_sorted[@]};\
    \ i++)); do\n        for ((j=0; j<${#list2_sorted[@]}; j++)); do\n           \
    \ if [ \"${list1_sorted[i]}\" = \"${list2_sorted[j]}\" ]; then\n             \
    \   common+=(\"${list1_sorted[i]}\")\n                break\n            fi\n\
    \        done\n    done\n    echo \"${common[@]}\"\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local list1\n    local list2\n    local i\n    list1=$1\n\
    \    list2=$2\n    common=()\n    for (( i=0; i<${#list1[@]}; i++ )); do\n   \
    \     common+=(\"${list1[$i]}\")\n    done\n    for (( i=0; i<${#list2[@]}; i++\
    \ )); do\n        common+=(\"${list2[$i]}\")\n    done\n    sort -u \"${common[@]}\"\
    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: ''1 4 3 34 653 2 5'': No such file or directory

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list1 list2\n  list1=$1\n  list2=$2\n  local i j\n  local common\n  common=()\n\
    \  for ((i=0; i<${#list1}; i++)); do\n    for ((j=0; j<${#list2}; j++)); do\n\
    \      if [[ ${list1[i]} == ${list2[j]} ]]; then\n        common+=(\"${list1[i]}\"\
    )\n      fi\n    done\n  done\n  echo \"${common[@]}\"\n}\n\ncandidate() {\n \
    \   common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k\n    local list1=($1)\n    local list2=($2)\n    local common=()\n\
    \    for (( i = 0; i < ${#list1[@]}; i++ )); do\n        for (( j = 0; i < ${#list2[@]};\
    \ j++ )); do\n            if [[ ${list1[i]} == ${list2[j]} ]]; then\n        \
    \        common+=(\"${list1[i]}\")\n                list2=(${list2[@]:j})\n  \
    \              break\n            fi\n        done\n    done\n    echo \"${common[@]}\"\
    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=44 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=31 encoding='utf-8'>
  timestamp: 1660043534
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list=\"$1\"\n    local other_list=\"$2\"\n    local sorted_common_list\n\
    \    local sorted_other_list\n    local common_list_len\n    local other_list_len\n\
    \    local common_list_i\n    local other_list_i\n    local common_list_j\n  \
    \  local other_list_j\n    local common_list_k\n    local other_list_k\n    local\
    \ common_list_l\n    local other_list_l\n    local common_list_m\n    local other_list_m\n\
    \    local common_list_n\n    local other_list_n\n    local common_list_o\n  \
    \  local other_list_o\n    local common_list_p\n    local other_list_p\n    local\
    \ common_list_q\n    local other_list_q\n    local common_list_r\n    local other_list_r\n\
    \    local common_list_s\n    local other_list_s\n    local common_list_t\n  \
    \  local other_list_t\n    local common_list_u\n    local other_list_u\n    local\
    \ common_list_v\n    local other_list_v\n    local common_list_w\n    local other_list_w\n\
    \    local common_list_x\n    local other_list_x\n    local common_list_y\n  \
    \  local other_list_y\n    local common_list_z\n    local other_list_z\n    local\
    \ common_list_a\n    local other_list_a\n    local common_list_b\n    local other_list_b\n\
    \    local common_list_c\n    local other_list_c\n    local common_list_d\n  \
    \  local other_list_d\n    local common_list_e\n    local other_list_e\n    local\
    \ common_list_f\n    local other_list_f\n    local common_list_g\n    local other_list_g\n\
    \    local common_list_h\n    local other_list_h\n    local common_list_i\n  \
    \  local other_list_i\n    local common_list_j\n    local other_list_j\n    local\
    \ common_list_k\n    local other_list_k\n    local common_list_l\n    local other_list_l\n\
    \    local common_list_m\n    local other_list_m\n    local common_list_n\n  \
    \  local other_list_n\n    local common_list_o\n    local other_list_o\n    local\
    \ common_list_p\n    local other_list_p\n    local common_list_q\n    local other_list_q\n\
    \    local common_list_r\n    local other_list_r\n    local common_list_s\n  \
    \  local other_list_s\n    local common_list_t\n    local other_list_t\n    local\
    \ common_list_u\n    local other_list_u\n    local common_list_v\n\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local i j\n    common_list=\"$(sort -u $1)\"\n    for\
    \ j in $2; do\n        common_list=\"$common_list $(sort -u $j)\"\n    done\n\
    \    echo \"$common_list\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: 34: No such file or directory

    sort: cannot read: 653: No such file or directory

    sort: cannot read: 121: No such file or directory

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list1=\"$1\"\n  local list2=\"$2\"\n  local common\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local \n}\n\ncandidate() {\n    common \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1 list2\n    list1=$1\n    list2=$2\n    local common\n\
    \    common=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]};\
    \ j++)); do\n            if [[ ${list1[i]} == ${list2[j]} ]]; then\n         \
    \       common+=(\"${list1[i]}\")\n                list1[i]=\n               \
    \ list2[j]=\n                break\n            fi\n        done\n    done\n \
    \   echo ${common[@]}\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local result\n\n    len1=\"${#list1[@]}\"\n    len2=\"${#list2[@]}\"\n    len=\"\
    ${len1}\"\n    if [ \"${len}\" -eq 0 ]; then\n        return 0\n    elif [ \"\
    ${len}\" -eq 1 ]; then\n        common=\"${list1[@]}\"\n    elif [ \"${len}\"\
    \ -gt 1 ]; then\n        common=\"$(sort -u \"${list1}\" \"${list2}\")\"\n   \
    \ fi\n    if [ \"${len}\" -eq 0 ]; then\n        return 0\n    elif [ \"${len}\"\
    \ -eq 1 ]; then\n        echo \"${common}\"\n    elif [ \"${len}\" -gt 1 ]; then\n\
    \        result=()\n        for (( i=1; i<len; i++ )); do\n            for ((\
    \ j=1; j<len; j++ )); do\n                if [ \"${list1[i]}\" == \"${list2[j]}\"\
    \ ]; then\n                    result+=(\"${list1[i]}\")\n                fi\n\
    \            done\n        done\n        echo \"${result[@]}\"\n    fi\n}\n\n\
    candidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local sorted_list_1\
    \ sorted_list_2\n    sorted_list_1=$( echo $list_1 | sort -u )\n    sorted_list_2=$(\
    \ echo $list_2 | sort -u )\n    local common_list_1 common_list_2\n    common_list_1=$(\
    \ echo $sorted_list_1 | grep -F -f <(echo $sorted_list_2) )\n    common_list_2=$(\
    \ echo $sorted_list_2 | grep -F -f <(echo $sorted_list_1) )\n    echo $common_list_1\
    \ $common_list_2\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i ilist ilist2\n    local ilist ilist2\n    local ilist ilist2\n   \
    \ local ilist ilist2\n    local ilist ilist2\n    local ilist ilist2\n    local\
    \ ilist ilist2\n    local ilist ilist2\n    local ilist ilist2\n    local ilist\
    \ ilist2\n    local ilist ilist2\n    local ilist ilist2\n    local ilist ilist2\n\
    \    local ilist ilist2\n    local ilist ilist2\n    local ilist ilist2\n    local\
    \ ilist ilist2\n    local ilist ilist2\n    local ilist ilist2\n    local ilist\
    \ ilist2\n    local ilist ilist2\n    local ilist ilist2\n    local ilist ilist2\n\
    \    local ilist ilist2\n    local ilist ilist2\n    local ilist ilist2\n    local\
    \ ilist ilist2\n    local ilist ilist2\n    local ilist ilist2\n    local ilist\
    \ ilist2\n    local ilist ilist2\n    local ilist ilist2\n    local ilist ilist2\n\
    \    local ilist ilist2\n    local ilist ilist2\n    local ilist ilist2\n    local\
    \ ilist ilist2\n    local ilist ilist2\n    local ilist ilist2\n    local ilist\
    \ ilist2\n    local ilist ilist2\n    local ilist ilist2\n    local ilist ilist2\n\
    \    local ilist ilist2\n    local ilist ilist2\n    local ilist ilist2\n    local\
    \ ilist ilist2\n    local ilist ilist2\n    local ilist ilist2\n    local ilist\
    \ ilist2\n    local ilist ilist2\n    local ilist ilist2\n    local ilist ilist2\n\
    \    local ilist ilist2\n    local ilist ilist2\n    local ilist ilist2\n    local\
    \ ilist ilist2\n    local ilist ilist2\n    local ilist ilist2\n    local ilist\
    \ ilist2\n    local ilist ilist2\n    local ilist ilist2\n    local ilist ilist2\n\
    \    local ilist ilist2\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list1=\"$1\"\n  local list2=\"$2\"\n  local i ilist ilist2 ilist2len\n\
    \  ilist2len=0\n  ilist2=\"$(echo \"$list2\" | sed -e 's/ /\\n/g')\"\n  ilist=\"\
    $(echo \"$list1\" | sed -e 's/ /\\n/g')\"\n  while read -r i; do\n    if [[ $ilist2len\
    \ -eq 0 ]]; then\n      ilist2len=1\n      ilist2=\"$i\"\n      continue\n   \
    \ fi\n    if [[ $i =~ $ilist2 ]]; then\n      ilist2len=$((ilist2len+1))\n   \
    \   ilist2=\"$i\"\n    fi\n  done < <(echo \"$ilist\")\n  echo \"$ilist2\"\n}\n\
    \ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: -1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=$1; shift\n    local -n arr2=$1; shift\n    local -a res=()\n\
    \    local i j\n    for ((i=0; i<${#arr1[@]}; i++)); do\n        for ((j=0; j<${#arr2[@]};\
    \ j++)); do\n            [[ ${arr1[i]} == ${arr2[j]} ]] && continue\n        \
    \    res+=(\"${arr1[i]}\")\n        done\n    done\n    IFS=$'\\n' sort -u \"\
    ${res[@]}\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\"\
    \ ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\")\
    \ = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=51 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=30 encoding='utf-8'>
  timestamp: 1660043534
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=$1; shift\n    local -n arr2=$1; shift\n    local -a res\n \
    \   local i j\n    local -a arr3\n    local -n arr4\n    local -n arr5\n    local\
    \ -n arr6\n    local -n arr7\n    local -n arr8\n    local -n arr9\n    local\
    \ -n arr10\n    local -n arr11\n    local -n arr12\n    local -n arr13\n    local\
    \ -n arr14\n    local -n arr15\n    local -n arr16\n    local -n arr17\n    local\
    \ -n arr18\n    local -n arr19\n    local -n arr20\n    local -n arr21\n    local\
    \ -n arr22\n    local -n arr23\n    local -n arr24\n    local -n arr25\n    local\
    \ -n arr26\n    local -n arr27\n    local -n arr28\n    local -n arr29\n    local\
    \ -n arr30\n    local -n arr31\n    local -n arr32\n    local -n arr33\n    local\
    \ -n arr34\n    local -n arr35\n    local -n arr36\n    local -n arr37\n    local\
    \ -n arr38\n    local -n arr39\n    local -n arr40\n    local -n arr41\n    local\
    \ -n arr42\n    local -n arr43\n    local -n arr44\n    local -n arr45\n    local\
    \ -n arr46\n    local -n arr47\n    local -n arr48\n    local -n arr49\n    local\
    \ -n arr50\n    local -n arr51\n    local -n arr52\n    local -n arr53\n    local\
    \ -n arr54\n    local -n arr55\n    local -n arr56\n    local -n arr57\n    local\
    \ -n arr58\n    local -n arr59\n    local -n arr60\n    local -n arr61\n    local\
    \ -n arr62\n    local -n arr63\n    local -n arr64\n    local -n arr65\n    local\
    \ -n arr66\n    local -n arr67\n    local -n arr68\n    local -n arr69\n    local\
    \ -n arr70\n    local -n arr\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\"\
    ) = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6z80t199.sh: line 11: local: `1 4 3 34 653 2 5'': invalid variable
    name for name reference

    /tmp/tmp6z80t199.sh: line 12: local: `5 7 1 5 9 653 121'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m n o p q r s t u v w x y z\n    local -a a\n    local -a b\n\
    \    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a\
    \ g\n    local -a h\n    local -a i\n    local -a j\n    local -a k\n    local\
    \ -a l\n    local -a m\n    local -a n\n    local -a o\n    local -a p\n    local\
    \ -a q\n    local -a r\n    local -a s\n    local -a t\n    local -a u\n    local\
    \ -a v\n    local -a w\n    local -a x\n    local -a y\n    local -a z\n    local\
    \ -a a\n    local -a b\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local\
    \ -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local\
    \ -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
    \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
    \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a a\n    local -a b\n    local -a c\n    local\
    \ -a d\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n\
    \    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4\
    \ 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list1=\"$1\"\n  local list2=\"$2\"\n  local common\n  local i\n  local\
    \ j\n  local k\n  local len1\n  local len2\n  local len\n  local result\n\n  list1=(\
    \ $list1 )\n  list2=( $list2 )\n\n  len1=${#list1[@]}\n  len2=${#list2[@]}\n\n\
    \  result=()\n  for i in $(seq 0 $(( len1 - 1 ))); do\n    for j in $(seq 0 $((\
    \ len2 - 1 ))); do\n      k=$(( i + j ))\n      if [[ $list1[k] == \"$list2[j]\"\
    \ ]]; then\n        common+=( \"$list1[k]\" )\n      fi\n    done\n  done\n\n\
    \  len=${#common[@]}\n  if [[ $len -gt 0 ]]; then\n    sort -u <<< \"${common[@]}\"\
    \n  else\n    echo 0\n  fi\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local list1\n    local list2\n    local i\n    local j\n\
    \    local k\n    local len1\n    local len2\n    local maxlen\n    local minlen\n\
    \    local min\n    local max\n    local minlen\n    local maxlen\n    local minlen\n\
    \    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local\
    \ maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n\
    \    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local\
    \ minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n\
    \    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local\
    \ maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n\
    \    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local\
    \ minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n\
    \    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local\
    \ maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n\
    \    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local\
    \ minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n\
    \    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local\
    \ maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n\
    \    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local\
    \ minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n\
    \    local maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local\
    \ maxlen\n    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n\
    \    local minlen\n    local maxlen\n    local minlen\n    local maxlen\n    local\
    \ minlen\n    local maxlen\n    local minlen\n    local max\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local i\n    local j\n    local common_list_len\n \
    \   local common_list_len2\n    local common_list_len3\n    local common_list_len4\n\
    \    local common_list_len5\n    local common_list_len6\n    local common_list_len7\n\
    \    local common_list_len8\n    local common_list_len9\n    local common_list_len10\n\
    \    local common_list_len11\n    local common_list_len12\n    local common_list_len13\n\
    \    local common_list_len14\n    local common_list_len15\n    local common_list_len16\n\
    \    local common_list_len17\n    local common_list_len18\n    local common_list_len19\n\
    \    local common_list_len20\n    local common_list_len21\n    local common_list_len22\n\
    \    local common_list_len23\n    local common_list_len24\n    local common_list_len25\n\
    \    local common_list_len26\n    local common_list_len27\n    local common_list_len28\n\
    \    local common_list_len29\n    local common_list_len30\n    local common_list_len31\n\
    \    local common_list_len32\n    local common_list_len33\n    local common_list_len34\n\
    \    local common_list_len35\n    local common_list_len36\n    local common_list_len37\n\
    \    local common_list_len38\n    local common_list_len39\n    local common_list_len40\n\
    \    local common_list_len41\n    local common_list_len42\n    local common_list_len43\n\
    \    local common_list_len44\n    local common_list_len45\n    local common_list_len46\n\
    \    local common_list_len47\n    local common_list_len48\n    local common_list_len49\n\
    \    local common_list_len50\n    local common_list_len51\n    local common_list_len52\n\
    \    local common_list_len53\n    local common_list_len54\n    local common_list_len55\n\
    \    local common_list_len56\n    local common_list_len57\n    local common_list_len58\n\
    \    local common_list_len59\n    local common_list_len60\n    local common_list_len61\n\
    \    local common_list_len62\n    local common_list_len63\n    local common_list_len64\n\
    \    local common_list_len65\n    local common_list_len66\n    local common_list_len67\n\
    \    local common_list_len68\n    local common_list_len69\n    local common_list_len70\n\
    \    local common_list_len71\n    local common_\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local a b i j k l m\n    local -a a1 a2\n    local -a a1_sorted a2_sorted\
    \ a1_unique a2_unique\n    local -a a1_sorted a2_sorted a1_unique a2_unique\n\
    \    local -a a1_sorted a2_sorted a1_unique a2_unique\n    local -a a1_sorted\
    \ a2_sorted a1_unique a2_unique\n    local -a a1_sorted a2_sorted a1_unique a2_unique\n\
    \    local -a a1_sorted a2_sorted a1_unique a2_unique\n    local -a a1_sorted\
    \ a2_sorted a1_unique a2_unique\n    local -a a1_sorted a2_sorted a1_unique a2_unique\n\
    \    local -a a1_sorted a2_sorted a1_unique a2_unique\n    local -a a1_sorted\
    \ a2_sorted a1_unique a2_unique\n    local -a a1_sorted a2_sorted a1_unique a2_unique\n\
    \    local -a a1_sorted a2_sorted a1_unique a2_unique\n    local -a a1_sorted\
    \ a2_sorted a1_unique a2_unique\n    local -a a1_sorted a2_sorted a1_unique a2_unique\n\
    \    local -a a1_sorted a2_sorted a1_unique a2_unique\n    local -a a1_sorted\
    \ a2_sorted a1_unique a2_unique\n    local -a a1_sorted a2_sorted a1_unique a2_unique\n\
    \    local -a a1_sorted a2_sorted a1_unique a2_unique\n    local -a a1_sorted\
    \ a2_sorted a1_unique a2_unique\n    local -a a1_sorted a2_sorted a1_unique a2_unique\n\
    \    local -a a1_sorted a2_sorted a1_unique a2_unique\n    local -a a1_sorted\
    \ a2_sorted a1_unique a2_unique\n    local -a a1_sorted a2_sorted a1_unique a2_unique\n\
    \    local -a a1_sorted a2_sorted a1_unique a2_unique\n    local -a a1_sorted\
    \ a2_sorted a1_unique a2_unique\n    local -a a1_sorted a2_sorted a1_unique a2_unique\n\
    \    local -a a1_sorted a2_sorted a1_unique a2_unique\n    local -a a1_sorted\
    \ a2_sorted a1_unique a2_unique\n    local -a a1_sorted a2_sorted a1_unique a2_unique\n\
    \    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n \
    \   [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j\n    local list1 list2\n    list1=$1\n    list2=$2\n    local common_list\n\
    \    common_list=$( echo $list1 | tr ' ' '\\n' | sort | uniq )\n    for (( i =\
    \ 0; i < ${#common_list}; i++ )); do\n        for (( j=0; j < ${#list2}; j++ ));\
    \ do\n            if [[ ${list2[j]} == ${common_list[i]} ]]; then\n          \
    \      common_list=$( echo $common_list | sed -e \"s/${common_list[i]}/${list2[j]}/g\"\
    \ )\n            fi\n        done\n    done\n    echo \"${common_list}\"\n}\n\n\
    candidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 0: no previous regular expression

    sed: -e expression #1, char 0: no previous regular expression

    sed: -e expression #1, char 0: no previous regular expression

    sed: -e expression #1, char 0: no previous regular expression

    sed: -e expression #1, char 0: no previous regular expression

    sed: -e expression #1, char 0: no previous regular expression

    sed: -e expression #1, char 0: no previous regular expression

    sed: -e expression #1, char 0: no previous regular expression

    sed: -e expression #1, char 0: no previous regular expression

    sed: -e expression #1, char 0: no previous regular expression

    sed: -e expression #1, char 0: no previous regular expression

    sed: -e expression #1, char 0: no previous regular expression

    sed: -e expression #1, char 0: no previous regular expression

    sed: -e expression #1, char 0: no previous regular expression

    sed: -e expression #1, char 0: no previous regular expression

    sed: -e expression #1, char 0: no previous regular expression

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local list_1_sorted\n\
    \    list_1_sorted=$(echo \"$list_1\" | tr ' ' '\\n' | sort -u)\n    local list_2_sorted\n\
    \    list_2_sorted=$(echo \"$list_2\" | tr ' ' '\\n' | sort -u)\n    local common_list\n\
    \    common_list=$( echo \"$list_1_sorted\" | grep -F -x -f - \"$list_2_sorted\"\
    \ )\n    echo \"$common_list\"\n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\"\
    ) = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: 1

    121

    5

    653

    7

    9: No such file or directory

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common\n    local i\n    local j\n    local len1\n    local len2\n \
    \   local list1\n    local list2\n    local tmp\n    common=()\n    len1=${#${1}}\n\
    \    len2=${#${2}}\n    for ((i=1; i<=$((len1+1)); i++)); do\n        list1=\"\
    ${1:$i:1}\"\n        for ((j=1; j<=$((len2+1)); j++)); do\n            list2=\"\
    ${2:$j:1}\"\n            tmp=\"${list1} ${list2}\"\n            if [[ ${#tmp}\
    \ -gt 0 ]]; then\n                common+=(\"${tmp}\")\n            fi\n     \
    \   done\n    done\n    echo \"${common[@]}\"\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpg5p1pya5.sh: line 20: ${#${1}}: bad substitution

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list_1 list_2\n    list_1=$1\n    list_2=$2\n    local list_1_sorted\
    \ list_2_sorted common_elements\n    list_1_sorted=$(echo $list_1 | tr ' ' '\\\
    n' | sort -u)\n    list_2_sorted=$(echo $list_2 | tr ' ' '\\n' | sort -u)\n  \
    \  common_elements=$(comm -3 <(echo $list_1_sorted | tr ' ' '\\n') <(echo $list_2_sorted\
    \ | tr ' ' '\\n'))\n    echo \"$common_elements\"\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    common_list=$(awk '{print $1 \" \" $2}' $1 | sort -u)\n\
    \    common_list=$(awk '{print $1 \" \" $2}' $2 | sort -u)\n    echo $common_list\n\
    }\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'awk: cmd. line:1: fatal: cannot open file `34'' for reading (No such file
    or directory)

    awk: cmd. line:1: fatal: cannot open file `653'' for reading (No such file or
    directory)

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    common_list=$(awk '{for(i=1;i<=NF;i++) if($i in a)\
    \ a[$i]++}END{for(i in a) print i}' <<< \"$1 $2\")\n    echo \"${common_list[@]}\"\
    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local i i1 i2 i3 i4 i5 i6 i7 i8 i9 i10 i11 i12 i13 i14 i15 i16 i17 i18 i19 i20\
    \ i21 i22 i23 i24 i25 i26 i27 i28 i29 i30 i31 i32 i33 i34 i35 i36 i37 i38 i39\
    \ i40 i41 i42 i43 i44 i45 i46 i47 i48 i49 i50 i51 i52 i53 i54 i55 i56 i57 i58\
    \ i59 i60 i61 i62 i63 i64 i65 i66 i67 i68 i69 i70 i71 i72 i73 i74 i75 i76 i77\
    \ i78 i79 i80 i81 i82 i83 i84 i85 i86 i87 i88 i89 i90 i91 i92 i93 i94 i95 i96\
    \ i97 i98 i99 i100 i101 i102 i103 i104 i105 i106 i107 i108 i109 i110 i111 i112\
    \ i113 i114 i115 i116 i117 i118 i119 i120 i121 i122 i123 i124 i125 i126 i127 i128\
    \ i129 i130 i131 i132 i133 i134 i135 i136 i137 i138 i139 i140 i141 i142 i143 i144\
    \ i145 i146 i147 i148 i149 i150 i151 i152 i153 i154 i155 i156 i157 i158 i159 i160\
    \ i161 i162 i163 i164 i165 i166 i167 i168 i169 i170 i171 i172 i173 i174 i175 i176\
    \ i177 i178 i179 i180 i181 i182 i183 i184 i185 i186 i187 i188 i189 i19\n}\n\n\
    candidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local i\n    local j\n    local common_list_len\n \
    \   local common_list_len2\n    local common_list_len3\n    local common_list_len4\n\
    \    local common_list_len5\n    local common_list_len6\n    local common_list_len7\n\
    \    local common_list_len8\n    local common_list_len9\n    local common_list_len10\n\
    \    local common_list_len11\n    local common_list_len12\n    local common_list_len13\n\
    \    local common_list_len14\n    local common_list_len15\n    local common_list_len16\n\
    \    local common_list_len17\n    local common_list_len18\n    local common_list_len19\n\
    \    local common_list_len20\n    local common_list_len21\n    local common_list_len22\n\
    \    local common_list_len23\n    local common_list_len24\n    local common_list_len25\n\
    \    local common_list_len26\n    local common_list_len27\n    local common_list_len28\n\
    \    local common_list_len29\n    local common_list_len30\n    local common_list_len31\n\
    \    local common_list_len32\n    local common_list_len33\n    local common_list_len34\n\
    \    local common_list_len35\n    local common_list_len36\n    local common_list_len37\n\
    \    local common_list_len38\n    local common_list_len39\n    local common_list_len40\n\
    \    local common_list_len41\n    local common_list_len42\n    local common_list_len43\n\
    \    local common_list_len44\n    local common_list_len45\n    local common_list_len46\n\
    \    local common_list_len47\n    local common_list_len48\n    local common_list_len49\n\
    \    local common_list_len50\n    local common_list_len51\n    local common_list_len52\n\
    \    local common_list_len53\n    local common_list_len54\n    local common_list_len55\n\
    \    local common_list_len56\n    local common_list_len57\n    local common_list_len58\n\
    \    local common_list_len59\n    local common_list_len60\n    local common_list_len61\n\
    \    local common_list_len62\n    local common_list_len63\n    local common_list_len64\n\
    \    local common_list_len65\n    local common_list_len66\n    local common_list_len67\n\
    \    local common_list_len68\n    local common_list_len69\n    local common_list_len70\n\
    \    local common_list_len71\n    local common_\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local list1=\"$1\"\n  local list2=\"$2\"\n  local common\n  local i\n  local\
    \ j\n  local len1\n  local len2\n  local len\n  local tmp\n  local result\n  local\
    \ word\n  local word1\n  local word2\n  local word3\n  local word4\n  local word5\n\
    \  local word6\n  local word7\n  local word8\n  local word9\n  local word10\n\
    \  local word11\n  local word12\n  local word13\n  local word14\n  local word15\n\
    \  local word16\n  local word17\n  local word18\n  local word19\n  local word20\n\
    \  local word21\n  local word22\n  local word23\n  local word24\n  local word25\n\
    \  local word26\n  local word27\n  local word28\n  local word29\n  local word30\n\
    \  local word31\n  local word32\n  local word33\n  local word34\n  local word35\n\
    \  local word36\n  local word37\n  local word38\n  local word39\n  local word40\n\
    \  local word41\n  local word42\n  local word43\n  local word44\n  local word45\n\
    \  local word46\n  local word47\n  local word48\n  local word49\n  local word50\n\
    \  local word51\n  local word52\n  local word53\n  local word54\n  local word55\n\
    \  local word56\n  local word57\n  local word58\n  local word59\n  local word60\n\
    \  local word61\n  local word62\n  local word63\n  local word64\n  local word65\n\
    \  local word66\n  local word67\n  local word68\n  local word69\n  local word70\n\
    \  local word71\n  local word72\n  local word73\n  local word74\n  local word75\n\
    \  local word76\n  local word77\n  local word78\n  local word79\n  local word80\n\
    \  local word81\n  local word82\n  local word83\n  local word84\n  local word85\n\
    \  local word86\n  local word87\n  local word88\n  local word89\n  local word90\n\
    \  local word91\n  local word92\n  \n}\n\ncandidate() {\n    common \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653\
    \ 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n\
    \    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local x\n    local y\n    local z\n    local sorted\n\n    len1=${#list1}\n\
    \    len2=${#list2}\n    len=${#list1}\n    sorted=false\n    if [ $len1 -gt $len2\
    \ ]; then\n        common=( $list1 )\n        sorted=true\n    else\n        common=(\
    \ $list2 )\n        sorted=true\n    fi\n    for (( i=1; i<=$len; i++ )); do\n\
    \        tmp=${common[$i]}\n        for (( j=0; j<$len; j++ )); do\n         \
    \   if [ \"$i\" != \"$j\" ]; then\n                if [ \"$tmp\" == \"${common[$j]}\"\
    \ ]; then\n                    common[$j]=${common[$i]}\n                    common[$i]=$tmp\n\
    \                    sorted=true\n                    break\n                fi\n\
    \            fi\n        done\n    done\n    if [ \"$sorted\" = true ]; then\n\
    \        common=( $(sort -u ${common[@]}) )\n    fi\n    echo \"${common[@]}\"\
    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: 653: No such file or directory

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local a b i imax\n    local -a common\n    local -a a1 a2\n    local -a b1\
    \ b2\n    local -a a1_sorted a2_sorted b1_sorted b2_sorted\n    local -a common\n\
    \    local -a common1\n    local -a common2\n    local -a common1_sorted common2_sorted\
    \ common\n    local -a common\n    local -a common1\n    local -a common2\n  \
    \  local -a common1_sorted common2_sorted common\n    local -a common\n    local\
    \ -a common1\n    local -a common2\n    local -a common1_sorted common2_sorted\
    \ common\n    local -a common\n    local -a common1\n    local -a common2\n  \
    \  local -a common1_sorted common2_sorted common\n    local -a common\n    local\
    \ -a common1\n    local -a common2\n    local -a common1_sorted common2_sorted\
    \ common\n    local -a common\n    local -a common1\n    local -a common2\n  \
    \  local -a common1_sorted common2_sorted common\n    local -a common\n    local\
    \ -a common1\n    local -a common2\n    local -a common1_sorted common2_sorted\
    \ common\n    local -a common\n    local -a common1\n    local -a common2\n  \
    \  local -a common1_sorted common2_sorted common\n    local -a common\n    local\
    \ -a common1\n    local -a common2\n    local -a common1_sorted common2_sorted\
    \ common\n    local -a common\n    local -a common1\n    local -a common2\n  \
    \  local -a common1_sorted common2_sorted common\n    local -a common\n    local\
    \ -a common1\n    local -a common2\n    local -a common1_sorted common2_sorted\
    \ common\n    local -a common\n    local -a common1\n    local -a common2\n  \
    \  local -a common1_sorted common2_sorted common\n    local -a common\n    local\
    \ -a common1\n    local -a common2\n    local -a common1_sorted common2_sorted\
    \ common\n    local -a common\n    local -a common1\n    local -a common2\n  \
    \  local -a common1_sorted common2_sorted common\n    local -a common\n    local\
    \ -a common1\n    local -a \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") =\
    \ \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[\
    \ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n    [[ $(candidate \"4 3\
    \ 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i j k l m\n    local list1 list2\n    list1=$1\n    list2=$2\n    local\
    \ sorted1 sorted2\n    sorted1=$(sort -u <<< \"$list1\")\n    sorted2=$(sort -u\
    \ <<< \"$list2\")\n    local common\n    for (( i = 1; i <= ${#sorted1}; i++ ));\
    \ do\n        for (( j = 1; j <= ${#sorted2}; j++ )); do\n            k=$(expr\
    \ $sorted1[i-1] < $sorted2[j-1] ? $sorted1[i-1] : $sorted2[j-1])\n           \
    \ l=$(expr $sorted1[i-1] < $sorted2[j-1] ? $sorted2[j-1] : $sorted1[i-1])\n  \
    \          m=$(expr $sorted1[i-1] < $sorted2[j-1] ? $sorted1[i-1] : $sorted2[j-1])\n\
    \            if [ \"$k\" == \"$l\" ]; then\n                common=\"$common $m\"\
    \n            fi\n        done\n    done\n    echo \"$common\"\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnl1ponm_.sh: line 21: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 22: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 23: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 21: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 22: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 23: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 21: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 22: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 23: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 21: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 22: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 23: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 21: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 22: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 23: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 21: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 22: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 23: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 21: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 22: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 23: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 21: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 22: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 23: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 21: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 22: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 23: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 21: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 22: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 23: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 21: $sorted2[j-1]: ambiguous redirect

    /tmp/tmpnl1ponm_.sh: line 22: $sorted2[j-1]: ambiguous redirect

    '
  stdout: ''
  timestamp: 1660043530
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list\n    local list_1 list_2\n    local i\n    local j\n   \
    \ local common_list_1\n    local common_list_2\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_1_len\n    local common_list_2_len\n\
    \    local common_list_1_len\n    local common_list_2_len\n    local common_list_1_len\n\
    \    local common_list_2_len\n    local common_list_\n}\n\ncandidate() {\n   \
    \ common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local -n arr1=$1; shift\n    local -n arr2=$1; shift\n    local -a res=()\n\
    \    local i j\n    for ((i=0; i<${#arr1[@]}; i++)); do\n        for ((j=0; j<${#arr2[@]};\
    \ j++)); do\n            [[ ${arr1[i]} == ${arr2[j]} ]] && continue\n        \
    \    res+=(\"${arr1[i]}\")\n        done\n    done\n    echo \"${res[@]}\"\n}\n\
    \ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8plo0ike.sh: line 11: local: `1 4 3 34 653 2 5'': invalid variable
    name for name reference

    /tmp/tmp8plo0ike.sh: line 12: local: `5 7 1 5 9 653 121'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local common_list=\"$1\"\n    local other_list=\"$2\"\n    local sorted_common_list\n\
    \    local sorted_other_list\n    local common_list_len\n    local other_list_len\n\
    \    local common_list_element\n    local other_list_element\n    local common_list_element_count\n\
    \    local other_list_element_count\n    local common_list_element_count\n   \
    \ local other_list_element_count\n    local common_list_element_count_max\n  \
    \  local other_list_element_count_max\n    local common_list_element_count_min\n\
    \    local other_list_element_count_min\n    local common_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_max\n\
    \    local common_list_element_count_min\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local other_list_element_count_min\n\
    \    local common_list_element_count_max\n    local \n}\n\ncandidate() {\n   \
    \ common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653\
    \ 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\"\
    \ \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\"\
    \ ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i ilist jlist klist common\n    IFS=$'\\n' ilist=\"$1\" jlist=\"$2\"\
    \n    common=()\n    for (( i=0; i<${#ilist[@]}; i++ )); do\n        klist=\"\
    ${ilist[$i]}\"\n        for (( j=0; j<${#jlist[@]}; j++ )); do\n            if\
    \ [ \"${klist}\" = \"${jlist[$j]}\" ]; then\n                common+=(\"${ilist[$i]}\"\
    )\n            fi\n        done\n    done\n    echo \"${common[@]}\"\n}\n\ncandidate()\
    \ {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3\
    \ 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"\
    5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"\
    2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local common\n    local i\n\
    \    local j\n    local k\n    local len1\n    local len2\n    local len\n   \
    \ local tmp\n    local sorted\n\n    len1=${#list1}\n    len2=${#list2}\n    len=$((len1\
    \ < len2 ? len1 : len2))\n    common=()\n    sorted=()\n    for ((i = 0; i < len;\
    \ i++)); do\n        tmp=${list1:$i:1}\n        for ((j = 0; j < len; j++)); do\n\
    \            if [[ ${list2:$j:1} =~ \"${tmp}\" ]]; then\n                common+=(\"\
    ${list2:$j:1}\")\n            fi\n        done\n        sorted+=(\"${common[@]}\"\
    )\n        common=()\n    done\n    sorted+=(\"${common[@]}\")\n    echo \"${sorted[@]}\"\
    \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \   local i i2 j\n    local list1=($1)\n    local list2=($2)\n    local list3=($3)\n\
    \    local list4=($4)\n    local list5=($5)\n    local list6=($6)\n    local list7=($7)\n\
    \    local list8=($8)\n    local list9=($9)\n    local list10=($10)\n    local\
    \ list11=($11)\n    local list12=($12)\n    local list13=($13)\n    local list14=($14)\n\
    \    local list15=($15)\n    local list16=($16)\n    local list17=($17)\n    local\
    \ list18=($18)\n    local list19=($19)\n    local list20=($20)\n    local list21=($21)\n\
    \    local list22=($22)\n    local list23=($23)\n    local list24=($24)\n    local\
    \ list25=($25)\n    local list26=($26)\n    local list27=($27)\n    local list28=($28)\n\
    \    local list29=($29)\n    local list30=($30)\n    local list31=($31)\n    local\
    \ list32=($32)\n    local list33=($33)\n    local list34=($34)\n    local list35=($35)\n\
    \    local list36=($36)\n    local list37=($37)\n    local list38=($38)\n    local\
    \ list39=($39)\n    local list40=($40)\n    local list41=($41)\n    local list42=($42)\n\
    \    local list43=($43)\n    local list44=($44)\n    local list45=($45)\n    local\
    \ list46=($46)\n    local list47=($47)\n    local list48=($48)\n    local list49=($49)\n\
    \    local list50=($50)\n    local list51=($51)\n    local list52=($52)\n    local\
    \ list53=($53)\n    local list54=($54)\n    local list55=($55)\n    local list56=($56)\n\
    \    local list57=($57)\n    local list58=($58)\n    local list59=($59)\n    local\
    \ \n}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
    \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\"\
    ) = \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043529
- exit_code: 1
  program: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n#\
    \ >>> $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"\
    ', '\"653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\n#\n\
    # $1 is a space-separated list\n# $2 is a space-separated list\ncommon() {\n \
    \ local -n arr1=$1; shift\n  local -n arr2=$1; shift\n  local -a res=()\n  local\
    \ i j\n  for ((i=0; i<${#arr1[@]}; i++)); do\n    for ((j=0; j<${#arr2[@]}; j++));\
    \ do\n      [[ ${arr1[i]} != ${arr2[j]} ]] && continue\n      arr1[i]=${arr1[i]//[[:space:]]/}\n\
    \      arr2[j]=${arr2[j]//[[:space:]]/}\n      arr1[i]=${arr1[i]//[[:digit:]]/}\n\
    \      arr2[j]=${arr2[j]//[[:digit:]]/}\n      res+=(\"${arr1[i]}\")\n      break\n\
    \    done\n  done\n  printf '%s\\n' \"${res[@]}\"\n}\n\ncandidate() {\n    common\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 4 3 34 653 2 5\" \"\
    5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate \"5 3 2 8\" \"3 2\"\
    ) = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") = \"2 3 4\" ]]\n   \
    \ [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpk14b9eqf.sh: line 11: local: `1 4 3 34 653 2 5'': invalid variable
    name for name reference

    /tmp/tmpk14b9eqf.sh: line 12: local: `5 7 1 5 9 653 121'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660043529
